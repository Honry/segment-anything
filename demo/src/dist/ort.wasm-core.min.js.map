{"version":3,"file":"ort.wasm-core.min.js","mappings":"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","sources":["webpack://ort/webpack/universalModuleDefinition","webpack://ort/../common/dist/lib/backend-impl.js","webpack://ort/../common/dist/lib/env-impl.js","webpack://ort/../common/dist/lib/env.js","webpack://ort/../common/dist/lib/tensor-impl.js","webpack://ort/../common/dist/lib/tensor.js","webpack://ort/../common/dist/lib/inference-session-impl.js","webpack://ort/../common/dist/lib/inference-session.js","webpack://ort/./lib/backend-wasm.ts","webpack://ort/./lib/index.ts","webpack://ort/./lib/wasm/jsep/backend-webgpu.ts","webpack://ort/./lib/wasm/jsep/init.ts","webpack://ort/./lib/wasm/jsep/log.ts","webpack://ort/./lib/wasm/jsep/util.ts","webpack://ort/./lib/wasm/jsep/webgpu/attribute-with-cache-key.ts","webpack://ort/./lib/wasm/jsep/webgpu/gpu-data-manager.ts","webpack://ort/./lib/wasm/jsep/webgpu/op-resolve-rules.ts","webpack://ort/./lib/wasm/jsep/webgpu/ops/3rd-party/activation_util.ts","webpack://ort/./lib/wasm/jsep/webgpu/ops/3rd-party/conv2d_mm_webgpu.ts","webpack://ort/./lib/wasm/jsep/webgpu/ops/3rd-party/conv_util.ts","webpack://ort/./lib/wasm/jsep/webgpu/ops/3rd-party/matmul_packed_webgpu.ts","webpack://ort/./lib/wasm/jsep/webgpu/ops/binary-op.ts","webpack://ort/./lib/wasm/jsep/webgpu/ops/common.ts","webpack://ort/./lib/wasm/jsep/webgpu/ops/conv-grouped.ts","webpack://ort/./lib/wasm/jsep/webgpu/ops/conv.ts","webpack://ort/./lib/wasm/jsep/webgpu/ops/conv2d-mm.ts","webpack://ort/./lib/wasm/jsep/webgpu/ops/fuse-utils.ts","webpack://ort/./lib/wasm/jsep/webgpu/ops/gemm.ts","webpack://ort/./lib/wasm/jsep/webgpu/ops/matmul.ts","webpack://ort/./lib/wasm/jsep/webgpu/ops/pool.ts","webpack://ort/./lib/wasm/jsep/webgpu/ops/transpose.ts","webpack://ort/./lib/wasm/jsep/webgpu/ops/unary-op.ts","webpack://ort/./lib/wasm/jsep/webgpu/program-manager.ts","webpack://ort/./lib/wasm/jsep/webgpu/types.ts","webpack://ort/./lib/wasm/options-utils.ts","webpack://ort/./lib/wasm/proxy-wrapper.ts","webpack://ort/./lib/wasm/run-options.ts","webpack://ort/./lib/wasm/session-handler.ts","webpack://ort/./lib/wasm/session-options.ts","webpack://ort/./lib/wasm/string-utils.ts","webpack://ort/./lib/wasm/wasm-common.ts","webpack://ort/./lib/wasm/wasm-core-impl.ts","webpack://ort/./lib/wasm/wasm-factory.ts","webpack://ort/./lib/wasm/binding/ort-wasm.js","webpack://ort/webpack/bootstrap","webpack://ort/webpack/runtime/define property getters","webpack://ort/webpack/runtime/hasOwnProperty shorthand","webpack://ort/webpack/runtime/make namespace object","webpack://ort/webpack/startup"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"ort\"] = factory();\n\telse\n\t\troot[\"ort\"] = factory();\n})(self, () => {\nreturn ","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\nconst backends = {};\nconst backendsSortedByPriority = [];\n/**\n * Register a backend.\n *\n * @param name - the name as a key to lookup as an execution provider.\n * @param backend - the backend object.\n * @param priority - an integer indicating the priority of the backend. Higher number means higher priority. if priority\n * < 0, it will be considered as a 'beta' version and will not be used as a fallback backend by default.\n *\n * @internal\n */\nexport const registerBackend = (name, backend, priority) => {\n    if (backend && typeof backend.init === 'function' && typeof backend.createSessionHandler === 'function') {\n        const currentBackend = backends[name];\n        if (currentBackend === undefined) {\n            backends[name] = { backend, priority };\n        }\n        else if (currentBackend.priority > priority) {\n            // same name is already registered with a higher priority. skip registeration.\n            return;\n        }\n        else if (currentBackend.priority === priority) {\n            if (currentBackend.backend !== backend) {\n                throw new Error(`cannot register backend \"${name}\" using priority ${priority}`);\n            }\n        }\n        if (priority >= 0) {\n            const i = backendsSortedByPriority.indexOf(name);\n            if (i !== -1) {\n                backendsSortedByPriority.splice(i, 1);\n            }\n            for (let i = 0; i < backendsSortedByPriority.length; i++) {\n                if (backends[backendsSortedByPriority[i]].priority <= priority) {\n                    backendsSortedByPriority.splice(i, 0, name);\n                    return;\n                }\n            }\n            backendsSortedByPriority.push(name);\n        }\n        return;\n    }\n    throw new TypeError('not a valid backend');\n};\n/**\n * Resolve backend by specified hints.\n *\n * @param backendHints - a list of execution provider names to lookup. If omitted use registered backends as list.\n * @returns a promise that resolves to the backend.\n *\n * @internal\n */\nexport const resolveBackend = async (backendHints) => {\n    const backendNames = backendHints.length === 0 ? backendsSortedByPriority : backendHints;\n    const errors = [];\n    for (const backendName of backendNames) {\n        const backendInfo = backends[backendName];\n        if (backendInfo) {\n            if (backendInfo.initialized) {\n                return backendInfo.backend;\n            }\n            else if (backendInfo.aborted) {\n                continue; // current backend is unavailable; try next\n            }\n            const isInitializing = !!backendInfo.initPromise;\n            try {\n                if (!isInitializing) {\n                    backendInfo.initPromise = backendInfo.backend.init();\n                }\n                await backendInfo.initPromise;\n                backendInfo.initialized = true;\n                return backendInfo.backend;\n            }\n            catch (e) {\n                if (!isInitializing) {\n                    errors.push({ name: backendName, err: e });\n                }\n                backendInfo.aborted = true;\n            }\n            finally {\n                delete backendInfo.initPromise;\n            }\n        }\n    }\n    throw new Error(`no available backend found. ERR: ${errors.map(e => `[${e.name}] ${e.err}`).join(', ')}`);\n};\n//# sourceMappingURL=backend-impl.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\nlet logLevelValue = 'warning';\nexport const env = {\n    wasm: {},\n    webgl: {},\n    webgpu: {},\n    set logLevel(value) {\n        if (value === undefined) {\n            return;\n        }\n        if (typeof value !== 'string' || ['verbose', 'info', 'warning', 'error', 'fatal'].indexOf(value) === -1) {\n            throw new Error(`Unsupported logging level: ${value}`);\n        }\n        logLevelValue = value;\n    },\n    get logLevel() {\n        return logLevelValue;\n    },\n};\n// set property 'logLevel' so that they can be correctly transferred to worker by `postMessage()`.\nObject.defineProperty(env, 'logLevel', { enumerable: true });\n//# sourceMappingURL=env-impl.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\nimport { env as envImpl } from './env-impl';\n/**\n * Represent a set of flags as a global singleton.\n */\nexport const env = envImpl;\n//# sourceMappingURL=env.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n// a runtime map that maps type string to TypedArray constructor. Should match Tensor.DataTypeMap.\nconst NUMERIC_TENSOR_TYPE_TO_TYPEDARRAY_MAP = new Map([\n    ['float32', Float32Array],\n    ['uint8', Uint8Array],\n    ['int8', Int8Array],\n    ['uint16', Uint16Array],\n    ['float16', Uint16Array],\n    ['int16', Int16Array],\n    ['int32', Int32Array],\n    ['bool', Uint8Array],\n    ['float64', Float64Array],\n    ['uint32', Uint32Array],\n]);\n// a runtime map that maps type string to TypedArray constructor. Should match Tensor.DataTypeMap.\nconst NUMERIC_TENSOR_TYPEDARRAY_TO_TYPE_MAP = new Map([\n    [Float32Array, 'float32'],\n    [Uint8Array, 'uint8'],\n    [Int8Array, 'int8'],\n    [Uint16Array, 'uint16'],\n    [Int16Array, 'int16'],\n    [Int32Array, 'int32'],\n    [Float64Array, 'float64'],\n    [Uint32Array, 'uint32'],\n]);\n// the following code allows delaying execution of BigInt checking. This allows lazy initialization for\n// NUMERIC_TENSOR_TYPE_TO_TYPEDARRAY_MAP and NUMERIC_TENSOR_TYPEDARRAY_TO_TYPE_MAP, which allows BigInt polyfill\n// if available.\nlet isBigIntChecked = false;\nconst checkBigInt = () => {\n    if (!isBigIntChecked) {\n        isBigIntChecked = true;\n        const isBigInt64ArrayAvailable = typeof BigInt64Array !== 'undefined' && typeof BigInt64Array.from === 'function';\n        const isBigUint64ArrayAvailable = typeof BigUint64Array !== 'undefined' && typeof BigUint64Array.from === 'function';\n        if (isBigInt64ArrayAvailable) {\n            NUMERIC_TENSOR_TYPE_TO_TYPEDARRAY_MAP.set('int64', BigInt64Array);\n            NUMERIC_TENSOR_TYPEDARRAY_TO_TYPE_MAP.set(BigInt64Array, 'int64');\n        }\n        if (isBigUint64ArrayAvailable) {\n            NUMERIC_TENSOR_TYPE_TO_TYPEDARRAY_MAP.set('uint64', BigUint64Array);\n            NUMERIC_TENSOR_TYPEDARRAY_TO_TYPE_MAP.set(BigUint64Array, 'uint64');\n        }\n    }\n};\n/**\n * calculate size from dims.\n *\n * @param dims the dims array. May be an illegal input.\n */\nconst calculateSize = (dims) => {\n    let size = 1;\n    for (let i = 0; i < dims.length; i++) {\n        const dim = dims[i];\n        if (typeof dim !== 'number' || !Number.isSafeInteger(dim)) {\n            throw new TypeError(`dims[${i}] must be an integer, got: ${dim}`);\n        }\n        if (dim < 0) {\n            throw new RangeError(`dims[${i}] must be a non-negative integer, got: ${dim}`);\n        }\n        size *= dim;\n    }\n    return size;\n};\nexport class Tensor {\n    constructor(arg0, arg1, arg2) {\n        checkBigInt();\n        let type;\n        let data;\n        let dims;\n        // check whether arg0 is type or data\n        if (typeof arg0 === 'string') {\n            //\n            // Override: constructor(type, data, ...)\n            //\n            type = arg0;\n            dims = arg2;\n            if (arg0 === 'string') {\n                // string tensor\n                if (!Array.isArray(arg1)) {\n                    throw new TypeError('A string tensor\\'s data must be a string array.');\n                }\n                // we don't check whether every element in the array is string; this is too slow. we assume it's correct and\n                // error will be populated at inference\n                data = arg1;\n            }\n            else {\n                // numeric tensor\n                const typedArrayConstructor = NUMERIC_TENSOR_TYPE_TO_TYPEDARRAY_MAP.get(arg0);\n                if (typedArrayConstructor === undefined) {\n                    throw new TypeError(`Unsupported tensor type: ${arg0}.`);\n                }\n                if (Array.isArray(arg1)) {\n                    // use 'as any' here because TypeScript's check on type of 'SupportedTypedArrayConstructors.from()' produces\n                    // incorrect results.\n                    // 'typedArrayConstructor' should be one of the typed array prototype objects.\n                    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                    data = typedArrayConstructor.from(arg1);\n                }\n                else if (arg1 instanceof typedArrayConstructor) {\n                    data = arg1;\n                }\n                else {\n                    throw new TypeError(`A ${type} tensor's data must be type of ${typedArrayConstructor}`);\n                }\n            }\n        }\n        else {\n            //\n            // Override: constructor(data, ...)\n            //\n            dims = arg1;\n            if (Array.isArray(arg0)) {\n                // only boolean[] and string[] is supported\n                if (arg0.length === 0) {\n                    throw new TypeError('Tensor type cannot be inferred from an empty array.');\n                }\n                const firstElementType = typeof arg0[0];\n                if (firstElementType === 'string') {\n                    type = 'string';\n                    data = arg0;\n                }\n                else if (firstElementType === 'boolean') {\n                    type = 'bool';\n                    // 'arg0' is of type 'boolean[]'. Uint8Array.from(boolean[]) actually works, but typescript thinks this is\n                    // wrong type. We use 'as any' to make it happy.\n                    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                    data = Uint8Array.from(arg0);\n                }\n                else {\n                    throw new TypeError(`Invalid element type of data array: ${firstElementType}.`);\n                }\n            }\n            else {\n                // get tensor type from TypedArray\n                const mappedType = NUMERIC_TENSOR_TYPEDARRAY_TO_TYPE_MAP.get(arg0.constructor);\n                if (mappedType === undefined) {\n                    throw new TypeError(`Unsupported type for tensor data: ${arg0.constructor}.`);\n                }\n                type = mappedType;\n                data = arg0;\n            }\n        }\n        // type and data is processed, now processing dims\n        if (dims === undefined) {\n            // assume 1-D tensor if dims omitted\n            dims = [data.length];\n        }\n        else if (!Array.isArray(dims)) {\n            throw new TypeError('A tensor\\'s dims must be a number array');\n        }\n        // perform check\n        const size = calculateSize(dims);\n        if (size !== data.length) {\n            throw new Error(`Tensor's size(${size}) does not match data length(${data.length}).`);\n        }\n        this.dims = dims;\n        this.type = type;\n        this.data = data;\n        this.size = size;\n    }\n    // #endregion\n    /**\n     * Create a new tensor object from image object\n     *\n     * @param buffer - Extracted image buffer data - assuming RGBA format\n     * @param imageFormat - input image configuration - required configurations height, width, format\n     * @param tensorFormat - output tensor configuration - Default is RGB format\n     */\n    static bufferToTensor(buffer, options) {\n        if (buffer === undefined) {\n            throw new Error('Image buffer must be defined');\n        }\n        if (options.height === undefined || options.width === undefined) {\n            throw new Error('Image height and width must be defined');\n        }\n        if (options.tensorLayout === 'NHWC') {\n            throw new Error('NHWC Tensor layout is not supported yet');\n        }\n        const { height, width } = options;\n        const norm = options.norm ?? { mean: 255, bias: 0 };\n        let normMean;\n        let normBias;\n        if (typeof (norm.mean) === 'number') {\n            normMean = [norm.mean, norm.mean, norm.mean, norm.mean];\n        }\n        else {\n            normMean = [norm.mean[0], norm.mean[1], norm.mean[2], norm.mean[3] ?? 255];\n        }\n        if (typeof (norm.bias) === 'number') {\n            normBias = [norm.bias, norm.bias, norm.bias, norm.bias];\n        }\n        else {\n            normBias = [norm.bias[0], norm.bias[1], norm.bias[2], norm.bias[3] ?? 0];\n        }\n        const inputformat = options.bitmapFormat !== undefined ? options.bitmapFormat : 'RGBA';\n        // default value is RGBA since imagedata and HTMLImageElement uses it\n        const outputformat = options.tensorFormat !== undefined ?\n            (options.tensorFormat !== undefined ? options.tensorFormat : 'RGB') :\n            'RGB';\n        const stride = height * width;\n        const float32Data = outputformat === 'RGBA' ? new Float32Array(stride * 4) : new Float32Array(stride * 3);\n        // Default pointer assignments\n        let step = 4, rImagePointer = 0, gImagePointer = 1, bImagePointer = 2, aImagePointer = 3;\n        let rTensorPointer = 0, gTensorPointer = stride, bTensorPointer = stride * 2, aTensorPointer = -1;\n        // Updating the pointer assignments based on the input image format\n        if (inputformat === 'RGB') {\n            step = 3;\n            rImagePointer = 0;\n            gImagePointer = 1;\n            bImagePointer = 2;\n            aImagePointer = -1;\n        }\n        // Updating the pointer assignments based on the output tensor format\n        if (outputformat === 'RGBA') {\n            aTensorPointer = stride * 3;\n        }\n        else if (outputformat === 'RBG') {\n            rTensorPointer = 0;\n            bTensorPointer = stride;\n            gTensorPointer = stride * 2;\n        }\n        else if (outputformat === 'BGR') {\n            bTensorPointer = 0;\n            gTensorPointer = stride;\n            rTensorPointer = stride * 2;\n        }\n        for (let i = 0; i < stride; i++, rImagePointer += step, bImagePointer += step, gImagePointer += step, aImagePointer += step) {\n            float32Data[rTensorPointer++] = (buffer[rImagePointer] + normBias[0]) / normMean[0];\n            float32Data[gTensorPointer++] = (buffer[gImagePointer] + normBias[1]) / normMean[1];\n            float32Data[bTensorPointer++] = (buffer[bImagePointer] + normBias[2]) / normMean[2];\n            if (aTensorPointer !== -1 && aImagePointer !== -1) {\n                float32Data[aTensorPointer++] = (buffer[aImagePointer] + normBias[3]) / normMean[3];\n            }\n        }\n        // Float32Array -> ort.Tensor\n        const outputTensor = outputformat === 'RGBA' ? new Tensor('float32', float32Data, [1, 4, height, width]) :\n            new Tensor('float32', float32Data, [1, 3, height, width]);\n        return outputTensor;\n    }\n    static async fromImage(image, options) {\n        // checking the type of image object\n        const isHTMLImageEle = typeof (HTMLImageElement) !== 'undefined' && image instanceof HTMLImageElement;\n        const isImageDataEle = typeof (ImageData) !== 'undefined' && image instanceof ImageData;\n        const isImageBitmap = typeof (ImageBitmap) !== 'undefined' && image instanceof ImageBitmap;\n        const isString = typeof image === 'string';\n        let data;\n        let tensorConfig = options ?? {};\n        // filling and checking image configuration options\n        if (isHTMLImageEle) {\n            // HTMLImageElement - image object - format is RGBA by default\n            const canvas = document.createElement('canvas');\n            canvas.width = image.width;\n            canvas.height = image.height;\n            const pixels2DContext = canvas.getContext('2d');\n            if (pixels2DContext != null) {\n                let height = image.height;\n                let width = image.width;\n                if (options !== undefined && options.resizedHeight !== undefined && options.resizedWidth !== undefined) {\n                    height = options.resizedHeight;\n                    width = options.resizedWidth;\n                }\n                if (options !== undefined) {\n                    tensorConfig = options;\n                    if (options.tensorFormat !== undefined) {\n                        throw new Error('Image input config format must be RGBA for HTMLImageElement');\n                    }\n                    else {\n                        tensorConfig.tensorFormat = 'RGBA';\n                    }\n                    if (options.height !== undefined && options.height !== height) {\n                        throw new Error('Image input config height doesn\\'t match HTMLImageElement height');\n                    }\n                    else {\n                        tensorConfig.height = height;\n                    }\n                    if (options.width !== undefined && options.width !== width) {\n                        throw new Error('Image input config width doesn\\'t match HTMLImageElement width');\n                    }\n                    else {\n                        tensorConfig.width = width;\n                    }\n                }\n                else {\n                    tensorConfig.tensorFormat = 'RGBA';\n                    tensorConfig.height = height;\n                    tensorConfig.width = width;\n                }\n                pixels2DContext.drawImage(image, 0, 0);\n                data = pixels2DContext.getImageData(0, 0, width, height).data;\n            }\n            else {\n                throw new Error('Can not access image data');\n            }\n        }\n        else if (isImageDataEle) {\n            // ImageData - image object - format is RGBA by default\n            const format = 'RGBA';\n            let height;\n            let width;\n            if (options !== undefined && options.resizedWidth !== undefined && options.resizedHeight !== undefined) {\n                height = options.resizedHeight;\n                width = options.resizedWidth;\n            }\n            else {\n                height = image.height;\n                width = image.width;\n            }\n            if (options !== undefined) {\n                tensorConfig = options;\n                if (options.bitmapFormat !== undefined && options.bitmapFormat !== format) {\n                    throw new Error('Image input config format must be RGBA for ImageData');\n                }\n                else {\n                    tensorConfig.bitmapFormat = 'RGBA';\n                }\n            }\n            else {\n                tensorConfig.bitmapFormat = 'RGBA';\n            }\n            tensorConfig.height = height;\n            tensorConfig.width = width;\n            if (options !== undefined) {\n                const tempCanvas = document.createElement('canvas');\n                tempCanvas.width = width;\n                tempCanvas.height = height;\n                const pixels2DContext = tempCanvas.getContext('2d');\n                if (pixels2DContext != null) {\n                    pixels2DContext.putImageData(image, 0, 0);\n                    data = pixels2DContext.getImageData(0, 0, width, height).data;\n                }\n                else {\n                    throw new Error('Can not access image data');\n                }\n            }\n            else {\n                data = image.data;\n            }\n        }\n        else if (isImageBitmap) {\n            // ImageBitmap - image object - format must be provided by user\n            if (options === undefined) {\n                throw new Error('Please provide image config with format for Imagebitmap');\n            }\n            if (options.bitmapFormat !== undefined) {\n                throw new Error('Image input config format must be defined for ImageBitmap');\n            }\n            const pixels2DContext = document.createElement('canvas').getContext('2d');\n            if (pixels2DContext != null) {\n                const height = image.height;\n                const width = image.width;\n                pixels2DContext.drawImage(image, 0, 0, width, height);\n                data = pixels2DContext.getImageData(0, 0, width, height).data;\n                if (options !== undefined) {\n                    // using square brackets to avoid TS error - type 'never'\n                    if (options.height !== undefined && options.height !== height) {\n                        throw new Error('Image input config height doesn\\'t match ImageBitmap height');\n                    }\n                    else {\n                        tensorConfig.height = height;\n                    }\n                    // using square brackets to avoid TS error - type 'never'\n                    if (options.width !== undefined && options.width !== width) {\n                        throw new Error('Image input config width doesn\\'t match ImageBitmap width');\n                    }\n                    else {\n                        tensorConfig.width = width;\n                    }\n                }\n                else {\n                    tensorConfig.height = height;\n                    tensorConfig.width = width;\n                }\n                return Tensor.bufferToTensor(data, tensorConfig);\n            }\n            else {\n                throw new Error('Can not access image data');\n            }\n        }\n        else if (isString) {\n            return new Promise((resolve, reject) => {\n                const canvas = document.createElement('canvas');\n                const context = canvas.getContext('2d');\n                if (!image || !context) {\n                    return reject();\n                }\n                const newImage = new Image();\n                newImage.crossOrigin = 'Anonymous';\n                newImage.src = image;\n                newImage.onload = () => {\n                    canvas.width = newImage.width;\n                    canvas.height = newImage.height;\n                    context.drawImage(newImage, 0, 0, canvas.width, canvas.height);\n                    const img = context.getImageData(0, 0, canvas.width, canvas.height);\n                    if (options !== undefined) {\n                        if (options.height !== undefined && options.height !== canvas.height) {\n                            throw new Error('Image input config height doesn\\'t match height');\n                        }\n                        else {\n                            tensorConfig.height = canvas.height;\n                        }\n                        if (options.width !== undefined && options.width !== canvas.width) {\n                            throw new Error('Image input config width doesn\\'t match width');\n                        }\n                        else {\n                            tensorConfig.width = canvas.width;\n                        }\n                    }\n                    else {\n                        tensorConfig.height = canvas.height;\n                        tensorConfig.width = canvas.width;\n                    }\n                    resolve(Tensor.bufferToTensor(img.data, tensorConfig));\n                };\n            });\n        }\n        else {\n            throw new Error('Input data provided is not supported - aborted tensor creation');\n        }\n        if (data !== undefined) {\n            return Tensor.bufferToTensor(data, tensorConfig);\n        }\n        else {\n            throw new Error('Input data provided is not supported - aborted tensor creation');\n        }\n    }\n    toDataURL(options) {\n        const canvas = document.createElement('canvas');\n        canvas.width = this.dims[3];\n        canvas.height = this.dims[2];\n        const pixels2DContext = canvas.getContext('2d');\n        if (pixels2DContext != null) {\n            // Default values for height and width & format\n            let width;\n            let height;\n            if (options?.tensorLayout !== undefined && options.tensorLayout === 'NHWC') {\n                width = this.dims[2];\n                height = this.dims[3];\n            }\n            else { // Default layout is NCWH\n                width = this.dims[3];\n                height = this.dims[2];\n            }\n            const inputformat = options?.format !== undefined ? options.format : 'RGB';\n            const norm = options?.norm;\n            let normMean;\n            let normBias;\n            if (norm === undefined || norm.mean === undefined) {\n                normMean = [255, 255, 255, 255];\n            }\n            else {\n                if (typeof (norm.mean) === 'number') {\n                    normMean = [norm.mean, norm.mean, norm.mean, norm.mean];\n                }\n                else {\n                    normMean = [norm.mean[0], norm.mean[1], norm.mean[2], 0];\n                    if (norm.mean[3] !== undefined) {\n                        normMean[3] = norm.mean[3];\n                    }\n                }\n            }\n            if (norm === undefined || norm.bias === undefined) {\n                normBias = [0, 0, 0, 0];\n            }\n            else {\n                if (typeof (norm.bias) === 'number') {\n                    normBias = [norm.bias, norm.bias, norm.bias, norm.bias];\n                }\n                else {\n                    normBias = [norm.bias[0], norm.bias[1], norm.bias[2], 0];\n                    if (norm.bias[3] !== undefined) {\n                        normBias[3] = norm.bias[3];\n                    }\n                }\n            }\n            const stride = height * width;\n            // Default pointer assignments\n            let rTensorPointer = 0, gTensorPointer = stride, bTensorPointer = stride * 2, aTensorPointer = -1;\n            // Updating the pointer assignments based on the input image format\n            if (inputformat === 'RGBA') {\n                rTensorPointer = 0;\n                gTensorPointer = stride;\n                bTensorPointer = stride * 2;\n                aTensorPointer = stride * 3;\n            }\n            else if (inputformat === 'RGB') {\n                rTensorPointer = 0;\n                gTensorPointer = stride;\n                bTensorPointer = stride * 2;\n            }\n            else if (inputformat === 'RBG') {\n                rTensorPointer = 0;\n                bTensorPointer = stride;\n                gTensorPointer = stride * 2;\n            }\n            for (let i = 0; i < height; i++) {\n                for (let j = 0; j < width; j++) {\n                    const R = (this.data[rTensorPointer++] - normBias[0]) * normMean[0]; // R value\n                    const G = (this.data[gTensorPointer++] - normBias[1]) * normMean[1]; // G value\n                    const B = (this.data[bTensorPointer++] - normBias[2]) * normMean[2]; // B value\n                    const A = aTensorPointer === -1 ?\n                        255 :\n                        (this.data[aTensorPointer++] - normBias[3]) * normMean[3]; // A value\n                    // eslint-disable-next-line @typescript-eslint/restrict-plus-operands\n                    pixels2DContext.fillStyle = 'rgba(' + R + ',' + G + ',' + B + ',' + A + ')';\n                    pixels2DContext.fillRect(j, i, 1, 1);\n                }\n            }\n            return canvas.toDataURL();\n        }\n        else {\n            throw new Error('Can not access image data');\n        }\n    }\n    toImageData(options) {\n        const pixels2DContext = document.createElement('canvas').getContext('2d');\n        let image;\n        if (pixels2DContext != null) {\n            // Default values for height and width & format\n            let width;\n            let height;\n            let channels;\n            if (options?.tensorLayout !== undefined && options.tensorLayout === 'NHWC') {\n                width = this.dims[2];\n                height = this.dims[1];\n                channels = this.dims[3];\n            }\n            else { // Default layout is NCWH\n                width = this.dims[3];\n                height = this.dims[2];\n                channels = this.dims[1];\n            }\n            const inputformat = options !== undefined ? (options.format !== undefined ? options.format : 'RGB') : 'RGB';\n            const norm = options?.norm;\n            let normMean;\n            let normBias;\n            if (norm === undefined || norm.mean === undefined) {\n                normMean = [255, 255, 255, 255];\n            }\n            else {\n                if (typeof (norm.mean) === 'number') {\n                    normMean = [norm.mean, norm.mean, norm.mean, norm.mean];\n                }\n                else {\n                    normMean = [norm.mean[0], norm.mean[1], norm.mean[2], 255];\n                    if (norm.mean[3] !== undefined) {\n                        normMean[3] = norm.mean[3];\n                    }\n                }\n            }\n            if (norm === undefined || norm.bias === undefined) {\n                normBias = [0, 0, 0, 0];\n            }\n            else {\n                if (typeof (norm.bias) === 'number') {\n                    normBias = [norm.bias, norm.bias, norm.bias, norm.bias];\n                }\n                else {\n                    normBias = [norm.bias[0], norm.bias[1], norm.bias[2], 0];\n                    if (norm.bias[3] !== undefined) {\n                        normBias[3] = norm.bias[3];\n                    }\n                }\n            }\n            const stride = height * width;\n            if (options !== undefined) {\n                if (options.height !== undefined && options.height !== height) {\n                    throw new Error('Image output config height doesn\\'t match tensor height');\n                }\n                if (options.width !== undefined && options.width !== width) {\n                    throw new Error('Image output config width doesn\\'t match tensor width');\n                }\n                if (options.format !== undefined && (channels === 4 && options.format !== 'RGBA') ||\n                    (channels === 3 && (options.format !== 'RGB' && options.format !== 'BGR'))) {\n                    throw new Error('Tensor format doesn\\'t match input tensor dims');\n                }\n            }\n            // Default pointer assignments\n            const step = 4;\n            let rImagePointer = 0, gImagePointer = 1, bImagePointer = 2, aImagePointer = 3;\n            let rTensorPointer = 0, gTensorPointer = stride, bTensorPointer = stride * 2, aTensorPointer = -1;\n            // Updating the pointer assignments based on the input image format\n            if (inputformat === 'RGBA') {\n                rTensorPointer = 0;\n                gTensorPointer = stride;\n                bTensorPointer = stride * 2;\n                aTensorPointer = stride * 3;\n            }\n            else if (inputformat === 'RGB') {\n                rTensorPointer = 0;\n                gTensorPointer = stride;\n                bTensorPointer = stride * 2;\n            }\n            else if (inputformat === 'RBG') {\n                rTensorPointer = 0;\n                bTensorPointer = stride;\n                gTensorPointer = stride * 2;\n            }\n            image = pixels2DContext.createImageData(width, height);\n            for (let i = 0; i < height * width; rImagePointer += step, gImagePointer += step, bImagePointer += step, aImagePointer += step, i++) {\n                image.data[rImagePointer] = (this.data[rTensorPointer++] - normBias[0]) * normMean[0]; // R value\n                image.data[gImagePointer] = (this.data[gTensorPointer++] - normBias[1]) * normMean[1]; // G value\n                image.data[bImagePointer] = (this.data[bTensorPointer++] - normBias[2]) * normMean[2]; // B value\n                image.data[aImagePointer] = aTensorPointer === -1 ?\n                    255 :\n                    (this.data[aTensorPointer++] - normBias[3]) * normMean[3]; // A value\n            }\n        }\n        else {\n            throw new Error('Can not access image data');\n        }\n        return image;\n    }\n    // #endregion\n    // #region tensor utilities\n    reshape(dims) {\n        return new Tensor(this.type, this.data, dims);\n    }\n}\n//# sourceMappingURL=tensor-impl.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\nimport { Tensor as TensorImpl } from './tensor-impl';\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport const Tensor = TensorImpl;\n//# sourceMappingURL=tensor.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\nimport { resolveBackend } from './backend-impl';\nimport { Tensor } from './tensor';\nexport class InferenceSession {\n    constructor(handler) {\n        this.handler = handler;\n    }\n    async run(feeds, arg1, arg2) {\n        const fetches = {};\n        let options = {};\n        // check inputs\n        if (typeof feeds !== 'object' || feeds === null || feeds instanceof Tensor || Array.isArray(feeds)) {\n            throw new TypeError('\\'feeds\\' must be an object that use input names as keys and OnnxValue as corresponding values.');\n        }\n        let isFetchesEmpty = true;\n        // determine which override is being used\n        if (typeof arg1 === 'object') {\n            if (arg1 === null) {\n                throw new TypeError('Unexpected argument[1]: cannot be null.');\n            }\n            if (arg1 instanceof Tensor) {\n                throw new TypeError('\\'fetches\\' cannot be a Tensor');\n            }\n            if (Array.isArray(arg1)) {\n                if (arg1.length === 0) {\n                    throw new TypeError('\\'fetches\\' cannot be an empty array.');\n                }\n                isFetchesEmpty = false;\n                // output names\n                for (const name of arg1) {\n                    if (typeof name !== 'string') {\n                        throw new TypeError('\\'fetches\\' must be a string array or an object.');\n                    }\n                    if (this.outputNames.indexOf(name) === -1) {\n                        throw new RangeError(`'fetches' contains invalid output name: ${name}.`);\n                    }\n                    fetches[name] = null;\n                }\n                if (typeof arg2 === 'object' && arg2 !== null) {\n                    options = arg2;\n                }\n                else if (typeof arg2 !== 'undefined') {\n                    throw new TypeError('\\'options\\' must be an object.');\n                }\n            }\n            else {\n                // decide whether arg1 is fetches or options\n                // if any output name is present and its value is valid OnnxValue, we consider it fetches\n                let isFetches = false;\n                const arg1Keys = Object.getOwnPropertyNames(arg1);\n                for (const name of this.outputNames) {\n                    if (arg1Keys.indexOf(name) !== -1) {\n                        const v = arg1[name];\n                        if (v === null || v instanceof Tensor) {\n                            isFetches = true;\n                            isFetchesEmpty = false;\n                            fetches[name] = v;\n                        }\n                    }\n                }\n                if (isFetches) {\n                    if (typeof arg2 === 'object' && arg2 !== null) {\n                        options = arg2;\n                    }\n                    else if (typeof arg2 !== 'undefined') {\n                        throw new TypeError('\\'options\\' must be an object.');\n                    }\n                }\n                else {\n                    options = arg1;\n                }\n            }\n        }\n        else if (typeof arg1 !== 'undefined') {\n            throw new TypeError('Unexpected argument[1]: must be \\'fetches\\' or \\'options\\'.');\n        }\n        // check if all inputs are in feed\n        for (const name of this.inputNames) {\n            if (typeof feeds[name] === 'undefined') {\n                throw new Error(`input '${name}' is missing in 'feeds'.`);\n            }\n        }\n        // if no fetches is specified, we use the full output names list\n        if (isFetchesEmpty) {\n            for (const name of this.outputNames) {\n                fetches[name] = null;\n            }\n        }\n        // feeds, fetches and options are prepared\n        const results = await this.handler.run(feeds, fetches, options);\n        const returnValue = {};\n        for (const key in results) {\n            if (Object.hasOwnProperty.call(results, key)) {\n                returnValue[key] = new Tensor(results[key].type, results[key].data, results[key].dims);\n            }\n        }\n        return returnValue;\n    }\n    static async create(arg0, arg1, arg2, arg3) {\n        // either load from a file or buffer\n        let filePathOrUint8Array;\n        let options = {};\n        if (typeof arg0 === 'string') {\n            filePathOrUint8Array = arg0;\n            if (typeof arg1 === 'object' && arg1 !== null) {\n                options = arg1;\n            }\n            else if (typeof arg1 !== 'undefined') {\n                throw new TypeError('\\'options\\' must be an object.');\n            }\n        }\n        else if (arg0 instanceof Uint8Array) {\n            filePathOrUint8Array = arg0;\n            if (typeof arg1 === 'object' && arg1 !== null) {\n                options = arg1;\n            }\n            else if (typeof arg1 !== 'undefined') {\n                throw new TypeError('\\'options\\' must be an object.');\n            }\n        }\n        else if (arg0 instanceof ArrayBuffer ||\n            (typeof SharedArrayBuffer !== 'undefined' && arg0 instanceof SharedArrayBuffer)) {\n            const buffer = arg0;\n            let byteOffset = 0;\n            let byteLength = arg0.byteLength;\n            if (typeof arg1 === 'object' && arg1 !== null) {\n                options = arg1;\n            }\n            else if (typeof arg1 === 'number') {\n                byteOffset = arg1;\n                if (!Number.isSafeInteger(byteOffset)) {\n                    throw new RangeError('\\'byteOffset\\' must be an integer.');\n                }\n                if (byteOffset < 0 || byteOffset >= buffer.byteLength) {\n                    throw new RangeError(`'byteOffset' is out of range [0, ${buffer.byteLength}).`);\n                }\n                byteLength = arg0.byteLength - byteOffset;\n                if (typeof arg2 === 'number') {\n                    byteLength = arg2;\n                    if (!Number.isSafeInteger(byteLength)) {\n                        throw new RangeError('\\'byteLength\\' must be an integer.');\n                    }\n                    if (byteLength <= 0 || byteOffset + byteLength > buffer.byteLength) {\n                        throw new RangeError(`'byteLength' is out of range (0, ${buffer.byteLength - byteOffset}].`);\n                    }\n                    if (typeof arg3 === 'object' && arg3 !== null) {\n                        options = arg3;\n                    }\n                    else if (typeof arg3 !== 'undefined') {\n                        throw new TypeError('\\'options\\' must be an object.');\n                    }\n                }\n                else if (typeof arg2 !== 'undefined') {\n                    throw new TypeError('\\'byteLength\\' must be a number.');\n                }\n            }\n            else if (typeof arg1 !== 'undefined') {\n                throw new TypeError('\\'options\\' must be an object.');\n            }\n            filePathOrUint8Array = new Uint8Array(buffer, byteOffset, byteLength);\n        }\n        else {\n            throw new TypeError('Unexpected argument[0]: must be \\'path\\' or \\'buffer\\'.');\n        }\n        // get backend hints\n        const eps = options.executionProviders || [];\n        const backendHints = eps.map(i => typeof i === 'string' ? i : i.name);\n        const backend = await resolveBackend(backendHints);\n        const handler = await backend.createSessionHandler(filePathOrUint8Array, options);\n        return new InferenceSession(handler);\n    }\n    startProfiling() {\n        this.handler.startProfiling();\n    }\n    endProfiling() {\n        this.handler.endProfiling();\n    }\n    get inputNames() {\n        return this.handler.inputNames;\n    }\n    get outputNames() {\n        return this.handler.outputNames;\n    }\n}\n//# sourceMappingURL=inference-session-impl.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\nimport { InferenceSession as InferenceSessionImpl } from './inference-session-impl';\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport const InferenceSession = InferenceSessionImpl;\n//# sourceMappingURL=inference-session.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Backend, env, InferenceSession, SessionHandler} from 'onnxruntime-common';\nimport {cpus} from 'os';\n\nimport {initializeWebAssemblyInstance} from './wasm/proxy-wrapper';\nimport {OnnxruntimeWebAssemblySessionHandler} from './wasm/session-handler';\n\n/**\n * This function initializes all flags for WebAssembly.\n *\n * Those flags are accessible from `ort.env.wasm`. Users are allow to set those flags before the first inference session\n * being created, to override default value.\n */\nexport const initializeFlags = (): void => {\n  if (typeof env.wasm.initTimeout !== 'number' || env.wasm.initTimeout < 0) {\n    env.wasm.initTimeout = 0;\n  }\n\n  if (typeof env.wasm.simd !== 'boolean') {\n    env.wasm.simd = true;\n  }\n\n  if (typeof env.wasm.proxy !== 'boolean') {\n    env.wasm.proxy = false;\n  }\n\n  if (typeof env.wasm.numThreads !== 'number' || !Number.isInteger(env.wasm.numThreads) || env.wasm.numThreads <= 0) {\n    const numCpuLogicalCores = typeof navigator === 'undefined' ? cpus().length : navigator.hardwareConcurrency;\n    env.wasm.numThreads = Math.min(4, Math.ceil((numCpuLogicalCores || 1) / 2));\n  }\n};\n\nclass OnnxruntimeWebAssemblyBackend implements Backend {\n  async init(): Promise<void> {\n    // populate wasm flags\n    initializeFlags();\n\n    // init wasm\n    await initializeWebAssemblyInstance();\n  }\n  createSessionHandler(path: string, options?: InferenceSession.SessionOptions): Promise<SessionHandler>;\n  createSessionHandler(buffer: Uint8Array, options?: InferenceSession.SessionOptions): Promise<SessionHandler>;\n  async createSessionHandler(pathOrBuffer: string|Uint8Array, options?: InferenceSession.SessionOptions):\n      Promise<SessionHandler> {\n    const handler = new OnnxruntimeWebAssemblySessionHandler();\n    await handler.loadModel(pathOrBuffer, options);\n    return Promise.resolve(handler);\n  }\n}\n\nexport const wasmBackend = new OnnxruntimeWebAssemblyBackend();\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\n/* eslint-disable @typescript-eslint/no-var-requires, @typescript-eslint/no-require-imports */\n// We use \"require\" instead of \"import\" here because import statement must be put in top level. Our current code does\n// not allow terser to tree-shaking code as expected because some codes are treated as having side effects.\n// So we import code inside the if-clause to allow terser remove the code safely.\n\nexport * from 'onnxruntime-common';\nimport {registerBackend} from 'onnxruntime-common';\n\nif (!BUILD_DEFS.DISABLE_WEBGL) {\n  const onnxjsBackend = require('./backend-onnxjs').onnxjsBackend;\n  registerBackend('webgl', onnxjsBackend, -10);\n}\n\nif (!BUILD_DEFS.DISABLE_WASM) {\n  const wasmBackend = require('./backend-wasm').wasmBackend;\n  if (!BUILD_DEFS.DISABLE_WEBGPU && typeof navigator !== 'undefined' && navigator.gpu) {\n    registerBackend('webgpu', wasmBackend, 5);\n  }\n  registerBackend('cpu', wasmBackend, 10);\n  registerBackend('wasm', wasmBackend, 10);\n  registerBackend('xnnpack', wasmBackend, 9);\n  registerBackend('webnn', wasmBackend, 9);\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Env} from 'onnxruntime-common';\n\nimport {configureLogger, LOG_DEBUG} from './log';\nimport {TensorView} from './tensor';\nimport {createGpuDataManager, GpuDataManager} from './webgpu/gpu-data-manager';\nimport {RunFunction, WEBGPU_OP_RESOLVE_RULES} from './webgpu/op-resolve-rules';\nimport {ProgramManager} from './webgpu/program-manager';\nimport {ComputeContext, GpuData, GpuDataType, ProgramInfo, ProgramInfoLoader} from './webgpu/types';\n\n/**\n * get a unique key representing the program from the program info,input shapes and types.\n *\n * @returns a unique key is a shorter string than the shader source, which contains all the information to identify a\n * program. if the key is the same, the program shader source should be the same, so we can reuse the program.\n *\n */\nconst getProgramInfoUniqueKey =\n    (programInfo: ProgramInfo|ProgramInfoLoader, inputTensorShapes: ReadonlyArray<TensorView['dims']>,\n     inputGpuDataTypes: readonly GpuDataType[]): string => {\n      const inputTensorShapesToString = inputTensorShapes.map(d => `${d.join(',')}`).join('_');\n      const inputGpuDataTypesToString = inputGpuDataTypes.join('_');\n      let key = programInfo.name;\n      if (programInfo.cacheHint) {\n        key += '[' + programInfo.cacheHint + ']';\n      }\n      key += ':' + inputTensorShapesToString + ';' + inputGpuDataTypesToString;\n      return key;\n    };\n\n/**\n * this class is designed to store status and being used as a singleton for JSEP. It will be passed to jsepInit() as\n * the first parameter so that it is stored for future use.\n */\nexport class WebGpuBackend {\n  device: GPUDevice;\n  /**\n   * an instance of GpuDataManager to manage a GpuDataId -> GpuBuffer mapping\n   */\n  gpuDataManager: GpuDataManager;\n  /**\n   * an instance of ProgramManager to build and run WebGPU compute shader program, and manage a ProgramKey -> Program\n   * artifacts mapping\n   */\n  programManager: ProgramManager;\n\n  /**\n   * representing the kernel ID of which is currently being computed (CPU code perspective).\n   * `null` means no kernel is being computed.\n   * only one kernel can be computed at a moment.\n   */\n  currentKernelId: number|null = null;\n  /**\n   * a list of temporary GPU data for the current kernel. should release when the kernel done computation.\n   */\n  private temporaryData: GpuData[];\n  /**\n   * a KernelID -> a GPU data list, which stores persistent GPU data owned by the specific kernel.\n   */\n  private kernelPersistentData: Map<number, GpuData[]>;\n  /**\n   * a KernelID -> a custom data, which stores custom data owned by the specific kernel.\n   */\n  private kernelCustomData: Map<number, {[key: string]: unknown}>;\n  /**\n   * get the custom data of the current kernel\n   */\n  get currentKernelCustomData(): {[key: string]: unknown} {\n    if (this.currentKernelId === null) {\n      throw new Error('currentKernelCustomData(): currentKernelId is null. (should not happen)');\n    }\n\n    let data = this.kernelCustomData.get(this.currentKernelId);\n    if (!data) {\n      data = {};\n      this.kernelCustomData.set(this.currentKernelId, data);\n    }\n\n    return data;\n  }\n\n  /**\n   * a KernelID -> kernel info mapping. value is [ name, run function, [optional] preprocess_attribute_once function ]\n   */\n  kernels: Map<number, [string, RunFunction, [((attribute: unknown) => unknown) | undefined, unknown]]>;\n\n  commandEncoder: GPUCommandEncoder|null = null;\n  computePassEncoder: GPUComputePassEncoder|null = null;\n  pendingDispatchNumber = 0;\n\n  profilingEnabled = false;\n  profilingQuerySet: GPUQuerySet;\n  profilingTimeBase?: bigint;\n\n  async initialize(env: Env): Promise<void> {\n    if (!navigator.gpu) {\n      // WebGPU is not available.\n      throw new Error('WebGpuBackend: WebGPU is not available.');\n    }\n\n    const adapter = await navigator.gpu.requestAdapter();\n    if (!adapter) {\n      throw new Error('WebGpuBackend: Failed to get GPU adapter.');\n    }\n\n    const deviceDescriptor: GPUDeviceDescriptor = {\n      requiredLimits: {\n        maxComputeWorkgroupStorageSize: adapter.limits.maxComputeWorkgroupStorageSize,\n        maxComputeWorkgroupsPerDimension: adapter.limits.maxComputeWorkgroupsPerDimension,\n        maxStorageBufferBindingSize: adapter.limits.maxStorageBufferBindingSize,\n      }\n    };\n    // WebGPU Spec: Timestamp Queries Inside Passes\n    // https://github.com/gpuweb/gpuweb/blob/main/proposals/timestamp-query-inside-passes.md\n    if (adapter.features.has('timestamp-query-inside-passes') && env.webgpu.profilingMode === 'default') {\n      this.profilingEnabled = true;\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      deviceDescriptor.requiredFeatures = ['timestamp-query-inside-passes' as any];\n    }\n\n    this.device = await adapter.requestDevice(deviceDescriptor);\n    this.gpuDataManager = createGpuDataManager(this);\n    this.programManager = new ProgramManager(this);\n    this.kernels = new Map();\n    this.kernelPersistentData = new Map();\n    this.kernelCustomData = new Map();\n\n    // set up flags for logger\n    configureLogger(env.logLevel!, !!env.debug);\n\n    // TODO: set up flags\n\n    this.device.onuncapturederror = ev => {\n      if (ev.error instanceof GPUValidationError) {\n        // eslint-disable-next-line no-console\n        console.error(`An uncaught WebGPU validation error was raised: ${ev.error.message}`);\n      }\n    };\n\n    if (this.profilingEnabled) {\n      this.profilingQuerySet = this.device.createQuerySet({\n        type: 'timestamp',\n        count: 2,\n      });\n    }\n  }\n\n  dispose(): void {\n    // currently, we do not do anything in this function. In all known use cases, we don't have the requirement to\n    // actually dispose the WebGpuBackend instance, because it's always used as a singleton.\n    //\n    // revisit this place if we get real requirement to dispose the instance.\n  }\n\n  getCommandEncoder(): GPUCommandEncoder {\n    if (!this.commandEncoder) {\n      this.commandEncoder = this.device.createCommandEncoder();\n    }\n    return this.commandEncoder;\n  }\n\n  getComputePassEncoder(): GPUComputePassEncoder {\n    if (!this.computePassEncoder) {\n      this.computePassEncoder = this.getCommandEncoder().beginComputePass();\n    }\n    return this.computePassEncoder;\n  }\n\n  endComputePass(): void {\n    if (this.computePassEncoder) {\n      this.computePassEncoder.end();\n      this.computePassEncoder = null;\n    }\n  }\n\n  flush(): void {\n    this.endComputePass();\n    this.device.queue.submit([this.getCommandEncoder().finish()]);\n    this.gpuDataManager.refreshPendingBuffers();\n    this.commandEncoder = null;\n    this.pendingDispatchNumber = 0;\n  }\n\n  /**\n   * run a WebGPU program.\n   * @param program either a ProgramInfo instance containing metadata including the shader code, or a function that\n   * can be called and return a ProgramInfo instance\n   * @param inputs a TensorView array. each element represents a value already exists in GPU.\n   * @param outputIndices an indices array. each element can be either -1 (temporary data), -2 (persistent data) or an\n   * index to the kernel's output.\n   * @param createKernelOutput a callback function that create a value to kernel's output with the given index\n   * @param createIntermediateOutput a callback function that create a value as a intermediate value, either temporary\n   * or persistent (owned by the current kernel)\n   * @returns a TensorView array representing the result.\n   */\n  run(program: ProgramInfoLoader|ProgramInfo, inputs: readonly TensorView[], outputIndices: readonly number[],\n      createKernelOutput: (index: number, dataType: number, dims: readonly number[]) => TensorView,\n      createIntermediateOutput: (dataType: number, dims: readonly number[]) => TensorView): TensorView[] {\n    if (inputs.length !== program.inputTypes.length) {\n      throw new Error(`Input size must be equal to ${program.inputTypes.length}.`);\n    }\n\n    // create info for inputs\n    const inputDatas: GpuData[] = [];\n    for (let i = 0; i < inputs.length; ++i) {\n      const gpuData = this.gpuDataManager.get(inputs[i].data);\n      if (!gpuData) {\n        throw new Error(`no GPU data for input: ${inputs[i].data}`);\n      }\n      inputDatas[i] = gpuData;\n    }\n\n    const key = getProgramInfoUniqueKey(program, inputs.map(i => i.dims), inputDatas.map(i => i.type));\n    let artifact = this.programManager.getArtifact(key);\n    const programInfo = artifact ?\n        artifact.programInfo :\n        (typeof (program as ProgramInfoLoader).get === 'function' ? (program as ProgramInfoLoader).get() :\n                                                                    (program as ProgramInfo));\n\n    // check output indices\n    const validatedOutputIndices = outputIndices.length === 0 ? programInfo.outputs.map((_, i) => i) : outputIndices;\n    if (validatedOutputIndices.length !== programInfo.outputs.length) {\n      throw new Error(`Output size ${validatedOutputIndices.length} must be equal to ${programInfo.outputs.length}.`);\n    }\n\n    // create info for outputs\n    const outputTensorViews: TensorView[] = [];\n    const outputDatas: GpuData[] = [];\n    for (let i = 0; i < programInfo.outputs.length; ++i) {\n      // value -1 and -2 are used for creating temporary and persistent outputs. so -2, -1 and 0, 1, 2, ... are valid\n      // output indices. see type definition of ComputeContextInputsOutputsMapping for more details.\n      if (!Number.isInteger(validatedOutputIndices[i]) || validatedOutputIndices[i] < -2 ||\n          validatedOutputIndices[i] >= programInfo.outputs.length) {\n        throw new Error(`Invalid output index: ${validatedOutputIndices[i]}`);\n      }\n      const isTemporary = validatedOutputIndices[i] === -1;\n      const isPersistent = validatedOutputIndices[i] === -2;\n      const tensorView = (isTemporary || isPersistent) ?\n          createIntermediateOutput(programInfo.outputs[i].dataType, programInfo.outputs[i].dims) :\n          createKernelOutput(validatedOutputIndices[i], programInfo.outputs[i].dataType, programInfo.outputs[i].dims);\n      const gpuData = this.gpuDataManager.get(tensorView.data);\n      if (!gpuData) {\n        throw new Error(`no GPU data for output: ${tensorView.data}`);\n      }\n      if (isTemporary) {\n        this.temporaryData.push(gpuData);\n      }\n      if (isPersistent) {\n        let persistentData = this.kernelPersistentData.get(this.currentKernelId!);\n        if (!persistentData) {\n          persistentData = [];\n          this.kernelPersistentData.set(this.currentKernelId!, persistentData);\n        }\n        persistentData.push(gpuData);\n      }\n      outputTensorViews.push(tensorView);\n      outputDatas.push(gpuData);\n    }\n\n    const normalizedDispatchGroup = this.programManager.normalizeDispatchGroupSize(programInfo.dispatchGroup(inputs));\n\n    if (!artifact) {\n      artifact = this.programManager.build(programInfo, normalizedDispatchGroup);\n      this.programManager.setArtifact(key, artifact);\n    }\n\n    LOG_DEBUG(\n        'info',\n        () => `[ProgramManager] run \"${programInfo.name}\" (key=${key}) with ${normalizedDispatchGroup[0]}x${\n            normalizedDispatchGroup[1]}x${normalizedDispatchGroup[2]}`);\n    this.programManager.run(artifact, inputDatas, outputDatas, normalizedDispatchGroup);\n\n    return outputTensorViews;\n  }\n\n  upload(gpuDataId: number, data: Uint8Array): void {\n    this.gpuDataManager.upload(gpuDataId, data);\n  }\n\n  memcpy(src: number, dst: number): void {\n    this.gpuDataManager.memcpy(src, dst);\n  }\n\n  async download(gpuDataId: number, getTargetBuffer: () => Uint8Array): Promise<void> {\n    const arrayBuffer = await this.gpuDataManager.download(gpuDataId);\n\n    // the underlying buffer may be changed after the async function is called. so we use a getter function to make sure\n    // the buffer is up-to-date.\n    const data = getTargetBuffer();\n    data.set(new Uint8Array(arrayBuffer));\n  }\n\n  alloc(size: number): number {\n    return this.gpuDataManager.create(size).id;\n  }\n\n  free(ptr: number): number {\n    return this.gpuDataManager.release(ptr);\n  }\n\n  createKernel(name: string, kernelId: number, attribute: unknown): void {\n    const op = WEBGPU_OP_RESOLVE_RULES.get(name);\n    if (!op) {\n      throw new Error(`kernel not implemented: ${name}`);\n    }\n\n    this.kernels.set(kernelId, [name, op[0], [op[1], attribute]]);\n  }\n\n  releaseKernel(kernelId: number): void {\n    const persistentData = this.kernelPersistentData.get(kernelId);\n    if (persistentData) {\n      for (const data of persistentData) {\n        this.gpuDataManager.release(data.id);\n      }\n      this.kernelPersistentData.delete(kernelId);\n    }\n\n    this.kernelCustomData.delete(kernelId);\n    this.kernels.delete(kernelId);\n  }\n\n  computeKernel(kernelId: number, context: ComputeContext): number {\n    const kernel = this.kernels.get(kernelId);\n    if (!kernel) {\n      throw new Error(`kernel not created: ${kernelId}`);\n    }\n    const [name, kernelEntry, attributes] = kernel;\n    if (this.currentKernelId !== null) {\n      throw new Error(`kernel \"${name}\" is not allowed to be called recursively`);\n    }\n    this.currentKernelId = kernelId;\n\n    // parse attributes if necessary\n    if (attributes[0]) {\n      attributes[1] = attributes[0](attributes[1]);\n      attributes[0] = undefined;\n    }\n\n    LOG_DEBUG('info', () => `[WebGPU] Start to run kernel \"${name}\"...`);\n\n    this.temporaryData = [];\n    try {\n      kernelEntry(context, attributes[1]);\n      return 0;  // ORT_OK\n    } catch (e) {\n      LOG_DEBUG('warning', `[WebGPU] Kernel \"${name}\" failed. Error: ${e}`);\n      return 1;  // ORT_FAIL\n    } finally {\n      for (const data of this.temporaryData) {\n        this.gpuDataManager.release(data.id);\n      }\n      this.temporaryData = [];\n      this.currentKernelId = null;\n    }\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Env} from 'onnxruntime-common';\n\nimport {OrtWasmModule} from '../binding/ort-wasm';\nimport {getTensorElementSize} from '../wasm-common';\n\nimport {WebGpuBackend} from './backend-webgpu';\nimport {LOG_DEBUG} from './log';\nimport {TensorView} from './tensor';\nimport {ShapeUtil} from './util';\nimport {ComputeContext, ComputeContextInputsOutputsMapping, ProgramInfo, ProgramInfoLoader} from './webgpu/types';\n\n/* eslint-disable no-bitwise */\n\nclass TensorViewImpl implements TensorView {\n  constructor(\n      private module: OrtWasmModule, public readonly dataType: number, public readonly data: number,\n      public readonly dims: readonly number[]) {}\n\n  getFloat32Array(): Float32Array {\n    return new Float32Array(this.module.HEAP8.buffer, this.data, ShapeUtil.size(this.dims));\n  }\n\n  reshape(newDims: readonly number[]): TensorView {\n    if (ShapeUtil.size(newDims) !== ShapeUtil.size(this.dims)) {\n      throw new Error('Invalid new shape');\n    }\n    return new TensorViewImpl(this.module, this.dataType, this.data, newDims);\n  }\n}\n\nclass ComputeContextImpl implements ComputeContext {\n  readonly opKernelContext: number;\n  readonly inputs: readonly TensorView[];\n  get customData(): {[key: string]: unknown} {\n    return this.backend.currentKernelCustomData;\n  }\n  constructor(private module: OrtWasmModule, private backend: WebGpuBackend, contextDataOffset: number) {\n    const heapU32 = module.HEAPU32;\n\n    // extract context data\n    let dataIndex = (contextDataOffset >> 2);\n    this.opKernelContext = heapU32[dataIndex++];\n    const inputCount = heapU32[dataIndex++];\n\n    const inputs: TensorView[] = [];\n    for (let i = 0; i < inputCount; i++) {\n      const dataType = heapU32[dataIndex++];\n      const data = heapU32[dataIndex++];\n      const dim = heapU32[dataIndex++];\n      const dims: number[] = [];\n      for (let d = 0; d < dim; d++) {\n        dims.push(heapU32[dataIndex++]);\n      }\n      inputs.push(new TensorViewImpl(module, dataType, data, dims));\n    }\n    this.inputs = inputs;\n  }\n\n  compute(program: ProgramInfoLoader|ProgramInfo, inputsOutputsMapping?: ComputeContextInputsOutputsMapping):\n      TensorView[] {\n    // prepare inputs. inputs should always be valid data.\n    const mappedInputs =\n        inputsOutputsMapping?.inputs?.map(i => typeof i === 'number' ? this.inputs[i] : i) ?? this.inputs;\n    // prepare outputs.\n    const outputIndices = inputsOutputsMapping?.outputs ?? [];\n    const createKernelOutput = (index: number, dataType: number, dims: readonly number[]): TensorView =>\n        new TensorViewImpl(this.module, dataType, this.output(index, dims), dims);\n    const createTemporaryOutput = (dataType: number, dims: readonly number[]): TensorView => {\n      const elementSize = getTensorElementSize(dataType);\n      if (!elementSize) {\n        throw new Error(`Unsupported data type: ${dataType}`);\n      }\n      const bufferSize = elementSize * ShapeUtil.size(dims);\n      return new TensorViewImpl(this.module, dataType, this.backend.gpuDataManager.create(bufferSize).id, dims);\n    };\n    return this.backend.run(program, mappedInputs, outputIndices, createKernelOutput, createTemporaryOutput);\n  }\n\n  output(index: number, dims: readonly number[]): number {\n    const stack = this.module.stackSave();\n    try {\n      const data = this.module.stackAlloc((1 + dims.length) * 4 /* sizeof(size_t) */);\n      let offset = data >> 2;\n      this.module.HEAPU32[offset++] = dims.length;\n      for (let i = 0; i < dims.length; i++) {\n        this.module.HEAPU32[offset++] = dims[i];\n      }\n      return this.module._JsepOutput(this.opKernelContext, index, data);\n    } finally {\n      this.module.stackRestore(stack);\n    }\n  }\n}\n\nexport const init = async(module: OrtWasmModule, env: Env): Promise<void> => {\n  const init = module.jsepInit;\n  if (init && navigator.gpu) {\n    if (!env.wasm.simd) {\n      throw new Error(\n          'Not supported for WebGPU=ON and SIMD=OFF. Please set `env.wasm.simd` to true when using WebGPU EP');\n    }\n    const backend = new WebGpuBackend();\n    await backend.initialize(env);\n\n    init(\n        // backend\n        {backend},\n\n        // jsepAlloc()\n        (size: number) => backend.alloc(size),\n\n        // jsepFree()\n        (ptr: number) => backend.free(ptr),\n\n        // jsepCopy(src, dst, size, isSourceGpu)\n        (src: number, dst: number, size: number, isSourceGpu = false) => {\n          if (isSourceGpu) {\n            LOG_DEBUG('verbose', () => `[WebGPU] jsepCopyGpuToGpu: src=${src}, dst=${dst}, size=${size}`);\n            backend.memcpy(src, dst);\n          } else {\n            LOG_DEBUG('verbose', () => `[WebGPU] jsepCopyCpuToGpu: dataOffset=${src}, gpuDataId=${dst}, size=${size}`);\n            const data = module.HEAPU8.subarray(src, src + size);\n            backend.upload(dst, data);\n          }\n        },\n\n        // jsepCopyAsync(src, dst, size)\n        async(gpuDataId: number, dataOffset: number, size: number):\n            Promise<void> => {\n              LOG_DEBUG(\n                  'verbose',\n                  () => `[WebGPU] jsepCopyGpuToCpu: gpuDataId=${gpuDataId}, dataOffset=${dataOffset}, size=${size}`);\n\n              await backend.download(gpuDataId, () => module.HEAPU8.subarray(dataOffset, dataOffset + size));\n            },\n\n        // jsepCreateKernel\n        (name: string, kernel: number, attribute: unknown) => backend.createKernel(name, kernel, attribute),\n\n        // jsepReleaseKernel\n        (kernel: number) => backend.releaseKernel(kernel),\n\n        // jsepRun\n        (kernel: number, contextDataOffset: number) => {\n          LOG_DEBUG('verbose', () => `[WebGPU] jsepRun: kernel=${kernel}, contextDataOffset=${contextDataOffset}`);\n          const context = new ComputeContextImpl(module, backend, contextDataOffset);\n          return backend.computeKernel(kernel, context);\n        });\n  }\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Env} from 'onnxruntime-common';\n\nimport {logLevelStringToEnum} from '../wasm-common';\n\ntype LogLevel = NonNullable<Env['logLevel']>;\ntype MessageString = string;\ntype MessageFunction = () => string;\ntype Message = MessageString|MessageFunction;\n\nconst logLevelPrefix = ['V', 'I', 'W', 'E', 'F'];\n\nconst doLog = (level: number, message: string): void => {\n  // eslint-disable-next-line no-console\n  console.log(`[${logLevelPrefix[level]},${new Date().toISOString()}]${message}`);\n};\n\nlet configLogLevel: LogLevel|undefined;\nlet debug: boolean|undefined;\n\nexport const configureLogger = ($configLogLevel: LogLevel, $debug: boolean): void => {\n  configLogLevel = $configLogLevel;\n  debug = $debug;\n};\n\n/**\n * A simple logging utility to log messages to the console.\n */\nexport const LOG = (logLevel: LogLevel, msg: Message): void => {\n  const messageLevel = logLevelStringToEnum(logLevel);\n  const configLevel = logLevelStringToEnum(configLogLevel);\n  if (messageLevel >= configLevel) {\n    doLog(messageLevel, typeof msg === 'function' ? msg() : msg);\n  }\n};\n\n/**\n * A simple logging utility to log messages to the console. Only logs when debug is enabled.\n */\nexport const LOG_DEBUG: typeof LOG = (...args: Parameters<typeof LOG>) => {\n  if (debug) {\n    LOG(...args);\n  }\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\n/* eslint-disable no-param-reassign */\n\nexport class MatMulUtil {\n  /**\n   * Calculate the expected shape when matrix multiplication\n   * @param a The shape of tensor A. Should be a tuple of 2 positive integers\n   * @param b The shape of tensor B. Should be a tuple of 2 positive integers\n   * @returns The expected shape of the result, or undefined if N/A\n   */\n  static calcMatMulShape(a: [number, number], b: [number, number]): [number, number]|undefined {\n    return (a[1] !== b[0]) ? undefined : [a[0], b[1]];\n  }\n}\n\n\nexport class BroadcastUtil {\n  /**\n   * Calculate the expected shape when broadcasting 2 tensors\n   * @param a The shape of tensor A. Should be an array of positive integers\n   * @param b The shape of tensor B. Should be an array of positive integers\n   * @param isMatMul Whether the operation is MatMul\n   * @returns The expected shape of the result, or undefined if N/A\n   */\n  static calcShape(adims: readonly number[], bdims: readonly number[], isMatMul = false): readonly number[]|undefined {\n    const arank = adims.length;\n    const brank = bdims.length;\n    if (arank === 0) {\n      return bdims;\n    }\n    if (brank === 0) {\n      return adims;\n    }\n    const crank = Math.max(adims.length, bdims.length);\n    const cdims = new Array<number>(crank);\n\n    // calculate the last 2 dimension if it is MatMul\n    if (isMatMul) {\n      if (arank < 2 || brank < 2) {\n        return undefined;\n      }\n      const cShapeMatMul =\n          MatMulUtil.calcMatMulShape([adims[arank - 2], adims[arank - 1]], [bdims[brank - 2], bdims[brank - 1]]);\n      if (cShapeMatMul === undefined) {\n        return undefined;\n      }\n      [cdims[crank - 2], cdims[crank - 1]] = cShapeMatMul;\n    }\n\n    for (let i = isMatMul ? 3 : 1; i <= crank; i++) {\n      const aLen = arank - i < 0 ? 1 : adims[arank - i];\n      const bLen = brank - i < 0 ? 1 : bdims[brank - i];\n\n      if (aLen !== bLen && aLen > 1 && bLen > 1) {\n        return undefined;\n      }\n      cdims[crank - i] = Math.max(aLen, bLen);\n    }\n\n    return cdims;\n  }\n\n  /**\n   * Determine if a shape is unidirectional broadcastable to another shape\n   * @param shape The input shape\n   * @param finalShape The desired shape after broadcasting\n   */\n  static isValidBroadcast(shape: readonly number[], finalShape: readonly number[]): boolean {\n    // align shape to the right\n    const inputRank = shape.length;\n    const finalRank = finalShape.length;\n    if (inputRank > finalRank) {\n      return false;\n    }\n    for (let i = 1; i <= inputRank; i++) {\n      if (shape[inputRank - i] !== 1 && shape[inputRank - i] !== finalShape[finalRank - i]) {\n        return false;\n      }\n    }\n    return true;\n  }\n}\n\n\nexport class ShapeUtil {\n  /**\n   * calculate the size (number of elements)\n   */\n  static size(dims: readonly number[]): number {\n    return ShapeUtil.getSizeFromDimensionRange(dims, 0, dims.length);\n  }\n\n  /**\n   * calculate the size (number of elements) from the given axis (inclusive)\n   */\n  static sizeFromDimension(dims: readonly number[], axis: number): number {\n    if (axis < 0 || axis > dims.length) {\n      throw new Error(`invalid dimension of ${axis} for sizeFromDimension as Tensor has ${dims.length} dimensions.`);\n    }\n    return ShapeUtil.getSizeFromDimensionRange(dims, axis, dims.length);\n  }\n\n  /**\n   * calculate the size (number of elements) to the given axis (exclusive)\n   */\n  static sizeToDimension(dims: readonly number[], axis: number): number {\n    if (axis < 0 || axis > dims.length) {\n      throw new Error(`invalid dimension of ${axis} for sizeToDimension as Tensor has ${dims.length} dimensions.`);\n    }\n    return ShapeUtil.getSizeFromDimensionRange(dims, 0, axis);\n  }\n\n  /**\n   * calculate the size (number of elements) from and to the given axis [start, end)\n   */\n  static getSizeFromDimensionRange(dims: readonly number[], start: number, end: number): number {\n    let size = 1;\n    for (let i = start; i < end; i++) {\n      // safety check as this method is called by multiple other methods requiring size.\n      // size cannot be 0 or negative.\n      if (dims[i] <= 0) {\n        throw new Error(\n            // eslint-disable-next-line max-len\n            'cannot get valid size from specified dimension range. Most likely the range contains 0 or negative values in them.');\n      }\n      size *= dims[i];\n    }\n    return size;\n  }\n\n  static computeStrides(dims: readonly number[]): readonly number[] {\n    const rank = dims.length;\n    if (rank === 0) {\n      return [];\n    } else if (rank === 1) {\n      return [1];\n    }\n    const strides = new Array(rank);\n    strides[rank - 1] = 1;\n    strides[rank - 2] = dims[rank - 1];\n    for (let i = rank - 3; i >= 0; --i) {\n      strides[i] = strides[i + 1] * dims[i + 1];\n    }\n    return strides;\n  }\n\n  /**\n   * normailze axis of range [-r, r) into [0, r).\n   */\n  static normalizeAxis(axis: number, tensorRank: number): number {\n    if (axis < -tensorRank && axis >= tensorRank) {\n      throw new Error('unsupported axis for this operation.');\n    }\n    return axis < 0 ? axis + tensorRank : axis;\n  }\n\n  static normalizeAxes(axes: readonly number[], tensorRank?: number): number[] {\n    return axes.map(x => this.normalizeAxis(x, tensorRank ?? axes.length));\n  }\n\n  /**\n   * Sorts a given array based on the indices in the Perm array\n   * Used in Transpose\n   * @param a Array to be sorted such as dims or strides\n   * @param perm Perm given; if null a will be reversed\n   */\n  static sortBasedOnPerm(a: readonly number[], perm?: readonly number[]): readonly number[] {\n    if (perm) {\n      return perm.map((v) => a[v]);\n    } else {\n      return a.slice().reverse();\n    }\n  }\n\n  /**\n   * Pads a given shape according to the padding values\n   * @param dims shape of the Tensor to be padded\n   * @param pad pad values\n   */\n  static padShape(dims: readonly number[], pad: readonly number[]): readonly number[] {\n    const rank = dims.length;\n    return dims.map((v, i) => v + pad[i] + pad[i + rank]);\n  }\n\n  /**\n   * Determines if the two shapes are identical\n   * @param shape1\n   * @param shape2\n   */\n  static areEqual(shape1: readonly number[], shape2: readonly number[]): boolean {\n    if (shape1.length !== shape2.length) {\n      return false;\n    }\n    return shape1.every((v, i) => v === shape2[i]);\n  }\n}\n\nexport class PoolConvUtil {\n  /**\n   * Adjust the kernel, strides, pads to correct rank. Set to default value if not present\n   * @param isGlobalOperator If true, perform global pooling.\n   * @param inputDims The input tensor dimension.\n   * @param kernelShape The size of the kernel along each axis.\n   * @param strides Stride along each axis.\n   * @param dilations Dilation along each axis.\n   * @param pads Padding for the beginning and ending along each axis.\n   */\n  static adjustPoolAttributes(\n      isGlobalOperator: boolean, inputDims: readonly number[], kernelShape: number[], strides: number[],\n      dilations: number[], pads: number[]): void {\n    if (!isGlobalOperator && kernelShape.length !== inputDims.length - 2) {\n      throw new Error('length of specified kernel shapes should be 2 less than length of input dimensions');\n    }\n\n    if (isGlobalOperator) {\n      // adjust kernel shape to cover the input dims\n      for (let dim = 0; dim < inputDims.length - 2; dim++) {\n        if (dim >= kernelShape.length) {\n          kernelShape.push(inputDims[dim + 2]);\n        } else {\n          kernelShape[dim] = inputDims[dim + 2];\n        }\n      }\n    }\n\n    // adjust strides length to match kernel shape length\n    for (let dim = 0; dim < kernelShape.length; dim++) {\n      if (dim < strides.length) {\n        if (strides[dim] < 0) {\n          throw new Error('strides should be greater than or equal to 1');\n        }\n      } else {\n        strides.push(1);\n      }\n    }\n\n    // adjust dilation value\n    for (let dim = 0; dim < kernelShape.length; dim++) {\n      if (dim < dilations.length) {\n        if (dilations[dim] < 0) {\n          throw new Error('dilations should be greater than or equal to 1');\n        }\n      } else {\n        dilations.push(1);\n      }\n    }\n\n    // adjust pads length to match 2 * kernel shape length\n    for (let dim = 0; dim < kernelShape.length * 2; dim++) {\n      if (dim < pads.length) {\n        if (pads[dim] < 0) {\n          throw new Error('pad should be greater than or equal to 1');\n        }\n      } else {\n        pads.push(0);\n      }\n    }\n\n    // sanity checks for values in kernel shapes and pads\n    for (let dim = 0; dim < kernelShape.length; dim++) {\n      if (kernelShape[dim] <= 0) {\n        throw new Error('kernel shapes need to be greater than 0');\n      }\n\n      if (pads[dim] >= kernelShape[dim] || pads[dim + kernelShape.length] >= kernelShape[dim]) {\n        throw new Error('pads should be smaller than kernel');\n      }\n    }\n  }\n\n  // adjust pad values based on 'autoPad' attribute\n  static adjustPadsBasedOnAutoPad(\n      inputDims: readonly number[], strides: readonly number[], dilations: readonly number[],\n      kernelShape: readonly number[], pads: number[], isChannelLast: boolean, autoPad?: string): void {\n    if (!autoPad) {\n      return;\n    }\n\n    if (pads.length !== 2 * (inputDims.length - 2)) {\n      throw new Error('length of pads should be twice the length of data dimensions');\n    }\n\n    if (strides.length !== (inputDims.length - 2)) {\n      throw new Error('length of strides should be the length of data dimensions');\n    }\n\n    if (kernelShape.length !== (inputDims.length - 2)) {\n      throw new Error('length of kernel shapes should be the length of data dimensions');\n    }\n\n    for (let dim = 0; dim < inputDims.length - 2; dim++) {\n      PoolConvUtil.adjustPadAndReturnShape(\n          inputDims[dim + (isChannelLast ? 1 : 2)], strides[dim], dilations[dim], kernelShape[dim], pads, dim,\n          dim + inputDims.length - 2, autoPad);\n    }\n  }\n\n  /**\n   * Calculate the output shape for Pool ops based on input attributes. (Should be used only for Pool ops)\n   * @param isGlobalOperator If true, perform global pooling.\n   * @param inputDims The input tensor dimension. (inputs[0].dims)\n   * @param strides Stride along each axis.\n   * @param dilations Dilation along each axis.\n   * @param kernelShape The size of the kernel along each axis.\n   * @param pads Padding for the beginning and ending along each axis.\n   * @param autoPad DEPRECATED attribute supported for legacy models. Specifies how to implicitly calculate pads in each\n   *     dimension. Can take values NOTSET, SAME_UPPER, SAME_LOWER, or VALID.\n   */\n  static computePoolOutputShape(\n      isGlobalOperator: boolean, inputDims: readonly number[], strides: number[], dilations: number[],\n      kernelShape: number[], pads: number[], autoPad?: string): number[] {\n    if (inputDims.length <= 0) {\n      throw new Error('input shape must be of size greater than 0');\n    }\n\n    // Add batch size and number of channels of output\n    const outputDims = [inputDims[0], inputDims[1]];\n\n    PoolConvUtil.computeShapeHelper(\n        isGlobalOperator, inputDims, outputDims, strides, dilations, kernelShape, pads, autoPad);\n    return outputDims;\n  }\n\n  /**\n   * Calculate the output shape for Conv op based on input attributes. (Should be used only for Conv op)\n   * @param inputDims The input tensor dimension. (inputs[0].dims)\n   * @param filterDims The filter tensor dimension. (inputs[1].dims)\n   * @param strides Stride along each axis.\n   * @param kernelShape The size of the kernel along each axis.\n   * @param pads Padding for the beginning and ending along each axis.\n   * @param autoPad DEPRECATED attribute supported for legacy models. Specifies how to implicitly calculate pads in each\n   *     dimension. Can take values NOTSET, SAME_UPPER, SAME_LOWER, or VALID.\n   */\n  static computeConvOutputShape(\n      inputDims: readonly number[], filterDims: readonly number[], strides: number[], dilations: number[],\n      kernelShape: number[], pads: number[], autoPad?: string): number[] {\n    if (inputDims.length <= 0 || filterDims.length <= 0) {\n      throw new Error('invalid input tensor dims or invalid filter tensor dims');\n    }\n\n    // Add batch size and number of channels of output\n    const outputDims = [inputDims[0], filterDims[0]];\n\n    PoolConvUtil.computeShapeHelper(false, inputDims, outputDims, strides, dilations, kernelShape, pads, autoPad);\n    return outputDims;\n  }\n\n  // will compute output shapes for data dimensions ONLY (i.e.) no batch size and channels\n  // called by computePoolOutputShape() and computeConvOutputShape()\n  // adjust pads based on 'autoPad' attribute prior to shape computation\n  private static computeShapeHelper(\n      isGlobalOperator: boolean, inputDims: readonly number[], outputDims: number[], strides: readonly number[],\n      dilations: readonly number[], kernelShape: readonly number[], pads: number[], autoPad?: string) {\n    if (isGlobalOperator) {\n      for (let dim = 0; dim < inputDims.length - 2; dim++) {\n        outputDims.push(1);\n      }\n    } else {\n      for (let dim = 0; dim < inputDims.length - 2; dim++) {\n        outputDims.push(PoolConvUtil.adjustPadAndReturnShape(\n            inputDims[dim + 2], strides[dim], dilations[dim], kernelShape[dim], pads, dim, dim + inputDims.length - 2,\n            autoPad));\n      }\n    }\n  }\n\n  // helper for computeShapeHelper() and adjustPadsBasedOnAutoPad()\n  // adjusts pad value for given 'autoPad' string and computes output shape along a particular dimension\n  private static adjustPadAndReturnShape(\n      inSize: number, stride: number, dilation: number, kernel: number, pads: number[], padHeadIndex: number,\n      padTailIndex: number, autoPad?: string): number {\n    const dkernel = dilation * (kernel - 1) + 1;\n    if (autoPad && autoPad !== 'NOTSET') {\n      switch (autoPad) {\n        case 'VALID':\n          pads[padHeadIndex] = 0;\n          pads[padTailIndex] = 0;\n          return Math.floor(((inSize - dkernel) / stride) + 1);\n        case 'SAME_LOWER':\n        case 'SAME_UPPER':\n          if (dilation !== 1) {\n            throw new Error('Dilation not supported for SAME_UPPER or SAME_LOWER');\n          } else {\n            const legacyTargetSize = (inSize + stride - 1) / stride;\n            const padNeeded = (legacyTargetSize - 1) * stride + kernel - inSize;\n            pads[padHeadIndex] =\n                (autoPad === 'SAME_LOWER') ? Math.floor((padNeeded + 1) / 2) : Math.floor(padNeeded / 2);\n            pads[padTailIndex] = padNeeded - pads[padHeadIndex];\n            return Math.floor(((inSize + padNeeded - kernel) / stride) + 1);\n          }\n        default:\n          throw new Error('Unsupported AutoPad type');\n      }\n    } else {\n      return Math.floor(((inSize + pads[padHeadIndex] + pads[padTailIndex] - dkernel) / stride) + 1);\n    }\n  }\n}\n\nexport class GemmUtil {\n  // will make sure input shapes are compatible for this op\n  // and return back the shape of the output in the form of a tuple\n  // will throw exception if the input shapes are not compatible\n  static getShapeOfGemmResult(\n      leftShape: readonly number[], transLeft: boolean, rightShape: readonly number[], transRight: boolean,\n      biasShape?: readonly number[]): readonly number[] {\n    if (leftShape.length !== 2 || rightShape.length !== 2) {\n      throw new Error('shape need to be of size 2');\n    }\n\n    let M: number;\n    let K: number;\n    let N: number;\n\n    if (transLeft) {\n      M = leftShape[1];\n      K = leftShape[0];\n    } else {\n      M = leftShape[0];\n      K = leftShape[1];\n    }\n\n    let kDim = -1;\n\n    if (transRight) {\n      N = rightShape[0];\n      kDim = 1;\n    } else {\n      N = rightShape[1];\n      kDim = 0;\n    }\n\n    if (rightShape[kDim] !== K) {\n      throw new Error('dimension mismatch');\n    }\n\n    if (M <= 0 || N <= 0 || K <= 0) {\n      throw new Error('invalid shape specified');\n    }\n\n    if (biasShape && !BroadcastUtil.isValidBroadcast(biasShape, [M, N])) {\n      throw new Error('gemm: invalid bias shape for broadcast');\n    }\n\n    return [M, N, K];\n  }\n}\n\n\nexport const MIN_CLIP = -3.4028234663852886e+38;\nexport const MAX_CLIP = 3.4028234663852886e+38;\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nclass AttributeWithCacheKeyImpl {\n  constructor(attribute: Record<string, unknown>) {\n    Object.assign(this, attribute);\n  }\n\n  private _cacheKey: string;\n  public get cacheKey(): string {\n    if (!this._cacheKey) {\n      this._cacheKey =\n          Object.getOwnPropertyNames(this).sort().map(name => `${(this as Record<string, unknown>)[name]}`).join(';');\n    }\n    return this._cacheKey;\n  }\n}\n\nexport interface AttributeWithCacheKey {\n  readonly cacheKey: string;\n}\n\n/**\n * create a new object from the given attribute, and add a cacheKey property to it\n */\nexport const createAttributeWithCacheKey = <T extends Record<string, unknown>>(attribute: T): T&AttributeWithCacheKey =>\n    new AttributeWithCacheKeyImpl(attribute) as unknown as T & AttributeWithCacheKey;\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {WebGpuBackend} from '../backend-webgpu';\nimport {LOG_DEBUG} from '../log';\n\nimport {GpuData, GpuDataId, GpuDataType} from './types';\n\n/**\n * manages GpuDataId -> GpuBuffer\n */\nexport interface GpuDataManager {\n  /**\n   * copy data from CPU to GPU.\n   */\n  upload(id: GpuDataId, data: Uint8Array): void;\n  /**\n   * copy data from GPU to GPU.\n   */\n  memcpy(sourceId: GpuDataId, destinationId: GpuDataId): void;\n  /**\n   * create new data on GPU.\n   */\n  create(size: number, usage?: number): GpuData;\n  /**\n   * get GPU data by ID.\n   */\n  get(id: GpuDataId): GpuData|undefined;\n  /**\n   * release the data on GPU by ID.\n   *\n   * @return size of the data released\n   */\n  release(id: GpuDataId): number;\n  /**\n   * copy data from GPU to CPU.\n   */\n  download(id: GpuDataId): Promise<ArrayBufferLike>;\n\n  /**\n   * refresh the buffers that marked for release.\n   *\n   * when release() is called, the buffer is not released immediately. this is because we need to wait for the commands\n   * to be submitted to the GPU. this function is called after the commands are submitted so that the buffers can be\n   * actually released.\n   */\n  refreshPendingBuffers(): void;\n}\n\ninterface StorageCacheValue {\n  gpuData: GpuData;\n  originalSize: number;\n}\n\ninterface DownloadCacheValue {\n  data: Promise<ArrayBufferLike>;\n}\n\n/**\n * normalize the buffer size so that it fits the 128-bits (16 bytes) alignment.\n */\nconst calcNormalizedBufferSize = (size: number) => Math.ceil(size / 16) * 16;\n\nlet guid = 0;\nconst createNewGpuDataId = () => guid++;\n\nclass GpuDataManagerImpl implements GpuDataManager {\n  // GPU Data ID => GPU Data ( storage buffer )\n  storageCache: Map<GpuDataId, StorageCacheValue>;\n\n  // GPU Data ID => GPU Data ( read buffer )\n  downloadCache: Map<GpuDataId, DownloadCacheValue>;\n\n  // pending buffers for uploading ( data is unmapped )\n  private buffersForUploadingPending: GPUBuffer[];\n  // pending buffers for computing\n  private buffersPending: GPUBuffer[];\n\n  constructor(private backend: WebGpuBackend /* , private reuseBuffer: boolean */) {\n    this.storageCache = new Map();\n    this.downloadCache = new Map();\n    this.buffersForUploadingPending = [];\n    this.buffersPending = [];\n  }\n\n  upload(id: GpuDataId, data: Uint8Array): void {\n    const srcArrayBuffer = data.buffer;\n    const srcOffset = data.byteOffset;\n    const srcLength = data.byteLength;\n    const size = calcNormalizedBufferSize(srcLength);\n\n    // get destination gpu buffer\n    const gpuDataCache = this.storageCache.get(id);\n    if (!gpuDataCache) {\n      throw new Error('gpu data for uploading does not exist');\n    }\n    if (gpuDataCache.originalSize !== srcLength) {\n      throw new Error(`inconsistent data size. gpu data size=${gpuDataCache.originalSize}, data size=${srcLength}`);\n    }\n\n    // create gpu buffer\n    const gpuBufferForUploading = this.backend.device.createBuffer(\n        // eslint-disable-next-line no-bitwise\n        {mappedAtCreation: true, size, usage: GPUBufferUsage.MAP_WRITE | GPUBufferUsage.COPY_SRC});\n\n    // copy (upload) data\n    const arrayBuffer = gpuBufferForUploading.getMappedRange();\n    new Uint8Array(arrayBuffer).set(new Uint8Array(srcArrayBuffer, srcOffset, srcLength));\n    gpuBufferForUploading.unmap();\n\n\n    // GPU copy\n    const commandEncoder = this.backend.getCommandEncoder();\n    this.backend.endComputePass();\n    commandEncoder.copyBufferToBuffer(gpuBufferForUploading, 0, gpuDataCache.gpuData.buffer, 0, size);\n\n    LOG_DEBUG('verbose', () => `[WebGPU] GpuDataManager.upload(id=${id})`);\n\n    this.buffersForUploadingPending.push(gpuBufferForUploading);\n  }\n\n  memcpy(sourceId: GpuDataId, destinationId: GpuDataId): void {\n    // get source gpu buffer\n    const sourceGpuDataCache = this.storageCache.get(sourceId);\n    if (!sourceGpuDataCache) {\n      throw new Error('source gpu data for memcpy does not exist');\n    }\n    // get destination gpu buffer\n    const destinationGpuDataCache = this.storageCache.get(destinationId);\n    if (!destinationGpuDataCache) {\n      throw new Error('destination gpu data for memcpy does not exist');\n    }\n    if (sourceGpuDataCache.originalSize !== destinationGpuDataCache.originalSize) {\n      throw new Error('inconsistent source and destination gpu data size');\n    }\n    const size = calcNormalizedBufferSize(sourceGpuDataCache.originalSize);\n    // GPU copy\n    this.backend.getCommandEncoder().copyBufferToBuffer(\n        sourceGpuDataCache.gpuData.buffer, 0, destinationGpuDataCache.gpuData.buffer, 0, size);\n  }\n\n  // eslint-disable-next-line no-bitwise\n  create(size: number, usage = GPUBufferUsage.STORAGE | GPUBufferUsage.COPY_SRC | GPUBufferUsage.COPY_DST): GpuData {\n    // !!!\n    // !!! IMPORTANT: TODO: whether we should keep the storage buffer every time, or always create new ones.\n    // !!!                  This need to be figured out by performance test results.\n    // !!!\n\n    const bufferSize = calcNormalizedBufferSize(size);\n\n    // create gpu buffer\n    const gpuBuffer = this.backend.device.createBuffer({size: bufferSize, usage});\n\n    const gpuData = {id: createNewGpuDataId(), type: GpuDataType.default, buffer: gpuBuffer};\n    this.storageCache.set(gpuData.id, {gpuData, originalSize: size});\n\n    LOG_DEBUG('verbose', () => `[WebGPU] GpuDataManager.create(size=${size}) => id=${gpuData.id}`);\n    return gpuData;\n  }\n\n  get(id: GpuDataId): GpuData|undefined {\n    return this.storageCache.get(id)?.gpuData;\n  }\n\n  release(id: GpuDataId): number {\n    const cachedData = this.storageCache.get(id);\n    if (!cachedData) {\n      throw new Error('releasing data does not exist');\n    }\n\n    LOG_DEBUG('verbose', () => `[WebGPU] GpuDataManager.release(id=${id}), gpuDataId=${cachedData.gpuData.id}`);\n\n    this.storageCache.delete(id);\n    this.buffersPending.push(cachedData.gpuData.buffer);\n    // cachedData.gpuData.buffer.destroy();\n\n    const downloadingData = this.downloadCache.get(id);\n    if (downloadingData) {\n      this.downloadCache.delete(id);\n    }\n\n    return cachedData.originalSize;\n  }\n\n  async download(id: GpuDataId): Promise<ArrayBufferLike> {\n    const downloadData = this.downloadCache.get(id);\n    if (downloadData) {\n      return downloadData.data;\n    }\n\n    const cachedData = this.storageCache.get(id);\n    if (!cachedData) {\n      throw new Error('data does not exist');\n    }\n\n    const commandEncoder = this.backend.getCommandEncoder();\n    this.backend.endComputePass();\n    const gpuReadBuffer = this.backend.device.createBuffer(\n        // eslint-disable-next-line no-bitwise\n        {size: cachedData.originalSize, usage: GPUBufferUsage.COPY_DST | GPUBufferUsage.MAP_READ});\n    commandEncoder.copyBufferToBuffer(\n        cachedData.gpuData.buffer /* source buffer */, 0 /* source offset */, gpuReadBuffer /* destination buffer */,\n        0 /* destination offset */, cachedData.originalSize /* size */\n    );\n    this.backend.flush();\n\n    const readDataPromise = new Promise<ArrayBuffer>((resolve) => {\n      gpuReadBuffer.mapAsync(GPUMapMode.READ).then(() => {\n        const data = gpuReadBuffer.getMappedRange().slice(0);\n        gpuReadBuffer.destroy();\n        resolve(data);\n      });\n    });\n\n    this.downloadCache.set(id, {data: readDataPromise});\n\n    return readDataPromise;\n  }\n\n  refreshPendingBuffers(): void {\n    for (const buffer of this.buffersForUploadingPending) {\n      buffer.destroy();\n    }\n    for (const buffer of this.buffersPending) {\n      buffer.destroy();\n    }\n  }\n}\n\nexport const createGpuDataManager = (...args: ConstructorParameters<typeof GpuDataManagerImpl>): GpuDataManager =>\n    new GpuDataManagerImpl(...args);\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport * as binaryOps from './ops/binary-op';\nimport {conv, parseConvAttributes} from './ops/conv';\nimport {gemm, parseGemmAttributes} from './ops/gemm';\nimport {matMul} from './ops/matmul';\nimport * as pool from './ops/pool';\nimport {parseTransposeAttributes, transpose} from './ops/transpose';\nimport * as unaryOps from './ops/unary-op';\nimport {ComputeContext} from './types';\n\nexport type RunFunction = (context: ComputeContext, attribute?: unknown) => void;\nexport type ParseAttributeFunction = (attributeRaw: unknown) => unknown;\nexport type OperatorImplementation = [RunFunction]|[RunFunction, ParseAttributeFunction];\n\nexport const WEBGPU_OP_RESOLVE_RULES: Map<string, OperatorImplementation> = new Map([\n  ['Abs', [unaryOps.abs]],\n  ['Acos', [unaryOps.acos]],\n  ['Acosh', [unaryOps.acosh]],\n  ['Add', [binaryOps.add]],\n  ['Asin', [unaryOps.asin]],\n  ['Asinh', [unaryOps.asinh]],\n  ['Atan', [unaryOps.atan]],\n  ['Atanh', [unaryOps.atanh]],\n  // TODO: support new attributes for AveragePool-10\n  ['AveragePool', [pool.averagePool, pool.parseAveragePoolAttributes]],\n  ['Ceil', [unaryOps.ceil]],\n  ['ClipV10', [unaryOps.clipV10]],\n  ['Clip', [unaryOps.clip]],\n  ['Conv', [conv, parseConvAttributes]],\n  ['Cos', [unaryOps.cos]],\n  ['Cosh', [unaryOps.cosh]],\n  ['Div', [binaryOps.div]],\n  ['Elu', [unaryOps.elu, unaryOps.parseAlphaAttributes]],\n  ['Erf', [unaryOps.erf]],\n  ['Exp', [unaryOps.exp]],\n  ['Floor', [unaryOps.floor]],\n  ['Gemm', [gemm, parseGemmAttributes]],\n  ['GlobalAveragePool', [pool.globalAveragePool, pool.parseGlobalAveragePoolAttributes]],\n  ['GlobalMaxPool', [pool.globalMaxPool, pool.parseGlobalMaxPoolAttributes]],\n  ['LeakyRelu', [unaryOps.leakyRelu, unaryOps.parseAlphaAttributes]],\n  ['MatMul', [matMul]],\n  // TODO: support new attributes for MaxPool-8 and MaxPool-10\n  ['MaxPool', [pool.maxPool, pool.parseMaxPoolAttributes]],\n  ['Mul', [binaryOps.mul]],\n  ['Neg', [unaryOps.neg]],\n  ['Pow', [binaryOps.pow]],\n  ['Reciprocal', [unaryOps.reciprocal]],\n  ['Relu', [unaryOps.relu]],\n  ['Sigmoid', [unaryOps.sigmoid]],\n  ['Sin', [unaryOps.sin]],\n  ['Sinh', [unaryOps.sinh]],\n  ['Sqrt', [unaryOps.sqrt]],\n  ['Sub', [binaryOps.sub]],\n  ['Tan', [unaryOps.tan]],\n  ['Tanh', [unaryOps.tanh]],\n  ['ThresholdedRelu', [unaryOps.thresholdedRelu, unaryOps.parseAlphaAttributes]],\n  ['Transpose', [transpose, parseTransposeAttributes]],\n]);\n","/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n// sampled from [@tensorflow/tfjs] tfjs-backend-webgpu/src/activation_util.ts\n//\n// modified to fit the needs of the project\n\nexport declare type Activation = 'linear' | 'relu' | 'prelu' | 'elu' | 'relu6' | 'leakyrelu' | 'sigmoid';\n\nexport const typeSnippet = (component: number) => {\n  switch (component) {\n    case 1:\n      return 'f32';\n    case 2:\n      return 'vec2<f32>';\n    case 3:\n      return 'vec3<f32>';\n    case 4:\n      return 'vec4<f32>';\n    default:\n      throw new Error(`${component}-component is not supported.`);\n  }\n};\n\nexport const activationFnSnippet =\n    (activation?: Activation, _hasPreluActivationWeights = false, _packed = false, _coordsLength = 3): string => {\n      if (!activation) {\n        return '';\n      }\n\n      // TODO: add implementations\n      return '';\n    };\n\nexport const biasActivationSnippet = (hasBias: boolean, activation?: Activation): string => `\n      ${hasBias ? 'value = value + getBiasByOutputCoords(coords);' : ''}\n      ${activation ? 'value = activation(value, coords);' : ''}\n      `;\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n// sampled from [@tensorflow/tfjs] tfjs-backend-webgpu/src/conv2d_mm_webgpu.ts\n//\n// modified to fit the needs of the project\n\nimport {LOG_DEBUG} from '../../../log';\nimport {TensorView} from '../../../tensor';\nimport {ShapeUtil} from '../../../util';\nimport {GpuDataType, ProgramInfo, ProgramMetadata} from '../../types';\nimport {ConvAttributes} from '../conv';\n\nimport {Activation, activationFnSnippet, biasActivationSnippet, typeSnippet} from './activation_util';\nimport {utilFunctions} from './conv_util';\nimport {makeMatMulPackedSource, makeMatMulPackedVec4Source} from './matmul_packed_webgpu';\n\nconst conv2dCommonSnippet =\n    (isChannelsLast: boolean, fitAOuter: boolean, fitBOuter: boolean, fitInner: boolean, addBias = false,\n     activation?: Activation, hasPreluActivationWeights = false, innerElementSizeX = 4, innerElementSizeW = 4,\n     innerElementSize = 4): string => {\n      const getXSnippet = (innerElementSize: number) => {\n        switch (innerElementSize) {\n          case 1:\n            return 'resData = x[xIndex];';\n          case 3:\n            return 'resData = vec3<f32>(x[xIndex], x[xIndex + 1], x[xIndex + 2]);';\n          case 4:\n            return 'resData = x[xIndex / 4];';\n          default:\n            throw new Error(`innerElementSize ${innerElementSize} is not supported.`);\n        }\n      };\n      const getWSnippet = (innerElementSize: number) => {\n        switch (innerElementSize) {\n          case 1:\n            return 'return w[row * wShape[3] + colIn];';\n          case 4:\n            return 'return w[row * wShape[3] / 4 + colIn];';\n          default:\n            throw new Error(`innerElementSize ${innerElementSize} is not supported.`);\n        }\n      };\n      const coordASnippet = isChannelsLast ? `\n    let coord = vec4<i32>(batch, xRow, xCol, xCh);\n    ` :\n                                             `\n    let coord = vec4<i32>(batch, xCh, xRow, xCol);\n    `;\n\n      const coordResSnippet = isChannelsLast ? `\n    let coords = vec4<i32>(\n      batch,\n      row / outWidth,\n      row % outWidth,\n      col);\n    ` :\n                                               `\n    let coords = vec4<i32>(\n      batch,\n      row,\n      col / outWidth,\n      col % outWidth);\n    `;\n\n      const xHeight = isChannelsLast ? 'xShape[1]' : 'xShape[2]';\n      const xWidth = isChannelsLast ? 'xShape[2]' : 'xShape[3]';\n      const row = isChannelsLast ? 'row' : 'col';\n      const col = isChannelsLast ? 'col' : 'row';\n      const readXSnippet = `\n    let inChannels = wShape[2];\n    let outWidth = ${isChannelsLast ? 'outShape[2]' : 'outShape[3]'};\n    let outRow = ${row} / outWidth;\n    let outCol = ${row} % outWidth;\n\n    let WRow = ${col} / (filterDims[1] * inChannels);\n    let WCol = ${col} / inChannels % filterDims[1];\n    let xRow = outRow * stride[0] + dilation[0] * WRow - pad[0];\n    let xCol = outCol * stride[1] + dilation[1] * WCol - pad[1];\n    let xCh = ${col} % inChannels;\n    var resData = ${typeSnippet(innerElementSizeX)}(0.0);\n    // The bounds checking is always needed since we use it to pad zero for\n    // the 'same' padding type.\n    if (xRow >= 0 && xRow < ${xHeight} && xCol >= 0 && xCol < ${xWidth}) {\n      ${coordASnippet}\n      let xIndex = getIndexFromCoords4D(coord, xShape);\n      ${getXSnippet(innerElementSizeX)}\n    }\n    return resData;`;\n\n      const sampleX = isChannelsLast ? (fitAOuter && fitInner ? `\n    let col = colIn * ${innerElementSizeX};\n    ${readXSnippet}` :\n                                                                `\n    let col = colIn * ${innerElementSizeX};\n    if (row < dimAOuter && col < dimInner) {\n      ${readXSnippet}\n    }\n    return ${typeSnippet(innerElementSizeX)}(0.0);`) :\n                                       (fitInner && fitBOuter ? `\n    let col = colIn * ${innerElementSizeX};\n    ${readXSnippet}` :\n                                                                `\n    let col = colIn * ${innerElementSizeX};\n    if (row < dimInner && col < dimBOuter) {\n      ${readXSnippet}\n    }\n    return ${typeSnippet(innerElementSizeX)}(0.0);`);\n\n      const sampleW = `${getWSnippet(innerElementSizeW)}`;\n\n      const resType = typeSnippet(innerElementSize);\n      const aType = isChannelsLast ? typeSnippet(innerElementSizeX) : typeSnippet(innerElementSizeW);\n      const bType = isChannelsLast ? typeSnippet(innerElementSizeW) : typeSnippet(innerElementSizeX);\n      const userCode = `\n    ${activationFnSnippet(activation, hasPreluActivationWeights, innerElementSize === 4, 4)}\n    fn mm_readA(batch: i32, row : i32, colIn : i32) -> ${aType} {\n      ${isChannelsLast ? sampleX : sampleW}\n    }\n\n    fn mm_readB(batch: i32, row : i32, colIn : i32) -> ${bType} {\n      ${isChannelsLast ? sampleW : sampleX}\n    }\n\n    fn mm_write(batch: i32, row : i32, colIn : i32, valueIn : ${resType}) {\n      let col = colIn * ${innerElementSize};\n      if (row < dimAOuter && col < dimBOuter)\n      {\n      var value = valueIn;\n      let outWidth = ${isChannelsLast ? 'outShape[2]' : 'outShape[3]'};\n      ${coordResSnippet}\n      ${biasActivationSnippet(addBias, activation)}\n      setOutputAtCoords(coords[0], coords[1], coords[2], coords[3], value);\n      }\n    }`;\n      return userCode;\n    };\n\nexport const createConv2DMatMulProgramInfo =\n    (inputs: readonly TensorView[], metadata: ProgramMetadata, attributes: ConvAttributes,\n     outputShape: readonly number[], dimAOuter: number, dimBOuter: number, dimInner: number, hasBias: boolean,\n     sequentialAccessByThreads: boolean): ProgramInfo => {\n      const isChannelsLast = attributes.format === 'NHWC';\n      const inChannels = isChannelsLast ? inputs[0].dims[3] : inputs[0].dims[1];\n      const batchSize = outputShape[0];\n      const outWidth = isChannelsLast ? outputShape[2] : outputShape[3];\n      const outHeight = isChannelsLast ? outputShape[1] : outputShape[2];\n      const outChannels = isChannelsLast ? outputShape[3] : outputShape[1];\n      const isVec4 = (((inChannels % 4 === 0 || inChannels % 3 === 0) && isChannelsLast) ||\n                      (outWidth % 4 === 0 && !isChannelsLast)) &&\n          outChannels % 4 === 0;\n\n      // TODO: fine tune size\n      const dispatchX = isChannelsLast ? outChannels : outWidth * outHeight;\n      const dispatchY = isChannelsLast ? outWidth * outHeight : outChannels;\n      const workGroupSize: [number, number, number] =\n          isVec4 ? [8, 8, 1] : [dispatchX <= 4 ? 4 : 16, dispatchX > 4 && dispatchY <= 4 ? 4 : 16, 1];\n      const elementsPerThread =\n          isVec4 ? [4, 4, 1] : [dispatchX <= 4 ? 1 : 2, dispatchX > 4 && dispatchY <= 4 ? 1 : 2, 1];\n      const dispatch = [\n        Math.ceil(dispatchX / workGroupSize[0] / elementsPerThread[0]),\n        Math.ceil(dispatchY / workGroupSize[1] / elementsPerThread[1]),\n        Math.ceil(batchSize / workGroupSize[2] / elementsPerThread[1])\n      ];\n\n      LOG_DEBUG('verbose', () => `[conv2d_mm_webgpu] dispatch = ${dispatch}`);\n\n      const innerElementSize = isVec4 ? (isChannelsLast && inChannels % 4 !== 0 ? 3 : 4) : elementsPerThread[0];\n\n      const tileAOuter = workGroupSize[1] * elementsPerThread[1];\n      const tileBOuter = workGroupSize[0] * elementsPerThread[0];\n      const tileInner = Math.max(workGroupSize[0] * innerElementSize, workGroupSize[1]);\n\n      const fitAOuter = dimAOuter % tileAOuter === 0;\n      const fitBOuter = dimBOuter % tileBOuter === 0;\n      const fitInner = dimInner % tileInner === 0;\n\n      const elementsSize = isVec4 ? [innerElementSize, 4, 4] : [1, 1, 1];\n\n      const declareInputs = [\n        `@group(0) @binding(0) var<storage, read> x: array<${isVec4 && innerElementSize === 4 ? 'vec4<f32>' : 'f32'}>;`,\n        `@group(0) @binding(1) var<storage, read> w: array<${isVec4 ? 'vec4<f32>' : 'f32'}>;`\n      ];\n      let declareFunctions = `\n      fn setOutputAtIndex(flatIndex : i32, value : ${isVec4 ? 'vec4<f32>' : 'f32'}) {\n        result[flatIndex] = ${isVec4 ? 'vec4<f32>' : 'f32'}(value);\n      }\n      fn setOutputAtCoords(d0 : i32, d1 : i32, d2 : i32, d3 : i32, value : ${isVec4 ? 'vec4<f32>' : 'f32'}) {\n        let flatIndex = getOutputIndexFromCoords(vec4<i32>(d0, d1, d2, d3));\n        setOutputAtIndex(flatIndex ${isVec4 ? '/ 4' : ''}, value);\n      }`;\n      if (hasBias) {\n        declareInputs.push(`@group(0) @binding(2) var<storage, read> bias: array<${isVec4 ? 'vec4<f32>' : 'f32'}>;`);\n        declareFunctions += `\n        fn getBiasByOutputCoords(coords : vec4<i32>) -> ${isVec4 ? 'vec4<f32>' : 'f32'} {\n          return bias[coords.${isChannelsLast ? 'w' : 'y'}${isVec4 ? '/ 4' : ''}];\n        }`;\n      }\n\n      return {\n        ...metadata,\n        outputs: [{dims: outputShape, dataType: inputs[0].dataType, gpuDataType: GpuDataType.default}],\n        dispatchGroup: () => ({x: dispatch[0], y: dispatch[1], z: dispatch[2]}),\n        getShaderSource: () => `\n        ${utilFunctions}\n        //struct Uniforms { xShape : vec4<i32>, wShape : vec4<i32>, outShape : vec4<i32>,\n        //  outShapeStrides: vec3<i32>, filterDims : vec2<i32>, pad : vec2<i32>, stride : vec2<i32>,\n        //  dilation : vec2<i32>, dimAOuter : i32, dimBOuter : i32, dimInner : i32 };\n        ${declareInputs.join('')}\n        @group(0) @binding(${declareInputs.length}) var<storage, read_write> result: array<${\n            isVec4 ? 'vec4<f32>' : 'f32'}>;\n        //@group(0) @binding(${declareInputs.length + 1}) var<uniform> uniforms: Uniforms;\n\n        const xShape : vec4<i32> = vec4<i32>(${inputs[0].dims.join(',')});\n        const wShape : vec4<i32> = vec4<i32>(${inputs[1].dims.join(',')});\n        const outShape : vec4<i32> = vec4<i32>(${outputShape.join(',')});\n        const outShapeStrides : vec3<i32> = vec3<i32>(${ShapeUtil.computeStrides(outputShape).slice(0, 3).join(',')});\n        const filterDims : vec2<i32> = vec2<i32>(${attributes.kernelShape[0]}, ${attributes.kernelShape[1]});\n        const pad : vec2<i32> = vec2<i32>(${attributes.pads[0]}, ${attributes.pads[1]});\n        const stride : vec2<i32> = vec2<i32>(${attributes.strides[0]}, ${attributes.strides[1]});\n        const dilation : vec2<i32> = vec2<i32>(${attributes.dilations[0]}, ${attributes.dilations[1]});\n        const dimAOuter : i32 = ${dimAOuter};\n        const dimBOuter : i32 = ${dimBOuter};\n        const dimInner : i32 = ${dimInner};\n        ${declareFunctions}\n        ${\n            conv2dCommonSnippet(\n                isChannelsLast, fitAOuter, fitBOuter, fitInner, hasBias, undefined, false, elementsSize[0],\n                elementsSize[1], elementsSize[2])}\n            ${\n            isVec4 ? makeMatMulPackedVec4Source(elementsPerThread, workGroupSize, !isChannelsLast, tileInner) :\n                     makeMatMulPackedSource(\n                         elementsPerThread, workGroupSize, !isChannelsLast, tileInner, false, undefined,\n                         sequentialAccessByThreads)}`\n      };\n    };\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n// sampled from [@tensorflow/tfjs] tfjs-core/src/ops/conv_util.ts\n//\n// modified to fit the needs of the project\n\nexport const utilFunctions = `\nfn getIndexFromCoords4D(coords : vec4<i32>, shape : vec4<i32>) -> i32 {\n  return dot(coords, vec4<i32>(\n      shape.y * shape.z * shape.w, shape.z * shape.w, shape.w, 1));\n}\nfn getOutputIndexFromCoords(coords : vec4<i32>) -> i32 {\n  return dot(coords, vec4<i32>(\n    outShapeStrides.x, outShapeStrides.y, outShapeStrides.z, 1));\n}\n`;\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n// sampled from [@tensorflow/tfjs] tfjs-backend-webgpu/src/matmul_packed_webgpu.ts\n//\n// modified to fit the needs of the project\n\nconst writeDataToSubAVec4Snippet = (transpose: boolean) => {\n  if (transpose) {\n    return `\n        mm_Asub[inputRow][inputCol] = mm_readA(batch,\n          kStart + inputRow,\n          globalRowStart / innerElementSize + inputCol);\n        `;\n\n  } else {\n    return `\n        mm_Asub[inputRow][inputCol] = mm_readA(batch,\n          globalRow + innerRow,\n          kStart / innerElementSize + inputCol);\n        `;\n  }\n};\n\nconst calculateResultSnippet = (transposeA: boolean, innerElementSize: number) => {\n  if (transposeA) {\n    return `\n        let ACached0 = mm_Asub[k * innerElementSize][localRow];\n        let ACached1 = mm_Asub[k * innerElementSize + 1][localRow];\n        let ACached2 = mm_Asub[k * innerElementSize + 2][localRow];\n        ${innerElementSize === 3 ? '' : 'let ACached3 = mm_Asub[k * innerElementSize + 3][localRow];'}\n        for (var i = 0; i < rowPerThread; i = i + 1) {\n          acc[i] = BCached0 * ACached0[i] + acc[i];\n          acc[i] = BCached1 * ACached1[i] + acc[i];\n          acc[i] = BCached2 * ACached2[i] + acc[i];\n          ${innerElementSize === 3 ? '' : 'acc[i] = BCached3 * ACached3[i] + acc[i];'}\n        }`;\n  } else {\n    return `\n        for (var i = 0; i < rowPerThread; i = i + 1) {\n          let ACached = mm_Asub[tileRow + i][k];\n          acc[i] = BCached0 * ACached.x + acc[i];\n          acc[i] = BCached1 * ACached.y + acc[i];\n          acc[i] = BCached2 * ACached.z + acc[i];\n          ${innerElementSize === 3 ? '' : 'acc[i] = BCached3 * ACached.w + acc[i];'}\n        }`;\n  }\n};\n\nexport const makeMatMulPackedVec4Source =\n    (workPerThread: number[], workgroupSize: [number, number, number], transposeA = false, tileInner = 32,\n     splitK = false, splitedDimInner = 32, isVectorA = false): string => {\n      const tileAOuter = workgroupSize[1] * workPerThread[1];\n      const tileBOuter = workgroupSize[0] * workPerThread[0];\n      const tileAWidth = transposeA ? tileAOuter : tileInner;\n      const tileAHight = transposeA ? tileInner : tileAOuter;\n      const innerElementSize = tileAWidth / workgroupSize[0];\n      const rowPerThreadB = tileInner / workgroupSize[1];\n\n      if (!(((transposeA && innerElementSize === 4 && workPerThread[1] === 4) ||\n             (!transposeA && (innerElementSize === 3 || innerElementSize === 4))) &&\n            tileAWidth % workgroupSize[0] === 0 && tileInner % workgroupSize[1] === 0 && workPerThread[0] === 4)) {\n        throw new Error(`If transposeA ${transposeA} is true, innerElementSize ${\n            innerElementSize} and workPerThread[1] ${workPerThread[1]} must be 4.\n      Otherwise, innerElementSize ${innerElementSize} must be 3 or 4.\n  tileAWidth ${tileAWidth} must be divisible by workgroupSize[0]${workgroupSize[0]}. tileInner ${\n            tileInner} must be divisible by workgroupSize[1] ${workgroupSize[1]}. colPerThread ${\n            workPerThread[0]} must be 4.`);\n      }\n      return `\nvar<workgroup> mm_Asub : array<array<vec${innerElementSize}<f32>, ${tileAWidth / innerElementSize}>, ${tileAHight}>;\nvar<workgroup> mm_Bsub : array<array<vec4<f32>, ${tileBOuter / workPerThread[0]}>, ${tileInner}>;\n\nconst rowPerThread = ${workPerThread[1]};\nconst colPerThread = ${workPerThread[0]};\nconst innerElementSize = ${innerElementSize};\nconst tileInner = ${tileInner};\n\n@compute @workgroup_size(${workgroupSize[0]}, ${workgroupSize[1]}, ${workgroupSize[2]})\nfn main(@builtin(local_invocation_id) localId : vec3<u32>,\n        @builtin(global_invocation_id) globalId : vec3<u32>,\n        @builtin(workgroup_id) workgroupId : vec3<u32>) {\n  let localRow = i32(localId.y);\n  let tileRow = ${isVectorA ? '0' : 'localRow * rowPerThread'};\n  let tileCol = i32(localId.x);\n\n  let globalRow = ${isVectorA ? '0' : 'i32(globalId.y) * rowPerThread'};\n  let globalCol = i32(globalId.x);\n  let batch = ${splitK ? '0' : 'i32(globalId.z)'};\n  let globalRowStart = i32(workgroupId.y) * ${tileAOuter};\n\n  let numTiles = ${splitK ? `${Math.ceil(splitedDimInner / tileInner)}` : '(dimInner - 1) / tileInner + 1'};\n  var kStart = ${splitK ? `i32(globalId.z) * ${splitedDimInner}` : '0'};\n\n  var acc: array<vec4<f32>, rowPerThread>;\n\n  // Loop over shared dimension.\n  let tileRowB = localRow * ${rowPerThreadB};\n  for (var t = 0; t < numTiles; t = t + 1) {\n      // Load one tile of A into local memory.\n      for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {\n          let inputRow = tileRow + innerRow;\n          let inputCol = tileCol;\n          ${writeDataToSubAVec4Snippet(transposeA)}\n      }\n\n      // Load one tile of B into local memory.\n      for (var innerRow = 0; innerRow < ${rowPerThreadB}; innerRow = innerRow + 1) {\n          let inputRow = tileRowB + innerRow;\n          let inputCol = tileCol;\n          mm_Bsub[inputRow][inputCol] = mm_readB(batch, kStart + inputRow, globalCol);\n      }\n      kStart = kStart + tileInner;\n      workgroupBarrier();\n\n      // Compute acc values for a single thread.\n      for (var k = 0; k < tileInner / innerElementSize; k = k + 1) {\n          let BCached0 = mm_Bsub[k * innerElementSize][tileCol];\n          let BCached1 = mm_Bsub[k * innerElementSize + 1][tileCol];\n          let BCached2 = mm_Bsub[k * innerElementSize + 2][tileCol];\n          ${innerElementSize === 3 ? '' : 'let BCached3 = mm_Bsub[k * innerElementSize + 3][tileCol];'}\n\n          ${calculateResultSnippet(transposeA, innerElementSize)}\n      }\n\n      workgroupBarrier();\n  }\n\n  for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {\n      mm_write(batch, globalRow + innerRow, globalCol, acc[innerRow]);\n  }\n}`;\n    };\n\nconst writeDataToSubASnippet = (transpose: boolean) => {\n  if (transpose) {\n    return `\n            mm_Asub[inputRow][inputCol] = mm_readA(batch,\n              kStart + inputRow,\n              globalRowStart + inputCol);\n            `;\n\n  } else {\n    return `\n            mm_Asub[inputRow][inputCol] = mm_readA(batch,\n              globalRowStart + inputRow,\n              kStart + inputCol);\n            `;\n  }\n};\n\nconst readDataFromSubASnippet = (transposeA: boolean) =>\n    transposeA ? 'let ACached = mm_Asub[k][tileRow + innerRow];' : 'let ACached = mm_Asub[tileRow + innerRow][k];';\n\n// sequentialAccessByThreads means sequential data in memory is accessed by\n// threads, instead of a single thread (default behavior).\nexport const makeMatMulPackedSource =\n    (workPerThread: number[], workgroupSize: [number, number, number], transposeA = false, tileInner = 32,\n     splitK = false, splitedDimInner = 32, sequentialAccessByThreads = false): string => {\n      const tileAOuter = workPerThread[1] * workgroupSize[1];\n      const tileBOuter = workPerThread[0] * workgroupSize[0];\n      const tileAWidth = transposeA ? tileAOuter : tileInner;\n      const tileAHight = transposeA ? tileInner : tileAOuter;\n\n      if (!(tileAHight % workgroupSize[1] === 0 && tileAWidth % workgroupSize[0] === 0 &&\n            tileInner % workgroupSize[1] === 0)) {\n        throw new Error(`tileAHight ${tileAHight} must be divisible by workgroupSize[1]${\n            workgroupSize[1]}, tileAWidth ${tileAWidth} must be divisible by workgroupSize[0]${\n            workgroupSize[0]}, tileInner ${tileInner} must be divisible by workgroupSize[1]${workgroupSize[1]}`);\n      }\n      const rowPerThreadA = tileAHight / workgroupSize[1];\n      const colPerThreadA = tileAWidth / workgroupSize[0];\n      const rowPerThreadB = tileInner / workgroupSize[1];\n      const matmulSnippet = sequentialAccessByThreads ?\n          `\n    let localRow = i32(localId.y);\n    let localCol = i32(localId.x);\n    let globalRowStart = i32(workgroupId.y) * ${tileAOuter};\n    let globalColStart = i32(workgroupId.x) * ${tileBOuter};\n\n    // Loop over shared dimension.\n    for (var t = 0; t < numTiles; t = t + 1) {\n      // Load one tile of A into local memory.\n      for (var inputRow = localRow; inputRow < ${tileAHight}; inputRow = inputRow + ${workgroupSize[1]}) {\n        for (var inputCol = localCol; inputCol < ${tileAWidth}; inputCol = inputCol + ${workgroupSize[0]}) {\n          ${writeDataToSubASnippet(transposeA)}\n        }\n      }\n      // Load one tile of B into local memory.\n      for (var inputRow = localRow; inputRow < ${tileInner}; inputRow = inputRow + ${workgroupSize[1]}) {\n            for (var inputCol = localCol; inputCol < ${tileBOuter}; inputCol = inputCol + ${workgroupSize[0]}) {\n          mm_Bsub[inputRow][inputCol] = mm_readB(batch,\n            kStart + inputRow,\n            globalColStart + inputCol);\n        }\n      }\n      kStart = kStart + tileInner;\n      workgroupBarrier();\n\n      // Compute acc values for a single thread.\n      var BCached : array<f32, colPerThread>;\n      for (var k = 0; k < tileInner; k = k + 1) {\n        for (var inner = 0; inner < colPerThread; inner = inner + 1) {\n          BCached[inner] = mm_Bsub[k][localCol + inner * ${workgroupSize[0]}];\n        }\n        for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {\n          let ACached = ${\n              transposeA ? `mm_Asub[k][localRow + innerRow * ${workgroupSize[1]}];` :\n                           `mm_Asub[localRow + innerRow * ${workgroupSize[1]}][k];`}\n          for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {\n            acc[innerRow][innerCol] = acc[innerRow][innerCol] +\n                ACached * BCached[innerCol];\n          }\n        }\n      }\n      workgroupBarrier();\n    }\n    for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {\n      let gRow = globalRowStart + localRow + innerRow * ${workgroupSize[1]};\n      for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {\n        let gCol = globalColStart + localCol + innerCol * ${workgroupSize[0]};\n        mm_write(batch, gRow, gCol, acc[innerRow][innerCol]);\n      }\n    }\n    ` :\n          `\nlet tileRow = i32(localId.y) * rowPerThread;\nlet tileCol = i32(localId.x) * colPerThread;\n\nlet globalRow = i32(globalId.y) * rowPerThread;\nlet globalCol = i32(globalId.x) * colPerThread;\nlet globalRowStart = i32(workgroupId.y) * ${tileAOuter};\n\nlet tileRowA = i32(localId.y) * ${rowPerThreadA};\nlet tileColA = i32(localId.x) * ${colPerThreadA};\nlet tileRowB = i32(localId.y) * ${rowPerThreadB};\n// Loop over shared dimension.\nfor (var t = 0; t < numTiles; t = t + 1) {\n  // Load one tile of A into local memory.\n  for (var innerRow = 0; innerRow < ${rowPerThreadA}; innerRow = innerRow + 1) {\n    for (var innerCol = 0; innerCol < ${colPerThreadA}; innerCol = innerCol + 1) {\n      let inputRow = tileRowA + innerRow;\n      let inputCol = tileColA + innerCol;\n      ${writeDataToSubASnippet(transposeA)}\n    }\n  }\n\n  // Load one tile of B into local memory.\n  for (var innerRow = 0; innerRow < ${rowPerThreadB}; innerRow = innerRow + 1) {\n    for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {\n      let inputRow = tileRowB + innerRow;\n      let inputCol = tileCol + innerCol;\n      mm_Bsub[inputRow][inputCol] = mm_readB(batch,\n        kStart + inputRow,\n        globalCol + innerCol);\n    }\n  }\n  kStart = kStart + tileInner;\n  workgroupBarrier();\n\n  // Compute acc values for a single thread.\n  var BCached : array<f32, colPerThread>;\n  for (var k = 0; k < tileInner; k = k + 1) {\n    for (var inner = 0; inner < colPerThread; inner = inner + 1) {\n      BCached[inner] = mm_Bsub[k][tileCol + inner];\n    }\n\n    for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {\n      ${readDataFromSubASnippet(transposeA)}\n      for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {\n        acc[innerRow][innerCol] = acc[innerRow][innerCol] + ACached * BCached[innerCol];\n      }\n    }\n  }\n\n  workgroupBarrier();\n}\n\nfor (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {\n  for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {\n    mm_write(batch, globalRow + innerRow, globalCol + innerCol,\n        acc[innerRow][innerCol]);\n  }\n}\n`;\n\n      return `\n  var<workgroup> mm_Asub : array<array<f32, ${tileAWidth}>, ${tileAHight}>;\n  var<workgroup> mm_Bsub : array<array<f32, ${tileBOuter}>, ${tileInner}>;\n  const rowPerThread = ${workPerThread[1]};\n  const colPerThread = ${workPerThread[0]};\n  const tileInner = ${tileInner};\n\n@compute @workgroup_size(${workgroupSize[0]}, ${workgroupSize[1]}, ${workgroupSize[2]})\nfn main(@builtin(local_invocation_id) localId : vec3<u32>,\n        @builtin(global_invocation_id) globalId : vec3<u32>,\n        @builtin(workgroup_id) workgroupId : vec3<u32>) {\n    let batch = ${splitK ? '0' : 'i32(globalId.z)'};\n    let numTiles = ${splitK ? `${Math.ceil(splitedDimInner / tileInner)}` : '(dimInner - 1) / tileInner + 1'};\n    var kStart = ${splitK ? `i32(globalId.z) * ${splitedDimInner}` : '0'};\n\n    var acc : array<array<f32, colPerThread>, rowPerThread>;\n\n    // Without this initialization strange values show up in acc.\n    for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {\n      for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {\n        acc[innerRow][innerCol] = 0.0;\n      }\n    }\n    ${matmulSnippet}\n  }\n`;\n    };\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {TensorView} from '../../tensor';\nimport {BroadcastUtil, ShapeUtil} from '../../util';\nimport {ComputeContext, GpuDataType, ProgramInfo, ProgramInfoLoader, ProgramMetadata} from '../types';\n\nimport {createIndicesHelper, ShaderHelper} from './common';\n\ntype BuiltinFunctionName = string;\ntype BinaryCustomExpression = (expressionA: string, expressionB: string) => string;\ntype BinaryFunctionCall = BuiltinFunctionName|BinaryCustomExpression|{\n  scalar: BinaryCustomExpression;\n  vector: BinaryCustomExpression;\n};\n\nconst createBinaryOpProgramShader =\n    (shaderHelper: ShaderHelper, dimsA: readonly number[], dimsB: readonly number[], dimsOutput: readonly number[],\n     vectorize: boolean, doBroadcast: boolean, funcCall: BinaryFunctionCall, additionalImplementation?: string,\n     typeA = 'f32', typeB = 'f32', typeOutput = 'f32') => {\n      const outputSize = ShapeUtil.size(dimsOutput);\n      const vecSize = Math.ceil(outputSize / 4);\n\n      let expressionScalar: BinaryCustomExpression;\n      let expressionVector: BinaryCustomExpression;\n      if (typeof funcCall === 'string') {\n        expressionScalar = expressionVector = (a, b) => `${funcCall}((${a}),(${b}))`;\n      } else if (typeof funcCall === 'function') {\n        expressionScalar = expressionVector = funcCall;\n      } else {\n        expressionScalar = funcCall.scalar;\n        expressionVector = funcCall.vector;\n      }\n\n      let broadcastImpl = '';\n      const outputIndicesHelper = createIndicesHelper('output', dimsOutput);\n      if (doBroadcast) {\n        const calcOffsetImpl = (dims: readonly number[]) => {\n          const strides = ShapeUtil.computeStrides(dims);\n          const offsets: string[] = [];\n          for (let i = dims.length - 1; i >= 0; i--) {\n            const idx = dimsOutput.length === 0 ? '0u' :\n                (dimsOutput.length === 1)       ? '(*outputIndices)' :\n                                                  `(*outputIndices)[${i + dimsOutput.length - dims.length}]`;\n            offsets.push(`${strides[i]}u * (${idx} % ${dims[i]}u)`);\n          }\n          return offsets.length > 0 ? offsets.join('+') : '0u';\n        };\n\n        broadcastImpl = `\n  ${outputIndicesHelper.o2iImpl}\n\n  fn calcOffsetA(outputIndices: ptr<function, ${outputIndicesHelper.iType}>) -> u32 {\n    return ${calcOffsetImpl(dimsA)};\n  }\n\n  fn calcOffsetB(outputIndices: ptr<function, ${outputIndicesHelper.iType}>) -> u32 {\n    return ${calcOffsetImpl(dimsB)};\n  }\n  `;\n      }\n\n      let assignment: string;\n      if (vectorize) {\n        if (doBroadcast) {\n          assignment = `\n      ${outputIndicesHelper.indicesVariableDeclaration('outputIndices')}\n      ${outputIndicesHelper.o2iCall('global_idx * 4u', 'outputIndices')}\n      let offsetA = calcOffsetA(&outputIndices);\n      let offsetB = calcOffsetB(&outputIndices);\n      outputData[global_idx] = ${expressionVector('aData[offsetA / 4u]', 'bData[offsetB / 4u]')};`;\n        } else {\n          assignment = `outputData[global_idx] = ${expressionVector('aData[global_idx]', 'bData[global_idx]')};`;\n        }\n      } else {\n        if (!doBroadcast) {\n          throw new Error('no necessary to use scalar implementation for element-wise binary op implementation.');\n        }\n        const singleAssignment = (x: number) => {\n          const expressionA = `aData[indexA${x}][componentA${x}]`;\n          const expressionB = `bData[indexB${x}][componentB${x}]`;\n          return `\n      ${outputIndicesHelper.o2iCall(`global_idx * 4u + ${x}u`, 'outputIndices')}\n      let offsetA${x} = calcOffsetA(&outputIndices);\n      let offsetB${x} = calcOffsetB(&outputIndices);\n      let indexA${x} = offsetA${x} / 4u;\n      let indexB${x} = offsetB${x} / 4u;\n      let componentA${x} = offsetA${x} % 4u;\n      let componentB${x} = offsetB${x} % 4u;\n      outputData[global_idx][${x}] = ${expressionScalar(expressionA, expressionB)};`;\n        };\n\n        assignment = `\n      ${outputIndicesHelper.indicesVariableDeclaration('outputIndices')}\n      ${singleAssignment(0)}\n      ${singleAssignment(1)}\n      ${singleAssignment(2)}\n      ${singleAssignment(3)}`;\n      }\n\n      return `\n  @group(0) @binding(0) var<storage, read> aData : array<vec4<${typeA}>>;\n  @group(0) @binding(1) var<storage, read> bData : array<vec4<${typeB}>>;\n  @group(0) @binding(2) var<storage, read_write> outputData : array<vec4<${typeOutput}>>;\n\n  ${additionalImplementation ?? ''}\n  ${broadcastImpl}\n\n  ${shaderHelper.mainStart()}\n    ${shaderHelper.guardAgainstOutOfBoundsWorkgroupSizes(vecSize)}\n    ${assignment}\n  }`;\n    };\n\nconst createBinaryOpProgramInfo =\n    (metadata: ProgramMetadata, a: TensorView, b: TensorView, funcCall: BinaryFunctionCall,\n     additionalImplementation?: string, outputDataType: number = a.dataType): ProgramInfo => {\n      const isBroadcast = !ShapeUtil.areEqual(a.dims, b.dims);\n      let outputShape = a.dims;\n      let outputSize = ShapeUtil.size(a.dims);\n\n      let vectorize = false;\n\n      // TODO: deal with zero-sized tensors (eg. dims=[1,0])\n\n      if (isBroadcast) {\n        const calculatedShape = BroadcastUtil.calcShape(a.dims, b.dims, false);\n        if (!calculatedShape) {\n          throw new Error('Can\\'t perform binary op on the given tensors');\n        }\n        outputShape = calculatedShape;\n        outputSize = ShapeUtil.size(outputShape);\n\n        // check whether vectorize can be enabled\n        let sharedDimension = 1;\n        for (let i = 0; i < outputShape.length; i++) {\n          const dimA = a.dims[a.dims.length - i] ?? 1;\n          const dimB = b.dims[b.dims.length - i] ?? 1;\n          if (dimA === dimB) {\n            sharedDimension *= dimA;\n          } else {\n            break;\n          }\n        }\n        if (sharedDimension % 4 === 0) {\n          vectorize = true;\n        }\n\n\n      } else {\n        // element-wise\n        vectorize = true;\n      }\n\n      return {\n        ...metadata,\n        getShaderSource: (shaderHelper) => createBinaryOpProgramShader(\n            shaderHelper, a.dims, b.dims, outputShape, vectorize, isBroadcast, funcCall, additionalImplementation),\n        outputs: [{dims: outputShape, dataType: outputDataType, gpuDataType: GpuDataType.default}],\n        dispatchGroup: () =>\n            ({x: Math.ceil(outputSize / 64 /* workgroup size */ / (vectorize ? 4 : 1) /* vec size */)})\n      };\n    };\n\nconst createBinaryOpProgramInfoLoader =\n    (inputs: readonly TensorView[], name: string, funcCall: BinaryFunctionCall, additionalImplementation?: string,\n     cacheKey?: string): ProgramInfoLoader => {\n      const metadata:\n          ProgramMetadata = {name, inputTypes: [GpuDataType.default, GpuDataType.default], cacheHint: cacheKey};\n      return {\n        ...metadata,\n        get: () => createBinaryOpProgramInfo(metadata, inputs[0], inputs[1], funcCall, additionalImplementation)\n      };\n    };\n\nexport const add = (context: ComputeContext): void => {\n  context.compute(createBinaryOpProgramInfoLoader(context.inputs, 'Add', (a, b) => `${a}+${b}`));\n};\n\nexport const div = (context: ComputeContext): void => {\n  context.compute(createBinaryOpProgramInfoLoader(context.inputs, 'Div', (a, b) => `${a}/${b}`));\n};\n\nexport const mul = (context: ComputeContext): void => {\n  context.compute(createBinaryOpProgramInfoLoader(context.inputs, 'Mul', (a, b) => `${a}*${b}`));\n};\n\nexport const pow = (context: ComputeContext): void => {\n  context.compute(createBinaryOpProgramInfoLoader(\n      context.inputs, 'Pow', ({scalar: (a, b) => `pow_f32(${a},${b})`, vector: (a, b) => `pow_vf32(${a},${b})`}), `\n    fn pow_f32(a : f32, b : f32) -> f32 {\n      if (b == 0.0) {\n        return 1.0;\n      } else if (a < 0.0 && b != floor(b)) {\n        return pow(a, b); // NaN\n      }\n      return select(sign(a), 1.0, round(abs(b) % 2.0) != 1.0) * pow(abs(a), b);\n    }\n    fn pow_vf32(a : vec4<f32>, b : vec4<f32>) -> vec4<f32> {\n      // TODO: implement vectorized pow\n      return vec4<f32>(pow_f32(a.x, b.x), pow_f32(a.y, b.y), pow_f32(a.z, b.z), pow_f32(a.w, b.w));\n    }\n      `));\n};\n\nexport const sub = (context: ComputeContext): void => {\n  context.compute(createBinaryOpProgramInfoLoader(context.inputs, 'Sub', (a, b) => `${a}-${b}`));\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {ShapeUtil} from '../../util';\n\n/**\n * constant value for a workgroup size.\n *\n * We definitely can do further optimization in future, but for now we use 64.\n *\n * rule of thumb: Use [a workgroup size of] 64 unless you know what GPU you are targeting or that your workload\n *                needs something different.\n *\n * from: https://surma.dev/things/webgpu/\n **/\nexport const WORKGROUP_SIZE = 64;\n\nexport interface IndicesHelper {\n  /**\n   * WGSL code of function implementation for offset-to-indices\n   */\n  o2iImpl: string;\n  /**\n   * WGSL code of function call for offset-to-indices\n   */\n  o2iCall: (varOffset: string, varIndices: string) => string;\n  /**\n   * WGSL code of function implementation for indices-to-offset\n   */\n  i2oImpl: string;\n  /**\n   * WGSL code of function implementation for indices-to-offset\n   *\n   * @param isPtr - whether the variable is a pointer. default is false.\n   */\n  i2oExpression: (varIndices: string, isPtr?: boolean) => string;\n  /**\n   * WGSL code of indices variable declaration\n   *\n   * @param v - variable name.\n   * @param init - initial value.\n   */\n  indicesVariableDeclaration: (v: string, init?: string[]) => string;\n  /**\n   * data type of indices\n   */\n  iType: string;\n}\n\nexport const createIndicesHelper = (name: string, shape: readonly number[]): IndicesHelper => {\n  const iType = shape.length < 2 ? 'u32' : `array<u32, ${shape.length}>`;\n\n  const strides = ShapeUtil.computeStrides(shape);\n  let o2iSnippet = '';\n  for (let i = 0; i < shape.length - 1; i++) {\n    o2iSnippet += `\n    let dim${i} = current / ${strides[i]}u;\n    let rest${i} = current % ${strides[i]}u;\n    (*indices)[${i}] = dim${i};\n    current = rest${i};\n    `;\n  }\n  o2iSnippet += `(*indices)[${shape.length - 1}] = current;`;\n\n  const o2iImpl = shape.length < 2 ? '' : `\n  fn ih_o2i_${name}(offset: u32, indices: ptr<function, ${iType}>) {\n    var current = offset;\n    ${o2iSnippet}\n  }`;\n\n  const o2iCall = (varOffset: string, varIndices: string) =>\n      shape.length < 2 ? `${varIndices}=${varOffset};` : `ih_o2i_${name}(${varOffset}, &${varIndices});`;\n\n  const offsets: string[] = [];\n  if (shape.length === 0) {\n    offsets.push('0u');\n  } else if (shape.length < 2) {\n    offsets.push('(*indices)');\n  } else {\n    for (let i = shape.length - 1; i >= 0; i--) {\n      offsets.push(`${strides[i]}u * ((*indices)[${i}])`);\n    }\n  }\n\n  const i2oImpl = shape.length < 2 ? '' : `\n  fn ih_i2o_${name}(indices: ptr<function, ${iType}>) -> u32 {\n    return ${offsets.join('+')};\n  }`;\n\n  const i2oExpression = (varIndices: string, isPtr?: boolean) =>\n      shape.length < 2 ? `(${isPtr ? '*' : ''}${varIndices})` : `ih_i2o_${name}(${isPtr ? '' : '&'}${varIndices})`;\n\n  const indicesVariableDeclaration = (v: string, init?: string[]) =>\n      `var ${v}:${iType}${init ? `=${iType}(${init.join(',')})` : ''};`;\n\n  return {o2iImpl, o2iCall, i2oImpl, i2oExpression, indicesVariableDeclaration, iType};\n};\n\n/**\n * A ShaderHelper is a helper class for generating WGSL code.\n */\nexport interface ShaderHelper {\n  mainStart(workgroupSize?: number|[number, number, number]): string;\n  guardAgainstOutOfBoundsWorkgroupSizes(size: unknown): string;\n}\n\nclass ShaderHelperImpl implements ShaderHelper {\n  constructor(private normalizedDispatchGroup: [number, number, number]) {}\n  guardAgainstOutOfBoundsWorkgroupSizes(size: number|string): string {\n    // Guard against out-of-bounds work group sizes\n    const sizeInCode = typeof size === 'number' ? `${size}u` : size;\n    return `if (global_idx >= ${sizeInCode}) { return; }`;\n  }\n  mainStart(workgroupSize: number|[number, number, number] = WORKGROUP_SIZE) {\n    const workgroupSizeX = typeof workgroupSize === 'number' ? workgroupSize : workgroupSize[0];\n    const workgroupSizeY = typeof workgroupSize === 'number' ? 1 : workgroupSize[1];\n    const workgroupSizeZ = typeof workgroupSize === 'number' ? 1 : workgroupSize[2];\n\n    const is1DimensionDispatch = this.normalizedDispatchGroup[1] === 1 && this.normalizedDispatchGroup[2] === 1;\n    const paramList = is1DimensionDispatch ? '@builtin(global_invocation_id) global_id : vec3<u32>' :\n                                             `@builtin(local_invocation_index) local_index : u32,\n    @builtin(workgroup_id) workgroup_id : vec3<u32>`;\n    const globalIdxDefinition = is1DimensionDispatch ?\n        'let global_idx = global_id.x;' :\n        `let global_idx = (workgroup_id.z * ${this.normalizedDispatchGroup[0] * this.normalizedDispatchGroup[1]}u +\n          workgroup_id.y * ${this.normalizedDispatchGroup[0]}u + workgroup_id.x) * ${\n            workgroupSizeX * workgroupSizeY * workgroupSizeZ}u + local_index;`;\n\n    return `@compute @workgroup_size(${workgroupSizeX}, ${workgroupSizeY}, ${workgroupSizeZ})\n  fn main(${paramList}) {\n    ${globalIdxDefinition}\n  `;\n  }\n}\n\nexport const createShaderHelper = (dispatchGroup: [number, number, number]): ShaderHelper =>\n    new ShaderHelperImpl(dispatchGroup);\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {TensorView} from '../../tensor';\nimport {ShapeUtil} from '../../util';\nimport {GpuDataType, ProgramInfo, ProgramInfoLoader, ProgramMetadata} from '../types';\n\nimport {createIndicesHelper, ShaderHelper} from './common';\nimport {calculateOutputShape, ConvAttributes} from './conv';\nimport {getActicationSnippet} from './fuse-utils';\n\nconst createGroupedConvProgramMetadata = (hasBias: boolean, cacheHint: string): ProgramMetadata => ({\n  name: 'GroupedConv',\n  inputTypes: hasBias ? [GpuDataType.default, GpuDataType.default, GpuDataType.default] :\n                        [GpuDataType.default, GpuDataType.default],\n  cacheHint\n});\n\nconst createGroupedConvProgramInfo =\n    (inputs: readonly TensorView[], metadata: ProgramMetadata, attributes: ConvAttributes,\n     squeezeOutputShapeFunction?: (shape: readonly number[]) => number[]): ProgramInfo => {\n      const hasBias = inputs.length > 2;\n      const processBias = hasBias ? 'value += b[output_channel];' : '';\n      const xShape = inputs[0].dims;\n      const wShape = inputs[1].dims;\n      const outputChannelsPerGroup = wShape[0] / attributes.group;\n\n      const dataType = 'f32';  // TODO: support other data type\n      const {activationFunction, applyActivation} = getActicationSnippet(attributes);\n      const inputStorageBuffersDeclarations = [\n        `@group(0) @binding(0) var<storage, read> x : array<${dataType}>;`,\n        `@group(0) @binding(1) var<storage, read> w : array<${dataType}>;`\n      ];\n      if (hasBias) {\n        inputStorageBuffersDeclarations.push(`@group(0) @binding(2) var<storage, read> b : array<${dataType}>;`);\n      }\n\n      const isChannelLast = attributes.format === 'NHWC';\n      const outputShape = calculateOutputShape(\n          xShape, wShape, attributes.dilations, attributes.pads, attributes.strides, isChannelLast);\n      const outputSize = ShapeUtil.size(outputShape);\n      const outputIndicesHelper = createIndicesHelper('output', outputShape);\n      const xIndicesHelper = createIndicesHelper('x', xShape);\n      const wIndicesHelper = createIndicesHelper('w', wShape);\n\n      const getShaderSource = (shaderHelper: ShaderHelper) => `\n  const strides: vec2<u32> = vec2(${attributes.strides[0]}u, ${attributes.strides[1]}u);\n  const pads: vec2<u32> = vec2(${attributes.pads[0]}u, ${attributes.pads[1]}u);\n\n  ${inputStorageBuffersDeclarations.join('\\n')}\n  @group(0) @binding(${inputStorageBuffersDeclarations.length}) var<storage, read_write> output : array<${dataType}>;\n\n  ${activationFunction}\n  ${outputIndicesHelper.o2iImpl}\n  ${xIndicesHelper.i2oImpl}\n  ${wIndicesHelper.i2oImpl}\n\n  ${shaderHelper.mainStart()}\n    ${shaderHelper.guardAgainstOutOfBoundsWorkgroupSizes(outputSize)}\n\n    ${outputIndicesHelper.indicesVariableDeclaration('outputIndices')}\n    ${outputIndicesHelper.o2iCall('global_idx', 'outputIndices')}\n    let batch: u32 = outputIndices[0];\n    let output_channel: u32 = outputIndices[${isChannelLast ? 3 : 1}];\n    let xRCCorner: vec2<u32> = vec2<u32>(outputIndices[${isChannelLast ? 1 : 2}], outputIndices[${\n          isChannelLast ? 2 : 3}]) * strides - pads;\n    let group_id: u32 = output_channel / ${outputChannelsPerGroup}u;\n\n    var value: ${dataType} = ${dataType}(0);\n    for (var wInChannel: u32 = 0u; wInChannel < ${wShape[1]}u; wInChannel++) {\n      let input_channel = group_id * ${wShape[1]}u + wInChannel;\n      for (var wHeight: u32 = 0u; wHeight < ${wShape[2]}u; wHeight++) {\n        let xHeight = xRCCorner.x + wHeight * ${attributes.dilations[0]}u;\n\n        if (xHeight < 0u || xHeight >= ${xShape[isChannelLast ? 1 : 2]}u) {\n          continue;\n        }\n\n        for (var wWidth: u32 = 0u; wWidth < ${wShape[3]}u; wWidth++) {\n          let xWidth = xRCCorner.y + wWidth * ${attributes.dilations[1]}u;\n          if (xWidth < 0u || xWidth >= ${xShape[isChannelLast ? 2 : 3]}u) {\n            continue;\n          }\n\n          ${\n          xIndicesHelper.indicesVariableDeclaration(\n              'xIndices',\n              isChannelLast ? ['batch', 'xHeight', 'xWidth', 'input_channel'] :\n                              [\n                                'batch', 'input_channel', 'xHeight', 'xWidth'\n                              ])}\n          let xVal = x[${xIndicesHelper.i2oExpression('xIndices')}];\n          ${\n          wIndicesHelper.indicesVariableDeclaration('wIndices', [\n            'output_channel', 'wInChannel', 'wHeight', 'wWidth'\n          ])}\n          let wVal = w[${wIndicesHelper.i2oExpression('wIndices')}];\n          value += xVal*wVal;\n        }\n      }\n    }\n    ${processBias}\n    ${applyActivation}\n    output[global_idx] = value;\n  }`;\n      return {\n        ...metadata,\n        outputs: [{\n          dims: squeezeOutputShapeFunction ? squeezeOutputShapeFunction(outputShape) : outputShape,\n          dataType: inputs[0].dataType,\n          gpuDataType: GpuDataType.default\n        }],\n        getShaderSource,\n        dispatchGroup: () => ({x: Math.ceil(outputSize / 64 /* workgroup size */)})\n      };\n    };\n\n/**\n * naive grouped conv implementation, supports 1d/2d conv\n * @param squeezeOutputShapeFunction - an optional function to squeeze the output shape, only used in conv1d\n */\nexport const createGroupedConvProgramInfoLoader =\n    (inputs: readonly TensorView[], attributes: ConvAttributes,\n     squeezeOutputShapeFunction?: (shape: readonly number[]) => number[]): ProgramInfoLoader => {\n      const metadata = createGroupedConvProgramMetadata(inputs.length > 2, attributes.cacheKey);\n      return {\n        ...metadata,\n        get: () => createGroupedConvProgramInfo(inputs, metadata, attributes, squeezeOutputShapeFunction)\n      };\n    };\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {DataType} from '../../../wasm-common';\nimport {TensorView} from '../../tensor';\nimport {PoolConvUtil} from '../../util';\nimport {AttributeWithCacheKey, createAttributeWithCacheKey} from '../attribute-with-cache-key';\nimport {ComputeContext} from '../types';\n\nimport {createGroupedConvProgramInfoLoader} from './conv-grouped';\nimport {createConv2DMatMulProgramInfoLoader} from './conv2d-mm';\nimport {InternalActivationAttributes, parseInternalActivationAttributes} from './fuse-utils';\nimport {createTransposeProgramInfo, TransposeAttributes, transposeProgramMetadata} from './transpose';\n\nexport const calculateOutputShape =\n    (inputShape: readonly number[], kernelShape: readonly number[], dilations: readonly number[],\n     adjustPads: readonly number[], strides: readonly number[], isChannelLast: boolean): number[] => {\n      const batchSize = inputShape[0];\n      const inputSpatialShape = inputShape.slice(isChannelLast ? 1 : 2, isChannelLast ? 3 : 4);\n      const spatialRank = inputSpatialShape.length;\n      const outChannels = kernelShape[0];\n      const kernelSpatialShape = kernelShape.slice(2);\n      const dilatedKernelShape = kernelSpatialShape.map((v, i) => v + (v - 1) * (dilations[i] - 1));\n      const inputSpatialShapeWithPad = inputSpatialShape.map((v, i) => v + adjustPads[i] + adjustPads[i + spatialRank]);\n      const outputShape =\n          inputSpatialShapeWithPad.map((v, i) => Math.floor((v - dilatedKernelShape[i] + strides[i]) / strides[i]));\n      outputShape.splice(0, 0, batchSize);\n      outputShape.splice(isChannelLast ? 3 : 1, 0, outChannels);\n      return outputShape;\n    };\n\nexport interface ConvAttributes extends InternalActivationAttributes, AttributeWithCacheKey {\n  readonly autoPad: string;\n  readonly dilations: readonly number[];\n  readonly format: 'NHWC'|'NCHW';\n  readonly group: number;\n  readonly kernelShape: readonly number[];\n  readonly pads: readonly number[];\n  readonly strides: readonly number[];\n  readonly wIsConst: boolean;\n}\n\n// for transposing weight tensor from [M, C/group, KH, KW] to [KH, KW, C/group, M]\nconst weightTransposeAttribute: TransposeAttributes = createAttributeWithCacheKey({perm: [2, 3, 1, 0]});\n\nconst validateInputs = (inputs: readonly TensorView[], attributes: ConvAttributes): void => {\n  // Refer to the below link for all input checks\n  // https://github.com/onnx/onnx/blob/master/docs/Operators.md#Conv\n  if (!inputs || (inputs.length !== 2 && inputs.length !== 3)) {\n    throw new Error('Conv requires 2 or 3 inputs');\n  }\n\n  // TODO : Need to add support for multi-dimensional conv\n  if (inputs[0].dims.length !== 4 && inputs[0].dims.length !== 3) {\n    throw new Error('currently only support conv 1D and 2D');\n  }\n\n  if (inputs[0].dims.length !== inputs[1].dims.length) {\n    throw new Error('filter does not have same dimension as input');\n  }\n\n  // FILTER_IN_CHANNEL should be equal to DATA_CHANNEL\n  const dataChannel = inputs[0].dims[attributes.format === 'NHWC' ? inputs[0].dims.length - 1 : 1];\n  const filterInChannel = inputs[1].dims[1] * attributes.group;\n  if (dataChannel !== filterInChannel) {\n    throw new Error('FILTER_IN_CHANNEL should be equal to DATA_CHANNEL');\n  }\n\n  // if bias is provided it should be 1D and the number of elements should be equal to the number of feature maps\n  if (inputs.length === 3 && (inputs[2].dims.length !== 1 || inputs[1].dims[0] !== inputs[2].dims[0])) {\n    throw new Error('invalid bias');\n  }\n\n  const spatialRank = inputs[0].dims.length - 2;\n  // wrong dilations dimension\n  if (attributes.dilations.length !== spatialRank) {\n    throw new Error(`dilations should be ${spatialRank}D`);\n  }\n\n  // Wrong strides dimension\n  if (attributes.strides.length !== spatialRank) {\n    throw new Error(`strides should be ${spatialRank}D`);\n  }\n\n  // Wrong pads dimension\n  if (attributes.pads.length !== spatialRank * 2) {\n    throw new Error(`pads should be ${spatialRank * 2}D`);\n  }\n\n  // if kernelShape is specified, it's data length must be 2 less than dims length of the weights tensor\n  // (the first 2 dims are batch_size and channels)\n  if (attributes.kernelShape.length !== 0 && attributes.kernelShape.length !== inputs[1].dims.length - 2) {\n    throw new Error('invalid kernel shape');\n  }\n\n  // TODO : Need to add support for float64\n  if (inputs[0].dataType !== DataType.float || inputs[1].dataType !== DataType.float) {\n    throw new Error('Conv input(X,W) should be float tensor');\n  }\n\n  if (inputs.length === 3 && inputs[2].dataType !== DataType.float) {\n    throw new Error('Conv input(bias) should be float tensor');\n  }\n};\n\nconst getAdjustedConvAttributes = <T extends ConvAttributes>(attributes: T, inputs: readonly TensorView[]): T => {\n  const kernelShape = attributes.kernelShape.slice();\n  // if kernelShape is not specified in the attributes of this op, infer it from the weight tensor dims\n  for (let i = 2; i < inputs[1].dims.length; ++i) {\n    if (kernelShape[i - 2] === 0) {\n      kernelShape[i - 2] = inputs[1].dims[i];\n    }\n  }\n  const pads = attributes.pads.slice();\n  PoolConvUtil.adjustPadsBasedOnAutoPad(\n      inputs[0].dims, attributes.strides, attributes.dilations, kernelShape, pads, attributes.format === 'NHWC',\n      attributes.autoPad);\n\n  // always return a new object so does not modify the original attributes\n  const newAttributes: T = Object.assign({}, attributes);\n  Object.assign(newAttributes, {kernelShape, pads, cacheKey: attributes.cacheKey});\n  return newAttributes;\n};\n\nexport const parseConvAttributes = (attributes: Record<string, unknown>): ConvAttributes => {\n  const activationAttributes = parseInternalActivationAttributes(attributes);\n  // TODO : Make this generic enough to compute default attributes for multi-dimensional conv\n  const format = attributes.format as 'NHWC' | 'NCHW';\n  const autoPad = ['NOTSET', 'VALID', 'SAME_UPPER', 'SAME_LOWER'][attributes.auto_pad as number];\n  const dilations = attributes.dilations as [number, number];\n  const group = attributes.group as number;\n  const kernelShape = attributes.kernel_shape as [number, number];\n  const pads = attributes.pads as [number, number, number, number];\n  const strides = attributes.strides as [number, number];\n  const wIsConst = (attributes.w_is_const as () => boolean)();\n\n  return createAttributeWithCacheKey(\n      {autoPad, format, dilations, group, kernelShape, pads, strides, wIsConst, ...activationAttributes});\n};\n\nconst conv2d = (context: ComputeContext, inputs: readonly TensorView[], attributes: ConvAttributes): void => {\n  const adjustedAttributes = getAdjustedConvAttributes(attributes, inputs);\n\n  // check attributes\n\n  const hasBias = inputs.length === 3;\n  // const hasPreluActivationWeights = false; /* TODO: add support for prelu activation weights */\n  const isChannelsLast = attributes.format === 'NHWC';\n\n  // const batchSize = context.inputs[0].dims[0];\n  const inputHeight = inputs[0].dims[isChannelsLast ? 1 : 2];\n  const inputWidth = inputs[0].dims[isChannelsLast ? 2 : 3];\n  const inputChannels = inputs[0].dims[isChannelsLast ? 3 : 1];\n  const weightHeight = inputs[1].dims[2];\n  const weightWidth = inputs[1].dims[3];\n\n  const outputShape = calculateOutputShape(\n      inputs[0].dims, inputs[1].dims, attributes.dilations, adjustedAttributes.pads, attributes.strides,\n      isChannelsLast);\n  const outHeight = outputShape[isChannelsLast ? 1 : 2];\n  const outWidth = outputShape[isChannelsLast ? 2 : 3];\n  const outChannels = outputShape[isChannelsLast ? 3 : 1];\n\n  const sameSize =\n      isChannelsLast && weightHeight === inputHeight && weightWidth === inputWidth && attributes.autoPad === 'VALID';\n  if (sameSize ||\n      (weightHeight === 1 && weightWidth === 1 && attributes.dilations[0] === 1 && attributes.dilations[1] === 1 &&\n       attributes.strides[0] === 1 && attributes.strides[1] === 1 &&\n       (attributes.autoPad === 'SAME_UPPER' || attributes.autoPad === 'SAME_LOWER' ||\n        attributes.autoPad === 'VALID'))) {\n    // TODO: implement conv2dByMatMul()\n    context.compute(createGroupedConvProgramInfoLoader(inputs, adjustedAttributes));\n    return;\n  }\n\n  if (!isChannelsLast || attributes.group !== 1) {\n    context.compute(createGroupedConvProgramInfoLoader(inputs, adjustedAttributes));\n    return;\n  }\n\n  // TODO: implement conv2dWithIm2Col()\n\n  const dimAOuter = isChannelsLast ? outHeight * outWidth : outChannels;\n  const dimBOuter = isChannelsLast ? outChannels : outHeight * outWidth;\n  const dimInner = weightHeight * weightWidth * inputChannels;\n\n  const sequentialAccessByThreads = /* backend.adapterInfo.isIntel() */ true;\n\n  // STEP.1: transpose weight\n  const transposedWeight = (context.customData.wT as TensorView | undefined) ??\n      context.compute(\n          {\n            ...transposeProgramMetadata,\n            cacheHint: weightTransposeAttribute.cacheKey,\n            get: () => createTransposeProgramInfo(inputs[1], weightTransposeAttribute.perm)\n          },\n          {inputs: [1], outputs: [attributes.wIsConst ? -2 : -1]})[0];\n  if (attributes.wIsConst && !context.customData.wT) {\n    context.customData.wT = transposedWeight;\n  }\n\n  // STEP.2: prepare reshaped inputs\n  const convInputs = [inputs[0], transposedWeight];\n  if (hasBias) {\n    if (!isChannelsLast && inputs[2].dims.length === 1) {\n      convInputs.push(inputs[2].reshape([inputs[2].dims[0], 1, 1]));\n    } else {\n      convInputs.push(inputs[2]);\n    }\n  }\n\n  // STEP.3: compute matmul\n  context.compute(\n      createConv2DMatMulProgramInfoLoader(\n          convInputs, adjustedAttributes, outputShape, dimAOuter, dimBOuter, dimInner, hasBias,\n          sequentialAccessByThreads),\n      {inputs: convInputs});\n};\n\nconst conv1d = (context: ComputeContext, attributes: ConvAttributes): void => {\n  // extend the input to 2D by adding H dimension\n  const isChannelLast = attributes.format === 'NHWC';\n  const inputs = [\n    context.inputs[0].reshape(\n        isChannelLast ?\n            // [N, W, C] -> [N, H=1, W, C]\n            [context.inputs[0].dims[0], 1, context.inputs[0].dims[1], context.inputs[0].dims[2]] :\n            // [N, C, W] -> [N, C, H=1, W]\n            [context.inputs[0].dims[0], context.inputs[0].dims[1], 1, context.inputs[0].dims[2]]),\n    //[FILTER_OUT_CHANNEL, FILTER_IN_CHANNEL, kW] -> [FILTER_OUT_CHANNEL, FILTER_IN_CHANNEL, kH=1, kW]\n    context.inputs[1].reshape([context.inputs[1].dims[0], context.inputs[1].dims[1], 1, context.inputs[1].dims[2]])\n  ];\n  if (context.inputs.length === 3) {\n    inputs.push(context.inputs[2]);\n  }\n  const pads = [0, attributes.pads[0], 0, attributes.pads[1]];\n  const strides = [1].concat(attributes.strides);\n  const dilations = [1].concat(attributes.dilations);\n  const kernelShape = [1].concat(attributes.kernelShape);\n  const adjustedAttributes = getAdjustedConvAttributes({...attributes, pads, strides, dilations, kernelShape}, inputs);\n  context.compute(createGroupedConvProgramInfoLoader(\n      inputs, adjustedAttributes,\n      outputShape => isChannelLast ? [outputShape[0], outputShape[2], outputShape[3]] : []));\n};\n\nexport const conv = (context: ComputeContext, attributes: ConvAttributes): void => {\n  validateInputs(context.inputs, attributes);  // currently will fail if not conv1D/2D\n  if (context.inputs[0].dims.length === 3) {\n    conv1d(context, attributes);\n  } else {\n    conv2d(context, context.inputs, attributes);\n  }\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {TensorView} from '../../tensor';\nimport {GpuDataType, ProgramInfoLoader, ProgramMetadata} from '../types';\n\nimport {createConv2DMatMulProgramInfo} from './3rd-party/conv2d_mm_webgpu';\nimport {ConvAttributes} from './conv';\n\n\nconst createConv2DMatMulProgramMetadata = (hasBias: boolean, cacheHint: string): ProgramMetadata => ({\n  name: 'Conv2DMatMul',\n  inputTypes: hasBias ? [GpuDataType.default, GpuDataType.default, GpuDataType.default] :\n                        [GpuDataType.default, GpuDataType.default],\n  cacheHint\n});\n\nexport const createConv2DMatMulProgramInfoLoader =\n    (inputs: readonly TensorView[], attributes: ConvAttributes, outputShape: readonly number[], dimAOuter: number,\n     dimBOuter: number, dimInner: number, hasBias: boolean, sequentialAccessByThreads: boolean): ProgramInfoLoader => {\n      const metadata = createConv2DMatMulProgramMetadata(hasBias, attributes.cacheKey);\n      return {\n        ...metadata,\n        get: () => createConv2DMatMulProgramInfo(\n            inputs, metadata, attributes, outputShape, dimAOuter, dimBOuter, dimInner, hasBias,\n            sequentialAccessByThreads)\n      };\n    };\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {MAX_CLIP, MIN_CLIP} from '../../util';\n\nexport interface InternalActivationAttributes {\n  readonly activation: string;\n  readonly clipMin?: number;\n  readonly clipMax?: number;\n  readonly activationCacheKey: string;\n}\n\nexport const getActicationSnippet =\n    (attributes: InternalActivationAttributes): {activationFunction: string; applyActivation: string} => {\n      switch (attributes.activation) {\n        case 'Relu':\n          return {activationFunction: '', applyActivation: 'value = max(value, 0.0);'};\n        case 'Sigmoid':\n          return {activationFunction: '', applyActivation: 'value = (1.0 / (1.0 + exp(-value)));'};\n        case 'Clip':\n          return {\n            activationFunction:\n                `const clip_min_=f32(${attributes.clipMin!});const clip_max_=f32(${attributes.clipMax!});`,\n            applyActivation: 'value = clamp(value, clip_min_, clip_max_);'\n          };\n          // TODO: adding other activations that can be fused.\n        default:\n          return {activationFunction: '', applyActivation: ''};\n      }\n    };\n\nexport const parseInternalActivationAttributes =\n    (attributes: Record<string, unknown>|undefined): InternalActivationAttributes => {\n      const activation = attributes?.activation as string || '';\n\n      if (activation === 'Clip') {\n        const [clipMin, clipMax] = attributes?.activation_params as [number, number] || [MIN_CLIP, MAX_CLIP];\n        return {activation, clipMax, clipMin, activationCacheKey: `${activation}:${clipMin},${clipMax}`};\n      }\n      return {activation, activationCacheKey: activation};\n    };\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {DataType} from '../../../wasm-common';\nimport {TensorView} from '../../tensor';\nimport {GemmUtil, ShapeUtil} from '../../util';\nimport {AttributeWithCacheKey, createAttributeWithCacheKey} from '../attribute-with-cache-key';\nimport {ComputeContext, GpuDataType, ProgramInfo, ProgramInfoLoader, ProgramMetadata} from '../types';\n\nimport {ShaderHelper} from './common';\n\nconst validateInputs = (inputs: readonly TensorView[]): void => {\n  if (!inputs) {\n    throw new Error('Input is missing');\n  }\n  if (inputs.length < 2 || inputs.length > 3) {\n    throw new Error('Invaid input number.');\n  }\n\n  // 'C' can be of dimensionality 0, 1 or 2 only\n  if (inputs.length === 3 && inputs[2].dims.length > 2) {\n    throw new Error('Invalid input shape of C');\n  }\n\n  if ((inputs[0].dataType !== DataType.float) || (inputs[1].dataType !== DataType.float) ||\n      (inputs.length === 3 && inputs[2].dataType !== DataType.float)) {\n    throw new Error('Invalid input type.');\n  }\n\n  if ((inputs[0].dataType !== inputs[1].dataType) ||\n      (inputs.length === 3 && inputs[0].dataType !== inputs[2].dataType)) {\n    throw new Error('Input types are mismatched');\n  }\n};\n\nexport interface GemmAttributes extends AttributeWithCacheKey {\n  transA: boolean;\n  transB: boolean;\n  alpha: number;\n  beta: number;\n}\n\nconst offsetC = (m: number, n: number, dims: readonly number[]): string => {\n  if (dims.length === 0) {\n    return '0u';\n  }\n\n  const broadcastM = (dims.length === 1 && m !== 1) || (dims.length === 2 && dims[0] !== m);\n  const broadcastN = dims[dims.length - 1] !== n;\n\n  let offset = '0u';\n  if (!broadcastM) {\n    offset += `+ m * ${dims[dims.length - 1]}u`;\n  }\n  if (!broadcastN) {\n    offset += '+n';\n  }\n\n  return offset;\n};\n\nconst createGemmProgramInfo =\n    (metadata: ProgramMetadata, inputs: readonly TensorView[], attributes: GemmAttributes): ProgramInfo => {\n      const aShape = inputs[0].dims.slice();\n      const bShape = inputs[1].dims.slice();\n      const [M, N, K] = GemmUtil.getShapeOfGemmResult(\n          aShape, attributes.transA, bShape, attributes.transB, inputs.length === 3 ? inputs[2].dims : undefined);\n      const outputShape = [M, N];\n      if (!outputShape) {\n        throw new Error('Can\\'t use gemm on the given tensors');\n      }\n      const outputSize = ShapeUtil.size(outputShape);\n      let line = '';\n      if (attributes.transA && attributes.transB) {\n        line = 'value += a[k * M + m] * b[n * K + k];';\n      } else if (attributes.transA && !attributes.transB) {\n        line = 'value += a[k * M + m] * b[k * N + n];';\n      } else if (!attributes.transA && attributes.transB) {\n        line = 'value += a[m * K + k] * b[n * K + k];';\n      } else if (!attributes.transA && !attributes.transB) {\n        line = 'value += a[m * K + k] * b[k * N + n];';\n      }\n\n      const dataType = 'f32';  // TODO: support other data type\n      const calculateAlpha = attributes.alpha === 1 ? '' : 'value *= alpha;';\n      const calculateC = inputs.length === 3 ? `value += beta * c[${offsetC(M, N, inputs[2].dims)}];` : '';\n      const inputStorageBuffersDeclarations = [\n        `@group(0) @binding(0) var<storage, read> a : array<${dataType}>;`,\n        `@group(0) @binding(1) var<storage, read> b : array<${dataType}>;`\n      ];\n      if (inputs.length === 3) {\n        inputStorageBuffersDeclarations.push(`@group(0) @binding(2) var<storage, read> c : array<${dataType}>;`);\n      }\n      const getShaderSource = (shaderHelper: ShaderHelper) => `\n  const M: u32 = ${M}u;\n  const N: u32 = ${N}u;\n  const K: u32 = ${K}u;\n  const alpha = ${dataType}(${attributes.alpha});\n  const beta = ${dataType}(${attributes.beta});\n\n  ${inputStorageBuffersDeclarations.join('\\n')}\n  @group(0) @binding(${inputs.length}) var<storage, read_write> output : array<${dataType}>;\n\n  ${shaderHelper.mainStart()}\n    ${shaderHelper.guardAgainstOutOfBoundsWorkgroupSizes(outputSize)}\n\n    let m = global_id.x / N;\n    let n = global_id.x % N;\n\n    var value = ${dataType}(0);\n    for (var k: u32 = 0u; k<${K}u; k++) {\n      ${line}\n    }\n\n    ${calculateAlpha}\n    ${calculateC}\n    output[global_id.x] = value;\n\n  }`;\n      return {\n        ...metadata,\n        outputs: [{dims: outputShape, dataType: inputs[0].dataType, gpuDataType: GpuDataType.default}],\n        getShaderSource,\n        dispatchGroup: () => ({x: Math.ceil(outputSize / 64 /* workgroup size */)})\n      };\n    };\n\nconst createGemmProgramInfoLoader = (inputs: readonly TensorView[], attributes: GemmAttributes): ProgramInfoLoader => {\n  const metadata = {\n    name: 'Gemm',\n    inputTypes: inputs.length === 3 ? [GpuDataType.default, GpuDataType.default, GpuDataType.default] :\n                                      [GpuDataType.default, GpuDataType.default],\n    cacheHint: attributes.cacheKey\n  };\n\n  return {...metadata, get: () => createGemmProgramInfo(metadata, inputs, attributes)};\n};\n\nexport const gemm = (context: ComputeContext, attributes: GemmAttributes): void => {\n  validateInputs(context.inputs);\n  context.compute(createGemmProgramInfoLoader(context.inputs, attributes));\n};\n\nexport const parseGemmAttributes = (attributes: Record<string, unknown>): GemmAttributes =>\n    createAttributeWithCacheKey(attributes as Omit<GemmAttributes, keyof AttributeWithCacheKey>);\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {DataType} from '../../../wasm-common';\nimport {TensorView} from '../../tensor';\nimport {BroadcastUtil, ShapeUtil} from '../../util';\nimport {ComputeContext, GpuDataType, ProgramInfo, ProgramInfoLoader, ProgramMetadata} from '../types';\n\nimport {ShaderHelper} from './common';\nimport {getActicationSnippet, InternalActivationAttributes} from './fuse-utils';\n\n\nconst createMatmulProgramMetadata = (hasBias: boolean, cacheHint: string) => ({\n  name: 'MatMul',\n  inputTypes: hasBias ? [GpuDataType.default, GpuDataType.default, GpuDataType.default] :\n                        [GpuDataType.default, GpuDataType.default],\n  cacheHint\n});\n\nconst createMatmulProgramInfo =\n    (metadata: ProgramMetadata, inputs: readonly TensorView[], activationAttributes: InternalActivationAttributes):\n        ProgramInfo => {\n          const aShape = inputs[0].dims;\n          const bShape = inputs[1].dims;\n          const outputShape = BroadcastUtil.calcShape(aShape, bShape, true);\n          if (!outputShape) {\n            throw new Error('Can\\'t use matmul on the given tensors');\n          }\n          const outputSize = ShapeUtil.size(outputShape);\n          // TODO: support broadcasting\n\n          const dataType = 'f32';  // TODO: support other data type\n          const {activationFunction, applyActivation} = getActicationSnippet(activationAttributes);\n\n          const M = outputShape[outputShape.length - 2];\n          const K = aShape[aShape.length - 1];\n          const N = outputShape[outputShape.length - 1];\n          const getShaderSource = (shaderHelper: ShaderHelper) => `\n  const M: u32 = ${M}u;\n  const N: u32 = ${N}u;\n  const K: u32 = ${K}u;\n\n  @group(0) @binding(0) var<storage, read> a : array<${dataType}>;\n  @group(0) @binding(1) var<storage, read> b : array<${dataType}>;\n  @group(0) @binding(2) var<storage, read_write> output : array<${dataType}>;\n\n  ${activationFunction}\n\n  ${shaderHelper.mainStart()}\n    ${shaderHelper.guardAgainstOutOfBoundsWorkgroupSizes(outputSize)}\n\n    let stack = global_idx / (M * N);\n    let mn = global_idx % (M * N);\n    let n = global_idx % N;\n    let m = mn / N;\n\n    let offsetA = stack * (M * K);\n    let offsetB = stack * (K * N);\n\n    var value = ${dataType}(0);\n    for (var k: u32 = 0u; k<${K}u; k++) {\n      value += a[offsetA + m * K + k] * b[offsetB + k * N + n];\n    }\n    ${applyActivation}\n    output[global_idx] = value;\n  }`;\n          return {\n            ...metadata,\n            outputs: [{dims: outputShape, dataType: inputs[0].dataType, gpuDataType: GpuDataType.default}],\n            getShaderSource,\n            dispatchGroup: () => ({x: Math.ceil(outputSize / 64 /* workgroup size */)})\n          };\n        };\n\nexport const createMatmulProgramInfoLoader =\n    (inputs: readonly TensorView[], activationAttributes: InternalActivationAttributes): ProgramInfoLoader => {\n      const metadata = createMatmulProgramMetadata(inputs.length > 2, activationAttributes.activationCacheKey);\n      return {...metadata, get: () => createMatmulProgramInfo(metadata, inputs, activationAttributes)};\n    };\n\nconst validateInputs = (inputs: readonly TensorView[]): void => {\n  if (!inputs || inputs.length !== 2) {\n    throw new Error('MatMul requires 2 inputs.');\n  }\n\n  if (inputs[0].dims[inputs[0].dims.length - 1] !== inputs[1].dims[inputs[1].dims.length - 2]) {\n    throw new Error('shared dimension does not match.');\n  }\n\n  if (inputs[0].dataType !== DataType.float || inputs[1].dataType !== DataType.float) {\n    throw new Error('inputs should be float type');\n  }\n};\n\nexport const matMul = (context: ComputeContext): void => {\n  validateInputs(context.inputs);\n\n  context.compute(createMatmulProgramInfoLoader(context.inputs, {activation: '', activationCacheKey: ''}));\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {DataType} from '../../../wasm-common';\nimport {TensorView} from '../../tensor';\nimport {PoolConvUtil, ShapeUtil} from '../../util';\nimport {AttributeWithCacheKey, createAttributeWithCacheKey} from '../attribute-with-cache-key';\nimport {ComputeContext, GpuDataType, ProgramInfo, ProgramMetadata} from '../types';\n\nimport {createIndicesHelper, ShaderHelper} from './common';\n\n// TODO: support:\n// - ceil_mode                 \"test_maxpool_2d_ceil\"\n// - storage_order             \"test_maxpool_with_argmax_2d_precomputed_strides\"\n// - [MaxPool] dilations       \"test_maxpool_2d_dilations\"\n// - [MaxPool] output[1]       \"test_maxpool_with_argmax_2d_precomputed_pads\"\n\nconst validateInputs = (inputs: readonly TensorView[]): void => {\n  if (!inputs || inputs.length !== 1) {\n    throw new Error('Pool ops requires 1 input.');\n  }\n  if (inputs[0].dims.length !== 4) {\n    throw new Error('Pool ops supports 2-D inputs only for now.');\n  }\n  if (inputs[0].dataType !== DataType.float) {\n    throw new Error('Invalid input type.');\n  }\n};\n\nconst getAdjustedPoolAttributesAndOutputShape = <AttributeType extends AveragePoolAttributes|MaxPoolAttributes>(\n    inputs: readonly TensorView[], attributes: AttributeType, isGlobalOperator: boolean): [AttributeType, number[]] => {\n  const isChannelsLast = attributes.format === 'NHWC';\n  const inputShapeAsChannelFirst = isChannelsLast ?\n      [inputs[0].dims[0], inputs[0].dims[3], inputs[0].dims[1], inputs[0].dims[2]] :\n      inputs[0].dims.slice();\n  const hasDilations = Object.hasOwnProperty.call(attributes, 'dilations');\n  const kernelShape = attributes.kernelShape.slice();\n  const strides = attributes.strides.slice();\n  const dilations: number[] = hasDilations ? (attributes as MaxPoolAttributes).dilations.slice() : [];\n  const pads = attributes.pads.slice();\n  PoolConvUtil.adjustPoolAttributes(isGlobalOperator, inputShapeAsChannelFirst, kernelShape, strides, dilations, pads);\n\n  const outputShapeAsChannelFirst = PoolConvUtil.computePoolOutputShape(\n      isGlobalOperator, inputShapeAsChannelFirst, strides, dilations, kernelShape, pads, attributes.autoPad);\n\n  const newAttributes = Object.assign({}, attributes);\n  if (hasDilations) {\n    Object.assign(newAttributes, {kernelShape, strides, pads, dilations, cacheKey: attributes.cacheKey});\n  } else {\n    Object.assign(newAttributes, {kernelShape, strides, pads, cacheKey: attributes.cacheKey});\n  }\n  return [\n    newAttributes,\n    isChannelsLast ?\n        [\n          outputShapeAsChannelFirst[0], outputShapeAsChannelFirst[2], outputShapeAsChannelFirst[3],\n          outputShapeAsChannelFirst[1]\n        ] :\n        outputShapeAsChannelFirst\n  ];\n};\n\nconst generatePoolingCode = <AttributeType extends AveragePoolAttributes|MaxPoolAttributes>(\n    shaderHelper: ShaderHelper, inputDims: readonly number[], outputShape: readonly number[], attributes: AttributeType,\n    op1: string, op2: string, dataType: string, start: string): string => {\n  const isChannelsLast = attributes.format === 'NHWC';\n  const rank = inputDims.length;\n  const outputSize = ShapeUtil.size(outputShape);\n  const outputIndicesHelper = createIndicesHelper('output', outputShape);\n  const xIndicesHelper = createIndicesHelper('x', inputDims);\n\n  if (attributes.kernelShape.length <= 2) {\n    const kw = attributes.kernelShape[attributes.kernelShape.length - 1];\n    const sw = attributes.strides[attributes.strides.length - 1];\n    const pwStart = attributes.pads[attributes.pads.length / 2 - 1];\n    const pwEnd = attributes.pads[attributes.pads.length - 1];\n    const dimIdxW = rank - (isChannelsLast ? 2 : 1);\n    let codeW = '';\n    let codeH = '';\n    let codeHEnd = '';\n    if (pwStart + pwEnd !== 0) {\n      codeW = `\n              for (var i: u32 = 0u; i < ${kw}u; i++) {\n                xIndices[${dimIdxW}] = indices[${dimIdxW}] * ${sw} - ${pwStart} + i;\n                if (xIndices[${dimIdxW}] < 0 || xIndices[${dimIdxW}] >= ${inputDims[dimIdxW]}) {\n                  pad++;\n                  continue;\n                }\n                let x_val = x[${xIndicesHelper.i2oExpression('xIndices')}];\n                ${op1}\n              }`;\n    } else {\n      codeW = `\n              for (var i: u32 = 0u; i < ${kw}u; i++) {\n                xIndices[${dimIdxW}] = indices[${dimIdxW}] * ${sw} - ${pwStart} + i;\n                let x_val = x[${xIndicesHelper.i2oExpression('xIndices')}];\n                ${op1}\n              }`;\n    }\n\n    if (attributes.kernelShape.length === 2) {\n      const kh = attributes.kernelShape[attributes.kernelShape.length - 2];\n      const sh = attributes.strides[attributes.strides.length - 2];\n      const phStart = attributes.pads[attributes.pads.length / 2 - 2];\n      const phEnd = attributes.pads[attributes.pads.length - 2];\n      const dimIdxH = rank - (isChannelsLast ? 3 : 2);\n      const dimH = inputDims[dimIdxH];\n      if (phStart + phEnd !== 0) {\n        codeH = `\n                for (var j: u32 = 0u; j < ${kh}u; j++) {\n                  xIndices[${dimIdxH}] = indices[${dimIdxH}] * ${sh} - ${phStart} + j;\n                  if (xIndices[${dimIdxH}] < 0 || xIndices[${dimIdxH}] >= ${dimH}) {\n                    pad+= ${kw};\n                    continue;\n                  }\n              `;\n      } else {\n        codeH = `\n                for (var j: u32 = 0u; j < ${kh}u; j++) {\n                  xIndices[${dimIdxH}] = indices[${dimIdxH}] * ${sh} - ${phStart} + j;\n                `;\n      }\n      codeHEnd = `\n              }\n            `;\n    }\n\n    const poolingCode = `\n            @group(0) @binding(0) var<storage, read> x : array<${dataType}>;\n            @group(0) @binding(1) var<storage, read_write> output : array<${dataType}>;\n\n            ${outputIndicesHelper.o2iImpl}\n            ${xIndicesHelper.i2oImpl}\n\n            ${shaderHelper.mainStart()}\n              ${shaderHelper.guardAgainstOutOfBoundsWorkgroupSizes(outputSize)}\n\n              ${outputIndicesHelper.indicesVariableDeclaration('indices')}\n              ${outputIndicesHelper.o2iCall('global_idx', 'indices')}\n              ${outputIndicesHelper.indicesVariableDeclaration('xIndices')}\n              ${outputIndicesHelper.o2iCall('global_idx', 'xIndices')}\n\n              var value: ${dataType} = ${dataType}(${start});\n              var pad = 0;\n              ${codeH}\n              ${codeW}\n              ${codeHEnd}\n              ${op2}\n\n              output[global_idx] = value;\n            }`;\n    return poolingCode;\n  } else {\n    if (isChannelsLast) {\n      throw new Error('Pooling with kernelShape.length > 2 is not supported for NHWC format.');\n    }\n    const kernelSize = ShapeUtil.size(attributes.kernelShape);\n    const kernelStrides = ShapeUtil.computeStrides(attributes.kernelShape);\n    const stridesRank = kernelStrides.length;\n    const padsRank = attributes.pads.length;\n    const hasPads = attributes.pads.reduce((sum, cur) => sum + cur);\n    let padCode = '';\n    if (hasPads) {\n      padCode = `\n                if (xIndices[j] >= inputDims[j]) {\n                  pad++;\n                  isPad = true;\n                  break;\n                }\n              }\n              if (!isPad) {\n                let x_val = x[${xIndicesHelper.i2oExpression('xIndices')}];\n                ${op1}\n              }`;\n    } else {\n      padCode = `\n              }\n              let x_val = x[${xIndicesHelper.i2oExpression('xIndices')}];\n              ${op1}\n            `;\n    }\n    const poolingCode = `\n            @group(0) @binding(0) var<storage, read> x : array<${dataType}>;\n            @group(0) @binding(1) var<storage, read_write> output : array<${dataType}>;\n\n            ${outputIndicesHelper.o2iImpl}\n            ${xIndicesHelper.i2oImpl}\n\n            const pads = array<u32, ${padsRank}>(${attributes.pads.map(i => `${i}u`).join(',')});\n            const inputDims = array<u32, ${rank}>(${inputDims.map(i => `${i}u`).join(',')});\n            const kernelStrides = array<u32, ${stridesRank}>(${kernelStrides.map(i => `${i}u`).join(',')});\n            const strides = array<u32, ${stridesRank}>(${attributes.strides.map(i => `${i}u`).join(',')});\n\n            ${shaderHelper.mainStart()}\n              ${shaderHelper.guardAgainstOutOfBoundsWorkgroupSizes(outputSize)}\n\n              ${outputIndicesHelper.indicesVariableDeclaration('indices')}\n              ${outputIndicesHelper.o2iCall('global_idx', 'indices')}\n              ${outputIndicesHelper.indicesVariableDeclaration('xIndices')}\n              ${outputIndicesHelper.o2iCall('global_idx', 'xIndices')}\n\n              var offsets: array<u32, ${stridesRank}>;\n\n              var value = ${dataType}(${start});\n              var pad = 0;\n              var isPad = false;\n\n              for (var i: u32 = 0u; i < ${kernelSize}u; i++) {\n                var offset = i;\n                for (var j = 0u; j < ${stridesRank - 1}u; j++) {\n                  offsets[j] = offset / kernelStrides[j];\n                  offset -= offsets[j] * kernelStrides[j];\n                }\n                offsets[${stridesRank - 1}] = offset;\n\n                isPad = false;\n                for (var j = ${rank - stridesRank}u; j < ${rank}u; j++) {\n                  xIndices[j] = indices[j] * strides[j - ${rank - stridesRank}u]\n                    + offsets[j - ${rank - stridesRank}u] - pads[j - 2u];\n                  ${padCode}\n              }\n              ${op2}\n\n              output[global_idx] = value;\n            }`;\n    return poolingCode;\n  }\n};\n\nexport interface FormatAttributes {\n  readonly format: 'NHWC'|'NCHW';\n}\n\nexport interface PoolCommonAttributes extends FormatAttributes {\n  readonly autoPad: string;\n  readonly ceilMode: number;\n  readonly kernelShape: readonly number[];\n  readonly strides: readonly number[];\n  readonly pads: readonly number[];\n}\n\nconst parsePoolCommonAttributes = (attributes: Record<string, unknown>): PoolCommonAttributes => ({\n  format: attributes.format as FormatAttributes['format'],\n  autoPad: ['NOTSET', 'VALID', 'SAME_UPPER', 'SAME_LOWER'][attributes.auto_pad as number],\n  ceilMode: attributes.ceil_mode as number,\n  kernelShape: attributes.kernel_shape as [number, number],\n  strides: attributes.strides as [number, number],\n  pads: attributes.pads as [number, number, number, number]\n});\n\nexport interface AveragePoolAttributes extends PoolCommonAttributes, AttributeWithCacheKey {\n  readonly countIncludePad: boolean;\n}\n\nconst createAveragePoolProgramInfo =\n    (inputs: readonly TensorView[], metadata: ProgramMetadata, isGlobalOperator: boolean,\n     attributes: AveragePoolAttributes): ProgramInfo => {\n      const [adjustedAttributes, outputShape] =\n          getAdjustedPoolAttributesAndOutputShape(inputs, attributes, isGlobalOperator);\n      const kernelSize = ShapeUtil.size(adjustedAttributes.kernelShape);\n\n      const dataType = 'f32';\n\n      const op1 = 'value += x_val;';\n      let op2 = '';\n      if (adjustedAttributes.countIncludePad) {\n        op2 += `value /= ${dataType}(${kernelSize});`;\n      } else {\n        op2 += `value /= ${dataType}(${kernelSize} - pad);`;\n      }\n      return {\n        ...metadata,\n        outputs: [{dims: outputShape, dataType: inputs[0].dataType, gpuDataType: GpuDataType.default}],\n        getShaderSource: shaderHelper => generatePoolingCode(\n            shaderHelper, inputs[0].dims, outputShape, adjustedAttributes, op1, op2, dataType, '0.0'),\n        dispatchGroup: () => ({x: Math.ceil(ShapeUtil.size(outputShape) / 64 /* workgroup size */)})\n      };\n    };\n\nexport const parseAveragePoolAttributes = (attributes: Record<string, unknown>): AveragePoolAttributes => {\n  const countIncludePad = (attributes.count_include_pad as number) === 0 ? false : true;\n\n  const attr = parsePoolCommonAttributes(attributes);\n  // TODO: support attribute 'ceil_mode'\n  if (attr.ceilMode !== 0) {\n    throw new Error('using ceil() in shape computation is not yet supported for AveragePool');\n  }\n\n  return createAttributeWithCacheKey({countIncludePad, ...attr});\n};\n\nexport const averagePool = (context: ComputeContext, attributes: AveragePoolAttributes): void => {\n  validateInputs(context.inputs);\n  const metadata = {name: 'AveragePool', inputTypes: [GpuDataType.default], cacheHint: attributes.cacheKey};\n  context.compute({...metadata, get: () => createAveragePoolProgramInfo(context.inputs, metadata, false, attributes)});\n};\n\nconst globalPoolAttributes = {\n  autoPad: '',\n  ceilMode: 0,\n  countIncludePad: false,\n  kernelShape: [],\n  strides: [],\n  pads: [],\n  storageOrder: 0,\n  dilations: [],\n  cacheKey: ''\n};\n\nexport const parseGlobalAveragePoolAttributes = (attributes: Record<string, unknown>): AveragePoolAttributes => {\n  const format = attributes.format as FormatAttributes['format'];\n  return {format, ...globalPoolAttributes, cacheKey: format};\n};\n\nexport const globalAveragePool = (context: ComputeContext, attributes: AveragePoolAttributes): void => {\n  validateInputs(context.inputs);\n  const metadata = {name: 'GlobalAveragePool', inputTypes: [GpuDataType.default], cacheHint: attributes.cacheKey};\n  context.compute({...metadata, get: () => createAveragePoolProgramInfo(context.inputs, metadata, true, attributes)});\n};\n\nexport interface MaxPoolAttributes extends PoolCommonAttributes, AttributeWithCacheKey {\n  readonly storageOrder: number;\n  readonly dilations: number[];\n}\n\nconst createMaxPoolProgramInfo =\n    (inputs: readonly TensorView[], metadata: ProgramMetadata, isGlobalOperator: boolean,\n     attributes: MaxPoolAttributes): ProgramInfo => {\n      const [adjustedAttributes, outputShape] =\n          getAdjustedPoolAttributesAndOutputShape(inputs, attributes, isGlobalOperator);\n      const op1 = `\n      value = max(x_val, value);\n    `;\n      const op2 = '';\n      return {\n        ...metadata,\n        outputs: [{dims: outputShape, dataType: inputs[0].dataType, gpuDataType: GpuDataType.default}],\n        getShaderSource: shaderHelper =>\n            generatePoolingCode(shaderHelper, inputs[0].dims, outputShape, adjustedAttributes, op1, op2, 'f32', '-1e5'),\n        dispatchGroup: () => ({x: Math.ceil(ShapeUtil.size(outputShape) / 64 /* workgroup size */)})\n      };\n    };\n\nexport const maxPool = (context: ComputeContext, attributes: MaxPoolAttributes): void => {\n  validateInputs(context.inputs);\n  const metadata = {name: 'MaxPool', inputTypes: [GpuDataType.default], cacheHint: attributes.cacheKey};\n  context.compute({...metadata, get: () => createMaxPoolProgramInfo(context.inputs, metadata, false, attributes)});\n};\n\nexport const parseMaxPoolAttributes = (attributes: Record<string, unknown>): MaxPoolAttributes => {\n  const storageOrder = attributes.storage_order as number;\n  const dilations = attributes.dilations as [number, number];\n\n  const attr = parsePoolCommonAttributes(attributes);\n  // TODO: support attribute 'ceil_mode' and 'storage_order'\n  if (storageOrder !== 0) {\n    throw new Error('column major storage order is not yet supported for MaxPool');\n  }\n  if (attr.ceilMode !== 0) {\n    throw new Error('using ceil() in shape computation is not yet supported for MaxPool');\n  }\n\n  return createAttributeWithCacheKey({storageOrder, dilations, ...attr});\n};\n\nexport const parseGlobalMaxPoolAttributes = (attributes: Record<string, unknown>): MaxPoolAttributes => {\n  const format = attributes.format as FormatAttributes['format'];\n  return {format, ...globalPoolAttributes, cacheKey: format};\n};\n\nexport const globalMaxPool = (context: ComputeContext, attributes: MaxPoolAttributes): void => {\n  validateInputs(context.inputs);\n  const metadata = {name: 'GlobalMaxPool', inputTypes: [GpuDataType.default], cacheHint: attributes.cacheKey};\n  context.compute({...metadata, get: () => createMaxPoolProgramInfo(context.inputs, metadata, true, attributes)});\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {DataType} from '../../../wasm-common';\nimport {TensorView} from '../../tensor';\nimport {ShapeUtil} from '../../util';\nimport {AttributeWithCacheKey, createAttributeWithCacheKey} from '../attribute-with-cache-key';\nimport {ComputeContext, GpuDataType, ProgramInfo} from '../types';\n\nimport {createIndicesHelper, ShaderHelper} from './common';\n\nexport interface TransposeAttributes extends AttributeWithCacheKey {\n  readonly perm: number[];\n}\n\nexport const transposeProgramMetadata = {\n  name: 'Transpose',\n  inputTypes: [GpuDataType.default]\n};\n\nconst validateInputs = (inputs: readonly TensorView[]): void => {\n  if (!inputs || inputs.length !== 1) {\n    throw new Error('Transpose requires 1 input.');\n  }\n\n  if (inputs[0].dataType !== DataType.float) {\n    throw new Error('input should be float tensor');\n  }\n};\n\nconst getAdjustedPerm = (inputShape: readonly number[], perm: number[]): number[] =>\n    (perm && perm.length !== inputShape.length) ? [...(inputShape.keys())].reverse() : perm;\n\nconst getOutputShape = (inputShape: readonly number[], perm: number[]): readonly number[] =>\n    ShapeUtil.sortBasedOnPerm(inputShape, getAdjustedPerm(inputShape, perm));\n\nconst permFunctionBody = (perm: number[], rank: number): string => {\n  const reverseFunc = [];\n  reverseFunc.push(`fn perm(a: ptr<function, array<u32, ${rank}>>, i: ptr<function, array<u32, ${rank}>>) {`);\n  for (let i = 0; i < rank; ++i) {\n    reverseFunc.push(`\\t(*a)[${perm[i]}]=(*i)[${i}];`);\n  }\n  reverseFunc.push('\\t}');\n  return reverseFunc.join('\\n');\n};\n\nexport const createTransposeProgramInfo = (input: TensorView, permAttr: number[]): ProgramInfo => {\n  const dataType = 'f32';  // TODO: support other data type\n  const inputShape = input.dims;\n  const perm = getAdjustedPerm(inputShape, permAttr);\n  const outputShape = getOutputShape(inputShape, perm);\n  const rank = inputShape.length;\n  const outputSize = ShapeUtil.size(outputShape);\n  // A dims=[${inputs[0].dims.toString()}]\n  // out Dims=[${unpackedOutputShape.toString()}]\n  // based on perm=[${perm.toString()}]\n\n  const outputIndicesHelper = createIndicesHelper('output', outputShape);\n  const inputIndicesHelper = createIndicesHelper('a', inputShape);\n\n  const getShaderSource = (shaderHelper: ShaderHelper) => `\n  @group(0) @binding(0) var<storage, read> a : array<${dataType}>;\n  @group(0) @binding(1) var<storage, read_write> output : array<${dataType}>;\n\n  ${permFunctionBody(perm, rank)}\n  ${outputIndicesHelper.o2iImpl}\n  ${inputIndicesHelper.i2oImpl}\n\n  ${shaderHelper.mainStart()}\n    ${shaderHelper.guardAgainstOutOfBoundsWorkgroupSizes(outputSize)}\n\n    ${outputIndicesHelper.indicesVariableDeclaration('indices')}\n    ${outputIndicesHelper.o2iCall('global_idx', 'indices')}\n    ${inputIndicesHelper.indicesVariableDeclaration('aIndices')}\n    perm(&aIndices, &indices);\n\n    output[global_idx] = a[${inputIndicesHelper.i2oExpression('aIndices')}];\n  }`;\n  return {\n    ...transposeProgramMetadata,\n    outputs: [{dims: outputShape, dataType: input.dataType, gpuDataType: GpuDataType.default}],\n    getShaderSource,\n    dispatchGroup: () => ({x: Math.ceil(outputSize / 64 /* workgroup size */)})\n  };\n};\n\nexport const transpose = (context: ComputeContext, attributes: TransposeAttributes): void => {\n  validateInputs(context.inputs);\n  context.compute({\n    ...transposeProgramMetadata,\n    cacheHint: attributes.cacheKey,\n    get: () => createTransposeProgramInfo(context.inputs[0], attributes.perm)\n  });\n};\n\nexport const parseTransposeAttributes = (attributes: Record<string, unknown>): TransposeAttributes =>\n    createAttributeWithCacheKey({perm: attributes.perm as number[]});\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {TensorView} from '../../tensor';\nimport {MAX_CLIP, MIN_CLIP, ShapeUtil} from '../../util';\nimport {AttributeWithCacheKey, createAttributeWithCacheKey} from '../attribute-with-cache-key';\nimport {ComputeContext, GpuDataType, ProgramInfo, ProgramInfoLoader, ProgramMetadata} from '../types';\n\nimport {ShaderHelper} from './common';\n\ntype BuiltinFunctionName = string;\ntype ElementwiseCustomExpression = (expression: string) => string;\ntype ElementwiseFunctionCall = BuiltinFunctionName|ElementwiseCustomExpression;\n\nconst createElementwiseProgramShader =\n    (shaderHelper: ShaderHelper, datasize: number, funcCall: ElementwiseFunctionCall,\n     additionalImplementation?: string): string => {\n      const vecSize = Math.ceil(datasize / 4);\n\n      let expression = '';\n      if (typeof funcCall === 'string') {\n        expression = `${funcCall}(a)`;\n      } else {\n        expression = funcCall('a');\n      }\n      return `\n  @group(0) @binding(0) var<storage, read> inputData : array<vec4<f32>>;\n  @group(0) @binding(1) var<storage, read_write> outputData : array<vec4<f32>>;\n\n  ${additionalImplementation ?? ''}\n\n  ${shaderHelper.mainStart()}\n    ${shaderHelper.guardAgainstOutOfBoundsWorkgroupSizes(vecSize)}\n\n    let a = inputData[global_idx];\n    outputData[global_idx] = ${expression};\n  }`;\n    };\n\nconst createElementwiseProgramInfo =\n    (metadata: ProgramMetadata, input: TensorView, funcCall: ElementwiseFunctionCall,\n     additionalImplementation?: string): ProgramInfo => ({\n      ...metadata,\n      getShaderSource: shaderHelper =>\n          createElementwiseProgramShader(shaderHelper, ShapeUtil.size(input.dims), funcCall, additionalImplementation),\n      outputs: [{dims: input.dims, dataType: input.dataType, gpuDataType: GpuDataType.default}],\n      dispatchGroup: (inputTensors) =>\n          ({x: Math.ceil(ShapeUtil.size(inputTensors[0].dims) / 64 /* workgroup size */ / 4 /* vec size */)})\n    });\n\nconst createElementwiseProgramInfoLoader =\n    (input: TensorView, name: string, funcCall: ElementwiseFunctionCall, additionalImplementation?: string,\n     cacheKey?: string): ProgramInfoLoader => {\n      const metadata: ProgramMetadata = {name, inputTypes: [GpuDataType.default], cacheHint: cacheKey};\n      return {\n        ...metadata,\n        get: () => createElementwiseProgramInfo(metadata, input, funcCall, additionalImplementation)\n      };\n    };\n\nexport const abs = (context: ComputeContext): void => {\n  context.compute(createElementwiseProgramInfoLoader(context.inputs[0], 'Abs', 'abs'));\n};\n\nexport const acos = (context: ComputeContext): void => {\n  context.compute(createElementwiseProgramInfoLoader(context.inputs[0], 'Acos', 'acos'));\n};\n\nexport const acosh = (context: ComputeContext): void => {\n  context.compute(createElementwiseProgramInfoLoader(context.inputs[0], 'Acosh', 'acosh'));\n};\n\nexport const asin = (context: ComputeContext): void => {\n  context.compute(createElementwiseProgramInfoLoader(context.inputs[0], 'Asin', 'asin'));\n};\n\nexport const asinh = (context: ComputeContext): void => {\n  context.compute(createElementwiseProgramInfoLoader(context.inputs[0], 'Asinh', 'asinh'));\n};\n\nexport const atan = (context: ComputeContext): void => {\n  context.compute(createElementwiseProgramInfoLoader(context.inputs[0], 'Atan', 'atan'));\n};\nexport const atanh = (context: ComputeContext): void => {\n  context.compute(createElementwiseProgramInfoLoader(context.inputs[0], 'Atanh', 'atanh'));\n};\n\nexport interface ClipAttributes extends AttributeWithCacheKey {\n  readonly min: number;\n  readonly max: number;\n}\n\nexport const clipV10 = (context: ComputeContext, attributes: ClipAttributes): void => {\n  context.compute(\n      createElementwiseProgramInfoLoader(\n          context.inputs[0], 'Clip', a => `clamp(${a}, clip_min_, clip_max_)`, `\n    const clip_min_: vec4<f32> = vec4(f32(${attributes.min}));\n    const clip_max_: vec4<f32> = vec4(f32(${attributes.max}));\n`,\n          attributes.cacheKey),\n      {inputs: [0]});\n};\nconst generateClipAttributesFromInputs = (inputs: readonly TensorView[]): ClipAttributes => {\n  const min = (inputs.length >= 2) ? inputs[1].getFloat32Array()[0] : MIN_CLIP;\n  const max = (inputs.length >= 3) ? inputs[2].getFloat32Array()[0] : MAX_CLIP;\n  return createAttributeWithCacheKey({min, max});\n};\n\nexport const clip = (context: ComputeContext): void => {\n  const attributes = generateClipAttributesFromInputs(context.inputs);\n  clipV10(context, attributes);\n};\n\nexport const ceil = (context: ComputeContext): void => {\n  context.compute(createElementwiseProgramInfoLoader(context.inputs[0], 'Ceil', 'ceil'));\n};\n\nexport const cos = (context: ComputeContext): void => {\n  context.compute(createElementwiseProgramInfoLoader(context.inputs[0], 'Cos', 'cos'));\n};\n\nexport const cosh = (context: ComputeContext): void => {\n  context.compute(createElementwiseProgramInfoLoader(context.inputs[0], 'Cosh', 'cosh'));\n};\n\nexport interface AlphaAttributes extends AttributeWithCacheKey {\n  readonly alpha: number;\n}\n\nexport const parseAlphaAttributes = (attributes: Record<string, unknown>): AlphaAttributes =>\n    createAttributeWithCacheKey(attributes as {alpha: number});\n\nexport const elu = (context: ComputeContext, attributes: AlphaAttributes): void => {\n  context.compute(createElementwiseProgramInfoLoader(\n      context.inputs[0], 'Elu', a => `elu_vf32(${a})`, `\n  const elu_alpha_: f32 = f32(${attributes.alpha});\n\n  fn elu_f32(a: f32) -> f32 {\n  return select((exp(a) - 1.0) * elu_alpha_, a, a >= 0.0);\n  }\n\n  fn elu_vf32(v: vec4<f32>) -> vec4<f32> {\n  return vec4(elu_f32(v.x), elu_f32(v.y), elu_f32(v.z), elu_f32(v.w));\n  }`,\n      attributes.cacheKey));\n};\n\nexport const erf = (context: ComputeContext): void => {\n  context.compute(createElementwiseProgramInfoLoader(context.inputs[0], 'Erf', a => `erf_vf32(${a})`, `\n  const r0: f32 = 0.3275911;\n  const r1: f32 = 0.254829592;\n  const r2: f32 = -0.284496736;\n  const r3: f32 = 1.421413741;\n  const r4: f32 = -1.453152027;\n  const r5: f32 = 1.061405429;\n\n  fn erf_vf32(v: vec4<f32>) -> vec4<f32> {\n    let absv = abs(v);\n    let x = 1.0 / (1.0 + r0 * absv);\n    return sign(v) * (1.0 - ((((r5 * x + r4) * x + r3) * x + r2) * x + r1) * x * exp(-absv * absv));\n  }`));\n};\n\nexport const exp = (context: ComputeContext): void => {\n  context.compute(createElementwiseProgramInfoLoader(context.inputs[0], 'Exp', 'exp'));\n};\n\nexport const floor = (context: ComputeContext): void => {\n  context.compute(createElementwiseProgramInfoLoader(context.inputs[0], 'Floor', 'floor'));\n};\n\nexport const leakyRelu = (context: ComputeContext, attributes: AlphaAttributes): void => {\n  context.compute(createElementwiseProgramInfoLoader(\n      context.inputs[0], 'LeakyRelu', a => `select(leaky_relu_alpha_ * ${a}, ${a}, ${a} >= vec4<f32>(0.0))`,\n      `const leaky_relu_alpha_: f32 = f32(${attributes.alpha});`, attributes.cacheKey));\n};\n\nexport const neg = (context: ComputeContext): void => {\n  context.compute(createElementwiseProgramInfoLoader(context.inputs[0], 'Neg', a => `-${a}`));\n};\n\nexport const reciprocal = (context: ComputeContext): void => {\n  context.compute(createElementwiseProgramInfoLoader(context.inputs[0], 'Reciprocal', a => `1.0/${a}`));\n};\n\nexport const relu = (context: ComputeContext): void => {\n  context.compute(createElementwiseProgramInfoLoader(\n      context.inputs[0], 'Relu', a => `select(vec4<f32>(0.0), ${a}, ${a} > vec4<f32>(0.0))`));\n};\n\nexport const sigmoid = (context: ComputeContext): void => {\n  context.compute(createElementwiseProgramInfoLoader(context.inputs[0], 'Sigmoid', a => `(1.0 / (1.0 + exp(-${a})))`));\n};\n\nexport const sin = (context: ComputeContext): void => {\n  context.compute(createElementwiseProgramInfoLoader(context.inputs[0], 'Sin', 'sin'));\n};\n\nexport const sinh = (context: ComputeContext): void => {\n  context.compute(createElementwiseProgramInfoLoader(context.inputs[0], 'Sinh', 'sinh'));\n};\n\nexport const sqrt = (context: ComputeContext): void => {\n  context.compute(createElementwiseProgramInfoLoader(context.inputs[0], 'Sqrt', 'sqrt'));\n};\n\nexport const tan = (context: ComputeContext): void => {\n  context.compute(createElementwiseProgramInfoLoader(context.inputs[0], 'Tan', 'tan'));\n};\n\nexport const tanh = (context: ComputeContext): void => {\n  context.compute(createElementwiseProgramInfoLoader(context.inputs[0], 'Tanh', 'tanh'));\n};\n\nexport const thresholdedRelu = (context: ComputeContext, attributes: AlphaAttributes): number => {\n  context.compute(createElementwiseProgramInfoLoader(\n      context.inputs[0], 'ThresholdedRelu', a => `select(vec4<f32>(0.0), ${a}, ${a} > thresholded_relu_alpha_)`,\n      `const thresholded_relu_alpha_: vec4<f32> = vec4<f32>(${attributes.alpha});`, attributes.cacheKey));\n  return 0;\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {WebGpuBackend} from '../backend-webgpu';\nimport {LOG_DEBUG} from '../log';\n\nimport {createShaderHelper} from './ops/common';\nimport {Artifact, GpuData, ProgramInfo} from './types';\n\n/**\n * ProgramManager is the main class behind running computations\n * It builds ProgramInfo's into Artifacts\n * It compiles given ProgramInfo's into WebGL Prorams (cached as Artifacts)\n * Uses the artifact to run the computation by calling Draw on\n * the WebGL drawing buffer\n * ProgramManager automatically maps (binds) input variables to their\n * corresponding Location's in the binary program\n */\nexport class ProgramManager {\n  repo: Map<unknown, Artifact>;  // this should be per-session object\n  attributesBound: boolean;\n\n  constructor(private backend: WebGpuBackend) {\n    this.repo = new Map();\n    this.attributesBound = false;\n  }\n  getArtifact(key: unknown): Artifact|undefined {\n    return this.repo.get(key);\n  }\n  setArtifact(key: unknown, artifact: Artifact): void {\n    this.repo.set(key, artifact);\n  }\n  run(buildArtifact: Artifact, inputs: GpuData[], outputs: GpuData[], dispatchGroup: [number, number, number]): void {\n    const device = this.backend.device;\n    const computePassEncoder = this.backend.getComputePassEncoder();\n\n    if (this.backend.profilingEnabled) {\n      // profiling write start timestamp\n\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      (computePassEncoder as any).writeTimestamp(this.backend.profilingQuerySet, 0);\n    }\n\n    computePassEncoder.setPipeline(buildArtifact.computePipeline);\n    const entries = [];\n    for (const input of inputs) {\n      entries.push({binding: entries.length, resource: {buffer: input.buffer}});\n    }\n    for (const output of outputs) {\n      entries.push({binding: entries.length, resource: {buffer: output.buffer}});\n    }\n    const bindGroup = device.createBindGroup({layout: buildArtifact.computePipeline.getBindGroupLayout(0), entries});\n    computePassEncoder.setBindGroup(0, bindGroup);\n\n    computePassEncoder.dispatchWorkgroups(...dispatchGroup);\n\n    this.backend.pendingDispatchNumber++;\n\n    if (this.backend.profilingEnabled) {\n      // profiling write end timestamp\n\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      (computePassEncoder as any).writeTimestamp(this.backend.profilingQuerySet, 1);\n      // eslint-disable-next-line no-bitwise\n      const queryData = this.backend.gpuDataManager.create(16, GPUBufferUsage.COPY_SRC | GPUBufferUsage.QUERY_RESOLVE);\n      // eslint-disable-next-line no-bitwise\n      const syncData = this.backend.gpuDataManager.create(16, GPUBufferUsage.MAP_READ | GPUBufferUsage.COPY_DST);\n\n      this.backend.endComputePass();\n      this.backend.getCommandEncoder().resolveQuerySet(this.backend.profilingQuerySet, 0, 2, queryData.buffer, 0);\n      this.backend.getCommandEncoder().copyBufferToBuffer(queryData.buffer, 0, syncData.buffer, 0, 16);\n      this.backend.flush();\n\n      const kernelId = this.backend.currentKernelId!;\n      const kernelName = this.backend.kernels.get(kernelId)![0];\n\n      syncData.buffer.mapAsync(GPUMapMode.READ).then(() => {\n        const mappedData = new BigUint64Array(syncData.buffer.getMappedRange());\n        const startTimeU64 = mappedData[0];\n        const endTimeU64 = mappedData[1];\n\n        syncData.buffer.unmap();\n\n        if (typeof this.backend.profilingTimeBase === 'undefined') {\n          this.backend.profilingTimeBase = startTimeU64;\n        }\n\n        const startTime = Number(startTimeU64 - this.backend.profilingTimeBase);\n        const endTime = Number(endTimeU64 - this.backend.profilingTimeBase);\n\n        if (!Number.isSafeInteger(startTime) || !Number.isSafeInteger(endTime)) {\n          throw new RangeError('incorrect timestamp range');\n        }\n\n        this.backend.gpuDataManager.release(queryData.id);\n        this.backend.gpuDataManager.release(syncData.id);\n\n        // eslint-disable-next-line no-console\n        console.log(`[profiling] kernel \"${kernelId}|${kernelName}\" execution time: ${endTime - startTime} ns`);\n      });\n    }\n\n    if (this.backend.pendingDispatchNumber >= 16) {\n      this.backend.flush();\n    }\n  }\n  dispose(): void {\n    // this.repo.forEach(a => this.glContext.deleteProgram(a.program));\n  }\n  build(programInfo: ProgramInfo, normalizedDispatchGroupSize: [number, number, number]): Artifact {\n    const device = this.backend.device;\n\n    const code = programInfo.getShaderSource(createShaderHelper(normalizedDispatchGroupSize));\n    const shaderModule = device.createShaderModule({code});\n    LOG_DEBUG('verbose', () => `[WebGPU] shader code: ${code}`);\n\n    const computePipeline =\n        device.createComputePipeline({compute: {module: shaderModule, entryPoint: 'main'}, layout: 'auto'});\n\n    return {programInfo, computePipeline};\n  }\n\n  normalizeDispatchGroupSize(dispatchGroup: ReturnType<ProgramInfo['dispatchGroup']>): [number, number, number] {\n    const x = typeof dispatchGroup === 'number' ? dispatchGroup : dispatchGroup.x;\n    const y = typeof dispatchGroup === 'number' ? 1 : (dispatchGroup.y || 1);\n    const z = typeof dispatchGroup === 'number' ? 1 : (dispatchGroup.z || 1);\n    const limitPerDimension = this.backend.device.limits.maxComputeWorkgroupsPerDimension;\n    if (x <= limitPerDimension && y <= limitPerDimension && z <= limitPerDimension) {\n      return [x, y, z];\n    }\n    const size = x * y * z;\n    let dispatchAverage = Math.ceil(Math.sqrt(size));\n    if (dispatchAverage > limitPerDimension) {\n      dispatchAverage = Math.ceil(Math.cbrt(size));\n      if (dispatchAverage > limitPerDimension) {\n        throw new Error('Total dispatch size exceeds WebGPU maximum.');\n      }\n      return [dispatchAverage, dispatchAverage, dispatchAverage];\n    } else {\n      return [dispatchAverage, dispatchAverage, 1];\n    }\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Tensor, TensorView} from '../tensor';\n\nimport {ShaderHelper} from './ops/common';\n\nexport enum GpuDataType {\n  default = 0,\n  upload = 1,\n  profile = 2\n}\nexport type GpuDataId = number;\n\nexport interface GpuData {\n  type: GpuDataType;\n  id: GpuDataId;\n  buffer: GPUBuffer;\n}\n\nexport interface TensorInfo {\n  id?: Tensor.Id;\n  dims: readonly number[];\n  dataType: number;\n  gpuDataType: GpuDataType;\n}\n\n\nexport interface ProgramVariable {\n  type: 'float'|'int';\n  name: string;\n  arrayLength?: number;\n  data: number|number[];\n}\n\n\nexport interface ProgramMetadata {\n  /**\n   * the name of the program. used for debugging and profiling\n   */\n  name: string;\n\n  /**\n   * gpu data types for each input\n   */\n  inputTypes: GpuDataType[];\n  /**\n   * an optional string as a cache hint in the artifact cache\n   */\n  cacheHint?: string;\n}\n\n/**\n * A ProgramInfoLoader allows\n */\nexport interface ProgramInfoLoader extends ProgramMetadata {\n  /**\n   * a function to get the program info\n   */\n  get(): ProgramInfo;\n}\n\n/**\n * A set of data that represent a shader program\n */\nexport interface ProgramInfo extends ProgramMetadata {\n  /**\n   * information of uniform variables\n   */\n  variables?: ProgramVariable[];\n  /**\n   * tensor info for outputs\n   */\n  outputs: TensorInfo[];\n  /**\n   * the shader's processing source code\n   */\n  getShaderSource: (shaderHelper: ShaderHelper) => string;\n  /**\n   * default is \"main\"\n   */\n  // entryPoint: string;\n\n  dispatchGroup: (inputs: readonly TensorView[]) => {\n    x: number;\n    y?: number;\n    z?: number;\n  };\n}\n\nexport interface Artifact {\n  programInfo: ProgramInfo;\n  computePipeline: GPUComputePipeline;\n}\n\nexport interface ComputeContextInputsOutputsMapping {\n  /**\n   * specify the mapping to the program's inputs. the value can be a number or a tensor view.\n   * - if it's a number, it's the index of the kernel's input\n   * - if it's a tensor view, it's an existing tensor view that will be used as the input\n   *\n   * if inputs is not specified, the mapping will be the kernel's inputs in order.\n   */\n  readonly inputs?: ReadonlyArray<TensorView|number>;\n  /**\n   * specify the mapping to the program's outputs. the value must be a number.\n   * - if it's a non-negative number, it's the index of the kernel's output\n   * - if it's -1, it's an output that will be created as a temporary value. this value will be released after\n   * the kernel is executed.\n   * - if it's -2, it's an output that will be created as a persistent value. this value will be released when the\n   * kernel is released.\n   *\n   * if outputs is not specified, the mapping will be the kernel's outputs in order.\n   */\n  readonly outputs?: readonly number[];\n}\n\n/**\n * A ComputeContext instance carries the states that representing the current running of a kernel.\n */\nexport interface ComputeContext {\n  /**\n   * stores the pointer to OpKernelContext\n   */\n  readonly opKernelContext: number;\n\n  /**\n   * a list of inputs, each input is an instance of TensorView\n   */\n  readonly inputs: readonly TensorView[];\n\n  /**\n   * a custom data object that can be used to store any data that is needed by the kernel\n   */\n  readonly customData: {[key: string]: unknown};\n\n  compute(program: ProgramInfoLoader|ProgramInfo, inputsOutputsMapping?: ComputeContextInputsOutputsMapping):\n      TensorView[];\n  output(index: number, dims: readonly number[]): number;\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\ninterface ExtraOptionsHandler {\n  (name: string, value: string): void;\n}\n\nexport const iterateExtraOptions =\n    (options: Record<string, unknown>, prefix: string, seen: WeakSet<Record<string, unknown>>,\n     handler: ExtraOptionsHandler): void => {\n      if (typeof options == 'object' && options !== null) {\n        if (seen.has(options)) {\n          throw new Error('Circular reference in options');\n        } else {\n          seen.add(options);\n        }\n      }\n\n      Object.entries(options).forEach(([key, value]) => {\n        const name = (prefix) ? prefix + key : key;\n        if (typeof value === 'object') {\n          iterateExtraOptions(value as Record<string, unknown>, name + '.', seen, handler);\n        } else if (typeof value === 'string' || typeof value === 'number') {\n          handler(name, value.toString());\n        } else if (typeof value === 'boolean') {\n          handler(name, (value) ? '1' : '0');\n        } else {\n          throw new Error(`Can't handle extra config type: ${typeof value}`);\n        }\n      });\n    };\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Env, env, InferenceSession} from 'onnxruntime-common';\n\nimport {OrtWasmMessage, SerializableModeldata, SerializableSessionMetadata, SerializableTensor} from './proxy-messages';\nimport * as core from './wasm-core-impl';\nimport {initializeWebAssembly} from './wasm-factory';\n\nconst isProxy = (): boolean => !!env.wasm.proxy && typeof document !== 'undefined';\nlet proxyWorker: Worker|undefined;\nlet initializing = false;\nlet initialized = false;\nlet aborted = false;\n\n// resolve; reject\ntype PromiseCallbacks<T = void> = [(result: T) => void, (reason: unknown) => void];\n\nlet initWasmCallbacks: PromiseCallbacks;\nlet initOrtCallbacks: PromiseCallbacks;\nconst createSessionAllocateCallbacks: Array<PromiseCallbacks<SerializableModeldata>> = [];\nconst createSessionFinalizeCallbacks: Array<PromiseCallbacks<SerializableSessionMetadata>> = [];\nconst createSessionCallbacks: Array<PromiseCallbacks<SerializableSessionMetadata>> = [];\nconst releaseSessionCallbacks: Array<PromiseCallbacks<void>> = [];\nconst runCallbacks: Array<PromiseCallbacks<SerializableTensor[]>> = [];\nconst endProfilingCallbacks: Array<PromiseCallbacks<void>> = [];\n\nconst ensureWorker = (): void => {\n  if (initializing || !initialized || aborted || !proxyWorker) {\n    throw new Error('worker not ready');\n  }\n};\n\nconst onProxyWorkerMessage = (ev: MessageEvent<OrtWasmMessage>): void => {\n  switch (ev.data.type) {\n    case 'init-wasm':\n      initializing = false;\n      if (ev.data.err) {\n        aborted = true;\n        initWasmCallbacks[1](ev.data.err);\n      } else {\n        initialized = true;\n        initWasmCallbacks[0]();\n      }\n      break;\n    case 'init-ort':\n      if (ev.data.err) {\n        initOrtCallbacks[1](ev.data.err);\n      } else {\n        initOrtCallbacks[0]();\n      }\n      break;\n    case 'create_allocate':\n      if (ev.data.err) {\n        createSessionAllocateCallbacks.shift()![1](ev.data.err);\n      } else {\n        createSessionAllocateCallbacks.shift()![0](ev.data.out!);\n      }\n      break;\n    case 'create_finalize':\n      if (ev.data.err) {\n        createSessionFinalizeCallbacks.shift()![1](ev.data.err);\n      } else {\n        createSessionFinalizeCallbacks.shift()![0](ev.data.out!);\n      }\n      break;\n    case 'create':\n      if (ev.data.err) {\n        createSessionCallbacks.shift()![1](ev.data.err);\n      } else {\n        createSessionCallbacks.shift()![0](ev.data.out!);\n      }\n      break;\n    case 'release':\n      if (ev.data.err) {\n        releaseSessionCallbacks.shift()![1](ev.data.err);\n      } else {\n        releaseSessionCallbacks.shift()![0]();\n      }\n      break;\n    case 'run':\n      if (ev.data.err) {\n        runCallbacks.shift()![1](ev.data.err);\n      } else {\n        runCallbacks.shift()![0](ev.data.out!);\n      }\n      break;\n    case 'end-profiling':\n      if (ev.data.err) {\n        endProfilingCallbacks.shift()![1](ev.data.err);\n      } else {\n        endProfilingCallbacks.shift()![0]();\n      }\n      break;\n    default:\n  }\n};\n\nconst scriptSrc = typeof document !== 'undefined' ? (document?.currentScript as HTMLScriptElement)?.src : undefined;\n\nexport const initializeWebAssemblyInstance = async(): Promise<void> => {\n  if (!BUILD_DEFS.DISABLE_WASM_PROXY && isProxy()) {\n    if (initialized) {\n      return;\n    }\n    if (initializing) {\n      throw new Error('multiple calls to \\'initWasm()\\' detected.');\n    }\n    if (aborted) {\n      throw new Error('previous call to \\'initWasm()\\' failed.');\n    }\n\n    initializing = true;\n\n    // overwrite wasm filepaths\n    if (env.wasm.wasmPaths === undefined) {\n      if (scriptSrc && scriptSrc.indexOf('blob:') !== 0) {\n        env.wasm.wasmPaths = scriptSrc.substr(0, +(scriptSrc).lastIndexOf('/') + 1);\n      }\n    }\n\n    return new Promise<void>((resolve, reject) => {\n      proxyWorker?.terminate();\n      // eslint-disable-next-line @typescript-eslint/no-var-requires, @typescript-eslint/no-require-imports\n      proxyWorker = require('worker-loader?inline=no-fallback!./proxy-worker/main').default() as Worker;\n      proxyWorker.onmessage = onProxyWorkerMessage;\n      initWasmCallbacks = [resolve, reject];\n      const message: OrtWasmMessage = {type: 'init-wasm', in : env.wasm};\n      proxyWorker.postMessage(message);\n    });\n\n  } else {\n    return initializeWebAssembly(env.wasm);\n  }\n};\n\nexport const initializeRuntime = async(env: Env): Promise<void> => {\n  if (!BUILD_DEFS.DISABLE_WASM_PROXY && isProxy()) {\n    ensureWorker();\n    return new Promise<void>((resolve, reject) => {\n      initOrtCallbacks = [resolve, reject];\n      const message: OrtWasmMessage = {type: 'init-ort', in : env};\n      proxyWorker!.postMessage(message);\n    });\n  } else {\n    await core.initRuntime(env);\n  }\n};\n\nexport const createSessionAllocate = async(model: Uint8Array): Promise<SerializableModeldata> => {\n  if (!BUILD_DEFS.DISABLE_WASM_PROXY && isProxy()) {\n    ensureWorker();\n    return new Promise<SerializableModeldata>((resolve, reject) => {\n      createSessionAllocateCallbacks.push([resolve, reject]);\n      const message: OrtWasmMessage = {type: 'create_allocate', in : {model}};\n      proxyWorker!.postMessage(message, [model.buffer]);\n    });\n  } else {\n    return core.createSessionAllocate(model);\n  }\n};\n\nexport const createSessionFinalize = async(modeldata: SerializableModeldata, options?: InferenceSession.SessionOptions):\n    Promise<SerializableSessionMetadata> => {\n      if (!BUILD_DEFS.DISABLE_WASM_PROXY && isProxy()) {\n        ensureWorker();\n        return new Promise<SerializableSessionMetadata>((resolve, reject) => {\n          createSessionFinalizeCallbacks.push([resolve, reject]);\n          const message: OrtWasmMessage = {type: 'create_finalize', in : {modeldata, options}};\n          proxyWorker!.postMessage(message);\n        });\n      } else {\n        return core.createSessionFinalize(modeldata, options);\n      }\n    };\n\nexport const createSession =\n    async(model: Uint8Array, options?: InferenceSession.SessionOptions): Promise<SerializableSessionMetadata> => {\n  if (!BUILD_DEFS.DISABLE_WASM_PROXY && isProxy()) {\n    ensureWorker();\n    return new Promise<SerializableSessionMetadata>((resolve, reject) => {\n      createSessionCallbacks.push([resolve, reject]);\n      const message: OrtWasmMessage = {type: 'create', in : {model, options}};\n      proxyWorker!.postMessage(message, [model.buffer]);\n    });\n  } else {\n    return core.createSession(model, options);\n  }\n};\n\nexport const releaseSession = async(sessionId: number): Promise<void> => {\n  if (!BUILD_DEFS.DISABLE_WASM_PROXY && isProxy()) {\n    ensureWorker();\n    return new Promise<void>((resolve, reject) => {\n      releaseSessionCallbacks.push([resolve, reject]);\n      const message: OrtWasmMessage = {type: 'release', in : sessionId};\n      proxyWorker!.postMessage(message);\n    });\n  } else {\n    core.releaseSession(sessionId);\n  }\n};\n\nexport const run = async(\n    sessionId: number, inputIndices: number[], inputs: SerializableTensor[], outputIndices: number[],\n    options: InferenceSession.RunOptions): Promise<SerializableTensor[]> => {\n  if (!BUILD_DEFS.DISABLE_WASM_PROXY && isProxy()) {\n    ensureWorker();\n    return new Promise<SerializableTensor[]>((resolve, reject) => {\n      runCallbacks.push([resolve, reject]);\n      const message: OrtWasmMessage = {type: 'run', in : {sessionId, inputIndices, inputs, outputIndices, options}};\n      proxyWorker!.postMessage(message, core.extractTransferableBuffers(inputs));\n    });\n  } else {\n    return core.run(sessionId, inputIndices, inputs, outputIndices, options);\n  }\n};\n\nexport const endProfiling = async(sessionId: number): Promise<void> => {\n  if (!BUILD_DEFS.DISABLE_WASM_PROXY && isProxy()) {\n    ensureWorker();\n    return new Promise<void>((resolve, reject) => {\n      endProfilingCallbacks.push([resolve, reject]);\n      const message: OrtWasmMessage = {type: 'end-profiling', in : sessionId};\n      proxyWorker!.postMessage(message);\n    });\n  } else {\n    core.endProfiling(sessionId);\n  }\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {InferenceSession} from 'onnxruntime-common';\n\nimport {iterateExtraOptions} from './options-utils';\nimport {allocWasmString} from './string-utils';\nimport {getInstance} from './wasm-factory';\n\nexport const setRunOptions = (options: InferenceSession.RunOptions): [number, number[]] => {\n  const wasm = getInstance();\n  let runOptionsHandle = 0;\n  const allocs: number[] = [];\n\n  const runOptions: InferenceSession.RunOptions = options || {};\n\n  try {\n    if (options?.logSeverityLevel === undefined) {\n      runOptions.logSeverityLevel = 2;  // Default to warning\n    } else if (\n        typeof options.logSeverityLevel !== 'number' || !Number.isInteger(options.logSeverityLevel) ||\n        options.logSeverityLevel < 0 || options.logSeverityLevel > 4) {\n      throw new Error(`log serverity level is not valid: ${options.logSeverityLevel}`);\n    }\n\n    if (options?.logVerbosityLevel === undefined) {\n      runOptions.logVerbosityLevel = 0;  // Default to 0\n    } else if (typeof options.logVerbosityLevel !== 'number' || !Number.isInteger(options.logVerbosityLevel)) {\n      throw new Error(`log verbosity level is not valid: ${options.logVerbosityLevel}`);\n    }\n\n    if (options?.terminate === undefined) {\n      runOptions.terminate = false;\n    }\n\n    let tagDataOffset = 0;\n    if (options?.tag !== undefined) {\n      tagDataOffset = allocWasmString(options.tag, allocs);\n    }\n\n    runOptionsHandle = wasm._OrtCreateRunOptions(\n        runOptions.logSeverityLevel!, runOptions.logVerbosityLevel!, !!runOptions.terminate!, tagDataOffset);\n    if (runOptionsHandle === 0) {\n      throw new Error('Can\\'t create run options');\n    }\n\n    if (options?.extra !== undefined) {\n      iterateExtraOptions(options.extra, '', new WeakSet<Record<string, unknown>>(), (key, value) => {\n        const keyDataOffset = allocWasmString(key, allocs);\n        const valueDataOffset = allocWasmString(value, allocs);\n\n        if (wasm._OrtAddRunConfigEntry(runOptionsHandle, keyDataOffset, valueDataOffset) !== 0) {\n          throw new Error(`Can't set a run config entry: ${key} - ${value}`);\n        }\n      });\n    }\n\n    return [runOptionsHandle, allocs];\n  } catch (e) {\n    if (runOptionsHandle !== 0) {\n      wasm._OrtReleaseRunOptions(runOptionsHandle);\n    }\n    allocs.forEach(wasm._free);\n    throw e;\n  }\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {readFile} from 'fs';\nimport {env, InferenceSession, SessionHandler, Tensor} from 'onnxruntime-common';\nimport {promisify} from 'util';\n\nimport {SerializableModeldata} from './proxy-messages';\nimport {createSession, createSessionAllocate, createSessionFinalize, endProfiling, initializeRuntime, releaseSession, run} from './proxy-wrapper';\n\nlet runtimeInitialized: boolean;\n\nexport class OnnxruntimeWebAssemblySessionHandler implements SessionHandler {\n  private sessionId: number;\n\n  inputNames: string[];\n  outputNames: string[];\n\n  async createSessionAllocate(path: string): Promise<SerializableModeldata> {\n    // fetch model from url and move to wasm heap. The arraybufffer that held the http\n    // response is freed once we return\n    const response = await fetch(path);\n    const arrayBuffer = await response.arrayBuffer();\n    return createSessionAllocate(new Uint8Array(arrayBuffer));\n  }\n\n  async loadModel(pathOrBuffer: string|Uint8Array, options?: InferenceSession.SessionOptions): Promise<void> {\n    if (!runtimeInitialized) {\n      await initializeRuntime(env);\n      runtimeInitialized = true;\n    }\n\n    if (typeof pathOrBuffer === 'string') {\n      if (typeof fetch === 'undefined') {\n        // node\n        const model = await promisify(readFile)(pathOrBuffer);\n        [this.sessionId, this.inputNames, this.outputNames] = await createSession(model, options);\n      } else {\n        // browser\n        // fetch model and move to wasm heap.\n        const modelData: SerializableModeldata = await this.createSessionAllocate(pathOrBuffer);\n        // create the session\n        [this.sessionId, this.inputNames, this.outputNames] = await createSessionFinalize(modelData, options);\n      }\n    } else {\n      [this.sessionId, this.inputNames, this.outputNames] = await createSession(pathOrBuffer, options);\n    }\n  }\n\n  async dispose(): Promise<void> {\n    return releaseSession(this.sessionId);\n  }\n\n  async run(feeds: SessionHandler.FeedsType, fetches: SessionHandler.FetchesType, options: InferenceSession.RunOptions):\n      Promise<SessionHandler.ReturnType> {\n    const inputArray: Tensor[] = [];\n    const inputIndices: number[] = [];\n    Object.entries(feeds).forEach(kvp => {\n      const name = kvp[0];\n      const tensor = kvp[1];\n      const index = this.inputNames.indexOf(name);\n      if (index === -1) {\n        throw new Error(`invalid input '${name}'`);\n      }\n      inputArray.push(tensor);\n      inputIndices.push(index);\n    });\n\n    const outputIndices: number[] = [];\n    Object.entries(fetches).forEach(kvp => {\n      const name = kvp[0];\n      // TODO: support pre-allocated output\n      const index = this.outputNames.indexOf(name);\n      if (index === -1) {\n        throw new Error(`invalid output '${name}'`);\n      }\n      outputIndices.push(index);\n    });\n\n    const outputs =\n        await run(this.sessionId, inputIndices, inputArray.map(t => [t.type, t.dims, t.data]), outputIndices, options);\n\n    const result: SessionHandler.ReturnType = {};\n    for (let i = 0; i < outputs.length; i++) {\n      result[this.outputNames[outputIndices[i]]] = new Tensor(outputs[i][0], outputs[i][2], outputs[i][1]);\n    }\n    return result;\n  }\n\n  startProfiling(): void {\n    // TODO: implement profiling\n  }\n\n  endProfiling(): void {\n    void endProfiling(this.sessionId);\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {InferenceSession} from 'onnxruntime-common';\n\nimport {iterateExtraOptions} from './options-utils';\nimport {allocWasmString} from './string-utils';\nimport {getInstance} from './wasm-factory';\n\nconst getGraphOptimzationLevel = (graphOptimizationLevel: string|unknown): number => {\n  switch (graphOptimizationLevel) {\n    case 'disabled':\n      return 0;\n    case 'basic':\n      return 1;\n    case 'extended':\n      return 2;\n    case 'all':\n      return 99;\n    default:\n      throw new Error(`unsupported graph optimization level: ${graphOptimizationLevel}`);\n  }\n};\n\nconst getExecutionMode = (executionMode: 'sequential'|'parallel'): number => {\n  switch (executionMode) {\n    case 'sequential':\n      return 0;\n    case 'parallel':\n      return 1;\n    default:\n      throw new Error(`unsupported execution mode: ${executionMode}`);\n  }\n};\n\nconst appendDefaultOptions = (options: InferenceSession.SessionOptions): void => {\n  if (!options.extra) {\n    options.extra = {};\n  }\n  if (!options.extra.session) {\n    options.extra.session = {};\n  }\n  const session = options.extra.session as Record<string, string>;\n  if (!session.use_ort_model_bytes_directly) {\n    // eslint-disable-next-line camelcase\n    session.use_ort_model_bytes_directly = '1';\n  }\n\n  // if using JSEP with WebGPU, always disable memory pattern\n  if (options.executionProviders &&\n      options.executionProviders.some(ep => (typeof ep === 'string' ? ep : ep.name) === 'webgpu')) {\n    options.enableMemPattern = false;\n  }\n};\n\nconst setExecutionProviders =\n    (sessionOptionsHandle: number, executionProviders: readonly InferenceSession.ExecutionProviderConfig[],\n     allocs: number[]): void => {\n      for (const ep of executionProviders) {\n        let epName = typeof ep === 'string' ? ep : ep.name;\n\n        // check EP name\n        switch (epName) {\n          case 'xnnpack':\n            epName = 'XNNPACK';\n            break;\n          case 'webnn':\n            epName = 'WEBNN';\n            if (typeof ep !== 'string') {\n              const webnnOptions = ep as InferenceSession.WebNNExecutionProviderOption;\n              if (webnnOptions?.deviceType) {\n                const keyDataOffset = allocWasmString('deviceType', allocs);\n                const valueDataOffset = allocWasmString(webnnOptions.deviceType, allocs);\n                if (getInstance()._OrtAddSessionConfigEntry(sessionOptionsHandle, keyDataOffset, valueDataOffset) !==\n                    0) {\n                  throw new Error(`Can't set a session config entry: 'deviceType' - ${webnnOptions.deviceType}`);\n                }\n              }\n              if (webnnOptions?.powerPreference) {\n                const keyDataOffset = allocWasmString('powerPreference', allocs);\n                const valueDataOffset = allocWasmString(webnnOptions.powerPreference, allocs);\n                if (getInstance()._OrtAddSessionConfigEntry(sessionOptionsHandle, keyDataOffset, valueDataOffset) !==\n                    0) {\n                  throw new Error(\n                      `Can't set a session config entry: 'powerPreference' - ${webnnOptions.powerPreference}`);\n                }\n              }\n            }\n            break;\n          case 'webgpu':\n            epName = 'JS';\n            break;\n          case 'wasm':\n          case 'cpu':\n            continue;\n          default:\n            throw new Error(`not supported EP: ${epName}`);\n        }\n\n        const epNameDataOffset = allocWasmString(epName, allocs);\n        if (getInstance()._OrtAppendExecutionProvider(sessionOptionsHandle, epNameDataOffset) !== 0) {\n          throw new Error(`Can't append execution provider: ${epName}`);\n        }\n      }\n    };\n\nexport const setSessionOptions = (options?: InferenceSession.SessionOptions): [number, number[]] => {\n  const wasm = getInstance();\n  let sessionOptionsHandle = 0;\n  const allocs: number[] = [];\n\n  const sessionOptions: InferenceSession.SessionOptions = options || {};\n  appendDefaultOptions(sessionOptions);\n\n  try {\n    const graphOptimizationLevel = getGraphOptimzationLevel(sessionOptions.graphOptimizationLevel ?? 'all');\n    const executionMode = getExecutionMode(sessionOptions.executionMode ?? 'sequential');\n    const logIdDataOffset =\n        typeof sessionOptions.logId === 'string' ? allocWasmString(sessionOptions.logId, allocs) : 0;\n\n    const logSeverityLevel = sessionOptions.logSeverityLevel ?? 2;  // Default to 2 - warning\n    if (!Number.isInteger(logSeverityLevel) || logSeverityLevel < 0 || logSeverityLevel > 4) {\n      throw new Error(`log serverity level is not valid: ${logSeverityLevel}`);\n    }\n\n    const logVerbosityLevel = sessionOptions.logVerbosityLevel ?? 0;  // Default to 0 - verbose\n    if (!Number.isInteger(logVerbosityLevel) || logVerbosityLevel < 0 || logVerbosityLevel > 4) {\n      throw new Error(`log verbosity level is not valid: ${logVerbosityLevel}`);\n    }\n\n    const optimizedModelFilePathOffset = typeof sessionOptions.optimizedModelFilePath === 'string' ?\n        allocWasmString(sessionOptions.optimizedModelFilePath, allocs) :\n        0;\n\n    sessionOptionsHandle = wasm._OrtCreateSessionOptions(\n        graphOptimizationLevel, !!sessionOptions.enableCpuMemArena, !!sessionOptions.enableMemPattern, executionMode,\n        !!sessionOptions.enableProfiling, 0, logIdDataOffset, logSeverityLevel, logVerbosityLevel,\n        optimizedModelFilePathOffset);\n    if (sessionOptionsHandle === 0) {\n      throw new Error('Can\\'t create session options');\n    }\n\n    if (sessionOptions.executionProviders) {\n      setExecutionProviders(sessionOptionsHandle, sessionOptions.executionProviders, allocs);\n    }\n\n    if (sessionOptions.extra !== undefined) {\n      iterateExtraOptions(sessionOptions.extra, '', new WeakSet<Record<string, unknown>>(), (key, value) => {\n        const keyDataOffset = allocWasmString(key, allocs);\n        const valueDataOffset = allocWasmString(value, allocs);\n\n        if (wasm._OrtAddSessionConfigEntry(sessionOptionsHandle, keyDataOffset, valueDataOffset) !== 0) {\n          throw new Error(`Can't set a session config entry: ${key} - ${value}`);\n        }\n      });\n    }\n\n    return [sessionOptionsHandle, allocs];\n  } catch (e) {\n    if (sessionOptionsHandle !== 0) {\n      wasm._OrtReleaseSessionOptions(sessionOptionsHandle);\n    }\n    allocs.forEach(wasm._free);\n    throw e;\n  }\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {getInstance} from './wasm-factory';\n\nexport const allocWasmString = (data: string, allocs: number[]): number => {\n  const wasm = getInstance();\n\n  const dataLength = wasm.lengthBytesUTF8(data) + 1;\n  const dataOffset = wasm._malloc(dataLength);\n  wasm.stringToUTF8(data, dataOffset, dataLength);\n  allocs.push(dataOffset);\n\n  return dataOffset;\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Tensor} from 'onnxruntime-common';\n\n/**\n * Copied from ONNX definition. Use this to drop dependency 'onnx_proto' to decrease compiled .js file size.\n */\nexport const enum DataType {\n  undefined = 0,\n  float = 1,\n  uint8 = 2,\n  int8 = 3,\n  uint16 = 4,\n  int16 = 5,\n  int32 = 6,\n  int64 = 7,\n  string = 8,\n  bool = 9,\n  float16 = 10,\n  double = 11,\n  uint32 = 12,\n  uint64 = 13,\n  complex64 = 14,\n  complex128 = 15,\n  bfloat16 = 16\n}\n\n/**\n * Map string tensor data to enum value\n */\nexport const tensorDataTypeStringToEnum = (type: string): DataType => {\n  switch (type) {\n    case 'int8':\n      return DataType.int8;\n    case 'uint8':\n      return DataType.uint8;\n    case 'bool':\n      return DataType.bool;\n    case 'int16':\n      return DataType.int16;\n    case 'uint16':\n      return DataType.uint16;\n    case 'int32':\n      return DataType.int32;\n    case 'uint32':\n      return DataType.uint32;\n    case 'float16':\n      return DataType.float16;\n    case 'float32':\n      return DataType.float;\n    case 'float64':\n      return DataType.double;\n    case 'string':\n      return DataType.string;\n    case 'int64':\n      return DataType.int64;\n    case 'uint64':\n      return DataType.uint64;\n\n    default:\n      throw new Error(`unsupported data type: ${type}`);\n  }\n};\n\n/**\n * Map enum value to string tensor data\n */\nexport const tensorDataTypeEnumToString = (typeProto: DataType): Tensor.Type => {\n  switch (typeProto) {\n    case DataType.int8:\n      return 'int8';\n    case DataType.uint8:\n      return 'uint8';\n    case DataType.bool:\n      return 'bool';\n    case DataType.int16:\n      return 'int16';\n    case DataType.uint16:\n      return 'uint16';\n    case DataType.int32:\n      return 'int32';\n    case DataType.uint32:\n      return 'uint32';\n    case DataType.float16:\n      return 'uint16';\n    case DataType.float:\n      return 'float32';\n    case DataType.double:\n      return 'float64';\n    case DataType.string:\n      return 'string';\n    case DataType.int64:\n      return 'int64';\n    case DataType.uint64:\n      return 'uint64';\n\n    default:\n      throw new Error(`unsupported data type: ${typeProto}`);\n  }\n};\n\n/**\n * get tensor element size in bytes by the given data type\n * @returns size in integer or undefined if the data type is not supported\n */\nexport const getTensorElementSize = (dateType: number): number|\n    undefined => [undefined, 4, 1, 1, 2, 2, 4, 8, undefined, 1, 2, 8, 4, 8, undefined, undefined, undefined][dateType];\n\n/**\n * get typed array constructor by the given tensor type\n */\nexport const tensorTypeToTypedArrayConstructor = (type: Tensor.Type): Float32ArrayConstructor|Uint8ArrayConstructor|\n    Int8ArrayConstructor|Uint16ArrayConstructor|Int16ArrayConstructor|Int32ArrayConstructor|BigInt64ArrayConstructor|\n    Uint8ArrayConstructor|Float64ArrayConstructor|Uint32ArrayConstructor|BigUint64ArrayConstructor => {\n      switch (type) {\n        case 'float32':\n          return Float32Array;\n        case 'uint8':\n          return Uint8Array;\n        case 'int8':\n          return Int8Array;\n        case 'uint16':\n          return Uint16Array;\n        case 'int16':\n          return Int16Array;\n        case 'int32':\n          return Int32Array;\n        case 'bool':\n          return Uint8Array;\n        case 'float64':\n          return Float64Array;\n        case 'uint32':\n          return Uint32Array;\n        case 'int64':\n          return BigInt64Array;\n        case 'uint64':\n          return BigUint64Array;\n        default:\n          throw new Error(`unsupported type: ${type}`);\n      }\n    };\n\n/**\n * Map string log level to integer value\n */\nexport const logLevelStringToEnum = (logLevel?: 'verbose'|'info'|'warning'|'error'|'fatal'): number => {\n  switch (logLevel) {\n    case 'verbose':\n      return 0;\n    case 'info':\n      return 1;\n    case 'warning':\n      return 2;\n    case 'error':\n      return 3;\n    case 'fatal':\n      return 4;\n    default:\n      throw new Error(`unsupported logging level: ${logLevel}`);\n  }\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Env, InferenceSession, Tensor} from 'onnxruntime-common';\n\nimport {init as initJsep} from './jsep/init';\nimport {SerializableModeldata, SerializableSessionMetadata, SerializableTensor} from './proxy-messages';\nimport {setRunOptions} from './run-options';\nimport {setSessionOptions} from './session-options';\nimport {allocWasmString} from './string-utils';\nimport {logLevelStringToEnum, tensorDataTypeEnumToString, tensorDataTypeStringToEnum, tensorTypeToTypedArrayConstructor} from './wasm-common';\nimport {getInstance} from './wasm-factory';\n\n/**\n * initialize ORT environment.\n * @param numThreads SetGlobalIntraOpNumThreads(numThreads)\n * @param loggingLevel CreateEnv(static_cast<OrtLoggingLevel>(logging_level))\n */\nconst initOrt = async(numThreads: number, loggingLevel: number): Promise<void> => {\n  const errorCode = getInstance()._OrtInit(numThreads, loggingLevel);\n  if (errorCode !== 0) {\n    throw new Error(`Can't initialize onnxruntime. error code = ${errorCode}`);\n  }\n};\n\n/**\n * intialize runtime environment.\n * @param env passed in the environment config object.\n */\nexport const initRuntime = async(env: Env): Promise<void> => {\n  // init ORT\n  await initOrt(env.wasm.numThreads!, logLevelStringToEnum(env.logLevel));\n\n  // init JSEP if available\n  await initJsep(getInstance(), env);\n};\n\n/**\n *  tuple elements are: InferenceSession ID; inputNamesUTF8Encoded; outputNamesUTF8Encoded\n */\ntype SessionMetadata = [number, number[], number[]];\n\nconst activeSessions = new Map<number, SessionMetadata>();\n\n/**\n * create an instance of InferenceSession.\n * @returns the metadata of InferenceSession. 0-value handle for failure.\n */\nexport const createSessionAllocate = (model: Uint8Array): [number, number] => {\n  const wasm = getInstance();\n  const modelDataOffset = wasm._malloc(model.byteLength);\n  wasm.HEAPU8.set(model, modelDataOffset);\n  return [modelDataOffset, model.byteLength];\n};\n\nexport const createSessionFinalize =\n    (modelData: SerializableModeldata, options?: InferenceSession.SessionOptions): SerializableSessionMetadata => {\n      const wasm = getInstance();\n\n      let sessionHandle = 0;\n      let sessionOptionsHandle = 0;\n      let allocs: number[] = [];\n\n      try {\n        [sessionOptionsHandle, allocs] = setSessionOptions(options);\n\n        sessionHandle = wasm._OrtCreateSession(modelData[0], modelData[1], sessionOptionsHandle);\n        if (sessionHandle === 0) {\n          throw new Error('Can\\'t create a session');\n        }\n      } finally {\n        wasm._free(modelData[0]);\n        if (sessionOptionsHandle !== 0) {\n          wasm._OrtReleaseSessionOptions(sessionOptionsHandle);\n        }\n        allocs.forEach(wasm._free);\n      }\n\n      const inputCount = wasm._OrtGetInputCount(sessionHandle);\n      const outputCount = wasm._OrtGetOutputCount(sessionHandle);\n\n      const inputNames = [];\n      const inputNamesUTF8Encoded = [];\n      const outputNames = [];\n      const outputNamesUTF8Encoded = [];\n      for (let i = 0; i < inputCount; i++) {\n        const name = wasm._OrtGetInputName(sessionHandle, i);\n        if (name === 0) {\n          throw new Error('Can\\'t get an input name');\n        }\n        inputNamesUTF8Encoded.push(name);\n        inputNames.push(wasm.UTF8ToString(name));\n      }\n      for (let i = 0; i < outputCount; i++) {\n        const name = wasm._OrtGetOutputName(sessionHandle, i);\n        if (name === 0) {\n          throw new Error('Can\\'t get an output name');\n        }\n        outputNamesUTF8Encoded.push(name);\n        outputNames.push(wasm.UTF8ToString(name));\n      }\n\n      activeSessions.set(sessionHandle, [sessionHandle, inputNamesUTF8Encoded, outputNamesUTF8Encoded]);\n      return [sessionHandle, inputNames, outputNames];\n    };\n\n\n/**\n * create an instance of InferenceSession.\n * @returns the metadata of InferenceSession. 0-value handle for failure.\n */\nexport const createSession =\n    (model: Uint8Array, options?: InferenceSession.SessionOptions): SerializableSessionMetadata => {\n      const modelData: SerializableModeldata = createSessionAllocate(model);\n      return createSessionFinalize(modelData, options);\n    };\n\nexport const releaseSession = (sessionId: number): void => {\n  const wasm = getInstance();\n  const session = activeSessions.get(sessionId);\n  if (!session) {\n    throw new Error('invalid session id');\n  }\n  const sessionHandle = session[0];\n  const inputNamesUTF8Encoded = session[1];\n  const outputNamesUTF8Encoded = session[2];\n\n  inputNamesUTF8Encoded.forEach(wasm._OrtFree);\n  outputNamesUTF8Encoded.forEach(wasm._OrtFree);\n  wasm._OrtReleaseSession(sessionHandle);\n  activeSessions.delete(sessionId);\n};\n\n/**\n * perform inference run\n */\nexport const run = async(\n    sessionId: number, inputIndices: number[], inputs: SerializableTensor[], outputIndices: number[],\n    options: InferenceSession.RunOptions): Promise<SerializableTensor[]> => {\n  const wasm = getInstance();\n  const session = activeSessions.get(sessionId);\n  if (!session) {\n    throw new Error('invalid session id');\n  }\n  const sessionHandle = session[0];\n  const inputNamesUTF8Encoded = session[1];\n  const outputNamesUTF8Encoded = session[2];\n\n  const inputCount = inputIndices.length;\n  const outputCount = outputIndices.length;\n\n  let runOptionsHandle = 0;\n  let runOptionsAllocs: number[] = [];\n\n  const inputValues: number[] = [];\n  const inputAllocs: number[] = [];\n\n  try {\n    [runOptionsHandle, runOptionsAllocs] = setRunOptions(options);\n\n    // create input tensors\n    for (let i = 0; i < inputCount; i++) {\n      const dataType = inputs[i][0];\n      const dims = inputs[i][1];\n      const data = inputs[i][2];\n\n      let dataOffset: number;\n      let dataByteLength: number;\n\n      if (Array.isArray(data)) {\n        // string tensor\n        dataByteLength = 4 * data.length;\n        dataOffset = wasm._malloc(dataByteLength);\n        inputAllocs.push(dataOffset);\n        let dataIndex = dataOffset / 4;\n        for (let i = 0; i < data.length; i++) {\n          if (typeof data[i] !== 'string') {\n            throw new TypeError(`tensor data at index ${i} is not a string`);\n          }\n          wasm.HEAPU32[dataIndex++] = allocWasmString(data[i], inputAllocs);\n        }\n      } else {\n        dataByteLength = data.byteLength;\n        dataOffset = wasm._malloc(dataByteLength);\n        inputAllocs.push(dataOffset);\n        wasm.HEAPU8.set(new Uint8Array(data.buffer, data.byteOffset, dataByteLength), dataOffset);\n      }\n\n      const stack = wasm.stackSave();\n      const dimsOffset = wasm.stackAlloc(4 * dims.length);\n      try {\n        let dimIndex = dimsOffset / 4;\n        dims.forEach(d => wasm.HEAP32[dimIndex++] = d);\n        const tensor = wasm._OrtCreateTensor(\n            tensorDataTypeStringToEnum(dataType), dataOffset, dataByteLength, dimsOffset, dims.length);\n        if (tensor === 0) {\n          throw new Error('Can\\'t create a tensor');\n        }\n        inputValues.push(tensor);\n      } finally {\n        wasm.stackRestore(stack);\n      }\n    }\n\n    const beforeRunStack = wasm.stackSave();\n    const inputValuesOffset = wasm.stackAlloc(inputCount * 4);\n    const inputNamesOffset = wasm.stackAlloc(inputCount * 4);\n    const outputValuesOffset = wasm.stackAlloc(outputCount * 4);\n    const outputNamesOffset = wasm.stackAlloc(outputCount * 4);\n\n    try {\n      let inputValuesIndex = inputValuesOffset / 4;\n      let inputNamesIndex = inputNamesOffset / 4;\n      let outputValuesIndex = outputValuesOffset / 4;\n      let outputNamesIndex = outputNamesOffset / 4;\n      for (let i = 0; i < inputCount; i++) {\n        wasm.HEAPU32[inputValuesIndex++] = inputValues[i];\n        wasm.HEAPU32[inputNamesIndex++] = inputNamesUTF8Encoded[inputIndices[i]];\n      }\n      for (let i = 0; i < outputCount; i++) {\n        wasm.HEAPU32[outputValuesIndex++] = 0;\n        wasm.HEAPU32[outputNamesIndex++] = outputNamesUTF8Encoded[outputIndices[i]];\n      }\n\n      // support RunOptions\n      let errorCode = wasm._OrtRun(\n          sessionHandle, inputNamesOffset, inputValuesOffset, inputCount, outputNamesOffset, outputCount,\n          outputValuesOffset, runOptionsHandle);\n\n      // eslint-disable-next-line @typescript-eslint/naming-convention\n      const runPromise = wasm.jsepRunPromise;\n      if (runPromise && typeof runPromise.then !== 'undefined') {\n        errorCode = await runPromise;\n      }\n\n      const output: SerializableTensor[] = [];\n\n      if (errorCode === 0) {\n        for (let i = 0; i < outputCount; i++) {\n          const tensor = wasm.HEAPU32[outputValuesOffset / 4 + i];\n\n          const beforeGetTensorDataStack = wasm.stackSave();\n          // stack allocate 4 pointer value\n          const tensorDataOffset = wasm.stackAlloc(4 * 4);\n\n          let type: Tensor.Type|undefined, dataOffset = 0;\n          try {\n            errorCode = wasm._OrtGetTensorData(\n                tensor, tensorDataOffset, tensorDataOffset + 4, tensorDataOffset + 8, tensorDataOffset + 12);\n            if (errorCode !== 0) {\n              throw new Error(`Can't access output tensor data. error code = ${errorCode}`);\n            }\n            let tensorDataIndex = tensorDataOffset / 4;\n            const dataType = wasm.HEAPU32[tensorDataIndex++];\n            dataOffset = wasm.HEAPU32[tensorDataIndex++];\n            const dimsOffset = wasm.HEAPU32[tensorDataIndex++];\n            const dimsLength = wasm.HEAPU32[tensorDataIndex++];\n            const dims = [];\n            for (let i = 0; i < dimsLength; i++) {\n              dims.push(wasm.HEAPU32[dimsOffset / 4 + i]);\n            }\n            wasm._OrtFree(dimsOffset);\n\n            const size = dims.length === 0 ? 1 : dims.reduce((a, b) => a * b);\n            type = tensorDataTypeEnumToString(dataType);\n            if (type === 'string') {\n              const stringData: string[] = [];\n              let dataIndex = dataOffset / 4;\n              for (let i = 0; i < size; i++) {\n                const offset = wasm.HEAPU32[dataIndex++];\n                const maxBytesToRead = i === size - 1 ? undefined : wasm.HEAPU32[dataIndex] - offset;\n                stringData.push(wasm.UTF8ToString(offset, maxBytesToRead));\n              }\n              output.push([type, dims, stringData]);\n            } else {\n              const typedArrayConstructor = tensorTypeToTypedArrayConstructor(type);\n              const data = new typedArrayConstructor(size);\n              new Uint8Array(data.buffer, data.byteOffset, data.byteLength)\n                  .set(wasm.HEAPU8.subarray(dataOffset, dataOffset + data.byteLength));\n              output.push([type, dims, data]);\n            }\n          } finally {\n            wasm.stackRestore(beforeGetTensorDataStack);\n            if (type === 'string' && dataOffset) {\n              wasm._free(dataOffset);\n            }\n            wasm._OrtReleaseTensor(tensor);\n          }\n        }\n      }\n\n      if (errorCode === 0) {\n        return output;\n      } else {\n        throw new Error(`failed to call OrtRun(). error code = ${errorCode}.`);\n      }\n    } finally {\n      wasm.stackRestore(beforeRunStack);\n    }\n  } finally {\n    inputValues.forEach(wasm._OrtReleaseTensor);\n    inputAllocs.forEach(wasm._free);\n\n    wasm._OrtReleaseRunOptions(runOptionsHandle);\n    runOptionsAllocs.forEach(wasm._free);\n  }\n};\n\n/**\n * end profiling\n */\nexport const endProfiling = (sessionId: number): void => {\n  const wasm = getInstance();\n  const session = activeSessions.get(sessionId);\n  if (!session) {\n    throw new Error('invalid session id');\n  }\n  const sessionHandle = session[0];\n\n  // profile file name is not used yet, but it must be freed.\n  const profileFileName = wasm._OrtEndProfiling(sessionHandle);\n  if (profileFileName === 0) {\n    throw new Error('Can\\'t get an profile file name');\n  }\n  wasm._OrtFree(profileFileName);\n};\n\nexport const extractTransferableBuffers = (tensors: readonly SerializableTensor[]): ArrayBufferLike[] => {\n  const buffers: ArrayBufferLike[] = [];\n  for (const tensor of tensors) {\n    const data = tensor[2];\n    if (!Array.isArray(data) && data.buffer) {\n      buffers.push(data.buffer);\n    }\n  }\n  return buffers;\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Env} from 'onnxruntime-common';\nimport * as path from 'path';\n\nimport {OrtWasmModule} from './binding/ort-wasm';\nimport {OrtWasmThreadedModule} from './binding/ort-wasm-threaded';\n\n/* eslint-disable @typescript-eslint/no-require-imports */\nconst ortWasmFactory: EmscriptenModuleFactory<OrtWasmModule> =\n    BUILD_DEFS.DISABLE_WEBGPU ? require('./binding/ort-wasm.js') : require('./binding/ort-wasm-simd.jsep.js');\n\nconst ortWasmFactoryThreaded: EmscriptenModuleFactory<OrtWasmModule> = !BUILD_DEFS.DISABLE_WASM_THREAD ?\n    (BUILD_DEFS.DISABLE_WEBGPU ? require('./binding/ort-wasm-threaded.js') :\n                                 require('./binding/ort-wasm-simd-threaded.jsep.js')) :\n    ortWasmFactory;\n/* eslint-enable @typescript-eslint/no-require-imports */\n\nlet wasm: OrtWasmModule|undefined;\nlet initialized = false;\nlet initializing = false;\nlet aborted = false;\n\nconst isMultiThreadSupported = (): boolean => {\n  try {\n    // If 'SharedArrayBuffer' is not available, WebAssembly threads will not work.\n    if (typeof SharedArrayBuffer === 'undefined') {\n      return false;\n    }\n\n    // Test for transferability of SABs (for browsers. needed for Firefox)\n    // https://groups.google.com/forum/#!msg/mozilla.dev.platform/IHkBZlHETpA/dwsMNchWEQAJ\n    if (typeof MessageChannel !== 'undefined') {\n      new MessageChannel().port1.postMessage(new SharedArrayBuffer(1));\n    }\n\n    // Test for WebAssembly threads capability (for both browsers and Node.js)\n    // This typed array is a WebAssembly program containing threaded instructions.\n    return WebAssembly.validate(new Uint8Array([\n      0, 97, 115, 109, 1, 0,  0,  0, 1, 4, 1,  96, 0,   0,  3, 2, 1,  0, 5,\n      4, 1,  3,   1,   1, 10, 11, 1, 9, 0, 65, 0,  254, 16, 2, 0, 26, 11\n    ]));\n  } catch (e) {\n    return false;\n  }\n};\n\nconst isSimdSupported = (): boolean => {\n  try {\n    // Test for WebAssembly SIMD capability (for both browsers and Node.js)\n    // This typed array is a WebAssembly program containing SIMD instructions.\n\n    // The binary data is generated from the following code by wat2wasm:\n    //\n    // (module\n    //   (type $t0 (func))\n    //   (func $f0 (type $t0)\n    //     (drop\n    //       (i32x4.dot_i16x8_s\n    //         (i8x16.splat\n    //           (i32.const 0))\n    //         (v128.const i32x4 0x00000000 0x00000000 0x00000000 0x00000000)))))\n\n    return WebAssembly.validate(new Uint8Array([\n      0,   97, 115, 109, 1, 0, 0, 0, 1, 4, 1, 96, 0, 0, 3, 2, 1, 0, 10, 30, 1,   28,  0, 65, 0,\n      253, 15, 253, 12,  0, 0, 0, 0, 0, 0, 0, 0,  0, 0, 0, 0, 0, 0, 0,  0,  253, 186, 1, 26, 11\n    ]));\n  } catch (e) {\n    return false;\n  }\n};\n\nconst getWasmFileName = (useSimd: boolean, useThreads: boolean) => {\n  if (useThreads) {\n    return useSimd ? 'ort-wasm-simd-threaded.wasm' : 'ort-wasm-threaded.wasm';\n  } else {\n    return useSimd ? 'ort-wasm-simd.wasm' : 'ort-wasm.wasm';\n  }\n};\n\nexport const initializeWebAssembly = async(flags: Env.WebAssemblyFlags): Promise<void> => {\n  if (initialized) {\n    return Promise.resolve();\n  }\n  if (initializing) {\n    throw new Error('multiple calls to \\'initializeWebAssembly()\\' detected.');\n  }\n  if (aborted) {\n    throw new Error('previous call to \\'initializeWebAssembly()\\' failed.');\n  }\n\n  initializing = true;\n\n  // wasm flags are already initialized\n  const timeout = flags.initTimeout!;\n  const numThreads = flags.numThreads!;\n  const simd = flags.simd!;\n\n  const useThreads = numThreads > 1 && isMultiThreadSupported();\n  const useSimd = simd && isSimdSupported();\n\n  const wasmPaths = flags.wasmPaths;\n  const wasmPrefixOverride = typeof wasmPaths === 'string' ? wasmPaths : undefined;\n  const wasmFileName = getWasmFileName(useSimd, useThreads);\n  const wasmPathOverride = typeof wasmPaths === 'object' ? wasmPaths[wasmFileName] : undefined;\n\n  let isTimeout = false;\n\n  const tasks: Array<Promise<void>> = [];\n\n  // promise for timeout\n  if (timeout > 0) {\n    tasks.push(new Promise((resolve) => {\n      setTimeout(() => {\n        isTimeout = true;\n        resolve();\n      }, timeout);\n    }));\n  }\n\n  // promise for module initialization\n  tasks.push(new Promise((resolve, reject) => {\n    const factory = useThreads ? ortWasmFactoryThreaded : ortWasmFactory;\n    const config: Partial<OrtWasmModule> = {\n      locateFile: (fileName: string, scriptDirectory: string) => {\n        if (!BUILD_DEFS.DISABLE_WASM_THREAD && useThreads && fileName.endsWith('.worker.js') &&\n            typeof Blob !== 'undefined') {\n          return URL.createObjectURL(new Blob(\n              [\n                // This require() function is handled by webpack to load file content of the corresponding .worker.js\n                // eslint-disable-next-line @typescript-eslint/no-require-imports\n                require('./binding/ort-wasm-threaded.worker.js')\n              ],\n              {type: 'text/javascript'}));\n        }\n\n        if (fileName.endsWith('.wasm')) {\n          if (wasmPathOverride) {\n            return wasmPathOverride;\n          }\n\n          const prefix = wasmPrefixOverride ?? scriptDirectory;\n\n          if (!BUILD_DEFS.DISABLE_WEBGPU) {\n            if (wasmFileName === 'ort-wasm-simd.wasm') {\n              return prefix + 'ort-wasm-simd.jsep.wasm';\n            } else if (wasmFileName === 'ort-wasm-simd-threaded.wasm') {\n              return prefix + 'ort-wasm-simd-threaded.jsep.wasm';\n            }\n          }\n\n          return prefix + wasmFileName;\n        }\n\n        return scriptDirectory + fileName;\n      }\n    };\n\n    if (!BUILD_DEFS.DISABLE_WASM_THREAD && useThreads) {\n      if (typeof Blob === 'undefined') {\n        config.mainScriptUrlOrBlob = path.join(__dirname, 'ort-wasm-threaded.js');\n      } else {\n        const scriptSourceCode = `var ortWasmThreaded=(function(){var _scriptDir;return ${factory.toString()}})();`;\n        config.mainScriptUrlOrBlob = new Blob([scriptSourceCode], {type: 'text/javascript'});\n      }\n    }\n\n    factory(config).then(\n        // wasm module initialized successfully\n        module => {\n          initializing = false;\n          initialized = true;\n          wasm = module;\n          resolve();\n        },\n        // wasm module failed to initialize\n        (what) => {\n          initializing = false;\n          aborted = true;\n          reject(what);\n        });\n  }));\n\n  await Promise.race(tasks);\n\n  if (isTimeout) {\n    throw new Error(`WebAssembly backend initializing failed due to timeout: ${timeout}ms`);\n  }\n};\n\nexport const getInstance = (): OrtWasmModule => {\n  if (initialized && wasm) {\n    return wasm;\n  }\n\n  throw new Error('WebAssembly is not initialized yet.');\n};\n\nexport const dispose = (): void => {\n  if (initialized && !initializing && !aborted) {\n    initializing = true;\n\n    (wasm as OrtWasmThreadedModule).PThread?.terminateAllThreads();\n    wasm = undefined;\n\n    initializing = false;\n    initialized = false;\n    aborted = true;\n  }\n};\n","\nvar ortWasm = (() => {\n  var _scriptDir = typeof document !== 'undefined' && document.currentScript ? document.currentScript.src : undefined;\n  if (typeof __filename !== 'undefined') _scriptDir = _scriptDir || __filename;\n  return (\nfunction(ortWasm = {})  {\n\nvar Module = typeof ortWasm != \"undefined\" ? ortWasm : {};\n\nvar readyPromiseResolve, readyPromiseReject;\n\nModule[\"ready\"] = new Promise((resolve, reject) => {\n readyPromiseResolve = resolve;\n readyPromiseReject = reject;\n});\n\nvar moduleOverrides = Object.assign({}, Module);\n\nvar arguments_ = [];\n\nvar thisProgram = \"./this.program\";\n\nvar quit_ = (status, toThrow) => {\n throw toThrow;\n};\n\nvar ENVIRONMENT_IS_WEB = typeof window == \"object\";\n\nvar ENVIRONMENT_IS_WORKER = typeof importScripts == \"function\";\n\nvar ENVIRONMENT_IS_NODE = typeof process == \"object\" && typeof process.versions == \"object\" && typeof process.versions.node == \"string\";\n\nvar ENVIRONMENT_IS_SHELL = !ENVIRONMENT_IS_WEB && !ENVIRONMENT_IS_NODE && !ENVIRONMENT_IS_WORKER;\n\nvar scriptDirectory = \"\";\n\nfunction locateFile(path) {\n if (Module[\"locateFile\"]) {\n  return Module[\"locateFile\"](path, scriptDirectory);\n }\n return scriptDirectory + path;\n}\n\nvar read_, readAsync, readBinary, setWindowTitle;\n\nif (ENVIRONMENT_IS_NODE) {\n var fs = require(\"fs\");\n var nodePath = require(\"path\");\n if (ENVIRONMENT_IS_WORKER) {\n  scriptDirectory = nodePath.dirname(scriptDirectory) + \"/\";\n } else {\n  scriptDirectory = __dirname + \"/\";\n }\n read_ = (filename, binary) => {\n  filename = isFileURI(filename) ? new URL(filename) : nodePath.normalize(filename);\n  return fs.readFileSync(filename, binary ? undefined : \"utf8\");\n };\n readBinary = filename => {\n  var ret = read_(filename, true);\n  if (!ret.buffer) {\n   ret = new Uint8Array(ret);\n  }\n  return ret;\n };\n readAsync = (filename, onload, onerror, binary = true) => {\n  filename = isFileURI(filename) ? new URL(filename) : nodePath.normalize(filename);\n  fs.readFile(filename, binary ? undefined : \"utf8\", (err, data) => {\n   if (err) onerror(err); else onload(binary ? data.buffer : data);\n  });\n };\n if (!Module[\"thisProgram\"] && process.argv.length > 1) {\n  thisProgram = process.argv[1].replace(/\\\\/g, \"/\");\n }\n arguments_ = process.argv.slice(2);\n quit_ = (status, toThrow) => {\n  process.exitCode = status;\n  throw toThrow;\n };\n Module[\"inspect\"] = () => \"[Emscripten Module object]\";\n} else if (ENVIRONMENT_IS_WEB || ENVIRONMENT_IS_WORKER) {\n if (ENVIRONMENT_IS_WORKER) {\n  scriptDirectory = self.location.href;\n } else if (typeof document != \"undefined\" && document.currentScript) {\n  scriptDirectory = document.currentScript.src;\n }\n if (_scriptDir) {\n  scriptDirectory = _scriptDir;\n }\n if (scriptDirectory.indexOf(\"blob:\") !== 0) {\n  scriptDirectory = scriptDirectory.substr(0, scriptDirectory.replace(/[?#].*/, \"\").lastIndexOf(\"/\") + 1);\n } else {\n  scriptDirectory = \"\";\n }\n {\n  read_ = url => {\n   var xhr = new XMLHttpRequest();\n   xhr.open(\"GET\", url, false);\n   xhr.send(null);\n   return xhr.responseText;\n  };\n  if (ENVIRONMENT_IS_WORKER) {\n   readBinary = url => {\n    var xhr = new XMLHttpRequest();\n    xhr.open(\"GET\", url, false);\n    xhr.responseType = \"arraybuffer\";\n    xhr.send(null);\n    return new Uint8Array(xhr.response);\n   };\n  }\n  readAsync = (url, onload, onerror) => {\n   var xhr = new XMLHttpRequest();\n   xhr.open(\"GET\", url, true);\n   xhr.responseType = \"arraybuffer\";\n   xhr.onload = () => {\n    if (xhr.status == 200 || xhr.status == 0 && xhr.response) {\n     onload(xhr.response);\n     return;\n    }\n    onerror();\n   };\n   xhr.onerror = onerror;\n   xhr.send(null);\n  };\n }\n setWindowTitle = title => document.title = title;\n} else {}\n\nvar out = Module[\"print\"] || console.log.bind(console);\n\nvar err = Module[\"printErr\"] || console.warn.bind(console);\n\nObject.assign(Module, moduleOverrides);\n\nmoduleOverrides = null;\n\nif (Module[\"arguments\"]) arguments_ = Module[\"arguments\"];\n\nif (Module[\"thisProgram\"]) thisProgram = Module[\"thisProgram\"];\n\nif (Module[\"quit\"]) quit_ = Module[\"quit\"];\n\nvar wasmBinary;\n\nif (Module[\"wasmBinary\"]) wasmBinary = Module[\"wasmBinary\"];\n\nvar noExitRuntime = Module[\"noExitRuntime\"] || true;\n\nif (typeof WebAssembly != \"object\") {\n abort(\"no native wasm support detected\");\n}\n\nvar wasmMemory;\n\nvar ABORT = false;\n\nvar EXITSTATUS;\n\nfunction assert(condition, text) {\n if (!condition) {\n  abort(text);\n }\n}\n\nvar HEAP, HEAP8, HEAPU8, HEAP16, HEAPU16, HEAP32, HEAPU32, HEAPF32, HEAP64, HEAPU64, HEAPF64;\n\nfunction updateMemoryViews() {\n var b = wasmMemory.buffer;\n Module[\"HEAP8\"] = HEAP8 = new Int8Array(b);\n Module[\"HEAP16\"] = HEAP16 = new Int16Array(b);\n Module[\"HEAP32\"] = HEAP32 = new Int32Array(b);\n Module[\"HEAPU8\"] = HEAPU8 = new Uint8Array(b);\n Module[\"HEAPU16\"] = HEAPU16 = new Uint16Array(b);\n Module[\"HEAPU32\"] = HEAPU32 = new Uint32Array(b);\n Module[\"HEAPF32\"] = HEAPF32 = new Float32Array(b);\n Module[\"HEAPF64\"] = HEAPF64 = new Float64Array(b);\n Module[\"HEAP64\"] = HEAP64 = new BigInt64Array(b);\n Module[\"HEAPU64\"] = HEAPU64 = new BigUint64Array(b);\n}\n\nvar wasmTable;\n\nvar __ATPRERUN__ = [];\n\nvar __ATINIT__ = [];\n\nvar __ATEXIT__ = [];\n\nvar __ATPOSTRUN__ = [];\n\nvar runtimeInitialized = false;\n\nvar runtimeKeepaliveCounter = 0;\n\nfunction keepRuntimeAlive() {\n return noExitRuntime || runtimeKeepaliveCounter > 0;\n}\n\nfunction preRun() {\n if (Module[\"preRun\"]) {\n  if (typeof Module[\"preRun\"] == \"function\") Module[\"preRun\"] = [ Module[\"preRun\"] ];\n  while (Module[\"preRun\"].length) {\n   addOnPreRun(Module[\"preRun\"].shift());\n  }\n }\n callRuntimeCallbacks(__ATPRERUN__);\n}\n\nfunction initRuntime() {\n runtimeInitialized = true;\n callRuntimeCallbacks(__ATINIT__);\n}\n\nfunction postRun() {\n if (Module[\"postRun\"]) {\n  if (typeof Module[\"postRun\"] == \"function\") Module[\"postRun\"] = [ Module[\"postRun\"] ];\n  while (Module[\"postRun\"].length) {\n   addOnPostRun(Module[\"postRun\"].shift());\n  }\n }\n callRuntimeCallbacks(__ATPOSTRUN__);\n}\n\nfunction addOnPreRun(cb) {\n __ATPRERUN__.unshift(cb);\n}\n\nfunction addOnInit(cb) {\n __ATINIT__.unshift(cb);\n}\n\nfunction addOnExit(cb) {}\n\nfunction addOnPostRun(cb) {\n __ATPOSTRUN__.unshift(cb);\n}\n\nvar runDependencies = 0;\n\nvar runDependencyWatcher = null;\n\nvar dependenciesFulfilled = null;\n\nfunction getUniqueRunDependency(id) {\n return id;\n}\n\nfunction addRunDependency(id) {\n runDependencies++;\n if (Module[\"monitorRunDependencies\"]) {\n  Module[\"monitorRunDependencies\"](runDependencies);\n }\n}\n\nfunction removeRunDependency(id) {\n runDependencies--;\n if (Module[\"monitorRunDependencies\"]) {\n  Module[\"monitorRunDependencies\"](runDependencies);\n }\n if (runDependencies == 0) {\n  if (runDependencyWatcher !== null) {\n   clearInterval(runDependencyWatcher);\n   runDependencyWatcher = null;\n  }\n  if (dependenciesFulfilled) {\n   var callback = dependenciesFulfilled;\n   dependenciesFulfilled = null;\n   callback();\n  }\n }\n}\n\nfunction abort(what) {\n if (Module[\"onAbort\"]) {\n  Module[\"onAbort\"](what);\n }\n what = \"Aborted(\" + what + \")\";\n err(what);\n ABORT = true;\n EXITSTATUS = 1;\n what += \". Build with -sASSERTIONS for more info.\";\n var e = new WebAssembly.RuntimeError(what);\n readyPromiseReject(e);\n throw e;\n}\n\nvar dataURIPrefix = \"data:application/octet-stream;base64,\";\n\nfunction isDataURI(filename) {\n return filename.startsWith(dataURIPrefix);\n}\n\nfunction isFileURI(filename) {\n return filename.startsWith(\"file://\");\n}\n\nvar wasmBinaryFile;\n\nwasmBinaryFile = \"ort-wasm-simd.wasm\";\n\nif (!isDataURI(wasmBinaryFile)) {\n wasmBinaryFile = locateFile(wasmBinaryFile);\n}\n\nfunction getBinary(file) {\n try {\n  if (file == wasmBinaryFile && wasmBinary) {\n   return new Uint8Array(wasmBinary);\n  }\n  if (readBinary) {\n   return readBinary(file);\n  }\n  throw \"both async and sync fetching of the wasm failed\";\n } catch (err) {\n  abort(err);\n }\n}\n\nfunction getBinaryPromise(binaryFile) {\n if (!wasmBinary && (ENVIRONMENT_IS_WEB || ENVIRONMENT_IS_WORKER)) {\n  if (typeof fetch == \"function\" && !isFileURI(binaryFile)) {\n   return fetch(binaryFile, {\n    credentials: \"same-origin\"\n   }).then(response => {\n    if (!response[\"ok\"]) {\n     throw \"failed to load wasm binary file at '\" + binaryFile + \"'\";\n    }\n    return response[\"arrayBuffer\"]();\n   }).catch(() => getBinary(binaryFile));\n  } else {\n   if (readAsync) {\n    return new Promise((resolve, reject) => {\n     readAsync(binaryFile, response => resolve(new Uint8Array(response)), reject);\n    });\n   }\n  }\n }\n return Promise.resolve().then(() => getBinary(binaryFile));\n}\n\nfunction instantiateArrayBuffer(binaryFile, imports, receiver) {\n return getBinaryPromise(binaryFile).then(binary => {\n  return WebAssembly.instantiate(binary, imports);\n }).then(instance => {\n  return instance;\n }).then(receiver, reason => {\n  err(\"failed to asynchronously prepare wasm: \" + reason);\n  abort(reason);\n });\n}\n\nfunction instantiateAsync(binary, binaryFile, imports, callback) {\n if (!binary && typeof WebAssembly.instantiateStreaming == \"function\" && !isDataURI(binaryFile) && !isFileURI(binaryFile) && !ENVIRONMENT_IS_NODE && typeof fetch == \"function\") {\n  return fetch(binaryFile, {\n   credentials: \"same-origin\"\n  }).then(response => {\n   var result = WebAssembly.instantiateStreaming(response, imports);\n   return result.then(callback, function(reason) {\n    err(\"wasm streaming compile failed: \" + reason);\n    err(\"falling back to ArrayBuffer instantiation\");\n    return instantiateArrayBuffer(binaryFile, imports, callback);\n   });\n  });\n } else {\n  return instantiateArrayBuffer(binaryFile, imports, callback);\n }\n}\n\nfunction createWasm() {\n var info = {\n  \"env\": wasmImports,\n  \"wasi_snapshot_preview1\": wasmImports\n };\n function receiveInstance(instance, module) {\n  var exports = instance.exports;\n  Module[\"asm\"] = exports;\n  wasmMemory = Module[\"asm\"][\"memory\"];\n  updateMemoryViews();\n  wasmTable = Module[\"asm\"][\"__indirect_function_table\"];\n  addOnInit(Module[\"asm\"][\"__wasm_call_ctors\"]);\n  removeRunDependency(\"wasm-instantiate\");\n  return exports;\n }\n addRunDependency(\"wasm-instantiate\");\n function receiveInstantiationResult(result) {\n  receiveInstance(result[\"instance\"]);\n }\n if (Module[\"instantiateWasm\"]) {\n  try {\n   return Module[\"instantiateWasm\"](info, receiveInstance);\n  } catch (e) {\n   err(\"Module.instantiateWasm callback failed with error: \" + e);\n   readyPromiseReject(e);\n  }\n }\n instantiateAsync(wasmBinary, wasmBinaryFile, info, receiveInstantiationResult).catch(readyPromiseReject);\n return {};\n}\n\nfunction ExitStatus(status) {\n this.name = \"ExitStatus\";\n this.message = \"Program terminated with exit(\" + status + \")\";\n this.status = status;\n}\n\nfunction callRuntimeCallbacks(callbacks) {\n while (callbacks.length > 0) {\n  callbacks.shift()(Module);\n }\n}\n\nfunction getValue(ptr, type = \"i8\") {\n if (type.endsWith(\"*\")) type = \"*\";\n switch (type) {\n case \"i1\":\n  return HEAP8[ptr >>> 0];\n\n case \"i8\":\n  return HEAP8[ptr >>> 0];\n\n case \"i16\":\n  return HEAP16[ptr >>> 1];\n\n case \"i32\":\n  return HEAP32[ptr >>> 2];\n\n case \"i64\":\n  return HEAP64[ptr >> 3];\n\n case \"float\":\n  return HEAPF32[ptr >>> 2];\n\n case \"double\":\n  return HEAPF64[ptr >>> 3];\n\n case \"*\":\n  return HEAPU32[ptr >>> 2];\n\n default:\n  abort(\"invalid type for getValue: \" + type);\n }\n}\n\nfunction setValue(ptr, value, type = \"i8\") {\n if (type.endsWith(\"*\")) type = \"*\";\n switch (type) {\n case \"i1\":\n  HEAP8[ptr >>> 0] = value;\n  break;\n\n case \"i8\":\n  HEAP8[ptr >>> 0] = value;\n  break;\n\n case \"i16\":\n  HEAP16[ptr >>> 1] = value;\n  break;\n\n case \"i32\":\n  HEAP32[ptr >>> 2] = value;\n  break;\n\n case \"i64\":\n  HEAP64[ptr >> 3] = BigInt(value);\n  break;\n\n case \"float\":\n  HEAPF32[ptr >>> 2] = value;\n  break;\n\n case \"double\":\n  HEAPF64[ptr >>> 3] = value;\n  break;\n\n case \"*\":\n  HEAPU32[ptr >>> 2] = value;\n  break;\n\n default:\n  abort(\"invalid type for setValue: \" + type);\n }\n}\n\nvar exceptionCaught = [];\n\nvar uncaughtExceptionCount = 0;\n\nfunction ___cxa_begin_catch(ptr) {\n var info = new ExceptionInfo(ptr);\n if (!info.get_caught()) {\n  info.set_caught(true);\n  uncaughtExceptionCount--;\n }\n info.set_rethrown(false);\n exceptionCaught.push(info);\n ___cxa_increment_exception_refcount(info.excPtr);\n return info.get_exception_ptr();\n}\n\nvar exceptionLast = 0;\n\nfunction ___cxa_end_catch() {\n _setThrew(0);\n var info = exceptionCaught.pop();\n ___cxa_decrement_exception_refcount(info.excPtr);\n exceptionLast = 0;\n}\n\nfunction ExceptionInfo(excPtr) {\n this.excPtr = excPtr;\n this.ptr = excPtr - 24;\n this.set_type = function(type) {\n  HEAPU32[this.ptr + 4 >>> 2] = type;\n };\n this.get_type = function() {\n  return HEAPU32[this.ptr + 4 >>> 2];\n };\n this.set_destructor = function(destructor) {\n  HEAPU32[this.ptr + 8 >>> 2] = destructor;\n };\n this.get_destructor = function() {\n  return HEAPU32[this.ptr + 8 >>> 2];\n };\n this.set_caught = function(caught) {\n  caught = caught ? 1 : 0;\n  HEAP8[this.ptr + 12 >>> 0] = caught;\n };\n this.get_caught = function() {\n  return HEAP8[this.ptr + 12 >>> 0] != 0;\n };\n this.set_rethrown = function(rethrown) {\n  rethrown = rethrown ? 1 : 0;\n  HEAP8[this.ptr + 13 >>> 0] = rethrown;\n };\n this.get_rethrown = function() {\n  return HEAP8[this.ptr + 13 >>> 0] != 0;\n };\n this.init = function(type, destructor) {\n  this.set_adjusted_ptr(0);\n  this.set_type(type);\n  this.set_destructor(destructor);\n };\n this.set_adjusted_ptr = function(adjustedPtr) {\n  HEAPU32[this.ptr + 16 >>> 2] = adjustedPtr;\n };\n this.get_adjusted_ptr = function() {\n  return HEAPU32[this.ptr + 16 >>> 2];\n };\n this.get_exception_ptr = function() {\n  var isPointer = ___cxa_is_pointer_type(this.get_type());\n  if (isPointer) {\n   return HEAPU32[this.excPtr >>> 2];\n  }\n  var adjusted = this.get_adjusted_ptr();\n  if (adjusted !== 0) return adjusted;\n  return this.excPtr;\n };\n}\n\nfunction ___resumeException(ptr) {\n if (!exceptionLast) {\n  exceptionLast = ptr;\n }\n throw exceptionLast;\n}\n\nfunction ___cxa_find_matching_catch() {\n var thrown = exceptionLast;\n if (!thrown) {\n  setTempRet0(0);\n  return 0;\n }\n var info = new ExceptionInfo(thrown);\n info.set_adjusted_ptr(thrown);\n var thrownType = info.get_type();\n if (!thrownType) {\n  setTempRet0(0);\n  return thrown;\n }\n for (var i = 0; i < arguments.length; i++) {\n  var caughtType = arguments[i];\n  if (caughtType === 0 || caughtType === thrownType) {\n   break;\n  }\n  var adjusted_ptr_addr = info.ptr + 16;\n  if (___cxa_can_catch(caughtType, thrownType, adjusted_ptr_addr)) {\n   setTempRet0(caughtType);\n   return thrown;\n  }\n }\n setTempRet0(thrownType);\n return thrown;\n}\n\nvar ___cxa_find_matching_catch_2 = ___cxa_find_matching_catch;\n\nvar ___cxa_find_matching_catch_3 = ___cxa_find_matching_catch;\n\nvar ___cxa_find_matching_catch_4 = ___cxa_find_matching_catch;\n\nvar ___cxa_find_matching_catch_5 = ___cxa_find_matching_catch;\n\nfunction ___cxa_rethrow() {\n var info = exceptionCaught.pop();\n if (!info) {\n  abort(\"no exception to throw\");\n }\n var ptr = info.excPtr;\n if (!info.get_rethrown()) {\n  exceptionCaught.push(info);\n  info.set_rethrown(true);\n  info.set_caught(false);\n  uncaughtExceptionCount++;\n }\n exceptionLast = ptr;\n throw exceptionLast;\n}\n\nfunction ___cxa_throw(ptr, type, destructor) {\n var info = new ExceptionInfo(ptr);\n info.init(type, destructor);\n exceptionLast = ptr;\n uncaughtExceptionCount++;\n throw exceptionLast;\n}\n\nfunction ___cxa_uncaught_exceptions() {\n return uncaughtExceptionCount;\n}\n\nvar dlopenMissingError = \"To use dlopen, you need enable dynamic linking, see https://emscripten.org/docs/compiling/Dynamic-Linking.html\";\n\nfunction ___dlsym(handle, symbol) {\n abort(dlopenMissingError);\n}\n\nfunction setErrNo(value) {\n HEAP32[___errno_location() >>> 2] = value;\n return value;\n}\n\nvar UTF8Decoder = typeof TextDecoder != \"undefined\" ? new TextDecoder(\"utf8\") : undefined;\n\nfunction UTF8ArrayToString(heapOrArray, idx, maxBytesToRead) {\n idx >>>= 0;\n var endIdx = idx + maxBytesToRead;\n var endPtr = idx;\n while (heapOrArray[endPtr] && !(endPtr >= endIdx)) ++endPtr;\n if (endPtr - idx > 16 && heapOrArray.buffer && UTF8Decoder) {\n  return UTF8Decoder.decode(heapOrArray.subarray(idx, endPtr));\n }\n var str = \"\";\n while (idx < endPtr) {\n  var u0 = heapOrArray[idx++];\n  if (!(u0 & 128)) {\n   str += String.fromCharCode(u0);\n   continue;\n  }\n  var u1 = heapOrArray[idx++] & 63;\n  if ((u0 & 224) == 192) {\n   str += String.fromCharCode((u0 & 31) << 6 | u1);\n   continue;\n  }\n  var u2 = heapOrArray[idx++] & 63;\n  if ((u0 & 240) == 224) {\n   u0 = (u0 & 15) << 12 | u1 << 6 | u2;\n  } else {\n   u0 = (u0 & 7) << 18 | u1 << 12 | u2 << 6 | heapOrArray[idx++] & 63;\n  }\n  if (u0 < 65536) {\n   str += String.fromCharCode(u0);\n  } else {\n   var ch = u0 - 65536;\n   str += String.fromCharCode(55296 | ch >> 10, 56320 | ch & 1023);\n  }\n }\n return str;\n}\n\nfunction UTF8ToString(ptr, maxBytesToRead) {\n ptr >>>= 0;\n return ptr ? UTF8ArrayToString(HEAPU8, ptr, maxBytesToRead) : \"\";\n}\n\nvar SYSCALLS = {\n varargs: undefined,\n get: function() {\n  SYSCALLS.varargs += 4;\n  var ret = HEAP32[SYSCALLS.varargs - 4 >>> 2];\n  return ret;\n },\n getStr: function(ptr) {\n  var ret = UTF8ToString(ptr);\n  return ret;\n }\n};\n\nfunction ___syscall_fcntl64(fd, cmd, varargs) {\n SYSCALLS.varargs = varargs;\n return 0;\n}\n\nfunction ___syscall_fstat64(fd, buf) {}\n\nfunction lengthBytesUTF8(str) {\n var len = 0;\n for (var i = 0; i < str.length; ++i) {\n  var c = str.charCodeAt(i);\n  if (c <= 127) {\n   len++;\n  } else if (c <= 2047) {\n   len += 2;\n  } else if (c >= 55296 && c <= 57343) {\n   len += 4;\n   ++i;\n  } else {\n   len += 3;\n  }\n }\n return len;\n}\n\nfunction stringToUTF8Array(str, heap, outIdx, maxBytesToWrite) {\n outIdx >>>= 0;\n if (!(maxBytesToWrite > 0)) return 0;\n var startIdx = outIdx;\n var endIdx = outIdx + maxBytesToWrite - 1;\n for (var i = 0; i < str.length; ++i) {\n  var u = str.charCodeAt(i);\n  if (u >= 55296 && u <= 57343) {\n   var u1 = str.charCodeAt(++i);\n   u = 65536 + ((u & 1023) << 10) | u1 & 1023;\n  }\n  if (u <= 127) {\n   if (outIdx >= endIdx) break;\n   heap[outIdx++ >>> 0] = u;\n  } else if (u <= 2047) {\n   if (outIdx + 1 >= endIdx) break;\n   heap[outIdx++ >>> 0] = 192 | u >> 6;\n   heap[outIdx++ >>> 0] = 128 | u & 63;\n  } else if (u <= 65535) {\n   if (outIdx + 2 >= endIdx) break;\n   heap[outIdx++ >>> 0] = 224 | u >> 12;\n   heap[outIdx++ >>> 0] = 128 | u >> 6 & 63;\n   heap[outIdx++ >>> 0] = 128 | u & 63;\n  } else {\n   if (outIdx + 3 >= endIdx) break;\n   heap[outIdx++ >>> 0] = 240 | u >> 18;\n   heap[outIdx++ >>> 0] = 128 | u >> 12 & 63;\n   heap[outIdx++ >>> 0] = 128 | u >> 6 & 63;\n   heap[outIdx++ >>> 0] = 128 | u & 63;\n  }\n }\n heap[outIdx >>> 0] = 0;\n return outIdx - startIdx;\n}\n\nfunction stringToUTF8(str, outPtr, maxBytesToWrite) {\n return stringToUTF8Array(str, HEAPU8, outPtr, maxBytesToWrite);\n}\n\nfunction ___syscall_getcwd(buf, size) {}\n\nfunction ___syscall_getdents64(fd, dirp, count) {}\n\nfunction ___syscall_ioctl(fd, op, varargs) {\n SYSCALLS.varargs = varargs;\n return 0;\n}\n\nfunction ___syscall_lstat64(path, buf) {}\n\nfunction ___syscall_mkdirat(dirfd, path, mode) {}\n\nfunction ___syscall_newfstatat(dirfd, path, buf, flags) {}\n\nfunction ___syscall_openat(dirfd, path, flags, varargs) {\n SYSCALLS.varargs = varargs;\n}\n\nfunction ___syscall_readlinkat(dirfd, path, buf, bufsize) {}\n\nfunction ___syscall_rmdir(path) {}\n\nfunction ___syscall_stat64(path, buf) {}\n\nfunction ___syscall_unlinkat(dirfd, path, flags) {}\n\nfunction embindRepr(v) {\n if (v === null) {\n  return \"null\";\n }\n var t = typeof v;\n if (t === \"object\" || t === \"array\" || t === \"function\") {\n  return v.toString();\n } else {\n  return \"\" + v;\n }\n}\n\nfunction embind_init_charCodes() {\n var codes = new Array(256);\n for (var i = 0; i < 256; ++i) {\n  codes[i] = String.fromCharCode(i);\n }\n embind_charCodes = codes;\n}\n\nvar embind_charCodes = undefined;\n\nfunction readLatin1String(ptr) {\n var ret = \"\";\n var c = ptr;\n while (HEAPU8[c >>> 0]) {\n  ret += embind_charCodes[HEAPU8[c++ >>> 0]];\n }\n return ret;\n}\n\nvar awaitingDependencies = {};\n\nvar registeredTypes = {};\n\nvar typeDependencies = {};\n\nvar char_0 = 48;\n\nvar char_9 = 57;\n\nfunction makeLegalFunctionName(name) {\n if (undefined === name) {\n  return \"_unknown\";\n }\n name = name.replace(/[^a-zA-Z0-9_]/g, \"$\");\n var f = name.charCodeAt(0);\n if (f >= char_0 && f <= char_9) {\n  return \"_\" + name;\n }\n return name;\n}\n\nfunction createNamedFunction(name, body) {\n name = makeLegalFunctionName(name);\n return {\n  [name]: function() {\n   return body.apply(this, arguments);\n  }\n }[name];\n}\n\nfunction extendError(baseErrorType, errorName) {\n var errorClass = createNamedFunction(errorName, function(message) {\n  this.name = errorName;\n  this.message = message;\n  var stack = new Error(message).stack;\n  if (stack !== undefined) {\n   this.stack = this.toString() + \"\\n\" + stack.replace(/^Error(:[^\\n]*)?\\n/, \"\");\n  }\n });\n errorClass.prototype = Object.create(baseErrorType.prototype);\n errorClass.prototype.constructor = errorClass;\n errorClass.prototype.toString = function() {\n  if (this.message === undefined) {\n   return this.name;\n  } else {\n   return this.name + \": \" + this.message;\n  }\n };\n return errorClass;\n}\n\nvar BindingError = undefined;\n\nfunction throwBindingError(message) {\n throw new BindingError(message);\n}\n\nvar InternalError = undefined;\n\nfunction throwInternalError(message) {\n throw new InternalError(message);\n}\n\nfunction whenDependentTypesAreResolved(myTypes, dependentTypes, getTypeConverters) {\n myTypes.forEach(function(type) {\n  typeDependencies[type] = dependentTypes;\n });\n function onComplete(typeConverters) {\n  var myTypeConverters = getTypeConverters(typeConverters);\n  if (myTypeConverters.length !== myTypes.length) {\n   throwInternalError(\"Mismatched type converter count\");\n  }\n  for (var i = 0; i < myTypes.length; ++i) {\n   registerType(myTypes[i], myTypeConverters[i]);\n  }\n }\n var typeConverters = new Array(dependentTypes.length);\n var unregisteredTypes = [];\n var registered = 0;\n dependentTypes.forEach((dt, i) => {\n  if (registeredTypes.hasOwnProperty(dt)) {\n   typeConverters[i] = registeredTypes[dt];\n  } else {\n   unregisteredTypes.push(dt);\n   if (!awaitingDependencies.hasOwnProperty(dt)) {\n    awaitingDependencies[dt] = [];\n   }\n   awaitingDependencies[dt].push(() => {\n    typeConverters[i] = registeredTypes[dt];\n    ++registered;\n    if (registered === unregisteredTypes.length) {\n     onComplete(typeConverters);\n    }\n   });\n  }\n });\n if (0 === unregisteredTypes.length) {\n  onComplete(typeConverters);\n }\n}\n\nfunction registerType(rawType, registeredInstance, options = {}) {\n if (!(\"argPackAdvance\" in registeredInstance)) {\n  throw new TypeError(\"registerType registeredInstance requires argPackAdvance\");\n }\n var name = registeredInstance.name;\n if (!rawType) {\n  throwBindingError('type \"' + name + '\" must have a positive integer typeid pointer');\n }\n if (registeredTypes.hasOwnProperty(rawType)) {\n  if (options.ignoreDuplicateRegistrations) {\n   return;\n  } else {\n   throwBindingError(\"Cannot register type '\" + name + \"' twice\");\n  }\n }\n registeredTypes[rawType] = registeredInstance;\n delete typeDependencies[rawType];\n if (awaitingDependencies.hasOwnProperty(rawType)) {\n  var callbacks = awaitingDependencies[rawType];\n  delete awaitingDependencies[rawType];\n  callbacks.forEach(cb => cb());\n }\n}\n\nfunction integerReadValueFromPointer(name, shift, signed) {\n switch (shift) {\n case 0:\n  return signed ? function readS8FromPointer(pointer) {\n   return HEAP8[pointer >>> 0];\n  } : function readU8FromPointer(pointer) {\n   return HEAPU8[pointer >>> 0];\n  };\n\n case 1:\n  return signed ? function readS16FromPointer(pointer) {\n   return HEAP16[pointer >>> 1];\n  } : function readU16FromPointer(pointer) {\n   return HEAPU16[pointer >>> 1];\n  };\n\n case 2:\n  return signed ? function readS32FromPointer(pointer) {\n   return HEAP32[pointer >>> 2];\n  } : function readU32FromPointer(pointer) {\n   return HEAPU32[pointer >>> 2];\n  };\n\n case 3:\n  return signed ? function readS64FromPointer(pointer) {\n   return HEAP64[pointer >> 3];\n  } : function readU64FromPointer(pointer) {\n   return HEAPU64[pointer >> 3];\n  };\n\n default:\n  throw new TypeError(\"Unknown integer type: \" + name);\n }\n}\n\nfunction __embind_register_bigint(primitiveType, name, size, minRange, maxRange) {\n name = readLatin1String(name);\n var shift = getShiftFromSize(size);\n var isUnsignedType = name.indexOf(\"u\") != -1;\n if (isUnsignedType) {\n  maxRange = (1n << 64n) - 1n;\n }\n registerType(primitiveType, {\n  name: name,\n  \"fromWireType\": function(value) {\n   return value;\n  },\n  \"toWireType\": function(destructors, value) {\n   if (typeof value != \"bigint\" && typeof value != \"number\") {\n    throw new TypeError('Cannot convert \"' + embindRepr(value) + '\" to ' + this.name);\n   }\n   if (value < minRange || value > maxRange) {\n    throw new TypeError('Passing a number \"' + embindRepr(value) + '\" from JS side to C/C++ side to an argument of type \"' + name + '\", which is outside the valid range [' + minRange + \", \" + maxRange + \"]!\");\n   }\n   return value;\n  },\n  \"argPackAdvance\": 8,\n  \"readValueFromPointer\": integerReadValueFromPointer(name, shift, !isUnsignedType),\n  destructorFunction: null\n });\n}\n\nfunction getShiftFromSize(size) {\n switch (size) {\n case 1:\n  return 0;\n\n case 2:\n  return 1;\n\n case 4:\n  return 2;\n\n case 8:\n  return 3;\n\n default:\n  throw new TypeError(\"Unknown type size: \" + size);\n }\n}\n\nfunction __embind_register_bool(rawType, name, size, trueValue, falseValue) {\n var shift = getShiftFromSize(size);\n name = readLatin1String(name);\n registerType(rawType, {\n  name: name,\n  \"fromWireType\": function(wt) {\n   return !!wt;\n  },\n  \"toWireType\": function(destructors, o) {\n   return o ? trueValue : falseValue;\n  },\n  \"argPackAdvance\": 8,\n  \"readValueFromPointer\": function(pointer) {\n   var heap;\n   if (size === 1) {\n    heap = HEAP8;\n   } else if (size === 2) {\n    heap = HEAP16;\n   } else if (size === 4) {\n    heap = HEAP32;\n   } else {\n    throw new TypeError(\"Unknown boolean type size: \" + name);\n   }\n   return this[\"fromWireType\"](heap[pointer >>> shift]);\n  },\n  destructorFunction: null\n });\n}\n\nfunction HandleAllocator() {\n this.allocated = [ undefined ];\n this.freelist = [];\n this.get = function(id) {\n  return this.allocated[id];\n };\n this.allocate = function(handle) {\n  let id = this.freelist.pop() || this.allocated.length;\n  this.allocated[id] = handle;\n  return id;\n };\n this.free = function(id) {\n  this.allocated[id] = undefined;\n  this.freelist.push(id);\n };\n}\n\nvar emval_handles = new HandleAllocator();\n\nfunction __emval_decref(handle) {\n if (handle >= emval_handles.reserved && 0 === --emval_handles.get(handle).refcount) {\n  emval_handles.free(handle);\n }\n}\n\nfunction count_emval_handles() {\n var count = 0;\n for (var i = emval_handles.reserved; i < emval_handles.allocated.length; ++i) {\n  if (emval_handles.allocated[i] !== undefined) {\n   ++count;\n  }\n }\n return count;\n}\n\nfunction init_emval() {\n emval_handles.allocated.push({\n  value: undefined\n }, {\n  value: null\n }, {\n  value: true\n }, {\n  value: false\n });\n emval_handles.reserved = emval_handles.allocated.length;\n Module[\"count_emval_handles\"] = count_emval_handles;\n}\n\nvar Emval = {\n toValue: handle => {\n  if (!handle) {\n   throwBindingError(\"Cannot use deleted val. handle = \" + handle);\n  }\n  return emval_handles.get(handle).value;\n },\n toHandle: value => {\n  switch (value) {\n  case undefined:\n   return 1;\n\n  case null:\n   return 2;\n\n  case true:\n   return 3;\n\n  case false:\n   return 4;\n\n  default:\n   {\n    return emval_handles.allocate({\n     refcount: 1,\n     value: value\n    });\n   }\n  }\n }\n};\n\nfunction simpleReadValueFromPointer(pointer) {\n return this[\"fromWireType\"](HEAP32[pointer >>> 2]);\n}\n\nfunction __embind_register_emval(rawType, name) {\n name = readLatin1String(name);\n registerType(rawType, {\n  name: name,\n  \"fromWireType\": function(handle) {\n   var rv = Emval.toValue(handle);\n   __emval_decref(handle);\n   return rv;\n  },\n  \"toWireType\": function(destructors, value) {\n   return Emval.toHandle(value);\n  },\n  \"argPackAdvance\": 8,\n  \"readValueFromPointer\": simpleReadValueFromPointer,\n  destructorFunction: null\n });\n}\n\nfunction floatReadValueFromPointer(name, shift) {\n switch (shift) {\n case 2:\n  return function(pointer) {\n   return this[\"fromWireType\"](HEAPF32[pointer >>> 2]);\n  };\n\n case 3:\n  return function(pointer) {\n   return this[\"fromWireType\"](HEAPF64[pointer >>> 3]);\n  };\n\n default:\n  throw new TypeError(\"Unknown float type: \" + name);\n }\n}\n\nfunction __embind_register_float(rawType, name, size) {\n var shift = getShiftFromSize(size);\n name = readLatin1String(name);\n registerType(rawType, {\n  name: name,\n  \"fromWireType\": function(value) {\n   return value;\n  },\n  \"toWireType\": function(destructors, value) {\n   return value;\n  },\n  \"argPackAdvance\": 8,\n  \"readValueFromPointer\": floatReadValueFromPointer(name, shift),\n  destructorFunction: null\n });\n}\n\nfunction __embind_register_integer(primitiveType, name, size, minRange, maxRange) {\n name = readLatin1String(name);\n if (maxRange === -1) {\n  maxRange = 4294967295;\n }\n var shift = getShiftFromSize(size);\n var fromWireType = value => value;\n if (minRange === 0) {\n  var bitshift = 32 - 8 * size;\n  fromWireType = value => value << bitshift >>> bitshift;\n }\n var isUnsignedType = name.includes(\"unsigned\");\n var checkAssertions = (value, toTypeName) => {};\n var toWireType;\n if (isUnsignedType) {\n  toWireType = function(destructors, value) {\n   checkAssertions(value, this.name);\n   return value >>> 0;\n  };\n } else {\n  toWireType = function(destructors, value) {\n   checkAssertions(value, this.name);\n   return value;\n  };\n }\n registerType(primitiveType, {\n  name: name,\n  \"fromWireType\": fromWireType,\n  \"toWireType\": toWireType,\n  \"argPackAdvance\": 8,\n  \"readValueFromPointer\": integerReadValueFromPointer(name, shift, minRange !== 0),\n  destructorFunction: null\n });\n}\n\nfunction __embind_register_memory_view(rawType, dataTypeIndex, name) {\n var typeMapping = [ Int8Array, Uint8Array, Int16Array, Uint16Array, Int32Array, Uint32Array, Float32Array, Float64Array, BigInt64Array, BigUint64Array ];\n var TA = typeMapping[dataTypeIndex];\n function decodeMemoryView(handle) {\n  handle = handle >> 2;\n  var heap = HEAPU32;\n  var size = heap[handle >>> 0];\n  var data = heap[handle + 1 >>> 0];\n  return new TA(heap.buffer, data, size);\n }\n name = readLatin1String(name);\n registerType(rawType, {\n  name: name,\n  \"fromWireType\": decodeMemoryView,\n  \"argPackAdvance\": 8,\n  \"readValueFromPointer\": decodeMemoryView\n }, {\n  ignoreDuplicateRegistrations: true\n });\n}\n\nfunction __embind_register_std_string(rawType, name) {\n name = readLatin1String(name);\n var stdStringIsUTF8 = name === \"std::string\";\n registerType(rawType, {\n  name: name,\n  \"fromWireType\": function(value) {\n   var length = HEAPU32[value >>> 2];\n   var payload = value + 4;\n   var str;\n   if (stdStringIsUTF8) {\n    var decodeStartPtr = payload;\n    for (var i = 0; i <= length; ++i) {\n     var currentBytePtr = payload + i;\n     if (i == length || HEAPU8[currentBytePtr >>> 0] == 0) {\n      var maxRead = currentBytePtr - decodeStartPtr;\n      var stringSegment = UTF8ToString(decodeStartPtr, maxRead);\n      if (str === undefined) {\n       str = stringSegment;\n      } else {\n       str += String.fromCharCode(0);\n       str += stringSegment;\n      }\n      decodeStartPtr = currentBytePtr + 1;\n     }\n    }\n   } else {\n    var a = new Array(length);\n    for (var i = 0; i < length; ++i) {\n     a[i] = String.fromCharCode(HEAPU8[payload + i >>> 0]);\n    }\n    str = a.join(\"\");\n   }\n   _free(value);\n   return str;\n  },\n  \"toWireType\": function(destructors, value) {\n   if (value instanceof ArrayBuffer) {\n    value = new Uint8Array(value);\n   }\n   var length;\n   var valueIsOfTypeString = typeof value == \"string\";\n   if (!(valueIsOfTypeString || value instanceof Uint8Array || value instanceof Uint8ClampedArray || value instanceof Int8Array)) {\n    throwBindingError(\"Cannot pass non-string to std::string\");\n   }\n   if (stdStringIsUTF8 && valueIsOfTypeString) {\n    length = lengthBytesUTF8(value);\n   } else {\n    length = value.length;\n   }\n   var base = _malloc(4 + length + 1);\n   var ptr = base + 4;\n   ptr >>>= 0;\n   HEAPU32[base >>> 2] = length;\n   if (stdStringIsUTF8 && valueIsOfTypeString) {\n    stringToUTF8(value, ptr, length + 1);\n   } else {\n    if (valueIsOfTypeString) {\n     for (var i = 0; i < length; ++i) {\n      var charCode = value.charCodeAt(i);\n      if (charCode > 255) {\n       _free(ptr);\n       throwBindingError(\"String has UTF-16 code units that do not fit in 8 bits\");\n      }\n      HEAPU8[ptr + i >>> 0] = charCode;\n     }\n    } else {\n     for (var i = 0; i < length; ++i) {\n      HEAPU8[ptr + i >>> 0] = value[i];\n     }\n    }\n   }\n   if (destructors !== null) {\n    destructors.push(_free, base);\n   }\n   return base;\n  },\n  \"argPackAdvance\": 8,\n  \"readValueFromPointer\": simpleReadValueFromPointer,\n  destructorFunction: function(ptr) {\n   _free(ptr);\n  }\n });\n}\n\nvar UTF16Decoder = typeof TextDecoder != \"undefined\" ? new TextDecoder(\"utf-16le\") : undefined;\n\nfunction UTF16ToString(ptr, maxBytesToRead) {\n var endPtr = ptr;\n var idx = endPtr >> 1;\n var maxIdx = idx + maxBytesToRead / 2;\n while (!(idx >= maxIdx) && HEAPU16[idx >>> 0]) ++idx;\n endPtr = idx << 1;\n if (endPtr - ptr > 32 && UTF16Decoder) return UTF16Decoder.decode(HEAPU8.subarray(ptr >>> 0, endPtr >>> 0));\n var str = \"\";\n for (var i = 0; !(i >= maxBytesToRead / 2); ++i) {\n  var codeUnit = HEAP16[ptr + i * 2 >>> 1];\n  if (codeUnit == 0) break;\n  str += String.fromCharCode(codeUnit);\n }\n return str;\n}\n\nfunction stringToUTF16(str, outPtr, maxBytesToWrite) {\n if (maxBytesToWrite === undefined) {\n  maxBytesToWrite = 2147483647;\n }\n if (maxBytesToWrite < 2) return 0;\n maxBytesToWrite -= 2;\n var startPtr = outPtr;\n var numCharsToWrite = maxBytesToWrite < str.length * 2 ? maxBytesToWrite / 2 : str.length;\n for (var i = 0; i < numCharsToWrite; ++i) {\n  var codeUnit = str.charCodeAt(i);\n  HEAP16[outPtr >>> 1] = codeUnit;\n  outPtr += 2;\n }\n HEAP16[outPtr >>> 1] = 0;\n return outPtr - startPtr;\n}\n\nfunction lengthBytesUTF16(str) {\n return str.length * 2;\n}\n\nfunction UTF32ToString(ptr, maxBytesToRead) {\n var i = 0;\n var str = \"\";\n while (!(i >= maxBytesToRead / 4)) {\n  var utf32 = HEAP32[ptr + i * 4 >>> 2];\n  if (utf32 == 0) break;\n  ++i;\n  if (utf32 >= 65536) {\n   var ch = utf32 - 65536;\n   str += String.fromCharCode(55296 | ch >> 10, 56320 | ch & 1023);\n  } else {\n   str += String.fromCharCode(utf32);\n  }\n }\n return str;\n}\n\nfunction stringToUTF32(str, outPtr, maxBytesToWrite) {\n outPtr >>>= 0;\n if (maxBytesToWrite === undefined) {\n  maxBytesToWrite = 2147483647;\n }\n if (maxBytesToWrite < 4) return 0;\n var startPtr = outPtr;\n var endPtr = startPtr + maxBytesToWrite - 4;\n for (var i = 0; i < str.length; ++i) {\n  var codeUnit = str.charCodeAt(i);\n  if (codeUnit >= 55296 && codeUnit <= 57343) {\n   var trailSurrogate = str.charCodeAt(++i);\n   codeUnit = 65536 + ((codeUnit & 1023) << 10) | trailSurrogate & 1023;\n  }\n  HEAP32[outPtr >>> 2] = codeUnit;\n  outPtr += 4;\n  if (outPtr + 4 > endPtr) break;\n }\n HEAP32[outPtr >>> 2] = 0;\n return outPtr - startPtr;\n}\n\nfunction lengthBytesUTF32(str) {\n var len = 0;\n for (var i = 0; i < str.length; ++i) {\n  var codeUnit = str.charCodeAt(i);\n  if (codeUnit >= 55296 && codeUnit <= 57343) ++i;\n  len += 4;\n }\n return len;\n}\n\nfunction __embind_register_std_wstring(rawType, charSize, name) {\n name = readLatin1String(name);\n var decodeString, encodeString, getHeap, lengthBytesUTF, shift;\n if (charSize === 2) {\n  decodeString = UTF16ToString;\n  encodeString = stringToUTF16;\n  lengthBytesUTF = lengthBytesUTF16;\n  getHeap = () => HEAPU16;\n  shift = 1;\n } else if (charSize === 4) {\n  decodeString = UTF32ToString;\n  encodeString = stringToUTF32;\n  lengthBytesUTF = lengthBytesUTF32;\n  getHeap = () => HEAPU32;\n  shift = 2;\n }\n registerType(rawType, {\n  name: name,\n  \"fromWireType\": function(value) {\n   var length = HEAPU32[value >>> 2];\n   var HEAP = getHeap();\n   var str;\n   var decodeStartPtr = value + 4;\n   for (var i = 0; i <= length; ++i) {\n    var currentBytePtr = value + 4 + i * charSize;\n    if (i == length || HEAP[currentBytePtr >>> shift] == 0) {\n     var maxReadBytes = currentBytePtr - decodeStartPtr;\n     var stringSegment = decodeString(decodeStartPtr, maxReadBytes);\n     if (str === undefined) {\n      str = stringSegment;\n     } else {\n      str += String.fromCharCode(0);\n      str += stringSegment;\n     }\n     decodeStartPtr = currentBytePtr + charSize;\n    }\n   }\n   _free(value);\n   return str;\n  },\n  \"toWireType\": function(destructors, value) {\n   if (!(typeof value == \"string\")) {\n    throwBindingError(\"Cannot pass non-string to C++ string type \" + name);\n   }\n   var length = lengthBytesUTF(value);\n   var ptr = _malloc(4 + length + charSize);\n   ptr >>>= 0;\n   HEAPU32[ptr >>> 2] = length >> shift;\n   encodeString(value, ptr + 4, length + charSize);\n   if (destructors !== null) {\n    destructors.push(_free, ptr);\n   }\n   return ptr;\n  },\n  \"argPackAdvance\": 8,\n  \"readValueFromPointer\": simpleReadValueFromPointer,\n  destructorFunction: function(ptr) {\n   _free(ptr);\n  }\n });\n}\n\nfunction __embind_register_void(rawType, name) {\n name = readLatin1String(name);\n registerType(rawType, {\n  isVoid: true,\n  name: name,\n  \"argPackAdvance\": 0,\n  \"fromWireType\": function() {\n   return undefined;\n  },\n  \"toWireType\": function(destructors, o) {\n   return undefined;\n  }\n });\n}\n\nvar nowIsMonotonic = true;\n\nfunction __emscripten_get_now_is_monotonic() {\n return nowIsMonotonic;\n}\n\nfunction getTypeName(type) {\n var ptr = ___getTypeName(type);\n var rv = readLatin1String(ptr);\n _free(ptr);\n return rv;\n}\n\nfunction requireRegisteredType(rawType, humanName) {\n var impl = registeredTypes[rawType];\n if (undefined === impl) {\n  throwBindingError(humanName + \" has unknown type \" + getTypeName(rawType));\n }\n return impl;\n}\n\nfunction __emval_as(handle, returnType, destructorsRef) {\n handle = Emval.toValue(handle);\n returnType = requireRegisteredType(returnType, \"emval::as\");\n var destructors = [];\n var rd = Emval.toHandle(destructors);\n HEAPU32[destructorsRef >>> 2] = rd;\n return returnType[\"toWireType\"](destructors, handle);\n}\n\nfunction emval_allocateDestructors(destructorsRef) {\n var destructors = [];\n HEAPU32[destructorsRef >>> 2] = Emval.toHandle(destructors);\n return destructors;\n}\n\nvar emval_symbols = {};\n\nfunction getStringOrSymbol(address) {\n var symbol = emval_symbols[address];\n if (symbol === undefined) {\n  return readLatin1String(address);\n }\n return symbol;\n}\n\nvar emval_methodCallers = [];\n\nfunction __emval_call_method(caller, handle, methodName, destructorsRef, args) {\n caller = emval_methodCallers[caller];\n handle = Emval.toValue(handle);\n methodName = getStringOrSymbol(methodName);\n return caller(handle, methodName, emval_allocateDestructors(destructorsRef), args);\n}\n\nfunction __emval_call_void_method(caller, handle, methodName, args) {\n caller = emval_methodCallers[caller];\n handle = Emval.toValue(handle);\n methodName = getStringOrSymbol(methodName);\n caller(handle, methodName, null, args);\n}\n\nfunction __emval_equals(first, second) {\n first = Emval.toValue(first);\n second = Emval.toValue(second);\n return first == second;\n}\n\nfunction emval_get_global() {\n if (typeof globalThis == \"object\") {\n  return globalThis;\n }\n return function() {\n  return Function;\n }()(\"return this\")();\n}\n\nfunction __emval_get_global(name) {\n if (name === 0) {\n  return Emval.toHandle(emval_get_global());\n } else {\n  name = getStringOrSymbol(name);\n  return Emval.toHandle(emval_get_global()[name]);\n }\n}\n\nfunction emval_addMethodCaller(caller) {\n var id = emval_methodCallers.length;\n emval_methodCallers.push(caller);\n return id;\n}\n\nfunction emval_lookupTypes(argCount, argTypes) {\n var a = new Array(argCount);\n for (var i = 0; i < argCount; ++i) {\n  a[i] = requireRegisteredType(HEAPU32[argTypes + i * 4 >>> 2], \"parameter \" + i);\n }\n return a;\n}\n\nvar emval_registeredMethods = [];\n\nfunction newFunc(constructor, argumentList) {\n if (!(constructor instanceof Function)) {\n  throw new TypeError(\"new_ called with constructor type \" + typeof constructor + \" which is not a function\");\n }\n var dummy = createNamedFunction(constructor.name || \"unknownFunctionName\", function() {});\n dummy.prototype = constructor.prototype;\n var obj = new dummy();\n var r = constructor.apply(obj, argumentList);\n return r instanceof Object ? r : obj;\n}\n\nfunction __emval_get_method_caller(argCount, argTypes) {\n var types = emval_lookupTypes(argCount, argTypes);\n var retType = types[0];\n var signatureName = retType.name + \"_$\" + types.slice(1).map(function(t) {\n  return t.name;\n }).join(\"_\") + \"$\";\n var returnId = emval_registeredMethods[signatureName];\n if (returnId !== undefined) {\n  return returnId;\n }\n var params = [ \"retType\" ];\n var args = [ retType ];\n var argsList = \"\";\n for (var i = 0; i < argCount - 1; ++i) {\n  argsList += (i !== 0 ? \", \" : \"\") + \"arg\" + i;\n  params.push(\"argType\" + i);\n  args.push(types[1 + i]);\n }\n var functionName = makeLegalFunctionName(\"methodCaller_\" + signatureName);\n var functionBody = \"return function \" + functionName + \"(handle, name, destructors, args) {\\n\";\n var offset = 0;\n for (var i = 0; i < argCount - 1; ++i) {\n  functionBody += \"    var arg\" + i + \" = argType\" + i + \".readValueFromPointer(args\" + (offset ? \"+\" + offset : \"\") + \");\\n\";\n  offset += types[i + 1][\"argPackAdvance\"];\n }\n functionBody += \"    var rv = handle[name](\" + argsList + \");\\n\";\n for (var i = 0; i < argCount - 1; ++i) {\n  if (types[i + 1][\"deleteObject\"]) {\n   functionBody += \"    argType\" + i + \".deleteObject(arg\" + i + \");\\n\";\n  }\n }\n if (!retType.isVoid) {\n  functionBody += \"    return retType.toWireType(destructors, rv);\\n\";\n }\n functionBody += \"};\\n\";\n params.push(functionBody);\n var invokerFunction = newFunc(Function, params).apply(null, args);\n returnId = emval_addMethodCaller(invokerFunction);\n emval_registeredMethods[signatureName] = returnId;\n return returnId;\n}\n\nfunction __emval_get_property(handle, key) {\n handle = Emval.toValue(handle);\n key = Emval.toValue(key);\n return Emval.toHandle(handle[key]);\n}\n\nfunction __emval_incref(handle) {\n if (handle > 4) {\n  emval_handles.get(handle).refcount += 1;\n }\n}\n\nfunction craftEmvalAllocator(argCount) {\n var argsList = \"\";\n for (var i = 0; i < argCount; ++i) {\n  argsList += (i !== 0 ? \", \" : \"\") + \"arg\" + i;\n }\n var getMemory = () => HEAPU32;\n var functionBody = \"return function emval_allocator_\" + argCount + \"(constructor, argTypes, args) {\\n\" + \"  var HEAPU32 = getMemory();\\n\";\n for (var i = 0; i < argCount; ++i) {\n  functionBody += \"var argType\" + i + \" = requireRegisteredType(HEAPU32[((argTypes)>>2)], 'parameter \" + i + \"');\\n\" + \"var arg\" + i + \" = argType\" + i + \".readValueFromPointer(args);\\n\" + \"args += argType\" + i + \"['argPackAdvance'];\\n\" + \"argTypes += 4;\\n\";\n }\n functionBody += \"var obj = new constructor(\" + argsList + \");\\n\" + \"return valueToHandle(obj);\\n\" + \"}\\n\";\n return new Function(\"requireRegisteredType\", \"Module\", \"valueToHandle\", \"getMemory\", functionBody)(requireRegisteredType, Module, Emval.toHandle, getMemory);\n}\n\nvar emval_newers = {};\n\nfunction __emval_new(handle, argCount, argTypes, args) {\n handle = Emval.toValue(handle);\n var newer = emval_newers[argCount];\n if (!newer) {\n  newer = craftEmvalAllocator(argCount);\n  emval_newers[argCount] = newer;\n }\n return newer(handle, argTypes, args);\n}\n\nfunction __emval_new_array() {\n return Emval.toHandle([]);\n}\n\nfunction __emval_new_array_from_memory_view(view) {\n view = Emval.toValue(view);\n var a = new Array(view.length);\n for (var i = 0; i < view.length; i++) a[i] = view[i];\n return Emval.toHandle(a);\n}\n\nfunction __emval_new_cstring(v) {\n return Emval.toHandle(getStringOrSymbol(v));\n}\n\nfunction __emval_new_object() {\n return Emval.toHandle({});\n}\n\nfunction runDestructors(destructors) {\n while (destructors.length) {\n  var ptr = destructors.pop();\n  var del = destructors.pop();\n  del(ptr);\n }\n}\n\nfunction __emval_run_destructors(handle) {\n var destructors = Emval.toValue(handle);\n runDestructors(destructors);\n __emval_decref(handle);\n}\n\nfunction __emval_set_property(handle, key, value) {\n handle = Emval.toValue(handle);\n key = Emval.toValue(key);\n value = Emval.toValue(value);\n handle[key] = value;\n}\n\nfunction __emval_take_value(type, arg) {\n type = requireRegisteredType(type, \"_emval_take_value\");\n var v = type[\"readValueFromPointer\"](arg);\n return Emval.toHandle(v);\n}\n\nfunction readI53FromI64(ptr) {\n return HEAPU32[ptr >>> 2] + HEAP32[ptr + 4 >>> 2] * 4294967296;\n}\n\nfunction __gmtime_js(time, tmPtr) {\n var date = new Date(readI53FromI64(time) * 1e3);\n HEAP32[tmPtr >>> 2] = date.getUTCSeconds();\n HEAP32[tmPtr + 4 >>> 2] = date.getUTCMinutes();\n HEAP32[tmPtr + 8 >>> 2] = date.getUTCHours();\n HEAP32[tmPtr + 12 >>> 2] = date.getUTCDate();\n HEAP32[tmPtr + 16 >>> 2] = date.getUTCMonth();\n HEAP32[tmPtr + 20 >>> 2] = date.getUTCFullYear() - 1900;\n HEAP32[tmPtr + 24 >>> 2] = date.getUTCDay();\n var start = Date.UTC(date.getUTCFullYear(), 0, 1, 0, 0, 0, 0);\n var yday = (date.getTime() - start) / (1e3 * 60 * 60 * 24) | 0;\n HEAP32[tmPtr + 28 >>> 2] = yday;\n}\n\nfunction isLeapYear(year) {\n return year % 4 === 0 && (year % 100 !== 0 || year % 400 === 0);\n}\n\nvar MONTH_DAYS_LEAP_CUMULATIVE = [ 0, 31, 60, 91, 121, 152, 182, 213, 244, 274, 305, 335 ];\n\nvar MONTH_DAYS_REGULAR_CUMULATIVE = [ 0, 31, 59, 90, 120, 151, 181, 212, 243, 273, 304, 334 ];\n\nfunction ydayFromDate(date) {\n var leap = isLeapYear(date.getFullYear());\n var monthDaysCumulative = leap ? MONTH_DAYS_LEAP_CUMULATIVE : MONTH_DAYS_REGULAR_CUMULATIVE;\n var yday = monthDaysCumulative[date.getMonth()] + date.getDate() - 1;\n return yday;\n}\n\nfunction __localtime_js(time, tmPtr) {\n var date = new Date(readI53FromI64(time) * 1e3);\n HEAP32[tmPtr >>> 2] = date.getSeconds();\n HEAP32[tmPtr + 4 >>> 2] = date.getMinutes();\n HEAP32[tmPtr + 8 >>> 2] = date.getHours();\n HEAP32[tmPtr + 12 >>> 2] = date.getDate();\n HEAP32[tmPtr + 16 >>> 2] = date.getMonth();\n HEAP32[tmPtr + 20 >>> 2] = date.getFullYear() - 1900;\n HEAP32[tmPtr + 24 >>> 2] = date.getDay();\n var yday = ydayFromDate(date) | 0;\n HEAP32[tmPtr + 28 >>> 2] = yday;\n HEAP32[tmPtr + 36 >>> 2] = -(date.getTimezoneOffset() * 60);\n var start = new Date(date.getFullYear(), 0, 1);\n var summerOffset = new Date(date.getFullYear(), 6, 1).getTimezoneOffset();\n var winterOffset = start.getTimezoneOffset();\n var dst = (summerOffset != winterOffset && date.getTimezoneOffset() == Math.min(winterOffset, summerOffset)) | 0;\n HEAP32[tmPtr + 32 >>> 2] = dst;\n}\n\nfunction __mktime_js(tmPtr) {\n var date = new Date(HEAP32[tmPtr + 20 >>> 2] + 1900, HEAP32[tmPtr + 16 >>> 2], HEAP32[tmPtr + 12 >>> 2], HEAP32[tmPtr + 8 >>> 2], HEAP32[tmPtr + 4 >>> 2], HEAP32[tmPtr >>> 2], 0);\n var dst = HEAP32[tmPtr + 32 >>> 2];\n var guessedOffset = date.getTimezoneOffset();\n var start = new Date(date.getFullYear(), 0, 1);\n var summerOffset = new Date(date.getFullYear(), 6, 1).getTimezoneOffset();\n var winterOffset = start.getTimezoneOffset();\n var dstOffset = Math.min(winterOffset, summerOffset);\n if (dst < 0) {\n  HEAP32[tmPtr + 32 >>> 2] = Number(summerOffset != winterOffset && dstOffset == guessedOffset);\n } else if (dst > 0 != (dstOffset == guessedOffset)) {\n  var nonDstOffset = Math.max(winterOffset, summerOffset);\n  var trueOffset = dst > 0 ? dstOffset : nonDstOffset;\n  date.setTime(date.getTime() + (trueOffset - guessedOffset) * 6e4);\n }\n HEAP32[tmPtr + 24 >>> 2] = date.getDay();\n var yday = ydayFromDate(date) | 0;\n HEAP32[tmPtr + 28 >>> 2] = yday;\n HEAP32[tmPtr >>> 2] = date.getSeconds();\n HEAP32[tmPtr + 4 >>> 2] = date.getMinutes();\n HEAP32[tmPtr + 8 >>> 2] = date.getHours();\n HEAP32[tmPtr + 12 >>> 2] = date.getDate();\n HEAP32[tmPtr + 16 >>> 2] = date.getMonth();\n HEAP32[tmPtr + 20 >>> 2] = date.getYear();\n return date.getTime() / 1e3 | 0;\n}\n\nfunction __mmap_js(len, prot, flags, fd, off, allocated, addr) {\n return -52;\n}\n\nfunction __munmap_js(addr, len, prot, flags, fd, offset) {}\n\nfunction stringToNewUTF8(str) {\n var size = lengthBytesUTF8(str) + 1;\n var ret = _malloc(size);\n if (ret) stringToUTF8(str, ret, size);\n return ret;\n}\n\nfunction __tzset_js(timezone, daylight, tzname) {\n var currentYear = new Date().getFullYear();\n var winter = new Date(currentYear, 0, 1);\n var summer = new Date(currentYear, 6, 1);\n var winterOffset = winter.getTimezoneOffset();\n var summerOffset = summer.getTimezoneOffset();\n var stdTimezoneOffset = Math.max(winterOffset, summerOffset);\n HEAPU32[timezone >>> 2] = stdTimezoneOffset * 60;\n HEAP32[daylight >>> 2] = Number(winterOffset != summerOffset);\n function extractZone(date) {\n  var match = date.toTimeString().match(/\\(([A-Za-z ]+)\\)$/);\n  return match ? match[1] : \"GMT\";\n }\n var winterName = extractZone(winter);\n var summerName = extractZone(summer);\n var winterNamePtr = stringToNewUTF8(winterName);\n var summerNamePtr = stringToNewUTF8(summerName);\n if (summerOffset < winterOffset) {\n  HEAPU32[tzname >>> 2] = winterNamePtr;\n  HEAPU32[tzname + 4 >>> 2] = summerNamePtr;\n } else {\n  HEAPU32[tzname >>> 2] = summerNamePtr;\n  HEAPU32[tzname + 4 >>> 2] = winterNamePtr;\n }\n}\n\nfunction _abort() {\n abort(\"\");\n}\n\nfunction _dlopen(handle) {\n abort(dlopenMissingError);\n}\n\nfunction _emscripten_date_now() {\n return Date.now();\n}\n\nfunction getHeapMax() {\n return 4294901760;\n}\n\nfunction _emscripten_get_heap_max() {\n return getHeapMax();\n}\n\nvar _emscripten_get_now;\n\nif (ENVIRONMENT_IS_NODE) {\n _emscripten_get_now = () => {\n  var t = process.hrtime();\n  return t[0] * 1e3 + t[1] / 1e6;\n };\n} else _emscripten_get_now = () => performance.now();\n\nfunction _emscripten_memcpy_big(dest, src, num) {\n HEAPU8.copyWithin(dest >>> 0, src >>> 0, src + num >>> 0);\n}\n\nfunction emscripten_realloc_buffer(size) {\n var b = wasmMemory.buffer;\n try {\n  wasmMemory.grow(size - b.byteLength + 65535 >>> 16);\n  updateMemoryViews();\n  return 1;\n } catch (e) {}\n}\n\nfunction _emscripten_resize_heap(requestedSize) {\n var oldSize = HEAPU8.length;\n requestedSize = requestedSize >>> 0;\n var maxHeapSize = getHeapMax();\n if (requestedSize > maxHeapSize) {\n  return false;\n }\n let alignUp = (x, multiple) => x + (multiple - x % multiple) % multiple;\n for (var cutDown = 1; cutDown <= 4; cutDown *= 2) {\n  var overGrownHeapSize = oldSize * (1 + .2 / cutDown);\n  overGrownHeapSize = Math.min(overGrownHeapSize, requestedSize + 100663296);\n  var newSize = Math.min(maxHeapSize, alignUp(Math.max(requestedSize, overGrownHeapSize), 65536));\n  var replacement = emscripten_realloc_buffer(newSize);\n  if (replacement) {\n   return true;\n  }\n }\n return false;\n}\n\nvar ENV = {};\n\nfunction getExecutableName() {\n return thisProgram || \"./this.program\";\n}\n\nfunction getEnvStrings() {\n if (!getEnvStrings.strings) {\n  var lang = (typeof navigator == \"object\" && navigator.languages && navigator.languages[0] || \"C\").replace(\"-\", \"_\") + \".UTF-8\";\n  var env = {\n   \"USER\": \"web_user\",\n   \"LOGNAME\": \"web_user\",\n   \"PATH\": \"/\",\n   \"PWD\": \"/\",\n   \"HOME\": \"/home/web_user\",\n   \"LANG\": lang,\n   \"_\": getExecutableName()\n  };\n  for (var x in ENV) {\n   if (ENV[x] === undefined) delete env[x]; else env[x] = ENV[x];\n  }\n  var strings = [];\n  for (var x in env) {\n   strings.push(x + \"=\" + env[x]);\n  }\n  getEnvStrings.strings = strings;\n }\n return getEnvStrings.strings;\n}\n\nfunction stringToAscii(str, buffer) {\n for (var i = 0; i < str.length; ++i) {\n  HEAP8[buffer++ >>> 0] = str.charCodeAt(i);\n }\n HEAP8[buffer >>> 0] = 0;\n}\n\nfunction _environ_get(__environ, environ_buf) {\n var bufSize = 0;\n getEnvStrings().forEach(function(string, i) {\n  var ptr = environ_buf + bufSize;\n  HEAPU32[__environ + i * 4 >>> 2] = ptr;\n  stringToAscii(string, ptr);\n  bufSize += string.length + 1;\n });\n return 0;\n}\n\nfunction _environ_sizes_get(penviron_count, penviron_buf_size) {\n var strings = getEnvStrings();\n HEAPU32[penviron_count >>> 2] = strings.length;\n var bufSize = 0;\n strings.forEach(function(string) {\n  bufSize += string.length + 1;\n });\n HEAPU32[penviron_buf_size >>> 2] = bufSize;\n return 0;\n}\n\nfunction _fd_close(fd) {\n return 52;\n}\n\nfunction _fd_read(fd, iov, iovcnt, pnum) {\n return 52;\n}\n\nvar MAX_INT53 = 9007199254740992;\n\nvar MIN_INT53 = -9007199254740992;\n\nfunction bigintToI53Checked(num) {\n return num < MIN_INT53 || num > MAX_INT53 ? NaN : Number(num);\n}\n\nfunction _fd_seek(fd, offset, whence, newOffset) {\n return 70;\n}\n\nvar printCharBuffers = [ null, [], [] ];\n\nfunction printChar(stream, curr) {\n var buffer = printCharBuffers[stream];\n if (curr === 0 || curr === 10) {\n  (stream === 1 ? out : err)(UTF8ArrayToString(buffer, 0));\n  buffer.length = 0;\n } else {\n  buffer.push(curr);\n }\n}\n\nfunction flush_NO_FILESYSTEM() {\n if (printCharBuffers[1].length) printChar(1, 10);\n if (printCharBuffers[2].length) printChar(2, 10);\n}\n\nfunction _fd_write(fd, iov, iovcnt, pnum) {\n var num = 0;\n for (var i = 0; i < iovcnt; i++) {\n  var ptr = HEAPU32[iov >>> 2];\n  var len = HEAPU32[iov + 4 >>> 2];\n  iov += 8;\n  for (var j = 0; j < len; j++) {\n   printChar(fd, HEAPU8[ptr + j >>> 0]);\n  }\n  num += len;\n }\n HEAPU32[pnum >>> 2] = num;\n return 0;\n}\n\nfunction _llvm_eh_typeid_for(type) {\n return type;\n}\n\nfunction arraySum(array, index) {\n var sum = 0;\n for (var i = 0; i <= index; sum += array[i++]) {}\n return sum;\n}\n\nvar MONTH_DAYS_LEAP = [ 31, 29, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31 ];\n\nvar MONTH_DAYS_REGULAR = [ 31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31 ];\n\nfunction addDays(date, days) {\n var newDate = new Date(date.getTime());\n while (days > 0) {\n  var leap = isLeapYear(newDate.getFullYear());\n  var currentMonth = newDate.getMonth();\n  var daysInCurrentMonth = (leap ? MONTH_DAYS_LEAP : MONTH_DAYS_REGULAR)[currentMonth];\n  if (days > daysInCurrentMonth - newDate.getDate()) {\n   days -= daysInCurrentMonth - newDate.getDate() + 1;\n   newDate.setDate(1);\n   if (currentMonth < 11) {\n    newDate.setMonth(currentMonth + 1);\n   } else {\n    newDate.setMonth(0);\n    newDate.setFullYear(newDate.getFullYear() + 1);\n   }\n  } else {\n   newDate.setDate(newDate.getDate() + days);\n   return newDate;\n  }\n }\n return newDate;\n}\n\nfunction intArrayFromString(stringy, dontAddNull, length) {\n var len = length > 0 ? length : lengthBytesUTF8(stringy) + 1;\n var u8array = new Array(len);\n var numBytesWritten = stringToUTF8Array(stringy, u8array, 0, u8array.length);\n if (dontAddNull) u8array.length = numBytesWritten;\n return u8array;\n}\n\nfunction writeArrayToMemory(array, buffer) {\n HEAP8.set(array, buffer >>> 0);\n}\n\nfunction _strftime(s, maxsize, format, tm) {\n var tm_zone = HEAP32[tm + 40 >>> 2];\n var date = {\n  tm_sec: HEAP32[tm >>> 2],\n  tm_min: HEAP32[tm + 4 >>> 2],\n  tm_hour: HEAP32[tm + 8 >>> 2],\n  tm_mday: HEAP32[tm + 12 >>> 2],\n  tm_mon: HEAP32[tm + 16 >>> 2],\n  tm_year: HEAP32[tm + 20 >>> 2],\n  tm_wday: HEAP32[tm + 24 >>> 2],\n  tm_yday: HEAP32[tm + 28 >>> 2],\n  tm_isdst: HEAP32[tm + 32 >>> 2],\n  tm_gmtoff: HEAP32[tm + 36 >>> 2],\n  tm_zone: tm_zone ? UTF8ToString(tm_zone) : \"\"\n };\n var pattern = UTF8ToString(format);\n var EXPANSION_RULES_1 = {\n  \"%c\": \"%a %b %d %H:%M:%S %Y\",\n  \"%D\": \"%m/%d/%y\",\n  \"%F\": \"%Y-%m-%d\",\n  \"%h\": \"%b\",\n  \"%r\": \"%I:%M:%S %p\",\n  \"%R\": \"%H:%M\",\n  \"%T\": \"%H:%M:%S\",\n  \"%x\": \"%m/%d/%y\",\n  \"%X\": \"%H:%M:%S\",\n  \"%Ec\": \"%c\",\n  \"%EC\": \"%C\",\n  \"%Ex\": \"%m/%d/%y\",\n  \"%EX\": \"%H:%M:%S\",\n  \"%Ey\": \"%y\",\n  \"%EY\": \"%Y\",\n  \"%Od\": \"%d\",\n  \"%Oe\": \"%e\",\n  \"%OH\": \"%H\",\n  \"%OI\": \"%I\",\n  \"%Om\": \"%m\",\n  \"%OM\": \"%M\",\n  \"%OS\": \"%S\",\n  \"%Ou\": \"%u\",\n  \"%OU\": \"%U\",\n  \"%OV\": \"%V\",\n  \"%Ow\": \"%w\",\n  \"%OW\": \"%W\",\n  \"%Oy\": \"%y\"\n };\n for (var rule in EXPANSION_RULES_1) {\n  pattern = pattern.replace(new RegExp(rule, \"g\"), EXPANSION_RULES_1[rule]);\n }\n var WEEKDAYS = [ \"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\" ];\n var MONTHS = [ \"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\" ];\n function leadingSomething(value, digits, character) {\n  var str = typeof value == \"number\" ? value.toString() : value || \"\";\n  while (str.length < digits) {\n   str = character[0] + str;\n  }\n  return str;\n }\n function leadingNulls(value, digits) {\n  return leadingSomething(value, digits, \"0\");\n }\n function compareByDay(date1, date2) {\n  function sgn(value) {\n   return value < 0 ? -1 : value > 0 ? 1 : 0;\n  }\n  var compare;\n  if ((compare = sgn(date1.getFullYear() - date2.getFullYear())) === 0) {\n   if ((compare = sgn(date1.getMonth() - date2.getMonth())) === 0) {\n    compare = sgn(date1.getDate() - date2.getDate());\n   }\n  }\n  return compare;\n }\n function getFirstWeekStartDate(janFourth) {\n  switch (janFourth.getDay()) {\n  case 0:\n   return new Date(janFourth.getFullYear() - 1, 11, 29);\n\n  case 1:\n   return janFourth;\n\n  case 2:\n   return new Date(janFourth.getFullYear(), 0, 3);\n\n  case 3:\n   return new Date(janFourth.getFullYear(), 0, 2);\n\n  case 4:\n   return new Date(janFourth.getFullYear(), 0, 1);\n\n  case 5:\n   return new Date(janFourth.getFullYear() - 1, 11, 31);\n\n  case 6:\n   return new Date(janFourth.getFullYear() - 1, 11, 30);\n  }\n }\n function getWeekBasedYear(date) {\n  var thisDate = addDays(new Date(date.tm_year + 1900, 0, 1), date.tm_yday);\n  var janFourthThisYear = new Date(thisDate.getFullYear(), 0, 4);\n  var janFourthNextYear = new Date(thisDate.getFullYear() + 1, 0, 4);\n  var firstWeekStartThisYear = getFirstWeekStartDate(janFourthThisYear);\n  var firstWeekStartNextYear = getFirstWeekStartDate(janFourthNextYear);\n  if (compareByDay(firstWeekStartThisYear, thisDate) <= 0) {\n   if (compareByDay(firstWeekStartNextYear, thisDate) <= 0) {\n    return thisDate.getFullYear() + 1;\n   }\n   return thisDate.getFullYear();\n  }\n  return thisDate.getFullYear() - 1;\n }\n var EXPANSION_RULES_2 = {\n  \"%a\": function(date) {\n   return WEEKDAYS[date.tm_wday].substring(0, 3);\n  },\n  \"%A\": function(date) {\n   return WEEKDAYS[date.tm_wday];\n  },\n  \"%b\": function(date) {\n   return MONTHS[date.tm_mon].substring(0, 3);\n  },\n  \"%B\": function(date) {\n   return MONTHS[date.tm_mon];\n  },\n  \"%C\": function(date) {\n   var year = date.tm_year + 1900;\n   return leadingNulls(year / 100 | 0, 2);\n  },\n  \"%d\": function(date) {\n   return leadingNulls(date.tm_mday, 2);\n  },\n  \"%e\": function(date) {\n   return leadingSomething(date.tm_mday, 2, \" \");\n  },\n  \"%g\": function(date) {\n   return getWeekBasedYear(date).toString().substring(2);\n  },\n  \"%G\": function(date) {\n   return getWeekBasedYear(date);\n  },\n  \"%H\": function(date) {\n   return leadingNulls(date.tm_hour, 2);\n  },\n  \"%I\": function(date) {\n   var twelveHour = date.tm_hour;\n   if (twelveHour == 0) twelveHour = 12; else if (twelveHour > 12) twelveHour -= 12;\n   return leadingNulls(twelveHour, 2);\n  },\n  \"%j\": function(date) {\n   return leadingNulls(date.tm_mday + arraySum(isLeapYear(date.tm_year + 1900) ? MONTH_DAYS_LEAP : MONTH_DAYS_REGULAR, date.tm_mon - 1), 3);\n  },\n  \"%m\": function(date) {\n   return leadingNulls(date.tm_mon + 1, 2);\n  },\n  \"%M\": function(date) {\n   return leadingNulls(date.tm_min, 2);\n  },\n  \"%n\": function() {\n   return \"\\n\";\n  },\n  \"%p\": function(date) {\n   if (date.tm_hour >= 0 && date.tm_hour < 12) {\n    return \"AM\";\n   }\n   return \"PM\";\n  },\n  \"%S\": function(date) {\n   return leadingNulls(date.tm_sec, 2);\n  },\n  \"%t\": function() {\n   return \"\\t\";\n  },\n  \"%u\": function(date) {\n   return date.tm_wday || 7;\n  },\n  \"%U\": function(date) {\n   var days = date.tm_yday + 7 - date.tm_wday;\n   return leadingNulls(Math.floor(days / 7), 2);\n  },\n  \"%V\": function(date) {\n   var val = Math.floor((date.tm_yday + 7 - (date.tm_wday + 6) % 7) / 7);\n   if ((date.tm_wday + 371 - date.tm_yday - 2) % 7 <= 2) {\n    val++;\n   }\n   if (!val) {\n    val = 52;\n    var dec31 = (date.tm_wday + 7 - date.tm_yday - 1) % 7;\n    if (dec31 == 4 || dec31 == 5 && isLeapYear(date.tm_year % 400 - 1)) {\n     val++;\n    }\n   } else if (val == 53) {\n    var jan1 = (date.tm_wday + 371 - date.tm_yday) % 7;\n    if (jan1 != 4 && (jan1 != 3 || !isLeapYear(date.tm_year))) val = 1;\n   }\n   return leadingNulls(val, 2);\n  },\n  \"%w\": function(date) {\n   return date.tm_wday;\n  },\n  \"%W\": function(date) {\n   var days = date.tm_yday + 7 - (date.tm_wday + 6) % 7;\n   return leadingNulls(Math.floor(days / 7), 2);\n  },\n  \"%y\": function(date) {\n   return (date.tm_year + 1900).toString().substring(2);\n  },\n  \"%Y\": function(date) {\n   return date.tm_year + 1900;\n  },\n  \"%z\": function(date) {\n   var off = date.tm_gmtoff;\n   var ahead = off >= 0;\n   off = Math.abs(off) / 60;\n   off = off / 60 * 100 + off % 60;\n   return (ahead ? \"+\" : \"-\") + String(\"0000\" + off).slice(-4);\n  },\n  \"%Z\": function(date) {\n   return date.tm_zone;\n  },\n  \"%%\": function() {\n   return \"%\";\n  }\n };\n pattern = pattern.replace(/%%/g, \"\\0\\0\");\n for (var rule in EXPANSION_RULES_2) {\n  if (pattern.includes(rule)) {\n   pattern = pattern.replace(new RegExp(rule, \"g\"), EXPANSION_RULES_2[rule](date));\n  }\n }\n pattern = pattern.replace(/\\0\\0/g, \"%\");\n var bytes = intArrayFromString(pattern, false);\n if (bytes.length > maxsize) {\n  return 0;\n }\n writeArrayToMemory(bytes, s);\n return bytes.length - 1;\n}\n\nfunction _strftime_l(s, maxsize, format, tm, loc) {\n return _strftime(s, maxsize, format, tm);\n}\n\nvar wasmTableMirror = [];\n\nfunction getWasmTableEntry(funcPtr) {\n var func = wasmTableMirror[funcPtr];\n if (!func) {\n  if (funcPtr >= wasmTableMirror.length) wasmTableMirror.length = funcPtr + 1;\n  wasmTableMirror[funcPtr] = func = wasmTable.get(funcPtr);\n }\n return func;\n}\n\nembind_init_charCodes();\n\nBindingError = Module[\"BindingError\"] = extendError(Error, \"BindingError\");\n\nInternalError = Module[\"InternalError\"] = extendError(Error, \"InternalError\");\n\ninit_emval();\n\nvar wasmImports = {\n \"__cxa_begin_catch\": ___cxa_begin_catch,\n \"__cxa_end_catch\": ___cxa_end_catch,\n \"__cxa_find_matching_catch_2\": ___cxa_find_matching_catch_2,\n \"__cxa_find_matching_catch_3\": ___cxa_find_matching_catch_3,\n \"__cxa_find_matching_catch_4\": ___cxa_find_matching_catch_4,\n \"__cxa_find_matching_catch_5\": ___cxa_find_matching_catch_5,\n \"__cxa_rethrow\": ___cxa_rethrow,\n \"__cxa_throw\": ___cxa_throw,\n \"__cxa_uncaught_exceptions\": ___cxa_uncaught_exceptions,\n \"__dlsym\": ___dlsym,\n \"__resumeException\": ___resumeException,\n \"__syscall_fcntl64\": ___syscall_fcntl64,\n \"__syscall_fstat64\": ___syscall_fstat64,\n \"__syscall_getcwd\": ___syscall_getcwd,\n \"__syscall_getdents64\": ___syscall_getdents64,\n \"__syscall_ioctl\": ___syscall_ioctl,\n \"__syscall_lstat64\": ___syscall_lstat64,\n \"__syscall_mkdirat\": ___syscall_mkdirat,\n \"__syscall_newfstatat\": ___syscall_newfstatat,\n \"__syscall_openat\": ___syscall_openat,\n \"__syscall_readlinkat\": ___syscall_readlinkat,\n \"__syscall_rmdir\": ___syscall_rmdir,\n \"__syscall_stat64\": ___syscall_stat64,\n \"__syscall_unlinkat\": ___syscall_unlinkat,\n \"_embind_register_bigint\": __embind_register_bigint,\n \"_embind_register_bool\": __embind_register_bool,\n \"_embind_register_emval\": __embind_register_emval,\n \"_embind_register_float\": __embind_register_float,\n \"_embind_register_integer\": __embind_register_integer,\n \"_embind_register_memory_view\": __embind_register_memory_view,\n \"_embind_register_std_string\": __embind_register_std_string,\n \"_embind_register_std_wstring\": __embind_register_std_wstring,\n \"_embind_register_void\": __embind_register_void,\n \"_emscripten_get_now_is_monotonic\": __emscripten_get_now_is_monotonic,\n \"_emval_as\": __emval_as,\n \"_emval_call_method\": __emval_call_method,\n \"_emval_call_void_method\": __emval_call_void_method,\n \"_emval_decref\": __emval_decref,\n \"_emval_equals\": __emval_equals,\n \"_emval_get_global\": __emval_get_global,\n \"_emval_get_method_caller\": __emval_get_method_caller,\n \"_emval_get_property\": __emval_get_property,\n \"_emval_incref\": __emval_incref,\n \"_emval_new\": __emval_new,\n \"_emval_new_array\": __emval_new_array,\n \"_emval_new_array_from_memory_view\": __emval_new_array_from_memory_view,\n \"_emval_new_cstring\": __emval_new_cstring,\n \"_emval_new_object\": __emval_new_object,\n \"_emval_run_destructors\": __emval_run_destructors,\n \"_emval_set_property\": __emval_set_property,\n \"_emval_take_value\": __emval_take_value,\n \"_gmtime_js\": __gmtime_js,\n \"_localtime_js\": __localtime_js,\n \"_mktime_js\": __mktime_js,\n \"_mmap_js\": __mmap_js,\n \"_munmap_js\": __munmap_js,\n \"_tzset_js\": __tzset_js,\n \"abort\": _abort,\n \"dlopen\": _dlopen,\n \"emscripten_date_now\": _emscripten_date_now,\n \"emscripten_get_heap_max\": _emscripten_get_heap_max,\n \"emscripten_get_now\": _emscripten_get_now,\n \"emscripten_memcpy_big\": _emscripten_memcpy_big,\n \"emscripten_resize_heap\": _emscripten_resize_heap,\n \"environ_get\": _environ_get,\n \"environ_sizes_get\": _environ_sizes_get,\n \"fd_close\": _fd_close,\n \"fd_read\": _fd_read,\n \"fd_seek\": _fd_seek,\n \"fd_write\": _fd_write,\n \"invoke_di\": invoke_di,\n \"invoke_dii\": invoke_dii,\n \"invoke_diii\": invoke_diii,\n \"invoke_diiiii\": invoke_diiiii,\n \"invoke_fffffff\": invoke_fffffff,\n \"invoke_fi\": invoke_fi,\n \"invoke_fii\": invoke_fii,\n \"invoke_fiii\": invoke_fiii,\n \"invoke_fiiii\": invoke_fiiii,\n \"invoke_i\": invoke_i,\n \"invoke_ii\": invoke_ii,\n \"invoke_iid\": invoke_iid,\n \"invoke_iif\": invoke_iif,\n \"invoke_iii\": invoke_iii,\n \"invoke_iiif\": invoke_iiif,\n \"invoke_iiii\": invoke_iiii,\n \"invoke_iiiifi\": invoke_iiiifi,\n \"invoke_iiiii\": invoke_iiiii,\n \"invoke_iiiiid\": invoke_iiiiid,\n \"invoke_iiiiii\": invoke_iiiiii,\n \"invoke_iiiiiii\": invoke_iiiiiii,\n \"invoke_iiiiiiii\": invoke_iiiiiiii,\n \"invoke_iiiiiiiii\": invoke_iiiiiiiii,\n \"invoke_iiiiiiiiii\": invoke_iiiiiiiiii,\n \"invoke_iiiiiiiiiii\": invoke_iiiiiiiiiii,\n \"invoke_iiiiiiiiiiii\": invoke_iiiiiiiiiiii,\n \"invoke_iiiiiiiiiiiiiifi\": invoke_iiiiiiiiiiiiiifi,\n \"invoke_iiiiiiiiiiiiiiiiifii\": invoke_iiiiiiiiiiiiiiiiifii,\n \"invoke_iiiiiiiiiiiiiiiiiifi\": invoke_iiiiiiiiiiiiiiiiiifi,\n \"invoke_iiiiiiiiijii\": invoke_iiiiiiiiijii,\n \"invoke_iiiiiiiijjjfi\": invoke_iiiiiiiijjjfi,\n \"invoke_iiiiiijjjii\": invoke_iiiiiijjjii,\n \"invoke_iiiiij\": invoke_iiiiij,\n \"invoke_iiiiiji\": invoke_iiiiiji,\n \"invoke_iiiiijiiiii\": invoke_iiiiijiiiii,\n \"invoke_iiiiijji\": invoke_iiiiijji,\n \"invoke_iiiij\": invoke_iiiij,\n \"invoke_iiiiji\": invoke_iiiiji,\n \"invoke_iiiijjii\": invoke_iiiijjii,\n \"invoke_iiiijjj\": invoke_iiiijjj,\n \"invoke_iiij\": invoke_iiij,\n \"invoke_iiiji\": invoke_iiiji,\n \"invoke_iiijii\": invoke_iiijii,\n \"invoke_iiijiii\": invoke_iiijiii,\n \"invoke_iiijiiii\": invoke_iiijiiii,\n \"invoke_iiijiiiiii\": invoke_iiijiiiiii,\n \"invoke_iiijiiiiiiiiii\": invoke_iiijiiiiiiiiii,\n \"invoke_iiijjj\": invoke_iiijjj,\n \"invoke_iij\": invoke_iij,\n \"invoke_iiji\": invoke_iiji,\n \"invoke_iijiiii\": invoke_iijiiii,\n \"invoke_iijjji\": invoke_iijjji,\n \"invoke_iijjjii\": invoke_iijjjii,\n \"invoke_ij\": invoke_ij,\n \"invoke_ijii\": invoke_ijii,\n \"invoke_ijijji\": invoke_ijijji,\n \"invoke_j\": invoke_j,\n \"invoke_jfi\": invoke_jfi,\n \"invoke_ji\": invoke_ji,\n \"invoke_jii\": invoke_jii,\n \"invoke_jiii\": invoke_jiii,\n \"invoke_jiij\": invoke_jiij,\n \"invoke_jjj\": invoke_jjj,\n \"invoke_v\": invoke_v,\n \"invoke_vfiii\": invoke_vfiii,\n \"invoke_vi\": invoke_vi,\n \"invoke_vidi\": invoke_vidi,\n \"invoke_vif\": invoke_vif,\n \"invoke_viffiii\": invoke_viffiii,\n \"invoke_vii\": invoke_vii,\n \"invoke_viid\": invoke_viid,\n \"invoke_viif\": invoke_viif,\n \"invoke_viiff\": invoke_viiff,\n \"invoke_viifi\": invoke_viifi,\n \"invoke_viifiifijjjii\": invoke_viifiifijjjii,\n \"invoke_viii\": invoke_viii,\n \"invoke_viiid\": invoke_viiid,\n \"invoke_viiif\": invoke_viiif,\n \"invoke_viiifii\": invoke_viiifii,\n \"invoke_viiii\": invoke_viiii,\n \"invoke_viiiiff\": invoke_viiiiff,\n \"invoke_viiiii\": invoke_viiiii,\n \"invoke_viiiiidiidi\": invoke_viiiiidiidi,\n \"invoke_viiiiiff\": invoke_viiiiiff,\n \"invoke_viiiiifiiiiii\": invoke_viiiiifiiiiii,\n \"invoke_viiiiii\": invoke_viiiiii,\n \"invoke_viiiiiiffifiiiii\": invoke_viiiiiiffifiiiii,\n \"invoke_viiiiiiffiifiiiii\": invoke_viiiiiiffiifiiiii,\n \"invoke_viiiiiiffiiiiii\": invoke_viiiiiiffiiiiii,\n \"invoke_viiiiiii\": invoke_viiiiiii,\n \"invoke_viiiiiiii\": invoke_viiiiiiii,\n \"invoke_viiiiiiiii\": invoke_viiiiiiiii,\n \"invoke_viiiiiiiiidi\": invoke_viiiiiiiiidi,\n \"invoke_viiiiiiiiifi\": invoke_viiiiiiiiifi,\n \"invoke_viiiiiiiiifiii\": invoke_viiiiiiiiifiii,\n \"invoke_viiiiiiiiii\": invoke_viiiiiiiiii,\n \"invoke_viiiiiiiiiii\": invoke_viiiiiiiiiii,\n \"invoke_viiiiiiiiiiii\": invoke_viiiiiiiiiiii,\n \"invoke_viiiiiiiiiiiii\": invoke_viiiiiiiiiiiii,\n \"invoke_viiiiiiiiiiiiii\": invoke_viiiiiiiiiiiiii,\n \"invoke_viiiiiiiiiiiiiii\": invoke_viiiiiiiiiiiiiii,\n \"invoke_viiiiiiiiiiiiiiii\": invoke_viiiiiiiiiiiiiiii,\n \"invoke_viiiiiiiiiiiiiiiiii\": invoke_viiiiiiiiiiiiiiiiii,\n \"invoke_viiiiiiiiiiiiiiiiiii\": invoke_viiiiiiiiiiiiiiiiiii,\n \"invoke_viiiiiiiiiiiiiiiiiiii\": invoke_viiiiiiiiiiiiiiiiiiii,\n \"invoke_viiiiiiiijj\": invoke_viiiiiiiijj,\n \"invoke_viiiiiiijiiiiii\": invoke_viiiiiiijiiiiii,\n \"invoke_viiiiiiijjj\": invoke_viiiiiiijjj,\n \"invoke_viiiiiijij\": invoke_viiiiiijij,\n \"invoke_viiiiiijjiiiii\": invoke_viiiiiijjiiiii,\n \"invoke_viiiiij\": invoke_viiiiij,\n \"invoke_viiiiijiiiiii\": invoke_viiiiijiiiiii,\n \"invoke_viiiiijiiiiiiiiiiiiiiiiiii\": invoke_viiiiijiiiiiiiiiiiiiiiiiii,\n \"invoke_viiiiijij\": invoke_viiiiijij,\n \"invoke_viiiiijjiiiii\": invoke_viiiiijjiiiii,\n \"invoke_viiiiijjji\": invoke_viiiiijjji,\n \"invoke_viiiij\": invoke_viiiij,\n \"invoke_viiiiji\": invoke_viiiiji,\n \"invoke_viiiijii\": invoke_viiiijii,\n \"invoke_viiiijjj\": invoke_viiiijjj,\n \"invoke_viiij\": invoke_viiij,\n \"invoke_viiiji\": invoke_viiiji,\n \"invoke_viiijii\": invoke_viiijii,\n \"invoke_viiijiiii\": invoke_viiijiiii,\n \"invoke_viiijiiiiii\": invoke_viiijiiiiii,\n \"invoke_viiijiiiiiii\": invoke_viiijiiiiiii,\n \"invoke_viiijiiiiiiiii\": invoke_viiijiiiiiiiii,\n \"invoke_viiijjiii\": invoke_viiijjiii,\n \"invoke_viiijjjfii\": invoke_viiijjjfii,\n \"invoke_viiijjjii\": invoke_viiijjjii,\n \"invoke_viij\": invoke_viij,\n \"invoke_viiji\": invoke_viiji,\n \"invoke_viijiii\": invoke_viijiii,\n \"invoke_viijiiiiiiiii\": invoke_viijiiiiiiiii,\n \"invoke_viijj\": invoke_viijj,\n \"invoke_viijji\": invoke_viijji,\n \"invoke_viijjiii\": invoke_viijjiii,\n \"invoke_viijjiiiii\": invoke_viijjiiiii,\n \"invoke_viijjjfiifiii\": invoke_viijjjfiifiii,\n \"invoke_viijjjiiiiii\": invoke_viijjjiiiiii,\n \"invoke_vij\": invoke_vij,\n \"invoke_viji\": invoke_viji,\n \"invoke_vijiii\": invoke_vijiii,\n \"invoke_vijiiiiiiii\": invoke_vijiiiiiiii,\n \"invoke_vijiiiiiiijjii\": invoke_vijiiiiiiijjii,\n \"invoke_vijj\": invoke_vijj,\n \"invoke_vijjfffiii\": invoke_vijjfffiii,\n \"invoke_vijjii\": invoke_vijjii,\n \"invoke_vijjiiiiii\": invoke_vijjiiiiii,\n \"invoke_vijjjiiji\": invoke_vijjjiiji,\n \"invoke_vijjjjiij\": invoke_vijjjjiij,\n \"invoke_vijjjjijjiii\": invoke_vijjjjijjiii,\n \"invoke_vijjjjjjifiiiii\": invoke_vijjjjjjifiiiii,\n \"invoke_vijjjjjjjjjjjjji\": invoke_vijjjjjjjjjjjjji,\n \"invoke_vj\": invoke_vj,\n \"invoke_vjiii\": invoke_vjiii,\n \"invoke_vjjfiii\": invoke_vjjfiii,\n \"invoke_vjjjjfiii\": invoke_vjjjjfiii,\n \"invoke_vjjjjjiiii\": invoke_vjjjjjiiii,\n \"invoke_vjjjjjjfffifiiiii\": invoke_vjjjjjjfffifiiiii,\n \"invoke_vjjjjjjfffifiiiiiii\": invoke_vjjjjjjfffifiiiiiii,\n \"invoke_vjjjjjjffiifiiiiii\": invoke_vjjjjjjffiifiiiiii,\n \"invoke_vjjjjjjjjfffiifiiiii\": invoke_vjjjjjjjjfffiifiiiii,\n \"invoke_vjjjjjjjjfffiifiiiiii\": invoke_vjjjjjjjjfffiifiiiiii,\n \"llvm_eh_typeid_for\": _llvm_eh_typeid_for,\n \"strftime\": _strftime,\n \"strftime_l\": _strftime_l\n};\n\nvar asm = createWasm();\n\nvar ___wasm_call_ctors = function() {\n return (___wasm_call_ctors = Module[\"asm\"][\"__wasm_call_ctors\"]).apply(null, arguments);\n};\n\nvar _OrtInit = Module[\"_OrtInit\"] = function() {\n return (_OrtInit = Module[\"_OrtInit\"] = Module[\"asm\"][\"OrtInit\"]).apply(null, arguments);\n};\n\nvar _OrtCreateSessionOptions = Module[\"_OrtCreateSessionOptions\"] = function() {\n return (_OrtCreateSessionOptions = Module[\"_OrtCreateSessionOptions\"] = Module[\"asm\"][\"OrtCreateSessionOptions\"]).apply(null, arguments);\n};\n\nvar _OrtAppendExecutionProvider = Module[\"_OrtAppendExecutionProvider\"] = function() {\n return (_OrtAppendExecutionProvider = Module[\"_OrtAppendExecutionProvider\"] = Module[\"asm\"][\"OrtAppendExecutionProvider\"]).apply(null, arguments);\n};\n\nvar _OrtAddSessionConfigEntry = Module[\"_OrtAddSessionConfigEntry\"] = function() {\n return (_OrtAddSessionConfigEntry = Module[\"_OrtAddSessionConfigEntry\"] = Module[\"asm\"][\"OrtAddSessionConfigEntry\"]).apply(null, arguments);\n};\n\nvar _OrtReleaseSessionOptions = Module[\"_OrtReleaseSessionOptions\"] = function() {\n return (_OrtReleaseSessionOptions = Module[\"_OrtReleaseSessionOptions\"] = Module[\"asm\"][\"OrtReleaseSessionOptions\"]).apply(null, arguments);\n};\n\nvar _OrtCreateSession = Module[\"_OrtCreateSession\"] = function() {\n return (_OrtCreateSession = Module[\"_OrtCreateSession\"] = Module[\"asm\"][\"OrtCreateSession\"]).apply(null, arguments);\n};\n\nvar _OrtReleaseSession = Module[\"_OrtReleaseSession\"] = function() {\n return (_OrtReleaseSession = Module[\"_OrtReleaseSession\"] = Module[\"asm\"][\"OrtReleaseSession\"]).apply(null, arguments);\n};\n\nvar _OrtGetInputCount = Module[\"_OrtGetInputCount\"] = function() {\n return (_OrtGetInputCount = Module[\"_OrtGetInputCount\"] = Module[\"asm\"][\"OrtGetInputCount\"]).apply(null, arguments);\n};\n\nvar _OrtGetOutputCount = Module[\"_OrtGetOutputCount\"] = function() {\n return (_OrtGetOutputCount = Module[\"_OrtGetOutputCount\"] = Module[\"asm\"][\"OrtGetOutputCount\"]).apply(null, arguments);\n};\n\nvar _OrtGetInputName = Module[\"_OrtGetInputName\"] = function() {\n return (_OrtGetInputName = Module[\"_OrtGetInputName\"] = Module[\"asm\"][\"OrtGetInputName\"]).apply(null, arguments);\n};\n\nvar _OrtGetOutputName = Module[\"_OrtGetOutputName\"] = function() {\n return (_OrtGetOutputName = Module[\"_OrtGetOutputName\"] = Module[\"asm\"][\"OrtGetOutputName\"]).apply(null, arguments);\n};\n\nvar _OrtFree = Module[\"_OrtFree\"] = function() {\n return (_OrtFree = Module[\"_OrtFree\"] = Module[\"asm\"][\"OrtFree\"]).apply(null, arguments);\n};\n\nvar _OrtCreateTensor = Module[\"_OrtCreateTensor\"] = function() {\n return (_OrtCreateTensor = Module[\"_OrtCreateTensor\"] = Module[\"asm\"][\"OrtCreateTensor\"]).apply(null, arguments);\n};\n\nvar _OrtGetTensorData = Module[\"_OrtGetTensorData\"] = function() {\n return (_OrtGetTensorData = Module[\"_OrtGetTensorData\"] = Module[\"asm\"][\"OrtGetTensorData\"]).apply(null, arguments);\n};\n\nvar _OrtReleaseTensor = Module[\"_OrtReleaseTensor\"] = function() {\n return (_OrtReleaseTensor = Module[\"_OrtReleaseTensor\"] = Module[\"asm\"][\"OrtReleaseTensor\"]).apply(null, arguments);\n};\n\nvar _OrtCreateRunOptions = Module[\"_OrtCreateRunOptions\"] = function() {\n return (_OrtCreateRunOptions = Module[\"_OrtCreateRunOptions\"] = Module[\"asm\"][\"OrtCreateRunOptions\"]).apply(null, arguments);\n};\n\nvar _OrtAddRunConfigEntry = Module[\"_OrtAddRunConfigEntry\"] = function() {\n return (_OrtAddRunConfigEntry = Module[\"_OrtAddRunConfigEntry\"] = Module[\"asm\"][\"OrtAddRunConfigEntry\"]).apply(null, arguments);\n};\n\nvar _OrtReleaseRunOptions = Module[\"_OrtReleaseRunOptions\"] = function() {\n return (_OrtReleaseRunOptions = Module[\"_OrtReleaseRunOptions\"] = Module[\"asm\"][\"OrtReleaseRunOptions\"]).apply(null, arguments);\n};\n\nvar _OrtRun = Module[\"_OrtRun\"] = function() {\n return (_OrtRun = Module[\"_OrtRun\"] = Module[\"asm\"][\"OrtRun\"]).apply(null, arguments);\n};\n\nvar _OrtEndProfiling = Module[\"_OrtEndProfiling\"] = function() {\n return (_OrtEndProfiling = Module[\"_OrtEndProfiling\"] = Module[\"asm\"][\"OrtEndProfiling\"]).apply(null, arguments);\n};\n\nvar ___cxa_free_exception = function() {\n return (___cxa_free_exception = Module[\"asm\"][\"__cxa_free_exception\"]).apply(null, arguments);\n};\n\nvar ___errno_location = function() {\n return (___errno_location = Module[\"asm\"][\"__errno_location\"]).apply(null, arguments);\n};\n\nvar _malloc = Module[\"_malloc\"] = function() {\n return (_malloc = Module[\"_malloc\"] = Module[\"asm\"][\"malloc\"]).apply(null, arguments);\n};\n\nvar _free = Module[\"_free\"] = function() {\n return (_free = Module[\"_free\"] = Module[\"asm\"][\"free\"]).apply(null, arguments);\n};\n\nvar ___getTypeName = function() {\n return (___getTypeName = Module[\"asm\"][\"__getTypeName\"]).apply(null, arguments);\n};\n\nvar __embind_initialize_bindings = Module[\"__embind_initialize_bindings\"] = function() {\n return (__embind_initialize_bindings = Module[\"__embind_initialize_bindings\"] = Module[\"asm\"][\"_embind_initialize_bindings\"]).apply(null, arguments);\n};\n\nvar _setThrew = function() {\n return (_setThrew = Module[\"asm\"][\"setThrew\"]).apply(null, arguments);\n};\n\nvar setTempRet0 = function() {\n return (setTempRet0 = Module[\"asm\"][\"setTempRet0\"]).apply(null, arguments);\n};\n\nvar getTempRet0 = function() {\n return (getTempRet0 = Module[\"asm\"][\"getTempRet0\"]).apply(null, arguments);\n};\n\nvar stackSave = function() {\n return (stackSave = Module[\"asm\"][\"stackSave\"]).apply(null, arguments);\n};\n\nvar stackRestore = function() {\n return (stackRestore = Module[\"asm\"][\"stackRestore\"]).apply(null, arguments);\n};\n\nvar stackAlloc = function() {\n return (stackAlloc = Module[\"asm\"][\"stackAlloc\"]).apply(null, arguments);\n};\n\nvar ___cxa_decrement_exception_refcount = function() {\n return (___cxa_decrement_exception_refcount = Module[\"asm\"][\"__cxa_decrement_exception_refcount\"]).apply(null, arguments);\n};\n\nvar ___cxa_increment_exception_refcount = function() {\n return (___cxa_increment_exception_refcount = Module[\"asm\"][\"__cxa_increment_exception_refcount\"]).apply(null, arguments);\n};\n\nvar ___cxa_can_catch = function() {\n return (___cxa_can_catch = Module[\"asm\"][\"__cxa_can_catch\"]).apply(null, arguments);\n};\n\nvar ___cxa_is_pointer_type = function() {\n return (___cxa_is_pointer_type = Module[\"asm\"][\"__cxa_is_pointer_type\"]).apply(null, arguments);\n};\n\nfunction invoke_ii(index, a1) {\n var sp = stackSave();\n try {\n  return getWasmTableEntry(index)(a1);\n } catch (e) {\n  stackRestore(sp);\n  if (e !== e + 0) throw e;\n  _setThrew(1, 0);\n }\n}\n\nfunction invoke_vi(index, a1) {\n var sp = stackSave();\n try {\n  getWasmTableEntry(index)(a1);\n } catch (e) {\n  stackRestore(sp);\n  if (e !== e + 0) throw e;\n  _setThrew(1, 0);\n }\n}\n\nfunction invoke_vii(index, a1, a2) {\n var sp = stackSave();\n try {\n  getWasmTableEntry(index)(a1, a2);\n } catch (e) {\n  stackRestore(sp);\n  if (e !== e + 0) throw e;\n  _setThrew(1, 0);\n }\n}\n\nfunction invoke_iii(index, a1, a2) {\n var sp = stackSave();\n try {\n  return getWasmTableEntry(index)(a1, a2);\n } catch (e) {\n  stackRestore(sp);\n  if (e !== e + 0) throw e;\n  _setThrew(1, 0);\n }\n}\n\nfunction invoke_iiii(index, a1, a2, a3) {\n var sp = stackSave();\n try {\n  return getWasmTableEntry(index)(a1, a2, a3);\n } catch (e) {\n  stackRestore(sp);\n  if (e !== e + 0) throw e;\n  _setThrew(1, 0);\n }\n}\n\nfunction invoke_iiiiiii(index, a1, a2, a3, a4, a5, a6) {\n var sp = stackSave();\n try {\n  return getWasmTableEntry(index)(a1, a2, a3, a4, a5, a6);\n } catch (e) {\n  stackRestore(sp);\n  if (e !== e + 0) throw e;\n  _setThrew(1, 0);\n }\n}\n\nfunction invoke_v(index) {\n var sp = stackSave();\n try {\n  getWasmTableEntry(index)();\n } catch (e) {\n  stackRestore(sp);\n  if (e !== e + 0) throw e;\n  _setThrew(1, 0);\n }\n}\n\nfunction invoke_iiiiii(index, a1, a2, a3, a4, a5) {\n var sp = stackSave();\n try {\n  return getWasmTableEntry(index)(a1, a2, a3, a4, a5);\n } catch (e) {\n  stackRestore(sp);\n  if (e !== e + 0) throw e;\n  _setThrew(1, 0);\n }\n}\n\nfunction invoke_iiiii(index, a1, a2, a3, a4) {\n var sp = stackSave();\n try {\n  return getWasmTableEntry(index)(a1, a2, a3, a4);\n } catch (e) {\n  stackRestore(sp);\n  if (e !== e + 0) throw e;\n  _setThrew(1, 0);\n }\n}\n\nfunction invoke_viii(index, a1, a2, a3) {\n var sp = stackSave();\n try {\n  getWasmTableEntry(index)(a1, a2, a3);\n } catch (e) {\n  stackRestore(sp);\n  if (e !== e + 0) throw e;\n  _setThrew(1, 0);\n }\n}\n\nfunction invoke_viiii(index, a1, a2, a3, a4) {\n var sp = stackSave();\n try {\n  getWasmTableEntry(index)(a1, a2, a3, a4);\n } catch (e) {\n  stackRestore(sp);\n  if (e !== e + 0) throw e;\n  _setThrew(1, 0);\n }\n}\n\nfunction invoke_iij(index, a1, a2) {\n var sp = stackSave();\n try {\n  return getWasmTableEntry(index)(a1, a2);\n } catch (e) {\n  stackRestore(sp);\n  if (e !== e + 0) throw e;\n  _setThrew(1, 0);\n }\n}\n\nfunction invoke_i(index) {\n var sp = stackSave();\n try {\n  return getWasmTableEntry(index)();\n } catch (e) {\n  stackRestore(sp);\n  if (e !== e + 0) throw e;\n  _setThrew(1, 0);\n }\n}\n\nfunction invoke_vij(index, a1, a2) {\n var sp = stackSave();\n try {\n  getWasmTableEntry(index)(a1, a2);\n } catch (e) {\n  stackRestore(sp);\n  if (e !== e + 0) throw e;\n  _setThrew(1, 0);\n }\n}\n\nfunction invoke_viiiii(index, a1, a2, a3, a4, a5) {\n var sp = stackSave();\n try {\n  getWasmTableEntry(index)(a1, a2, a3, a4, a5);\n } catch (e) {\n  stackRestore(sp);\n  if (e !== e + 0) throw e;\n  _setThrew(1, 0);\n }\n}\n\nfunction invoke_iiiiiiii(index, a1, a2, a3, a4, a5, a6, a7) {\n var sp = stackSave();\n try {\n  return getWasmTableEntry(index)(a1, a2, a3, a4, a5, a6, a7);\n } catch (e) {\n  stackRestore(sp);\n  if (e !== e + 0) throw e;\n  _setThrew(1, 0);\n }\n}\n\nfunction invoke_fi(index, a1) {\n var sp = stackSave();\n try {\n  return getWasmTableEntry(index)(a1);\n } catch (e) {\n  stackRestore(sp);\n  if (e !== e + 0) throw e;\n  _setThrew(1, 0);\n }\n}\n\nfunction invoke_ji(index, a1) {\n var sp = stackSave();\n try {\n  return getWasmTableEntry(index)(a1);\n } catch (e) {\n  stackRestore(sp);\n  if (e !== e + 0) throw e;\n  _setThrew(1, 0);\n  return 0n;\n }\n}\n\nfunction invoke_di(index, a1) {\n var sp = stackSave();\n try {\n  return getWasmTableEntry(index)(a1);\n } catch (e) {\n  stackRestore(sp);\n  if (e !== e + 0) throw e;\n  _setThrew(1, 0);\n }\n}\n\nfunction invoke_iiiiiiiii(index, a1, a2, a3, a4, a5, a6, a7, a8) {\n var sp = stackSave();\n try {\n  return getWasmTableEntry(index)(a1, a2, a3, a4, a5, a6, a7, a8);\n } catch (e) {\n  stackRestore(sp);\n  if (e !== e + 0) throw e;\n  _setThrew(1, 0);\n }\n}\n\nfunction invoke_viiiiii(index, a1, a2, a3, a4, a5, a6) {\n var sp = stackSave();\n try {\n  getWasmTableEntry(index)(a1, a2, a3, a4, a5, a6);\n } catch (e) {\n  stackRestore(sp);\n  if (e !== e + 0) throw e;\n  _setThrew(1, 0);\n }\n}\n\nfunction invoke_vijj(index, a1, a2, a3) {\n var sp = stackSave();\n try {\n  getWasmTableEntry(index)(a1, a2, a3);\n } catch (e) {\n  stackRestore(sp);\n  if (e !== e + 0) throw e;\n  _setThrew(1, 0);\n }\n}\n\nfunction invoke_viiijii(index, a1, a2, a3, a4, a5, a6) {\n var sp = stackSave();\n try {\n  getWasmTableEntry(index)(a1, a2, a3, a4, a5, a6);\n } catch (e) {\n  stackRestore(sp);\n  if (e !== e + 0) throw e;\n  _setThrew(1, 0);\n }\n}\n\nfunction invoke_viiiiiii(index, a1, a2, a3, a4, a5, a6, a7) {\n var sp = stackSave();\n try {\n  getWasmTableEntry(index)(a1, a2, a3, a4, a5, a6, a7);\n } catch (e) {\n  stackRestore(sp);\n  if (e !== e + 0) throw e;\n  _setThrew(1, 0);\n }\n}\n\nfunction invoke_viijj(index, a1, a2, a3, a4) {\n var sp = stackSave();\n try {\n  getWasmTableEntry(index)(a1, a2, a3, a4);\n } catch (e) {\n  stackRestore(sp);\n  if (e !== e + 0) throw e;\n  _setThrew(1, 0);\n }\n}\n\nfunction invoke_iiiiiiiiii(index, a1, a2, a3, a4, a5, a6, a7, a8, a9) {\n var sp = stackSave();\n try {\n  return getWasmTableEntry(index)(a1, a2, a3, a4, a5, a6, a7, a8, a9);\n } catch (e) {\n  stackRestore(sp);\n  if (e !== e + 0) throw e;\n  _setThrew(1, 0);\n }\n}\n\nfunction invoke_viiiiiiii(index, a1, a2, a3, a4, a5, a6, a7, a8) {\n var sp = stackSave();\n try {\n  getWasmTableEntry(index)(a1, a2, a3, a4, a5, a6, a7, a8);\n } catch (e) {\n  stackRestore(sp);\n  if (e !== e + 0) throw e;\n  _setThrew(1, 0);\n }\n}\n\nfunction invoke_iiiiijiiiii(index, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10) {\n var sp = stackSave();\n try {\n  return getWasmTableEntry(index)(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10);\n } catch (e) {\n  stackRestore(sp);\n  if (e !== e + 0) throw e;\n  _setThrew(1, 0);\n }\n}\n\nfunction invoke_viij(index, a1, a2, a3) {\n var sp = stackSave();\n try {\n  getWasmTableEntry(index)(a1, a2, a3);\n } catch (e) {\n  stackRestore(sp);\n  if (e !== e + 0) throw e;\n  _setThrew(1, 0);\n }\n}\n\nfunction invoke_iiiiij(index, a1, a2, a3, a4, a5) {\n var sp = stackSave();\n try {\n  return getWasmTableEntry(index)(a1, a2, a3, a4, a5);\n } catch (e) {\n  stackRestore(sp);\n  if (e !== e + 0) throw e;\n  _setThrew(1, 0);\n }\n}\n\nfunction invoke_viijiii(index, a1, a2, a3, a4, a5, a6) {\n var sp = stackSave();\n try {\n  getWasmTableEntry(index)(a1, a2, a3, a4, a5, a6);\n } catch (e) {\n  stackRestore(sp);\n  if (e !== e + 0) throw e;\n  _setThrew(1, 0);\n }\n}\n\nfunction invoke_viiiij(index, a1, a2, a3, a4, a5) {\n var sp = stackSave();\n try {\n  getWasmTableEntry(index)(a1, a2, a3, a4, a5);\n } catch (e) {\n  stackRestore(sp);\n  if (e !== e + 0) throw e;\n  _setThrew(1, 0);\n }\n}\n\nfunction invoke_viiiiij(index, a1, a2, a3, a4, a5, a6) {\n var sp = stackSave();\n try {\n  getWasmTableEntry(index)(a1, a2, a3, a4, a5, a6);\n } catch (e) {\n  stackRestore(sp);\n  if (e !== e + 0) throw e;\n  _setThrew(1, 0);\n }\n}\n\nfunction invoke_viiiiiiiii(index, a1, a2, a3, a4, a5, a6, a7, a8, a9) {\n var sp = stackSave();\n try {\n  getWasmTableEntry(index)(a1, a2, a3, a4, a5, a6, a7, a8, a9);\n } catch (e) {\n  stackRestore(sp);\n  if (e !== e + 0) throw e;\n  _setThrew(1, 0);\n }\n}\n\nfunction invoke_jii(index, a1, a2) {\n var sp = stackSave();\n try {\n  return getWasmTableEntry(index)(a1, a2);\n } catch (e) {\n  stackRestore(sp);\n  if (e !== e + 0) throw e;\n  _setThrew(1, 0);\n  return 0n;\n }\n}\n\nfunction invoke_viid(index, a1, a2, a3) {\n var sp = stackSave();\n try {\n  getWasmTableEntry(index)(a1, a2, a3);\n } catch (e) {\n  stackRestore(sp);\n  if (e !== e + 0) throw e;\n  _setThrew(1, 0);\n }\n}\n\nfunction invoke_iiiiiiiiiii(index, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10) {\n var sp = stackSave();\n try {\n  return getWasmTableEntry(index)(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10);\n } catch (e) {\n  stackRestore(sp);\n  if (e !== e + 0) throw e;\n  _setThrew(1, 0);\n }\n}\n\nfunction invoke_viiiiiiiiiiiii(index, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13) {\n var sp = stackSave();\n try {\n  getWasmTableEntry(index)(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13);\n } catch (e) {\n  stackRestore(sp);\n  if (e !== e + 0) throw e;\n  _setThrew(1, 0);\n }\n}\n\nfunction invoke_viijjjiiiiii(index, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11) {\n var sp = stackSave();\n try {\n  getWasmTableEntry(index)(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11);\n } catch (e) {\n  stackRestore(sp);\n  if (e !== e + 0) throw e;\n  _setThrew(1, 0);\n }\n}\n\nfunction invoke_viiijiiiiiii(index, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11) {\n var sp = stackSave();\n try {\n  getWasmTableEntry(index)(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11);\n } catch (e) {\n  stackRestore(sp);\n  if (e !== e + 0) throw e;\n  _setThrew(1, 0);\n }\n}\n\nfunction invoke_viiji(index, a1, a2, a3, a4) {\n var sp = stackSave();\n try {\n  getWasmTableEntry(index)(a1, a2, a3, a4);\n } catch (e) {\n  stackRestore(sp);\n  if (e !== e + 0) throw e;\n  _setThrew(1, 0);\n }\n}\n\nfunction invoke_viffiii(index, a1, a2, a3, a4, a5, a6) {\n var sp = stackSave();\n try {\n  getWasmTableEntry(index)(a1, a2, a3, a4, a5, a6);\n } catch (e) {\n  stackRestore(sp);\n  if (e !== e + 0) throw e;\n  _setThrew(1, 0);\n }\n}\n\nfunction invoke_viiijjjii(index, a1, a2, a3, a4, a5, a6, a7, a8) {\n var sp = stackSave();\n try {\n  getWasmTableEntry(index)(a1, a2, a3, a4, a5, a6, a7, a8);\n } catch (e) {\n  stackRestore(sp);\n  if (e !== e + 0) throw e;\n  _setThrew(1, 0);\n }\n}\n\nfunction invoke_iiij(index, a1, a2, a3) {\n var sp = stackSave();\n try {\n  return getWasmTableEntry(index)(a1, a2, a3);\n } catch (e) {\n  stackRestore(sp);\n  if (e !== e + 0) throw e;\n  _setThrew(1, 0);\n }\n}\n\nfunction invoke_viijjjfiifiii(index, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12) {\n var sp = stackSave();\n try {\n  getWasmTableEntry(index)(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12);\n } catch (e) {\n  stackRestore(sp);\n  if (e !== e + 0) throw e;\n  _setThrew(1, 0);\n }\n}\n\nfunction invoke_vjjfiii(index, a1, a2, a3, a4, a5, a6) {\n var sp = stackSave();\n try {\n  getWasmTableEntry(index)(a1, a2, a3, a4, a5, a6);\n } catch (e) {\n  stackRestore(sp);\n  if (e !== e + 0) throw e;\n  _setThrew(1, 0);\n }\n}\n\nfunction invoke_viiiiidiidi(index, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10) {\n var sp = stackSave();\n try {\n  getWasmTableEntry(index)(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10);\n } catch (e) {\n  stackRestore(sp);\n  if (e !== e + 0) throw e;\n  _setThrew(1, 0);\n }\n}\n\nfunction invoke_jiii(index, a1, a2, a3) {\n var sp = stackSave();\n try {\n  return getWasmTableEntry(index)(a1, a2, a3);\n } catch (e) {\n  stackRestore(sp);\n  if (e !== e + 0) throw e;\n  _setThrew(1, 0);\n  return 0n;\n }\n}\n\nfunction invoke_viiid(index, a1, a2, a3, a4) {\n var sp = stackSave();\n try {\n  getWasmTableEntry(index)(a1, a2, a3, a4);\n } catch (e) {\n  stackRestore(sp);\n  if (e !== e + 0) throw e;\n  _setThrew(1, 0);\n }\n}\n\nfunction invoke_vijjjjjjjjjjjjji(index, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15) {\n var sp = stackSave();\n try {\n  getWasmTableEntry(index)(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15);\n } catch (e) {\n  stackRestore(sp);\n  if (e !== e + 0) throw e;\n  _setThrew(1, 0);\n }\n}\n\nfunction invoke_viiiji(index, a1, a2, a3, a4, a5) {\n var sp = stackSave();\n try {\n  getWasmTableEntry(index)(a1, a2, a3, a4, a5);\n } catch (e) {\n  stackRestore(sp);\n  if (e !== e + 0) throw e;\n  _setThrew(1, 0);\n }\n}\n\nfunction invoke_vijjjiiji(index, a1, a2, a3, a4, a5, a6, a7, a8) {\n var sp = stackSave();\n try {\n  getWasmTableEntry(index)(a1, a2, a3, a4, a5, a6, a7, a8);\n } catch (e) {\n  stackRestore(sp);\n  if (e !== e + 0) throw e;\n  _setThrew(1, 0);\n }\n}\n\nfunction invoke_iiiji(index, a1, a2, a3, a4) {\n var sp = stackSave();\n try {\n  return getWasmTableEntry(index)(a1, a2, a3, a4);\n } catch (e) {\n  stackRestore(sp);\n  if (e !== e + 0) throw e;\n  _setThrew(1, 0);\n }\n}\n\nfunction invoke_iiijiiiiiiiiii(index, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13) {\n var sp = stackSave();\n try {\n  return getWasmTableEntry(index)(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13);\n } catch (e) {\n  stackRestore(sp);\n  if (e !== e + 0) throw e;\n  _setThrew(1, 0);\n }\n}\n\nfunction invoke_vj(index, a1) {\n var sp = stackSave();\n try {\n  getWasmTableEntry(index)(a1);\n } catch (e) {\n  stackRestore(sp);\n  if (e !== e + 0) throw e;\n  _setThrew(1, 0);\n }\n}\n\nfunction invoke_jjj(index, a1, a2) {\n var sp = stackSave();\n try {\n  return getWasmTableEntry(index)(a1, a2);\n } catch (e) {\n  stackRestore(sp);\n  if (e !== e + 0) throw e;\n  _setThrew(1, 0);\n  return 0n;\n }\n}\n\nfunction invoke_iiijiiiiii(index, a1, a2, a3, a4, a5, a6, a7, a8, a9) {\n var sp = stackSave();\n try {\n  return getWasmTableEntry(index)(a1, a2, a3, a4, a5, a6, a7, a8, a9);\n } catch (e) {\n  stackRestore(sp);\n  if (e !== e + 0) throw e;\n  _setThrew(1, 0);\n }\n}\n\nfunction invoke_fiiii(index, a1, a2, a3, a4) {\n var sp = stackSave();\n try {\n  return getWasmTableEntry(index)(a1, a2, a3, a4);\n } catch (e) {\n  stackRestore(sp);\n  if (e !== e + 0) throw e;\n  _setThrew(1, 0);\n }\n}\n\nfunction invoke_viiiiiiiijj(index, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10) {\n var sp = stackSave();\n try {\n  getWasmTableEntry(index)(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10);\n } catch (e) {\n  stackRestore(sp);\n  if (e !== e + 0) throw e;\n  _setThrew(1, 0);\n }\n}\n\nfunction invoke_iiiiiiiiiiiiiifi(index, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15) {\n var sp = stackSave();\n try {\n  return getWasmTableEntry(index)(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15);\n } catch (e) {\n  stackRestore(sp);\n  if (e !== e + 0) throw e;\n  _setThrew(1, 0);\n }\n}\n\nfunction invoke_viiiiiiiiiii(index, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11) {\n var sp = stackSave();\n try {\n  getWasmTableEntry(index)(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11);\n } catch (e) {\n  stackRestore(sp);\n  if (e !== e + 0) throw e;\n  _setThrew(1, 0);\n }\n}\n\nfunction invoke_ij(index, a1) {\n var sp = stackSave();\n try {\n  return getWasmTableEntry(index)(a1);\n } catch (e) {\n  stackRestore(sp);\n  if (e !== e + 0) throw e;\n  _setThrew(1, 0);\n }\n}\n\nfunction invoke_viiiiiiiiifiii(index, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13) {\n var sp = stackSave();\n try {\n  getWasmTableEntry(index)(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13);\n } catch (e) {\n  stackRestore(sp);\n  if (e !== e + 0) throw e;\n  _setThrew(1, 0);\n }\n}\n\nfunction invoke_vfiii(index, a1, a2, a3, a4) {\n var sp = stackSave();\n try {\n  getWasmTableEntry(index)(a1, a2, a3, a4);\n } catch (e) {\n  stackRestore(sp);\n  if (e !== e + 0) throw e;\n  _setThrew(1, 0);\n }\n}\n\nfunction invoke_viiiiff(index, a1, a2, a3, a4, a5, a6) {\n var sp = stackSave();\n try {\n  getWasmTableEntry(index)(a1, a2, a3, a4, a5, a6);\n } catch (e) {\n  stackRestore(sp);\n  if (e !== e + 0) throw e;\n  _setThrew(1, 0);\n }\n}\n\nfunction invoke_viiff(index, a1, a2, a3, a4) {\n var sp = stackSave();\n try {\n  getWasmTableEntry(index)(a1, a2, a3, a4);\n } catch (e) {\n  stackRestore(sp);\n  if (e !== e + 0) throw e;\n  _setThrew(1, 0);\n }\n}\n\nfunction invoke_viiiiiff(index, a1, a2, a3, a4, a5, a6, a7) {\n var sp = stackSave();\n try {\n  getWasmTableEntry(index)(a1, a2, a3, a4, a5, a6, a7);\n } catch (e) {\n  stackRestore(sp);\n  if (e !== e + 0) throw e;\n  _setThrew(1, 0);\n }\n}\n\nfunction invoke_iiiiiiiiiiiiiiiiifii(index, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19) {\n var sp = stackSave();\n try {\n  return getWasmTableEntry(index)(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19);\n } catch (e) {\n  stackRestore(sp);\n  if (e !== e + 0) throw e;\n  _setThrew(1, 0);\n }\n}\n\nfunction invoke_vijjiiiiii(index, a1, a2, a3, a4, a5, a6, a7, a8, a9) {\n var sp = stackSave();\n try {\n  getWasmTableEntry(index)(a1, a2, a3, a4, a5, a6, a7, a8, a9);\n } catch (e) {\n  stackRestore(sp);\n  if (e !== e + 0) throw e;\n  _setThrew(1, 0);\n }\n}\n\nfunction invoke_iiiijjj(index, a1, a2, a3, a4, a5, a6) {\n var sp = stackSave();\n try {\n  return getWasmTableEntry(index)(a1, a2, a3, a4, a5, a6);\n } catch (e) {\n  stackRestore(sp);\n  if (e !== e + 0) throw e;\n  _setThrew(1, 0);\n }\n}\n\nfunction invoke_iiijjj(index, a1, a2, a3, a4, a5) {\n var sp = stackSave();\n try {\n  return getWasmTableEntry(index)(a1, a2, a3, a4, a5);\n } catch (e) {\n  stackRestore(sp);\n  if (e !== e + 0) throw e;\n  _setThrew(1, 0);\n }\n}\n\nfunction invoke_vjjjjjjffiifiiiiii(index, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17) {\n var sp = stackSave();\n try {\n  getWasmTableEntry(index)(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17);\n } catch (e) {\n  stackRestore(sp);\n  if (e !== e + 0) throw e;\n  _setThrew(1, 0);\n }\n}\n\nfunction invoke_viiiiiiffiifiiiii(index, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16) {\n var sp = stackSave();\n try {\n  getWasmTableEntry(index)(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16);\n } catch (e) {\n  stackRestore(sp);\n  if (e !== e + 0) throw e;\n  _setThrew(1, 0);\n }\n}\n\nfunction invoke_viiiiiiffifiiiii(index, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15) {\n var sp = stackSave();\n try {\n  getWasmTableEntry(index)(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15);\n } catch (e) {\n  stackRestore(sp);\n  if (e !== e + 0) throw e;\n  _setThrew(1, 0);\n }\n}\n\nfunction invoke_viiiiiiffiiiiii(index, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14) {\n var sp = stackSave();\n try {\n  getWasmTableEntry(index)(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14);\n } catch (e) {\n  stackRestore(sp);\n  if (e !== e + 0) throw e;\n  _setThrew(1, 0);\n }\n}\n\nfunction invoke_vjjjjjjjjfffiifiiiiii(index, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20) {\n var sp = stackSave();\n try {\n  getWasmTableEntry(index)(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20);\n } catch (e) {\n  stackRestore(sp);\n  if (e !== e + 0) throw e;\n  _setThrew(1, 0);\n }\n}\n\nfunction invoke_vjjjjjjfffifiiiiiii(index, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18) {\n var sp = stackSave();\n try {\n  getWasmTableEntry(index)(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18);\n } catch (e) {\n  stackRestore(sp);\n  if (e !== e + 0) throw e;\n  _setThrew(1, 0);\n }\n}\n\nfunction invoke_vjjjjjjfffifiiiii(index, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16) {\n var sp = stackSave();\n try {\n  getWasmTableEntry(index)(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16);\n } catch (e) {\n  stackRestore(sp);\n  if (e !== e + 0) throw e;\n  _setThrew(1, 0);\n }\n}\n\nfunction invoke_vjjjjjjjjfffiifiiiii(index, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19) {\n var sp = stackSave();\n try {\n  getWasmTableEntry(index)(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19);\n } catch (e) {\n  stackRestore(sp);\n  if (e !== e + 0) throw e;\n  _setThrew(1, 0);\n }\n}\n\nfunction invoke_vijjfffiii(index, a1, a2, a3, a4, a5, a6, a7, a8, a9) {\n var sp = stackSave();\n try {\n  getWasmTableEntry(index)(a1, a2, a3, a4, a5, a6, a7, a8, a9);\n } catch (e) {\n  stackRestore(sp);\n  if (e !== e + 0) throw e;\n  _setThrew(1, 0);\n }\n}\n\nfunction invoke_vijiiiiiiii(index, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10) {\n var sp = stackSave();\n try {\n  getWasmTableEntry(index)(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10);\n } catch (e) {\n  stackRestore(sp);\n  if (e !== e + 0) throw e;\n  _setThrew(1, 0);\n }\n}\n\nfunction invoke_viiiiiiiiiiii(index, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12) {\n var sp = stackSave();\n try {\n  getWasmTableEntry(index)(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12);\n } catch (e) {\n  stackRestore(sp);\n  if (e !== e + 0) throw e;\n  _setThrew(1, 0);\n }\n}\n\nfunction invoke_vijjjjjjifiiiii(index, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14) {\n var sp = stackSave();\n try {\n  getWasmTableEntry(index)(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14);\n } catch (e) {\n  stackRestore(sp);\n  if (e !== e + 0) throw e;\n  _setThrew(1, 0);\n }\n}\n\nfunction invoke_vjjjjjiiii(index, a1, a2, a3, a4, a5, a6, a7, a8, a9) {\n var sp = stackSave();\n try {\n  getWasmTableEntry(index)(a1, a2, a3, a4, a5, a6, a7, a8, a9);\n } catch (e) {\n  stackRestore(sp);\n  if (e !== e + 0) throw e;\n  _setThrew(1, 0);\n }\n}\n\nfunction invoke_vjjjjfiii(index, a1, a2, a3, a4, a5, a6, a7, a8) {\n var sp = stackSave();\n try {\n  getWasmTableEntry(index)(a1, a2, a3, a4, a5, a6, a7, a8);\n } catch (e) {\n  stackRestore(sp);\n  if (e !== e + 0) throw e;\n  _setThrew(1, 0);\n }\n}\n\nfunction invoke_fffffff(index, a1, a2, a3, a4, a5, a6) {\n var sp = stackSave();\n try {\n  return getWasmTableEntry(index)(a1, a2, a3, a4, a5, a6);\n } catch (e) {\n  stackRestore(sp);\n  if (e !== e + 0) throw e;\n  _setThrew(1, 0);\n }\n}\n\nfunction invoke_viifi(index, a1, a2, a3, a4) {\n var sp = stackSave();\n try {\n  getWasmTableEntry(index)(a1, a2, a3, a4);\n } catch (e) {\n  stackRestore(sp);\n  if (e !== e + 0) throw e;\n  _setThrew(1, 0);\n }\n}\n\nfunction invoke_jfi(index, a1, a2) {\n var sp = stackSave();\n try {\n  return getWasmTableEntry(index)(a1, a2);\n } catch (e) {\n  stackRestore(sp);\n  if (e !== e + 0) throw e;\n  _setThrew(1, 0);\n  return 0n;\n }\n}\n\nfunction invoke_iiiiiiiiiiii(index, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11) {\n var sp = stackSave();\n try {\n  return getWasmTableEntry(index)(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11);\n } catch (e) {\n  stackRestore(sp);\n  if (e !== e + 0) throw e;\n  _setThrew(1, 0);\n }\n}\n\nfunction invoke_iiiiiji(index, a1, a2, a3, a4, a5, a6) {\n var sp = stackSave();\n try {\n  return getWasmTableEntry(index)(a1, a2, a3, a4, a5, a6);\n } catch (e) {\n  stackRestore(sp);\n  if (e !== e + 0) throw e;\n  _setThrew(1, 0);\n }\n}\n\nfunction invoke_vijjii(index, a1, a2, a3, a4, a5) {\n var sp = stackSave();\n try {\n  getWasmTableEntry(index)(a1, a2, a3, a4, a5);\n } catch (e) {\n  stackRestore(sp);\n  if (e !== e + 0) throw e;\n  _setThrew(1, 0);\n }\n}\n\nfunction invoke_viiijiiiiii(index, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10) {\n var sp = stackSave();\n try {\n  getWasmTableEntry(index)(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10);\n } catch (e) {\n  stackRestore(sp);\n  if (e !== e + 0) throw e;\n  _setThrew(1, 0);\n }\n}\n\nfunction invoke_viiiiijjiiiii(index, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12) {\n var sp = stackSave();\n try {\n  getWasmTableEntry(index)(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12);\n } catch (e) {\n  stackRestore(sp);\n  if (e !== e + 0) throw e;\n  _setThrew(1, 0);\n }\n}\n\nfunction invoke_iiiiji(index, a1, a2, a3, a4, a5) {\n var sp = stackSave();\n try {\n  return getWasmTableEntry(index)(a1, a2, a3, a4, a5);\n } catch (e) {\n  stackRestore(sp);\n  if (e !== e + 0) throw e;\n  _setThrew(1, 0);\n }\n}\n\nfunction invoke_viiiiijiiiiii(index, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12) {\n var sp = stackSave();\n try {\n  getWasmTableEntry(index)(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12);\n } catch (e) {\n  stackRestore(sp);\n  if (e !== e + 0) throw e;\n  _setThrew(1, 0);\n }\n}\n\nfunction invoke_viiiijii(index, a1, a2, a3, a4, a5, a6, a7) {\n var sp = stackSave();\n try {\n  getWasmTableEntry(index)(a1, a2, a3, a4, a5, a6, a7);\n } catch (e) {\n  stackRestore(sp);\n  if (e !== e + 0) throw e;\n  _setThrew(1, 0);\n }\n}\n\nfunction invoke_viijjiii(index, a1, a2, a3, a4, a5, a6, a7) {\n var sp = stackSave();\n try {\n  getWasmTableEntry(index)(a1, a2, a3, a4, a5, a6, a7);\n } catch (e) {\n  stackRestore(sp);\n  if (e !== e + 0) throw e;\n  _setThrew(1, 0);\n }\n}\n\nfunction invoke_ijii(index, a1, a2, a3) {\n var sp = stackSave();\n try {\n  return getWasmTableEntry(index)(a1, a2, a3);\n } catch (e) {\n  stackRestore(sp);\n  if (e !== e + 0) throw e;\n  _setThrew(1, 0);\n }\n}\n\nfunction invoke_viiiiijjji(index, a1, a2, a3, a4, a5, a6, a7, a8, a9) {\n var sp = stackSave();\n try {\n  getWasmTableEntry(index)(a1, a2, a3, a4, a5, a6, a7, a8, a9);\n } catch (e) {\n  stackRestore(sp);\n  if (e !== e + 0) throw e;\n  _setThrew(1, 0);\n }\n}\n\nfunction invoke_vijjjjiij(index, a1, a2, a3, a4, a5, a6, a7, a8) {\n var sp = stackSave();\n try {\n  getWasmTableEntry(index)(a1, a2, a3, a4, a5, a6, a7, a8);\n } catch (e) {\n  stackRestore(sp);\n  if (e !== e + 0) throw e;\n  _setThrew(1, 0);\n }\n}\n\nfunction invoke_viiiiijij(index, a1, a2, a3, a4, a5, a6, a7, a8) {\n var sp = stackSave();\n try {\n  getWasmTableEntry(index)(a1, a2, a3, a4, a5, a6, a7, a8);\n } catch (e) {\n  stackRestore(sp);\n  if (e !== e + 0) throw e;\n  _setThrew(1, 0);\n }\n}\n\nfunction invoke_viiiiiijij(index, a1, a2, a3, a4, a5, a6, a7, a8, a9) {\n var sp = stackSave();\n try {\n  getWasmTableEntry(index)(a1, a2, a3, a4, a5, a6, a7, a8, a9);\n } catch (e) {\n  stackRestore(sp);\n  if (e !== e + 0) throw e;\n  _setThrew(1, 0);\n }\n}\n\nfunction invoke_vijiii(index, a1, a2, a3, a4, a5) {\n var sp = stackSave();\n try {\n  getWasmTableEntry(index)(a1, a2, a3, a4, a5);\n } catch (e) {\n  stackRestore(sp);\n  if (e !== e + 0) throw e;\n  _setThrew(1, 0);\n }\n}\n\nfunction invoke_viiifii(index, a1, a2, a3, a4, a5, a6) {\n var sp = stackSave();\n try {\n  getWasmTableEntry(index)(a1, a2, a3, a4, a5, a6);\n } catch (e) {\n  stackRestore(sp);\n  if (e !== e + 0) throw e;\n  _setThrew(1, 0);\n }\n}\n\nfunction invoke_viiiiiiiiifi(index, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11) {\n var sp = stackSave();\n try {\n  getWasmTableEntry(index)(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11);\n } catch (e) {\n  stackRestore(sp);\n  if (e !== e + 0) throw e;\n  _setThrew(1, 0);\n }\n}\n\nfunction invoke_viiijiiiiiiiii(index, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13) {\n var sp = stackSave();\n try {\n  getWasmTableEntry(index)(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13);\n } catch (e) {\n  stackRestore(sp);\n  if (e !== e + 0) throw e;\n  _setThrew(1, 0);\n }\n}\n\nfunction invoke_iiijiiii(index, a1, a2, a3, a4, a5, a6, a7) {\n var sp = stackSave();\n try {\n  return getWasmTableEntry(index)(a1, a2, a3, a4, a5, a6, a7);\n } catch (e) {\n  stackRestore(sp);\n  if (e !== e + 0) throw e;\n  _setThrew(1, 0);\n }\n}\n\nfunction invoke_viiiiiiiiiiiiii(index, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14) {\n var sp = stackSave();\n try {\n  getWasmTableEntry(index)(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14);\n } catch (e) {\n  stackRestore(sp);\n  if (e !== e + 0) throw e;\n  _setThrew(1, 0);\n }\n}\n\nfunction invoke_viiiiiijjiiiii(index, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13) {\n var sp = stackSave();\n try {\n  getWasmTableEntry(index)(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13);\n } catch (e) {\n  stackRestore(sp);\n  if (e !== e + 0) throw e;\n  _setThrew(1, 0);\n }\n}\n\nfunction invoke_viiiiiiijiiiiii(index, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14) {\n var sp = stackSave();\n try {\n  getWasmTableEntry(index)(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14);\n } catch (e) {\n  stackRestore(sp);\n  if (e !== e + 0) throw e;\n  _setThrew(1, 0);\n }\n}\n\nfunction invoke_vif(index, a1, a2) {\n var sp = stackSave();\n try {\n  getWasmTableEntry(index)(a1, a2);\n } catch (e) {\n  stackRestore(sp);\n  if (e !== e + 0) throw e;\n  _setThrew(1, 0);\n }\n}\n\nfunction invoke_viiijjjfii(index, a1, a2, a3, a4, a5, a6, a7, a8, a9) {\n var sp = stackSave();\n try {\n  getWasmTableEntry(index)(a1, a2, a3, a4, a5, a6, a7, a8, a9);\n } catch (e) {\n  stackRestore(sp);\n  if (e !== e + 0) throw e;\n  _setThrew(1, 0);\n }\n}\n\nfunction invoke_viiiiijiiiiiiiiiiiiiiiiiii(index, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20, a21, a22, a23, a24, a25) {\n var sp = stackSave();\n try {\n  getWasmTableEntry(index)(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20, a21, a22, a23, a24, a25);\n } catch (e) {\n  stackRestore(sp);\n  if (e !== e + 0) throw e;\n  _setThrew(1, 0);\n }\n}\n\nfunction invoke_viijji(index, a1, a2, a3, a4, a5) {\n var sp = stackSave();\n try {\n  getWasmTableEntry(index)(a1, a2, a3, a4, a5);\n } catch (e) {\n  stackRestore(sp);\n  if (e !== e + 0) throw e;\n  _setThrew(1, 0);\n }\n}\n\nfunction invoke_viifiifijjjii(index, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12) {\n var sp = stackSave();\n try {\n  getWasmTableEntry(index)(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12);\n } catch (e) {\n  stackRestore(sp);\n  if (e !== e + 0) throw e;\n  _setThrew(1, 0);\n }\n}\n\nfunction invoke_viiiiiiiiiiiiiiiiiiii(index, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20) {\n var sp = stackSave();\n try {\n  getWasmTableEntry(index)(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20);\n } catch (e) {\n  stackRestore(sp);\n  if (e !== e + 0) throw e;\n  _setThrew(1, 0);\n }\n}\n\nfunction invoke_iif(index, a1, a2) {\n var sp = stackSave();\n try {\n  return getWasmTableEntry(index)(a1, a2);\n } catch (e) {\n  stackRestore(sp);\n  if (e !== e + 0) throw e;\n  _setThrew(1, 0);\n }\n}\n\nfunction invoke_viiiiifiiiiii(index, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12) {\n var sp = stackSave();\n try {\n  getWasmTableEntry(index)(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12);\n } catch (e) {\n  stackRestore(sp);\n  if (e !== e + 0) throw e;\n  _setThrew(1, 0);\n }\n}\n\nfunction invoke_vijiiiiiiijjii(index, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13) {\n var sp = stackSave();\n try {\n  getWasmTableEntry(index)(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13);\n } catch (e) {\n  stackRestore(sp);\n  if (e !== e + 0) throw e;\n  _setThrew(1, 0);\n }\n}\n\nfunction invoke_viiiijjj(index, a1, a2, a3, a4, a5, a6, a7) {\n var sp = stackSave();\n try {\n  getWasmTableEntry(index)(a1, a2, a3, a4, a5, a6, a7);\n } catch (e) {\n  stackRestore(sp);\n  if (e !== e + 0) throw e;\n  _setThrew(1, 0);\n }\n}\n\nfunction invoke_viiiiiiiiiiiiiiii(index, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16) {\n var sp = stackSave();\n try {\n  getWasmTableEntry(index)(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16);\n } catch (e) {\n  stackRestore(sp);\n  if (e !== e + 0) throw e;\n  _setThrew(1, 0);\n }\n}\n\nfunction invoke_viiiiiiiiiiiiiiiiiii(index, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19) {\n var sp = stackSave();\n try {\n  getWasmTableEntry(index)(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19);\n } catch (e) {\n  stackRestore(sp);\n  if (e !== e + 0) throw e;\n  _setThrew(1, 0);\n }\n}\n\nfunction invoke_viiiiiiiiii(index, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10) {\n var sp = stackSave();\n try {\n  getWasmTableEntry(index)(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10);\n } catch (e) {\n  stackRestore(sp);\n  if (e !== e + 0) throw e;\n  _setThrew(1, 0);\n }\n}\n\nfunction invoke_viiiiiiiiiiiiiiiiii(index, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18) {\n var sp = stackSave();\n try {\n  getWasmTableEntry(index)(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18);\n } catch (e) {\n  stackRestore(sp);\n  if (e !== e + 0) throw e;\n  _setThrew(1, 0);\n }\n}\n\nfunction invoke_viiiiiiijjj(index, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10) {\n var sp = stackSave();\n try {\n  getWasmTableEntry(index)(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10);\n } catch (e) {\n  stackRestore(sp);\n  if (e !== e + 0) throw e;\n  _setThrew(1, 0);\n }\n}\n\nfunction invoke_iiiiiiiiiiiiiiiiiifi(index, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19) {\n var sp = stackSave();\n try {\n  return getWasmTableEntry(index)(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19);\n } catch (e) {\n  stackRestore(sp);\n  if (e !== e + 0) throw e;\n  _setThrew(1, 0);\n }\n}\n\nfunction invoke_viiif(index, a1, a2, a3, a4) {\n var sp = stackSave();\n try {\n  getWasmTableEntry(index)(a1, a2, a3, a4);\n } catch (e) {\n  stackRestore(sp);\n  if (e !== e + 0) throw e;\n  _setThrew(1, 0);\n }\n}\n\nfunction invoke_viiiiiiiiidi(index, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11) {\n var sp = stackSave();\n try {\n  getWasmTableEntry(index)(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11);\n } catch (e) {\n  stackRestore(sp);\n  if (e !== e + 0) throw e;\n  _setThrew(1, 0);\n }\n}\n\nfunction invoke_viiiiji(index, a1, a2, a3, a4, a5, a6) {\n var sp = stackSave();\n try {\n  getWasmTableEntry(index)(a1, a2, a3, a4, a5, a6);\n } catch (e) {\n  stackRestore(sp);\n  if (e !== e + 0) throw e;\n  _setThrew(1, 0);\n }\n}\n\nfunction invoke_iijjji(index, a1, a2, a3, a4, a5) {\n var sp = stackSave();\n try {\n  return getWasmTableEntry(index)(a1, a2, a3, a4, a5);\n } catch (e) {\n  stackRestore(sp);\n  if (e !== e + 0) throw e;\n  _setThrew(1, 0);\n }\n}\n\nfunction invoke_ijijji(index, a1, a2, a3, a4, a5) {\n var sp = stackSave();\n try {\n  return getWasmTableEntry(index)(a1, a2, a3, a4, a5);\n } catch (e) {\n  stackRestore(sp);\n  if (e !== e + 0) throw e;\n  _setThrew(1, 0);\n }\n}\n\nfunction invoke_jiij(index, a1, a2, a3) {\n var sp = stackSave();\n try {\n  return getWasmTableEntry(index)(a1, a2, a3);\n } catch (e) {\n  stackRestore(sp);\n  if (e !== e + 0) throw e;\n  _setThrew(1, 0);\n  return 0n;\n }\n}\n\nfunction invoke_iiiij(index, a1, a2, a3, a4) {\n var sp = stackSave();\n try {\n  return getWasmTableEntry(index)(a1, a2, a3, a4);\n } catch (e) {\n  stackRestore(sp);\n  if (e !== e + 0) throw e;\n  _setThrew(1, 0);\n }\n}\n\nfunction invoke_viiijjiii(index, a1, a2, a3, a4, a5, a6, a7, a8) {\n var sp = stackSave();\n try {\n  getWasmTableEntry(index)(a1, a2, a3, a4, a5, a6, a7, a8);\n } catch (e) {\n  stackRestore(sp);\n  if (e !== e + 0) throw e;\n  _setThrew(1, 0);\n }\n}\n\nfunction invoke_viif(index, a1, a2, a3) {\n var sp = stackSave();\n try {\n  getWasmTableEntry(index)(a1, a2, a3);\n } catch (e) {\n  stackRestore(sp);\n  if (e !== e + 0) throw e;\n  _setThrew(1, 0);\n }\n}\n\nfunction invoke_iiiiijji(index, a1, a2, a3, a4, a5, a6, a7) {\n var sp = stackSave();\n try {\n  return getWasmTableEntry(index)(a1, a2, a3, a4, a5, a6, a7);\n } catch (e) {\n  stackRestore(sp);\n  if (e !== e + 0) throw e;\n  _setThrew(1, 0);\n }\n}\n\nfunction invoke_viji(index, a1, a2, a3) {\n var sp = stackSave();\n try {\n  getWasmTableEntry(index)(a1, a2, a3);\n } catch (e) {\n  stackRestore(sp);\n  if (e !== e + 0) throw e;\n  _setThrew(1, 0);\n }\n}\n\nfunction invoke_iiiifi(index, a1, a2, a3, a4, a5) {\n var sp = stackSave();\n try {\n  return getWasmTableEntry(index)(a1, a2, a3, a4, a5);\n } catch (e) {\n  stackRestore(sp);\n  if (e !== e + 0) throw e;\n  _setThrew(1, 0);\n }\n}\n\nfunction invoke_iiijii(index, a1, a2, a3, a4, a5) {\n var sp = stackSave();\n try {\n  return getWasmTableEntry(index)(a1, a2, a3, a4, a5);\n } catch (e) {\n  stackRestore(sp);\n  if (e !== e + 0) throw e;\n  _setThrew(1, 0);\n }\n}\n\nfunction invoke_iiiiiiiiijii(index, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11) {\n var sp = stackSave();\n try {\n  return getWasmTableEntry(index)(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11);\n } catch (e) {\n  stackRestore(sp);\n  if (e !== e + 0) throw e;\n  _setThrew(1, 0);\n }\n}\n\nfunction invoke_iiiijjii(index, a1, a2, a3, a4, a5, a6, a7) {\n var sp = stackSave();\n try {\n  return getWasmTableEntry(index)(a1, a2, a3, a4, a5, a6, a7);\n } catch (e) {\n  stackRestore(sp);\n  if (e !== e + 0) throw e;\n  _setThrew(1, 0);\n }\n}\n\nfunction invoke_iiiiiijjjii(index, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10) {\n var sp = stackSave();\n try {\n  return getWasmTableEntry(index)(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10);\n } catch (e) {\n  stackRestore(sp);\n  if (e !== e + 0) throw e;\n  _setThrew(1, 0);\n }\n}\n\nfunction invoke_iiijiii(index, a1, a2, a3, a4, a5, a6) {\n var sp = stackSave();\n try {\n  return getWasmTableEntry(index)(a1, a2, a3, a4, a5, a6);\n } catch (e) {\n  stackRestore(sp);\n  if (e !== e + 0) throw e;\n  _setThrew(1, 0);\n }\n}\n\nfunction invoke_iiiiiiiijjjfi(index, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12) {\n var sp = stackSave();\n try {\n  return getWasmTableEntry(index)(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12);\n } catch (e) {\n  stackRestore(sp);\n  if (e !== e + 0) throw e;\n  _setThrew(1, 0);\n }\n}\n\nfunction invoke_iijiiii(index, a1, a2, a3, a4, a5, a6) {\n var sp = stackSave();\n try {\n  return getWasmTableEntry(index)(a1, a2, a3, a4, a5, a6);\n } catch (e) {\n  stackRestore(sp);\n  if (e !== e + 0) throw e;\n  _setThrew(1, 0);\n }\n}\n\nfunction invoke_iijjjii(index, a1, a2, a3, a4, a5, a6) {\n var sp = stackSave();\n try {\n  return getWasmTableEntry(index)(a1, a2, a3, a4, a5, a6);\n } catch (e) {\n  stackRestore(sp);\n  if (e !== e + 0) throw e;\n  _setThrew(1, 0);\n }\n}\n\nfunction invoke_iiji(index, a1, a2, a3) {\n var sp = stackSave();\n try {\n  return getWasmTableEntry(index)(a1, a2, a3);\n } catch (e) {\n  stackRestore(sp);\n  if (e !== e + 0) throw e;\n  _setThrew(1, 0);\n }\n}\n\nfunction invoke_viiijiiii(index, a1, a2, a3, a4, a5, a6, a7, a8) {\n var sp = stackSave();\n try {\n  getWasmTableEntry(index)(a1, a2, a3, a4, a5, a6, a7, a8);\n } catch (e) {\n  stackRestore(sp);\n  if (e !== e + 0) throw e;\n  _setThrew(1, 0);\n }\n}\n\nfunction invoke_viiij(index, a1, a2, a3, a4) {\n var sp = stackSave();\n try {\n  getWasmTableEntry(index)(a1, a2, a3, a4);\n } catch (e) {\n  stackRestore(sp);\n  if (e !== e + 0) throw e;\n  _setThrew(1, 0);\n }\n}\n\nfunction invoke_viijiiiiiiiii(index, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12) {\n var sp = stackSave();\n try {\n  getWasmTableEntry(index)(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12);\n } catch (e) {\n  stackRestore(sp);\n  if (e !== e + 0) throw e;\n  _setThrew(1, 0);\n }\n}\n\nfunction invoke_iid(index, a1, a2) {\n var sp = stackSave();\n try {\n  return getWasmTableEntry(index)(a1, a2);\n } catch (e) {\n  stackRestore(sp);\n  if (e !== e + 0) throw e;\n  _setThrew(1, 0);\n }\n}\n\nfunction invoke_iiif(index, a1, a2, a3) {\n var sp = stackSave();\n try {\n  return getWasmTableEntry(index)(a1, a2, a3);\n } catch (e) {\n  stackRestore(sp);\n  if (e !== e + 0) throw e;\n  _setThrew(1, 0);\n }\n}\n\nfunction invoke_vidi(index, a1, a2, a3) {\n var sp = stackSave();\n try {\n  getWasmTableEntry(index)(a1, a2, a3);\n } catch (e) {\n  stackRestore(sp);\n  if (e !== e + 0) throw e;\n  _setThrew(1, 0);\n }\n}\n\nfunction invoke_fiii(index, a1, a2, a3) {\n var sp = stackSave();\n try {\n  return getWasmTableEntry(index)(a1, a2, a3);\n } catch (e) {\n  stackRestore(sp);\n  if (e !== e + 0) throw e;\n  _setThrew(1, 0);\n }\n}\n\nfunction invoke_vjiii(index, a1, a2, a3, a4) {\n var sp = stackSave();\n try {\n  getWasmTableEntry(index)(a1, a2, a3, a4);\n } catch (e) {\n  stackRestore(sp);\n  if (e !== e + 0) throw e;\n  _setThrew(1, 0);\n }\n}\n\nfunction invoke_diiiii(index, a1, a2, a3, a4, a5) {\n var sp = stackSave();\n try {\n  return getWasmTableEntry(index)(a1, a2, a3, a4, a5);\n } catch (e) {\n  stackRestore(sp);\n  if (e !== e + 0) throw e;\n  _setThrew(1, 0);\n }\n}\n\nfunction invoke_diii(index, a1, a2, a3) {\n var sp = stackSave();\n try {\n  return getWasmTableEntry(index)(a1, a2, a3);\n } catch (e) {\n  stackRestore(sp);\n  if (e !== e + 0) throw e;\n  _setThrew(1, 0);\n }\n}\n\nfunction invoke_vijjjjijjiii(index, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11) {\n var sp = stackSave();\n try {\n  getWasmTableEntry(index)(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11);\n } catch (e) {\n  stackRestore(sp);\n  if (e !== e + 0) throw e;\n  _setThrew(1, 0);\n }\n}\n\nfunction invoke_viijjiiiii(index, a1, a2, a3, a4, a5, a6, a7, a8, a9) {\n var sp = stackSave();\n try {\n  getWasmTableEntry(index)(a1, a2, a3, a4, a5, a6, a7, a8, a9);\n } catch (e) {\n  stackRestore(sp);\n  if (e !== e + 0) throw e;\n  _setThrew(1, 0);\n }\n}\n\nfunction invoke_j(index) {\n var sp = stackSave();\n try {\n  return getWasmTableEntry(index)();\n } catch (e) {\n  stackRestore(sp);\n  if (e !== e + 0) throw e;\n  _setThrew(1, 0);\n  return 0n;\n }\n}\n\nfunction invoke_iiiiid(index, a1, a2, a3, a4, a5) {\n var sp = stackSave();\n try {\n  return getWasmTableEntry(index)(a1, a2, a3, a4, a5);\n } catch (e) {\n  stackRestore(sp);\n  if (e !== e + 0) throw e;\n  _setThrew(1, 0);\n }\n}\n\nfunction invoke_viiiiiiiiiiiiiii(index, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15) {\n var sp = stackSave();\n try {\n  getWasmTableEntry(index)(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15);\n } catch (e) {\n  stackRestore(sp);\n  if (e !== e + 0) throw e;\n  _setThrew(1, 0);\n }\n}\n\nfunction invoke_fii(index, a1, a2) {\n var sp = stackSave();\n try {\n  return getWasmTableEntry(index)(a1, a2);\n } catch (e) {\n  stackRestore(sp);\n  if (e !== e + 0) throw e;\n  _setThrew(1, 0);\n }\n}\n\nfunction invoke_dii(index, a1, a2) {\n var sp = stackSave();\n try {\n  return getWasmTableEntry(index)(a1, a2);\n } catch (e) {\n  stackRestore(sp);\n  if (e !== e + 0) throw e;\n  _setThrew(1, 0);\n }\n}\n\nModule[\"stackAlloc\"] = stackAlloc;\n\nModule[\"stackSave\"] = stackSave;\n\nModule[\"stackRestore\"] = stackRestore;\n\nModule[\"UTF8ToString\"] = UTF8ToString;\n\nModule[\"stringToUTF8\"] = stringToUTF8;\n\nModule[\"lengthBytesUTF8\"] = lengthBytesUTF8;\n\nvar calledRun;\n\ndependenciesFulfilled = function runCaller() {\n if (!calledRun) run();\n if (!calledRun) dependenciesFulfilled = runCaller;\n};\n\nfunction run() {\n if (runDependencies > 0) {\n  return;\n }\n preRun();\n if (runDependencies > 0) {\n  return;\n }\n function doRun() {\n  if (calledRun) return;\n  calledRun = true;\n  Module[\"calledRun\"] = true;\n  if (ABORT) return;\n  initRuntime();\n  readyPromiseResolve(Module);\n  if (Module[\"onRuntimeInitialized\"]) Module[\"onRuntimeInitialized\"]();\n  postRun();\n }\n if (Module[\"setStatus\"]) {\n  Module[\"setStatus\"](\"Running...\");\n  setTimeout(function() {\n   setTimeout(function() {\n    Module[\"setStatus\"](\"\");\n   }, 1);\n   doRun();\n  }, 1);\n } else {\n  doRun();\n }\n}\n\nif (Module[\"preInit\"]) {\n if (typeof Module[\"preInit\"] == \"function\") Module[\"preInit\"] = [ Module[\"preInit\"] ];\n while (Module[\"preInit\"].length > 0) {\n  Module[\"preInit\"].pop()();\n }\n}\n\nrun();\n\n\n  return ortWasm.ready\n}\n\n);\n})();\nif (typeof exports === 'object' && typeof module === 'object')\n  module.exports = ortWasm;\nelse if (typeof define === 'function' && define['amd'])\n  define([], function() { return ortWasm; });\nelse if (typeof exports === 'object')\n  exports[\"ortWasm\"] = ortWasm;\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(57);\n"],"names":["root","factory","exports","module","define","amd","self","backends","backendsSortedByPriority","registerBackend","name","backend","priority","init","createSessionHandler","TypeError","currentBackend","undefined","Error","i","indexOf","splice","length","push","logLevelValue","env","wasm","webgl","webgpu","logLevel","value","Object","defineProperty","enumerable","NUMERIC_TENSOR_TYPE_TO_TYPEDARRAY_MAP","Map","Float32Array","Uint8Array","Int8Array","Uint16Array","Int16Array","Int32Array","Float64Array","Uint32Array","NUMERIC_TENSOR_TYPEDARRAY_TO_TYPE_MAP","isBigIntChecked","Tensor","constructor","arg0","arg1","arg2","type","data","dims","isBigInt64ArrayAvailable","BigInt64Array","from","isBigUint64ArrayAvailable","BigUint64Array","set","checkBigInt","Array","isArray","typedArrayConstructor","get","firstElementType","mappedType","size","dim","Number","isSafeInteger","RangeError","calculateSize","this","static","buffer","options","height","width","tensorLayout","norm","mean","bias","normMean","normBias","inputformat","bitmapFormat","outputformat","tensorFormat","stride","float32Data","step","rImagePointer","gImagePointer","bImagePointer","aImagePointer","rTensorPointer","gTensorPointer","bTensorPointer","aTensorPointer","image","isHTMLImageEle","HTMLImageElement","isImageDataEle","ImageData","isImageBitmap","ImageBitmap","isString","tensorConfig","canvas","document","createElement","pixels2DContext","getContext","resizedHeight","resizedWidth","drawImage","getImageData","bufferToTensor","Promise","resolve","reject","context","newImage","Image","crossOrigin","src","onload","img","format","tempCanvas","putImageData","toDataURL","j","R","G","B","A","fillStyle","fillRect","toImageData","channels","createImageData","reshape","InferenceSession","handler","async","feeds","fetches","isFetchesEmpty","outputNames","isFetches","arg1Keys","getOwnPropertyNames","v","inputNames","results","run","returnValue","key","hasOwnProperty","call","arg3","filePathOrUint8Array","ArrayBuffer","SharedArrayBuffer","byteOffset","byteLength","backendHints","executionProviders","map","backendNames","errors","backendName","backendInfo","initialized","aborted","isInitializing","initPromise","e","err","join","resolveBackend","startProfiling","endProfiling","initTimeout","simd","proxy","numThreads","isInteger","numCpuLogicalCores","navigator","cpus","hardwareConcurrency","Math","min","ceil","initializeWebAssemblyInstance","pathOrBuffer","OnnxruntimeWebAssemblySessionHandler","loadModel","wasmBackend","currentKernelId","commandEncoder","computePassEncoder","pendingDispatchNumber","profilingEnabled","currentKernelCustomData","kernelCustomData","gpu","adapter","requestAdapter","deviceDescriptor","requiredLimits","maxComputeWorkgroupStorageSize","limits","maxComputeWorkgroupsPerDimension","maxStorageBufferBindingSize","features","has","profilingMode","requiredFeatures","device","requestDevice","gpuDataManager","createGpuDataManager","programManager","ProgramManager","kernels","kernelPersistentData","configureLogger","debug","onuncapturederror","ev","error","GPUValidationError","console","message","profilingQuerySet","createQuerySet","count","dispose","getCommandEncoder","createCommandEncoder","getComputePassEncoder","beginComputePass","endComputePass","end","flush","queue","submit","finish","refreshPendingBuffers","program","inputs","outputIndices","createKernelOutput","createIntermediateOutput","inputTypes","inputDatas","gpuData","programInfo","inputTensorShapes","inputGpuDataTypes","inputTensorShapesToString","d","inputGpuDataTypesToString","cacheHint","getProgramInfoUniqueKey","artifact","getArtifact","validatedOutputIndices","outputs","_","outputTensorViews","outputDatas","isTemporary","isPersistent","tensorView","dataType","temporaryData","persistentData","normalizedDispatchGroup","normalizeDispatchGroupSize","dispatchGroup","build","setArtifact","LOG_DEBUG","upload","gpuDataId","memcpy","dst","getTargetBuffer","arrayBuffer","download","alloc","create","id","free","ptr","release","createKernel","kernelId","attribute","op","WEBGPU_OP_RESOLVE_RULES","releaseKernel","delete","computeKernel","kernel","kernelEntry","attributes","TensorViewImpl","getFloat32Array","HEAP8","ShapeUtil","newDims","ComputeContextImpl","customData","contextDataOffset","heapU32","HEAPU32","dataIndex","opKernelContext","inputCount","compute","inputsOutputsMapping","mappedInputs","index","output","elementSize","getTensorElementSize","bufferSize","stack","stackSave","stackAlloc","offset","_JsepOutput","stackRestore","jsepInit","WebGpuBackend","initialize","isSourceGpu","HEAPU8","subarray","dataOffset","logLevelPrefix","configLogLevel","$configLogLevel","$debug","LOG","msg","messageLevel","logLevelStringToEnum","level","log","Date","toISOString","args","MatMulUtil","a","b","BroadcastUtil","adims","bdims","isMatMul","arank","brank","crank","max","cdims","cShapeMatMul","calcMatMulShape","aLen","bLen","shape","finalShape","inputRank","finalRank","getSizeFromDimensionRange","axis","start","rank","strides","tensorRank","axes","x","normalizeAxis","perm","slice","reverse","pad","shape1","shape2","every","PoolConvUtil","isGlobalOperator","inputDims","kernelShape","dilations","pads","isChannelLast","autoPad","adjustPadAndReturnShape","outputDims","computeShapeHelper","filterDims","inSize","dilation","padHeadIndex","padTailIndex","dkernel","floor","padNeeded","leftShape","transLeft","rightShape","transRight","biasShape","M","K","N","kDim","isValidBroadcast","MIN_CLIP","MAX_CLIP","AttributeWithCacheKeyImpl","assign","cacheKey","_cacheKey","sort","createAttributeWithCacheKey","calcNormalizedBufferSize","guid","GpuDataManagerImpl","storageCache","downloadCache","buffersForUploadingPending","buffersPending","srcArrayBuffer","srcOffset","srcLength","gpuDataCache","originalSize","gpuBufferForUploading","createBuffer","mappedAtCreation","usage","GPUBufferUsage","MAP_WRITE","COPY_SRC","getMappedRange","unmap","copyBufferToBuffer","sourceId","destinationId","sourceGpuDataCache","destinationGpuDataCache","STORAGE","COPY_DST","gpuBuffer","GpuDataType","default","cachedData","downloadData","gpuReadBuffer","MAP_READ","readDataPromise","mapAsync","GPUMapMode","READ","then","destroy","unaryOps","abs","acos","acosh","binaryOps","add","asin","asinh","atan","atanh","pool","averagePool","parseAveragePoolAttributes","clipV10","clip","conv","parseConvAttributes","cos","cosh","div","elu","parseAlphaAttributes","erf","exp","gemm","parseGemmAttributes","globalAveragePool","parseGlobalAveragePoolAttributes","globalMaxPool","parseGlobalMaxPoolAttributes","leakyRelu","matMul","maxPool","parseMaxPoolAttributes","mul","neg","pow","reciprocal","relu","sigmoid","sin","sinh","sqrt","sub","tan","tanh","thresholdedRelu","transpose","parseTransposeAttributes","typeSnippet","component","activationFnSnippet","activation","_hasPreluActivationWeights","_packed","_coordsLength","biasActivationSnippet","hasBias","createConv2DMatMulProgramInfo","metadata","outputShape","dimAOuter","dimBOuter","dimInner","sequentialAccessByThreads","isChannelsLast","inChannels","batchSize","outWidth","outHeight","outChannels","isVec4","dispatchX","dispatchY","workGroupSize","elementsPerThread","dispatch","innerElementSize","tileAOuter","tileBOuter","tileInner","fitAOuter","fitBOuter","fitInner","elementsSize","declareInputs","declareFunctions","gpuDataType","y","z","getShaderSource","utilFunctions","computeStrides","addBias","hasPreluActivationWeights","innerElementSizeX","innerElementSizeW","coordASnippet","coordResSnippet","xHeight","xWidth","row","col","readXSnippet","getXSnippet","sampleX","sampleW","getWSnippet","resType","aType","bType","conv2dCommonSnippet","makeMatMulPackedVec4Source","makeMatMulPackedSource","workPerThread","workgroupSize","transposeA","splitK","splitedDimInner","isVectorA","tileAWidth","tileAHight","rowPerThreadB","calculateResultSnippet","writeDataToSubASnippet","rowPerThreadA","colPerThreadA","matmulSnippet","readDataFromSubASnippet","createBinaryOpProgramInfoLoader","funcCall","additionalImplementation","outputDataType","isBroadcast","areEqual","outputSize","vectorize","calculatedShape","calcShape","sharedDimension","dimA","shaderHelper","dimsA","dimsB","dimsOutput","doBroadcast","typeA","typeB","typeOutput","vecSize","expressionScalar","expressionVector","scalar","vector","broadcastImpl","outputIndicesHelper","createIndicesHelper","calcOffsetImpl","offsets","idx","o2iImpl","iType","assignment","indicesVariableDeclaration","o2iCall","singleAssignment","expressionA","expressionB","mainStart","guardAgainstOutOfBoundsWorkgroupSizes","createBinaryOpProgramShader","createBinaryOpProgramInfo","WORKGROUP_SIZE","o2iSnippet","varOffset","varIndices","i2oImpl","i2oExpression","isPtr","ShaderHelperImpl","workgroupSizeX","workgroupSizeY","workgroupSizeZ","is1DimensionDispatch","createShaderHelper","createGroupedConvProgramInfoLoader","squeezeOutputShapeFunction","processBias","xShape","wShape","outputChannelsPerGroup","group","activationFunction","applyActivation","getActicationSnippet","inputStorageBuffersDeclarations","calculateOutputShape","xIndicesHelper","wIndicesHelper","createGroupedConvProgramInfo","inputShape","adjustPads","inputSpatialShape","spatialRank","dilatedKernelShape","weightTransposeAttribute","getAdjustedConvAttributes","adjustPadsBasedOnAutoPad","newAttributes","activationAttributes","parseInternalActivationAttributes","auto_pad","kernel_shape","wIsConst","w_is_const","validateInputs","concat","adjustedAttributes","conv1d","inputHeight","inputWidth","inputChannels","weightHeight","weightWidth","transposedWeight","wT","transposeProgramMetadata","createTransposeProgramInfo","convInputs","createConv2DMatMulProgramInfoLoader","conv2d","createConv2DMatMulProgramMetadata","clipMin","clipMax","activation_params","activationCacheKey","aShape","bShape","GemmUtil","getShapeOfGemmResult","transA","transB","line","calculateAlpha","alpha","calculateC","m","n","broadcastM","broadcastN","offsetC","beta","createGemmProgramInfo","createGemmProgramInfoLoader","createMatmulProgramInfoLoader","createMatmulProgramInfo","getAdjustedPoolAttributesAndOutputShape","inputShapeAsChannelFirst","hasDilations","adjustPoolAttributes","outputShapeAsChannelFirst","computePoolOutputShape","generatePoolingCode","op1","op2","kw","sw","pwStart","dimIdxW","codeW","codeH","codeHEnd","kh","sh","phStart","phEnd","dimIdxH","dimH","kernelSize","kernelStrides","stridesRank","padsRank","padCode","reduce","sum","cur","parsePoolCommonAttributes","ceilMode","ceil_mode","createAveragePoolProgramInfo","countIncludePad","count_include_pad","attr","globalPoolAttributes","storageOrder","createMaxPoolProgramInfo","storage_order","getAdjustedPerm","keys","input","permAttr","sortBasedOnPerm","getOutputShape","inputIndicesHelper","reverseFunc","permFunctionBody","createElementwiseProgramInfoLoader","datasize","expression","createElementwiseProgramShader","inputTensors","createElementwiseProgramInfo","generateClipAttributesFromInputs","repo","attributesBound","buildArtifact","writeTimestamp","setPipeline","computePipeline","entries","binding","resource","bindGroup","createBindGroup","layout","getBindGroupLayout","setBindGroup","dispatchWorkgroups","queryData","QUERY_RESOLVE","syncData","resolveQuerySet","kernelName","mappedData","startTimeU64","endTimeU64","profilingTimeBase","startTime","endTime","normalizedDispatchGroupSize","code","shaderModule","createShaderModule","createComputePipeline","entryPoint","limitPerDimension","dispatchAverage","cbrt","iterateExtraOptions","prefix","seen","forEach","toString","currentScript","initializeWebAssembly","initializeRuntime","core","initRuntime","createSessionAllocate","model","createSessionFinalize","modeldata","createSession","releaseSession","sessionId","inputIndices","setRunOptions","getInstance","runOptionsHandle","allocs","runOptions","logSeverityLevel","logVerbosityLevel","terminate","tagDataOffset","tag","allocWasmString","_OrtCreateRunOptions","extra","WeakSet","keyDataOffset","valueDataOffset","_OrtAddRunConfigEntry","_OrtReleaseRunOptions","_free","runtimeInitialized","path","response","fetch","promisify","readFile","modelData","inputArray","kvp","tensor","t","result","setSessionOptions","sessionOptionsHandle","sessionOptions","session","use_ort_model_bytes_directly","some","ep","enableMemPattern","appendDefaultOptions","graphOptimizationLevel","getGraphOptimzationLevel","executionMode","getExecutionMode","logIdDataOffset","logId","optimizedModelFilePathOffset","optimizedModelFilePath","_OrtCreateSessionOptions","enableCpuMemArena","enableProfiling","epName","webnnOptions","deviceType","_OrtAddSessionConfigEntry","powerPreference","epNameDataOffset","_OrtAppendExecutionProvider","setExecutionProviders","_OrtReleaseSessionOptions","dataLength","lengthBytesUTF8","_malloc","stringToUTF8","tensorDataTypeStringToEnum","tensorDataTypeEnumToString","typeProto","dateType","tensorTypeToTypedArrayConstructor","loggingLevel","errorCode","_OrtInit","initOrt","activeSessions","modelDataOffset","sessionHandle","_OrtCreateSession","_OrtGetInputCount","outputCount","_OrtGetOutputCount","inputNamesUTF8Encoded","outputNamesUTF8Encoded","_OrtGetInputName","UTF8ToString","_OrtGetOutputName","_OrtFree","_OrtReleaseSession","runOptionsAllocs","inputValues","inputAllocs","dataByteLength","dimsOffset","dimIndex","HEAP32","_OrtCreateTensor","beforeRunStack","inputValuesOffset","inputNamesOffset","outputValuesOffset","outputNamesOffset","inputValuesIndex","inputNamesIndex","outputValuesIndex","outputNamesIndex","_OrtRun","runPromise","jsepRunPromise","beforeGetTensorDataStack","tensorDataOffset","_OrtGetTensorData","tensorDataIndex","dimsLength","stringData","maxBytesToRead","_OrtReleaseTensor","profileFileName","_OrtEndProfiling","extractTransferableBuffers","tensors","buffers","ortWasmFactory","ortWasmFactoryThreaded","initializing","flags","timeout","useThreads","MessageChannel","port1","postMessage","WebAssembly","validate","isMultiThreadSupported","useSimd","isSimdSupported","wasmPaths","wasmPrefixOverride","wasmFileName","getWasmFileName","wasmPathOverride","isTimeout","tasks","setTimeout","locateFile","fileName","scriptDirectory","endsWith","what","race","PThread","terminateAllThreads","_scriptDir","ortWasm","readyPromiseResolve","readyPromiseReject","Module","read_","readAsync","readBinary","moduleOverrides","thisProgram","ENVIRONMENT_IS_WEB","window","ENVIRONMENT_IS_WORKER","importScripts","ENVIRONMENT_IS_NODE","process","versions","node","fs","nodePath","dirname","__dirname","filename","binary","isFileURI","URL","normalize","readFileSync","ret","onerror","argv","replace","location","href","substr","lastIndexOf","url","xhr","XMLHttpRequest","open","send","responseText","responseType","status","wasmBinary","wasmMemory","out","bind","warn","abort","HEAP16","HEAPU16","HEAPF32","HEAP64","HEAPU64","HEAPF64","wasmTable","ABORT","updateMemoryViews","__ATPRERUN__","__ATINIT__","__ATPOSTRUN__","runDependencies","runDependencyWatcher","dependenciesFulfilled","RuntimeError","wasmBinaryFile","dataURIPrefix","isDataURI","startsWith","getBinary","file","instantiateArrayBuffer","binaryFile","imports","receiver","credentials","catch","getBinaryPromise","instantiate","instance","reason","callRuntimeCallbacks","callbacks","shift","exceptionCaught","uncaughtExceptionCount","exceptionLast","ExceptionInfo","excPtr","set_type","get_type","set_destructor","destructor","get_destructor","set_caught","caught","get_caught","set_rethrown","rethrown","get_rethrown","set_adjusted_ptr","adjustedPtr","get_adjusted_ptr","get_exception_ptr","___cxa_is_pointer_type","adjusted","___cxa_find_matching_catch","thrown","setTempRet0","info","thrownType","arguments","caughtType","adjusted_ptr_addr","___cxa_can_catch","___cxa_find_matching_catch_2","___cxa_find_matching_catch_3","___cxa_find_matching_catch_4","___cxa_find_matching_catch_5","dlopenMissingError","UTF8Decoder","TextDecoder","UTF8ArrayToString","heapOrArray","endIdx","endPtr","decode","str","u0","u1","u2","String","fromCharCode","ch","SYSCALLS","varargs","getStr","len","c","charCodeAt","stringToUTF8Array","heap","outIdx","maxBytesToWrite","startIdx","u","outPtr","embindRepr","embind_charCodes","readLatin1String","awaitingDependencies","registeredTypes","typeDependencies","char_0","char_9","makeLegalFunctionName","f","createNamedFunction","body","apply","extendError","baseErrorType","errorName","errorClass","prototype","BindingError","throwBindingError","registerType","rawType","registeredInstance","ignoreDuplicateRegistrations","cb","integerReadValueFromPointer","signed","pointer","getShiftFromSize","emval_handles","allocated","freelist","allocate","handle","pop","__emval_decref","reserved","refcount","Emval","simpleReadValueFromPointer","floatReadValueFromPointer","UTF16Decoder","UTF16ToString","maxIdx","codeUnit","stringToUTF16","startPtr","numCharsToWrite","lengthBytesUTF16","UTF32ToString","utf32","stringToUTF32","lengthBytesUTF32","requireRegisteredType","humanName","rv","impl","___getTypeName","emval_symbols","getStringOrSymbol","address","symbol","emval_methodCallers","emval_get_global","globalThis","Function","emval_registeredMethods","emval_newers","readI53FromI64","isLeapYear","year","_emscripten_get_now","MONTH_DAYS_LEAP_CUMULATIVE","MONTH_DAYS_REGULAR_CUMULATIVE","ydayFromDate","date","getFullYear","getMonth","getDate","stringToNewUTF8","emscripten_realloc_buffer","grow","hrtime","performance","now","ENV","getEnvStrings","strings","languages","printCharBuffers","MONTH_DAYS_LEAP","MONTH_DAYS_REGULAR","_strftime","s","maxsize","tm","tm_zone","tm_sec","tm_min","tm_hour","tm_mday","tm_mon","tm_year","tm_wday","tm_yday","tm_isdst","tm_gmtoff","pattern","EXPANSION_RULES_1","rule","RegExp","WEEKDAYS","MONTHS","leadingSomething","digits","character","leadingNulls","compareByDay","date1","date2","sgn","compare","getFirstWeekStartDate","janFourth","getDay","getWeekBasedYear","thisDate","days","newDate","getTime","leap","currentMonth","daysInCurrentMonth","setDate","setMonth","setFullYear","addDays","janFourthThisYear","janFourthNextYear","firstWeekStartThisYear","firstWeekStartNextYear","EXPANSION_RULES_2","substring","twelveHour","array","arraySum","val","jan1","dec31","off","ahead","includes","stringy","u8array","bytes","wasmTableMirror","getWasmTableEntry","funcPtr","func","codes","embind_init_charCodes","calledRun","wasmImports","___cxa_increment_exception_refcount","_setThrew","___cxa_decrement_exception_refcount","fd","cmd","buf","dirp","dirfd","mode","bufsize","primitiveType","minRange","maxRange","isUnsignedType","destructors","destructorFunction","trueValue","falseValue","wt","o","fromWireType","bitshift","dataTypeIndex","TA","decodeMemoryView","stdStringIsUTF8","payload","decodeStartPtr","currentBytePtr","stringSegment","valueIsOfTypeString","Uint8ClampedArray","base","charCode","charSize","decodeString","encodeString","getHeap","lengthBytesUTF","HEAP","isVoid","returnType","destructorsRef","rd","caller","methodName","emval_allocateDestructors","first","second","argCount","argTypes","types","emval_lookupTypes","retType","signatureName","returnId","params","argsList","functionBody","argumentList","dummy","obj","r","newFunc","newer","craftEmvalAllocator","view","del","runDestructors","arg","time","tmPtr","getUTCSeconds","getUTCMinutes","getUTCHours","getUTCDate","getUTCMonth","getUTCFullYear","getUTCDay","UTC","yday","getSeconds","getMinutes","getHours","getTimezoneOffset","summerOffset","winterOffset","guessedOffset","dstOffset","nonDstOffset","trueOffset","setTime","getYear","prot","addr","timezone","daylight","tzname","currentYear","winter","summer","stdTimezoneOffset","extractZone","match","toTimeString","winterName","summerName","winterNamePtr","summerNamePtr","dest","num","copyWithin","requestedSize","oldSize","maxHeapSize","cutDown","overGrownHeapSize","__environ","environ_buf","bufSize","string","stringToAscii","penviron_count","penviron_buf_size","iov","iovcnt","pnum","whence","newOffset","stream","curr","a1","sp","a2","a3","a4","a5","a6","a7","a8","a9","a10","a11","a12","a13","a14","a15","a16","a17","a18","a19","a20","a21","a22","a23","a24","a25","loc","callback","receiveInstance","unshift","clearInterval","removeRunDependency","instantiateStreaming","createWasm","doRun","postRun","preRun","runCaller","ready","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","definition","prop","Symbol","toStringTag"],"sourceRoot":""}