{"version":3,"file":"ort.es5.min.js","mappings":";;;;;CAAA,SAA2CA,EAAMC,GAC1B,iBAAZC,SAA0C,iBAAXC,OACxCA,OAAOD,QAAUD,IACQ,mBAAXG,QAAyBA,OAAOC,IAC9CD,OAAO,GAAIH,GACe,iBAAZC,QACdA,QAAa,IAAID,IAEjBD,EAAU,IAAIC,GACf,CATD,CASGK,MAAM,WACT,O,sNCRA,MAAMC,EAAW,CAAC,EACZC,EAA2B,GAWpBC,EAAkB,CAACC,EAAMC,EAASC,KAC3C,IAAID,GAAmC,mBAAjBA,EAAQE,MAA+D,mBAAjCF,EAAQG,qBA6BpE,MAAM,IAAIC,UAAU,uBA7BpB,CACI,MAAMC,EAAiBT,EAASG,GAChC,QAAuBO,IAAnBD,EACAT,EAASG,GAAQ,CAAEC,UAASC,gBAE3B,IAAII,EAAeJ,SAAWA,EAE/B,OAEC,GAAII,EAAeJ,WAAaA,GAC7BI,EAAeL,UAAYA,EAC3B,MAAM,IAAIO,MAAM,4BAA4BR,qBAAwBE,IAE5E,CACA,GAAIA,GAAY,EAAG,CACf,MAAMO,EAAIX,EAAyBY,QAAQV,IAChC,IAAPS,GACAX,EAAyBa,OAAOF,EAAG,GAEvC,IAAK,IAAIA,EAAI,EAAGA,EAAIX,EAAyBc,OAAQH,IACjD,GAAIZ,EAASC,EAAyBW,IAAIP,UAAYA,EAElD,YADAJ,EAAyBa,OAAOF,EAAG,EAAGT,GAI9CF,EAAyBe,KAAKb,EAClC,CAEJ,CAC0C,EC1C9C,IAAIc,EAAgB,UACb,MAAMC,EAAM,CACfC,KAAM,CAAC,EACPC,MAAO,CAAC,EACRC,OAAQ,CAAC,EACLC,aAASC,GACT,QAAcb,IAAVa,EAAJ,CAGA,GAAqB,iBAAVA,IAA2F,IAArE,CAAC,UAAW,OAAQ,UAAW,QAAS,SAASV,QAAQU,GACtF,MAAM,IAAIZ,MAAM,8BAA8BY,KAElDN,EAAgBM,CAJhB,CAKJ,EACID,eACA,OAAOL,CACX,GAGJO,OAAOC,eAAeP,EAAK,WAAY,CAAEQ,YAAY,ICf9C,MAAM,EAAMR,ECHbS,EAAwC,IAAIC,IAAI,CAClD,CAAC,UAAWC,cACZ,CAAC,QAASC,YACV,CAAC,OAAQC,WACT,CAAC,SAAUC,aACX,CAAC,UAAWA,aACZ,CAAC,QAASC,YACV,CAAC,QAASC,YACV,CAAC,OAAQJ,YACT,CAAC,UAAWK,cACZ,CAAC,SAAUC,eAGTC,EAAwC,IAAIT,IAAI,CAClD,CAACC,aAAc,WACf,CAACC,WAAY,SACb,CAACC,UAAW,QACZ,CAACC,YAAa,UACd,CAACC,WAAY,SACb,CAACC,WAAY,SACb,CAACC,aAAc,WACf,CAACC,YAAa,YAKlB,IAAIE,GAAkB,EAmCf,MAAMC,EACTC,YAAYC,EAAMC,EAAMC,GAEpB,IAAIC,EACAC,EACAC,EAEJ,GAzCY,MAChB,IAAKR,EAAiB,CAClBA,GAAkB,EAClB,MAAMS,EAAoD,oBAAlBC,eAA+D,mBAAvBA,cAAcC,KACxFC,EAAsD,oBAAnBC,gBAAiE,mBAAxBA,eAAeF,KAC7FF,IACApB,EAAsCyB,IAAI,QAASJ,eACnDX,EAAsCe,IAAIJ,cAAe,UAEzDE,IACAvB,EAAsCyB,IAAI,SAAUD,gBACpDd,EAAsCe,IAAID,eAAgB,UAElE,GAuBIE,GAKoB,iBAATZ,EAMP,GAFAG,EAAOH,EACPK,EAAOH,EACM,WAATF,EAAmB,CAEnB,IAAKa,MAAMC,QAAQb,GACf,MAAM,IAAIlC,UAAU,kDAIxBqC,EAAOH,CACX,KACK,CAED,MAAMc,EAAwB7B,EAAsC8B,IAAIhB,GACxE,QAA8B/B,IAA1B8C,EACA,MAAM,IAAIhD,UAAU,4BAA4BiC,MAEpD,GAAIa,MAAMC,QAAQb,GAKdG,EAAOW,EAAsBP,KAAKP,OAEjC,MAAIA,aAAgBc,GAIrB,MAAM,IAAIhD,UAAU,KAAKoC,mCAAsCY,KAH/DX,EAAOH,CAIX,CACJ,MAOA,GADAI,EAAOJ,EACHY,MAAMC,QAAQd,GAAO,CAErB,GAAoB,IAAhBA,EAAK1B,OACL,MAAM,IAAIP,UAAU,uDAExB,MAAMkD,SAA0BjB,EAAK,GACrC,GAAyB,WAArBiB,EACAd,EAAO,SACPC,EAAOJ,MAEN,IAAyB,YAArBiB,EAQL,MAAM,IAAIlD,UAAU,uCAAuCkD,MAP3Dd,EAAO,OAIPC,EAAOf,WAAWmB,KAAKR,EAI3B,CACJ,KACK,CAED,MAAMkB,EAAatB,EAAsCoB,IAAIhB,EAAKD,aAClE,QAAmB9B,IAAfiD,EACA,MAAM,IAAInD,UAAU,qCAAqCiC,EAAKD,gBAElEI,EAAOe,EACPd,EAAOJ,CACX,CAGJ,QAAa/B,IAAToC,EAEAA,EAAO,CAACD,EAAK9B,aAEZ,IAAKuC,MAAMC,QAAQT,GACpB,MAAM,IAAItC,UAAU,0CAGxB,MAAMoD,EAtGQ,CAACd,IACnB,IAAIc,EAAO,EACX,IAAK,IAAIhD,EAAI,EAAGA,EAAIkC,EAAK/B,OAAQH,IAAK,CAClC,MAAMiD,EAAMf,EAAKlC,GACjB,GAAmB,iBAARiD,IAAqBC,OAAOC,cAAcF,GACjD,MAAM,IAAIrD,UAAU,QAAQI,+BAA+BiD,KAE/D,GAAIA,EAAM,EACN,MAAM,IAAIG,WAAW,QAAQpD,2CAA2CiD,KAE5ED,GAAQC,CACZ,CACA,OAAOD,CAAI,EA0FMK,CAAcnB,GAC3B,GAAIc,IAASf,EAAK9B,OACd,MAAM,IAAIJ,MAAM,iBAAiBiD,iCAAoCf,EAAK9B,YAE9EmD,KAAKpB,KAAOA,EACZoB,KAAKtB,KAAOA,EACZsB,KAAKrB,KAAOA,EACZqB,KAAKN,KAAOA,CAChB,CASAO,sBAAsBC,EAAQC,GAC1B,QAAe3D,IAAX0D,EACA,MAAM,IAAIzD,MAAM,gCAEpB,QAAuBD,IAAnB2D,EAAQC,aAA0C5D,IAAlB2D,EAAQE,MACxC,MAAM,IAAI5D,MAAM,0CAEpB,GAA6B,SAAzB0D,EAAQG,aACR,MAAM,IAAI7D,MAAM,2CAEpB,MAAM,OAAE2D,EAAM,MAAEC,GAAUF,EACpBI,EAAOJ,EAAQI,MAAQ,CAAEC,KAAM,IAAKC,KAAM,GAChD,IAAIC,EACAC,EAEAD,EADuB,iBAAfH,EAAS,KACN,CAACA,EAAKC,KAAMD,EAAKC,KAAMD,EAAKC,KAAMD,EAAKC,MAGvC,CAACD,EAAKC,KAAK,GAAID,EAAKC,KAAK,GAAID,EAAKC,KAAK,GAAID,EAAKC,KAAK,IAAM,KAGtEG,EADuB,iBAAfJ,EAAS,KACN,CAACA,EAAKE,KAAMF,EAAKE,KAAMF,EAAKE,KAAMF,EAAKE,MAGvC,CAACF,EAAKE,KAAK,GAAIF,EAAKE,KAAK,GAAIF,EAAKE,KAAK,GAAIF,EAAKE,KAAK,IAAM,GAE1E,MAAMG,OAAuCpE,IAAzB2D,EAAQU,aAA6BV,EAAQU,aAAe,OAE1EC,OAAwCtE,IAAzB2D,EAAQY,mBACCvE,IAAzB2D,EAAQY,aAA6BZ,EAAQY,aAC9C,MACEC,EAASZ,EAASC,EAClBY,EAA+B,SAAjBH,EAA0B,IAAInD,aAAsB,EAATqD,GAAc,IAAIrD,aAAsB,EAATqD,GAE9F,IAAIE,EAAO,EAAGC,EAAgB,EAAGC,EAAgB,EAAGC,EAAgB,EAAGC,EAAgB,EACnFC,EAAiB,EAAGC,EAAiBR,EAAQS,EAA0B,EAATT,EAAYU,GAAkB,EAE5E,QAAhBd,IACAM,EAAO,EACPC,EAAgB,EAChBC,EAAgB,EAChBC,EAAgB,EAChBC,GAAiB,GAGA,SAAjBR,EACAY,EAA0B,EAATV,EAEK,QAAjBF,GACLS,EAAiB,EACjBE,EAAiBT,EACjBQ,EAA0B,EAATR,GAEK,QAAjBF,IACLW,EAAiB,EACjBD,EAAiBR,EACjBO,EAA0B,EAATP,GAErB,IAAK,IAAItE,EAAI,EAAGA,EAAIsE,EAAQtE,IAAKyE,GAAiBD,EAAMG,GAAiBH,EAAME,GAAiBF,EAAMI,GAAiBJ,EACnHD,EAAYM,MAAqBrB,EAAOiB,GAAiBR,EAAS,IAAMD,EAAS,GACjFO,EAAYO,MAAqBtB,EAAOkB,GAAiBT,EAAS,IAAMD,EAAS,GACjFO,EAAYQ,MAAqBvB,EAAOmB,GAAiBV,EAAS,IAAMD,EAAS,IACzD,IAApBgB,IAA4C,IAAnBJ,IACzBL,EAAYS,MAAqBxB,EAAOoB,GAAiBX,EAAS,IAAMD,EAAS,IAMzF,OAF+C,IAAIrC,EAAO,UAAW4C,EAA/B,SAAjBH,EAA6D,CAAC,EAAG,EAAGV,EAAQC,GAC1D,CAAC,EAAG,EAAGD,EAAQC,GAE1D,CACAJ,uBAAuB0B,EAAOxB,GAE1B,MAAMyB,EAA+C,oBAAvB,kBAAsCD,aAAiBE,iBAC/EC,EAAwC,oBAAhB,WAA+BH,aAAiBI,UACxEC,EAAyC,oBAAlB,aAAiCL,aAAiBM,YACzEC,EAA4B,iBAAVP,EACxB,IAAIhD,EACAwD,EAAehC,GAAW,CAAC,EAE/B,GAAIyB,EAAgB,CAEhB,MAAMQ,EAASC,SAASC,cAAc,UACtCF,EAAO/B,MAAQsB,EAAMtB,MACrB+B,EAAOhC,OAASuB,EAAMvB,OACtB,MAAMmC,EAAkBH,EAAOI,WAAW,MAC1C,GAAuB,MAAnBD,EAqCA,MAAM,IAAI9F,MAAM,6BArCS,CACzB,IAAI2D,EAASuB,EAAMvB,OACfC,EAAQsB,EAAMtB,MAKlB,QAJgB7D,IAAZ2D,QAAmD3D,IAA1B2D,EAAQsC,oBAAwDjG,IAAzB2D,EAAQuC,eACxEtC,EAASD,EAAQsC,cACjBpC,EAAQF,EAAQuC,mBAEJlG,IAAZ2D,EAAuB,CAEvB,GADAgC,EAAehC,OACc3D,IAAzB2D,EAAQY,aACR,MAAM,IAAItE,MAAM,+DAKpB,GAFI0F,EAAapB,aAAe,YAETvE,IAAnB2D,EAAQC,QAAwBD,EAAQC,SAAWA,EACnD,MAAM,IAAI3D,MAAM,mEAKpB,GAFI0F,EAAa/B,OAASA,OAEJ5D,IAAlB2D,EAAQE,OAAuBF,EAAQE,QAAUA,EACjD,MAAM,IAAI5D,MAAM,iEAGhB0F,EAAa9B,MAAQA,CAE7B,MAEI8B,EAAapB,aAAe,OAC5BoB,EAAa/B,OAASA,EACtB+B,EAAa9B,MAAQA,EAEzBkC,EAAgBI,UAAUhB,EAAO,EAAG,GACpChD,EAAO4D,EAAgBK,aAAa,EAAG,EAAGvC,EAAOD,GAAQzB,IAC7D,CAIJ,KACK,KAAImD,EA4CJ,IAAIE,EAAe,CAEpB,QAAgBxF,IAAZ2D,EACA,MAAM,IAAI1D,MAAM,2DAEpB,QAA6BD,IAAzB2D,EAAQU,aACR,MAAM,IAAIpE,MAAM,6DAEpB,MAAM8F,EAAkBF,SAASC,cAAc,UAAUE,WAAW,MACpE,GAAuB,MAAnBD,EAAyB,CACzB,MAAMnC,EAASuB,EAAMvB,OACfC,EAAQsB,EAAMtB,MAGpB,GAFAkC,EAAgBI,UAAUhB,EAAO,EAAG,EAAGtB,EAAOD,GAC9CzB,EAAO4D,EAAgBK,aAAa,EAAG,EAAGvC,EAAOD,GAAQzB,UACzCnC,IAAZ2D,EAAuB,CAEvB,QAAuB3D,IAAnB2D,EAAQC,QAAwBD,EAAQC,SAAWA,EACnD,MAAM,IAAI3D,MAAM,8DAMpB,GAHI0F,EAAa/B,OAASA,OAGJ5D,IAAlB2D,EAAQE,OAAuBF,EAAQE,QAAUA,EACjD,MAAM,IAAI5D,MAAM,4DAGhB0F,EAAa9B,MAAQA,CAE7B,MAEI8B,EAAa/B,OAASA,EACtB+B,EAAa9B,MAAQA,EAEzB,OAAOhC,EAAOwE,eAAelE,EAAMwD,EACvC,CAEI,MAAM,IAAI1F,MAAM,4BAExB,CACK,GAAIyF,EACL,OAAO,IAAIY,SAAQ,CAACC,EAASC,KACzB,MAAMZ,EAASC,SAASC,cAAc,UAChCW,EAAUb,EAAOI,WAAW,MAClC,IAAKb,IAAUsB,EACX,OAAOD,IAEX,MAAME,EAAW,IAAIC,MACrBD,EAASE,YAAc,YACvBF,EAASG,IAAM1B,EACfuB,EAASI,OAAS,KACdlB,EAAO/B,MAAQ6C,EAAS7C,MACxB+B,EAAOhC,OAAS8C,EAAS9C,OACzB6C,EAAQN,UAAUO,EAAU,EAAG,EAAGd,EAAO/B,MAAO+B,EAAOhC,QACvD,MAAMmD,EAAMN,EAAQL,aAAa,EAAG,EAAGR,EAAO/B,MAAO+B,EAAOhC,QAC5D,QAAgB5D,IAAZ2D,EAAuB,CACvB,QAAuB3D,IAAnB2D,EAAQC,QAAwBD,EAAQC,SAAWgC,EAAOhC,OAC1D,MAAM,IAAI3D,MAAM,kDAKpB,GAFI0F,EAAa/B,OAASgC,EAAOhC,YAEX5D,IAAlB2D,EAAQE,OAAuBF,EAAQE,QAAU+B,EAAO/B,MACxD,MAAM,IAAI5D,MAAM,gDAGhB0F,EAAa9B,MAAQ+B,EAAO/B,KAEpC,MAEI8B,EAAa/B,OAASgC,EAAOhC,OAC7B+B,EAAa9B,MAAQ+B,EAAO/B,MAEhC0C,EAAQ1E,EAAOwE,eAAeU,EAAI5E,KAAMwD,GAAc,CACzD,IAIL,MAAM,IAAI1F,MAAM,iEACpB,CA3HyB,CAErB,MAAM+G,EAAS,OACf,IAAIpD,EACAC,EASJ,QARgB7D,IAAZ2D,QAAkD3D,IAAzB2D,EAAQuC,mBAAwDlG,IAA1B2D,EAAQsC,eACvErC,EAASD,EAAQsC,cACjBpC,EAAQF,EAAQuC,eAGhBtC,EAASuB,EAAMvB,OACfC,EAAQsB,EAAMtB,YAEF7D,IAAZ2D,EAAuB,CAEvB,GADAgC,EAAehC,OACc3D,IAAzB2D,EAAQU,cAA8BV,EAAQU,eAAiB2C,EAC/D,MAAM,IAAI/G,MAAM,wDAGhB0F,EAAatB,aAAe,MAEpC,MAEIsB,EAAatB,aAAe,OAIhC,GAFAsB,EAAa/B,OAASA,EACtB+B,EAAa9B,MAAQA,OACL7D,IAAZ2D,EAAuB,CACvB,MAAMsD,EAAapB,SAASC,cAAc,UAC1CmB,EAAWpD,MAAQA,EACnBoD,EAAWrD,OAASA,EACpB,MAAMmC,EAAkBkB,EAAWjB,WAAW,MAC9C,GAAuB,MAAnBD,EAKA,MAAM,IAAI9F,MAAM,6BAJhB8F,EAAgBmB,aAAa/B,EAAO,EAAG,GACvChD,EAAO4D,EAAgBK,aAAa,EAAG,EAAGvC,EAAOD,GAAQzB,IAKjE,MAEIA,EAAOgD,EAAMhD,IAErB,CAgFA,CACA,QAAanC,IAATmC,EACA,OAAON,EAAOwE,eAAelE,EAAMwD,GAGnC,MAAM,IAAI1F,MAAM,iEAExB,CACAkH,UAAUxD,GACN,MAAMiC,EAASC,SAASC,cAAc,UACtCF,EAAO/B,MAAQL,KAAKpB,KAAK,GACzBwD,EAAOhC,OAASJ,KAAKpB,KAAK,GAC1B,MAAM2D,EAAkBH,EAAOI,WAAW,MAC1C,GAAuB,MAAnBD,EAAyB,CAEzB,IAAIlC,EACAD,OAC0B5D,IAA1B2D,GAASG,cAAuD,SAAzBH,EAAQG,cAC/CD,EAAQL,KAAKpB,KAAK,GAClBwB,EAASJ,KAAKpB,KAAK,KAGnByB,EAAQL,KAAKpB,KAAK,GAClBwB,EAASJ,KAAKpB,KAAK,IAEvB,MAAMgC,OAAkCpE,IAApB2D,GAASqD,OAAuBrD,EAAQqD,OAAS,MAC/DjD,EAAOJ,GAASI,KACtB,IAAIG,EACAC,OACSnE,IAAT+D,QAAoC/D,IAAd+D,EAAKC,KAC3BE,EAAW,CAAC,IAAK,IAAK,IAAK,KAGA,iBAAfH,EAAS,KACjBG,EAAW,CAACH,EAAKC,KAAMD,EAAKC,KAAMD,EAAKC,KAAMD,EAAKC,OAGlDE,EAAW,CAACH,EAAKC,KAAK,GAAID,EAAKC,KAAK,GAAID,EAAKC,KAAK,GAAI,QACjChE,IAAjB+D,EAAKC,KAAK,KACVE,EAAS,GAAKH,EAAKC,KAAK,UAIvBhE,IAAT+D,QAAoC/D,IAAd+D,EAAKE,KAC3BE,EAAW,CAAC,EAAG,EAAG,EAAG,GAGM,iBAAfJ,EAAS,KACjBI,EAAW,CAACJ,EAAKE,KAAMF,EAAKE,KAAMF,EAAKE,KAAMF,EAAKE,OAGlDE,EAAW,CAACJ,EAAKE,KAAK,GAAIF,EAAKE,KAAK,GAAIF,EAAKE,KAAK,GAAI,QACjCjE,IAAjB+D,EAAKE,KAAK,KACVE,EAAS,GAAKJ,EAAKE,KAAK,KAIpC,MAAMO,EAASZ,EAASC,EAExB,IAAIkB,EAAiB,EAAGC,EAAiBR,EAAQS,EAA0B,EAATT,EAAYU,GAAkB,EAE5E,SAAhBd,GACAW,EAAiB,EACjBC,EAAiBR,EACjBS,EAA0B,EAATT,EACjBU,EAA0B,EAATV,GAEI,QAAhBJ,GACLW,EAAiB,EACjBC,EAAiBR,EACjBS,EAA0B,EAATT,GAEI,QAAhBJ,IACLW,EAAiB,EACjBE,EAAiBT,EACjBQ,EAA0B,EAATR,GAErB,IAAK,IAAItE,EAAI,EAAGA,EAAI0D,EAAQ1D,IACxB,IAAK,IAAIkH,EAAI,EAAGA,EAAIvD,EAAOuD,IAAK,CAC5B,MAAMC,GAAK7D,KAAKrB,KAAK4C,KAAoBZ,EAAS,IAAMD,EAAS,GAC3DoD,GAAK9D,KAAKrB,KAAK6C,KAAoBb,EAAS,IAAMD,EAAS,GAC3DqD,GAAK/D,KAAKrB,KAAK8C,KAAoBd,EAAS,IAAMD,EAAS,GAC3DsD,GAAwB,IAApBtC,EACN,KACC1B,KAAKrB,KAAK+C,KAAoBf,EAAS,IAAMD,EAAS,GAE3D6B,EAAgB0B,UAAY,QAAUJ,EAAI,IAAMC,EAAI,IAAMC,EAAI,IAAMC,EAAI,IACxEzB,EAAgB2B,SAASN,EAAGlH,EAAG,EAAG,EACtC,CAEJ,OAAO0F,EAAOuB,WAClB,CAEI,MAAM,IAAIlH,MAAM,4BAExB,CACA0H,YAAYhE,GACR,MAAMoC,EAAkBF,SAASC,cAAc,UAAUE,WAAW,MACpE,IAAIb,EACJ,GAAuB,MAAnBY,EA4FA,MAAM,IAAI9F,MAAM,6BA5FS,CAEzB,IAAI4D,EACAD,EACAgE,OAC0B5H,IAA1B2D,GAASG,cAAuD,SAAzBH,EAAQG,cAC/CD,EAAQL,KAAKpB,KAAK,GAClBwB,EAASJ,KAAKpB,KAAK,GACnBwF,EAAWpE,KAAKpB,KAAK,KAGrByB,EAAQL,KAAKpB,KAAK,GAClBwB,EAASJ,KAAKpB,KAAK,GACnBwF,EAAWpE,KAAKpB,KAAK,IAEzB,MAAMgC,OAA0BpE,IAAZ2D,QAA4C3D,IAAnB2D,EAAQqD,OAAuBrD,EAAQqD,OAAkB,MAChGjD,EAAOJ,GAASI,KACtB,IAAIG,EACAC,OACSnE,IAAT+D,QAAoC/D,IAAd+D,EAAKC,KAC3BE,EAAW,CAAC,IAAK,IAAK,IAAK,KAGA,iBAAfH,EAAS,KACjBG,EAAW,CAACH,EAAKC,KAAMD,EAAKC,KAAMD,EAAKC,KAAMD,EAAKC,OAGlDE,EAAW,CAACH,EAAKC,KAAK,GAAID,EAAKC,KAAK,GAAID,EAAKC,KAAK,GAAI,UACjChE,IAAjB+D,EAAKC,KAAK,KACVE,EAAS,GAAKH,EAAKC,KAAK,UAIvBhE,IAAT+D,QAAoC/D,IAAd+D,EAAKE,KAC3BE,EAAW,CAAC,EAAG,EAAG,EAAG,GAGM,iBAAfJ,EAAS,KACjBI,EAAW,CAACJ,EAAKE,KAAMF,EAAKE,KAAMF,EAAKE,KAAMF,EAAKE,OAGlDE,EAAW,CAACJ,EAAKE,KAAK,GAAIF,EAAKE,KAAK,GAAIF,EAAKE,KAAK,GAAI,QACjCjE,IAAjB+D,EAAKE,KAAK,KACVE,EAAS,GAAKJ,EAAKE,KAAK,KAIpC,MAAMO,EAASZ,EAASC,EACxB,QAAgB7D,IAAZ2D,EAAuB,CACvB,QAAuB3D,IAAnB2D,EAAQC,QAAwBD,EAAQC,SAAWA,EACnD,MAAM,IAAI3D,MAAM,0DAEpB,QAAsBD,IAAlB2D,EAAQE,OAAuBF,EAAQE,QAAUA,EACjD,MAAM,IAAI5D,MAAM,wDAEpB,QAAuBD,IAAnB2D,EAAQqD,QAAsC,IAAbY,GAAqC,SAAnBjE,EAAQqD,QAC7C,IAAbY,GAAsC,QAAnBjE,EAAQqD,QAAuC,QAAnBrD,EAAQqD,OACxD,MAAM,IAAI/G,MAAM,gDAExB,CAEA,MAAMyE,EAAO,EACb,IAAIC,EAAgB,EAAGC,EAAgB,EAAGC,EAAgB,EAAGC,EAAgB,EACzEC,EAAiB,EAAGC,EAAiBR,EAAQS,EAA0B,EAATT,EAAYU,GAAkB,EAE5E,SAAhBd,GACAW,EAAiB,EACjBC,EAAiBR,EACjBS,EAA0B,EAATT,EACjBU,EAA0B,EAATV,GAEI,QAAhBJ,GACLW,EAAiB,EACjBC,EAAiBR,EACjBS,EAA0B,EAATT,GAEI,QAAhBJ,IACLW,EAAiB,EACjBE,EAAiBT,EACjBQ,EAA0B,EAATR,GAErBW,EAAQY,EAAgB8B,gBAAgBhE,EAAOD,GAC/C,IAAK,IAAI1D,EAAI,EAAGA,EAAI0D,EAASC,EAAOc,GAAiBD,EAAME,GAAiBF,EAAMG,GAAiBH,EAAMI,GAAiBJ,EAAMxE,IAC5HiF,EAAMhD,KAAKwC,IAAkBnB,KAAKrB,KAAK4C,KAAoBZ,EAAS,IAAMD,EAAS,GACnFiB,EAAMhD,KAAKyC,IAAkBpB,KAAKrB,KAAK6C,KAAoBb,EAAS,IAAMD,EAAS,GACnFiB,EAAMhD,KAAK0C,IAAkBrB,KAAKrB,KAAK8C,KAAoBd,EAAS,IAAMD,EAAS,GACnFiB,EAAMhD,KAAK2C,IAAqC,IAApBI,EACxB,KACC1B,KAAKrB,KAAK+C,KAAoBf,EAAS,IAAMD,EAAS,EAEnE,CAIA,OAAOiB,CACX,CAGA2C,QAAQ1F,GACJ,OAAO,IAAIP,EAAO2B,KAAKtB,KAAMsB,KAAKrB,KAAMC,EAC5C,ECrmBG,MAAM,EAASP,ECAf,MAAMkG,EACTjG,YAAYkG,GACRxE,KAAKwE,QAAUA,CACnB,CACAC,UAAUC,EAAOlG,EAAMC,GACnB,MAAMkG,EAAU,CAAC,EACjB,IAAIxE,EAAU,CAAC,EAEf,GAAqB,iBAAVuE,GAAgC,OAAVA,GAAkBA,aAAiB,GAAUtF,MAAMC,QAAQqF,GACxF,MAAM,IAAIpI,UAAU,iGAExB,IAAIsI,GAAiB,EAErB,GAAoB,iBAATpG,EAAmB,CAC1B,GAAa,OAATA,EACA,MAAM,IAAIlC,UAAU,2CAExB,GAAIkC,aAAgB,EAChB,MAAM,IAAIlC,UAAU,gCAExB,GAAI8C,MAAMC,QAAQb,GAAO,CACrB,GAAoB,IAAhBA,EAAK3B,OACL,MAAM,IAAIP,UAAU,uCAExBsI,GAAiB,EAEjB,IAAK,MAAM3I,KAAQuC,EAAM,CACrB,GAAoB,iBAATvC,EACP,MAAM,IAAIK,UAAU,kDAExB,IAAwC,IAApC0D,KAAK6E,YAAYlI,QAAQV,GACzB,MAAM,IAAI6D,WAAW,2CAA2C7D,MAEpE0I,EAAQ1I,GAAQ,IACpB,CACA,GAAoB,iBAATwC,GAA8B,OAATA,EAC5B0B,EAAU1B,OAET,QAAoB,IAATA,EACZ,MAAM,IAAInC,UAAU,+BAE5B,KACK,CAGD,IAAIwI,GAAY,EAChB,MAAMC,EAAWzH,OAAO0H,oBAAoBxG,GAC5C,IAAK,MAAMvC,KAAQ+D,KAAK6E,YACpB,IAAgC,IAA5BE,EAASpI,QAAQV,GAAc,CAC/B,MAAMgJ,EAAIzG,EAAKvC,IACL,OAANgJ,GAAcA,aAAa,KAC3BH,GAAY,EACZF,GAAiB,EACjBD,EAAQ1I,GAAQgJ,EAExB,CAEJ,GAAIH,GACA,GAAoB,iBAATrG,GAA8B,OAATA,EAC5B0B,EAAU1B,OAET,QAAoB,IAATA,EACZ,MAAM,IAAInC,UAAU,qCAIxB6D,EAAU3B,CAElB,CACJ,MACK,QAAoB,IAATA,EACZ,MAAM,IAAIlC,UAAU,2DAGxB,IAAK,MAAML,KAAQ+D,KAAKkF,WACpB,QAA2B,IAAhBR,EAAMzI,GACb,MAAM,IAAIQ,MAAM,UAAUR,6BAIlC,GAAI2I,EACA,IAAK,MAAM3I,KAAQ+D,KAAK6E,YACpBF,EAAQ1I,GAAQ,KAIxB,MAAMkJ,QAAgBnF,KAAKwE,QAAQY,IAAIV,EAAOC,EAASxE,GACjDkF,EAAc,CAAC,EACrB,IAAK,MAAMC,KAAOH,EACV7H,OAAOiI,eAAeC,KAAKL,EAASG,KACpCD,EAAYC,GAAO,IAAI,EAAOH,EAAQG,GAAK5G,KAAMyG,EAAQG,GAAK3G,KAAMwG,EAAQG,GAAK1G,OAGzF,OAAOyG,CACX,CACApF,oBAAoB1B,EAAMC,EAAMC,EAAMgH,GAElC,IAAIC,EACAvF,EAAU,CAAC,EACf,GAAoB,iBAAT5B,GAEP,GADAmH,EAAuBnH,EACH,iBAATC,GAA8B,OAATA,EAC5B2B,EAAU3B,OAET,QAAoB,IAATA,EACZ,MAAM,IAAIlC,UAAU,qCAGvB,GAAIiC,aAAgBX,YAErB,GADA8H,EAAuBnH,EACH,iBAATC,GAA8B,OAATA,EAC5B2B,EAAU3B,OAET,QAAoB,IAATA,EACZ,MAAM,IAAIlC,UAAU,oCAGvB,MAAIiC,aAAgBoH,aACS,oBAAtBC,mBAAqCrH,aAAgBqH,mBAyC7D,MAAM,IAAItJ,UAAU,uDAzC6D,CACjF,MAAM4D,EAAS3B,EACf,IAAIsH,EAAa,EACbC,EAAavH,EAAKuH,WACtB,GAAoB,iBAATtH,GAA8B,OAATA,EAC5B2B,EAAU3B,OAET,GAAoB,iBAATA,EAAmB,CAE/B,GADAqH,EAAarH,GACRoB,OAAOC,cAAcgG,GACtB,MAAM,IAAI/F,WAAW,oCAEzB,GAAI+F,EAAa,GAAKA,GAAc3F,EAAO4F,WACvC,MAAM,IAAIhG,WAAW,oCAAoCI,EAAO4F,gBAGpE,GADAA,EAAavH,EAAKuH,WAAaD,EACX,iBAATpH,EAAmB,CAE1B,GADAqH,EAAarH,GACRmB,OAAOC,cAAciG,GACtB,MAAM,IAAIhG,WAAW,oCAEzB,GAAIgG,GAAc,GAAKD,EAAaC,EAAa5F,EAAO4F,WACpD,MAAM,IAAIhG,WAAW,oCAAoCI,EAAO4F,WAAaD,OAEjF,GAAoB,iBAATJ,GAA8B,OAATA,EAC5BtF,EAAUsF,OAET,QAAoB,IAATA,EACZ,MAAM,IAAInJ,UAAU,+BAE5B,MACK,QAAoB,IAATmC,EACZ,MAAM,IAAInC,UAAU,iCAE5B,MACK,QAAoB,IAATkC,EACZ,MAAM,IAAIlC,UAAU,gCAExBoJ,EAAuB,IAAI9H,WAAWsC,EAAQ2F,EAAYC,EAC9D,CAGA,CAEA,MACMC,GADM5F,EAAQ6F,oBAAsB,IACjBC,KAAIvJ,GAAkB,iBAANA,EAAiBA,EAAIA,EAAET,OAC1DC,OLlHgBuI,OAAOsB,IACjC,MAAMG,EAAuC,IAAxBH,EAAalJ,OAAed,EAA2BgK,EACtEI,EAAS,GACf,IAAK,MAAMC,KAAeF,EAAc,CACpC,MAAMG,EAAcvK,EAASsK,GAC7B,GAAIC,EAAa,CACb,GAAIA,EAAYC,YACZ,OAAOD,EAAYnK,QAElB,GAAImK,EAAYE,QACjB,SAEJ,MAAMC,IAAmBH,EAAYI,YACrC,IAMI,OALKD,IACDH,EAAYI,YAAcJ,EAAYnK,QAAQE,cAE5CiK,EAAYI,YAClBJ,EAAYC,aAAc,EACnBD,EAAYnK,OACvB,CACA,MAAOwK,GACEF,GACDL,EAAOrJ,KAAK,CAAEb,KAAMmK,EAAaO,IAAKD,IAE1CL,EAAYE,SAAU,CAC1B,CACA,eACWF,EAAYI,WACvB,CACJ,CACJ,CACA,MAAM,IAAIhK,MAAM,oCAAoC0J,EAAOF,KAAIS,GAAK,IAAIA,EAAEzK,SAASyK,EAAEC,QAAOC,KAAK,QAAQ,EKkF/EC,CAAed,GAC/BvB,QAAgBtI,EAAQG,qBAAqBqJ,EAAsBvF,GACzE,OAAO,IAAIoE,EAAiBC,EAChC,CACAsC,iBACI9G,KAAKwE,QAAQsC,gBACjB,CACAC,eACI/G,KAAKwE,QAAQuC,cACjB,CACI7B,iBACA,OAAOlF,KAAKwE,QAAQU,UACxB,CACIL,kBACA,OAAO7E,KAAKwE,QAAQK,WACxB,ECnLG,MAAM,EAAmBN,C,ggDCEhC,cACA,UAEA,0BAqBA,QAnBQ,YAAAnI,KAAN,W,oFAEM,YAAAC,qBAAN,SAA2B2K,EAAiC7G,G,uGAMpD8G,EAAU,IAAI,EAAAC,QAAQ/G,GAGA,iBAAjB6G,EAAP,MACF,GAAMC,EAAQE,UAAUH,I,cAAxB,S,aAEA,SAAMC,EAAQE,UAAUH,I,OAAxB,S,iBAGF,MAAO,CAAP,EAAO,IAAI,EAAAI,qBAAqBH,I,QAEpC,EArBA,GAuBa,EAAAI,cAAgB,IAAIC,C,ghDC7BjC,cACA,UAEA,UACA,UAQa,EAAAC,gBAAkB,WAa7B,IAZoC,iBAAzB,EAAAvK,IAAIC,KAAKuK,aAA4B,EAAAxK,IAAIC,KAAKuK,YAAc,KACrE,EAAAxK,IAAIC,KAAKuK,YAAc,GAGI,kBAAlB,EAAAxK,IAAIC,KAAKwK,OAClB,EAAAzK,IAAIC,KAAKwK,MAAO,GAGY,kBAAnB,EAAAzK,IAAIC,KAAKyK,QAClB,EAAA1K,IAAIC,KAAKyK,OAAQ,GAGgB,iBAAxB,EAAA1K,IAAIC,KAAK0K,aAA4B/H,OAAOgI,UAAU,EAAA5K,IAAIC,KAAK0K,aAAe,EAAA3K,IAAIC,KAAK0K,YAAc,EAAG,CACjH,IAAME,EAA0C,oBAAdC,WAA4B,IAAAC,QAAOlL,OAASiL,UAAUE,oBACxF,EAAAhL,IAAIC,KAAK0K,WAAaM,KAAKC,IAAI,EAAGD,KAAKE,MAAMN,GAAsB,GAAK,G,CAE5E,EAEA,8BAgBA,QAfQ,YAAAzL,KAAN,W,0FAKE,OAHA,IAAAmL,mBAGA,IAAM,IAAAa,kC,cAAN,S,YAII,YAAA/L,qBAAN,SAA2B2K,EAAiC7G,G,gGAG1D,UADMqE,EAAU,IAAI,EAAA6D,sCACNlB,UAAUH,EAAc7G,I,OACtC,OADA,SACO,CAAP,EAAO2C,QAAQC,QAAQyB,I,QAE3B,EAhBA,GAkBa,EAAA8D,YAAc,IAAIC,C,ygBC5C/B,aACA,cAGQlB,EAAgB,uBACtB,IAAArL,iBAAgB,QAASqL,GAAgB,IAIzC,IAAMiB,EAAc,qBAIpB,IAAAtM,iBAAgB,MAAOsM,EAAa,KACpC,IAAAtM,iBAAgB,OAAQsM,EAAa,KACrC,IAAAtM,iBAAgB,UAAWsM,EAAa,IACxC,IAAAtM,iBAAgB,QAASsM,EAAa,E,wHCrBxC,iBACE,WAAYE,GACVlL,OAAOmL,OAAOzI,KAAMwI,EACtB,CAUF,OAPE,sBAAW,uBAAQ,C,IAAnB,sBAKE,OAJKxI,KAAK0I,YACR1I,KAAK0I,UACDpL,OAAO0H,oBAAoBhF,MAAM2I,OAAO1C,KAAI,SAAAhK,GAAQ,gBAAI,EAAiCA,GAArC,IAA8C2K,KAAK,MAEtG5G,KAAK0I,SACd,E,gCACF,EAbA,GAmBa,EAAAE,4BAA8B,SAAoCJ,GAC3E,WAAIK,EAA0BL,EAA9B,C,6aCnBJ,cAEA,UACA,UACA,UAEOM,EAAS,EAAAC,YAAYC,aAAaC,IAqBzC,aACE,WAAYC,G,QAEV,GADAlJ,KAAKmJ,YAAc,IAAIzL,IACnBwL,QAAiD,C,IACnD,IAAmB,QAAAA,GAAU,8BAAE,CAA1B,IAAME,EAAI,QACTA,aAAgB,EAAAC,KAAKC,eACvBtJ,KAAKmJ,YAAYjK,IAAIkK,EAAKnN,KAAM,CAACsN,EAAUC,SAASJ,GAAOG,EAAUE,QAAQL,KACpEA,aAAgBN,EAAOS,WAChCvJ,KAAKmJ,YAAYjK,IAAIkK,EAAKnN,OAAS,CAACsN,EAAUC,SAASJ,GAAOG,EAAUE,QAAQL,I,mGAGpF,GAAIpJ,KAAKmJ,YAAYzJ,KAAOwJ,EAAWrM,OACrC,MAAM,IAAIJ,MAAM,6B,CAGtB,CAiOF,OA/NE,YAAAyC,IAAA,SAAIoG,EAAa5G,EAA0BrB,GACzC2C,KAAKmJ,YAAYjK,IAAIoG,EAAK,CAACjI,EAAOqB,GACpC,EACA,YAAAgL,OAAA,SAAOpE,GACLtF,KAAKmJ,YAAYO,OAAOpE,EAC1B,EACA,YAAAqE,SAAA,SAASrE,EAAasE,GACpB,OAAO5J,KAAKT,IAAI+F,EAAK,QAASsE,EAChC,EAEA,YAAAC,OAAA,SAAOvE,EAAasE,GAClB,OAAO5J,KAAKT,IAAI+F,EAAK,MAAOsE,EAC9B,EAEA,YAAAE,UAAA,SAAUxE,EAAasE,GACrB,OAAO5J,KAAKT,IAAI+F,EAAK,SAAUsE,EACjC,EAEA,YAAAG,UAAA,SAAUzE,EAAasE,GACrB,OAAO5J,KAAKT,IAAI+F,EAAK,SAAUsE,EACjC,EAEA,YAAAI,UAAA,SAAU1E,EAAasE,GACrB,OAAO5J,KAAKT,IAAI+F,EAAK,SAAUsE,EACjC,EAEA,YAAAK,QAAA,SAAQ3E,EAAasE,GACnB,OAAO5J,KAAKT,IAAI+F,EAAK,OAAQsE,EAC/B,EAEA,YAAAM,WAAA,SAAW5E,EAAasE,GACtB,OAAO5J,KAAKT,IAAI+F,EAAK,UAAWsE,EAClC,EAEA,YAAAO,WAAA,SAAW7E,EAAasE,GACtB,OAAO5J,KAAKT,IAAI+F,EAAK,UAAWsE,EAClC,EAEQ,YAAArK,IAAR,SACI+F,EAAa5G,EAA0BkL,GACzC,IAAMQ,EAAepK,KAAKmJ,YAAY5J,IAAI+F,GAC1C,QAAqB9I,IAAjB4N,EAA4B,CAC9B,QAAqB5N,IAAjBoN,EACF,OAAOA,EAET,MAAM,IAAInN,MAAM,wCAAiC6I,G,CAEnD,GAAI8E,EAAa,KAAO1L,EACtB,MAAM,IAAIjC,MAAM,kCAA2BiC,EAAI,oBAAY0L,EAAa,KAE1E,OAAOA,EAAa,EACtB,EAEe,EAAAX,QAAf,SAAuBL,GACrB,IAAM1K,EAAO0K,aAAgB,EAAAC,KAAKC,eAAiB,EAAO5K,KAAQ0K,EAA0B1K,OAC5F,OAAQA,GACN,KAAK,EAAA2K,KAAKC,eAAee,cAAcC,MACrC,MAAO,QACT,KAAK,EAAAjB,KAAKC,eAAee,cAAcE,IACrC,MAAO,MACT,KAAK,EAAAlB,KAAKC,eAAee,cAAcG,OACrC,MAAO,SACT,KAAK,EAAAnB,KAAKC,eAAee,cAAcI,OACrC,MAAO,SACT,KAAK,EAAApB,KAAKC,eAAee,cAAcK,OACrC,MAAO,SACT,KAAK,EAAArB,KAAKC,eAAee,cAAcM,KACrC,MAAO,OACT,KAAK,EAAAtB,KAAKC,eAAee,cAAcO,QACrC,MAAO,UACT,KAAK,EAAAvB,KAAKC,eAAee,cAAcQ,QACrC,MAAO,UACT,QACE,MAAM,IAAIpO,MAAM,+CAAwC,EAAA4M,KAAKC,eAAee,cAAc3L,KAEhG,EAEe,EAAA8K,SAAf,SAAwBJ,GACtB,IAAM0B,EAAW1B,aAAgB,EAAAC,KAAKC,eAAiBF,EAAK1K,KAAQ0K,EAA0B1K,OAC9F,GAAIoM,IAAa,EAAAzB,KAAKC,eAAee,cAAcU,OAASD,IAAa,EAAAzB,KAAKC,eAAee,cAAcW,OACzG,MAAM,IAAIvO,MAAM,wCAGlB,IAAMY,EAAQ2C,KAAKiL,gBAAgB7B,GAGnC,GAAI0B,IAAa,EAAAzB,KAAKC,eAAee,cAAcE,KAAO,EAAAW,SAASC,OAAO9N,GACxE,OAAO,EAAA6N,SAASE,aAAa/N,GAI/B,GAAIyN,IAAa,EAAAzB,KAAKC,eAAee,cAAcM,KAAM,CAIvD,IAHA,IAAMU,EAAOhO,EACPiO,EAAwB,IAAIlM,MAAciM,EAAIxO,QAE3CH,EAAI,EAAGA,EAAI2O,EAAIxO,OAAQH,IAAK,CACnC,IAAM6O,EAAYF,EAAI3O,GACtB4O,EAAY5O,GAAK,EAAAwO,SAASE,aAAaG,E,CAGzC,OAAOD,C,CAIT,GAAIR,IAAa,EAAAzB,KAAKC,eAAee,cAAcI,OACjD,OAAOrB,aAAgB,EAAAC,KAAKC,eAAiB,EAAAjL,OAAOmN,UAAUnO,GACjB,EAAAgB,OAAOoN,cAAcpO,GAIpE,GAAIyN,IAAa,EAAAzB,KAAKC,eAAee,cAAcQ,QAAS,CAC1D,GAAIzB,aAAgB,EAAAC,KAAKC,eAEvB,OADqBjM,EACD4I,KAAI,SAAA5I,GAAS,SAAAgB,OAAOmN,UAAUnO,EAAjB,IAC5B,GAAI+L,aAAgBN,EAAOS,UAEhC,OADqBlM,EACD4I,KAAI,SAAA5I,GAAS,SAAAgB,OAAOoN,cAAcpO,EAArB,G,CAKrC,GAAIyN,IAAa,EAAAzB,KAAKC,eAAee,cAAcG,QAG7CpB,aAAgB,EAAAC,KAAKC,eAAgB,CACvC,IAAMoC,EAAarO,EACnB,OAAO,IAAAsO,kBAAiBD,E,CAK5B,OAAIZ,IAAa,EAAAzB,KAAKC,eAAee,cAAcO,SAG7CxB,aAAgB,EAAAC,KAAKC,eACHjM,EACD4I,IAAI,EAAA0F,kBAIpBtO,CACT,EAEe,EAAA4N,gBAAf,SAA+B7B,GAC7B,OAAOA,aAAiB,EAAAC,KAAmB,eAAIrJ,KAAK4L,8BAA8BxC,GACnCpJ,KAAK6L,6BAA6BzC,EACnF,EAEe,EAAAwC,8BAAf,SAA6CxC,GAC3C,OAAQA,EAAK1K,MACX,KAAK,EAAA2K,KAAKC,eAAee,cAAcC,MACrC,OAAOlB,EAAK0C,EACd,KAAK,EAAAzC,KAAKC,eAAee,cAAcE,IACrC,OAAOnB,EAAK1M,EACd,KAAK,EAAA2M,KAAKC,eAAee,cAAcG,OACrC,OAAOpB,EAAK2C,EACd,KAAK,EAAA1C,KAAKC,eAAee,cAAcI,OACrC,OAAOrB,EAAK4C,EACd,KAAK,EAAA3C,KAAKC,eAAee,cAAcU,MACrC,OAAO3B,EAAK6C,EACd,KAAK,EAAA5C,KAAKC,eAAee,cAAcK,OACrC,OAAOtB,EAAK8C,OACd,KAAK,EAAA7C,KAAKC,eAAee,cAAcM,KACrC,OAAOvB,EAAK+C,KACd,KAAK,EAAA9C,KAAKC,eAAee,cAAcO,QACrC,OAAOxB,EAAKgD,QACd,KAAK,EAAA/C,KAAKC,eAAee,cAAcQ,QACrC,OAAOzB,EAAKiD,QACd,KAAK,EAAAhD,KAAKC,eAAee,cAAcW,OACrC,OAAO5B,EAAKkD,OACd,QACE,MAAM,IAAI7P,MAAM,sCAA+B,EAAA4M,KAAKC,eAAee,cAAcjB,EAAK1K,QAE5F,EAEe,EAAAmN,6BAAf,SAA4CzC,GAC1C,OAAQA,EAAK1K,QACX,KAAKoK,EAAOuB,cAAcC,MACxB,OAAOlB,EAAK0C,IACd,KAAKhD,EAAOuB,cAAcE,IACxB,OAAOnB,EAAK1M,IACd,KAAKoM,EAAOuB,cAAcG,OACxB,OAAOpB,EAAK2C,IACd,KAAKjD,EAAOuB,cAAcI,OACxB,OAAOrB,EAAK4C,IACd,KAAKlD,EAAOuB,cAAcU,MACxB,OAAO3B,EAAK6C,IACd,KAAKnD,EAAOuB,cAAcK,OACxB,OAAOtB,EAAKmD,cACd,KAAKzD,EAAOuB,cAAcM,KAExB,IADA,IAAMwB,EAAO,GACJzP,EAAI,EAAGA,EAAI0M,EAAKoD,aAAc9P,IACrCyP,EAAKrP,KAAKsM,EAAK+C,KAAKzP,IAEtB,OAAOyP,EAET,KAAKrD,EAAOuB,cAAcO,QACxB,IAAMwB,EAAU,GAChB,IAAS1P,EAAI,EAAGA,EAAI0M,EAAKqD,gBAAiB/P,IACxC0P,EAAQtP,KAAKsM,EAAKgD,QAAQ1P,IAE5B,OAAO0P,EAET,KAAKtD,EAAOuB,cAAcQ,QACxB,IAAMwB,EAAU,GAChB,IAAS3P,EAAI,EAAGA,EAAI0M,EAAKsD,gBAAiBhQ,IACxC2P,EAAQvP,KAAKsM,EAAKiD,QAAQ3P,IAE5B,OAAO2P,EAST,QACE,MAAM,IAAI5P,MAAM,sCAA+BqM,EAAOuB,cAAcjB,EAAK1K,UAE/E,EAGF,EAhPA,GAAa,EAAA6K,UAAAA,C,40DC5Bb,cA0EMoD,EAAsC,IAAIjP,IAgChD,SAAekP,EAAeC,G,gHAGW,KAFjCC,EAAa,EAAA5Q,SAEG2Q,KAeLE,EAf+CD,EAAWD,GAqBvE,eAJEG,EAAID,IAIuC,mBAAjBC,EAAEC,YAC9B,yBAA0BD,GAAuC,mBAA3BA,EAAE3Q,sBACxC,YAAa2Q,GAA0B,mBAAdA,EAAEE,UAtBvB,EAAUJ,EAAWD,GAEP,iBADhBzQ,EAAO,EAAQ6Q,eACa,SAAU7Q,EACjC,GAAMA,GADX,OAHF,M,OAIAA,EAAO,S,iBAET,GAAIA,EAEF,OADAuQ,EAAczN,IAAI2N,EAAa,GACxB,CAAP,EAAO,G,iBAIX,MAAO,CAAP,OAAOrQ,GAGT,IAAmBuQ,EAEXC,C,OAlDK,EAAA9Q,QAAqC,CAChDgB,MAAO,IAAI,EAAAiQ,cAOb,0BAAsBtG,EAAeuG,G,uHAC9BA,EAAD,MACK,CAAP,EAAOvG,EAAe,CAAC,W,OAEjBwG,EAAwB,iBAATD,EAAoB,CAACA,GAAQA,E,wCAExB,IAAAC,GAAK,W,sCAApBR,EAAW,SACdS,EAAQX,EAAcpN,IAAIsN,IAEvB,CAAP,EAAOS,GAGO,GAAMV,EAAeC,K,OACrC,GADM,EAAU,SAEd,MAAO,CAAP,EAAO,G,kMAKb,MAAM,IAAIpQ,MAAM,+B,kHCvGlB,cAGA,UAGA,UAEA,UAOA,0BAyEA,QAtEE,sBAAI,wBAAS,C,IAAb,WACE,OAAO,EAAAO,IAAIE,MAAMqQ,SACnB,E,IACA,SAAclQ,GACZ,EAAAL,IAAIE,MAAMqQ,UAAYlQ,CACxB,E,gCAEA,sBAAI,iCAAkB,C,IAAtB,WACE,OAAO,EAAAL,IAAIE,MAAMsQ,kBACnB,E,IACA,SAAuBnQ,GACrB,EAAAL,IAAIE,MAAMsQ,mBAAqBnQ,CACjC,E,gCAEA,sBAAI,+BAAgB,C,IAApB,WACE,OAAO,EAAAL,IAAIE,MAAMuQ,gBACnB,E,IACA,SAAqBpQ,GACnB,EAAAL,IAAIE,MAAMuQ,iBAAmBpQ,CAC/B,E,gCAEA,sBAAI,mBAAI,C,IAAR,WACE,OAAO,EAAAL,IAAIE,MAAMwQ,IACnB,E,IACA,SAASrQ,GACP,EAAAL,IAAIE,MAAMwQ,KAAOrQ,CACnB,E,gCAEA,sBAAI,oBAAK,C,IAAT,WACE,OAAO,EAAAL,IAAIE,MAAMuH,KACnB,E,IACA,SAAUpH,GACR,EAAAL,IAAIE,MAAMuH,MAAQpH,CACpB,E,gCAEA,YAAA4P,WAAA,WACE,IAsBE,OArBAjN,KAAK2N,WAAY,IAAAC,oBAAmB5N,KAAKuN,WACF,iBAA5BvN,KAAKwN,qBACdxN,KAAKwN,mBAAqB,IAES,iBAA1BxN,KAAKyN,mBACdzN,KAAKyN,iBAAmB,QAED,kBAAdzN,KAAK0N,OACd1N,KAAK0N,MAAO,GAEY,kBAAf1N,KAAKyE,QACdzE,KAAKyE,OAAQ,GAGf,EAAAoJ,OAAOC,WAAW,EAAA9Q,KAElB,EAAA6Q,OAAOE,QACH,eACA,uCAAgC/N,KAAK2N,UAAS,qCAC1C3N,KAAKwN,mBAAkB,+BAAuBxN,KAAKyN,iBAAgB,mBAAWzN,KAAK0N,KAAI,oBACvF1N,KAAKyE,MAAK,OACX,C,CACP,MAAOiC,GAEP,OADA,EAAAmH,OAAOG,QAAQ,eAAgB,6CAAsCtH,KAC9D,C,CAEX,EACA,YAAArK,qBAAA,SAAqB4G,GACnB,OAAO,IAAI,EAAAgL,oBAAoBjO,KAAMiD,EACvC,EACA,YAAAiK,QAAA,WACElN,KAAK2N,UAAUT,SACjB,EACF,EAzEA,GAAa,EAAAC,aAAAA,C,6lCCfb,cAEA,UACA,UACA,UAEA,SAMA,cAGE,WAAYlK,G,OACV,YAAMA,IAAQ,IAChB,CAqyCF,OA1yCmC,OAMjC,YAAAiL,aAAA,WACE,OAAO,EAAP,eACKlO,KAAKmO,kBACLnO,KAAKoO,kBACLpO,KAAKqO,SACLrO,KAAKsO,aAELtO,KAAKuO,sBACLvO,KAAKwO,6BACLxO,KAAKyO,2BAEZ,EACA,YAAAC,eAAA,WACE,MAAO,CAAC,CACV,EAKU,YAAAP,eAAV,WAEE,MAAO,CACLA,eAAgB,IAAI,EAAAQ,eAAe,uBAFpB,iBAGA,iOAQnB,EAMU,YAAAP,eAAV,WAEE,MAAO,CACLA,eAAgB,IAAI,EAAAO,eAAe,sBAFpB,iBAGD,4NAQlB,EAMU,YAAAF,yBAAV,WACE,IAAMG,EAAe5O,KAAKiD,QAAQ4L,oBAClC,OAAID,EAAaE,SACR9O,KAAK+O,+BAA+BH,GAEpC5O,KAAKgP,iCAAiCJ,EAEjD,EAKU,YAAAG,+BAAV,SAAyCH,GACvC,IAAMK,EAAWL,EAAaM,cACxBC,EAAc,CAACP,EAAavO,MAAOuO,EAAaxO,QAChDgP,EAA2C,CAAC,EAC5CC,EAAW,kBACjB,OAAQJ,EAASpS,QACf,KAAK,EACHuS,EAAOC,GAAYrP,KAAKsP,wBACxB,MACF,KAAK,EACHF,EAAOC,GAAYrP,KAAKuP,wBAAwBN,EAAsBE,GACtE,MACF,KAAK,EACHC,EAAOC,GAAYrP,KAAKwP,wBAAwBP,EAA8BE,GAC9E,MACF,KAAK,EACHC,EAAOC,GACHrP,KAAKyP,wBAAwBR,EAAsCE,GACvE,MACF,QACEC,EAAOC,GAAYrP,KAAK0P,wBAAwBT,EAAUE,GAE9D,IAAMQ,GAAO,IAAAC,SAAQ5P,KAAKiD,QAAQ0K,UAAUkC,SAGtCC,EAA4B,sDAE5BH,EAAKI,OAAM,0BAKjB,OADAX,EAAkC,oBAAI,IAAI,EAAAT,eAAemB,GAClDV,CACT,EAKU,YAAAJ,iCAAV,SAA2CJ,GACzC,IAAMK,EAAWL,EAAaM,cACxBC,EAAc,CAACP,EAAavO,MAAOuO,EAAaxO,QAChDgP,EAA2C,CAAC,EAC5CC,EAAW,kBACjB,OAAQJ,EAASpS,QACf,KAAK,EACHuS,EAAOC,GAAYrP,KAAKsP,wBACxB,MACF,KAAK,EACHF,EAAOC,GAAYrP,KAAKgQ,0BAA0Bf,EAAsBE,GACxE,MACF,KAAK,EACHC,EAAOC,GACHrP,KAAKiQ,0BAA0BhB,EAA8BE,GACjE,MACF,KAAK,EACHC,EAAOC,GACHrP,KAAKkQ,0BAA0BjB,EAAsCE,GACzE,MACF,KAAK,EACHC,EAAOC,GAAYrP,KAAKmQ,0BACpBlB,EAA8CE,GAClD,MACF,KAAK,EACHC,EAAOC,GAAYrP,KAAKoQ,0BACpBnB,EAAsDE,GAC1D,MACF,KAAK,EACHC,EAAOC,GAAYrP,KAAKqQ,0BACpBpB,EAA8DE,GAClE,MACF,QACE,MAAM,IAAI1S,MAAM,6CAAsCwS,EAASpS,SAEnE,IAAM8S,GAAO,IAAAC,SAAQ5P,KAAKiD,QAAQ0K,UAAUkC,SAGtCS,EAAyB,2DAEvBX,EAAKI,OAAM,2CAKnB,OADAX,EAA+B,iBAAI,IAAI,EAAAT,eAAe2B,GAC/ClB,CACT,EAKU,YAAAE,sBAAV,WACE,OAAO,IAAI,EAAAX,eAAe,oEAK5B,EAKU,YAAAY,wBAAV,SAAkCgB,EAAiBC,GACjD,IAAMC,EAAiBD,EACnBE,EAAS,GACb,OAA0B,IAAtBD,EAAe,IACjBC,EAAS,wFAE4BD,EAAe,GAAE,+BAG/C,IAAI,EAAA9B,eAAe+B,IAGF,IAAtBD,EAAe,IACjBC,EAAS,wFAE4BD,EAAe,GAAE,+BAG/C,IAAI,EAAA9B,eAAe+B,KAG5BA,EAAS,oIAG2BD,EAAe,GAAE,aAAKA,EAAe,GAAE,mDAC1CA,EAAe,GAAE,sCAG3C,IAAI,EAAA9B,eAAe+B,GAC5B,EAKU,YAAAlB,wBAAV,SAAkCe,EAAyBC,GACzD,IAAIE,EAAS,GACb,GAAI,EAAAC,UAAUC,YAAYL,EAAOC,GAM/B,OALAE,EAAS,8FAEkCF,EAAS,GAAE,aAAKA,EAAS,GAAE,0BAG/D,IAAI,EAAA7B,eAAe+B,GAG5B,IAAMD,EAAiBD,EAEjBK,EAAqB5I,KAAKE,KAAKoI,EAAM,GAAK,GAyBhD,OAdAG,EAAS,qIAG0BD,EAAe,GAAE,aAAKA,EAAe,GAAE,qDAEzCA,EAAe,GAAE,kHAGtBI,EAAkB,kDACjBA,EAAkB,0DAKxC,IAAI,EAAAlC,eAAe+B,EAC5B,EAKU,YAAAjB,wBAAV,SAAkCc,EAAiCC,GACjE,IAAMC,EAAiB,CAACD,EAAS,GAAIA,EAAS,IACxCK,EAAqB5I,KAAKE,KAAKoI,EAAM,GAAK,GAC1CO,EAAgBD,EAAqB5I,KAAKE,KAAKoI,EAAM,GAAK,GAC1DG,EAAS,qIAGoBD,EAAe,GAAE,aAAKA,EAAe,GAAE,mDACzCA,EAAe,GAAE,uDAE1BK,EAAa,qCAChBA,EAAa,qGAGND,EAAkB,kDACjBA,EAAkB,6DAK/C,OAAO,IAAI,EAAAlC,eAAe+B,EAC5B,EAKU,YAAAhB,wBAAV,SAAkCa,EAA0BC,GAS1D,IARA,IAAMC,EAAiB,CAACD,EAAS,GAAIA,EAAS,IAExCK,EAAqB5I,KAAKE,KAAKoI,EAAMA,EAAM1T,OAAS,GAAK,GACzDiU,EAAgBD,EAAqB5I,KAAKE,KAAKoI,EAAMA,EAAM1T,OAAS,GAAK,GAC3EkU,EAAiBD,EACjBE,EAAU,GACVC,EAAS,UAEJC,EAAI,EAAGA,EAAIX,EAAM1T,OAAS,EAAGqU,IACpCH,GAAkBR,EAAMA,EAAM1T,OAASqU,EAAI,GAC3CF,EAAU,uBACHE,EAAC,sBAAcH,EAAc,8BACxBG,EAAC,cAAMH,EAAc,WAC/BC,EACFC,EAAS,WAAIC,EAAC,MAAOD,EAEvB,IAAMP,EAAS,sBACPH,EAAM1T,OAAM,mHAEa4T,EAAe,GAAE,aAAKA,EAAe,GAAE,iDACzCA,EAAe,GAAE,qCAE1CO,EAAO,uCAESF,EAAa,mCAChBA,EAAa,iGAGND,EAAkB,gDACjBA,EAAkB,oCAE5BN,EAAM1T,OAAM,YAAIoU,EAAM,qBAGvC,OAAO,IAAI,EAAAtC,eAAe+B,EAC5B,EAKU,YAAAV,0BAAV,SAAoCO,EAAiBC,GACnD,IAAME,EAAS,mIAGoBF,EAAS,GAAE,aAAKA,EAAS,GAAE,8CAClCA,EAAS,GAAE,qCAGvC,OAAO,IAAI,EAAA7B,eAAe+B,EAC5B,EAKU,YAAAT,0BAAV,SAAoCM,EAAyBC,GAC3D,IAAME,EAAS,qIAGoBF,EAAS,GAAE,aAAKA,EAAS,GAAE,mDAC7BA,EAAS,GAAE,qDACpBD,EAAM,GAAE,4CACJA,EAAM,GAAE,uDAIpC,OAAO,IAAI,EAAA5B,eAAe+B,EAC5B,EAKU,YAAAR,0BAAV,SAAoCK,EAAiCC,GACnE,IAAIE,EACES,EAAOZ,EAAM1T,OAEfuU,EAAU,KACVD,EAAO,IACTC,EAAU,KAGZA,EAAU,IAAIhS,MAAM+R,EAAO,IACnBA,EAAO,GAAKZ,EAAMY,EAAO,GACjC,IAAK,IAAIzU,EAAIyU,EAAO,EAAGzU,GAAK,IAAKA,EAC/B0U,EAAQ1U,GAAK0U,EAAQ1U,EAAI,GAAK6T,EAAM7T,EAAI,GAE1C,IAAM2U,EAAkB,CAAC,IAAK,IAAK,KAC7BC,EACFF,EACKnL,KAAI,SAACjF,EAAQtE,GACZ,IAAM6U,EAAQ,cAAOF,EAAgB3U,GAAE,sBAAcsE,GAC/CwQ,EAAQ9U,IAAM0U,EAAQvU,OAAS,EACjC,cAAOwU,EAAgB3U,EAAI,GAAE,sBAAc2U,EAAgB3U,GAAE,cAAMsE,GACnE,mBAAYqQ,EAAgB3U,GAAE,cAAMsE,GACxC,MAAO,UAAGuQ,EAAK,aAAKC,EAAK,IAC3B,IACC5K,KAAK,IAWd,OATA8J,EAAS,qIAG0BF,EAAS,GAAE,aAAKA,EAAS,GAAE,mDAC7BA,EAAS,GAAE,qCACpCc,EAAsB,yDAIvB,IAAI,EAAA3C,eAAe+B,EAC5B,EAKU,YAAAP,0BAAV,SAAoCI,EAAyCC,GAE3E,IAAIE,EACES,EAAOZ,EAAM1T,OAEfuU,EAAU,KACVD,EAAO,IACTC,EAAU,KAGZA,EAAU,IAAIhS,MAAM+R,EAAO,IACnBA,EAAO,GAAKZ,EAAMY,EAAO,GACjC,IAAK,IAAIzU,EAAIyU,EAAO,EAAGzU,GAAK,IAAKA,EAC/B0U,EAAQ1U,GAAK0U,EAAQ1U,EAAI,GAAK6T,EAAM7T,EAAI,GAE1C,IAAM2U,EAAkB,CAAC,IAAK,IAAK,IAAK,MAClCC,EACFF,EACKnL,KAAI,SAACjF,EAAQtE,GACZ,IAAM6U,EAAQ,cAAOF,EAAgB3U,GAAE,sBAAcsE,GAC/CwQ,EAAQ9U,IAAM0U,EAAQvU,OAAS,EACjC,cAAOwU,EAAgB3U,EAAI,GAAE,sBAAc2U,EAAgB3U,GAAE,cAAMsE,GACnE,mBAAYqQ,EAAgB3U,GAAE,cAAMsE,GACxC,MAAO,UAAGuQ,EAAK,aAAKC,EAAK,IAC3B,IACC5K,KAAK,IAWd,OATA8J,EAAS,mIAG0BF,EAAS,GAAE,aAAKA,EAAS,GAAE,mDAC7BA,EAAS,GAAE,qCACpCc,EAAsB,6DAIvB,IAAI,EAAA3C,eAAe+B,EAC5B,EAKU,YAAAN,0BAAV,SAAoCG,EAAiDC,GAEnF,IAAIE,EACES,EAAOZ,EAAM1T,OAEfuU,EAAU,KACVD,EAAO,IACTC,EAAU,KAGZA,EAAU,IAAIhS,MAAM+R,EAAO,IACnBA,EAAO,GAAKZ,EAAMY,EAAO,GACjC,IAAK,IAAIzU,EAAIyU,EAAO,EAAGzU,GAAK,IAAKA,EAC/B0U,EAAQ1U,GAAK0U,EAAQ1U,EAAI,GAAK6T,EAAM7T,EAAI,GAE1C,IAAM2U,EAAkB,CAAC,IAAK,IAAK,IAAK,KAAM,MACxCC,EACFF,EACKnL,KAAI,SAACjF,EAAQtE,GACZ,IAAM6U,EAAQ,cAAOF,EAAgB3U,GAAE,sBAAcsE,GAC/CwQ,EAAQ9U,IAAM0U,EAAQvU,OAAS,EACjC,cAAOwU,EAAgB3U,EAAI,GAAE,sBAAc2U,EAAgB3U,GAAE,cAAMsE,GACnE,mBAAYqQ,EAAgB3U,GAAE,cAAMsE,GACxC,MAAO,UAAGuQ,EAAK,aAAKC,EAAK,IAC3B,IACC5K,KAAK,IAWd,OATA8J,EAAS,mIAG0BF,EAAS,GAAE,aAAKA,EAAS,GAAE,mDAC7BA,EAAS,GAAE,qCACpCc,EAAsB,iEAIvB,IAAI,EAAA3C,eAAe+B,EAC5B,EAKU,YAAAL,0BAAV,SAAoCE,EAAyDC,GAG3F,IAAIE,EACES,EAAOZ,EAAM1T,OAEfuU,EAAU,KACVD,EAAO,IACTC,EAAU,KAGZA,EAAU,IAAIhS,MAAM+R,EAAO,IACnBA,EAAO,GAAKZ,EAAMY,EAAO,GACjC,IAAK,IAAIzU,EAAIyU,EAAO,EAAGzU,GAAK,IAAKA,EAC/B0U,EAAQ1U,GAAK0U,EAAQ1U,EAAI,GAAK6T,EAAM7T,EAAI,GAE1C,IAAM2U,EAAkB,CAAC,IAAK,IAAK,IAAK,KAAM,KAAM,MAC9CC,EACFF,EACKnL,KAAI,SAACjF,EAAQtE,GACZ,IAAM6U,EAAQ,cAAOF,EAAgB3U,GAAE,sBAAcsE,GAC/CwQ,EAAQ9U,IAAM0U,EAAQvU,OAAS,EACjC,cAAOwU,EAAgB3U,EAAI,GAAE,sBAAc2U,EAAgB3U,GAAE,cAAMsE,GACnE,mBAAYqQ,EAAgB3U,GAAE,cAAMsE,GACxC,MAAO,UAAGuQ,EAAK,aAAKC,EAAK,IAC3B,IACC5K,KAAK,IAWd,OATA8J,EAAS,gIAGyBF,EAAS,GAAE,aAAKA,EAAS,GAAE,kDAC7BA,EAAS,GAAE,oCACpCc,EAAsB,kEAItB,IAAI,EAAA3C,eAAe+B,EAC5B,EAKU,YAAAnC,mBAAV,WACE,IAAMa,EAA2C,CAAC,EAC9CC,EAAW,aACfD,EAAOC,GAAY,IAAI,EAAAV,eAAe,yWAUtCS,EADAC,EAAW,kBACQ,IAAI,EAAAV,eAAe,6RAStCS,EADAC,EAAW,kBACQ,IAAI,EAAAV,eAAe,6VAStCS,EADAC,EAAW,kBACQ,IAAI,EAAAV,eAAe,kZAUtCU,EAAW,gBACX,IAAMM,GAAO,IAAAC,SAAQ5P,KAAKiD,QAAQ0K,UAAUkC,SAK5C,OAJAT,EAAOC,GAAY,IAAI,EAAAV,eAAe,iGAErBgB,EAAK8B,UAAS,uCAExBrC,CACT,EAKU,YAAAZ,0BAAV,sBACQY,EAA2C,CAAC,EAC5CR,EAAe5O,KAAKiD,QAAQ4L,oBAsBlC,OArBA7O,KAAKiD,QAAQyO,YAAYxM,WAAWyM,SAAQ,SAACC,EAAalV,GACxD,IAAMmV,EAAc,EAAK5O,QAAQ6O,oBAAoBpV,GAC/C2S,GAAW,IAAA0C,4CAA2CH,GACxDC,EAAY/C,SACdM,EAAOC,GAAY,EAAK2C,0BAA0B3C,EAAUuC,EAAaC,GAEzEzC,EAAOC,GAAY,EAAK4C,4BAA4B5C,EAAUuC,EAAaC,GAG7E,IAAMK,GAAmB,IAAAC,uDAAsDP,GAC3EC,EAAY3C,cAAcrS,QAAU+R,EAAaM,cAAcrS,SAC7DgV,EAAY/C,SACdM,EAAO8C,GACH,EAAKE,+BAA+BF,EAAkBL,EAAajD,EAAcgD,GAErFxC,EAAO8C,GACH,EAAKG,iCAAiCH,EAAkBL,EAAajD,EAAcgD,GAG7F,IAEOxC,CACT,EAKU,YAAAgD,+BAAV,SACI/C,EAAkBwC,EAA4BjD,EAA6B3S,GAC7E,IAYIqW,EAZEC,EAAUV,EAAY3C,cACtBD,EAAWL,EAAaM,cACxBsD,EAAUvW,EACVwW,GAAiB,IAAAV,4CAA2CS,GAE5DE,EAASH,EAAQ1V,OACjB8V,EAAU1D,EAASpS,OAEnB+V,EAAgB,EAAAC,cAAcC,iBAAiBP,EAAStD,GAExDvQ,GAAO,IAAAqU,mBAAkBJ,GACzBK,EAAWL,EAAUD,EAErBO,GAAS,IAAAC,iBAGbZ,EADa,IAAXI,EACc,GACPC,EAAU,GAAKC,EAAc/V,QAAU,EAChC,cAEA+V,EAAc3M,KAAI,SAAAkN,GAAK,uBAAUF,EAAOE,EAAIH,GAAS,QAA9B,IAAuCpM,KAAK,MAErF,IAAIwM,EAEFA,EADET,EAAU,GAAKD,EAAS,EACF,SAEAH,EAAQtM,KAAI,SAAC8F,EAAGrP,GAAM,uBAAUuW,EAAOvW,EAAIsW,GAArB,IAAkCpM,KAAK,MAGvF,IAAImJ,EAAS,sBAEPsD,EAA2B,IADlB,EAAAC,UAAU5T,KAAK6S,GAGxBgB,EAA6B,IADnB,EAAAD,UAAU5T,KAAKuP,GAG/B,GAAe,IAAXyD,GAAiBW,GAAkBE,GAIhC,GAAIF,IAAkBE,EAEzBxD,EADc,IAAZ4C,EACO,2EAIA,yDAIN,GAAIC,EAAc/V,OAAQ,CAC/B,IAAM2W,EAAOd,EAAS,EAChBe,EAAOf,EAAS,EAElBE,EAAcjW,QAAQ6W,IAAS,GAAKZ,EAAcjW,QAAQ8W,IAAS,EACrE1D,EAAS,8BACA6C,EAAcjW,QAAQ6W,IAAS,EACxCzD,EAAS,2EAEA6C,EAAcjW,QAAQ8W,IAAS,IACxC1D,EAAS,+C,OAvBXA,EAAS,iEA2BX,IAAM2D,EAAsB,yCACDT,EAAON,EAAU,GAAE,6BACjCM,EAAON,EAAU,GAAE,qBAAaM,EAAON,EAAU,GAAE,6BACnDM,EAAON,EAAU,GAAE,uBAE1BjC,EAAS,uBACNrB,EAAQ,yBACX3Q,EAAI,iDACJgV,EAAmB,qBACnBpB,EAAa,wCACMG,EAAc,YAAIW,EAAqB,uBAC1DrD,EAAM,mBAGZ,OAAO,IAAI,EAAApB,eAAe+B,EAAQ,CAAC,+BACrC,EAKU,YAAA2B,iCAAV,SACIhD,EAAkBwC,EAA4BjD,EAA6B3S,GAC7E,IAAMkT,EAAc,CAACP,EAAavO,MAAOuO,EAAaxO,QAChDuT,EAAa,CAAC9B,EAAYxR,MAAOwR,EAAYzR,QAC7CsS,EAASb,EAAY3C,cAAcrS,OACnC8V,EAAU/D,EAAaM,cAAcrS,OACrC0V,EAAUV,EAAY3C,cACtBD,EAAWL,EAAaM,cACxBuD,GAAiB,IAAAV,4CAA2C9V,GAElE,GAAIyW,IAAWC,GAAW,EAAAhC,UAAUC,YAAY+C,EAAYxE,GAAc,CACxE,IAAM,EAAS,4BACHE,EAAQ,kDACSpT,EAAI,wCAGjC,OAAO,IAAI,EAAA0S,eAAe,EAAQ,CAAC,6B,CAGrC,IAGI2D,EAHE5T,GAAO,IAAAqU,mBAAkBJ,GACzBC,EAAgB,EAAAC,cAAcC,iBAAiBP,EAAStD,GACxD+D,EAAWL,EAAUD,EAErBO,GAAS,IAAAC,iBAGbZ,EADa,IAAXI,EACc,GACPC,EAAU,GAAKC,EAAc/V,QAAU,EAChC,cAEA+V,EAAc3M,KAAI,SAAAkN,GAAK,uBAAUF,EAAOE,EAAIH,GAAS,QAA9B,IAAuCpM,KAAK,MAErF,IAAIwM,EAEFA,EADET,EAAU,GAAKD,EAAS,EACF,SAEAb,EAAY3C,cAAcjJ,KAAI,SAAC8F,EAAGrP,GAAM,uBAAUuW,EAAOvW,EAAIsW,GAArB,IAAkCpM,KAAK,MAEzG,IAAM8J,EAAS,0BACHrB,EAAQ,2BACZ3Q,EAAI,mDACJ4T,EAAa,8BACNG,EAAc,YAAIW,EAAqB,yBAGtD,OAAO,IAAI,EAAAzE,eAAe+B,EAAQ,CAAC,+BACrC,EAKU,YAAAsB,0BAAV,SAAoC3C,EAAkBpT,EAAc4V,GAClE,OAAQA,EAAY3C,cAAcrS,QAChC,KAAK,EACH,OAAOmD,KAAK4T,uBAAuBvE,EAAUpT,GAC/C,KAAK,EACH,OAAO+D,KAAK6T,mBAAmBxE,EAAUpT,EAAM4V,GACjD,KAAK,EACH,OAAO7R,KAAK8T,mBAAmBzE,EAAUpT,EAAM4V,GACjD,KAAK,EACH,OAAO7R,KAAK+T,mBAAmB1E,EAAUpT,EAAM4V,GACjD,QACE,OAAO7R,KAAKgU,mBAAmB3E,EAAUpT,EAAM4V,GAErD,EAKU,YAAAI,4BAAV,SAAsC5C,EAAkBpT,EAAc4V,GACpE,IAAMtB,EAAQsB,EAAY3C,cAC1B,OAAQqB,EAAM1T,QACZ,KAAK,EACH,OAAOmD,KAAKiU,yBAAyB5E,EAAUpT,EAAM4V,GACvD,KAAK,EACH,OAAO7R,KAAKkU,qBAAqB7E,EAAUpT,EAAM4V,GACnD,KAAK,EACH,OAAO7R,KAAKmU,qBAAqB9E,EAAUpT,EAAM4V,GACnD,KAAK,EACH,OAAO7R,KAAKoU,qBAAqB/E,EAAUpT,EAAM4V,GACnD,KAAK,EACH,OAAO7R,KAAKqU,qBAAqBhF,EAAUpT,EAAM4V,GACnD,KAAK,EACH,OAAO7R,KAAKsU,qBAAqBjF,EAAUpT,EAAM4V,GACnD,KAAK,EACH,OAAO7R,KAAKuU,qBAAqBlF,EAAUpT,EAAM4V,GACnD,QAEE,MAAM,IAAIpV,MAAM,gCAAyB8T,EAAM1T,OAAM,OAE3D,EAKU,YAAA+W,uBAAV,SAAiCvE,EAAkBpT,GACjD,IAAM0T,GAAO,IAAAC,SAAQ5P,KAAKiD,QAAQ0K,UAAUkC,SACtCa,EAAS,2BACFrB,EAAQ,oCACJM,EAAK8B,UAAS,YAAIxV,EAAI,qCAGvC,OAAO,IAAI,EAAA0S,eAAe+B,EAC5B,EAKU,YAAAmD,mBAAV,SAA6BxE,EAAkBpT,EAAc4V,GAC3D,IAAMrB,EAAW,CAACqB,EAAYxR,MAAOwR,EAAYzR,QAC3CqQ,EAAiB,CAACD,EAAS,GAAIA,EAAS,IACxCb,GAAO,IAAAC,SAAQ5P,KAAKiD,QAAQ0K,UAAUkC,SAOtCa,EALgB,eAAQrB,EAAQ,iEAElCoB,EAAe,GAAE,aAAKA,EAAe,GAAE,mCAChCd,EAAK8B,UAAS,YAAIxV,EAAI,iBAGjC,OAAO,IAAI,EAAA0S,eAAe+B,EAAQ,CAAC,8BACrC,EAKU,YAAAoD,mBAAV,SAA6BzE,EAAkBpT,EAAc4V,GAC3D,IAAMtB,EAAQsB,EAAY3C,cACpBsB,EAAW,CAACqB,EAAYxR,MAAOwR,EAAYzR,QAC3CuP,GAAO,IAAAC,SAAQ5P,KAAKiD,QAAQ0K,UAAUkC,SACtC2E,EAAUhE,EAAS,GACnBiE,EAAUjE,EAAS,GAEzB,GAAgB,MAAZA,GAAoB,EAAAG,UAAUC,YAAYL,EAAOC,GAAW,CAC9D,IAAM,EAAgB,eAAQnB,EAAQ,oFACSoF,EAAO,eAAOD,EAAO,gCACzD7E,EAAK8B,UAAS,YAAIxV,EAAI,mBAGjC,OAAO,IAAI,EAAA0S,eAAe,E,CAE5B,IAAM8B,EAAiBD,EACjBkE,EAAezM,KAAKE,KAAKoI,EAAM,GAAK,GAKpCG,EAJgB,eAAQrB,EAAQ,gEACToB,EAAe,GAAE,aAAKA,EAAe,GAAE,aAAKiE,EAAY,sCAC1E/E,EAAK8B,UAAS,YAAIxV,EAAI,iBAGjC,OAAO,IAAI,EAAA0S,eAAe+B,EAAQ,CAAC,8BACrC,EAKU,YAAAqD,mBAAV,SAA6B1E,EAAkBpT,EAAc4V,GAC3D,IAAMtB,EAAQsB,EAAY3C,cACpBsB,EAAW,CAACqB,EAAYxR,MAAOwR,EAAYzR,QAC3CqQ,EAAiB,CAACD,EAAS,GAAIA,EAAS,IACxCb,GAAO,IAAAC,SAAQ5P,KAAKiD,QAAQ0K,UAAUkC,SAE5C,GAAiB,IAAbU,EAAM,GAAU,CAClB,IAAMoE,EAAgBpE,EAAMqE,MAAM,GAE5BC,GAAgB,IAAAC,mBAAkBvE,EAAOoE,GAGzCI,EAAgCC,KAAKC,MAAMD,KAAKE,UAAUrD,IAChEkD,EAAe7F,cAAgB2F,EAC/B,IAAMM,EAAiBnV,KAAKgS,0BAA0B3C,EAAUpT,EAAM8Y,GAKhE,EAJgB,UAAGI,EAAeC,YAAW,wBAC5C/F,EAAQ,uDACJA,EAAQ,aAAI,IAAAgG,mBAPR,CAAC,IAAK,MAAO,OAFX,CAAC,EAAG,IASqC,gBAG1D,OAAO,IAAI,EAAA1G,eAAe,EAAQwG,EAAeG,a,CAEnD,IAAMd,EAAU/D,EAAe,GACzBgE,EAAUhE,EAAe,GAEzBiE,EAAezM,KAAKE,KAAKoI,EAAM,GAAK,GACpCO,EAAgB4D,EAAezM,KAAKE,KAAKoI,EAAM,GAAK,GAMpDG,EAJgB,eAAQrB,EAAQ,iFAEhCoF,EAAO,aAAKD,EAAO,aAAK1D,EAAa,aAAK4D,EAAY,yCACjD/E,EAAK8B,UAAS,YAAIxV,EAAI,WAEjC,OAAO,IAAI,EAAA0S,eAAe+B,EAAQ,CAAC,8BACrC,EAIU,YAAAsD,mBAAV,SAA6B3E,EAAkBpT,EAAc4V,GAa3D,IAZA,IAAMtB,EAAQsB,EAAY3C,cACpBiC,EAAOZ,EAAM1T,OACb2T,EAAW,CAACqB,EAAYxR,MAAOwR,EAAYzR,QAC3CuP,GAAO,IAAAC,SAAQ5P,KAAKiD,QAAQ0K,UAAUkC,SAEtCY,EAAiB,CAACD,EAAS,GAAIA,EAAS,IACxCgE,EAAU/D,EAAe,GACzBgE,EAAUhE,EAAe,GACzBiE,EAAezM,KAAKE,KAAKoI,EAAMY,EAAO,GAAK,GAC7CL,EAAgB4D,EAAezM,KAAKE,KAAKoI,EAAMY,EAAO,GAAK,GAC3DoE,EAAS,0BACTC,EAAQ,cAAO1E,EAAa,0BAAkB4D,EAAY,gBACrDxD,EAAI,EAAGA,EAAIC,EAAO,EAAGD,IAC5BqE,EAAS,eAAQrE,EAAC,MAAOqE,EACzBzE,GAAiBP,EAAMY,EAAOD,EAAI,GAClCsE,EAAQ,WAAItE,EAAC,cAAMJ,EAAa,OAAQ0E,EAE1C,IAOM9E,EAPgB,eAAQrB,EAAQ,YAAIkG,EAAM,kCAChCC,EAAK,uCACEf,EAAO,8CACAA,EAAO,iEACYA,EAAO,aAAKD,EAAO,4BACzD7E,EAAK8B,UAAS,YAAIxV,EAAI,iBAGjC,OAAO,IAAI,EAAA0S,eAAe+B,EAC5B,EAKU,YAAAuD,yBAAV,SAAmC5E,EAAkBpT,EAAc4V,GAC3D,QAAqB,CAACA,EAAYxR,MAAOwR,EAAYzR,QAAO,GAA3DoU,EAAO,KAAEC,EAAO,KACvB,GAAgB,IAAZD,GAA6B,IAAZC,EAAe,CAClC,IAAM,EAAS,4BACHpF,EAAQ,kDACSpT,EAAI,qCAGjC,OAAO,IAAI,EAAA0S,eAAe,EAAQ,CAAC,6B,CAGrC,IAAM+B,EAAS,0BACHrB,EAAQ,sCACDpT,EAAI,wCAAgCuY,EAAO,aAAKC,EAAO,8CAC7CD,EAAO,aAAKC,EAAO,oBAAYxY,EAAI,8CACnCA,EAAI,6BAGjC,OAAO,IAAI,EAAA0S,eACP+B,EAAQ,CAAC,yBAA0B,4BAA6B,8BACtE,EAKU,YAAAwD,qBAAV,SAA+B7E,EAAkBpT,EAAc4V,GAC7D,IAAM4D,EAAQ5D,EAAYxR,MACpBqV,EAAQ7D,EAAYzR,OAE1B,GAAc,IAAVsV,GAAyB,IAAVD,EAAa,CAC9B,IAAM,EAAS,0BACLpG,EAAQ,yDACSpT,EAAI,iCAG/B,OAAO,IAAI,EAAA0S,eAAe,EAAQ,CAAC,6B,CAGrC,GAAc,IAAV+G,EAAa,CACf,IAAM,EAAS,4BACHrG,EAAQ,4EAC0BoG,EAAK,uDACtBxZ,EAAI,iCAGjC,OAAO,IAAI,EAAA0S,eAAe,EAAQ,CAAC,6B,CAErC,GAAc,IAAV8G,EAAa,CACf,IAAM,EAAS,4BACHpG,EAAQ,iFAC+BqG,EAAK,kDAC3BzZ,EAAI,iCAGjC,OAAO,IAAI,EAAA0S,eAAe,EAAQ,CAAC,6B,CAErC,IAAM+B,EAAS,0BACHrB,EAAQ,yDACSoG,EAAK,aAAKC,EAAK,qDACfzZ,EAAI,6BAGjC,OAAO,IAAI,EAAA0S,eAAe+B,EAAQ,CAAC,yBAA0B,6BAC/D,EAMU,YAAAyD,qBAAV,SAA+B9E,EAAkBpT,EAAc4V,GAC7D,IAAMtB,EAAQsB,EAAY3C,cAGpBsB,EAAW,CAACqB,EAAYzR,OAAQyR,EAAYxR,OAElD,GAAgB,MAAZmQ,GAAoB,EAAAG,UAAUC,YAAYL,EAAOC,GAAW,CAC9D,IAAM,EAAUA,EAAS,GACnB,EAAUA,EAAS,GACnB,EAAS,4BACHnB,EAAQ,wFAC+B,EAAO,eAAO,EAAO,kDAC3CpT,EAAI,iCAGjC,OAAO,IAAI,EAAA0S,eAAe,EAAQ,CAAC,6B,CAG/B,OAAuB,IAAAgH,cAAapF,GAAnCqF,EAAQ,WAAEC,EAAQ,WACnBlB,EAAgBiB,EACtB,GAAIjB,EAAc9X,OAAS0T,EAAM1T,OAAQ,CACvC,IAAMgY,GAAgB,IAAAC,mBAAkBvE,EAAOoE,GAEzCI,EAAgCC,KAAKC,MAAMD,KAAKE,UAAUrD,IAChEkD,EAAe7F,cAAgB2F,EAE/B,IACM,EAAS,sBACT7U,KAAKiS,4BAA4B5C,EAAUpT,EAAM8Y,GAAgBK,YAAW,6BACtE/F,EAAQ,oDACLA,EAAQ,aAAI,IAAAgG,mBAJZ,CAAC,MAAO,OAI8BQ,GAAS,6BAG9D,OAAO,IAAI,EAAAlH,eAAe,EAAQ,CAAC,6B,CAGrC,IAAM6F,EAAUhE,EAAS,GACnBiE,EAAUjE,EAAS,GACzB,GAAgB,IAAZiE,EAAe,CACjB,IAAM,EAAS,4BACHpF,EAAQ,wDACDpT,EAAI,wCAAgCuY,EAAO,aAAKC,EAAO,mEAC1BxY,EAAI,mBAAWsU,EAAM,GAAE,sEAC3BiE,EAAO,kDACtBvY,EAAI,iCAGjC,OAAO,IAAI,EAAA0S,eAAe,EAAQ,CAAC,4BAA6B,8B,CAGlE,GAAgB,IAAZ6F,EAAe,CACjB,IAAM,EAAS,4BACHnF,EAAQ,wDACDpT,EAAI,wCAAgCuY,EAAO,aAAKC,EAAO,mEAC1BxY,EAAI,mBAAWsU,EAAM,GAAE,iEAChCkE,EAAO,uDACjBxY,EAAI,iCAGjC,OAAO,IAAI,EAAA0S,eAAe,EAAQ,CAAC,4BAA6B,8B,CAGlE,IAAM+B,EAAS,0BACHrB,EAAQ,6DACMkB,EAAM,GAAE,mDACLiE,EAAO,aAAKC,EAAO,qDACnBxY,EAAI,6BAGjC,OAAO,IAAI,EAAA0S,eACP+B,EAAQ,CAAC,yBAA0B,4BAA6B,8BACtE,EAMU,YAAA0D,qBAAV,SAA+B/E,EAAkBpT,EAAc4V,GAC7D,IAAMtB,EAAQsB,EAAY3C,cACpB4G,EAAUvF,EAAM,GAAKA,EAAM,GAC3BwF,EAAUxF,EAAM,GAEhB,GAAuB,IAAAoF,cAAapF,GAAnCqF,EAAQ,WAAEC,EAAQ,WACnBlB,EAAgBiB,EACtB,GAAIjB,EAAc9X,OAAS0T,EAAM1T,OAAQ,CACvC,IAAMgY,GAAgB,IAAAC,mBAAkBvE,EAAOoE,GAGzCI,EAAgCC,KAAKC,MAAMD,KAAKE,UAAUrD,IAChEkD,EAAe7F,cAAgB2F,EAC/B,IAAMmB,EAAUhW,KAAKiS,4BAA4B5C,EAAUpT,EAAM8Y,GAE3DkB,EAAUJ,EAASK,UACnB,EAAS,sBACTF,EAAQZ,YAAW,6BACb/F,EAAQ,+DACLA,EAAQ,aAAI,IAAAgG,mBAVZ,CAAC,QAAS,MAAO,OAUqBY,GAAQ,6BAG7D,OAAO,IAAI,EAAAtH,eAAe,EAAQqH,EAAQV,a,CAG5C,IAAMd,EAAU3C,EAAYxR,MACtBoU,EAAU5C,EAAYzR,OACtBsQ,EAAS,4BACDrB,EAAQ,6JAEQyG,EAAO,oBAAYC,EAAO,qDACzBvB,EAAO,aAAKC,EAAO,uDACnBxY,EAAI,+BAGnC,OAAO,IAAI,EAAA0S,eACP+B,EAAQ,CAAC,yBAA0B,4BAA6B,8BACtE,EAMU,YAAA2D,qBAAV,SAA+BhF,EAAkBpT,EAAc4V,GAC7D,IAAMtB,EAAQsB,EAAY3C,cACpBiH,EAAU5F,EAAM,GAChBwF,EAAUxF,EAAM,GAAK4F,EACrBL,EAAUvF,EAAM,GAAKwF,EAsBrBvB,EAAU3C,EAAYxR,MACtBoU,EAAU5C,EAAYzR,OACtBsQ,EAAS,0BACHrB,EAAQ,oFACMyG,EAAO,oBAAYC,EAAO,sCAC/BI,EAAO,qDACC3B,EAAO,aAAKC,EAAO,qDACnBxY,EAAI,6BAGjC,OAAO,IAAI,EAAA0S,eAAe+B,EAAQ,CAAC,yBAA0B,6BAC/D,EAKU,YAAA4D,qBAAV,SAA+BjF,EAAkBpT,EAAc4V,GAC7D,IAAMtB,EAAQsB,EAAY3C,cACpBkH,EAAU7F,EAAM,GAChB4F,EAAU5F,EAAM,GAAK6F,EACrBL,EAAUxF,EAAM,GAAK4F,EACrBL,EAAUvF,EAAM,GAAKwF,EAErB,GAAuB,IAAAJ,cAAapF,GAAnCqF,EAAQ,WAAEC,EAAQ,WACzB,GAAID,EAAS/Y,OAAS0T,EAAM1T,OAAQ,CAClC,IAAMgY,GAAgB,IAAAC,mBAAkBvE,EAAOqF,GAGzCb,EAAgCC,KAAKC,MAAMD,KAAKE,UAAUrD,IAChEkD,EAAe7F,cAAgB2F,EAE/B,IAAM,EAAS,sBACT7U,KAAKiS,4BAA4B5C,EAAUpT,EAAM8Y,GAAgBK,YAAW,6BACtE/F,EAAQ,uFACLA,EAAQ,aAAI,IAAAgG,mBARZ,CAAC,MAAO,MAAO,QAAS,SAAU,UAQIQ,GAAS,6BAG9D,OAAO,IAAI,EAAAlH,eAAe,EAAQ,CAAC,4BAA6B,0B,CAGlE,IAAM6F,EAAU3C,EAAYxR,MACtBoU,EAAU5C,EAAYzR,OACtBsQ,EAAS,0BACHrB,EAAQ,gGACMyG,EAAO,oBAAYC,EAAO,sBAAcI,EAAO,kCACxDC,EAAO,sDACK5B,EAAO,aAAKC,EAAO,qDACnBxY,EAAI,6BAGjC,OAAO,IAAI,EAAA0S,eAAe+B,EAAQ,CAAC,4BAA6B,0BAClE,EAKU,YAAA6D,qBAAV,SAA+BlF,EAAkBpT,EAAc4V,GAC7D,IAAMtB,EAAQsB,EAAY3C,cACpBmH,EAAU9F,EAAM,GAChB6F,EAAU7F,EAAM,GAAK8F,EACrBF,EAAU5F,EAAM,GAAK6F,EACrBL,EAAUxF,EAAM,GAAK4F,EACrBL,EAAUvF,EAAM,GAAKwF,EAErB,GAAuB,IAAAJ,cAAapF,GAAnCqF,EAAQ,WAAEC,EAAQ,WACzB,GAAID,EAAS/Y,OAAS0T,EAAM1T,OAAQ,CAClC,IAAMgY,GAAgB,IAAAC,mBAAkBvE,EAAOqF,GAGzCb,EAAgCC,KAAKC,MAAMD,KAAKE,UAAUrD,IAChEkD,EAAe7F,cAAgB2F,EAE/B,IAAM,EAAS,wBACP7U,KAAKiS,4BAA4B5C,EAAUpT,EAAM8Y,GAAgBK,YAAW,+BACtE/F,EAAQ,oHAELA,EAAQ,aAAI,IAAAgG,mBATd,CAAC,MAAO,MAAO,QAAS,SAAU,SAAU,UASJQ,GAAS,iCAGhE,OAAO,IAAI,EAAAlH,eAAe,EAAQ,CAAC,4BAA6B,0B,CAGlE,IAAM6F,EAAU3C,EAAYxR,MACtBoU,EAAU5C,EAAYzR,OACtBsQ,EAAS,4BACDrB,EAAQ,2HAEMyG,EAAO,oBAAYC,EAAO,sBAAcI,EAAO,oCACxDC,EAAO,uBAAeC,EAAO,wDACjB7B,EAAO,aAAKC,EAAO,uDACnBxY,EAAI,iCAGnC,OAAO,IAAI,EAAA0S,eACP+B,EAAQ,CAAC,yBAA0B,4BAA6B,8BACtE,EAQU,YAAArC,MAAV,WAQE,IAPA,IAAM0B,EAAS/P,KAAKiD,QAAQ4L,oBACtBsC,EAAOpB,EAAOQ,MAAM1T,OACpBuU,EAAUrB,EAAOqB,QACjBkF,EAASvG,EAAO1P,MAChBkW,EAASxG,EAAO3P,OAEhBoW,EAAe,GACZ9Z,EAAI,EAAGA,EAAIyU,EAAO,IAAKzU,EAC9B8Z,EAAa1Z,KAAK,sBACZJ,EAAC,wBAAgB0U,EAAQ1U,GAAE,MACjC8Z,EAAa1Z,KAAK,gCACFJ,EAAC,eAAO0U,EAAQ1U,GAAE,MAEpC8Z,EAAa1Z,KAAK,sBACVqU,EAAO,EAAC,gBAChB,IAAMsF,EAAO,uDAC4BtF,EAAI,gEACAmF,EAAM,aAAKC,EAAM,uBACxDC,EAAa5P,KAAK,IAAG,6DAEUuK,EAAI,yBACnCqF,EAAa5P,KAAK,IAAG,mBAG3B,MAAO,CAACyH,MAAO,IAAI,EAAAM,eAAe8H,EAAM,CAAC,+BAC3C,EAOU,YAAAnI,UAAV,sBACQc,EAA2C,CAAC,EAclD,OAbApP,KAAKiD,QAAQyO,YAAYxM,WAAWyM,SAAQ,SAAC1V,EAAMS,GACjD,IAAMga,EAAS,EAAKzT,QAAQ6O,oBAAoBpV,GAE1CyU,GADQuF,EAAOxH,cAAcrS,OAAS,EAAI6Z,EAAOxH,cAAgBwH,EAAOnG,OAC3D1T,OACfwS,EAAW,WAAIpT,GACnBmT,EAAOC,GAAY,IAAI,EAAAV,eACnB,EAAKgI,mBAAmB1a,EAAMkV,EAAMuF,EAAOrW,MAAOqW,EAAOtW,QAAQ,GACjE,CAAC,oCAA6BiP,GAAY,6BAA8B,8BAE5ED,EADAC,GAAsB,MACH,IAAI,EAAAV,eACnB,EAAKgI,mBAAmB1a,EAAMkV,EAAMuF,EAAOrW,MAAOqW,EAAOtW,QAAQ,GACjE,CAAC,oCAA6BiP,GAAY,6BAA8B,6BAC9E,IACOD,CACT,EAQU,YAAAuH,mBAAV,SAA6BC,EAAiBzF,EAAc9Q,EAAeD,EAAgByW,GAEzF,IAAI5a,EAAO,WAAI2a,GACXC,IACF5a,GAAc,MAEhB,IAAM0T,GAAO,IAAAC,SAAQ5P,KAAKiD,QAAQ0K,UAAUkC,SAC5C,MAAO,0BACK5T,EAAI,kBAAUkV,EAAI,uDACMlV,EAAI,gEACKoE,EAAK,aAAKD,EAAM,uDACvBuP,EAAK8B,UAAS,YAAImF,EAAO,4DAIjE,EASU,YAAAE,mBAAV,SAA6BF,EAAiBzF,EAAc9Q,EAAeD,EAAgByW,GAEzF,IAAI5a,EAAO,WAAI2a,EAAO,SAClBC,IACF5a,GAAc,MAEhB,IAAM0T,GAAO,IAAAC,SAAQ5P,KAAKiD,QAAQ0K,UAAUkC,SAC5C,MAAO,yBACI5T,EAAI,kBAAUkV,EAAI,wDACQyF,EAAO,gEACCvW,EAAK,aAAKD,EAAM,gCAC9CuP,EAAK8B,UAAS,YAAImF,EAAO,kCAG1C,EACF,EA1yCA,CAAmC,EAAAG,SAAtB,EAAAC,cAAAA,C,kCCRb,IAAYC,E,oKAAAA,EAAA,EAAAA,eAAA,EAAAA,aAAY,KACtB,6BACA,+BAaW,EAAAC,YACX,SACWvJ,EAAgC+D,EAAiCI,EACjEjD,GADA,KAAAlB,UAAAA,EAAgC,KAAA+D,YAAAA,EAAiC,KAAAI,oBAAAA,EACjE,KAAAjD,oBAAAA,CAAqC,EAE5B,EAAAkI,QACpB,SAAmB9T,GAAA,KAAAA,QAAAA,CAAuB,EAM/B,EAAA0L,eACX,SAAmByG,EAA4BE,GAA5B,KAAAF,YAAAA,EAA4B,KAAAE,aAAAA,CAA0B,EAK3E,iBAGE,WAAmBrZ,EAAcmZ,EAAsBE,GAApC,KAAArZ,KAAAA,EAEf+D,KAAKsV,aADHA,GAGkB,GAGlBF,IACFpV,KAAKoV,YAAcA,EAEvB,CAMF,OALE,YAAA+B,cAAA,SAAcC,GACRA,GACFpX,KAAKsV,aAAaxY,KAAKsa,EAE3B,EACF,EAnBA,GAAa,EAAAC,mBAAAA,EAsBb,8BA0DA,QAzDS,EAAAC,mBAAP,SAA0BC,GACxB,IAAKA,GAA0B,IAAjBA,EAAM1a,OAClB,MAAO,GAGT,GAAqB,IAAjB0a,EAAM1a,OACR,OAAO0a,EAGT,IAAMC,EAAa,IAAIC,IACjBC,EAAmB,IAAID,IACvBrI,EAAS,IAAIhQ,MAGnB,OADAY,KAAK2X,mBAAmBJ,EAAOC,EAAYE,EAAkBtI,GACtDA,CACT,EAEe,EAAAuI,mBAAf,SACIC,EAAkCJ,EAAyBE,EAC3DtI,GACF,IAAK,IAAI1S,EAAI,EAAGA,EAAIkb,EAAW/a,SAAUH,EACvCsD,KAAK6X,YAAYD,EAAWlb,GAAI8a,EAAYE,EAAkBtI,EAElE,EAEe,EAAAyI,YAAf,SACItc,EAA0Bic,EAAyBE,EAA+BtI,GAEpF,GAAK7T,IAAQmc,EAAiBI,IAAIvc,EAAKU,MAAvC,CAKA,GAAIub,EAAWM,IAAIvc,EAAKU,MACtB,MAAM,IAAIQ,MAAM,oFAIlB+a,EAAWO,IAAIxc,EAAKU,MAGpB,IAAMqZ,EAAe/Z,EAAK+Z,aAC1B,GAAIA,GAAgBA,EAAazY,OAAS,EACxC,IAAK,IAAIH,EAAI,EAAGA,EAAI4Y,EAAazY,SAAUH,EACzCsD,KAAK6X,YAAYvC,EAAa5Y,GAAI8a,EAAYE,EAAkBtI,GAKpEA,EAAOtS,KAAKvB,GAGZmc,EAAiBK,IAAIxc,EAAKU,MAG1Bub,EAAW9N,OAAOnO,EAAKU,K,CACzB,EACF,EA1DA,GAAa,EAAA+b,4BAAAA,C,kzBC3Db,cAMA,cACE,WAAY/U,G,OACV,YAAMA,IAAQ,IAChB,CAsFF,OAzFqC,OAInC,YAAAiL,aAAA,WACE,OAAO,EAAP,KAAWlO,KAAKiY,iBAAoBjY,KAAKkY,gBAC3C,EACA,YAAAxJ,eAAA,WACE,MAAO,CAAC,CACV,EACU,YAAAuJ,cAAV,WACE,MAAO,CACLE,OAAQ,IAAI,EAAAxJ,eAAe,iGAK/B,EACU,YAAAuJ,cAAV,WACE,MAAO,CACLE,OAAQ,IAAI,EAAAzJ,eAAe,oFAK/B,EAKU,YAAA0J,YAAV,WACE,IAAMC,EAAaC,EAAgBC,iBAAmB,uBAAyB,GAC/E,MAAO,CACLL,OAAQ,IAAI,EAAAxJ,eAAe,ymBAYvB2J,EAAU,mHAMlB,EAKU,YAAAG,YAAV,WACE,IAAMH,EAAaC,EAAgBC,iBAAmB,uBAAyB,GAC/E,MAAO,CACLJ,OAAQ,IAAI,EAAAzJ,eAAe,8JAGrB2J,EAAU,sYASpB,EAKO,EAAAE,eAAP,WACE,IAAMtH,EAAI,IAAIvL,YAAY,GACpB+S,EAAI,IAAIxa,YAAYgT,GACpByH,EAAI,IAAI/a,WAAWsT,GAEzB,GADAwH,EAAE,GAAK,WACM,MAATC,EAAE,GACJ,OAAO,EAET,GAAa,MAATA,EAAE,GACJ,OAAO,EAET,MAAM,IAAIlc,MAAM,qBAClB,EACF,EAzFA,CAAqC,EAAAsa,SAAxB,EAAAwB,gBAAAA,C,mzBCNb,cACA,UAOA,cACE,WAAYtV,G,OACV,YAAMA,IAAQ,IAChB,CA8BF,OAjCsC,OAIpC,YAAAiL,aAAA,WACE,OAAO,EAAP,KAAWlO,KAAK4Y,gBAAmB5Y,KAAK6Y,kBAC1C,EACA,YAAAnK,eAAA,WACE,MAAO,CAAC,CACV,EACU,YAAAkK,aAAV,WACE,IAAMjJ,GAAO,IAAAC,SAAQ5P,KAAKiD,QAAQ0K,UAAUkC,SAC5C,MAAO,CACL+I,aAAc,IAAI,EAAAjK,eACd,kEAEIgB,EAAKI,OAAM,0CAGf,CAAC,oBAET,EACU,YAAA8I,gBAAV,WACE,MAAO,CACLA,gBAAiB,IAAI,EAAAlK,eACjB,wGAKA,CAAC,oBAET,EACF,EAjCA,CAAsC,EAAAoI,SAAzB,EAAA+B,iBAAAA,C,2GCRb,IAAMC,EAAwB,qFAK9B,0BAA+BC,GAG7B,IAFA,IACIC,EADEC,EAAiG,CAAC,EAEhD,QAAhDD,EAAQF,EAAsBI,KAAKH,KAAmB,CAC5D,IAAMzD,EAAS0D,EAAM,GACDG,MAAM,KACNnT,KAAI,SAAA8F,GACH,IAAMsN,EAAStN,EAAEuN,OAAOF,MAAM,KAC9B,OAAIC,GAA4B,IAAlBA,EAAOxc,OACZ,CAAC6B,KAAM2a,EAAO,GAAIpd,KAAMod,EAAO,IAEjC,IACT,IACCE,QAAO,SAAAtU,GAAK,OAAM,OAANA,CAAA,IAChCiU,EAAWD,EAAM,IAAM,CAAC1D,OAAM,EAAEkB,KAAMwC,EAAM,G,CAE9C,IAAK,IAAM,KAAQC,EAGjB,IAFA,IAAMM,EArBc,6DAqBgBC,QAAQ,WAAY,GAClDC,EAAQ,IAAIC,OAAOH,EAAa,M,aAEpC,IAAM9a,EAAOua,EAAM,GACbW,EAAWX,EAAM,GACjB1D,EAAS0D,EAAM,GAAGG,MAAM,KACxBS,EAAW,EAAS,UAAGnb,EAAI,YAAIkb,EAAQ,KAAM,GAC/CE,EAAkBZ,EAAW,GAAMzC,KACnCsD,EAAiB,GACrBb,EAAW,GAAM3D,OAAO5D,SAAQ,SAAC1M,EAAGvI,GAC9BuI,IACF8U,GAAkB,UAAG9U,EAAEvG,KAAI,YAAIuG,EAAEhJ,KAAI,cAAMsZ,EAAO7Y,GAAE,OAExD,IAEAod,GADAA,EAAU,UAAGC,EAAc,cAAMD,IACfL,QAAQ,SAAU,UAAGG,EAAQ,QAC/C,IAAMI,EAAc,kBAClBH,EAAQ,8BAENC,EAAO,qBAGXd,EAASA,EAAOS,QAAQR,EAAM,GAAIe,E,EApBI,QAAhCf,EAAQS,EAAMP,KAAKH,K,IAwB7B,OADAA,EAASA,EAAOS,QAAQV,EAAuB,GAEjD,C,obCjDA,cACA,UACA,UACA,UAYA,aAKE,WACIpL,EAAyB+D,EAA0BI,EACnDjD,GAFJ,WAHS,KAAAoL,KAAkC,CAAC,EACnC,KAAAC,8BAA6E,CAAC,EAKrFla,KAAKiD,QAAU,IAAI,EAAAiU,YAAYvJ,EAAW+D,EAAaI,EAAqBjD,GAG5EvR,OAAO6c,KAAK,EAAAC,cAAczI,SAAQ,SAAC1V,GACjC,IAAMoe,EAAM,IAAI,EAAAD,aAAane,GAAM,EAAKgH,SACxC,EAAKgX,KAAKhe,GAAQoe,CACpB,IAGA,IAAMpU,EAAMjG,KAAKka,8BACjB,IAAK,IAAMI,KAAWta,KAAKia,KAAM,CAC/B,IACMM,EADMva,KAAKia,KAAKK,GACIpM,eAC1B,IAAK,IAAM8H,KAAWuE,EAAe,CACnC,IAAMjV,EAAMgV,EAAU,IAAMtE,EACxBwE,OAAW,EACXvU,EAAIX,IACNkV,EAAcvU,EAAIX,IACN8P,YAAcmF,EAAcvE,GAASZ,aAEjDoF,EAAc,IAAI,EAAAnD,mBAAmB/R,EAAKiV,EAAcvE,GAASZ,aACjEnP,EAAIX,GAAOkV,GAEb,IAAMlF,EAAeiF,EAAcvE,GAASV,aAC5C,GAAIA,EACF,IAAK,IAAI5Y,EAAI,EAAGA,EAAI4Y,EAAazY,SAAUH,EACzC,GAAKuJ,EAAIqP,EAAa5Y,IAKpB8d,EAAYrD,cAAclR,EAAIqP,EAAa5Y,SALlB,CACzB,IAAM0a,EAAO,IAAI,EAAAC,mBAAmB/B,EAAa5Y,IACjDuJ,EAAIqP,EAAa5Y,IAAM0a,EACvBoD,EAAYrD,cAAcC,E,GAQtC,CAmEF,OAjEE,YAAAqD,WAAA,WACE,IAAM/I,EAAc1R,KAAKiD,QAAQyO,YAC7BhB,EAASgB,EAAYgJ,aAWzB,OARK1a,KAAKiD,QAAQyO,YAAYiJ,UAC5BjK,EAAS,UAAGA,EAAM,oBAChB,IAAAkK,0BAAyB5a,KAAKiD,QAAQ0K,UAAUkC,QAAS7P,KAAKiD,QAAQ4L,oBAAoB0B,MAAM1T,UAGpG6T,GAAS,IAAAmK,gBAAenK,GAGjB,WAAG,IAAAoK,uBAAsB9a,KAAKiD,QAAQ0K,UAAUkC,SAAQ,iBAC7D7P,KAAK+a,YAAYrJ,EAAYxM,WAAYwM,EAAYsJ,WAAU,iBAC/Dhb,KAAKib,WAAWvK,GAAO,iBACvBA,EACJ,EAEU,YAAAuK,WAAV,SAAqBjC,GACnB,IAAMkC,EAAmBlb,KAAKmb,kCAAkCnC,GAEhE,GAAgC,IAA5BkC,EAAiBre,OACnB,MAAO,GAIT,IADA,IAAIue,EAAW,GACN1e,EAAI,EAAGA,EAAIwe,EAAiBre,SAAUH,EAAG,CAChD,IAAIwe,EAAiBxe,GAAG0Y,YAGtB,MAAM,IAAI3Y,MAAM,qDAA8Cye,EAAiBxe,GAAGT,OAFlFmf,GAAYF,EAAiBxe,GAAG0Y,YAAc,I,CAMlD,OAAOgG,CACT,EACQ,YAAAD,kCAAR,SAA0CnC,GAA1C,WACQzB,EAA8B,GASpC,OAPAja,OAAO6c,KAAKna,KAAKka,+BAA+BvI,SAAQ,SAAA0J,GACtD,IAAMrF,EAAUqF,EAAgBjC,MAAM,KAAK,IACV,IAA7BJ,EAAOrc,QAAQqZ,IACjBuB,EAAMza,KAAK,EAAKod,8BAA8BmB,GAElD,IAEO,EAAArD,4BAA4BV,mBAAmBC,EACxD,EAEU,YAAAwD,YAAV,SAAsBO,EAAqBN,G,YACnCO,EAAyB,GAC/B,GAAID,E,IACF,IAAsB,QAAAA,GAAQ,8BAAE,CAA3B,IAAME,EAAO,QAChBD,EAAaze,KAAK,4BAAqB0e,EAAO,K,mGAGlD,GAAIR,E,IACF,IAAuB,QAAAA,GAAS,8BAAE,CAA7B,IAAMpB,EAAQ,QACjB2B,EAAaze,KACT,kBAAW8c,EAASlb,KAAI,YAAIkb,EAAS3d,MAAI,OAAG2d,EAAS6B,YAAc,WAAI7B,EAAS6B,YAAW,KAAM,GAAE,K,mGAG3G,OAAOF,EAAa3U,KAAK,KAC3B,EACF,EAhHA,GAAa,EAAA8U,iBAAAA,C,2GCfb,cAEA,UACA,UACA,UACA,UAEa,EAAAtB,aAAwE,CACnF,SAAY,EAAA7B,gBACZ,UAAa,EAAAO,iBACb,IAAO,EAAA6C,WACP,WAAc,EAAAC,kBACd,YAAe,EAAA5E,c,ozBCZjB,cAMA,cACE,WAAY/T,G,OACV,YAAMA,IAAQ,IAChB,CAyJF,OA5JuC,OAIrC,YAAAiL,aAAA,WACE,OAAO,EAAP,WACKlO,KAAK6b,cACL7b,KAAK8b,oBACL9b,KAAK+b,mBACL/b,KAAKgc,mBACLhc,KAAKic,mBAEZ,EACA,YAAAvN,eAAA,WACE,MAAO,CAAC,CACV,EACU,YAAAmN,WAAV,sBACQK,EAAalc,KAAKiD,QAAQ4L,oBAAoB0B,MAAM1T,OACpDuS,EAA2C,CAAC,EAqBlD,OApBApP,KAAKiD,QAAQyO,YAAYxM,WAAWyM,SAAQ,SAAC1V,EAAMS,GACjD,IAAM6T,EAAQ,EAAKtN,QAAQ6O,oBAAoBpV,GAAGwS,cAClD,GAAIqB,EAAM1T,QAAUqf,EAAY,CAK9B,IAJA,IAAM/K,EAAOZ,EAAM1T,OACbsf,EAAYD,EAAa/K,EACzB9B,EAAW,uBAAgBpT,GAC7BmgB,EAAQ,GACH,EAAI,EAAG,EAAIjL,IAAQ,EAC1BiL,GAAS,kCACK,EAAC,6CAAqCD,EAAY,EAAC,eAAO5L,EAAM,GAAE,sBAGlF,IAAMkG,EAAO,yBACNpH,EAAQ,gCAAwB6M,EAAU,kCAA0B/K,EAAI,2BAC3EiL,EAAK,yBAGThN,EAAOC,GAAY,IAAI,EAAAV,eAAe8H,E,CAE1C,IACOrH,CACT,EACU,YAAA0M,iBAAV,sBACQI,EAAalc,KAAKiD,QAAQ4L,oBAAoB0B,MAAM1T,OACpDuS,EAA2C,CAAC,EAuBlD,OAtBApP,KAAKiD,QAAQyO,YAAYxM,WAAWyM,SAAQ,SAAC1V,EAAMS,GACjD,IAAM6T,EAAQ,EAAKtN,QAAQ6O,oBAAoBpV,GAAG6T,MAClD,KAAMA,EAAM1T,OAAS,GAAK0T,EAAM1T,OAASqf,GAAa,CAKpD,IAJA,IAAM/K,EAAOZ,EAAM1T,OACbsf,EAAYD,EAAa/K,EACzB9B,EAAW,6BAAsBpT,GACnCmgB,EAAQ,GACH,EAAI,EAAG,EAAIjL,EAAO,IAAK,EAC9BiL,GAAS,kCACK,EAAC,6CAAqCD,EAAY,EAAC,eAAO5L,EAAM,GAAE,sBAGlF,IAAMkG,EAAO,yBACNpH,EAAQ,+BAAuB6M,EAAU,kCAA0B/K,EAAI,2BAC1EiL,EAAK,mCACOjL,EAAO,EAAC,8BAAsB+K,EAAa,EAAC,qCAC5C/K,EAAO,EAAC,8BAAsB+K,EAAa,EAAC,2BAG5D9M,EAAOC,GAAY,IAAI,EAAAV,eAAe8H,E,CAE1C,IACOrH,CACT,EACU,YAAA4M,gBAAV,sBACQ5M,EAA2C,CAAC,EAWlD,OAVApP,KAAKiD,QAAQyO,YAAYxM,WAAWyM,SAAQ,SAAC1V,EAAMS,GACjD,IAAM6T,EAAQ,EAAKtN,QAAQ6O,oBAAoBpV,GAAG6T,MAC5Ca,EAAU,EAAKnO,QAAQ6O,oBAAoBpV,GAAG0U,QAC9CD,EAAOZ,EAAM1T,OACfwS,EAAW,0BAAmBpT,GAClCmT,EAAOC,GAAY,IAAI,EAAAV,eAAeiN,EAAkBS,oBAAoBhN,EAAU8B,EAAMC,IAC5F/B,EAAW,0BAAmBpT,EAAI,MAClCmT,EAAOC,GACH,IAAI,EAAAV,eAAeiN,EAAkBS,oBAAoBhN,EAAU8B,EAAMC,EAAQwD,QAAQsB,WAC/F,IACO9G,CACT,EACO,EAAAiN,oBAAP,SAA2BpgB,EAAckV,EAAcC,GAErD,IADA,IAAIgL,EAAQ,GACH1f,EAAIyU,EAAO,EAAGzU,GAAK,IAAKA,EAC/B0f,GAAS,sCACa1f,EAAC,eAAO0U,EAAQ1U,GAAE,eAG1C,MAAO,sBACCT,EAAI,wBAAgBkV,EAAI,kDAE1BiL,EAAK,4CAIb,EACU,YAAAL,gBAAV,sBACQ3M,EAA2C,CAAC,EAWlD,OAVApP,KAAKiD,QAAQyO,YAAYxM,WAAWyM,SAAQ,SAAC1V,EAAMS,GACjD,IAAM6T,EAAQ,EAAKtN,QAAQ6O,oBAAoBpV,GAAG6T,MAC5Ca,EAAU,EAAKnO,QAAQ6O,oBAAoBpV,GAAG0U,QAC9CD,EAAOZ,EAAM1T,OACfwS,EAAW,0BAAmBpT,GAClCmT,EAAOC,GAAY,IAAI,EAAAV,eAAeiN,EAAkBU,sBAAsBjN,EAAU8B,EAAMC,IAC9F/B,EAAW,0BAAmBpT,EAAI,MAClCmT,EAAOC,GACH,IAAI,EAAAV,eAAeiN,EAAkBU,sBAAsBjN,EAAU8B,EAAMC,EAAQwD,QAAQsB,WACjG,IACO9G,CACT,EACO,EAAAkN,sBAAP,SAA6BrgB,EAAckV,EAAcC,GAEvD,IADA,IAAMoF,EAAe,GACZ9Z,EAAI,EAAGA,EAAIyU,EAAO,IAAKzU,EAC9B8Z,EAAa1Z,KAAK,0BACRJ,EAAC,wBAAgB0U,EAAQ1U,GAAE,MACrC8Z,EAAa1Z,KAAK,sCACIJ,EAAC,eAAO0U,EAAQ1U,GAAE,MAI1C,OAFA8Z,EAAa1Z,KAAK,0BACNqU,EAAO,EAAC,gBACb,uBACElV,EAAI,wCAAgCkV,EAAI,yBAC3CqF,EAAa5P,KAAK,IAAG,oBAG7B,EACU,YAAAqV,iBAAV,sBACQ7M,EAA2C,CAAC,EA0BlD,OAzBApP,KAAKiD,QAAQyO,YAAYxM,WAAWyM,SAAQ,SAAC1V,EAAMS,GAKjD,IAJA,IAAM6T,EAAQ,EAAKtN,QAAQ6O,oBAAoBpV,GAAG6T,MAC5CY,EAAOZ,EAAM1T,OACbwS,EAAW,2BAAoBpT,GACjCsgB,EAAY,GACP,EAAI,EAAG,EAAIpL,IAAQ,EAC1BoL,GAAa,0BACL,EAAC,eAAOhM,EAAM,GAAE,KAE1B,IAAMkG,EAAO,yBACJpH,EAAQ,sCAA8B8B,EAAI,qCACnCA,EAAI,yBACdoL,EAAS,oCACGpL,EAAI,uOAUtB/B,EAAOC,GAAY,IAAI,EAAAV,eAAe8H,EACxC,IACOrH,CACT,EACF,EA5JA,CAAuC,EAAA2H,SAA1B,EAAA6E,kBAAAA,C,+KCOb,IAAMY,EAAoB,CACxB3M,QAAS,GACTrH,UAAW,YACXiU,cAAe,UACfC,YAAa,UACbjL,UAAW,YACX1B,OAAQ,eACR4M,kBAAmB,IAEfC,EAAoB,CACxB/M,QAAS,kBACTrH,UAAW,KACXiU,cAAe,MACfC,YAAa,KACbjL,UAAW,UACX1B,OAAQ,cACR4M,kBAAmB,yBAGrB,SAAgB/M,EAAQC,GACtB,OAAmB,IAAZA,EAAgB2M,EAAcI,CACvC,CAFA,YAIA,iCAAsC/M,GACpC,IAAMF,EAAOC,EAAQC,GACrB,MAAO,UAAGF,EAAKE,QAAO,iDAEhBF,EAAKnH,UAAS,kCACdmH,EAAKnH,UAAS,wCAEdmH,EAAK8M,cAAa,6IAO1B,EAEA,iCAAsC5M,GACpC,IAAMF,EAAOC,EAAQC,GACrB,MAAO,UAAGF,EAAKE,QAAO,uGAIlBF,EAAK+M,YAAW,iCAChB/M,EAAKgN,kBAAiB,qZA4B5B,EAEA,oCAAyC9M,EAAcgN,GACrD,IAAMlN,EAAOC,EAAQC,GACrB,MAAO,6CAESgN,EAAiB,8FAG7BlN,EAAKI,OAAM,sBAGjB,C,6yBCnGA,cAOA,cACE,WAAY9M,G,OACV,YAAMA,IAAQ,IAChB,CAmGF,OAtGgC,OAI9B,YAAAyL,eAAA,WACE,MAAO,CAAC,CACV,EACA,YAAAR,aAAA,WACE,OAAO,EAAP,SAAWlO,KAAK8c,sBAAyB9c,KAAK+c,WAAc/c,KAAKgd,cAAiBhd,KAAKid,aACzF,EACU,YAAAH,mBAAV,WACE,IACM3L,EADenR,KAAKiD,QAAQ4L,oBACR0B,MAAM1T,OAC1BqgB,EAAmC,CAACnF,IAAK,KAAMoF,IAAK,KAAMC,IAAK,KAAMC,IAAK,MAC1EjO,EAA2C,CAAC,EAClD,IAAK,IAAM,KAAQ8N,EAAQ,CAGzB,IAFA,IAAMI,EAAQ,UAAG,EAAI,OACjBC,EAAkB,GACb7gB,EAAI,EAAGA,EAAIyU,IAAQzU,EAC1B6gB,GAAmB,2BACV7gB,EAAC,aAAKwgB,EAAO,GAAK,gBAAQxgB,EAAC,kBAGtC,IAAM+Z,EAAO,yBACJ6G,EAAK,oBAAYnM,EAAI,2BAAmBA,EAAI,2BAC/CoM,EAAe,yBAGrBnO,EAAOkO,GAAS,IAAI,EAAA3O,eAAe8H,E,CAGrC,OAAOrH,CACT,EACU,YAAA2N,QAAV,WAIE,IAHA,IACM5L,EADenR,KAAKiD,QAAQ4L,oBACR0B,MAAM1T,OAC5B0gB,EAAkB,GACb7gB,EAAI,EAAGA,EAAIyU,IAAQzU,EAC1B6gB,GAAmB,yBACV7gB,EAAC,mBAAWA,EAAC,gBAGxB,IAAM+Z,EAAO,uCACYtF,EAAI,2BAAmBA,EAAI,yBAC9CoM,EAAe,qBAGrB,MAAO,CAACR,QAAS,IAAI,EAAApO,eAAe8H,GACtC,EAEU,YAAAuG,WAAV,WASE,IARA,IACM7L,EADenR,KAAKiD,QAAQ4L,oBACR0B,MAAM1T,OAC5Buf,EAAQ,sDAEKjL,EAAI,2EAIZzU,EAAI,EAAGA,EAAIyU,EAAO,IAAKzU,EAC9B0f,GAAS,sCACa1f,EAAC,4BACbA,EAAC,4BAGb0f,GAAS,wCAEGjL,EAAO,EAAC,wBAEpB,IAAMsF,EAAO,4CACiBtF,EAAI,+CAC5BiL,EAAK,uBAGX,MAAO,CAACY,WAAY,IAAI,EAAArO,eAAe8H,GACzC,EACU,YAAAwG,WAAV,WASE,IARA,IACM9L,EADenR,KAAKiD,QAAQ4L,oBACR0B,MAAM1T,OAC5Buf,EAAQ,uDAEMjL,EAAI,wEAIbzU,EAAI,EAAGA,EAAIyU,EAAO,IAAKzU,EAC9B0f,GAAS,sCACa1f,EAAC,mCACNA,EAAC,cAGpB0f,GAAS,+CAEUjL,EAAO,EAAC,gBAE3B,IAAMsF,EAAO,uCACYtF,EAAI,oCACvBiL,EAAK,mBAGX,MAAO,CAACa,WAAY,IAAI,EAAAtO,eAAe8H,GACzC,EACF,EAtGA,CAAgC,EAAAM,SAAnB,EAAA4E,WAAAA,C,6uDCNb,cACA,UACA,UAEA,OACA,UACA,UACA,SAGA,UACA,UAeA,aAGE,WAAmB1U,GAAA,KAAAA,QAAAA,EACjBjH,KAAKwd,uBAAyB,IAAI9f,IAClCsC,KAAKyd,yBAA2B,IAAI/f,GACtC,CAsRF,OAjRE,YAAAggB,+BAAA,SAA+BnN,EAA0BoN,GACvD,OAAO,IAAAD,gCAA+B1d,KAAKiH,QAAQ2W,eAAgBrN,EAAOoN,EAC5E,EAEA,YAAAE,eAAA,SAAeC,EAAwCC,GACrD,GAAIA,EAAOlhB,OAASihB,EAAQ5Y,WAAWrI,OACrC,MAAM,IAAIJ,MAAM,0CAAmCqhB,EAAQ5Y,WAAWrI,OAAM,MAE9E,GAAIihB,EAAQ5Y,WAAWrI,SAAWihB,EAAQE,WAAWnhB,OACnD,MAAM,IAAIJ,MAAM,+CAKlB,IADA,IAAMwhB,EAAmC,GAChCvhB,EAAI,EAAGA,EAAIohB,EAAQ5Y,WAAWrI,SAAUH,EAC/CuhB,EAAkBvhB,GAAKsD,KAAKke,uBAAuBH,EAAOrhB,GAAIohB,EAAQE,WAAWthB,IAGnF,IAAM4I,EAzCN,SAACoM,EAA4CuM,GAC3C,IAAMF,EACFE,EAAkBhY,KAAI,SAAAkY,GAAW,gBAAGA,EAAQjP,cAActI,KAAK,KAAI,YAAIuX,EAAQ9d,MAAK,YAAI8d,EAAQ/d,OAA/D,IAC5BwG,KAAK,KACVtB,EAAMoM,EAAYzV,KAKtB,OAJIyV,EAAY0M,YACd9Y,GAAO,IAAMoM,EAAY0M,UAAY,KAEvC9Y,EAAO,IAAMyY,CAEf,CA+BYM,CAAwBP,EAASG,GACzCK,EAAWte,KAAKiH,QAAQsX,eAAeC,YAAYlZ,GACjDoM,EAAc4M,EAChBA,EAAS5M,YACsC,mBAAtCoM,EAA8Bve,IAAsBue,EAA8Bve,MAC9Bue,EAG3DjP,GAAsB,IAAA4P,oCACxBze,KAAKiH,QAAQ2W,eAAgBlM,EAAY3B,OAAOnR,KAAM8S,EAAY3B,OAAO4N,aACvEe,EAAoB1e,KAAK2e,kBAAkB9P,EAAqB6C,EAAY3B,OAAOrR,MAQzF,OANK4f,IACHA,EAAWte,KAAKiH,QAAQsX,eAAeK,MAAMlN,EAAauM,EAAmBS,GAC7E1e,KAAKiH,QAAQsX,eAAeM,YAAYvZ,EAAKgZ,IAG/Cte,KAAK8e,WAAWR,EAAUL,EAAmBS,GACtCA,CACT,EAEA,YAAAtZ,IAAA,SAAI0Y,EAA4BC,GAE9B,OAD0B/d,KAAK6d,eAAeC,EAASC,GAC9BgB,MAC3B,EAEQ,YAAAD,WAAR,SAAmBR,EAAoBP,EAAuBhO,GAE5D,IAAK,IAAIrT,EAAI,EAAGA,EAAIqhB,EAAOlhB,SAAUH,EACnC,KAAMqhB,EAAOrhB,GAAGoS,WAAcwP,EAAS5M,YAAYsM,WAAWthB,KAAO,EAAAsiB,YAAYC,QAC/E,MAAM,IAAIxiB,MAAM,gBAASC,EAAC,mCAK9B,KAAMqT,EAAOjB,WAAcwP,EAAS5M,YAAY3B,OAAO4N,cAAgB,EAAAqB,YAAYC,QACjF,MAAM,IAAIxiB,MAAM,uCAGlBuD,KAAKiH,QAAQsX,eAAenZ,IAAIkZ,EAAUP,EAAQhO,EACpD,EAaQ,YAAAmO,uBAAR,SAA+Ba,EAAgBpB,GAC7C,IAAIuB,EAAKlf,KAAKmf,eAAeJ,EAAOK,OAAQzB,IAAgB,EAAAqB,YAAYC,QAExE,IAAKC,IAEHA,EAAKlf,KAAKmf,eAAeJ,EAAOK,OAAQzB,IAAgB,EAAAqB,YAAYC,SAElE,OAAItB,IAAgB,EAAAqB,YAAYC,OACvBjf,KAAK0N,KAAKwR,GAEVlf,KAAKqf,OAAOH,GAKzB,IAAKA,EAAI,CACP,IAAMxI,GAAS,IAAA+H,oCAAmCze,KAAKiH,QAAQ2W,eAAgBmB,EAAOngB,KAAM+e,GAE5F,GAAIA,IAAgB,EAAAqB,YAAYM,oBAAqB,CACnD,IAEM/O,EAAQwO,EAAOngB,KACrB,GAAqB,IAAjB2R,EAAM1T,OAAc,CAQtB,IAAM0iB,EAAsB,CAAChP,EAAM,GAAItI,KAAKE,KAAMoI,EAAM,GAAKA,EAAM,GAAKA,EAAM,GAV/D,IAWTiP,GACF,IAAAf,oCAAmCze,KAAKiH,QAAQ2W,eAAgB2B,EAAqB5B,GACrFzd,EAAS6e,EAAOU,WACpB,GAAIlP,EAAM,GAAKA,EAAM,GAAKA,EAAM,GAdjB,GAcmC,EAAG,CACnD,IAAMmP,EAAiBnP,EAAM,GACvBoP,EAAapP,EAAM,GAAKA,EAAM,GAAKA,EAAM,GACzCqP,EAjBO,EAiBM3X,KAAKE,KAlBd,EAkBmBwX,EAjBhB,GAmBbzf,EAAS,IAAIvC,aADG+hB,EAAiBE,GAEjC,IAAK,IAAI9T,EAAI,EAAGA,EAAI4T,IAAkB5T,EAAG,CACvC,IAAM+T,EAAY/T,EAAI6T,EAChBG,EAAYhU,EAAI8T,EAAa9T,EAvB3B,EAuBuC6T,EAC/Czf,EAAOhB,IAAI6f,EAAOU,WAAWM,SAASF,EAAWA,EAAYF,GAAaG,E,EAG9E,OAAO9f,KAAK2e,kBAAkBa,EAAgBT,EAAOrgB,KAAMwB,EAAQ6e,EAAQ,E,EAI/E,GAAIpB,IAAgB,EAAAqB,YAAYC,OAAQ,CACtC,IAAMe,GACF,IAAAC,8BAA6BjgB,KAAKiH,QAAQ2W,eAAgBmB,EAAOngB,KAAM,EAAG,GAAI,CAACshB,WAAW,IACxFC,EAAsBngB,KAAK2e,kBAC7BqB,EAAuBjB,EAAOrgB,KAAMqgB,EAAOU,WAAYV,EAAQ,GACnEG,EAAKlf,KAAK0N,KAAKyS,E,MAEfjB,EAAKlf,KAAK2e,kBAAkBjI,EAAQqI,EAAOrgB,KAAMqgB,EAAOU,WAAYV,EAAQ,E,CAGhF,OAAOG,CACT,EAWA,YAAAkB,sCAAA,SACI1J,EAAuB2J,EAA2B1hB,EAAyBogB,GAC7E,OAAO/e,KAAK2e,kBAAkBjI,EAAQ2J,EAAU1hB,EAAMogB,EAAQ,EAChE,EAEQ,YAAAJ,kBAAR,SACIjI,EAAuB2J,EAA2B1hB,EAA0BogB,EAC5EuB,GACF,EAAAzS,OAAOE,QAAQ,mBAAoB,wCAAiCiH,KAAKE,UAAUwB,GAAO,MAC1F,IAAMyH,EAAUne,KAAKiH,QAAQsZ,eAAeC,wBAAwBH,EAAU3J,EAAQ/X,EAAM2hB,GAC5F,OAAOtgB,KAAKygB,6BAA6B/J,EAAQ2J,EAAUlC,EAASY,EACtE,EAEA,YAAA2B,gBAAA,SAAgBC,EAAeC,GAC7B,IAAMC,EAAU7gB,KAAKke,uBAAuByC,EAAO,EAAA3B,YAAY8B,UACzDC,EAAkC,CACtC3c,SAAUyc,EAAQzc,SAClBhE,OAAQygB,EAAQzgB,OAChBC,MAAOwgB,EAAQxgB,MAEfkQ,MAA+B,IAAxBqQ,EAAa/jB,OAAe+jB,EAAe,CAAC,GACnDxP,QAAS,EAAAkC,UAAU0N,eAAeJ,GAClC1R,cAAe0R,GAGjB,OADuB5gB,KAAKygB,6BAA6BM,EAAkBJ,EAAMjiB,KAAMmiB,EAAQ1C,SACzEY,MACxB,EAEA,YAAAkC,cAAA,SAAcN,EAAeC,GAC3B,IAAMC,EAAU7gB,KAAKke,uBAAuByC,EAAO,EAAA3B,YAAYC,QAG/D,IAAI,IAAAiC,gBAAeP,EAAM/hB,KAAMgiB,GAAe,CAC5C,IAAMG,EAAkC,CACtC3c,SAAUyc,EAAQzc,SAClBhE,OAAQygB,EAAQzgB,OAChBC,MAAOwgB,EAAQxgB,MAEfkQ,MAA+B,IAAxBqQ,EAAa/jB,OAAe+jB,EAAe,CAAC,GACnDxP,QAAS,EAAAkC,UAAU0N,eAAeJ,GAClC1R,cAAe0R,EACf9R,UAAU,GAGZ,OADuB9O,KAAKygB,6BAA6BM,EAAkBJ,EAAMjiB,KAAMmiB,EAAQ1C,SACzEY,M,CAGxB,IAAMoC,GAAqB,IAAAC,eAAcT,EAAM/hB,MACzCyiB,GAAsB,IAAAD,eAAcR,GAEpCU,EAAsBthB,KAAKihB,cAAcN,EAAOQ,GAChDI,EAAuBvhB,KAAKoF,KAC9B,IAAAoc,wCAAuCxhB,KAAMshB,EAAqBD,GAAsB,CAACC,IAE7F,OADqBthB,KAAKihB,cAAcM,EAAsBX,EAEhE,EAEA,YAAAa,KAAA,SAAKd,EAAejiB,GAClB,IAAMmiB,EAAU7gB,KAAKke,uBAAuByC,EAAO,EAAA3B,YAAY8B,UAE/D,OADuB9gB,KAAKygB,6BAA6BI,EAA0BniB,EAAMmiB,EAAQ1C,SAC3EY,MACxB,EAEQ,YAAA0B,6BAAR,SACI/J,EAAuB2J,EAA2BlC,EAAuBY,EAAiB2C,GAD9F,WAEQC,EAAW,OACZjL,GAAM,CACTqI,OAAQA,GACJ,IAAI,EAAA1gB,OACIqY,EAAOxH,cAAemR,GAAU,SAACuB,GAAmB,SAAKC,YAAYF,EAAjB,IACpD,SAAOC,GAAc,gEAAK,SAAA5hB,KAAK8hB,iBAAiBH,G,cAAcnlB,EAAWklB,GACrFvD,QAAO,IAGT,OADAne,KAAK+hB,eAAeJ,EAAY5C,OAAOK,OAAQuC,EAAajL,EAAO5H,UAC5D6S,CACT,EAEQ,YAAAxC,eAAR,SAAuBuC,EAAqB5S,GAC1C,YAD0C,IAAAA,IAAAA,GAAA,GACnC9O,KAAKiH,QAAQ+a,cAAcN,GAAY1hB,KAAKiH,QAAQkY,eAAeuC,EAAU5S,GAChFA,EAA0C9O,KAAKwd,uBAAuBje,IAAImiB,GAChC1hB,KAAKyd,yBAAyBle,IAAImiB,EAClF,EACA,YAAAK,eAAA,SAAeL,EAAqBxC,EAAiBpQ,QAAA,IAAAA,IAAAA,GAAA,GAC/C9O,KAAKiH,QAAQ+a,cAAcN,GAC7B1hB,KAAKiH,QAAQ8a,eAAeL,EAAUxC,EAAIpQ,IAEzCA,EAAW9O,KAAKwd,uBAAyBxd,KAAKyd,0BAA0Bve,IAAIwiB,EAAUxC,EAE3F,EACA,YAAA+C,sBAAA,SAAsBlD,EAAgBjQ,GACpC,YADoC,IAAAA,IAAAA,GAAA,KAC3B9O,KAAKmf,eAAeJ,EAAOK,OAAQtQ,EAC9C,EAEA,YAAA5B,QAAA,sBACElN,KAAKiH,QAAQsZ,eAAe2B,sBAC5BliB,KAAKwd,uBAAuB7L,SAAQ,SAAAuN,GAAM,SAAKjY,QAAQsZ,eAAe4B,eAAejD,EAA3C,IAC1Clf,KAAKwd,uBAAyB,IAAI9f,IAClCsC,KAAKyd,yBAAyB9L,SAAQ,SAAAuN,GAAM,SAAKjY,QAAQsZ,eAAe4B,eAAejD,EAA3C,IAC5Clf,KAAKyd,yBAA2B,IAAI/f,GACtC,EAEA,YAAAmkB,YAAA,SAAYF,GACV,OAAIA,EAAY7S,SACP9O,KAAK6hB,YAAY7hB,KAAKqf,OAAOsC,IAEjC3hB,KAAKiH,QAAQ/K,QAAQyR,UAAUyU,2BAG7BpiB,KAAKiH,QAAQsZ,eAAesB,YAAYF,EAAaA,EAAY5C,OAAOrgB,KAAMijB,EAAYvd,UAFxFpE,KAAKiH,QAAQsZ,eAAe8B,yBAAwB,IAAAC,eAActiB,KAAM2hB,GAGnF,EAEM,YAAAG,iBAAN,SAAuBH,G,mEACrB,OAAIA,EAAY7S,SACP,CAAP,EAAO9O,KAAK8hB,iBAAiB9hB,KAAKqf,OAAOsC,KAEtC3hB,KAAKiH,QAAQ/K,QAAQyR,UAAUyU,2BAG7B,CAAP,EAAOpiB,KAAKiH,QAAQsZ,eAAeuB,iBAAiBH,EAAaA,EAAY5C,OAAOrgB,KAAMijB,EAAYvd,WAF7F,CAAP,EAAOpE,KAAKiH,QAAQsZ,eAAe8B,yBAAwB,IAAAC,eAActiB,KAAM2hB,I,QAKnF,YAAAjU,KAAA,SAAKiT,GAEH,OAD0B3gB,KAAK6d,gBAAe,IAAA0E,6BAA4BviB,KAAM2gB,EAAM5B,QAAS,CAAC4B,EAAM5B,QAExG,EAEA,YAAAM,OAAA,SAAOsB,GAEL,OAD0B3gB,KAAK6d,gBAAe,IAAA2E,+BAA8BxiB,KAAM2gB,EAAM5B,QAAS,CAAC4B,EAAM5B,QAE1G,EACF,EA5RA,GAAa,EAAA0D,sBAAAA,C,6vBCzBb,cACA,aACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,SACA,UACA,SACA,SACA,UACA,UACA,UACA,UACA,aACA,UACA,UAEa,EAAAC,uBAAuD,CAClE,CAAC,MAAO,GAAI,KAAMC,EAASC,KAC3B,CAAC,OAAQ,GAAI,KAAMD,EAASE,MAC5B,CAAC,MAAO,GAAI,KAAMC,EAAU/K,KAC5B,CAAC,MAAO,GAAI,KAAM+K,EAAUC,KAC5B,CAAC,OAAQ,GAAI,KAAMJ,EAASK,MAC5B,CAAC,OAAQ,GAAI,KAAML,EAASM,MAE5B,CAAC,cAAe,GAAI,KAAM,EAAAC,YAAa,EAAAC,4BACvC,CAAC,qBAAsB,GAAI,KAAM,EAAAC,mBAAoB,EAAAC,mCACrD,CAAC,OAAQ,GAAI,KAAM,EAAA5B,KAAM,EAAA6B,qBACzB,CAAC,OAAQ,GAAI,KAAMX,EAASxa,MAC5B,CAAC,OAAQ,GAAI,OAAQwa,EAASY,KAAMZ,EAASa,qBAC7C,CAAC,OAAQ,GAAI,MAAOb,EAASc,SAC7B,CAAC,SAAU,GAAI,KAAM,EAAAC,OAAQ,EAAAC,uBAC7B,CAAC,OAAQ,GAAI,KAAM,EAAAC,KAAM,EAAAC,qBACzB,CAAC,gBAAiB,GAAI,KAAM,EAAAC,cAAe,EAAAC,8BAC3C,CAAC,MAAO,GAAI,KAAMpB,EAASqB,KAC3B,CAAC,MAAO,GAAI,KAAMlB,EAAUzF,KAC5B,CAAC,UAAW,GAAI,KAAMsF,EAASsB,UAC/B,CAAC,eAAgB,GAAI,KAAM,EAAAC,aAAc,EAAAC,6BACzC,CAAC,QAAS,GAAI,KAAMrB,EAAUsB,OAC9B,CAAC,MAAO,GAAI,KAAMzB,EAAS0B,IAAK1B,EAAS2B,oBACzC,CAAC,MAAO,GAAI,KAAM3B,EAAS4B,KAC3B,CAAC,UAAW,GAAI,KAAM,EAAAC,QAAS,EAAAC,wBAC/B,CAAC,QAAS,GAAI,KAAM9B,EAAS+B,OAC7B,CAAC,YAAa,gBAAiB,KAAM,EAAAd,KAAM,EAAAC,qBAC3C,CAAC,SAAU,GAAI,KAAM,EAAAc,OAAQ,EAAAC,uBAC7B,CAAC,OAAQ,GAAI,OAAQ,EAAAC,KAAM,EAAAC,uBAC3B,CAAC,OAAQ,GAAI,MAAO,EAAAD,KAAM,EAAAE,wBAC1B,CAAC,oBAAqB,GAAI,KAAM,EAAAC,kBAAmB,EAAAC,kCACnD,CAAC,gBAAiB,GAAI,KAAM,EAAAC,eAC5B,CAAC,UAAW,GAAI,KAAMpC,EAAUqC,SAChC,CAAC,WAAY,GAAI,KAAMxC,EAASsB,UAChC,CAAC,cAAe,GAAI,KAAM,EAAAmB,YAAa,EAAAC,4BACvC,CAAC,wBAAyB,GAAI,KAAM,EAAAC,sBAAuB,EAAAC,sCAC3D,CAAC,YAAa,GAAI,KAAM5C,EAAS6C,UAAW7C,EAAS8C,0BACrD,CAAC,OAAQ,GAAI,KAAM3C,EAAU4C,MAC7B,CAAC,MAAO,GAAI,KAAM,EAAAC,IAAK,EAAAC,oBACvB,CAAC,MAAO,GAAI,KAAMjD,EAASkD,KAC3B,CAAC,SAAU,GAAI,KAAM,EAAAC,OAAQ,EAAAC,uBAE7B,CAAC,UAAW,GAAI,KAAM,EAAAC,QAAS,EAAAC,wBAC/B,CAAC,MAAO,GAAI,KAAMnD,EAAU1F,KAC5B,CAAC,MAAO,GAAI,KAAMuF,EAASuD,KAC3B,CAAC,MAAO,GAAI,KAAMvD,EAASwD,KAC3B,CAAC,KAAM,GAAI,KAAMrD,EAAUsD,IAC3B,CAAC,MAAO,GAAI,OAAQ,EAAAC,MAAO,EAAAC,sBAC3B,CAAC,MAAO,GAAI,MAAO,EAAAC,OAAQ,EAAAC,uBAC3B,CAAC,MAAO,GAAI,KAAM1D,EAAU2D,KAC5B,CAAC,QAAS,GAAI,KAAM3D,EAAU4D,OAC9B,CAAC,eAAgB,GAAI,KAAM,EAAAC,aAAc,EAAAC,uBACzC,CAAC,YAAa,GAAI,KAAM,EAAAC,UAAW,EAAAD,uBACnC,CAAC,aAAc,GAAI,KAAM,EAAAE,WAAY,EAAAF,uBACrC,CAAC,YAAa,GAAI,KAAM,EAAAG,UAAW,EAAAH,uBACnC,CAAC,aAAc,GAAI,KAAM,EAAAI,WAAY,EAAAJ,uBACrC,CAAC,YAAa,GAAI,OAAQ,EAAAK,UAAW,EAAAL,uBACrC,CAAC,kBAAmB,GAAI,KAAM,EAAAM,mBAAoB,EAAAN,uBAClD,CAAC,OAAQ,GAAI,KAAMjE,EAASwE,MAC5B,CAAC,UAAW,GAAI,KAAM,EAAA7iB,SACtB,CAAC,SAAU,GAAI,KAAM,EAAA8iB,OAAQ,EAAAC,0BAC7B,CAAC,SAAU,GAAI,MAAO,EAAAD,OAAQ,EAAAE,0BAC9B,CAAC,QAAS,GAAI,KAAM,EAAA/W,OACpB,CAAC,UAAW,GAAI,KAAMoS,EAAS4E,SAC/B,CAAC,MAAO,GAAI,KAAM5E,EAAS6E,KAC3B,CAAC,QAAS,GAAI,MAAO,EAAAC,UACrB,CAAC,QAAS,GAAI,MAAO,EAAA7S,MAAO,EAAA8S,sBAE5B,CAAC,UAAW,GAAI,OAAQ,EAAAC,QAAS,EAAAC,wBACjC,CAAC,UAAW,GAAI,MAAO,EAAAC,WAAY,EAAAC,2BAKnC,CAAC,QAAS,GAAI,OAAQ,EAAA1O,MAAO,EAAA2O,sBAC7B,CAAC,OAAQ,GAAI,KAAMpF,EAASqF,MAC5B,CAAC,UAAW,GAAI,OAAQ,EAAAC,QAAS,EAAAC,wBACjC,CAAC,UAAW,GAAI,MAAO,EAAAC,YACvB,CAAC,MAAO,GAAI,KAAMrF,EAAU3F,KAC5B,CAAC,MAAO,GAAI,KAAM,EAAAiL,KAClB,CAAC,MAAO,GAAI,KAAMzF,EAAS0F,KAC3B,CAAC,OAAQ,GAAI,KAAM1F,EAAS2F,MAC5B,CAAC,OAAQ,GAAI,KAAM,EAAAC,MACnB,CAAC,YAAa,GAAI,KAAM,EAAA1R,UAAW,EAAA2R,0BACnC,CAAC,WAAY,GAAI,MAAO,EAAAC,SAAU,EAAAC,2BAClC,CAAC,WAAY,GAAI,IAAK,EAAAD,SAAU,EAAAE,2BAChC,CAAC,YAAa,GAAI,OAAQ,EAAAC,UAAW,EAAAC,0BACrC,CAAC,YAAa,GAAI,MAAO,EAAAC,cACzB,CAAC,MAAO,GAAI,KAAMhG,EAAUiG,K,2qBCzH9B,cAIA,UAEA,UAQMC,EAAoC,CACxC/sB,KAAM,qBACNiJ,WAAY,CAAC,IAAK,QAAS,IAAK,OAAQ,YACxC8Y,WACI,CAAC,EAAAgB,YAAY8B,SAAU,EAAA9B,YAAY8B,SAAU,EAAA9B,YAAY8B,SAAU,EAAA9B,YAAY8B,SAAU,EAAA9B,YAAY8B,WAG9F,EAAAsC,mBACT,SAAC6F,EAAyClL,EAAkB7U,GAS1D,OARAggB,EAAenL,GAQR,CAPQkL,EAAiB7jB,IAAI,EAAD,KAE1B4jB,GAAiC,CACpC5K,UAAWlV,EAAWigB,SACtB5pB,IAAK,WAAM,OAAA6pB,EAAoCH,EAAkBlL,EAAQ7U,EAA9D,IAEb6U,GAEN,EAES,EAAAsF,kCACT,SAACjM,GACC,IAAMiS,EAAUjS,EAAKlO,WAAWS,SAAS,UAAW,MAC9C2f,EAAWlS,EAAKlO,WAAWS,SAAS,WAAY,IAChD4f,EAAUnS,EAAKlO,WAAWW,OAAO,UAAW,GAClD,OAAO,IAAAjB,6BAA4B,CAACygB,QAAO,EAAEC,SAAQ,EAAEC,QAAO,GAChE,EAEJ,IAAMH,EACF,SAACH,EAAyClL,EAAkB7U,GAEtD,IAAMyG,GAAO,IAAAC,SAAQqZ,EAAiBhiB,QAAQ/K,QAAQyR,UAAUkC,SAC1DsB,EAAO4M,EAAO,GAAGnf,KAAK/B,OACtB,IACFosB,EAAiBvL,+BAA+BK,EAAO,GAAGnf,KAAM,EAAAogB,YAAY8B,UAAS,GADlF0I,EAAU,KAAEC,EAAW,KAExB/O,EAAe,gCACTvJ,EAAI,wEACuBqY,EAAU,aAAKC,EAAW,iDACvC9Z,EAAK8B,UAAS,iEACf9B,EAAK8B,UAAS,oEACV9B,EAAK8B,UAAS,iEACrB9B,EAAK8B,UAAS,gGAEsBvI,EAAWmgB,QAAO,kBAE5E,OAAO,EAAP,KACKL,GAAiC,CACpCjZ,OAAQ,CAACnR,KAAMmf,EAAO,GAAGnf,KAAMF,KAAMqf,EAAO,GAAGrf,KAAMif,YAAa,EAAAqB,YAAY8B,UAC9EpG,aAAY,GAEhB,EAEFwO,EAAiB,SAACnL,GACtB,IAAKA,GAA4B,IAAlBA,EAAOlhB,OACpB,MAAM,IAAIJ,MAAM,yCAGlB,IAAMitB,EAAI3L,EAAO,GACX4L,EAAQ5L,EAAO,GACfha,EAAIga,EAAO,GACXvd,EAAOud,EAAO,GACd6L,EAAO7L,EAAO,GAIpB,GAAI2L,EAAE9qB,KAAK/B,OAAS,GAA2B,IAAtB8sB,EAAM/qB,KAAK/B,QAAkC,IAAlBkH,EAAEnF,KAAK/B,QAAqC,IAArB2D,EAAK5B,KAAK/B,QAC5D,IAArB+sB,EAAKhrB,KAAK/B,OACZ,MAAM,IAAIJ,MAAM,wBAElB,GAAIktB,EAAM/qB,KAAK,KAAO8qB,EAAE9qB,KAAK,IAAMmF,EAAEnF,KAAK,KAAO8qB,EAAE9qB,KAAK,IAAM4B,EAAK5B,KAAK,KAAO8qB,EAAE9qB,KAAK,IAClFgrB,EAAKhrB,KAAK,KAAO8qB,EAAE9qB,KAAK,GAC1B,MAAM,IAAInC,MAAM,wBAElB,GAAgB,YAAXitB,EAAEhrB,MAAiC,YAAXgrB,EAAEhrB,MAAuC,YAAfirB,EAAMjrB,MAAqC,YAAfirB,EAAMjrB,MACzE,YAAXqF,EAAErF,MAAiC,YAAXqF,EAAErF,MAAsC,YAAd8B,EAAK9B,MAAoC,YAAd8B,EAAK9B,MACpE,YAAdkrB,EAAKlrB,MAAoC,YAAdkrB,EAAKlrB,KACnC,MAAM,IAAIjC,MAAM,8BAEpB,C,4SC3FA,cACA,UACA,UAEA,UAEA,SAAgBotB,IACd,IAAM5tB,EAAO,OASb,MAAO,CAACwa,KARK,oBACLxa,EAAI,gEAGLA,EAAI,sDAIGA,KAAI,EAAEyC,KAAM,EAAAuY,aAAa6S,WACzC,CACA,SAAgBC,IACd,IAAM9tB,EAAO,OASb,MAAO,CAACwa,KARK,oBACLxa,EAAI,gEAGLA,EAAI,sDAIGA,KAAI,EAAEyC,KAAM,EAAAuY,aAAa6S,WACzC,CACA,SAAgBE,IACd,IAAM/tB,EAAO,OASb,MAAO,CAACwa,KARK,oBACLxa,EAAI,gEAGLA,EAAI,sDAIGA,KAAI,EAAEyC,KAAM,EAAAuY,aAAa6S,WACzC,CACA,SAAgBG,IACd,IAAMhuB,EAAO,OASb,MAAO,CAACwa,KARK,oBACLxa,EAAI,gEAGLA,EAAI,sDAIGA,KAAI,EAAEyC,KAAM,EAAAuY,aAAa6S,WACzC,CACA,SAAgBI,IACd,IAAMjuB,EAAO,SASb,MAAO,CAACwa,KARK,oBACLxa,EAAI,wEAGLA,EAAI,kEAIGA,KAAI,EAAEyC,KAAM,EAAAuY,aAAa6S,WACzC,CACA,SAAgBK,IACd,IAAMluB,EAAO,WAYb,MAAO,CAACwa,KAXK,oBACLxa,EAAI,uEAGLA,EAAI,+HAOGA,KAAI,EAAEyC,KAAM,EAAAuY,aAAa6S,WACzC,CACA,SAAgBM,IACd,IAAMnuB,EAAO,QAYb,MAAO,CAACwa,KAXK,oBACLxa,EAAI,uEAGLA,EAAI,6JAOGA,KAAI,EAAEyC,KAAM,EAAAuY,aAAa6S,WACzC,CACA,SAAgBO,IACd,IAAMpuB,EAAO,OAcb,MAAO,CAACwa,KAbK,oBACLxa,EAAI,sFAGLA,EAAI,uNASGA,KAAI,EAAEyC,KAAM,EAAAuY,aAAa6S,WACzC,CACA,SAAgBQ,IACd,IAAMruB,EAAO,MAcb,MAAO,CAACwa,KAbK,oBACLxa,EAAI,sFAGLA,EAAI,uNASGA,KAAI,EAAEyC,KAAM,EAAAuY,aAAa6S,WACzC,CACA,SAAgBS,IACd,IAAMtuB,EAAO,OAcb,MAAO,CAACwa,KAbK,oBACLxa,EAAI,sFAGLA,EAAI,uNASGA,KAAI,EAAEyC,KAAM,EAAAuY,aAAa6S,WACzC,CACA,SAAgBU,IACd,OAoBF,SAA2BlN,GACzB,IAAMrhB,EAAO,UAAGqhB,EAAK,KASrB,MAAO,CAAC7G,KARK,oBACLxa,EAAI,4CACDqhB,EAAK,gCAETrhB,EAAI,4CACAqhB,EAAK,sBAGFrhB,KAAI,EAAEyC,KAAM,EAAAuY,aAAa6S,WACzC,CA/BSW,CAAkB,MAC3B,CACA,SAAgBC,IACd,IAAMzuB,EAAO,SAcb,MAAO,CAACwa,KAbK,oBACLxa,EAAI,6EAGLA,EAAI,wNASGA,KAAI,EAAEyC,KAAM,EAAAuY,aAAa6S,WACzC,CAhKA,YAYA,YAYA,YAYA,YAYA,cAYA,gBAeA,aAeA,YAiBA,WAiBA,YAiBA,YAGA,cA+BA,IAAMa,EACF,SAACnmB,EAAgCuZ,EAAkB6M,EAClDC,EAAoD1B,QAApD,IAAA0B,IAAAA,EAAoC9M,EAAO,GAAGrf,MAC7C,IAAMif,EAAcnZ,EAAQyC,QAAQyG,KAAO,EAAAsR,YAAYC,OAAS,EAAAD,YAAY8B,SAC5E,MAAO,CACL7kB,KAAM2uB,EAAS3uB,KACfiJ,WAAY,CAAC,IAAK,KAClB8Y,WAAY,CAACL,EAAaA,GAC1BS,UAAW+K,EACX5pB,IAAK,WAAM,OAAAurB,EAAwBtmB,EAASuZ,EAAQ6M,EAAUC,EAAnD,EAEf,EAEEC,EACF,SAACtmB,EAAgCuZ,EAAkB6M,EAClDC,QAAA,IAAAA,IAAAA,EAAoC9M,EAAO,GAAGrf,MAC7C,IAAMif,EAAcnZ,EAAQyC,QAAQyG,KAAO,EAAAsR,YAAYC,OAAS,EAAAD,YAAY8B,SACtEiK,GAAe,EAAAzX,UAAU0X,SAASjN,EAAO,GAAGnf,KAAMmf,EAAO,GAAGnf,MAC9DqsB,EAAclN,EAAO,GAAGnf,KAEtBssB,EAAmB1mB,EAAQyC,QAAQyG,KAEzC,GAAIqd,EAAa,CACf,IAAMI,EAAkB,EAAAtY,cAAcuY,UAAUrN,EAAO,GAAGnf,KAAMmf,EAAO,GAAGnf,MAAM,GAChF,IAAKusB,EACH,MAAM,IAAI1uB,MAAM,gDAGlB,IAAMyf,GADN+O,EAAcE,GACiBtuB,OACzBwuB,EAAkC,IAA1BtN,EAAO,GAAGnf,KAAK/B,OAAekhB,EAAO,GAAGnf,KAAK/B,OAAS,EAC9DyuB,EAAkC,IAA1BvN,EAAO,GAAGnf,KAAK/B,OAAekhB,EAAO,GAAGnf,KAAK/B,OAAS,EAC9D0uB,EAAmC,IAA1BxN,EAAO,GAAGnf,KAAK/B,OAAe,qCAAuC,mBAC9E2uB,EAAmC,IAA1BzN,EAAO,GAAGnf,KAAK/B,OAAe,qCAAuC,mBAE9E,GAAO,IAAA+S,SAAQpL,EAAQyC,QAAQ/K,QAAQyR,UAAUkC,SACjD,EAAeqb,EAAmB,kBACxCN,EAASnU,KAAI,kIAIGmU,EAAS3uB,KAAI,4BAC3B,EAAK8T,OAAM,uBAE2B,kBACxC6a,EAASnU,KAAI,6CACayF,EAAU,sCACrBmP,EAAK,oCACLC,EAAK,uBAClBC,EAAM,qBACNC,EAAM,4BACCZ,EAAS3uB,KAAI,0CAGtB,MAAO,CACLA,KAAM2uB,EAAS3uB,KACfiJ,WAAY,CAAC,IAAK,KAClB8Y,WAAY,CAACL,EAAaA,GAC1B5N,OAAQ,CAACnR,KAAMqsB,EAAavsB,KAAMmsB,EAAkBlN,YAAW,GAC/DjD,aAAY,EACZC,QAASuQ,E,CAGb,IAAMvb,GAAO,IAAAC,SAAQpL,EAAQyC,QAAQ/K,QAAQyR,UAAUkC,SACjD6K,EAAe,gBACrBkQ,EAASnU,KAAI,gDAED9G,EAAK8B,UAAS,4CACd9B,EAAK8B,UAAS,gDACVmZ,EAAS3uB,KAAI,4BAC3B0T,EAAKI,OAAM,2BAIb,MAAO,CACL9T,KAAM2uB,EAAS3uB,KACfiJ,WAAY,CAAC,IAAK,KAClB8Y,WAAY,CAACL,EAAaA,GAC1B5N,OAAQ,CAACnR,KAAMmf,EAAO,GAAGnf,KAAMF,KAAMmsB,EAAkBlN,YAAW,GAClEjD,aAAY,EACZC,SAAS,EAEb,EAES,EAAA5C,IAAM,SAACvT,EAAgCuZ,GACpC,OAACvZ,EAAQY,IAAIulB,EAA8BnmB,EAASuZ,EAAQ8L,KAAY9L,GAAxE,EAEH,EAAAgF,IAAM,SAACve,EAAgCuZ,GACpC,OAACvZ,EAAQY,IAAIulB,EAA8BnmB,EAASuZ,EAAQsM,IAAW,QAAStM,GAAhF,EAEH,EAAAV,IAAM,SAAC7Y,EAAgCuZ,GACpC,OAACvZ,EAAQY,IAAIulB,EAA8BnmB,EAASuZ,EAAQgM,KAAYhM,GAAxE,EAEH,EAAAqG,MAAQ,SAAC5f,EAAgCuZ,GACtC,OAACvZ,EAAQY,IAAIulB,EAA8BnmB,EAASuZ,EAAQmM,IAAa,QAASnM,GAAlF,EAEH,EAAAoH,QAAU,SAAC3gB,EAAgCuZ,GACxC,OAACvZ,EAAQY,IAAIulB,EAA8BnmB,EAASuZ,EAAQoM,IAAe,QAASpM,GAApF,EAEH,EAAA2H,KAAO,SAAClhB,EAAgCuZ,GACrC,OAACvZ,EAAQY,IAAIulB,EAA8BnmB,EAASuZ,EAAQqM,IAAY,QAASrM,GAAjF,EAEH,EAAAX,IAAM,SAAC5Y,EAAgCuZ,GACpC,OAACvZ,EAAQY,IAAIulB,EAA8BnmB,EAASuZ,EAAQiM,KAAYjM,GAAxE,EAEH,EAAAqI,GAAK,SAAC5hB,EAAgCuZ,GACnC,OAACvZ,EAAQY,IAAIulB,EAA8BnmB,EAASuZ,EAAQuM,IAAU,QAASvM,GAA/E,EAEH,EAAA0I,IAAM,SAACjiB,EAAgCuZ,GACpC,OAACvZ,EAAQY,IAAIulB,EAA8BnmB,EAASuZ,EAAQyM,KAAYzM,GAAxE,EAEH,EAAA2I,MAAQ,SAACliB,EAAgCuZ,GACtC,OAACvZ,EAAQY,IAAIulB,EAA8BnmB,EAASuZ,EAAQ2M,KAAc3M,GAA1E,EAEH,EAAAZ,IAAM,SAAC3Y,EAAgCuZ,GACpC,OAACvZ,EAAQY,IAAIulB,EAA8BnmB,EAASuZ,EAAQkM,KAAYlM,GAAxE,EAEH,EAAAgL,IAAM,SAACvkB,EAAgCuZ,GACpC,OAACvZ,EAAQY,IAAIulB,EAA8BnmB,EAASuZ,EAAQwM,IAAW,QAASxM,GAAhF,C,yHCxShB,cAGa,EAAA0D,KACT,SAACjd,EAAgCuZ,EAAkB0N,GAEjD,OADAvC,EAAenL,GACR,CAACvZ,EAAQid,KAAK1D,EAAO,GAAI0N,GAClC,EAES,EAAAnI,oBAA+D,SAAClM,GACzE,SAAAsU,UAAUC,wBAAwBvU,EAAKlO,WAAWW,OAAO,MAAzD,EAEJ,IAAMqf,EAAiB,SAACnL,GACtB,IAAKA,GAA4B,IAAlBA,EAAOlhB,OACpB,MAAM,IAAIJ,MAAM,0BAGlB,GAAuB,WAAnBshB,EAAO,GAAGrf,KACZ,MAAM,IAAIjC,MAAM,sBAEpB,C,2WCtBA,cAEA,UACA,SAGA,UAoHa,EAAAmvB,oCACT,SAACpnB,EAAgCuZ,EAAkB7U,GACjD,IApHqC2iB,EAAoBzN,EAoHnD0N,GApH+BD,EAoHc9N,EAAOlhB,OApHDuhB,EAoHSlV,EAAWigB,SApHE,CACnFltB,KAAM,kBACNiJ,WAAY9F,MAAML,KAAK,CAAClC,OAAQgvB,IAAa,SAAC5mB,EAAGvI,GAAM,iBAAIA,EAAJ,IACvDshB,WAAY5e,MAAMysB,GAAYE,KAAK,EAAA/M,YAAYC,QAC/Cb,UAAS,IAiHL,OAAO,EAAP,KAAW0N,GAAQ,CAAEvsB,IAAK,WAAM,OA7GlC,SAACiF,EAAgCsnB,EAA2B/N,EAAkBiO,GAC5E,IAAMC,EAAalO,EAAO,GAAGnf,KAAKgW,QAClC,GAAIoX,GAAQC,EAAWpvB,QAAUmvB,GAAS,EAAIC,EAAWpvB,OACvD,MAAM,IAAIJ,MAAM,gEAEduvB,EAAO,IACTA,EAAOC,EAAWpvB,OAASmvB,GAK7B,IADA,IAAMf,EAAcgB,EAAWrX,MAAM,GAC5BlY,EAAI,EAAGA,EAAIqhB,EAAOlhB,OAAQH,IAEjC,IADA,IAAMwvB,EAAanO,EAAOrhB,GAAGkC,KAAKgW,QACzBuX,EAAY,EAAGA,EAAYF,EAAWpvB,OAAQsvB,IAErD,GAAIA,IAAcH,EAChBf,EAAYe,IAASE,EAAWC,QAG7B,GAAIF,EAAWE,KAAeD,EAAWC,GAC5C,MAAM,IAAI1vB,MAAM,oCAKtB,IAAM0U,EAAO8Z,EAAYpuB,OACnBoU,GAAS,IAAAmb,aAAY,SAAUjb,GAC/Bkb,GAAQ,IAAAtZ,mBAAkB5B,GAC1Bmb,GAAgB,IAAAC,qBAEhBC,EAASzO,EAAO9X,KAAI,SAAAvJ,GAAK,OAAAA,EAAEkC,IAAF,IACzBwF,GAAW,IAAA8O,eAAc/B,GACzBsb,EAAoB,IAAIrtB,MAAMotB,EAAO3vB,OAAS,GAGpD,IADA4vB,EAAQ,GAAKD,EAAO,GAAGR,GACdtvB,EAAI,EAAGA,EAAI+vB,EAAQ5vB,OAAQH,IAClC+vB,EAAQ/vB,GAAK+vB,EAAQ/vB,EAAI,GAAK8vB,EAAO9vB,GAAGsvB,GAG1C,IAAMU,EAAUtoB,EAAS4nB,GACnBW,EAAevoB,EAASwQ,OAAO,GAC/BgY,EAAcxoB,EAASwC,OAEzBimB,EAAkB,cAAOH,EAAO,cAAMD,EAAQ,GAAE,8DAEtCG,EAAW,mBAAWD,EAAa/lB,OAAM,kBAEvD,IAASlK,EAAI,EAAGA,EAAI+vB,EAAQ5vB,OAAQH,IAAK,CACvC,IAAM,EAAQ+vB,EAAQ/vB,EAAI,GAC1BmwB,GAAmB,4BACTH,EAAO,cAAMD,EAAQ/vB,GAAE,gBAAQgwB,EAAO,eAAOD,EAAQ/vB,EAAI,GAAE,sEAEvDA,EAAC,YAAIowB,EAA0B1oB,EAAUsoB,EAAS,GAAM,oCACvDI,EAA0BH,EAAcD,EAAS,GAAM,qB,CAGxE,IAAMK,EAAYN,EAAQ5vB,OACpBmwB,EAAQP,EAAQA,EAAQ5vB,OAAS,GACvCgwB,GAAmB,8DAELE,EAAS,YAAID,EAA0B1oB,EAAUsoB,EAASM,GAAM,kCAC/DF,EAA0BH,EAAcD,EAASM,GAAM,OAEtE,IAAMrd,GAAO,IAAAC,SAAQpL,EAAQyC,QAAQ/K,QAAQyR,UAAUkC,SAEjD6K,EAAe,sBACf4R,EAAa,sCACEloB,EAAS6B,KAAI,SAAAgnB,GAAK,aAASA,CAAT,IAAW,4BAC1CJ,EAAe,iEAIfR,EAAK,0EACgBjoB,EAAS+M,EAAO,GAAE,iCAChC/M,EAAS+M,EAAO,GAAE,qBAAa/M,EAAS+M,EAAO,GAAE,iCACjD/M,EAAS+M,EAAO,GAAE,kEAEGF,EAAM,0CAElCA,EAAOE,EAAO,GAAE,cAAMF,EAAOE,EAAO,GAAE,kCAClCF,EAAOE,EAAO,GAAE,cAAM8Z,EAAY9Z,EAAO,GAAE,kDACzBF,EAAM,4CAG5BA,EAAOE,EAAO,GAAE,cAAMF,EAAOE,EAAO,GAAE,kCAClCF,EAAOE,EAAO,GAAE,cAAM8Z,EAAY9Z,EAAO,GAAE,kDACzBF,EAAM,4CAG5BA,EAAOE,EAAO,GAAE,cAAMF,EAAOE,EAAO,GAAE,kCAClCF,EAAOE,EAAO,GAAE,cAAM8Z,EAAY9Z,EAAO,GAAE,gCAC3CF,EAAOE,EAAO,GAAE,cAAM8Z,EAAY9Z,EAAO,GAAE,kDACzBF,EAAM,0CAE5BtB,EAAKI,OAAM,qCAInB,OAAO,EAAP,KACK+b,GAAQ,CACX/b,OAAQ,CAACnR,KAAMqsB,EAAavsB,KAAMqf,EAAO,GAAGrf,KAAMif,YAAa,EAAAqB,YAAYC,QAC3EvE,aAAY,EACZC,SAAS,GAEb,CAKkCuS,CAA8B1oB,EAASsnB,EAAU/N,EAAQ7U,EAAW8iB,KAApE,GAClC,EAEJ,IAAMc,EAA4B,SAAC1oB,EAAoBsoB,EAAiBM,GACtE,IAAMG,EAAa/oB,EAASzH,QAAQ+vB,GAQpC,OAPYtoB,EAAS6B,KAAI,SAAC0S,EAAGyU,GAC3B,OAAIA,IAAQD,EACH,UAAGxU,EAAC,cAAMqU,GAEVrU,CAEX,IACW/R,MACb,C,uqBC3IA,cAKA,UAEA,UAMa,EAAA8c,OACT,SAACuF,EAAyClL,EAAkB7U,GAE1D,OADAggB,EAAenL,GACXkL,EAAiBhiB,QAAQyG,MAAQqQ,EAAO,GAAGnf,KAAK/B,OAAS,EAGpD,CADHosB,EAAiB7jB,KAAI,IAAAwmB,qCAAoC3C,EAAkBlL,EAAQ7U,GAAa6U,IAK7F,CADHkL,EAAiB7jB,IAAIioB,EAAsCpE,EAAkBlL,EAAQ7U,GAAa6U,GAG1G,EAEJ,IAwEMsP,EACF,SAAC7oB,EAAgCuZ,EAAkB7U,GACjD,IA1EuC2iB,EAAoBzN,EA0ErD0N,GA1EiCD,EA0Ec9N,EAAOlhB,OA1EDuhB,EA0ESlV,EAAWigB,SA1EE,CACrFltB,KAAM,SACNiJ,WAAY9F,MAAML,KAAK,CAAClC,OAAQgvB,IAAa,SAAC5mB,EAAGvI,GAAM,iBAAIA,EAAJ,IACvDshB,WAAY5e,MAAMysB,GAAYE,KAAK,EAAA/M,YAAY8B,UAC/C1C,UAAS,IAuEL,OAAO,EAAP,KAAW0N,GAAQ,CAAEvsB,IAAK,WAAM,OAnElC,SAACiF,EAAgCsnB,EAA2B/N,EAAkBiO,GAC5E,IAAMC,EAAalO,EAAO,GAAGnf,KAAKgW,QAClC,GAAIoX,GAAQC,EAAWpvB,QAAUmvB,GAAS,EAAIC,EAAWpvB,OACvD,MAAM,IAAIJ,MAAM,gEAEduvB,EAAO,IACTA,EAAOC,EAAWpvB,OAASmvB,GAK7B,IADA,IAAMf,EAAcgB,EAAWrX,MAAM,GAC5BlY,EAAI,EAAGA,EAAIqhB,EAAOlhB,OAAQH,IAEjC,IADA,IAAMwvB,EAAanO,EAAOrhB,GAAGkC,KAAKgW,QACzBuX,EAAY,EAAGA,EAAYF,EAAWpvB,OAAQsvB,IAErD,GAAIA,IAAcH,EAChBf,EAAYe,IAASE,EAAWC,QAG7B,GAAIF,EAAWE,KAAeD,EAAWC,GAC5C,MAAM,IAAI1vB,MAAM,oCAKtB,IAAM0U,EAAO8Z,EAAYpuB,OAEnBywB,EAAmB,IAAIluB,MAAc2e,EAAOlhB,QAC9C0wB,EAAc,EAClB,IAAS7wB,EAAI,EAAGA,EAAI4wB,EAAiBzwB,SAAUH,EAC7C6wB,GAAexP,EAAOrhB,GAAGkC,KAAKotB,GAC9BsB,EAAiB5wB,GAAK6wB,EAGxB,IAAIC,EAGFA,EADEzP,EAAOlhB,OAAS,EACsB4wB,EAA4CH,GAE5CI,EAA4CJ,GAGtF,IAAMK,EAAoCC,EAAqC7P,EAAOlhB,OAAQsU,GACxF0c,EAA0CC,EAA2CR,GACrF5S,EAAe,oBACjBiT,EAAiC,qBACjCE,EAAuC,qBACvCL,EAAqC,+CACXrc,EAAI,kFAC2B6a,EAAI,yEAGjDA,EAAI,uBAAeA,EAAI,oKAKvC,OAAO,EAAP,KACKF,GAAQ,CACX/b,OAAQ,CAACnR,KAAMqsB,EAAavsB,KAAMqf,EAAO,GAAGrf,KAAMif,YAAa,EAAAqB,YAAY8B,UAC3EpG,aAAY,GAEhB,CAKkCqT,CAAgCvpB,EAASsnB,EAAU/N,EAAQ7U,EAAW8iB,KAAtE,GAClC,EAEEyB,EAA8C,SAACH,GACnD,IAAMU,EAAaV,EAAiBrnB,KAAI,SAACvG,EAAMhD,GAAM,yBAAYgD,EAAI,qBAAahD,EAAC,OAA9B,IAErD,MAAO,6DACDsxB,EAAWpnB,KAAK,IAAG,UAE3B,EAGM8mB,EAA8C,SAACJ,GACjD,OAAAG,EAA4CH,EAA5C,EAEEM,EAAuC,SAACK,EAAyBC,GAErE,IADA,IAAMC,EAAsB,CAAC,0EAAmED,EAAU,SACjGxxB,EAAI,EAAGA,EAAIuxB,IAAmBvxB,EAC3B,IAANA,EACFyxB,EAAUrxB,KACN,KACA,8BAAuBJ,EAAC,wBAAgBA,EAAC,iBACpCA,IAAMuxB,EAAkB,EACjCE,EAAUrxB,KACN,KACA,0BAAmBJ,EAAC,iBAExByxB,EAAUrxB,KACN,KACA,mCAA4BJ,EAAC,wBAAgBA,EAAC,iBAMtD,OAHAyxB,EAAUrxB,KACN,OAEGqxB,EAAUvnB,KAAK,KACxB,EAEMknB,EAA6C,SAACR,GAElD,IADA,IAAMa,EAAsB,CAAC,sDACpBzxB,EAAI,EAAGA,EAAI4wB,EAAiBzwB,SAAUH,EACnC,IAANA,EACFyxB,EAAUrxB,KACN,KACA,uBAAgBJ,EAAC,sBAAc4wB,EAAiB5wB,GAAE,QAC7CA,IAAM4wB,EAAiBzwB,OAAS,EACzCsxB,EAAUrxB,KACN,KACA,wBAAiBwwB,EAAiB5wB,GAAE,QAExCyxB,EAAUrxB,KACN,KACA,4BAAqBJ,EAAC,sBAAc4wB,EAAiB5wB,GAAE,QAO/D,OAJAyxB,EAAUrxB,KACN,OAGGqxB,EAAUvnB,KAAK,KACxB,EAEa,EAAA+c,sBAAkE,SAACvM,GAC5E,WAAAxO,6BAA4B,CAACojB,KAAM5U,EAAKlO,WAAWW,OAAO,SAA1D,EAEJ,IAAMqf,EAAiB,SAACnL,G,QACtB,IAAKA,GAAUA,EAAOlhB,OAAS,EAC7B,MAAM,IAAIJ,MAAM,kBAGlB,IAAM2xB,EAAYrQ,EAAO,GAAGrf,KACtB2vB,EAAsBtQ,EAAO,GAAGnf,KAAK/B,OAG3C,GAAkB,WAAduxB,EACF,MAAM,IAAI3xB,MAAM,sC,IAGlB,IAAoB,QAAAshB,GAAM,8BAAE,CAAvB,IAAM4C,EAAK,QAEd,GAAIA,EAAMjiB,OAAS0vB,EACjB,MAAM,IAAI3xB,MAAM,oCAIlB,GAAIkkB,EAAM/hB,KAAK/B,SAAWwxB,EACxB,MAAM,IAAI5xB,MAAM,2C,mGAGtB,C,kXC/LA,cAEA,UAEA,UAEA,UACA,UAyEa,EAAA6xB,2CACT,SAACrF,EAAyClL,EAA2B7U,GAE/D,IA1EwCqlB,EAAkBnQ,EA0EpD0N,GA1EkCyC,EA0EkBxQ,EAAOlhB,OAAS,EA1EhBuhB,EA0EmBlV,EAAWigB,SA1ES,CACzGltB,KAAM,cACNiJ,WAAYqpB,EAAU,CAAC,IAAK,IAAK,QAAU,CAAC,IAAK,KACjDvQ,WAAYuQ,EAAU,CAAC,EAAAvP,YAAY8B,SAAU,EAAA9B,YAAY8B,SAAU,EAAA9B,YAAY8B,UACzD,CAAC,EAAA9B,YAAY8B,SAAU,EAAA9B,YAAY8B,UACzD1C,UAAS,IAsED,OAAO,EAAP,KACK0N,GAAQ,CACXvsB,IAAK,WAAM,OApEnB,SAAC0pB,EAAyClL,EAA2B+N,EACpE5iB,GACC,IACMslB,EADUzQ,EAAOlhB,OAAS,EACF,oCAAsC,GAC9D4xB,EAAS1Q,EAAO,GAAGnf,KAAKgW,QACxB8Z,EAAS3Q,EAAO,GAAGnf,KAAKgW,QACxB+Z,EAAyBD,EAAO,GAAKxlB,EAAW0lB,MACtD,EAAA/gB,OAAOE,QACH,cACA,kBAAW7E,EAAW2lB,QAAO,uBAAe3lB,EAAW4lB,UAAS,mBAAW5lB,EAAW0lB,MAAK,yBACvF1lB,EAAW6lB,YAAW,kBAAU7lB,EAAW8lB,KAAI,qBAAa9lB,EAAWkI,UAC/E,IAAM6Z,GACF,IAAAgE,sBAAqBR,EAAQC,EAAQxlB,EAAW4lB,UAAW5lB,EAAW8lB,KAAM9lB,EAAWkI,SACrFzB,GAAO,IAAAC,SAAQqZ,EAAiBhiB,QAAQ/K,QAAQyR,UAAUkC,SAC1D,GAAwC,IAAAqf,sBAAqBhmB,GAA5DimB,EAAkB,qBAAEC,EAAe,kBAEpC1U,EAAe,0CACKxR,EAAWkI,QAAQ,GAAE,aAAKlI,EAAWkI,QAAQ,GAAE,0CAClDlI,EAAW8lB,KAAK,GAAE,aAAK9lB,EAAW8lB,KAAK,GAAE,iBAClEG,EAAkB,2NAMgBR,EAAsB,kFAGhBD,EAAO,GAAE,mEACdA,EAAO,GAAE,iEACRA,EAAO,GAAE,yEACDxlB,EAAW4lB,UAAU,GAAE,sDAE/BL,EAAO,GAAE,wFAITC,EAAO,GAAE,wEACDxlB,EAAW4lB,UAAU,GAAE,oDAC/BL,EAAO,GAAE,oQAU3CD,EAAW,iBACXY,EAAe,iBACfzf,EAAKI,OAAM,sCAGX,OAAO,EAAP,KACK+b,GAAQ,CACX/b,OAAQ,CAACnR,KAAMqsB,EAAavsB,KAAMqf,EAAO,GAAGrf,KAAMif,YAAa,EAAAqB,YAAY8B,UAC3EpG,aAAY,EACZC,SAAS,GAEb,CAQmB0U,CAAqCpG,EAAkBlL,EAAQ+N,EAAU5iB,EAAzE,GAEf,C,mICrFR,cACA,UACA,UAEa,EAAAomB,sBACT,SAACrG,EAAyClL,EAA2B7U,GACnE,IAAMqmB,EAASxR,EAAO,GAAGnf,KACnB4wB,EAASzR,EAAO,GAAGnf,KACnBqsB,GACF,IAAAgE,sBAAqBM,EAAQC,EAAQtmB,EAAW4lB,UAAW5lB,EAAW8lB,KAAM9lB,EAAWkI,SACrFqe,EAAYxG,EAAiBhI,cAAclD,EAAO,GAAI,CAACwR,EAAO,GAAIA,EAAO,GAAKA,EAAO,KACrFG,EAAYzG,EAAiBhI,cAAclD,EAAO,GAAI,CAACyR,EAAO,GAAIA,EAAO,KAEzEG,EAAe5R,EAAOlhB,OAAS,EAAI,CAAC6yB,EAAWD,EAAW1R,EAAO,IAAM,CAAC2R,EAAWD,GACnFG,EAAe3G,EAAiB7jB,KAClC,IAAAyqB,qCAAoC5G,EAAkB0G,EAAczmB,GAAaymB,GACrF,OAAO1G,EAAiBhI,cAAc2O,EAAc3E,EACtD,EAES,EAAA6E,aACT,SAAC7G,EAAyClL,EAA2B7U,GACnE,IAAMqmB,EAASxR,EAAO,GAAGnf,KACnB4wB,EAASzR,EAAO,GAAGnf,KACnBqsB,GACF,IAAAgE,sBAAqBM,EAAQC,EAAQtmB,EAAW4lB,UAAW5lB,EAAW8lB,KAAM9lB,EAAWkI,SAGrF2e,EAAe9G,EAAiB7jB,KAClC,IAAA4qB,qCAAoC/G,EAAkBlL,EAAO,GAAIA,EAAO,GAAIkN,EAAa/hB,GACzF,CAAC6U,EAAO,KAGNkS,EAAiBhH,EAAiBhI,cAAclD,EAAO,GAAI,CAACyR,EAAO,GAAIA,EAAO,GAAKA,EAAO,GAAKA,EAAO,KAGtGG,EACiB,IAAlB5R,EAAOlhB,OAAgB,CAACozB,EAAgBF,EAAchS,EAAO,IAAM,CAACkS,EAAgBF,GACnFH,EAAe3G,EAAiB7jB,KAClC,IAAAyqB,qCAAoC5G,EAAkB0G,EAAczmB,GAAaymB,GAIrF,OADuB1G,EAAiBhI,cAAc2O,EAAc3E,EAEtE,C,63BC9CJ,cAKA,UAEA,UAGA,UAEMiF,EACF,SAACC,EAAenvB,EAAgBovB,EAAaC,EAAgBC,EAAkBC,GAC3E,OAACJ,EAAQ,GAAKnvB,EAASovB,GAAOC,EAAS,GAAKC,EAAW,EAAIC,CAA3D,EAEFC,EAAoB,SAACC,EAAkB5B,EAAiBG,EAAgB0B,EAAcC,GAC1F,IAAMC,EAAW3oB,KAAKyc,MAAM+L,EAAW,GACvB,eAAZ5B,GACFG,EAAK0B,GAAQE,EACb5B,EAAK2B,GAAQF,EAAWG,GACH,eAAZ/B,IACTG,EAAK0B,GAAQD,EAAWG,EACxB5B,EAAK2B,GAAQC,EAEjB,EAwBa,EAAA9M,cACT,SAACmF,EAAoClL,EAAkB7U,GAErD,OADAggB,EAAenL,EAAQ7U,GAChB2nB,EAAgB5H,EAAkBlL,EAAQ7U,EACnD,EAEJ,IAAM2nB,EACF,SAAC5H,EAAyClL,EAAkB7U,GAC1D,IAAM4nB,EAAqBC,EAAmC7nB,EAAY6U,GAC1E,MAAO,CAACiT,EAAwB/H,EAAkBlL,EAAQ+S,GAC5D,EAgFEE,EACF,SAAC/H,EAAyClL,EAA2B7U,GAI/D,OAFe+f,EAAiB7jB,IAbtC,SAAC6jB,EAAyClL,EAA2B7U,GAE/D,IAtEkCqlB,EAAkBnQ,EAsE9C0N,GAtE4ByC,EAsEkBxQ,EAAOlhB,OAAS,EAtEhBuhB,EAsEmBlV,EAAWigB,SAtER,CAClFltB,KAAM,gBACNiJ,WAAYqpB,EAAU,CAAC,IAAK,IAAK,KAAO,CAAC,IAAK,KAC9CvQ,WAAYuQ,EAAU,CAAC,EAAAvP,YAAY8B,SAAU,EAAA9B,YAAY8B,SAAU,EAAA9B,YAAY8B,UACzD,CAAC,EAAA9B,YAAY8B,SAAU,EAAA9B,YAAY8B,UACzD1C,UAAS,IAkED,OAAO,EAAP,KACK0N,GAAQ,CACXvsB,IAAK,WAAM,OAhEnB,SAAC0pB,EAAyClL,EAA2B+N,EACpE5iB,GACC,IACM+nB,EADUlT,EAAOlhB,OAAS,EACJ,uBAAyB,MAC/C4xB,EAAS1Q,EAAO,GAAGnf,KACnB8vB,EAAS3Q,EAAO,GAAGnf,KACnB+vB,EAAyBD,EAAO,GAChCwC,EAAwBxC,EAAO,GAAKxlB,EAAW0lB,MAC/C3D,EAAc,EAAH,CAAIlN,EAAO,GAAGnf,KAAK,GAAImf,EAAO,GAAGnf,KAAK,GAAKsK,EAAW0lB,OAAK,EAAK1lB,EAAW+hB,cAAW,GACjGtb,GAAO,IAAAC,SAAQqZ,EAAiBhiB,QAAQ/K,QAAQyR,UAAUkC,SAC1D,GAAwC,IAAAqf,sBAAqBhmB,GAA5DimB,EAAkB,qBAAEC,EAAe,kBAEpC1U,EAAe,0CACKxR,EAAWkI,QAAQ,GAAE,aAAKlI,EAAWkI,QAAQ,GAAE,0CAClDlI,EAAW8lB,KAAK,GAAE,aAAK9lB,EAAW8lB,KAAK,GAAE,iBAClEG,EAAkB,+MAQgBR,EAAsB,gEACRA,EAAsB,kCAEtDsC,EAAS,kEACyBC,EAAqB,wEACpCA,EAAqB,kEACxBxC,EAAO,GAAE,6DACPA,EAAO,GAAE,8DACRxlB,EAAW4lB,UAAU,GAAE,qBAAa5lB,EAAW4lB,UAAU,GAAE,8LAKxDL,EAAO,GAAE,wDACTA,EAAO,GAAE,+PAS7CW,EAAe,iBACfzf,EAAKI,OAAM,sCAGX,OAAO,EAAP,KACK+b,GAAQ,CACX/b,OAAQ,CAACnR,KAAMqsB,EAAavsB,KAAMqf,EAAO,GAAGrf,KAAMif,YAAa,EAAAqB,YAAY8B,UAC3EpG,aAAY,EACZC,SAAS,GAEb,CAQmBwW,CAAuClI,EAAkBlL,EAAQ+N,EAAU5iB,EAA3E,GAEf,CAOMkoB,CAA6CnI,EAAkBlL,EAAQ7U,GAAa6U,EAE1F,EAEFgT,EAAqC,SAAoC7nB,EAAe6U,GAC5F,IAAMgR,EAAc7lB,EAAW6lB,YAAYna,QAE3C,GAAsC,IAAlC1L,EAAW6lB,YAAYlyB,OACzB,IAAK,IAAIH,EAAI,EAAGA,EAAIqhB,EAAO,GAAGnf,KAAK/B,SAAUH,EAC3CqyB,EAAYjyB,KAAKihB,EAAO,GAAGnf,KAAKlC,IAIpC,IAAMsyB,EAAO9lB,EAAW8lB,KAAKpa,QACvBqW,EAAc/hB,EAAW+hB,YAAYrW,SAjIzC,SAACqX,EAA+B8C,EAAgCD,EAA8BD,EAC7FG,EAAgB5d,EAA4BigB,EAAkCpG,GAG7E,IAFA,IAAMqG,EAAcrF,EAAWpvB,OAAS,EAClC00B,EAAqC,IAAvBtG,EAAYpuB,OACvBH,EAAI,EAAGA,EAAI40B,IAAe50B,EAAG,CACpC,IAAM6zB,EAAUgB,EAActF,EAAWvvB,EAAI,GAAK0U,EAAQ1U,GAAKuuB,EAAYvuB,GACrE+zB,EAAWP,EAAgBjE,EAAWvvB,EAAI,GAAI0U,EAAQ1U,GAAIsyB,EAAKtyB,GAAIqyB,EAAYryB,GAAIoyB,EAAUpyB,GAAI6zB,GACvGC,EAAkBC,EAAU5B,EAASG,EAAMtyB,EAAGA,EAAI40B,GAC9CC,GACFtG,EAAYnuB,KACRsU,EAAQ1U,IAAMuvB,EAAWvvB,EAAI,GAAK,GAAK20B,EAAc30B,IAAMqyB,EAAYryB,GAAK,GAAKoyB,EAAUpyB,GAAK,EAChGsyB,EAAKtyB,GAAKsyB,EAAKtyB,EAAI40B,G,CAG7B,CAuHFE,CAHmBzT,EAAO,GAAGnf,KAIbmwB,EAAa7lB,EAAW4lB,UAAW5lB,EAAW2lB,QAASG,EAAM9lB,EAAWkI,QACpFlI,EAAWmoB,cAAepG,GAG9B,IAAMwG,EAAmBn0B,OAAOmL,OAAO,CAAC,EAAGS,GAE3C,OADA5L,OAAOmL,OAAOgpB,EAAe,CAAC1C,YAAW,EAAEC,KAAI,EAAE/D,YAAW,EAAE9B,SAAUjgB,EAAWigB,WAC5EsI,CACT,EAEa,EAAA1N,6BACT,SAAC3M,GACC,IAAMlO,EAAakO,EAAKlO,WAClBwoB,GAAuB,IAAAC,mCAAkCzoB,GAEzD2lB,EAAU3lB,EAAWY,UAAU,WAAY,UAC3CglB,EAAY5lB,EAAWe,QAAQ,YAAa,CAAC,EAAG,IAChD2kB,EAAQ1lB,EAAWW,OAAO,QAAS,GACnCklB,EAAc7lB,EAAWe,QAAQ,eAAgB,IACjDonB,EAAgBnoB,EAAWe,QAAQ,iBAAkB,CAAC,EAAG,IACzDghB,EAAc/hB,EAAWe,QAAQ,eAAgB,IACjD+kB,EAAO9lB,EAAWe,QAAQ,OAAQ,CAAC,EAAG,EAAG,EAAG,IAC5CmH,EAAUlI,EAAWe,QAAQ,UAAW,CAAC,EAAG,IAElD,OAAO,IAAArB,6BAA2B,GAC7BimB,QAAO,EAAEC,UAAS,EAAEF,MAAK,EAAEG,YAAW,EAAEsC,cAAa,EAAEpG,YAAW,EAAE+D,KAAI,EAAE5d,QAAO,GAAKsgB,GAC7F,EAEJ,IAAMxI,EAAiB,SAACnL,EAAkB7U,GAGxC,IAAK6U,GAA6B,IAAlBA,EAAOlhB,QAAkC,IAAlBkhB,EAAOlhB,OAC5C,MAAM,IAAIJ,MAAM,+BAIlB,GAA8B,IAA1BshB,EAAO,GAAGnf,KAAK/B,QAA0C,IAA1BkhB,EAAO,GAAGnf,KAAK/B,OAChD,MAAM,IAAIJ,MAAM,6CAMlB,GAFoBshB,EAAO,GAAGnf,KAAK,KACXmf,EAAO,GAAGnf,KAAK,GAErC,MAAM,IAAInC,MAAM,qDAGlB,IAAMm1B,EAAc7T,EAAO,GAAGnf,KAAK,GAAKsK,EAAW0lB,MAGnD,GAAsB,IAAlB7Q,EAAOlhB,SAA2C,IAA1BkhB,EAAO,GAAGnf,KAAK/B,QAAgBkhB,EAAO,GAAGnf,KAAK,KAAOgzB,GAC/E,MAAM,IAAIn1B,MAAM,gBAGlB,IAAM60B,EAAcvT,EAAO,GAAGnf,KAAK/B,OAAS,EAE5C,GAAIqM,EAAW4lB,UAAUjyB,SAAWy0B,EAClC,MAAM,IAAI70B,MAAM,8BAAuB60B,EAAW,MAIpD,GAAIpoB,EAAWkI,QAAQvU,SAAWy0B,EAChC,MAAM,IAAI70B,MAAM,4BAAqB60B,EAAW,MAIlD,GAAIpoB,EAAW8lB,KAAKnyB,SAAyB,EAAdy0B,EAC7B,MAAM,IAAI70B,MAAM,yBAAgC,EAAd60B,EAAe,MAInD,GAAIpoB,EAAWmoB,cAAcx0B,SAAWy0B,EACtC,MAAM,IAAI70B,MAAM,mCAA4B60B,EAAW,MAKzD,GAAsC,IAAlCpoB,EAAW6lB,YAAYlyB,QAAgBqM,EAAW6lB,YAAYlyB,SAAWkhB,EAAO,GAAGnf,KAAK/B,OAAS,EACnG,MAAM,IAAIJ,MAAM,wBAIlB,GAAsC,IAAlCyM,EAAW+hB,YAAYpuB,QAAgBqM,EAAW+hB,YAAYpuB,SAAWkhB,EAAO,GAAGnf,KAAK/B,OAAS,EACnG,MAAM,IAAIJ,MAAM,wBAIlB,GAAuB,YAAnBshB,EAAO,GAAGrf,MAAyC,YAAnBqf,EAAO,GAAGrf,KAC5C,MAAM,IAAIjC,MAAM,mDAGlB,GAAsB,IAAlBshB,EAAOlhB,QAAmC,YAAnBkhB,EAAO,GAAGrf,KACnC,MAAM,IAAIjC,MAAM,mDAEpB,C,k4BC/PA,cAKA,UAGA,UACA,UACA,UACA,UACA,UACA,UAGa,EAAAwyB,qBACT,SAAChD,EAA+B8C,EAAgCD,EAC/D+C,EAA+BzgB,G,MACxB0gB,EAAY7F,EAAW,GACvB8F,EAAoB9F,EAAWrX,MAAM,GACrC0c,EAAcS,EAAkBl1B,OAChCm1B,EAAcjD,EAAY,GAE1BkD,EADqBlD,EAAYna,MAAM,GACC3O,KAAI,SAAChB,EAAGvI,GAAM,OAAAuI,GAAKA,EAAI,IAAM6pB,EAAUpyB,GAAK,EAA9B,IAEtDw1B,EAD2BH,EAAkB9rB,KAAI,SAAChB,EAAGvI,GAAM,OAAAuI,EAAI4sB,EAAWn1B,GAAKm1B,EAAWn1B,EAAI40B,EAAnC,IAEpCrrB,KAAI,SAAChB,EAAGvI,GAAM,OAAAuL,KAAKyc,OAAOzf,EAAIgtB,EAAmBv1B,GAAK0U,EAAQ1U,IAAM0U,EAAQ1U,GAA9D,IAE3C,OADoB,GAACo1B,EAAWE,IAAatO,OAAM,eAAIwO,IAAkB,GAE3E,EAWS,EAAAtO,KACT,SAACqF,EAAoClL,EAAkB7U,GAErD,OADAggB,EAAenL,EAAQ7U,GAChBipB,EAAOlJ,EAAkBlL,EAAQ7U,EAC1C,EAEJ,IAAMipB,EACF,SAAClJ,EAAyClL,EAAkB7U,GAC1D,IAAM4nB,EAAqBsB,EAA0BlpB,EAAY6U,GAC3DsU,EAAWpJ,EAAiBhiB,QAAQyG,KACpC4kB,EAAoD,IAAtCxB,EAAmB/B,YAAY,IAAkD,IAAtC+B,EAAmB/B,YAAY,GAC9F,OAAI+B,EAAmBlC,MAAQ,EAGtB,CAFQ3F,EAAiB7jB,KAC5B,IAAAkpB,4CAA2CrF,EAAkBlL,EAAQ+S,GAAqB/S,IAErFuU,GAAeD,EACjB,CAACE,EAAwBtJ,EAAkBlL,EAAQ+S,IACjDuB,GAAsC,IAA1BtU,EAAO,GAAGnf,KAAK/B,QAAsC,IAAtBkhB,EAAO,GAAGnf,KAAK,KAAa0zB,EACzE,EAAC,IAAAxC,cAAa7G,EAAkBlL,EAAQ+S,IAExC,CAAC0B,EAAevJ,EAAkBlL,EAAQ+S,GAErD,EAEEyB,EACF,SAACtJ,EAAyClL,EAA2B7U,GACnE,IAAMqmB,EAASxR,EAAO,GAAGnf,KACnB4wB,EAASzR,EAAO,GAAGnf,KACnBqsB,GACF,IAAAgE,sBAAqBM,EAAQC,EAAQtmB,EAAW4lB,UAAW5lB,EAAW8lB,KAAM9lB,EAAWkI,SACrFqe,EAAYxG,EAAiBvI,gBAAgB3C,EAAO,GAAI,CAACwR,EAAO,GAAIA,EAAO,GAAKA,EAAO,KACvFG,EAAYzG,EAAiBvI,gBAAgB3C,EAAO,GAAI,CAACyR,EAAO,GAAIA,EAAO,KAE3EG,EAAe5R,EAAOlhB,OAAS,EAAI,CAAC6yB,EAAWD,EAAW1R,EAAO,IAAM,CAAC2R,EAAWD,GACnFG,EAAe3G,EAAiB7jB,KAAI,IAAAqtB,+BAA8B9C,EAAczmB,GAAaymB,GACnG,OAAO1G,EAAiBvI,gBAAgBkP,EAAc3E,EACxD,EAEEuH,EACF,SAACvJ,EAAyClL,EAA2B7U,GACnE,IAAMqmB,EAASxR,EAAO,GAAGnf,KACnB4wB,EAASzR,EAAO,GAAGnf,KACnBqsB,GACF,IAAAgE,sBAAqBM,EAAQC,EAAQtmB,EAAW4lB,UAAW5lB,EAAW8lB,KAAM9lB,EAAWkI,SACrFshB,EAAUzJ,EAAiB7jB,KAC7B,IAAAutB,+BAA8B1J,EAAkBlL,EAAO,GAAIA,EAAO,GAAIkN,EAAa/hB,GAAa,CAAC6U,EAAO,KAEtG6U,EAAqC,IAAlB7U,EAAOlhB,OAAe,CAAC61B,EAAS3U,EAAO,GAAIA,EAAO,IAAM,CAAC2U,EAAS3U,EAAO,IAGlG,OAFekL,EAAiB7jB,KAC5B,IAAAytB,mCAAkC5J,EAAkBlL,EAAQkN,EAAa/hB,GAAa0pB,EAE5F,EAEER,EAA4B,SAA2BlpB,EAAe6U,GAC1E,IAAMgR,EAAc7lB,EAAW6lB,YAAYna,QAE3C,GAAsC,IAAlC1L,EAAW6lB,YAAYlyB,OACzB,IAAK,IAAIH,EAAI,EAAGA,EAAIqhB,EAAO,GAAGnf,KAAK/B,SAAUH,EAC3CqyB,EAAYjyB,KAAKihB,EAAO,GAAGnf,KAAKlC,IAGpC,IAAMsyB,EAAO9lB,EAAW8lB,KAAKpa,QAC7B,EAAAke,aAAaC,yBACThV,EAAO,GAAGnf,KAAMsK,EAAWkI,QAASlI,EAAW4lB,UAAWC,EAAaC,EAAM9lB,EAAW2lB,SAG5F,IAAM4C,EAAmBn0B,OAAOmL,OAAO,CAAC,EAAGS,GAE3C,OADA5L,OAAOmL,OAAOgpB,EAAe,CAAC1C,YAAW,EAAEC,KAAI,EAAE7F,SAAUjgB,EAAWigB,WAC/DsI,CACT,EAEa,EAAA5N,oBAA8D,SAACzM,GAC1E,IAAMlO,EAAakO,EAAKlO,WAClBwoB,GAAuB,IAAAC,mCAAkCzoB,GAEzD2lB,EAAU3lB,EAAWY,UAAU,WAAY,UAC3CglB,EAAY5lB,EAAWe,QAAQ,YAAa,CAAC,EAAG,IAChD2kB,EAAQ1lB,EAAWW,OAAO,QAAS,GACnCklB,EAAc7lB,EAAWe,QAAQ,eAAgB,IACjD+kB,EAAO9lB,EAAWe,QAAQ,OAAQ,CAAC,EAAG,EAAG,EAAG,IAC5CmH,EAAUlI,EAAWe,QAAQ,UAAW,CAAC,EAAG,IAElD,OAAO,IAAArB,6BAA2B,GAAEimB,QAAO,EAAEC,UAAS,EAAEF,MAAK,EAAEG,YAAW,EAAEC,KAAI,EAAE5d,QAAO,GAAKsgB,GAChG,EAEA,IAAMxI,EAAiB,SAACnL,EAAkB7U,GAGxC,IAAK6U,GAA6B,IAAlBA,EAAOlhB,QAAkC,IAAlBkhB,EAAOlhB,OAC5C,MAAM,IAAIJ,MAAM,+BAIlB,GAA8B,IAA1BshB,EAAO,GAAGnf,KAAK/B,QAA0C,IAA1BkhB,EAAO,GAAGnf,KAAK/B,OAChD,MAAM,IAAIJ,MAAM,6CAMlB,GAFoBshB,EAAO,GAAGnf,KAAK,KACXmf,EAAO,GAAGnf,KAAK,GAAKsK,EAAW0lB,MAErD,MAAM,IAAInyB,MAAM,qDAIlB,GAAsB,IAAlBshB,EAAOlhB,SAA2C,IAA1BkhB,EAAO,GAAGnf,KAAK/B,QAAgBkhB,EAAO,GAAGnf,KAAK,KAAOmf,EAAO,GAAGnf,KAAK,IAC9F,MAAM,IAAInC,MAAM,gBAGlB,IAAM60B,EAAcvT,EAAO,GAAGnf,KAAK/B,OAAS,EAE5C,GAAIqM,EAAW4lB,UAAUjyB,SAAWy0B,EAClC,MAAM,IAAI70B,MAAM,8BAAuB60B,EAAW,MAIpD,GAAIpoB,EAAWkI,QAAQvU,SAAWy0B,EAChC,MAAM,IAAI70B,MAAM,4BAAqB60B,EAAW,MAIlD,GAAIpoB,EAAW8lB,KAAKnyB,SAAyB,EAAdy0B,EAC7B,MAAM,IAAI70B,MAAM,yBAAgC,EAAd60B,EAAe,MAKnD,GAAsC,IAAlCpoB,EAAW6lB,YAAYlyB,QAAgBqM,EAAW6lB,YAAYlyB,SAAWkhB,EAAO,GAAGnf,KAAK/B,OAAS,EACnG,MAAM,IAAIJ,MAAM,wBAIlB,GAAuB,YAAnBshB,EAAO,GAAGrf,MAAyC,YAAnBqf,EAAO,GAAGrf,KAC5C,MAAM,IAAIjC,MAAM,0CAGlB,GAAsB,IAAlBshB,EAAOlhB,QAAmC,YAAnBkhB,EAAO,GAAGrf,KACnC,MAAM,IAAIjC,MAAM,0CAEpB,C,0bC/KA,cAOa,EAAAynB,aACT,SAAC+E,EAAyClL,EAAkB7U,GAC1DggB,EAAenL,GACf,IAAMiV,EAAY9pB,EAAW8pB,UACvBC,EAAeD,EAAYA,EAC3BE,EAAoC,QAApBhqB,EAAWiqB,KAAiB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAK,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GACjFC,EAAwC,QAApBlqB,EAAWiqB,KACjC,CACEpV,EAAO,GAAGnf,KAAK,GAAIo0B,EAAWA,EAAWjV,EAAO,GAAGnf,KAAK,GAAKq0B,EAAclV,EAAO,GAAGnf,KAAK,GAC1Fmf,EAAO,GAAGnf,KAAK,IAEjB,CACEmf,EAAO,GAAGnf,KAAK,GAAImf,EAAO,GAAGnf,KAAK,GAAKq0B,EAAcD,EAAWA,EAAWjV,EAAO,GAAGnf,KAAK,GAC1Fmf,EAAO,GAAGnf,KAAK,IASfy0B,EAAsBpK,EAAiBvI,gBAAgB3C,EAAO,GAAIqV,GAGlEE,EAA2C,CAACC,KAAML,EAAe/J,SAAU,UAAG+J,IAC7EM,EAAD,GAAoB,IAAA3c,WAAUoS,EAAkB,CAACoK,GAAsBC,GAAoB,GAA3E,GAGhBG,EAAqB,CACzB1V,EAAO,GAAGnf,KAAK,GAAImf,EAAO,GAAGnf,KAAK,GAAKq0B,EAAclV,EAAO,GAAGnf,KAAK,GAAKo0B,EACzEjV,EAAO,GAAGnf,KAAK,GAAKo0B,GAGtB,MAAO,CADQ/J,EAAiBvI,gBAAgB8S,EAAiBC,GAEnE,EAES,EAAAtP,4BACT,SAAC/M,GAEC,IAAM4b,EAAY5b,EAAKlO,WAAWW,OAAO,aACzC,GAAImpB,EAAY,EACd,MAAM,IAAIv2B,MAAM,4CAAqCu2B,EAAS,sBAEhE,IAAMG,EAAO/b,EAAKlO,WAAWY,UAAU,OAAQ,OAC/C,GAAa,QAATqpB,GAA2B,QAATA,EACpB,MAAM,IAAI12B,MAAM,6BAAsB02B,EAAI,sBAE5C,MAAO,CAACA,KAAI,EAAEH,UAAS,EACzB,EAEJ,IAAM9J,EAAiB,SAACnL,GACtB,GAAsB,IAAlBA,EAAOlhB,OACT,MAAM,IAAIJ,MAAM,gDAAyCshB,EAAOlhB,SAKlE,GAAuB,WAAnBkhB,EAAO,GAAGrf,MAA+C,IAA1Bqf,EAAO,GAAGnf,KAAK/B,OAChD,MAAM,IAAIP,UAAU,oDAExB,C,spBCxEA,cACA,UAEA,UAEA,UACA,UA2Da,EAAAu2B,kCACT,SAAC5J,EAAyClL,EAA2BkN,EACpE/hB,GACC,IAAM4iB,EA5D4B,SAACyC,EAAkBrlB,GAA6C,OACtGjN,KAAM,iBACNiJ,WAAYqpB,EAAU,CAAC,SAAU,IAAK,KAAO,CAAC,SAAU,KACxDvQ,WAAYuQ,EAAU,CAAC,EAAAvP,YAAY8B,SAAU,EAAA9B,YAAYM,oBAAqB,EAAAN,YAAY8B,UACpE,CAAC,EAAA9B,YAAY8B,SAAU,EAAA9B,YAAYM,qBACzD6J,SAAUjgB,EAAWwqB,mBALiF,CA4DjFC,CAAgC5V,EAAOlhB,OAAS,EAAGqM,GACpE,OAAO,EAAP,KACK4iB,GAAQ,CACXvsB,IAAK,WAAM,OAtDf,SAAC0pB,EAAyC6C,EAA2B/N,EACpEkN,EAAuB/hB,GACtB,IAAMqmB,EAASxR,EAAO,GAAGnf,KACnB4wB,EAASzR,EAAO,GAAGnf,KACnB2gB,EAAsB,CAACiQ,EAAO,GAAIvnB,KAAKE,KAAMonB,EAAO,GAAKC,EAAO,GAAKA,EAAO,GAAM,IAClFoE,GAAc,IAAAC,qBAAoBtE,EAAQC,EAAQvE,GAClD,IACFhC,EAAiBvL,+BAA+B6B,EAAqB,EAAAP,YAAYM,qBAAoB,GADlGwU,EAAM,KAAEC,EAAO,KAGhBC,EAAgB,EAAA1gB,UAAU0N,eAAe4S,GACzC,IACF3K,EAAiBvL,+BAA+BkW,EAAa,EAAA5U,YAAYM,qBAAoB,GAD1F2U,EAAW,KAAEC,EAAY,KAE1B/iB,EAAO8Z,EAAYpuB,OAEnBs3B,EAAapW,EAAOlhB,OAAS,EAAK,MAAQ,QAC1Cu3B,EAAYnsB,KAAKE,KAAKonB,EAAO,GAAKC,EAAO,GAAKA,EAAO,GAAK,GAC1D,GAAwC,IAAAN,sBAAqBhmB,GAA5DimB,EAAkB,qBAAEC,EAAe,kBACpCzf,GAAO,IAAAC,SAAQqZ,EAAiBhiB,QAAQ/K,QAAQyR,UAAUkC,SAC1D6K,EAAe,YACzByU,EAAkB,uCACQhe,EAAI,wLAOG6iB,EAAc,GAAE,0BAAkBA,EAAc,GAAE,0BAC3EA,EAAc,GAAE,gDACUzU,EAAoB,GAAE,8BACxC4U,EAAS,oCACHC,EAAS,0EACsBH,EAAW,aAAKC,EAAY,oEAC5BJ,EAAM,aAAKC,EAAO,gCACtDpkB,EAAK8B,UAAS,mCAA2B9B,EAAK8B,UAAS,iFAItE2d,EAAe,wBAGb,OAAO,EAAP,KACKtD,GAAQ,CACX/b,OAAQ,CAACnR,KAAMqsB,EAAavsB,KAAMqf,EAAO,GAAGrf,KAAMif,YAAa,EAAAqB,YAAY8B,UAC3EpG,aAAY,GAEhB,CAQe2Z,CAA4BpL,EAAkB6C,EAAU/N,EAAQkN,EAAa/hB,EAA7E,GAEf,C,+HCvEJ,cAGa,EAAAsb,QACT,SAACyE,EAAyClL,EAAkBiO,GAC1D9C,EAAenL,EAAQiO,GAEvB,IAAMsI,EAAa,EAAAhhB,UAAUihB,aAAaxW,EAAO,GAAGnf,KAAMotB,GAC1D,MAAO,CAAC/C,EAAiBvI,gBAAgB3C,EAAO,GAAIuW,GACtD,EAES,EAAA7P,uBAAyD,SAACrN,GACnE,OAAAA,EAAKlO,WAAWW,OAAO,OAAQ,EAA/B,EAEJ,IAAMqf,EAAiB,SAACnL,EAAkBiO,GACxC,IAAKjO,GAA4B,IAAlBA,EAAOlhB,OACpB,MAAM,IAAIJ,MAAM,6BAGlB,IAAM+3B,EAAIzW,EAAO,GAAGnf,KAAK/B,OACzB,GAAU,IAAN23B,EACF,MAAM,IAAI/3B,MAAM,mCAGlB,GAAIuvB,GAAQwI,GAAKxI,EAAOwI,EACtB,MAAM,IAAI/3B,MAAM,gBAIlB,GAAuB,WAAnBshB,EAAO,GAAGrf,KACZ,MAAM,IAAIjC,MAAM,kCAEpB,C,wcClCA,cAGA,UASA,gCAAqCyM,GACnC,IAAIurB,EACJ,OAAQvrB,EAAWwrB,YACjB,IAAK,OACHD,GAAO,IAAAE,YACP,MACF,IAAK,UACHF,GAAO,IAAAG,eACP,MACF,IAAK,OACHH,GAAO,IAAAI,UAAS3rB,EAAW4rB,QAAU5rB,EAAW6rB,SAChD,MAEF,QACE,MAAO,CAAC5F,mBAAoB,GAAIC,gBAAiB,IAGrD,IAAM4F,EAAiBP,EAAKx4B,KAG5B,MAAO,CAACkzB,mBAFmBsF,EAAKhe,KAEJ2Y,gBADJ,kBAAW4F,EAAc,aAEnD,EAEa,EAAArD,kCAAoC,SAACzoB,GAChD,IAAMwrB,EAAaxrB,EAAWY,UAAU,aAAc,IAEtD,GAAmB,SAAf4qB,EAAuB,CACnB,QAAqBxrB,EAAWc,UAAU,oBAAqB,CAAC,EAAAirB,SAAU,EAAAC,WAAU,GAAnFJ,EAAO,KAAEC,EAAO,KACvB,MAAO,CAACL,WAAU,EAAEK,QAAO,EAAED,QAAO,EAAEpB,mBAAoB,UAAGgB,EAAU,YAAII,EAAO,YAAIC,G,CAExF,MAAO,CAACL,WAAU,EAAEhB,mBAAoBgB,EAC1C,C,sWC5CA,cAEA,UAEA,UAEA,UAMa,EAAA/P,OACT,SAACsE,EAAyClL,EAAkB7U,GAG1D,OAFAggB,EAAenL,EAAQ7U,EAAW8iB,MAE3B,CADQ/C,EAAiB7jB,IAAI+vB,EAA8BlM,EAAkBlL,EAAQ7U,GAAa6U,GAE3G,EAES,EAAA6G,sBAAkE,SAACxN,GAC5E,WAAAxO,6BAA4B,CAACojB,KAAM5U,EAAKlO,WAAWW,OAAO,OAAQ,IAAlE,EAEJ,IAAMurB,EAAwB,CAC5Bn5B,KAAM,SACNiJ,WAAY,CAAC,IAAK,KAClB8Y,WAAY,CAAC,EAAAgB,YAAY8B,SAAU,EAAA9B,YAAY8B,WAmD3CqU,EACF,SAAC3wB,EAAgCuZ,EAAkB7U,GACjD,IAAM4iB,EAAW,EAAH,KAAOsJ,GAAqB,CAAEhX,UAAWlV,EAAWigB,WAClE,OAAO,EAAP,KAAW2C,GAAQ,CAAEvsB,IAAK,WAAM,OAlDlC,SAACiF,EAAgCsnB,EAA2B/N,EAAkBiO,GAC5E,IAAMC,EAAalO,EAAO,GAAGnf,KAAKgW,QAC5BygB,EAAiBtX,EAAO,GAAGnf,KAAKgW,QAChCqW,EAAc,IAAI7rB,MAAM6sB,EAAWpvB,OAASw4B,EAAex4B,OAAS,GAE1EmvB,EAAO,EAAA1Y,UAAUgiB,cAActJ,EAAMC,EAAWpvB,QAEhD,IADA,IAAM04B,EAAyB,GACtB74B,EAAI,EAAGA,EAAIuuB,EAAYpuB,OAAQH,IAMlCA,EAAIsvB,GACNf,EAAYvuB,GAAKuvB,EAAWvvB,GAC5B64B,EAAaz4B,KAAK,mBAAYJ,EAAC,yBAAiBA,EAAC,QAE7CA,EAAIsvB,EAAOqJ,EAAex4B,QAC5BouB,EAAYvuB,GAAK24B,EAAe34B,EAAIsvB,GACpCuJ,EAAaz4B,KAAK,uBAAgBJ,EAAIsvB,EAAI,yBAAiBtvB,EAAC,SAE5DuuB,EAAYvuB,GAAKuvB,EAAWvvB,EAAI24B,EAAex4B,OAAS,GACxD04B,EAAaz4B,KAAK,mBAAYJ,EAAI24B,EAAex4B,OAAS,EAAC,yBAAiBH,EAAC,QAKnF,IAAM84B,EAAQvK,EAAYpuB,QAAU,EAC9B44B,EAAQxJ,EAAWpvB,OACnB64B,EAASL,EAAex4B,QAAU,EAClC6d,EAAe,8CACS8a,EAAK,sCAClBC,EAAK,wCACDC,EAAM,qDAEvBH,EAAa3uB,KAAK,cAAa,wEAEtBolB,EAAI,+BAAuBC,EAAWD,GAAK,kDAGxD,OAAO,EAAP,KACKF,GAAQ,CACX/b,OAAQ,CAACnR,KAAMqsB,EAAavsB,KAAMqf,EAAO,GAAGrf,KAAMif,YAAa,EAAAqB,YAAY8B,UAC3EpG,aAAY,GAEhB,CAKkCib,CAAwBnxB,EAASsnB,EAAU/N,EAAQ7U,EAAW8iB,KAA9D,GAClC,EAEE9C,EAAiB,SAACnL,EAAkBiO,GACxC,IAAKjO,GAA4B,IAAlBA,EAAOlhB,OACpB,MAAM,IAAIJ,MAAM,6BAElB,IAAMyxB,EAAanQ,EAAO,GAAGnf,KAAK/B,OAClC,GAAIqxB,EAAa,EACf,MAAM,IAAIzxB,MAAM,wBAElB,GAAIuvB,GAAQkC,GAAclC,EAAOkC,EAAa,EAC5C,MAAM,IAAIzxB,MAAM,iBAElB,IAA8C,IAA1C,EAAAm5B,aAAaj5B,QAAQohB,EAAO,GAAGrf,MACjC,MAAM,IAAIjC,MAAM,sBAElB,GAAuB,UAAnBshB,EAAO,GAAGrf,MAAuC,UAAnBqf,EAAO,GAAGrf,KAC1C,MAAM,IAAIjC,MAAM,qBAEpB,C,0qBCnGA,cAIA,UAEA,UAUa,EAAAooB,KACT,SAACoE,EAAyClL,EAAkB7U,GAG1D,OAFAggB,EAAenL,EAAQ7U,GAEhB,CADQ+f,EAAiB7jB,IAAIywB,EAA4B9X,EAAQ7U,GAAa6U,GAEvF,EAEJ,IAAM+X,EAAsB,SAAC1e,EAAkB2e,GAC7C,IAAMC,EAAiD,IAAxC5e,EAAKlO,WAAWW,OAAO,SAAU,GAC1CosB,EAAiD,IAAxC7e,EAAKlO,WAAWW,OAAO,SAAU,GAC1CqsB,EAAQ9e,EAAKlO,WAAWS,SAAS,QAAS,GAC1CwsB,EAAO/e,EAAKlO,WAAWS,SAAS,OAAQ,GAC9C,OAAO,IAAAf,6BAA4B,CAACotB,OAAM,EAAEC,OAAM,EAAEC,MAAK,EAAEC,KAAI,EAAEJ,YAAW,GAC9E,EAEa,EAAAjR,sBAAgE,SAAC1N,GAC1E,OAAA0e,EAAoB1e,GAAM,EAA1B,EAES,EAAA2N,uBAAiE,SAAC3N,GAC3E,OAAA0e,EAAoB1e,GAAM,EAA1B,EAEJ,IAAMye,EAA8B,SAAC9X,EAAkB7U,GACrD,IAAM4iB,EAAW,CACf7vB,KAAM,OACNiJ,WAA8B,IAAlB6Y,EAAOlhB,OAAe,CAAC,IAAK,IAAK,KAAO,CAAC,IAAK,KAC1DmhB,WAA8B,IAAlBD,EAAOlhB,OAAe,CAAC,EAAAmiB,YAAY8B,SAAU,EAAA9B,YAAY8B,SAAU,EAAA9B,YAAY8B,UACzD,CAAC,EAAA9B,YAAY8B,SAAU,EAAA9B,YAAY8B,UACrExb,IAAK4D,EAAWigB,UAGlB,OAAO,EAAP,KAAW2C,GAAQ,CAAEvsB,IAAK,WAAM,OAAA62B,EAAsBtK,EAAU/N,EAAQ7U,EAAxC,GAClC,EAEMktB,EACF,SAACtK,EAA2B/N,EAAkB7U,GAC5C,IAAMmtB,EAAStY,EAAO,GAAGnf,KAAKgW,QACxB0hB,EAASvY,EAAO,GAAGnf,KAAKgW,QACxB,IAAS,EAAA2hB,SAASC,qBACpBH,EAAQntB,EAAW8sB,OAAQM,EAAQptB,EAAW+sB,OAA0B,IAAlBlY,EAAOlhB,OAAekhB,EAAO,GAAGnf,UAAOpC,GAAU,GACrGyuB,EAAc,CAFZ,KAAG,MAGX,IAAKA,EACH,MAAM,IAAIxuB,MAAM,uCAElB,IAAI23B,EAAYiC,EAAOA,EAAOx5B,OAAS,GACnC45B,EAAO,GACPvtB,EAAW8sB,SACb5B,EAAYiC,EAAO,IAEjBntB,EAAW8sB,QAAU9sB,EAAW+sB,OAClCQ,EAAO,8BACEvtB,EAAW8sB,SAAW9sB,EAAW+sB,OAC1CQ,EAAO,6BACGvtB,EAAW8sB,QAAU9sB,EAAW+sB,OAC1CQ,EAAO,4BACGvtB,EAAW8sB,QAAW9sB,EAAW+sB,SAC3CQ,EAAO,2BAET,IAAMtlB,EAAO8Z,EAAYpuB,OACnB65B,EAA6B,IAAlB3Y,EAAOlhB,OAAe,gBAASkhB,EAAO,GAAGnf,KAAK/B,OAAM,MAAO,GACtE85B,EAA+B,IAAlB5Y,EAAOlhB,OAAe,8BAAgC,GACnE+5B,EAA+B,IAAlB7Y,EAAOlhB,OAAe,yBAA2B,GAC9D6d,EAAe,4CACOvJ,EAAI,iCACpBA,EAAI,+BACJA,EAAI,yBACVulB,EAAQ,yFAIRC,EAAU,uEAGMvC,EAAS,qCACnBjjB,EAAO,EAAC,mCACRA,EAAO,EAAC,iCACVslB,EAAI,wEAIRG,EAAU,sCAGhB,OAAO,EAAP,KACK9K,GAAQ,CACX/b,OAAQ,CAACnR,KAAMqsB,EAAavsB,KAAMqf,EAAO,GAAGrf,KAAMif,YAAa,EAAAqB,YAAY8B,UAC3E9F,UAAW,CACT,CAAC/e,KAAM,QAASyC,KAAM,QAASC,KAAMuK,EAAWgtB,OAAQ,CAACj6B,KAAM,OAAQyC,KAAM,QAASC,KAAMuK,EAAWitB,OAEzGzb,aAAY,GAEhB,EAEEwO,EAAiB,SAACnL,EAAkB7U,GACxC,IAAK6U,EACH,MAAM,IAAIthB,MAAM,oBAElB,GAAIyM,EAAW6sB,cAAgBhY,EAAOlhB,OAAS,GAAKkhB,EAAOlhB,OAAS,GAClE,MAAM,IAAIJ,MAAM,uBAElB,IAAKyM,EAAW6sB,aAAiC,IAAlBhY,EAAOlhB,OACpC,MAAM,IAAIJ,MAAM,0BAIlB,GAAsB,IAAlBshB,EAAOlhB,QAA0C,IAA1BkhB,EAAO,GAAGnf,KAAK/B,QAA0C,IAA1BkhB,EAAO,GAAGnf,KAAK/B,OACvE,MAAM,IAAIJ,MAAM,4BAGlB,GAAwB,YAAnBshB,EAAO,GAAGrf,MAAyC,YAAnBqf,EAAO,GAAGrf,MACvB,YAAnBqf,EAAO,GAAGrf,MAAyC,YAAnBqf,EAAO,GAAGrf,MACxB,IAAlBqf,EAAOlhB,QAAmC,YAAnBkhB,EAAO,GAAGrf,MAAyC,YAAnBqf,EAAO,GAAGrf,KACpE,MAAM,IAAIjC,MAAM,uBAGlB,GAAKshB,EAAO,GAAGrf,OAASqf,EAAO,GAAGrf,MAA4B,IAAlBqf,EAAOlhB,QAAgBkhB,EAAO,GAAGrf,OAASqf,EAAO,GAAGrf,KAC9F,MAAM,IAAIjC,MAAM,6BAEpB,C,2WCpIA,cAEA,UAGA,UA0Ea,EAAAuzB,oCACT,SAAC/G,EAAyCgE,EAAW4J,EAAW5L,EAC/D/hB,GACC,IA3EqCkV,EA2E/B0N,GA3E+B1N,EA2EclV,EAAWigB,SA3EH,CAC/DltB,KAAM,kBACNiJ,WAAY,CAAC,KACb8Y,WAAY,CAAC,EAAAgB,YAAYC,QACzBb,UAAS,IAwEL,OAAO,EAAP,KACK0N,GAAQ,CACXvsB,IAAK,WAAM,OAtEf,SAAC0pB,EAAyC6C,EAA2BmB,EAAW4J,EAC/E5L,EAAgC/hB,GAY/B,IAXA,IAAMqmB,EAAStC,EAAEruB,KACXk4B,EAASD,EAAEj4B,KAGXuS,EAAO8Z,EAAYpuB,OACnB+2B,EAAc,CAACkD,EAAO,GAAKA,EAAO,GAAKA,EAAO,GAAI7L,EAAY,GAAKA,EAAY,IAC/E8L,EAAaD,EAAO,GAAKA,EAAO,GAChCxK,GAAgB,IAAAC,qBAChB5c,GAAO,IAAAC,SAAQqZ,EAAiBhiB,QAAQ/K,QAAQyR,UAAUkC,SAC5DmnB,EAAW,GAENC,EAAM,EAAGA,GAAO,EAAGA,IAC1B,IAAK,IAAIC,EAAM,EAAGA,GAAO,EAAGA,IAC1BF,GAAY,4CACYE,EAAG,uCACVD,EAAG,4CAEArD,EAAY,GAAE,qBAAaA,EAAY,GAAE,0DAC3B3I,EAAY9Z,EAAO,GAAE,gBAAQjI,EAAWkI,QAAQ,GAAE,+BAC5ElI,EAAW8lB,KAAK,GAAE,2CACL9lB,EAAW4lB,UAAU,GAAE,yBAAiBiI,EAAU,eAAOD,EAAO,GAAE,uCAEzEvH,EApBH,GAoBiB,sEACOtE,EAAY9Z,EAAO,GAAE,eAAOjI,EAAWkI,QAAQ,GAAE,iCAC1ElI,EAAW8lB,KAAK,GAAE,6CACL9lB,EAAW4lB,UAAU,GAAE,6BAAqBiI,EAAU,cAAMD,EAAO,GAAE,yCAE5EvH,EAxBL,GAwBmB,oEAECwH,EAAU,0FAEhB,EAANE,EAAUC,EAAG,+LAWpC,IAAMxc,EAAe,kBACnB4R,EAAa,kNAOT0K,EAAQ,uBACRrnB,EAAKI,OAAM,qCAGjB,OAAO,EAAP,KACK+b,GAAQ,CACX/b,OAAQ,CAACnR,KAAMg1B,EAAal1B,KAAMuuB,EAAEvuB,KAAMif,YAAa,EAAAqB,YAAYC,QACnEvE,aAAY,EACZC,SAAS,GAEb,CAQewc,CAA8BlO,EAAkB6C,EAAUmB,EAAG4J,EAAG5L,EAAa/hB,EAA7E,GAEf,C,2XCtFJ,cAwEa,EAAAypB,8BACT,SAAC1J,EAAyCgE,EAAW4J,EAAW5L,EAC/D/hB,GACC,IAvE+BkV,EAuEzB0N,GAvEyB1N,EAuEclV,EAAWigB,SAvEH,CACzDltB,KAAM,SACNiJ,WAAY,CAAC,KACb8Y,WAAY,CAAC,EAAAgB,YAAY8B,UACzB1C,UAAS,IAoEL,OAAO,EAAP,KACK0N,GAAQ,CACXvsB,IAAK,WAAM,OAlEf,SAAC0pB,EAAyC6C,EAA2BmB,EAAW4J,EAC/E5L,EAAgC/hB,GAC/B,IAAMqmB,EAAStC,EAAEruB,KACXk4B,EAASD,EAAEj4B,KAEXuS,EAAO8Z,EAAYpuB,OACnBu6B,GAAa,IAAAvD,qBAAoBtE,EAAQuH,EAAQ7L,EAAa,GAE9DvQ,EAAe,mCACF6U,EAAO,GAAE,qCACTA,EAAO,GAAE,qCACTA,EAAO,GAAE,qCACTrmB,EAAW6lB,YAAY,GAAE,qCACzB7lB,EAAW6lB,YAAY,GAAE,4CAClB7lB,EAAW4lB,UAAU,GAAE,4CACvB5lB,EAAW4lB,UAAU,GAAE,0CACzB5lB,EAAWkI,QAAQ,GAAE,0CACrBlI,EAAWkI,QAAQ,GAAE,uCACxBlI,EAAW8lB,KAAK,GAAE,uCAClB9lB,EAAW8lB,KAAK,GAAE,8JAIV7d,EAAI,2nBAajBoe,EAAO1yB,OAAM,8XAiB7B,OAAO,EAAP,KACKivB,GAAQ,CACX/b,OAAQ,CAACnR,KAAMw4B,EAAY14B,KAAMuuB,EAAEvuB,KAAMif,YAAa,EAAAqB,YAAYM,qBAClE5E,aAAY,GAEhB,CAQe2c,CAAwBpO,EAAkB6C,EAAUmB,EAAG4J,EAAG5L,EAAa/hB,EAAvE,GAEf,EAGS,EAAA2qB,oBACT,SAAC5H,EAA+B8C,EAAgC9D,EAAgC7mB,GAExF,YAFwF,IAAAA,IAAAA,EAAA,GAExF,CAAC6mB,EAAY,GAAIA,EAAY,GAAIA,EAAY,GAC5ChjB,KAAKE,KAAK8jB,EAAW,GAAK8C,EAAY,GAAKA,EAAY,GAAK3qB,GAD7D,C,gXCxFZ,cAKA,UAOa,EAAAghB,YACT,SAAC6D,EAAyClL,EAAkB7U,GAI1D,OAHAggB,EAAenL,GAGR,CADHkL,EAAiB7jB,IAAIkyB,EAAmCrO,EAAkBlL,EAAQ7U,GAAa6U,GAErG,EAES,EAAAsH,2BACT,SAACjO,GACC,IAAMuS,EAAQvS,EAAKlO,WAAWS,SAAS,SACjClJ,EAAO2W,EAAKlO,WAAWc,UAAU,QACvC,OAAO,IAAApB,6BAA4B,CAAC+gB,MAAK,EAAElpB,KAAI,GACjD,EAEJ,IAAM82B,EAA6B,CACjCt7B,KAAM,cACNiJ,WAAY,CAAC,KACb8Y,WAAY,CAAC,EAAAgB,YAAY8B,WAyBrBwW,EACF,SAAC9yB,EAAgCuZ,EAAkB7U,GACjD,IAAM4iB,EAAW,EAAH,KAAOyL,GAA0B,CAAEnZ,UAAWlV,EAAWigB,WACvE,OAAO,EAAP,KAAW2C,GAAQ,CAAEvsB,IAAK,WAAM,OAxBlC,SAACiF,EAAgCsnB,EAA2B/N,EAAkB7U,GAExE,IAAM+hB,EAAclN,EAAO,GAAGnf,KAAKgW,QAC7BzD,EAAO8Z,EAAYpuB,OACnB26B,EAAgBC,EAAoBvuB,EAAWzI,KAAK5D,QACpD6d,EAAe,kBACvB8c,EAAa,6CACarmB,EAAI,kFAG5B,OAAO,EAAP,KACK2a,GAAQ,CACX/b,OAAQ,CAACnR,KAAMqsB,EAAavsB,KAAMqf,EAAO,GAAGrf,KAAMif,YAAa,EAAAqB,YAAY8B,UAC3E9F,UAAW,CACT,CAAC/e,KAAM,OAAQyC,KAAM,QAAS+c,YAAavS,EAAWzI,KAAK5D,OAAQ8B,KAAMuK,EAAWzI,MACpF,CAACxE,KAAM,QAASyC,KAAM,QAASC,KAAMuK,EAAWygB,QAElDjP,aAAY,GAEhB,CAK8Bgd,CAA6BlzB,EAASsnB,EAAU/N,EAAQ7U,EAAxD,GAClC,EAEEuuB,EAAsB,SAACE,GAE3B,IADA,IAAMxJ,EAAsB,CAAC,mCAA4BwJ,EAAW,sBAC3Dj7B,EAAI,EAAGA,EAAIi7B,IAAej7B,EACvB,IAANA,EACFyxB,EAAUrxB,KACN,KACA,yBAAkBJ,EAAC,2BAAmBA,EAAC,SAClCA,IAAMi7B,EAAc,EAC7BxJ,EAAUrxB,KACN,KACA,6BAAsBJ,EAAC,SAE3ByxB,EAAUrxB,KACN,KACA,8BAAuBJ,EAAC,2BAAmBA,EAAC,SAMpD,OAHAyxB,EAAUrxB,KACN,OAEGqxB,EAAUvnB,KAAK,KACxB,EAEMsiB,EAAiB,SAACnL,GACtB,IAAKA,GAA4B,IAAlBA,EAAOlhB,OACpB,MAAM,IAAIJ,MAAM,iCAElB,GAA8B,IAA1BshB,EAAO,GAAGnf,KAAK/B,OACjB,MAAM,IAAIJ,MAAM,wBAElB,GAAuB,YAAnBshB,EAAO,GAAGrf,MAAyC,YAAnBqf,EAAO,GAAGrf,KAC5C,MAAM,IAAIjC,MAAM,sBAEpB,C,irBC3FA,cAEA,UAEa,EAAA6oB,sBACT,SAAC2D,EAAyClL,EAAkBsL,GAC1DH,EAAenL,GAEf,IAAM6Z,EAAkB3O,EAAiB7jB,IAAIyyB,EAAuC9Z,EAAO,IAAKA,GAIhG,MAAO,CAHQkL,EAAiB7jB,IAC5B0yB,EAAqC7O,EAAkBlL,EAAO,GAAIsL,EAASuO,EAAgBh5B,MAC3F,CAACmf,EAAO,GAAI6Z,EAAiB7Z,EAAO,GAAIA,EAAO,KAErD,EAES,EAAAwH,qCAAuE,SAACnO,GACjF,OAAAA,EAAKlO,WAAWS,SAAS,UAAW,KAApC,EAEJ,IAAMouB,EAAiC,CACrC97B,KAAM,wCACNiJ,WAAY,CAAC,KACb8Y,WAAY,CAAC,EAAAgB,YAAY8B,WA8CrB+W,EAAyC,SAAClX,GAAqC,cAChFoX,GAA8B,CACjCx4B,IAAK,WAAM,OA7C4B,SAACusB,EAA2BnL,GACnE,IAAMqX,EAAQrX,EAAM/hB,KAAKgW,QACnB8X,EAAUsL,EAAM,GAChBC,EAAcD,EAAM,GAAKA,EAAM,GAC/B/M,EAAc,CAAC+M,EAAM,GAAItL,GAEzBhS,EAAe,8MAOIsd,EAAM,GAAE,uEAENA,EAAM,GAAE,8JAMDC,EAAW,6DAEpBD,EAAM,GAAE,uEAENA,EAAM,GAAE,kMAORC,EAAW,oCAItC,OAAO,EAAP,KACKnM,GAAQ,CACX/b,OAAQ,CAACnR,KAAMqsB,EAAavsB,KAAMiiB,EAAMjiB,KAAMif,YAAa,EAAAqB,YAAYM,qBACvE5E,aAAY,GAEhB,CAIawd,CAAiCH,EAAgCpX,EAAjE,GAFwE,EAK/EwX,EAA+B,CACnCl8B,KAAM,sCACNiJ,WAAY,CAAC,IAAK,kBAAmB,QAAS,KAC9C8Y,WAAY,CAAC,EAAAgB,YAAY8B,SAAU,EAAA9B,YAAYM,oBAAqB,EAAAN,YAAY8B,SAAU,EAAA9B,YAAY8B,WAwClGgX,EACF,SAAC7O,EAAyCtI,EAAe0I,EAAiB+O,GAEpE,IAAMtM,EAAW,EAAH,KAAOqM,GAA4B,CAAE/Z,UAAW,UAAGiL,KACjE,OAAO,EAAP,KACKyC,GAAQ,CACXvsB,IAAK,WAAM,OA1CnB,SAAC0pB,EAAyC6C,EAA2BnL,EAAe0I,EACnF+O,GACC,IAAMzoB,GAAO,IAAAC,SAAQqZ,EAAiBhiB,QAAQ/K,QAAQyR,UAAUkC,SAC1D,IACFoZ,EAAiBvL,+BAA+B0a,EAAsB,EAAApZ,YAAYM,qBAAoB,GADnG+Y,EAAY,KAAEC,EAAa,KAE5B,IAAgD,CAACD,EAAe,EAAGC,GAAc,GAAhFC,EAAoB,KAAEC,EAAqB,KAC5C9d,EAAe,iKAGoB6d,EAAoB,aAAKC,EAAqB,8BAC5E7oB,EAAK8B,UAAS,4fAkBzB,OAAO,EAAP,KACKqa,GAAQ,CACX/b,OAAQ,CAACnR,KAAM+hB,EAAM/hB,KAAMF,KAAMiiB,EAAMjiB,KAAMif,YAAa,EAAAqB,YAAY8B,UACtE9F,UAAW,CAAC,CAAC/e,KAAM,UAAWyC,KAAM,QAASC,KAAM0qB,IACnD3O,aAAY,GAEhB,CAQmB+d,CAA+BxP,EAAkB6C,EAAUnL,EAAO0I,EAAS+O,EAA3E,GAEf,EAEFlP,EAAiB,SAACnL,GACtB,IAAKA,GAA4B,IAAlBA,EAAOlhB,OACpB,MAAM,IAAIJ,MAAM,4CAGlB,IAAMitB,EAAI3L,EAAO,GACX4L,EAAQ5L,EAAO,GACfha,EAAIga,EAAO,GAIjB,GAAI2L,EAAE9qB,KAAK/B,OAAS,GAA2B,IAAtB8sB,EAAM/qB,KAAK/B,QAAkC,IAAlBkH,EAAEnF,KAAK/B,OACzD,MAAM,IAAIJ,MAAM,wBAElB,GAAIktB,EAAM/qB,KAAK,KAAO8qB,EAAE9qB,KAAK,IAAMmF,EAAEnF,KAAK,KAAO8qB,EAAE9qB,KAAK,GACtD,MAAM,IAAInC,MAAM,gCAElB,GAAgB,YAAXitB,EAAEhrB,MAAiC,YAAXgrB,EAAEhrB,MAAuC,YAAfirB,EAAMjrB,MAAqC,YAAfirB,EAAMjrB,MACzE,YAAXqF,EAAErF,MAAiC,YAAXqF,EAAErF,KAC7B,MAAM,IAAIjC,MAAM,uBAElB,GAA8B,IAA1BshB,EAAO,GAAGnf,KAAK/B,OACjB,MAAM,IAAIJ,MAAM,gCAEpB,C,6XCxJA,cAKA,UASa,EAAAkpB,IACT,SAACsD,EAAyClL,EAAkB7U,GAO1D,OANAggB,EAAenL,GAMR,CAACkL,EAAiB7jB,IAAIszB,EAA2B3a,EAAQ7U,GAAa6U,GAE/E,EAES,EAAA6H,mBAA4D,SAACxO,GACxE,IAAM8e,EAAQ9e,EAAKlO,WAAWS,SAAS,QAAS,MAC1CwsB,EAAO/e,EAAKlO,WAAWS,SAAS,OAAQ,KACxClJ,EAAO2W,EAAKlO,WAAWS,SAAS,OAAQ,GACxCjK,EAAO0X,EAAKlO,WAAWW,OAAO,QAEpC,OAAO,IAAAjB,6BAA4B,CAACstB,MAAK,EAAEC,KAAI,EAAE11B,KAAI,EAAEf,KAAI,GAC7D,EAEA,IAAMi5B,EAAqB,CACzB18B,KAAM,MACNiJ,WAAY,CAAC,KACb8Y,WAAY,CAAC,EAAAgB,YAAY8B,WAoC3B,SAAgB4X,EAA2B3a,EAAkB7U,GAC3D,OAAO,EAAP,KAAWyvB,GAAkB,CAAEva,UAAWlV,EAAWigB,SAAU5pB,IAAK,WAAM,OAlC5E,SAA8Bwe,EAAkB7U,GAC9C,IAAM0vB,EAAI7a,EAAO,GAAGnf,KAAK,GACnBuS,EAAO4M,EAAO,GAAGnf,KAAK/B,OACtBkC,GAAQkJ,KAAKyc,OAAOxb,EAAWxJ,KAAO,GAAK,GAC3C+rB,EAAKxjB,KAAKE,MAAMe,EAAWxJ,KAAO,GAAK,GACvCw2B,EAAQ,gBAAShtB,EAAWgtB,MAAK,qBAAahtB,EAAWxJ,KAAI,KAC7De,EAAO,gBAASyI,EAAWzI,KAAI,KAC/B01B,EAAO,gBAASjtB,EAAWitB,KAAI,KAE/Bzb,EAAe,0CACSvJ,EAAI,sIAKbpS,EAAI,kBAAU0sB,EAAE,6EAETmN,EAAC,oKAMNn4B,EAAI,cAAMy1B,EAAK,0BAAkBC,EAAI,aAE5D,OAAO,EAAP,KACKwC,GAAkB,CACrBva,UAAWlV,EAAWigB,SACtBpZ,OAAQ,CAACnR,KAAMmf,EAAO,GAAGnf,KAAMF,KAAMqf,EAAO,GAAGrf,KAAMif,YAAa,EAAAqB,YAAY8B,UAC9EpG,aAAY,GAEhB,CAG4Eme,CAAqB9a,EAAQ7U,EAA7B,GAC5E,CAFA,+BAIA,IAAMggB,EAAiB,SAACnL,GACtB,IAAKA,GAA4B,IAAlBA,EAAOlhB,OACpB,MAAM,IAAIJ,MAAM,yBAElB,GAA8B,IAA1BshB,EAAO,GAAGnf,KAAK/B,OACjB,MAAM,IAAIJ,MAAM,2DAElB,GAAuB,YAAnBshB,EAAO,GAAGrf,KACZ,MAAM,IAAIjC,MAAM,6BAEpB,C,2WCvFA,cACA,UAEA,UACA,SAEA,UACA,UAyEa,EAAAozB,oCACT,SAAC5G,EAAyClL,EACzC2T,GACC,IA1EqCnD,EAAkBnQ,EA0EjD0N,GA1E+ByC,EA0EcxQ,EAAOlhB,OAAS,EA1EZuhB,EA0EesT,EAAqBgC,mBA1Ed,CACjFz3B,KAAM,kBACNiJ,WAAYqpB,EAAU,CAAC,IAAK,IAAK,QAAU,CAAC,IAAK,KACjDvQ,WAAYuQ,EAAU,CAAC,EAAAvP,YAAYC,OAAQ,EAAAD,YAAYC,OAAQ,EAAAD,YAAYC,QACrD,CAAC,EAAAD,YAAYC,OAAQ,EAAAD,YAAYC,QACvDb,UAAS,IAsEL,OAAO,EAAP,KACK0N,GAAQ,CACXvsB,IAAK,WAAM,OApEf,SAAC0pB,EAAyC6C,EAA2B/N,EACpE2T,GACC,IAAMnD,EAAUxQ,EAAOlhB,OAAS,EAC1B2xB,EAAcD,EAAU,+BAAiC,GACzD8H,EAAStY,EAAO,GAAGnf,KACnB03B,EAASvY,EAAO,GAAGnf,KACnBqsB,EAAc,EAAApY,cAAcuY,UAAUiL,EAAQC,GAAQ,GACtDvL,GAAe,EAAAzX,UAAU0X,SAASjN,EAAO,GAAGnf,KAAMmf,EAAO,GAAGnf,MAElE,IAAKqsB,EACH,MAAM,IAAIxuB,MAAM,yCAElB,IAAM23B,EAAYiC,EAAOA,EAAOx5B,OAAS,GACnCi8B,EAAiB7wB,KAAKE,KAAKisB,EAAY,GACvC/I,EAAQgL,EAAOx5B,OACfyuB,EAAQgL,EAAOz5B,OAEf8S,GAAO,IAAAC,SAAQqZ,EAAiBhiB,QAAQ/K,QAAQyR,UAAUkC,SAC1DkpB,GAAiB,IAAAhmB,mBAAkBkY,EAAYpuB,QAC/C8V,EAAUsY,EAAYpuB,OACtBm8B,GAAgB,IAAA9lB,iBAChB,GAAwC,IAAAgc,sBAAqBwC,GAA5DvC,EAAkB,qBAAEC,EAAe,kBAEpC6J,EACF1K,EAAU,WAAG,IAAA2K,kBAAiBH,EAAgBC,EAAejb,EAAO,GAAGnf,KAAMqsB,GAAa,IAAU,GAElGkO,EACFpO,EAAc,UA6CxB,SACIgO,EAAwBC,EAAkCjb,EAAkB9O,GAC9E,IAAImqB,EAAyB,GACzBC,EAAyB,GAEvBC,EAAWvb,EAAO,GAAGnf,KACrB26B,EAAWxb,EAAO,GAAGnf,KAErB46B,EAAUF,EAASz8B,OACnB48B,EAAUF,EAAS18B,OAEnB8V,EAAU1D,EAASpS,OACnB68B,EAAY/mB,EAAU6mB,EACtBG,EAAYhnB,EAAU8mB,GAE5BL,EAAyBE,EAASrzB,KAAI,SAAC8F,EAAGrP,GAAM,uBAAUs8B,EAAct8B,EAAIg9B,GAA5B,KACzBF,EAAU,GAAK,MACtCJ,EAAuBxyB,KAAK,OAC5ByyB,EAAyBE,EAAStzB,KAAI,SAAC8F,EAAGrP,GAAM,uBAAUs8B,EAAct8B,EAAIi9B,GAA5B,KACzBF,EAAU,GAAK,MACtCJ,EAAuBzyB,KAAK,MAE5B,IAAMgzB,EAAiB,EAAA/mB,cAAcC,iBAAiBwmB,EAAUrqB,GAC1D4qB,EAAiB,EAAAhnB,cAAcC,iBAAiBymB,EAAUtqB,GAE1D6qB,EAAiBF,EAAe3zB,KAAI,SAAAkN,GAAK,uBAAU6lB,EAAc7lB,EAAIumB,GAAU,QAAtC,IAA+C9yB,KAAK,MAC7FmzB,EAAiBF,EAAe5zB,KAAI,SAAAkN,GAAK,uBAAU6lB,EAAc7lB,EAAIwmB,GAAU,QAAtC,IAA+C/yB,KAAK,MAC7FozB,EAAiB,+BAAwBhB,EAAcrmB,EAAU,GAAE,uBAChEqmB,EAAcrmB,EAAU,GAAE,qBAAaqmB,EAAcrmB,EAAU,GAAE,uBACjEqmB,EAAcrmB,EAAU,GAAE,eAmBnC,MAjBoC,mDAElComB,EAAc,2CACdiB,EAAc,eACdF,EAAc,uCACUV,EAAsB,kFAK9CL,EAAc,2CACdiB,EAAc,eACdD,EAAc,uCACUV,EAAsB,+BAKlD,CA9F2BY,CAAyBlB,EAAgBC,EAAejb,EAAQkN,IAAiB,GAEhGiP,EAA2BnP,EAAc,2BAA6B,eA8FlF,SAAciO,EAAyB7nB,GAErC,IADA,IAAIgpB,EAAM,GACDz9B,EAAI,EAAGA,EAAIyU,EAAO,EAAGzU,IAC5By9B,GAAO,aAAMnB,EAAct8B,GAAE,MAI/B,OAFAy9B,GAAO,aAAMnB,EAAc7nB,EAAO,GAAE,MAChC,MAEN,CAtG0FipB,CAAKpB,EAAe3N,GAAM,KACxGgP,EAA2BtP,EAAc,2BAA6B,eAuGlF,SAAciO,EAAyB7nB,GAErC,IADA,IAAIgpB,EAAM,GACDz9B,EAAI,EAAGA,EAAIyU,EAAO,EAAGzU,IAC5By9B,GAAO,aAAMnB,EAAct8B,GAAE,MAI/B,OAFAy9B,EAAO,QACH,aAAMnB,EAAc7nB,EAAO,GAEjC,CA/G0FmpB,CAAKtB,EAAe1N,GAAM,KACxGiP,EAAyBxP,EAAc,GAAK,UAAGgO,EAAc,gEACzBC,EAAcrmB,EAAU,GAAE,gBAAQqmB,EAAcrmB,EAAU,GAAE,4BAC7FqmB,EAAcrmB,EAAU,GAAE,gBAAQqmB,EAAcrmB,EAAU,GAAE,uBAE/D+H,EAAe,wBACbye,EAAiC,yBACjCF,EAAuB,yBACvB9J,EAAkB,sDAEhBoL,EAAsB,sFAGFzB,EAAc,8CACvBoB,EAAwB,uCACxBG,EAAwB,yIAKnC7L,EAAW,2BACXY,EAAe,2BACfzf,EAAKI,OAAM,4BAErB,OAAO,EAAP,KACK+b,GAAQ,CACX/b,OAAQ,CAACnR,KAAMqsB,EAAavsB,KAAMqf,EAAO,GAAGrf,KAAMif,YAAa,EAAAqB,YAAYC,QAC3EvE,aAAY,EACZC,SAAS,GAEb,CAQe6f,CAA8BvR,EAAkB6C,EAAU/N,EAAQ2T,EAAlE,GAEf,C,yZCtFJ,cAEA,UACA,SAEA,UACA,UAEa,EAAA5L,OACT,SAACmD,EAAyClL,EAAkB7U,GAG1D,OAFAggB,EAAenL,GAEXkL,EAAiBhiB,QAAQyG,KACpB,CAACub,EAAiB7jB,KACrB,IAAAyqB,qCAAoC5G,EAAkBlL,EAAQ7U,GAAa6U,IAExE,CAACkL,EAAiB7jB,IAAIqtB,EAA8B1U,EAAQ7U,GAAa6U,GAEpF,EAES,EAAAgI,sBACT,SAAC3O,GAAmD,WAAAua,mCAAkCva,EAAKlO,WAAvC,EAExD,IAAMuxB,EAA8B,SAAClM,EAAkBnQ,GAAsB,OAC3EniB,KAAM,SACNiJ,WAAYqpB,EAAU,CAAC,IAAK,IAAK,QAAU,CAAC,IAAK,KACjDvQ,WAAYuQ,EAAU,CAAC,EAAAvP,YAAY8B,SAAU,EAAA9B,YAAY8B,SAAU,EAAA9B,YAAY8B,UACzD,CAAC,EAAA9B,YAAY8B,SAAU,EAAA9B,YAAY8B,UACzD1C,UAAS,EALkE,EAuD7E,SAAgBqU,EACZ1U,EAAkB2T,GACpB,IAAM5F,EAAW2O,EAA4B1c,EAAOlhB,OAAS,EAAG60B,EAAqBgC,oBACrF,OAAO,EAAP,KAAW5H,GAAQ,CAAEvsB,IAAK,WAAM,OAlDlC,SACIusB,EAA2B/N,EAAkB2T,GAC/C,IAAM2E,EAAStY,EAAO,GAAGnf,KACnB03B,EAASvY,EAAO,GAAGnf,KACnBqsB,EAAc,EAAApY,cAAcuY,UAAUiL,EAAQC,GAAQ,GAC5D,IAAKrL,EACH,MAAM,IAAIxuB,MAAM,yCAElB,IAAMs8B,GAAiB,IAAAhmB,mBAAkBkY,EAAYpuB,QAC/Cm8B,GAAgB,IAAA9lB,iBAChB,GAAwC,IAAAgc,sBAAqBwC,GAA5DvC,EAAkB,qBAAEC,EAAe,kBAEpCb,EAAUxQ,EAAOlhB,OAAS,EAC1B2xB,EAAcD,EAAU,+BAAiC,GACzD0K,EACF1K,EAAU,UAAG2K,EAAiBH,EAAgBC,EAAejb,EAAO,GAAGnf,KAAMqsB,GAAa,IAAW,GAEnG9Z,EAAO8Z,EAAYpuB,OACnB69B,EAAQrE,EAAOx5B,OACf89B,EAAQrE,EAAOz5B,OACfu3B,EAAYiC,EAAOA,EAAOx5B,OAAS,GACnC6d,EAAe,gBACjByU,EAAkB,iBAClB8J,EAAuB,2CACG9nB,EAAI,+BACpBupB,EAAK,6BACLC,EAAK,qJAKKvG,EAAS,mCACnBsG,EAAQ,EAAC,iCACTC,EAAQ,EAAC,2EAGfnM,EAAW,qBACXY,EAAe,kCAGvB,OAAO,EAAP,KACKtD,GAAQ,CACX/b,OAAQ,CAACnR,KAAMqsB,EAAavsB,KAAMqf,EAAO,GAAGrf,KAAMif,YAAa,EAAAqB,YAAY8B,UAC3EpG,aAAY,GAEhB,CAKkCkgB,CAAwB9O,EAAU/N,EAAQ2T,EAA1C,GAClC,CAJA,kCAMA,IAAMxI,EAAiB,SAACnL,GACtB,IAAKA,GAA4B,IAAlBA,EAAOlhB,OACpB,MAAM,IAAIJ,MAAM,6BAGlB,GAAIshB,EAAO,GAAGnf,KAAKmf,EAAO,GAAGnf,KAAK/B,OAAS,KAAOkhB,EAAO,GAAGnf,KAAKmf,EAAO,GAAGnf,KAAK/B,OAAS,GACvF,MAAM,IAAIJ,MAAM,oCAGlB,GAAwB,YAAnBshB,EAAO,GAAGrf,MAAyC,YAAnBqf,EAAO,GAAGrf,MACvB,YAAnBqf,EAAO,GAAGrf,MAAyC,YAAnBqf,EAAO,GAAGrf,KAC7C,MAAM,IAAIjC,MAAM,+BAGlB,GAAIshB,EAAO,GAAGrf,OAASqf,EAAO,GAAGrf,KAC/B,MAAM,IAAIjC,MAAM,4BAEpB,EAEA,SAAgBy8B,EACZH,EAAwBC,EAAkCzmB,EAA4BtD,EACtFH,GACF,IAAIsE,EACEV,EAASH,EAAQ1V,OACjB8V,EAAU1D,EAASpS,OACnBmW,EAAWL,EAAUD,EAEzBU,EADET,EAAU,GAAKD,EAAS,EACF,SAEAH,EAAQtM,KAAI,SAAC8F,EAAGrP,GAAM,uBAAUs8B,EAAct8B,EAAIsW,GAA5B,IAAyCpM,KAAK,MAE9F,IACM0L,EADgB,EAAAO,cAAcC,iBAAiBP,EAAStD,GAC1BhJ,KAAI,SAAAkN,GAAK,uBAAU6lB,EAAc7lB,EAAIH,GAAS,QAArC,IAA8CpM,KAAK,MAG5FmJ,EAAS,uCAkBb,OAnBiC,IADlB,EAAAuD,UAAU5T,KAAK6S,KAI5BxC,EAAS,uBAEoBjB,EAAW,yCAExCiqB,EAAc,2CACdzmB,EAAa,0CACcc,EAAqB,wBACzCrD,EAAM,QAE2B,0CAExCgpB,EAAc,2CACdzmB,EAAa,mCAKjB,CAnCA,oB,gWCzGA,cAEA,UACA,SAEA,UAEMuoB,EAAsB,CAC1B5+B,KAAM,OACNiJ,WAAY,CAAC,KACb8Y,WAAY,CAAC,EAAAgB,YAAY8b,mBA+Cd,EAAAvY,4BAA8B,SAAC/d,EAAgCmc,GACxE,cAAKka,GAAmB,CAAEt7B,IAAK,WAAM,OA7CX,SAACiF,EAAgCmc,GAC7D,IAuGgBxP,EAAcvS,EAAgB4U,EAAcC,EAvGtD9D,GAAO,IAAAC,SAAQpL,EAAQyC,QAAQ/K,QAAQyR,UAAUkC,SACjDoc,EAAatL,EAAM/hB,KAEnBm8B,EAAY9O,EAAWpvB,OAEvBqf,EAAayE,EAAM/hB,KAAK/B,OAExBk8B,GAAiB,IAAAhmB,mBAAkBmJ,GACnC9X,GAAW,IAAAgoB,aAAY,KAAMlQ,GAC7B8e,GA8FU7pB,EA9FO+K,EA8FOtd,EA9FKwF,EA8FWoP,EA9FDyY,EAAWA,EAAWpvB,OAAS,GA8FhB4W,EA9FoBwY,EAAWA,EAAWpvB,OAAS,GA+FlG,IAATsU,GAAuB,IAATA,EACT,GAIO,wBACJvS,EAAKuS,EAAO,GAAE,0BACdvS,EAAKuS,EAAO,GAAE,4BACZvS,EAAKuS,EAAO,GAAE,gCACdvS,EAAKuS,EAAO,GAAE,0CACJsC,EAAI,sCACJD,EAAI,YAhGtBynB,EA8BR,SAAiC9pB,EAAcZ,EAA0B3R,GACvE,GAAa,IAATuS,EACF,MAAO,QAET,GAAa,IAATA,EACF,MAAO,eAAQZ,EAAM,IAIvB,IADA,IAAI2qB,EAAO,GACFx+B,EAAIyU,EAAO,EAAGzU,EAAIyU,EAAMzU,IAC/Bw+B,GAAQ,UAAGt8B,EAAKlC,GAAE,eAAO6T,EAAM7T,EAAIyU,EAAO,IACtCzU,EAAIyU,EAAO,IACb+pB,GAAQ,MAIZ,OAAOA,CACT,CA/C+BC,CAAwBjf,EAPnC,IAAd6e,EACgB,CAAC,EAAG,GACC,IAAdA,EACS,CAAC9O,EAAW,GAAI,GAEhB,CAACA,EAAW/P,EAAa,GAAI+P,EAAW/P,EAAa,IAES9X,GAC5E2L,EAmDR,SAAmBQ,EAA0B3R,GAC3C,IAAMuS,EAAOZ,EAAM1T,OAEnB,GAAa,IAATsU,EACF,MAAO,kBAGT,GAAa,IAATA,EACF,MAAO,2CACaZ,EAAM,GAAE,2CAI9B,IAII6qB,EAAI,GACR,GAAIjqB,EAAO,EACT,IAAK,IAAIzU,EAAI,EAAGA,EAAIyU,EAAO,IAAKzU,EAC9B0+B,GAAQ,UAAGx8B,EAAKlC,GAAE,KAGtB,MAAO,eAAQ0+B,GAAC,OAVA,OAUU,2CACEA,GAAC,OATb,SASuB,2CACXA,GAAC,OAXb,SAWuB,oDACFA,GAAC,OAVtB,WAUgC,IAClD,CA9EiBC,CAAUpP,EAAY7nB,GAE/BsW,EAAe,6CAEXqe,EAAc,oDAEXkC,EAAoB,4BACrBtrB,EAAKI,OAAM,wDAEXirB,EAAK,2BAELrrB,EAAKI,OAAM,mBAAWA,EAAM,sCAIxC,OAAO,EAAP,KACK8qB,GAAmB,CACtBlgB,SAAS,EACT5K,OAAQ,CAACnR,KAAM+hB,EAAM/hB,KAAMF,KAAMiiB,EAAMjiB,KAAMif,YAAa,EAAAqB,YAAYC,QACtEvE,aAAY,GAEhB,CAGyC4gB,CAAsB92B,EAASmc,EAA/B,GAArC,C,+IC3DJ,aAEA,SAAgB4a,EAAet/B,EAAckV,GAC3C,OAAO,IAAA+B,eAAc/B,GAAMlL,KAAI,SAAAkN,GAAK,gBAAGlX,EAAI,YAAIkX,EAAX,GACtC,CAFA,mBAIA,uBAA4BlX,EAAckV,GACxC,OAAa,IAATA,EACK,CAAClV,GAEHs/B,EAAet/B,EAAMkV,EAC9B,EAEA,+BACE,MAAO,mXAaT,C,krBC3BA,cAIA,UACA,UAEA,UAQMqqB,EAAqB,CACzBv/B,KAAM,MACNiJ,WAAY,CAAC,KACb8Y,WAAY,CAAC,EAAAgB,YAAY8B,WAGd,EAAAuF,MACT,SAAC4C,EAAyClL,EAAkB7U,GAS1D,OARAuyB,EAAiB1d,GAQV,CAPQkL,EAAiB7jB,IAAI,EAAD,KAE1Bo2B,GAAkB,CACrBpd,UAAWlV,EAAWigB,SACtB5pB,IAAK,WAAM,OAAAm8B,EAAqBzS,EAAkBlL,EAAO,GAAI7U,EAAlD,IAEb6U,GAEN,EAES,EAAAuI,qBAA8D,SAAClP,GAC1E,IAAM+b,EAAO/b,EAAKlO,WAAWY,UAAU,OAAQ,YACzCzM,EAAQ+Z,EAAKlO,WAAWS,SAAS,QAAS,GAC1CqlB,EAAO5X,EAAKlO,WAAWe,QAAQ,QACrC,OAAO,IAAArB,6BAA4B,CAACuqB,KAAI,EAAE91B,MAAK,EAAE2xB,KAAI,GACvD,EAEa,EAAAzI,OACT,SAAC0C,EAAyClL,EAAkBoV,GAC1DwI,EAAkB5d,GAClB,IAAM6d,EAAaC,EAAgC5S,EAAkBlL,EAAQoV,GAC7E,OAAO,IAAA9M,OAAM4C,EAAkB,CAAClL,EAAO,IAAK6d,EAC9C,EAES,EAAApV,sBAAwD,SAACpP,GAClE,OAAAA,EAAKlO,WAAWY,UAAU,OAAQ,WAAlC,EAEJ,IAAM+xB,EACF,SAAC5S,EAAyClL,EAAkBoV,GAC1D,IAAKlK,EAAiBhiB,QAAQ+a,cAAcjE,EAAO,GAAGqB,SACjDrB,EAAOlhB,QAAU,IAAMosB,EAAiBhiB,QAAQ+a,cAAcjE,EAAO,GAAGqB,QAC3E,MAAM,IAAI3iB,MAAM,0CAGlB,IAAMuyB,EAAO5vB,MAAML,KAAKgf,EAAO,GAAG+d,aAC5Bz+B,EAAS0gB,EAAOlhB,QAAU,EAAKkhB,EAAO,GAAGge,UAAU,GAAK,EAE9D,OAAO,IAAAnzB,6BAA4B,CAACuqB,KAAI,EAAEnE,KAAI,EAAE3xB,MAAK,GACvD,EAEEq+B,EACF,SAACzS,EAAyCtI,EAAezX,GACvD,IAAM+hB,EAAc,EAAA3X,UAAU0oB,SAASrb,EAAM/hB,KAAKgW,QAAS1L,EAAW8lB,MAChE7d,EAAO8Z,EAAYpuB,OACnBo/B,EAAcC,EAAejT,EAAkBtI,EAAOzX,GACtDwR,EAAe,kBACnBuhB,EAAW,qCACO9qB,EAAI,0DAGxB,MAAO,CACLlV,KAAM,MACNiJ,WAAY,CAAC,KACb8Y,WAAY,CAAC,EAAAgB,YAAY8B,UACzB/Q,OAAQ,CAACnR,KAAMqsB,EAAavsB,KAAMiiB,EAAMjiB,KAAMif,YAAa,EAAAqB,YAAY8B,UACvEpG,aAAY,EAEhB,EAEE+gB,EAAmB,SAAC1d,GACxB,IAAKA,GAA4B,IAAlBA,EAAOlhB,OACpB,MAAM,IAAIJ,MAAM,wBAElB,GAAuB,YAAnBshB,EAAO,GAAGrf,MAAyC,YAAnBqf,EAAO,GAAGrf,KAC5C,MAAM,IAAIjC,MAAM,sBAEpB,EAEMk/B,EAAoB,SAAC5d,GACzB,IAAKA,GAA6B,IAAlBA,EAAOlhB,QAAkC,IAAlBkhB,EAAOlhB,OAC5C,MAAM,IAAIJ,MAAM,8BAElB,GAAuB,UAAnBshB,EAAO,GAAGrf,KACZ,MAAM,IAAIjC,MAAM,uBAElB,GAAIshB,EAAOlhB,QAAU,GAAwB,WAAnBkhB,EAAO,GAAGrf,KAClC,MAAM,IAAIjC,MAAM,sBAEpB,EAEMy/B,EAAiB,SAACjT,EAAyCtI,EAAezX,GAC9E,IAAMyG,GAAO,IAAAC,SAAQqZ,EAAiBhiB,QAAQ/K,QAAQyR,UAAUkC,SAC1D,IAAkBoZ,EAAiBvL,+BAA+BiD,EAAM/hB,KAAM,EAAAogB,YAAY8B,UAAS,GAAlGzgB,EAAK,KAAED,EAAM,KACdgR,EAAU,EAAAkC,UAAU0N,eAAeL,EAAM/hB,MAE/C,OAAQsK,EAAWiqB,MACjB,IAAK,WACH,OAAOgJ,EAAexsB,EAAMgR,EAAM/hB,KAAMwS,EAAS/Q,EAAOD,EAAQ8I,EAAW8lB,KAAM9lB,EAAW7L,OAC9F,IAAK,UACH,OAAO++B,EAAczsB,EAAMgR,EAAM/hB,KAAMwS,EAAS/Q,EAAOD,EAAQ8I,EAAW8lB,MAC5E,IAAK,OACH,OAAOqN,EAAW1sB,EAAMgR,EAAM/hB,KAAMwS,EAAS/Q,EAAOD,EAAQ8I,EAAW8lB,MACzE,QACE,MAAM,IAAIvyB,MAAM,gBAEtB,EAEM0/B,EACF,SAACxsB,EAAYY,EAA0Ba,EAA4B/Q,EAAeD,EAAgB4uB,EACjG3xB,GAGC,IAFA,IAAM8T,EAAOZ,EAAM1T,OACfuf,EAAQ,GACH1f,EAAIyU,EAAO,EAAGzU,GAAK,IAAKA,EAC/B0f,GAAS,0BACD1f,EAAC,eAAOsyB,EAAKtyB,GAAE,qEAEZ6T,EAAM7T,GAAE,qDACH0U,EAAQ1U,GAAE,eAG5B,MAAO,mCACYyU,EAAI,sDACU9T,EAAK,oEAGlC+e,EAAK,0DACgC/b,EAAK,aAAKD,EAAM,qDACvBuP,EAAK8B,UAAS,wDAIlD,EAEE2qB,EACF,SAACzsB,EAAYY,EAA0Ba,EAA4B/Q,EAAeD,EAAgB4uB,GAK5F,IAHA,IAAM7d,EAAOZ,EAAM1T,OAEfuf,EAAQ,GACH1f,EAAIyU,EAAO,EAAGzU,GAAK,IAAKA,EAC/B0f,GAAS,0BACL1f,EAAC,eAAOsyB,EAAKtyB,GAAE,qFAGD,GAAK6T,EAAM7T,GAAK,GAAE,sFAE5B6T,EAAM7T,GAAE,kEAEJ0U,EAAQ1U,GAAE,eAGxB,MAAO,mCACQyU,EAAI,sEAGnBiL,EAAK,0DACgC/b,EAAK,aAAKD,EAAM,qDACvBuP,EAAK8B,UAAS,wDAI9C,EAEF4qB,EACF,SAAC1sB,EAAYY,EAA0Ba,EAA4B/Q,EAAeD,EAAgB4uB,GAK5F,IAHA,IAAM7d,EAAOZ,EAAM1T,OAEfuf,EAAQ,GACH1f,EAAIyU,EAAO,EAAGzU,GAAK,IAAKA,EAC/B0f,GAAS,0BACL1f,EAAC,eAAOsyB,EAAKtyB,GAAE,2DAEZ6T,EAAM7T,GAAE,iBAAS6T,EAAM7T,GAAK,EAAC,oCACxB0U,EAAQ1U,GAAE,aAGxB,MAAO,mCACQyU,EAAI,sEAGnBiL,EAAK,0DACgC/b,EAAK,aAAKD,EAAM,qDACvBuP,EAAK8B,UAAS,wDAI9C,C,uwBCzMR,cAIA,UAEA,UAWa,EAAAyR,YACT,SAAC+F,EAAyClL,EAAkB7U,GAC1DggB,EAAenL,GACf,IAAM+N,EACF,CAAC7vB,KAAM,cAAeiJ,WAAY,CAAC,KAAM8Y,WAAY,CAAC,EAAAgB,YAAY8B,UAAW1C,UAAWlV,EAAWigB,UAGvG,MAAO,CAFQF,EAAiB7jB,IAAI,EAAD,KAC3B0mB,GAAQ,CAAEvsB,IAAK,WAAM,OAAA+8B,EAA6Bve,EAAQ+N,GAAU,EAAO5iB,EAAtD,IAAoE6U,GAEnG,EAES,EAAAoF,2BACT,SAAC/L,GACC,IAAMyX,EAAUzX,EAAKlO,WAAWY,UAAU,WAAY,UAChDyyB,EAAWnlB,EAAKlO,WAAWW,OAAO,YAAa,GAC/C2yB,EAAsE,IAAnDplB,EAAKlO,WAAWW,OAAO,oBAAqB,GAC/DklB,EAAc3X,EAAKlO,WAAWe,QAAQ,gBACtCmH,EAAUgG,EAAKlO,WAAWe,QAAQ,UAAW,IAC7C+kB,EAAO5X,EAAKlO,WAAWe,QAAQ,OAAQ,IAG7C,GAAiB,IAAbsyB,EACF,MAAM,IAAI9/B,MAAM,0EAGlB,OAAO,IAAAmM,6BAA4B,CAACimB,QAAO,EAAE0N,SAAQ,EAAEC,gBAAe,EAAEzN,YAAW,EAAE3d,QAAO,EAAE4d,KAAI,GACpG,EAEJ,IAAMsN,EACF,SAACve,EAAkB+N,EAA2B2Q,EAA2BvzB,GAE7D,QACFwzB,EAAwC3e,EAAQ7U,EAAYuzB,GAAiB,GAD1E3L,EAAkB,KAAE7F,EAAW,KAEhC8L,EAAa,EAAAzjB,UAAU5T,KAAKoxB,EAAmB/B,aAEjD4N,EAAM,GACN7L,EAAmB0L,gBACrBG,GAAO,yBAAkB5F,EAAU,MAEnC4F,GAAO,yBAAkB5F,EAAU,YAErC,IAAM6F,EAAcC,EAAoB9e,EAAO,GAAGnf,KAAMkyB,EAP5C,kBAOqE6L,EAAK,OAChFjiB,EAAe,oBACrBkiB,EAAW,YAEX,OAAO,EAAP,KACK9Q,GAAQ,CACX/b,OAAQ,CAACnR,KAAMqsB,EAAavsB,KAAMqf,EAAO,GAAGrf,KAAMif,YAAa,EAAAqB,YAAY8B,UAC3EpG,aAAY,GAEhB,EAEK,EAAAsK,kBACT,SAACiE,EAAyClL,EAAkB7U,GAC1DggB,EAAenL,GACf,IAAM+N,EAAW,CACf7vB,KAAM,oBACNiJ,WAAY,CAAC,KACb8Y,WAAY,CAAC,EAAAgB,YAAY8B,UACzB1C,UAAW,UAAGlV,EAAWszB,kBAI3B,MAAO,CAFQvT,EAAiB7jB,IAAI,EAAD,KAC3B0mB,GAAQ,CAAEvsB,IAAK,WAAM,OAAA+8B,EAA6Bve,EAAQ+N,GAAU,EAAM5iB,EAArD,IAAmE6U,GAElG,EAES,EAAAkH,iCACT,SAAC7N,GACC,IAAMolB,EAAsE,IAAnDplB,EAAKlO,WAAWW,OAAO,oBAAqB,GACrE,OAAO,IAAAjB,6BACH,CAACimB,QAAS,GAAI0N,SAAU,EAAGC,gBAAe,EAAEzN,YAAa,GAAI3d,QAAS,GAAI4d,KAAM,IACtF,EAOS,EAAAhJ,QACT,SAACiD,EAAyClL,EAAkB7U,GAC1DggB,EAAenL,GACf,IAAM+N,EACF,CAAC7vB,KAAM,UAAWiJ,WAAY,CAAC,KAAM8Y,WAAY,CAAC,EAAAgB,YAAY8B,UAAW1C,UAAWlV,EAAWigB,UAGnG,MAAO,CAFQF,EAAiB7jB,IAAI,EAAD,KAC3B0mB,GAAQ,CAAEvsB,IAAK,WAAM,OAAAu9B,EAAyB/e,EAAQ+N,GAAU,EAAO5iB,EAAlD,IAAgE6U,GAE/F,EAES,EAAAkI,uBACT,SAAC7O,GACC,IAAMyX,EAAUzX,EAAKlO,WAAWY,UAAU,WAAY,UAChDyyB,EAAWnlB,EAAKlO,WAAWW,OAAO,YAAa,GAC/CklB,EAAc3X,EAAKlO,WAAWe,QAAQ,gBACtCmH,EAAUgG,EAAKlO,WAAWe,QAAQ,UAAW,IAC7C+kB,EAAO5X,EAAKlO,WAAWe,QAAQ,OAAQ,IACvC8yB,EAAe3lB,EAAKlO,WAAWW,OAAO,gBAAiB,GACvDilB,EAAY1X,EAAKlO,WAAWe,QAAQ,YAAa,IAGvD,GAAqB,IAAjB8yB,EACF,MAAM,IAAItgC,MAAM,+DAElB,GAAiB,IAAb8/B,EACF,MAAM,IAAI9/B,MAAM,sEAGlB,OAAO,IAAAmM,6BACH,CAACimB,QAAO,EAAE0N,SAAQ,EAAEC,iBAAiB,EAAOzN,YAAW,EAAE3d,QAAO,EAAE4d,KAAI,EAAE+N,aAAY,EAAEjO,UAAS,GACrG,EAEJ,IAAMgO,EACF,SAAC/e,EAAkB+N,EAA2B2Q,EAA2BvzB,GAE7D,QACFwzB,EAAwC3e,EAAQ7U,EAAYuzB,GAAiB,GAD1E3L,EAAkB,KAAE7F,EAAW,KAMhC2R,EAAcC,EAAoB9e,EAAO,GAAGnf,KAAMkyB,EAJ5C,2CAGA,GAC0E,QAChFpW,EAAe,kBACvBkiB,EAAW,UAET,OAAO,EAAP,KACK9Q,GAAQ,CACX/b,OAAQ,CAACnR,KAAMqsB,EAAavsB,KAAMqf,EAAO,GAAGrf,KAAMif,YAAa,EAAAqB,YAAY8B,UAC3EpG,aAAY,GAEhB,EAEFgiB,EACF,SAAC3e,EAAkB7U,EAAqDuzB,GAElE,IAAMxQ,EAAalO,EAAO,GAAGnf,KAAKgW,QAC5BooB,EAAe1/B,OAAOiI,eAAeC,KAAK0D,EAAY,aACtD6lB,EAAc7lB,EAAW6lB,YAAYna,QACrCxD,EAAUlI,EAAWkI,QAAQwD,QAC7Bka,EAAsBkO,EAAgB9zB,EAAiC4lB,UAAUla,QAAU,GAC3Foa,EAAO9lB,EAAW8lB,KAAKpa,QAC7B,EAAAke,aAAamK,qBAAqBR,EAAkBxQ,EAAY8C,EAAa3d,EAAS0d,EAAWE,GAEjG,IAAM/D,EAAc,EAAA6H,aAAaoK,uBAC7BT,EAAkBxQ,EAAY7a,EAAS0d,EAAWC,EAAaC,EAAM9lB,EAAW2lB,SAE9E4C,EAAgBn0B,OAAOmL,OAAO,CAAC,EAAGS,GAMxC,OALI8zB,EACF1/B,OAAOmL,OAAOgpB,EAAe,CAAC1C,YAAW,EAAE3d,QAAO,EAAE4d,KAAI,EAAEF,UAAS,EAAE3F,SAAUjgB,EAAWigB,WAE1F7rB,OAAOmL,OAAOgpB,EAAe,CAAC1C,YAAW,EAAE3d,QAAO,EAAE4d,KAAI,EAAE7F,SAAUjgB,EAAWigB,WAE1E,CAACsI,EAAexG,EACzB,EAEFkS,EAA0B,CAC9BtO,QAAS,GACT0N,SAAU,EACVC,iBAAiB,EACjBzN,YAAa,GACb3d,QAAS,GACT4d,KAAM,GACN+N,aAAc,EACdjO,UAAW,GACX3F,SAAU,IAGNiU,EAAwB,CAC5BnhC,KAAM,gBACNiJ,WAAY,CAAC,KACb8Y,WAAY,CAAC,EAAAgB,YAAY8B,WAGd,EAAAoE,cAAgB,SAAC+D,EAAyClL,GAQrE,OAPAmL,EAAenL,GAOR,CANQkL,EAAiB7jB,IAAI,EAAD,KAE1Bg4B,GAAqB,CACxB79B,IAAK,WAAM,OAAAu9B,EAAyB/e,EAAQqf,GAAuB,EAAMD,EAA9D,IAEbpf,GAEN,EAEA,IAAMmL,EAAiB,SAACnL,GACtB,IAAKA,GAA4B,IAAlBA,EAAOlhB,OACpB,MAAM,IAAIJ,MAAM,8BAElB,GAAuB,YAAnBshB,EAAO,GAAGrf,MAAyC,YAAnBqf,EAAO,GAAGrf,KAC5C,MAAM,IAAIjC,MAAM,sBAEpB,EAEMogC,EACF,SAACQ,EAA8Bn0B,EAAmCo0B,EAAaX,EAAaY,GAEtF,IAAMpsB,EAAOksB,EAAUxgC,OACvB,GAAIqM,EAAW6lB,YAAYlyB,QAAU,EAAG,CACtC,IAKI2gC,EALEC,EAAKv0B,EAAW6lB,YAAY7lB,EAAW6lB,YAAYlyB,OAAS,GAC5D6gC,EAAKx0B,EAAWkI,QAAQlI,EAAWkI,QAAQvU,OAAS,GACpD8gC,EAAUz0B,EAAW8lB,KAAK9lB,EAAW8lB,KAAKnyB,OAAS,EAAI,GACvD+gC,EAAQ10B,EAAW8lB,KAAK9lB,EAAW8lB,KAAKnyB,OAAS,GACjDghC,EAAOR,EAAUlsB,EAAO,GAE1B2sB,EAAQ,GACRC,EAAW,GAmBf,GAjBEP,EADEG,EAAUC,IAAU,EACd,0CACUH,EAAE,mCAClBtsB,EAAI,2BAAmBA,EAAI,mBAAWusB,EAAE,cAAMC,EAAO,oCACjDxsB,EAAI,0BAAkBA,EAAI,oBAAY0sB,EAAI,0FAIhDP,EAAG,iBAGK,0CACUG,EAAE,mCAClBtsB,EAAI,2BAAmBA,EAAI,mBAAWusB,EAAE,cAAMC,EAAO,8BACvDL,EAAG,iBAIiC,IAAlCp0B,EAAW6lB,YAAYlyB,OAAc,CACvC,IAAMmhC,EAAK90B,EAAW6lB,YAAY7lB,EAAW6lB,YAAYlyB,OAAS,GAC5DohC,EAAK/0B,EAAWkI,QAAQlI,EAAWkI,QAAQvU,OAAS,GACpDqhC,EAAUh1B,EAAW8lB,KAAK9lB,EAAW8lB,KAAKnyB,OAAS,EAAI,GACvDshC,EAAQj1B,EAAW8lB,KAAK9lB,EAAW8lB,KAAKnyB,OAAS,GACjDuhC,EAAOf,EAAUlsB,EAAO,GAE5B2sB,EADEI,EAAUC,IAAU,EACd,4CACUH,EAAE,qCAClB7sB,EAAI,2BAAmBA,EAAI,mBAAW8sB,EAAE,cAAMC,EAAO,sCACjD/sB,EAAI,0BAAkBA,EAAI,oBAAYitB,EAAI,sCACxCX,EAAE,6DAKF,4CACUO,EAAE,qCAClB7sB,EAAI,2BAAmBA,EAAI,mBAAW8sB,EAAE,cAAMC,EAAO,uBAGzDH,EAAW,yB,CAmBb,MAdoB,8CACI5sB,EAAI,iCACtBA,EAAI,yEAGIosB,EAAK,gDAEnBO,EAAK,uBACLN,EAAK,uBACLO,EAAQ,uBACRpB,EAAG,+C,CAMH,IAUI0B,EAVEtH,EAAa,EAAAzjB,UAAU5T,KAAKwJ,EAAW6lB,aACvCuP,EAAgB,EAAAhrB,UAAU0N,eAAe9X,EAAW6lB,aACpDwP,EAAcD,EAAczhC,OAC5B2hC,EAAWt1B,EAAW8lB,KAAKnyB,OAC3B4hC,EAA0B1iB,EAAgBwiB,GAC1CG,EAAgBC,EAAUtB,EAAW,aACrCuB,EAAWD,EAAUz1B,EAAW8lB,KAAM,QACtC6P,EAAoBF,EAAUL,EAAe,iBAC7CQ,EAAcH,EAAUz1B,EAAWkI,QAAS,WAmDlD,OA/CEitB,EAHcn1B,EAAW8lB,KAAK+P,QAAO,SAAC3W,EAAK4W,GAAQ,OAAA5W,EAAM4W,CAAN,IAGzC,2MAQV1B,EAAG,iBAGO,mCAEZA,EAAG,cAGiB,oBACtBmB,EAAuB,+CACGttB,EAAI,iCACtBA,EAAI,oEAECotB,EAAW,kCACbC,EAAQ,uCACHrtB,EAAI,2CACAotB,EAAW,qCACjBA,EAAW,yBACvBK,EAAQ,uBACRF,EAAa,uBACbI,EAAW,uBACXD,EAAiB,uCAEHtB,EAAK,mGAGCxG,EAAU,kIAGf5lB,EAAI,cAAMotB,EAAW,iBAASptB,EAAI,mEACbA,EAAI,cAAMotB,EAAW,2CACtCptB,EAAI,cAAMotB,EAAW,2CACpCF,EAAO,oCAEX1B,EAAG,iDAOP,EAEFgC,EAAY,SAACM,EAA0BC,GAE3C,IADA,IAAI9iB,EAAQ,GACH1f,EAAI,EAAGA,EAAIuiC,EAAMpiC,OAAQH,IAChC0f,GAAS,kBACL8iB,EAAS,YAAIxiC,EAAC,eAAOuiC,EAAMviC,GAAE,WAGnC,OAAO0f,CACT,EAEML,EAAkB,SAAC5K,GAAyB,yDACTA,EAAI,8BAAsBA,EAAI,iCAC7DA,EAAI,mEAGYA,EAAI,+HAIhBA,EAAI,uBATgC,C,+bCjWlD,cAEA,UAEA,UAEA,UAUM4tB,EACF,SAAC9V,EAAyClL,EAAkB7U,EAA8BjN,EACzFkjC,GACCjW,EAAenL,GAEf,IAAMqhB,EAAwB,CAC5BnjC,KAAI,EACJiJ,WAAY,CAAC,KACb8Y,WAAY,CAAC,EAAAgB,YAAY8B,WAW3B,MAAO,CARQmI,EAAiB7jB,IAAI,EAAD,KAE1Bg6B,GAAqB,CACxBhhB,UAAWlV,EAAWigB,SACtB5pB,IAAK,WACD,OAAA8/B,EAAwBpW,EAAkBlL,EAAQ7U,EAAYjN,EAAMkjC,EAAUC,EAA9E,IAENrhB,GAEN,EAES,EAAA6I,sBAAkE,SAACxP,GAC9E,IAAMkoB,EAAOloB,EAAKlO,WAAWe,QAAQ,OAAQ,IACvCs1B,EAAqD,IAA1CnoB,EAAKlO,WAAWW,OAAO,WAAY,GACpD,OAAO,IAAAjB,6BAA4B,CAAC02B,KAAI,EAAEC,SAAQ,GACpD,EAEA,IAAMF,EACF,SAAC76B,EAAgCuZ,EAAkB7U,EAA8BjN,EAAckjC,EAC9FC,GAUC,IATA,IAAMnU,EAAwB,GACxBuU,EAAQzhB,EAAO,GAAGnf,KAAK/B,QAAU,EAEjC4iC,EAAU,GAEVH,EAAO,EAAAhsB,UAAUosB,cAAcx2B,EAAWo2B,KAAMvhB,EAAO,GAAGnf,KAAK/B,QAC/D8iC,EAAMR,EAASphB,EAAQuhB,GACzBM,EAAYD,EAAI,GAEXE,EAAI,EAAGA,EAAI9hB,EAAO,GAAGnf,KAAK/B,OAAQgjC,IAErCP,EAAK3iC,QAAQkjC,IAAM,GAAqB,IAAhBP,EAAKziC,QAC3BqM,EAAWq2B,UACbtU,EAAYnuB,KAAK,GAInB8iC,EAAY,+BACDC,EAAC,kBAAUA,EAAC,cAAM9hB,EAAO,GAAGnf,KAAKihC,GAAE,cAAMA,EAAC,uCACxCA,EAAC,gBAAQA,EAAC,0BACnBD,EAAS,mBAGbH,EAAQ3iC,KAAK,mBAAY+iC,EAAC,yBAAiB5U,EAAYpuB,OAAM,OAE7DouB,EAAYnuB,KAAKihB,EAAO,GAAGnf,KAAKihC,KAIpC,IAAMC,EAAQ7U,EAAYpuB,QAAU,EAE9B6d,EAAe,8CACSolB,EAAK,4FAElBN,EAAK,qDAClBC,EAAQ74B,KAAK,MAAK,qBAClB+4B,EAAI,GAAE,0DACNC,EAAS,qBACTD,EAAI,GAAE,+EAIV,OAAO,EAAP,KACKP,GAAqB,CACxBrvB,OAAQ,CAACnR,KAAMqsB,EAAavsB,KAAMqf,EAAO,GAAGrf,KAAMif,YAAa,EAAAqB,YAAY8B,UAC3EpG,aAAY,GAEhB,EAEEwO,EAAiB,SAACnL,GAEtB,IAAKA,GAA4B,IAAlBA,EAAOlhB,OACpB,MAAM,IAAIJ,MAAM,+BAGlB,IAA8C,IAA1C,EAAAm5B,aAAaj5B,QAAQohB,EAAO,GAAGrf,MACjC,MAAM,IAAIjC,MAAM,sBAEpB,EAEa,EAAAwqB,UACT,SAACgC,EAAyClL,EAAkB7U,GAE1D,OAAO61B,EAAO9V,EAAkBlL,EAAQ7U,EAAY,aADzB,WAAgB,OAAC,eAAgB,yBAA0B,GAA3C,GAE7C,EAES,EAAA4d,WACT,SAACmC,EAAyClL,EAAkB7U,GAW1D,OAAO61B,EAAO9V,EAAkBlL,EAAQ7U,EAAY,cAVzB,SAAC6U,EAAkBuhB,GAE5C,IADA,IAAI5/B,EAAO,EACFmgC,EAAI,EAAGA,EAAI9hB,EAAO,GAAGnf,KAAK/B,OAAQgjC,KACrCP,EAAK3iC,QAAQkjC,IAAM,GAAqB,IAAhBP,EAAKziC,UAC/B6C,GAAQqe,EAAO,GAAGnf,KAAKihC,IAI3B,MAAO,CAAC,eAAgB,yBAA0B,mBAAYngC,EAAI,MACpE,GAEF,EAES,EAAAmnB,UACT,SAACoC,EAAyClL,EAAkB7U,GAW1D,OAAO61B,EAAO9V,EAAkBlL,EAAQ7U,EAAY,aAVzB,SAAC6U,EAAkBuhB,GAE5C,IADA,IAAMS,EAAU,GACPF,EAAI,EAAGA,EAAI9hB,EAAO,GAAGnf,KAAK/B,OAAQgjC,KACrCP,EAAK3iC,QAAQkjC,IAAM,GAAqB,IAAhBP,EAAKziC,SAC/BkjC,EAAQjjC,KAAK,mBAAY+iC,EAAC,WAI9B,MAAO,CAAC,UAAGE,EAAQn5B,KAAK,MAAK,2BAA2B,oCAAqC,GAC/F,GAEF,EAES,EAAAmgB,UACT,SAACkC,EAAyClL,EAAkB7U,GAW1D,OAAO61B,EAAO9V,EAAkBlL,EAAQ7U,EAAY,aAVzB,SAAC6U,EAAkBuhB,GAE5C,IADA,IAAMS,EAAU,GACPF,EAAI,EAAGA,EAAI9hB,EAAO,GAAGnf,KAAK/B,OAAQgjC,KACrCP,EAAK3iC,QAAQkjC,IAAM,GAAqB,IAAhBP,EAAKziC,SAC/BkjC,EAAQjjC,KAAK,mBAAY+iC,EAAC,WAI9B,MAAO,CAAC,UAAGE,EAAQn5B,KAAK,MAAK,2BAA2B,oCAAqC,GAC/F,GAEF,EAES,EAAAogB,WACT,SAACiC,EAAyClL,EAAkB7U,GAE1D,OAAO61B,EAAO9V,EAAkBlL,EAAQ7U,EAAY,cADzB,WAAgB,OAAC,eAAgB,yBAA0B,GAA3C,GAE7C,EAES,EAAAyd,aACT,SAACsC,EAAyClL,EAAkB7U,GAE1D,OAAO61B,EAAO9V,EAAkBlL,EAAQ7U,EAAY,gBADzB,WAAgB,OAAC,eAAgB,yBAA0B,sBAA3C,GAE7C,EAES,EAAAge,mBACT,SAAC+B,EAAyClL,EAAkB7U,GAE1D,OAAO61B,EAAO9V,EAAkBlL,EAAQ7U,EAAY,sBADzB,WAAgB,OAAC,wBAAyB,oCAAqC,GAA/D,GAE7C,C,+YC7KJ,cACA,UAEA,UAEA,UAyEa,EAAAsY,uCACT,SAAChd,EAAgCw7B,EAAiBC,GAChD,IAAMnU,EAzEiC,SAACmU,GAC1C,OAAEhkC,KAAM,mBAAoB+hB,WAAY,CAAC,EAAAgB,YAAYC,QAAS/Z,WAAY,CAAC,KAAMkZ,UAAW,UAAG6hB,GAA/F,CAwEmBC,CAAqCD,GACtD,OAAO,EAAP,KAAWnU,GAAQ,CAAEvsB,IAAK,WAAM,OAtElC,SAACiF,EAAgCw7B,EAAiBlU,EAA2BmU,GAMvE,IAJA,IAAME,EAAeH,EAAQphC,KACvByiB,EAAsB4e,EAExBG,EAAW,GACN1jC,EAAI,EAAGA,EAAI,EAAGA,IAAK,CAC1B,IAAI2jC,EAAe,GACnB,OAAQ3jC,GACN,KAAK,EACH2jC,EAAe,qBACf,MACF,KAAK,EACHA,EAAe,4CACf,MACF,KAAK,EACHA,EAAe,4CACf,MACF,KAAK,EACHA,EAAe,8CACf,MACF,QACE,MAAM,IAAI5jC,MAGd2jC,GAAY,oBACdC,EAAY,qBACZ3jC,EAAI,EAAI,sDAAwD,GAAE,qPAMzDA,EAAC,wFAEVA,EAAI,EAAI,IAAM,GAAE,W,CAGhB,IAwEsB6T,EACxBa,EACAH,EACAuE,EACAlE,EA5EQ3B,GAAO,IAAAC,SAAQpL,EAAQyC,QAAQ/K,QAAQyR,UAAUkC,SAEjD6K,EAAe,mBAsECnK,EArED4vB,EAsEvB/uB,EAAU,EAAAkC,UAAU0N,eAAezQ,GACnCU,EAAS,CAAC,IAAK,IAAK,KACpBuE,EAAQ,QACRlE,EAAyBF,EACKnL,KAAI,SAACjF,EAAQtE,GACZ,IAAM6U,EAAQ,cAAON,EAAOvU,GAAE,cAAM8Y,EAAK,cAAMxU,GACzCwQ,EAAQ9U,IAAM0U,EAAQvU,OAAS,EACjC,cAAOoU,EAAOvU,EAAI,GAAE,cAAM8Y,EAAK,cAAMvE,EAAOvU,GAAE,cAAMsE,GACpD,mBAAYiQ,EAAOvU,GAAE,cAAMsE,GAC/B,MAAO,UAAGuQ,EAAK,aAAKC,EAAK,IAC3B,IACC5K,KAAK,IAElC,2EAED0K,EAAsB,8CArFc,mBA2F5C,SAAiCf,GAC/B,IAAMa,EAAU,EAAAkC,UAAU0N,eAAezQ,GAEzC,MAAO,sGAGea,EAAQ,GAAE,yBAAiBA,EAAQ,GAAE,sBAG7D,CAnGQkvB,CAAwBjf,GAAoB,oBAC5C,IAAAkL,qBAAmB,iKAQNlL,EAAoB,GAAE,iCACtBA,EAAoB,GAAE,wBAEjC+e,EAAQ,qBACRzwB,EAAKI,OAAM,6BAIX,OAAO,EAAP,KACK+b,GAAQ,CACX/b,OAAQ,CAACnR,KAAMyiB,EAAqB3iB,KAAMshC,EAAQthC,KAAMif,YAAa,EAAAqB,YAAYC,QACjFvE,aAAY,EACZC,SAAS,GAEb,CAK8B4lB,CAAiC/7B,EAASw7B,EAASlU,EAAUmU,EAA7D,GAClC,EAEJ,yBAA8B1vB,GAC5B,GAAqB,IAAjBA,EAAM1T,OACR,MAAO,CAAC,EAAG,EAAG,GAIhB,IADA,IAAI2jC,EAAQ,EACH9jC,EAAI,EAAGA,EAAI6T,EAAM1T,OAAS,IAAKH,EACtC8jC,GAASjwB,EAAM7T,GAEjB,MAAO,CAAC8jC,EAAOjwB,EAAM1T,OAAS,EAAI0T,EAAMA,EAAM1T,OAAS,GAAK,EAAG0T,EAAMA,EAAM1T,OAAS,GACtF,EAaA,0BAA+B+B,EAAyBgiB,GAWtD,OAToB,IAAhBhiB,EAAK/B,QAAwC,IAAxB+jB,EAAa/jB,SAE3B+B,EAAK/B,OAAS,GAAK+jB,EAAa/jB,OAAS,EACjC+B,EAAKA,EAAK/B,OAAS,KAAO+jB,EAAaA,EAAa/jB,OAAS,GAE7D+B,EAAKA,EAAK/B,OAAS,KAAO+jB,EAAaA,EAAa/jB,OAAS,IAC1E+B,EAAKA,EAAK/B,OAAS,KAAO+jB,EAAaA,EAAa/jB,OAAS,GAIrE,C,sGCvHA,cAGa,EAAAyH,QAAU,SAACE,EAAgCuZ,GACtD,IAAM6C,EAAe,EAAAtN,UAAUmtB,sBAAsB1iB,EAAO,GAAGnf,KAAMmf,EAAO,GAAG+d,aAC/E,OAAIt3B,EAAQyC,QAAQyG,KACX,CAAClJ,EAAQyc,cAAclD,EAAO,GAAI6C,IAElC,CAACpc,EAAQkc,gBAAgB3C,EAAO,GAAI6C,GAE/C,C,irBCRA,cAEA,UACA,SAEA,UACA,UAEM8f,EAAwB,CAC5BzkC,KAAM,SACNiJ,WAAY,CAAC,KACb8Y,WAAY,CAAC,EAAAgB,YAAYC,SAGd,EAAAmI,OACT,SAAC6B,EAAyClL,EAAkB7U,GAS1D,OARA,IAAAggB,gBAAenL,EAAQ7U,GAQhB,CAPQ+f,EAAiB7jB,IAAI,EAAD,KAE1Bs7B,GAAqB,CACxBtiB,UAAWlV,EAAWigB,SACtB5pB,IAAK,WAAM,OAAAohC,EAA8B1X,EAAkBlL,EAAQ7U,EAAxD,IAEb6U,GAEN,EAES,EAAAsJ,yBACT,SAACjQ,GAAyC,WAAAwpB,yBAAwBxpB,EAAM,GAA9B,EAEjC,EAAAkQ,yBACT,SAAClQ,GAAyC,WAAAwpB,yBAAwBxpB,EAAM,GAA9B,EAE9C,IAAMupB,EACF,SAAC1X,EAAyClL,EAAkB7U,GAC1D,IAAMyG,GAAO,IAAAC,SAAQqZ,EAAiBhiB,QAAQ/K,QAAQyR,UAAUkC,SAC1D,IAAwBgxB,EAAc9iB,EAAQ7U,GAAW,GAAxD43B,EAAM,KAAE7V,EAAW,KAI1B,GADI6V,EAAOC,OAAM,SAACh1B,GAAc,OAAM,IAANA,CAAA,KAAmD,uBAAvC7C,EAAW83B,wBAErD,OAAO,EAAP,KACKN,GAAqB,CACxB3wB,OAAQ,CAACnR,KAAMqsB,EAAavsB,KAAMqf,EAAO,GAAGrf,KAAMif,YAAa,EAAAqB,YAAYC,QAC3EtE,SAAS,EACTD,aAAc,sDACO/K,EAAK8B,UAAS,gDACvB9B,EAAKI,OAAM,8BAK3B,IAAMpQ,EAAMsrB,EAAYpuB,OACxB,GAAI8C,EAAM,EACR,MAAM,IAAIlD,MAAM,yDAAkDkD,IAGpE,IAAMshC,EAAehW,EAAYtrB,EAAM,GACjCuhC,EAAcjW,EAAYtrB,EAAM,GAEhCssB,EAAalO,EAAO,GAAGnf,KAC7B,GAAIe,IAAQssB,EAAWpvB,OACrB,MAAM,IAAIJ,MAAM,8CAAuCwvB,EAAWpvB,OAAM,qBAAa8C,IAEvF,IAAMwhC,EAAclV,EAAWtsB,EAAM,GAC/ByhC,EAAanV,EAAWtsB,EAAM,GAE9B0hC,EAAeP,EAAOnhC,EAAM,GAC5B2hC,EAAcR,EAAOnhC,EAAM,GAE7B4hC,EAAqB,GAEzB,GAAwB,WAApBr4B,EAAWiqB,KAEb,MAAM,IAAI12B,MAAM,kDAA2CyM,EAAWiqB,KAAI,MAE5E,OAAQjqB,EAAW83B,yBACjB,IAAK,aACHO,EAAqB,mKAKrB,MACF,IAAK,aACHA,EAAqB,iLAKrB,MACF,IAAK,qBACHA,EAAqB,iMAIDL,EAAW,gGACXD,EAAY,gGACZC,EAAW,gGACXD,EAAY,iIAIhC,MACF,IAAK,gBACHM,EAAqB,qHAEeL,EAAW,qBAAaD,EAAY,qBAAaC,EAAW,kDAC5ED,EAAY,oEACKG,EAAU,qBAAaD,EAAW,qBAAaC,EAAU,kDAC1ED,EAAW,+KAK/B,MACF,QAEE,MAAM,IAAI1kC,MAAM,qGACSyM,EAAW83B,wBAAuB,MAG/D,IAAMjI,GAAiB,IAAAhmB,mBAAkBpT,GACnC2sB,GAAgB,IAAAC,qBAChB7R,EAAe,kDACaymB,EAAW,eAAOC,EAAU,+DACpBC,EAAY,oBAAYC,EAAW,oBAAYD,EAAY,oBACjGC,EAAW,4BACPhV,EAAa,yBACbiV,EAAkB,wMAKdxI,EAAc,68BAiBWkI,EAAe,EAAC,uDAChBC,EAAc,EAAC,8rEAsCxCvxB,EAAKI,OAAM,+CAGvB,OAAO,EAAP,KACK2wB,GAAqB,CACxB3wB,OAAQ,CAACnR,KAAMqsB,EAAavsB,KAAMqf,EAAO,GAAGrf,KAAMif,YAAa,EAAAqB,YAAYC,QAC3EtE,SAAS,EACTD,aAAY,GAEhB,EAGEmmB,EAAgB,SAAC9iB,EAAkB7U,GACvC,IAIIs4B,EAHExJ,EADIja,EAAO,GACDnf,KAEZkiC,EAAS53B,EAAW43B,OAExB,GAAsB,IAAlBA,EAAOjkC,OAAc,CACvB,IAAM4kC,EAAe1jB,EAAO7U,EAAWw4B,gBACvC,GAAID,GAAsC,IAAtBA,EAAa/hC,KAAY,CAC3C,GAAIqe,EAAO7U,EAAWy4B,eACpB,MAAM,IAAIllC,MAAM,0DAElBqkC,EAASc,EAAgBH,EAAcv4B,EAAWiqB,KAAMjqB,EAAW24B,S,KAC9D,CACL,IAAMC,EAAc/jB,EAAO7U,EAAWy4B,eACtC,IAAKG,GAAoC,IAArBA,EAAYpiC,KAC9B,MAAM,IAAIjD,MAAM,qDAGlB+kC,EAAcpiC,MAAML,KAAK+iC,EAAYhG,aACrCgF,EAASiB,EAA8BP,EAAaxJ,EAAO9uB,EAAWiqB,KAAMjqB,EAAW24B,S,OAGzF,GAAI9jB,EAAO7U,EAAWy4B,eACpB,MAAM,IAAIllC,MAAM,0DAIpB,IAAMulC,EAAQR,GAAgBxJ,EAAM/xB,KAAI,SAACtG,EAAKjD,GAAM,OAAAuL,KAAKyc,MAAM/kB,EAAMmhC,EAAOpkC,GAAxB,IAEpD,MAAO,CAACokC,EAAQkB,EAClB,EAEMJ,EAAkB,SAACjY,EAAewJ,EAAc0O,GACpD,IAAMf,EAAS1hC,MAAML,KAAK4qB,EAAMoS,WAEhC,OADA,IAAAkG,kBAAiBnB,EAAQ3N,EAAM0O,GACxBf,CACT,EAEMiB,EACF,SAACC,EAA0BhK,EAA0B7E,EAAc0O,GAIjE,IAHA,IAAMhlC,EAASm7B,EAAMn7B,OACfikC,EAAS,IAAI1hC,MAAcvC,GAExBH,EAAI,EAAGwlC,EAAMrlC,EAAQH,EAAIwlC,EAAKxlC,IACrC,GAAiB,IAAbs7B,EAAMt7B,GAAU,CAClB,GAAiB,IAAbslC,EAAMtlC,GACR,MAAM,IAAID,MAAM,0DAElBqkC,EAAOpkC,GAAK,C,MAEZokC,EAAOpkC,GAAKslC,EAAMtlC,GAAKs7B,EAAMt7B,GAIjC,OADA,IAAAulC,kBAAiBnB,EAAQ3N,EAAM0O,GACxBf,CACT,C,mGCrQJ,cAGa,EAAAvwB,MAAQ,SAAC0Y,EAAyClL,GAE7D,OADAmL,EAAenL,GACR,CAAC,IAAI,EAAA1f,OAAO,CAAC0f,EAAO,GAAGnf,KAAK/B,QAAS,aAASL,OAAWA,EAAW,IAAIwB,WAAW+f,EAAO,GAAGnf,OACtG,EAEA,IAAMsqB,EAAiB,SAACnL,GACtB,IAAKA,GAA4B,IAAlBA,EAAOlhB,OACpB,MAAM,IAAIJ,MAAM,0BAEpB,C,+WCZA,cAEA,UAEA,UAEA,UAQM0lC,EAAuB,CAC3BlmC,KAAM,QACNiJ,WAAY,CAAC,KACb8Y,WAAY,CAAC,EAAAgB,YAAY8B,WAGd,EAAAlM,MACT,SAACqU,EAAyClL,EAAkB7U,GAS1D,OARAggB,EAAenL,GAQR,CAPQkL,EAAiB7jB,IAAI,EAAD,KAE1B+8B,GAAoB,CACvB/jB,UAAWlV,EAAWigB,SACtB5pB,IAAK,WAAM,OAAA6iC,EAAuBnZ,EAAkBlL,EAAO,GAAI7U,EAApD,IAEb6U,GAEN,EAES,EAAA2J,qBAAgE,SAACtQ,GAC5E,IAAMirB,EAASjrB,EAAKlO,WAAWe,QAAQ,UACjCq4B,EAAOlrB,EAAKlO,WAAWe,QAAQ,QAC/Bq1B,EAAOloB,EAAKlO,WAAWe,QAAQ,OAAQ,IAC7C,OAAO,IAAArB,6BAA4B,CAACy5B,OAAM,EAAEC,KAAI,EAAEhD,KAAI,GACxD,EAEA,IAAM8C,EACF,SAACnZ,EAAyCtI,EAAezX,GAmBvD,IAlBA,IAAMo2B,EAAmC,IAA3Bp2B,EAAWo2B,KAAKziC,OAAgB8jB,EAAM/hB,KAAKgW,MAAM,GAAG3O,KAAI,SAACs8B,EAAK7lC,GAAM,OAAAA,CAAA,IAAKwM,EAAWo2B,KAC5FkD,EAAiB,EAAAlvB,UAAUosB,cAAcJ,EAAM3e,EAAM/hB,KAAK/B,QAC1DwlC,EAASn5B,EAAWm5B,OAAOp8B,KAAI,SAACs3B,EAAO7gC,GAC3C,OAAI6gC,EAAQ5c,EAAM/hB,KAAK4jC,EAAe9lC,IAAM,EACnCikB,EAAM/hB,KAAK4jC,EAAe9lC,IAE5B,EAAA4W,UAAUgiB,cAAciI,EAAO5c,EAAM/hB,KAAK4jC,EAAe9lC,IAClE,IACM4lC,EAAOp5B,EAAWo5B,KAAKr8B,KAAI,SAACi8B,EAAKxlC,GACrC,OAAIwlC,EAAMvhB,EAAM/hB,KAAK4jC,EAAe9lC,IAAM,EACjCikB,EAAM/hB,KAAK4jC,EAAe9lC,IAE5B,EAAA4W,UAAUgiB,cAAc4M,EAAKvhB,EAAM/hB,KAAK4jC,EAAe9lC,IAChE,IAEMuuB,EAActK,EAAM/hB,KAAKgW,QAEzB6tB,EAAqB,GAClB/lC,EAAI,EAAGA,EAAI8lC,EAAe3lC,OAAQH,IACzCuuB,EAAYuX,EAAe9lC,IAAM4lC,EAAK5lC,GAAK2lC,EAAO3lC,GAC9C2lC,EAAO3lC,GAAK,GACd+lC,EAAS3lC,KAAK,oBAAa0lC,EAAe9lC,GAAE,gBAAQ2lC,EAAO3lC,GAAE,MAIjE,IAAMyU,EAAO8Z,EAAYpuB,OACnB6d,EAAe,8CACSvJ,EAAI,yBAC9BsxB,EAAS77B,KAAK,YAAW,4CAG7B,OAAO,EAAP,KACKu7B,GAAoB,CACvBpyB,OAAQ,CAACnR,KAAMqsB,EAAavsB,KAAMiiB,EAAMjiB,KAAMif,YAAa,EAAAqB,YAAY8B,UACvEpG,aAAY,GAEhB,EAEEwO,EAAiB,SAACnL,GACtB,IAAKA,GAA4B,IAAlBA,EAAOlhB,OACpB,MAAM,IAAIJ,MAAM,2BAElB,IAA8C,IAA1C,EAAAm5B,aAAaj5B,QAAQohB,EAAO,GAAGrf,MACjC,MAAM,IAAIjC,MAAM,sBAEpB,EAEa,EAAAgrB,SAAW,SAACwB,EAAyClL,GAChE2kB,EAAkB3kB,GAClB,IAAM7U,EAAay5B,EAAkC1Z,EAAkBlL,GAQvE,MAAO,CAPQkL,EAAiB7jB,IAAI,EAAD,KAE1B+8B,GAAoB,CACvB/jB,UAAWlV,EAAWigB,SACtB5pB,IAAK,WAAM,OAAA6iC,EAAuBnZ,EAAkBlL,EAAO,GAAI7U,EAApD,IAEb,CAAC6U,EAAO,KAEd,EAEA,IAAM4kB,EACF,SAAC1Z,EAAyClL,GACxC,IAAKkL,EAAiBhiB,QAAQ+a,cAAcjE,EAAO,GAAGqB,UACjD6J,EAAiBhiB,QAAQ+a,cAAcjE,EAAO,GAAGqB,SACjDrB,EAAOlhB,QAAU,IAAMosB,EAAiBhiB,QAAQ+a,cAAcjE,EAAO,GAAGqB,SACxErB,EAAOlhB,QAAU,IAAMosB,EAAiBhiB,QAAQ+a,cAAcjE,EAAO,GAAGqB,QAC3E,MAAM,IAAI3iB,MAAM,4CAGlB,GAAIshB,EAAOlhB,QAAU,GAAKkhB,EAAO,GAAG+d,YAAY8G,MAAK,SAAClmC,GAAc,OAAM,IAANA,CAAA,IAClE,MAAM,IAAID,MAAM,oDAGlB,IAAM4lC,EAASjjC,MAAML,KAAKgf,EAAO,GAAG+d,aAC9BwG,EAAOljC,MAAML,KAAKgf,EAAO,GAAG+d,aAC5BwD,EAAOvhB,EAAOlhB,QAAU,EAAIuC,MAAML,KAAKgf,EAAO,GAAG+d,aAAe,GAEtE,MAAO,CAACuG,OAAM,EAAEC,KAAI,EAAEhD,KAAI,EAAEnW,SADX,UAAGmW,EAAI,YAAI+C,EAAM,YAAIC,GAExC,EAEEI,EAAoB,SAAC3kB,GACzB,IAAKA,GAAUA,EAAOlhB,OAAS,GAAKkhB,EAAOlhB,OAAS,EAClD,MAAM,IAAIJ,MAAM,yBAElB,GAAuB,UAAnBshB,EAAO,GAAGrf,MAA8C,IAA1Bqf,EAAO,GAAGnf,KAAK/B,OAC/C,MAAM,IAAIJ,MAAM,uBAElB,GAAuB,UAAnBshB,EAAO,GAAGrf,MAA8C,IAA1Bqf,EAAO,GAAGnf,KAAK/B,OAC/C,MAAM,IAAIJ,MAAM,uBAElB,GAAIshB,EAAOlhB,QAAU,IAAyB,UAAnBkhB,EAAO,GAAGrf,MAA8C,IAA1Bqf,EAAO,GAAGnf,KAAK/B,QACtE,MAAM,IAAIJ,MAAM,uBAElB,GAAIshB,EAAOlhB,QAAU,IAAyB,UAAnBkhB,EAAO,GAAGrf,MAA8C,IAA1Bqf,EAAO,GAAGnf,KAAK/B,QACtE,MAAM,IAAIJ,MAAM,sBAEpB,C,6rBC1IA,cAIA,UACA,UAEA,UAEA,UAMMomC,EAAmC,CACvC5mC,KAAM,oBACNiJ,WAAY,CAAC,KACb8Y,WAAY,CAAC,EAAAgB,YAAY8B,WAGrBgiB,EAAqC,CACzC7mC,KAAM,sBACNiJ,WAAY,CAAC,IAAK,OAClB8Y,WAAY,CAAC,EAAAgB,YAAY8B,SAAU,EAAA9B,YAAY8B,WAG3CiiB,EAAyB,CAC7B9mC,KAAM,UACNiJ,WAAY,CAAC,IAAK,MAAO,QACzB8Y,WAAY,CAAC,EAAAgB,YAAY8B,SAAU,EAAA9B,YAAY8B,SAAU,EAAA9B,YAAY8B,WAG1D,EAAA6G,QACT,SAACsB,EAAyClL,EAAkB7U,GAC1DggB,EAAenL,GAEf,IAAMkO,EAAalO,EAAO,GAAGnf,KAAKgW,QAC5BoX,EAAO,EAAA1Y,UAAUgiB,cAAcpsB,EAAW8iB,KAAMC,EAAWpvB,QAC3DmmC,EAAkB,EAAA1vB,UAAU2vB,gBAAgBhX,EAAYD,GACxDkX,EAAe,EAAA5vB,UAAU6vB,kBAAkBlX,EAAYD,GAG7D,OADeoX,EAAena,EAAkBlL,EAAQ7U,EAAY85B,EAAiBE,EAEvF,EAES,EAAAtb,uBACT,SAACxQ,GAAwC,WAAAxO,6BAA4B,CAACojB,KAAM5U,EAAKlO,WAAWW,OAAO,OAAQ,IAAlE,EAEhC,EAAAie,0BACT,SAAC1Q,GAAwC,WAAAxO,6BAA4B,CAACojB,KAAM5U,EAAKlO,WAAWW,OAAO,QAAS,IAAnE,EAQhC,EAAAge,WACT,SAACoB,EAAyClL,EAAkB7U,GAC1DggB,EAAenL,GAEf,IAQIslB,EAREpX,EAAalO,EAAO,GAAGnf,KAAKgW,QAC5BoX,EAAO,EAAA1Y,UAAUgiB,cAAcpsB,EAAW8iB,KAAMC,EAAWpvB,QAC3DsU,EAAO8a,EAAWpvB,OAElBymC,EAAuBtX,IAAS7a,EAAO,EACvCoyB,EAAiC,GACnChQ,EAAiB,GACjBiQ,EAA6B,GAG7BF,KACF/P,EAAOn0B,MAAML,KAAK,CAAClC,OAAQsU,IAAOlL,KAAI,SAACw9B,EAAG/mC,GAAM,OAAAA,CAAA,KAG3CsvB,GAAQ7a,EAAO,EACpBoiB,EAAKpiB,EAAO,GAAK6a,EAEjBuH,EAAKttB,KAAI,SAAAy9B,GAAK,OAAAH,EAAqBzmC,KAAKmvB,EAAWyX,GAArC,IAEdL,GAAqB,IAAAz6B,6BAA4B,CAAC2qB,KAAI,IACtDiQ,GAAmB,IAAA3sB,WAAUoS,EAAkBlL,EAAQslB,IAGzD,IAAML,EAAkBM,EAAsB,EAAAhwB,UAAU2vB,gBAAgBM,EAAsBpyB,EAAO,GACvD,EAAAmC,UAAU2vB,gBAAgBhX,EAAY9a,EAAO,GACrF+xB,EAAeI,EAAsB,EAAAhwB,UAAU6vB,kBAAkBI,EAAsBpyB,EAAO,GACzD,EAAAmC,UAAU6vB,kBAAkBlX,EAAY9a,EAAO,GAEpFpB,EAASqzB,EACXna,EAAkBqa,EAAsBE,EAAmBzlB,EAAQ7U,EAAY85B,EAAiBE,GAEpG,OAAII,GACqB,IAAAzsB,WAAUoS,EAAkBlZ,EAAQszB,GAGpDtzB,CAEX,EAEJ,IAAMqzB,EACF,SAACna,EAAyClL,EAAkB7U,EAA+B85B,EAC1FE,GACC,IAAMS,EACFC,EAA4B3a,EAAkBlL,EAAO,GAAIilB,EAAiBE,EAAc,CAACF,IACvFa,EAAM5a,EAAiB7jB,IAAI,EAAD,KACxBy9B,GAAgC,CAAEzkB,UAAWlV,EAAWigB,SAAU5pB,IAAK,WAAM,OAAAokC,CAAA,IACjF5lB,GAEE+lB,EAA0BC,EAC5B9a,EAAkBlL,EAAO,GAAIilB,EAAiBE,EAAcS,EAAsB5zB,OAAOnR,KACzF,CAACokC,IACCrZ,EAAQV,EAAiB7jB,IAAI,EAAD,KAC1B09B,GAAkC,CAAE1kB,UAAWlV,EAAWigB,SAAU5pB,IAAK,WAAM,OAAAukC,CAAA,IACnF,CAAC/lB,EAAO,GAAI8lB,IAEVG,EAAqBC,EACvBhb,EAAkBlL,EAAO,GAAIilB,EAAiBE,EAAcS,EAAsB5zB,OAAOnR,KACzFklC,EAAwB/zB,OAAOnR,MAInC,MAAO,CAHQqqB,EAAiB7jB,IAAI,EAAD,KAC3B29B,GAAsB,CAAE3kB,UAAWlV,EAAWigB,SAAU5pB,IAAK,WAAM,OAAAykC,CAAA,IACvE,CAACjmB,EAAO,GAAI8lB,EAAKla,IAEvB,EAKEia,EACF,SAAC3a,EAAyCtI,EAAeqiB,EAAyBE,EACjFjY,GACO,QACFhC,EAAiBvL,+BAA+BiD,EAAM/hB,KAAM,EAAAogB,YAAY8B,UAAS,GAD9EuX,EAAY,KAAEC,EAAa,KAE5BnnB,EAAO8Z,EAAYpuB,OAEzB,GAAImmC,EAAkB,GAAKE,EAAe,EACxC,MAAM,IAAIzmC,MAAM,8EAGlB,GAA2B,IAAvBwuB,EAAYpuB,OACd,MAAM,IAAIJ,MAAM,4CAGlB,GAAIwuB,EAAY,KAAO+X,EACrB,MAAM,IAAIvmC,MAAM,4DAGlB,IAAMkT,GAAO,IAAAC,SAAQqZ,EAAiBhiB,QAAQ/K,QAAQyR,UAAUkC,SAC1D6K,EAAe,oCACDvJ,EAAI,6EACwB+xB,EAAY,oDAE5BvzB,EAAK8B,UAAS,wDAAgD4mB,EAAY,sBACtGC,EAAa,yCACE4K,EAAY,wEAEOvzB,EAAK8B,UAAS,yEAC5C4mB,EAAY,aAAKC,EAAa,0GAOtC,OAAO,EAAP,KACKuK,GAAgC,CACnC9yB,OAAQ,CAACnR,KAAMqsB,EAAavsB,KAAMiiB,EAAMjiB,KAAMif,YAAa,EAAAqB,YAAY8B,UACvEpG,aAAY,GAEhB,EAKEqpB,EACF,SAAC9a,EAAyCtI,EAAeqiB,EAAyBE,EACjFgB,EAA4CjZ,GACrC,QACFhC,EAAiBvL,+BAA+BiD,EAAM/hB,KAAM,EAAAogB,YAAY8B,UAAS,GAD9EuX,EAAY,KAAEC,EAAa,KAE5BnnB,EAAO8Z,EAAYpuB,OAEzB,GAAImmC,EAAkB,GAAKE,EAAe,EACxC,MAAM,IAAIzmC,MAAM,8EAGlB,GAA2B,IAAvBwuB,EAAYpuB,OACd,MAAM,IAAIJ,MAAM,4CAGlB,GAAIwuB,EAAY,KAAO+X,EACrB,MAAM,IAAIvmC,MAAM,4DAGlB,GAAuC,IAAnCynC,EAAwBrnC,OAC1B,MAAM,IAAIJ,MAAM,0DAGlB,GAAIynC,EAAwB,KAAOlB,EACjC,MAAM,IAAIvmC,MAAM,0EAGlB,IAAMkT,GAAO,IAAAC,SAAQqZ,EAAiBhiB,QAAQ/K,QAAQyR,UAAUkC,SAC1D6K,EAAe,oCACDvJ,EAAI,6EACwB+xB,EAAY,6GAIzCA,EAAY,2EAEUvzB,EAAK8B,UAAS,yEAC/C4mB,EAAY,aAAKC,EAAa,kEAKtC,OAAO,EAAP,KACKwK,GAAkC,CACrC/yB,OAAQ,CAACnR,KAAMqsB,EAAavsB,KAAMiiB,EAAMjiB,KAAMif,YAAa,EAAAqB,YAAY8B,UACvEpG,aAAY,GAEhB,EAEEupB,EACF,SAAChb,EAAyCtI,EAAeqiB,EAAyBE,EACjFgB,EAA4CC,GACrC,QACFlb,EAAiBvL,+BAA+BiD,EAAM/hB,KAAM,EAAAogB,YAAY8B,UAAS,GAD9EuX,EAAY,KAAEC,EAAa,KAE5BnnB,EAAOwP,EAAM/hB,KAAK/B,OAExB,GAAImmC,EAAkB,GAAKE,EAAe,EACxC,MAAM,IAAIzmC,MAAM,8EAGlB,GAAuC,IAAnCynC,EAAwBrnC,QAAsD,IAAtCsnC,EAA2BtnC,OACrE,MAAM,IAAIJ,MAAM,0DAGlB,GAAIynC,EAAwB,KAAOlB,GAAmBmB,EAA2B,KAAOnB,EACtF,MAAM,IAAIvmC,MAAM,0EAGlB,IAAMie,EAAe,oCACDvJ,EAAI,0KAGiBknB,EAAY,aAAKC,EAAa,0IAIrC4K,EAAY,uTAY9C,OAAO,EAAP,KACKH,GAAsB,CACzBhzB,OAAQ,CAACnR,KAAM+hB,EAAM/hB,KAAMF,KAAMiiB,EAAMjiB,KAAMif,YAAa,EAAAqB,YAAY8B,UACtEpG,aAAY,GAEhB,EAEEwO,EAAiB,SAACnL,GACtB,IAAKA,GAA4B,IAAlBA,EAAOlhB,OACpB,MAAM,IAAIJ,MAAM,6BAGlB,GAAuB,YAAnBshB,EAAO,GAAGrf,MAAyC,YAAnBqf,EAAO,GAAGrf,KAC5C,MAAM,IAAIjC,MAAM,qBAEpB,C,gpBCtRA,cAIA,UAEA,UAQM2nC,EAAuB,CAC3BnoC,KAAM,QACNiJ,WAAY,CAAC,KACb8Y,WAAY,CAAC,EAAAgB,YAAY8B,WAGd,EAAA1H,MACT,SAAC6P,EAAyClL,EAAkB7U,GAC1DggB,EAAenL,GAKf,IAHA,IAAMiO,EAAO,EAAA1Y,UAAUgiB,cAAcpsB,EAAW8iB,KAAMjO,EAAO,GAAGnf,KAAK/B,QAC/DwnC,EAAQC,EAAgBrb,EAAkBlL,EAAQiO,EAAM9iB,GACxD6G,EAAmB,G,WAChBrT,GACPqT,EAAOjT,KAAKmsB,EAAiB7jB,IAAI,EAAD,KAEvBg/B,GAAoB,CACvBhmB,UAAW,UAAGlV,EAAWigB,SAAQ,YAAIzsB,GACrC6C,IAAK,WAAM,OAAAglC,EAAuBtb,EAAkBlL,EAAO,GAAI7U,EAAY8iB,EAAMtvB,EAAtE,IAEbqhB,G,EAPGrhB,EAAI,EAAGA,EAAI2nC,IAAS3nC,E,EAApBA,GAUT,OAAOqT,CACT,EAES,EAAAgY,qBAAgE,SAAC3Q,GAC5E,IAAM4U,EAAO5U,EAAKlO,WAAWW,OAAO,OAAQ,GACtCuP,EAAQhC,EAAKlO,WAAWe,QAAQ,QAAS,IACzCu6B,EAAaptB,EAAKqtB,QAAQ5nC,OAChC,OAAO,IAAA+L,6BAA4B,CAACojB,KAAI,EAAE5S,MAAK,EAAEorB,WAAU,GAC7D,EAEA,IAAMF,EACF,SAACrb,EAAyClL,EAAkBiO,EAAc9iB,GAExE,OADM,EAAc,EAAAw7B,UAAUC,WAAW5mB,EAAO,GAAGnf,KAAMotB,EAAM9iB,EAAWkQ,MAAOlQ,EAAWs7B,YAAW,GAAvF,GACD3nC,MACjB,EAEE0nC,EACF,SAACtb,EAAyCtI,EAAezX,EAA6B8iB,EAAcxW,GAExF,QAAoB,EAAAkvB,UAAUC,WAAWhkB,EAAM/hB,KAAMotB,EAAM9iB,EAAWkQ,MAAOlQ,EAAWs7B,YAAW,GAAlGhY,EAAM,KACPoY,EADgB,KACCpvB,GACjByV,EAAcuB,EAAOhX,GACrBrE,EAAO8Z,EAAYpuB,OACnB6d,EAAe,4CACGvJ,EAAI,iCACpB6a,EAAI,gBAAQ4Y,EAAM,iDAI1B,OAAO,EAAP,KACKR,GAAoB,CACvBhmB,UAAW,UAAGlV,EAAWigB,SAAQ,YAAI3T,GACrCzF,OAAQ,CAACnR,KAAMqsB,EAAavsB,KAAMiiB,EAAMjiB,KAAMif,YAAa,EAAAqB,YAAY8B,UACvEpG,aAAY,GAEhB,EAEFwO,EAAiB,SAACnL,GACtB,IAAKA,GAA4B,IAAlBA,EAAOlhB,OACpB,MAAM,IAAIJ,MAAM,6BAGlB,GAAuB,SAAnBshB,EAAO,GAAGrf,MAAsC,UAAnBqf,EAAO,GAAGrf,MAAuC,UAAnBqf,EAAO,GAAGrf,MAClD,WAAnBqf,EAAO,GAAGrf,MAAwC,UAAnBqf,EAAO,GAAGrf,MAAuC,WAAnBqf,EAAO,GAAGrf,MACpD,YAAnBqf,EAAO,GAAGrf,MAAyC,YAAnBqf,EAAO,GAAGrf,MAAyC,SAAnBqf,EAAO,GAAGrf,KAC5E,MAAM,IAAIjC,MAAM,sBAEpB,C,4ICjFA,cAGa,EAAAwrB,QACT,SAACgB,EAAyClL,EAAkBuhB,GAC1DpW,EAAenL,GACf,IAAMkN,EAAc,EAAA3X,UAAUqC,aAAaoI,EAAO,GAAGnf,KAAM0gC,GAE3D,MAAO,CADQrW,EAAiBvI,gBAAgB3C,EAAO,GAAIkN,GAE7D,EAES,EAAA9C,WAAa,SAACc,EAAyClL,GAElE,OADA8mB,EAAkB9mB,IACX,IAAAkK,SAAQgB,EAAkB,CAAClL,EAAO,IAAK3e,MAAML,KAAKgf,EAAO,GAAG+d,aACrE,EAEa,EAAA5T,uBAA2D,SAAC9Q,GACrE,OAAAA,EAAKlO,WAAWe,QAAQ,OAAxB,EAEJ,IAAMif,EAAiB,SAACnL,GACtB,IAAKA,GAA4B,IAAlBA,EAAOlhB,OACpB,MAAM,IAAIJ,MAAM,6BAGlB,GAAuB,WAAnBshB,EAAO,GAAGrf,KACZ,MAAM,IAAIjC,MAAM,8BAEpB,EAEMooC,EAAoB,SAAC9mB,GACzB,IAAKA,GAA4B,IAAlBA,EAAOlhB,OACpB,MAAM,IAAIJ,MAAM,8BAGlB,GAAuB,UAAnBshB,EAAO,GAAGrf,KACZ,MAAM,IAAIjC,MAAM,sBAEpB,C,2UCvCA,cAEA,UAEa,EAAA2rB,IAAM,SAACa,EAAyClL,GAC3DmL,EAAenL,GAEf,IAAM+mB,EAAqB,CACzB7oC,KAAM,MACNiJ,WAAY6Y,EAAO9X,KAAI,SAAChB,EAAGvI,GAAM,iBAAIA,EAAJ,IACjCshB,WAAY,IAAI5e,MAAM2e,EAAOlhB,QAAQkvB,KAAK,EAAA/M,YAAY8B,WAKxD,MAAO,CAFQmI,EAAiB7jB,IAAI,EAAD,KAC3B0/B,GAAkB,CAAEvlC,IAAK,WAAM,OAAAwlC,EAAqB9b,EAAkBlL,EAAQ+mB,EAA/C,IAAqE/mB,GAE9G,EAEA,IAAMgnB,EACF,SAAC9b,EAAyClL,EAAkB+mB,GAC1D,IAAMn1B,GAAO,IAAAC,SAAQqZ,EAAiBhiB,QAAQ/K,QAAQyR,UAAUkC,SAC1Dob,EAAclN,EAAO,GAAGnf,KAAKgW,QAC7BowB,EAAUjnB,EAAO9X,KAAI,SAAChB,EAAGvI,GAAM,gBAAGiT,EAAK8B,UAAS,aAAK/U,EAAC,cAAvB,IAAsCkK,KAAK,OAC1E8T,EAAe,uDAEHsqB,EAAO,sBACrBr1B,EAAKI,OAAM,6BAGf,OAAO,EAAP,KACK+0B,GAAkB,CACrB/0B,OAAQ,CAACnR,KAAMqsB,EAAavsB,KAAMqf,EAAO,GAAGrf,KAAMif,YAAa,EAAAqB,YAAY8B,UAC3EnG,SAAS,EACTD,aAAY,GAEhB,EAEEwO,EAAiB,SAACnL,GACtB,IAAKA,GAA4B,IAAlBA,EAAOlhB,OACpB,MAAM,IAAIJ,MAAM,wBAIlB,IADA,IAAMI,EAASkhB,EAAO,GAAGnf,KAAK/B,OACrBH,EAAI,EAAGA,EAAIqhB,EAAOlhB,OAAQH,IAAK,CACtC,GAAIG,IAAWkhB,EAAOrhB,GAAGkC,KAAK/B,OAC5B,MAAM,IAAIJ,MAAM,gCAGlB,IAAK,IAAImH,EAAI,EAAGA,EAAI/G,EAAQ+G,IAC1B,GAAIma,EAAO,GAAGnf,KAAKgF,KAAOma,EAAOrhB,GAAGkC,KAAKgF,GACvC,MAAM,IAAInH,MAAM,gC,CAKtB,GAAuB,YAAnBshB,EAAO,GAAGrf,MAAyC,YAAnBqf,EAAO,GAAGrf,KAC5C,MAAM,IAAIjC,MAAM,uBAElB,IAASC,EAAI,EAAGA,EAAIqhB,EAAOlhB,OAAQH,IACjC,GAAIqhB,EAAO,GAAGrf,OAASqf,EAAOrhB,GAAGgC,KAC/B,MAAM,IAAIjC,MAAM,+BAGtB,C,4UChEA,cAGA,UAEa,EAAA8rB,KAAO,SAACU,EAAyClL,GAC5DmL,EAAenL,GAEf,IAAMknB,EAAsB,CAC1BhpC,KAAM,OACNiJ,WAAY,CAAC,KACb8Y,WAAY,CAAC,EAAAgB,YAAY8B,WAM3B,MAAO,CAHQmI,EAAiB7jB,IAAI,EAAD,KAC3B6/B,GAAmB,CAAE1lC,IAAK,WAAM,OAAA2lC,EAAsBjc,EAAkBlL,EAAQknB,EAAhD,IACpClnB,GAEN,EAEA,IAAMmnB,EACF,SAAC1gC,EAAgCuZ,EAAkBknB,GAKjD,IAJA,IAAMhZ,EAAalO,EAAO,GAAGnf,KAAKgW,QAC5BqW,EAAc,IAAI7rB,MAAM6sB,EAAWpvB,QAEnCsoC,EAAoB,GACjBzoC,EAAI,EAAGA,EAAIuvB,EAAWpvB,OAAQH,IACrCuuB,EAAYvuB,GAAKuvB,EAAWvvB,GAAKqhB,EAAO,GAAG0B,WAAW/iB,GACtDyoC,EAAQroC,KAAK,mBAAYJ,EAAC,uCAA+BA,EAAC,eAAOuvB,EAAWvvB,GAAE,SAGhF,IAAMyU,EAAO8Z,EAAYpuB,OACnB6d,EAAe,8CACSvJ,EAAI,sCACjBA,EAAI,uBACjBg0B,EAAQv+B,KAAK,MAAK,iDAItB,OAAO,EAAP,KACKq+B,GAAmB,CACtBl1B,OAAQ,CAACnR,KAAMqsB,EAAavsB,KAAMqf,EAAO,GAAGrf,KAAMif,YAAa,EAAAqB,YAAY8B,UAC3EpG,aAAY,GAEhB,EAEEwO,EAAiB,SAACnL,GACtB,IAAKA,GAA4B,IAAlBA,EAAOlhB,OACpB,MAAM,IAAIJ,MAAM,0BAElB,GAA8B,IAA1BshB,EAAO,GAAGnf,KAAK/B,OACjB,MAAM,IAAIJ,MAAM,4CAElB,GAAIshB,EAAO,GAAGnf,KAAK,KAAOmf,EAAO,GAAGnf,KAAK/B,OACvC,MAAM,IAAIJ,MAAM,wBAElB,IAA8C,IAA1C,EAAAm5B,aAAaj5B,QAAQohB,EAAO,GAAGrf,MACjC,MAAM,IAAIjC,MAAM,uBAElB,GAAuB,UAAnBshB,EAAO,GAAGrf,MAAuC,UAAnBqf,EAAO,GAAGrf,KAC1C,MAAM,IAAIjC,MAAM,uBAEpB,C,q3BC9DA,cAIA,UAEA,UAMM2oC,EAA2B,CAC/BnpC,KAAM,YACNiJ,WAAY,CAAC,KACb8Y,WAAY,CAAC,EAAAgB,YAAY8B,WAGd,EAAAjK,UACT,SAACoS,EAAyClL,EAAkB7U,GAS1D,OARAggB,EAAenL,GAQR,CAPQkL,EAAiB7jB,IAAI,EAAD,KAE1BggC,GAAwB,CAC3BhnB,UAAWlV,EAAWigB,SACtB5pB,IAAK,WAAM,OAAA8lC,EAA2Bpc,EAAkBlL,EAAO,GAAI7U,EAAWqqB,KAAnE,IAEbxV,GAEN,EAES,EAAAyK,yBACT,SAACpR,GAA0C,WAAAxO,6BAA4B,CAAC2qB,KAAMnc,EAAKlO,WAAWe,QAAQ,OAAQ,KAAnE,EAE/C,IAAMo7B,EACF,SAACpc,EAAyCtI,EAAe4S,GACvD,IAAMtH,EAAatL,EAAM/hB,KACzB20B,EAAO+R,EAAgBrZ,EAAYsH,GACnC,IAAMgS,EAAsBC,EAAevZ,EAAYsH,GACjDpiB,EAAO8a,EAAWpvB,OAIlB6d,EAAe,kBACnB+qB,EAAoB,OAAQlS,EAAMpiB,GAAK,6CACbA,EAAI,+BACtBA,EAAI,iEAId,OAAO,EAAP,KACKi0B,GAAwB,CAC3Br1B,OAAQ,CAACnR,KAAM2mC,EAAqB7mC,KAAMiiB,EAAMjiB,KAAMif,YAAa,EAAAqB,YAAY8B,UAC/EpG,aAAY,GAEhB,EAEE4qB,EAAkB,SAACrZ,EAA+BsH,GAItD,OAHIA,GAAQA,EAAK12B,SAAWovB,EAAWpvB,SACrC02B,EAAO,OAAKtH,EAAW9R,SAAO,GAAEjE,WAE3Bqd,CACT,EAEMiS,EAAiB,SAACvZ,EAA+BsH,GAErD,OADAA,EAAO+R,EAAgBrZ,EAAYsH,GAC5B,EAAAjgB,UAAUoyB,gBAAgBzZ,EAAYsH,EAC/C,EAEMkS,EAAsB,SAACxpC,EAAcs3B,EAAgBpiB,GACzD,IAAMw0B,EAAc,GACpBA,EAAY7oC,KAAK,eAAQb,EAAI,sBAAckV,EAAI,sBAAcA,EAAI,SACjE,IAAK,IAAIzU,EAAI,EAAGA,EAAIyU,IAAQzU,EAC1BipC,EAAY7oC,KAAK,cAAOy2B,EAAK72B,GAAE,iBAASA,EAAC,OAG3C,OADAipC,EAAY7oC,KAAK,OACV6oC,EAAY/+B,KAAK,KAC1B,EAEMsiB,EAAiB,SAACnL,GACtB,IAAKA,GAA4B,IAAlBA,EAAOlhB,OACpB,MAAM,IAAIJ,MAAM,+BAGlB,GAAuB,YAAnBshB,EAAO,GAAGrf,MAAyC,YAAnBqf,EAAO,GAAGrf,KAC5C,MAAM,IAAIjC,MAAM,+BAEpB,C,4GCvFA,cAEA,UAEa,EAAA6lB,cAAgB,SAAC2G,EAAyCtI,GACrE,IAAMsK,EAActK,EAAMpQ,MACpBZ,GAAO,IAAAC,SAAQqZ,EAAiBhiB,QAAQ/K,QAAQyR,UAAUkC,SAI1D6K,EAAe,ipCA6CD/K,EAAK8B,UAAS,mCAC5B9B,EAAKI,OAAM,mCAEX2B,EAAc,CAClBzV,KAAM,cACN+hB,WAAY,CAAC,EAAAgB,YAAY8B,UACzB5b,WAAY,CAAC,KACb6K,OAAQ,CAACnR,KAAMqsB,EAAavsB,KAAMiiB,EAAM5B,OAAOrgB,KAAMif,YAAa,EAAAqB,YAAY4mB,sBAC9ElrB,aAAY,EACZC,SAAS,GAEX,OAAOsO,EAAiBpL,eAAenM,EAAa,CAACiP,EAAM5B,QAC7D,C,uxBCnEA,cAGA,UACA,UACA,UAEA,UAEA,SAAgB8mB,IACd,OAAOC,EAAiB,MAC1B,CACA,SAAgBC,IACd,OAAOD,EAAiB,OAC1B,CACA,SAAgBE,IACd,OAAOF,EAAiB,OAC1B,CACA,SAAgBG,IACd,OAAOH,EAAiB,OAC1B,CACA,SAAgBI,IACd,OAAOJ,EAAiB,OAC1B,CACA,SAAgBK,IACd,OAAOL,EAAiB,MAC1B,CACA,SAAgBM,EAAQlQ,GACtB,IAAMj6B,EAAO,MAWb,MAAO,CAACwa,KAVK,wCACeyf,EAAK,yBAEzBj6B,EAAI,uFAGLA,EAAI,wCACKA,EAAI,mBAAWA,EAAI,mBAAWA,EAAI,mBAAWA,EAAI,qBAGnDA,KAAI,EAAEyC,KAAM,EAAAuY,aAAa6S,WACzC,CACA,SAAgBuc,IACd,OAAOP,EAAiB,MAC1B,CACA,SAAgBQ,IACd,OAAOR,EAAiB,QAC1B,CACA,SAAgBjR,EAAS3sB,EAAa27B,GACpC,IAAM5nC,EAAO,OAYb,MAAO,CAACwa,KAXK,sCACavO,EAAG,yCACH27B,EAAG,yBAErB5nC,EAAI,qEAGLA,EAAI,wDAIGA,KAAI,EAAEyC,KAAM,EAAAuY,aAAa6S,WACzC,CACA,SAAgByc,IACd,IAAMtqC,EAAO,YASb,MAAO,CAACwa,KARK,oBACLxa,EAAI,oDAGLA,EAAI,uCAIGA,KAAI,EAAEyC,KAAM,EAAAuY,aAAa6S,WACzC,CACA,SAAgB0c,EAActQ,GAC5B,IAAMj6B,EAAO,YAWb,MAAO,CAACwa,KAVK,wCACeyf,EAAK,yBAEzBj6B,EAAI,0EAGLA,EAAI,wCACKA,EAAI,mBAAWA,EAAI,mBAAWA,EAAI,mBAAWA,EAAI,qBAGnDA,KAAI,EAAEyC,KAAM,EAAAuY,aAAa6S,WACzC,CACA,SAAgB2c,IACd,OAAOX,EAAiB,MAC1B,CACA,SAAgBY,IACd,IAAMzqC,EAAO,MASb,MAAO,CAACwa,KARK,oBACLxa,EAAI,qDAGLA,EAAI,wCAIGA,KAAI,EAAEyC,KAAM,EAAAuY,aAAa6S,WACzC,CACA,SAAgB6c,IACd,IAAM1qC,EAAO,MAeb,MAAO,CAACwa,KAdK,oBACLxa,EAAI,qEAGLA,EAAI,oDAGJA,EAAI,uGAGHA,EAAI,oEAIEA,KAAI,EAAEyC,KAAM,EAAAuY,aAAa6S,WACzC,CACA,SAAgB8c,IACd,OAAOd,EAAiB,MAC1B,CACA,SAAgBnR,IACd,IAAM14B,EAAO,OASb,MAAO,CAACwa,KARK,oBACLxa,EAAI,gEAGLA,EAAI,mDAIGA,KAAI,EAAEyC,KAAM,EAAAuY,aAAa6S,WACzC,CACA,SAAgB8K,IACd,IAAM34B,EAAO,UASb,MAAO,CAACwa,KARK,oBACLxa,EAAI,wEAGLA,EAAI,2DAIGA,KAAI,EAAEyC,KAAM,EAAAuY,aAAa6S,WACzC,CACA,SAAgB+c,IACd,OAAOf,EAAiB,OAC1B,CACA,SAAgBgB,IACd,OAAOhB,EAAiB,MAC1B,CACA,SAAgBiB,IACd,IAAM9qC,EAAO,OAab,MAAO,CAACwa,KAZK,oBACLxa,EAAI,wHAKLA,EAAI,2GAMGA,KAAI,EAAEyC,KAAM,EAAAuY,aAAa6S,WACzC,CACA,SAASgc,EAAiB7pC,GASxB,MAAO,CAACwa,KARK,oBACLxa,EAAI,oCACDA,EAAI,6BAERA,EAAI,mCACAA,EAAI,iBAGDA,KAAI,EAAEyC,KAAM,EAAAuY,aAAa6S,WACzC,CA3KA,YAGA,aAGA,aAGA,aAGA,aAGA,YAGA,YAcA,YAGA,cAGA,aAeA,iBAYA,kBAcA,YAGA,YAYA,YAkBA,YAGA,aAYA,gBAYA,aAGA,YAGA,aAgCA,IAoBMkd,EACF,SAACxiC,EAAgCmc,EAAeiK,EAA6BzB,GAEvE,IAAMxL,EAAcnZ,EAAQyC,QAAQyG,KAAO,EAAAsR,YAAYC,OAAS,EAAAD,YAAY8B,SACtEgL,EAAW,CAAC7vB,KAAM2uB,EAAS3uB,KAAM+hB,WAAY,CAACL,GAAczY,WAAY,CAAC,KAAMkZ,UAAW+K,GAChG,OAAO,EAAP,KAAW2C,GAAQ,CAAEvsB,IAAK,WAAM,OAxBtC,SAACiF,EAAgCsnB,EAA2BnL,EAAeiK,GAErE,IAAMjN,EAAcnZ,EAAQyC,QAAQyG,KAAO,EAAAsR,YAAYC,OAAS,EAAAD,YAAY8B,SACtEnR,GAAO,IAAAC,SAAQpL,EAAQyC,QAAQ/K,QAAQyR,UAAUkC,SACvD,OAAO,EAAP,KACKic,GAAQ,CACX/b,OAAQ,CAACnR,KAAM+hB,EAAM/hB,KAAMF,KAAMiiB,EAAMjiB,KAAMif,YAAW,GACxDjD,aAAc,iBACnBkQ,EAASnU,KAAI,iDAEF9G,EAAK8B,UAAS,uCACnBmZ,EAAS3uB,KAAI,yBACjB0T,EAAKI,OAAM,wBAGR4K,SAAS,GAEb,CAOkCssB,CAA6BziC,EAASsnB,EAAUnL,EAAOiK,EAAvD,GAClC,EAEK,EAAAhI,IAAM,SAACpe,EAAgCuZ,GACpC,OAACvZ,EAAQY,IAAI4hC,EAAmCxiC,EAASuZ,EAAO,GAAI8nB,KAAY9nB,GAAhF,EAEH,EAAA8E,KAAO,SAACre,EAAgCuZ,GACrC,OAACvZ,EAAQY,IAAI4hC,EAAmCxiC,EAASuZ,EAAO,GAAIgoB,KAAahoB,GAAjF,EAEH,EAAAiF,KAAO,SAACxe,EAAgCuZ,GACrC,OAACvZ,EAAQY,IAAI4hC,EAAmCxiC,EAASuZ,EAAO,GAAIioB,KAAajoB,GAAjF,EAEH,EAAAkF,KAAO,SAACze,EAAgCuZ,GACrC,OAACvZ,EAAQY,IAAI4hC,EAAmCxiC,EAASuZ,EAAO,GAAIkoB,KAAaloB,GAAjF,EAOH,EAAAwF,KACT,SAAC/e,EAAgCuZ,EAAkB7U,GAAyC,OAAC1E,EAAQY,IACjG4hC,EACIxiC,EAASuZ,EAAO,GAAI8W,EAAS3rB,EAAWhB,IAAKgB,EAAW26B,KAAM36B,EAAWigB,UAC7EpL,GAHwF,EAKnF,EAAAyF,oBAAsB,SAACpM,GAAqC,WAAAxO,6BACrE,CAACV,IAAKkP,EAAKlO,WAAWS,SAAS,MAAO,EAAAsrB,UAAW4O,IAAKzsB,EAAKlO,WAAWS,SAAS,MAAO,EAAAurB,WADjB,EAG5D,EAAAzR,QAAU,SAACjf,EAAgCuZ,GACtD,IAAM7U,EAAag+B,EAAiC1iC,EAASuZ,GAC7D,OAAO,IAAAwF,MAAK/e,EAAS,CAACuZ,EAAO,IAAK7U,EACpC,EAEA,IAAMg+B,EAAmC,SAAC1iC,EAAgCuZ,GACxE,GAAIA,EAAOlhB,QAAU,KACf2H,EAAQyC,QAAQ+a,cAAcjE,EAAO,GAAGqB,UAAY5a,EAAQyC,QAAQ+a,cAAcjE,EAAO,GAAGqB,SAChG,MAAM,IAAI3iB,MAAM,2CAGlB,IAAMyL,EAAO6V,EAAOlhB,QAAU,EAAKkhB,EAAO,GAAG0B,WAAW,GAAK,EAAAwV,SACvD4O,EAAO9lB,EAAOlhB,QAAU,EAAKkhB,EAAO,GAAG0B,WAAW,GAAK,EAAAyV,SAC7D,OAAO,IAAAtsB,6BAA4B,CAACV,IAAG,EAAE27B,IAAG,GAC9C,EAEa,EAAA17B,KAAO,SAAC3D,EAAgCuZ,GACrC,OAACvZ,EAAQY,IAAI4hC,EAAmCxiC,EAASuZ,EAAO,GAAImoB,KAAanoB,GAAjF,EAEH,EAAAiG,IAAM,SAACxf,EAAgCuZ,GACpC,OAACvZ,EAAQY,IAAI4hC,EAAmCxiC,EAASuZ,EAAO,GAAIooB,KAAYpoB,GAAhF,EAMH,EAAAsG,IACT,SAAC7f,EAAgCuZ,EAAkB7U,GAAwC,OAAC1E,EAAQY,IAChG4hC,EAAmCxiC,EAASuZ,EAAO,GAAIqoB,EAAQl9B,EAAWgtB,OAAQhtB,EAAWigB,UAC7FpL,GAFuF,EAIlF,EAAAuG,mBAAqB,SAAClN,GAC/B,WAAAxO,6BAA4B,CAACstB,MAAO9e,EAAKlO,WAAWS,SAAS,QAAS,IAAtE,EAES,EAAA4a,IAAM,SAAC/f,EAAgCuZ,GACpC,OAACvZ,EAAQY,IAAI4hC,EAAmCxiC,EAASuZ,EAAO,GAAIsoB,KAAYtoB,GAAhF,EAEH,EAAA2G,MAAQ,SAAClgB,EAAgCuZ,GACtC,OAACvZ,EAAQY,IAAI4hC,EAAmCxiC,EAASuZ,EAAO,GAAIuoB,KAAcvoB,GAAlF,EAEH,EAAAkG,SAAW,SAACzf,EAAgCuZ,GACzC,OAACvZ,EAAQY,IAAI4hC,EAAmCxiC,EAASuZ,EAAO,GAAIwoB,KAAiBxoB,GAArF,EAMH,EAAAyH,UACT,SAAChhB,EAAgCuZ,EAAkB7U,GAA8C,OAAC1E,EAAQY,IACtG4hC,EAAmCxiC,EAASuZ,EAAO,GAAIyoB,EAAct9B,EAAWgtB,OAAQhtB,EAAWigB,UACnGpL,GAF6F,EAIxF,EAAA0H,yBAA2B,SAACrO,GACrC,WAAAxO,6BAA4B,CAACstB,MAAO9e,EAAKlO,WAAWS,SAAS,QAAS,MAAtE,EAES,EAAAkc,IAAM,SAACrhB,EAAgCuZ,GACpC,OAACvZ,EAAQY,IAAI4hC,EAAmCxiC,EAASuZ,EAAO,GAAI0oB,KAAY1oB,GAAhF,EAEH,EAAAmI,IAAM,SAAC1hB,EAAgCuZ,GACpC,OAACvZ,EAAQY,IAAI4hC,EAAmCxiC,EAASuZ,EAAO,GAAI2oB,KAAY3oB,GAAhF,EAEH,EAAAoI,IAAM,SAAC3hB,EAAgCuZ,GACpC,OAACvZ,EAAQY,IAAI4hC,EAAmCxiC,EAASuZ,EAAO,GAAI4oB,KAAY5oB,GAAhF,EAEH,EAAAoJ,KAAO,SAAC3iB,EAAgCuZ,GACrC,OAACvZ,EAAQY,IAAI4hC,EAAmCxiC,EAASuZ,EAAO,GAAI4W,KAAa5W,GAAjF,EAEH,EAAAwJ,QAAU,SAAC/iB,EAAgCuZ,GACxC,OAACvZ,EAAQY,IAAI4hC,EAAmCxiC,EAASuZ,EAAO,GAAI6W,KAAgB7W,GAApF,EAEH,EAAAyJ,IAAM,SAAChjB,EAAgCuZ,GACpC,OAACvZ,EAAQY,IAAI4hC,EAAmCxiC,EAASuZ,EAAO,GAAI6oB,KAAY7oB,GAAhF,EAEH,EAAAiK,KAAO,SAACxjB,EAAgCuZ,GACrC,OAACvZ,EAAQY,IAAI4hC,EAAmCxiC,EAASuZ,EAAO,GAAI8oB,KAAa9oB,GAAjF,EAEH,EAAAsK,IAAM,SAAC7jB,EAAgCuZ,GACpC,OAACvZ,EAAQY,IAAI4hC,EAAmCxiC,EAASuZ,EAAO,GAAI+oB,KAAY/oB,GAAhF,EAEH,EAAAuK,KAAO,SAAC9jB,EAAgCuZ,GACrC,OAACvZ,EAAQY,IAAI4hC,EAAmCxiC,EAASuZ,EAAO,GAAIgpB,KAAahpB,GAAjF,C,8XC/ThB,cAEA,UACA,SAEA,UAEMopB,EAAwB,CAC5BlrC,KAAM,SACNiJ,WAAY,CAAC,KACb8Y,WAAY,CAAC,EAAAgB,YAAYC,SAGd,EAAAmoB,wBAA0B,SAAC5iC,EAAgCmc,GACtE,IAAMxP,EAAOwP,EAAM/hB,KAAK/B,OAElBuH,GAAW,IAAAgoB,aAAY,KAAMjb,GAC7Bk2B,EAAYjjC,EAASwQ,OAAO,GAC5BmkB,GAAiB,IAAAhmB,mBAAkB5B,GACnCmb,GAAgB,IAAAC,qBAEhB+a,EADkC,IAAtB3mB,EAAM/hB,KAAK/B,OACG,GA0BlC,SAAyBsU,EAAcvS,GACrC,GAAa,IAATuS,EACF,MAAO,KAIT,IADA,IAAIF,EAAS,GACJvU,EAAI,EAAGA,EAAIyU,EAAMzU,IACxBuU,GAAUrS,EAAKlC,GACXA,EAAIyU,EAAO,IACbF,GAAU,KAGd,OAAOA,CACT,CAvCuCs2B,CAAgBp2B,EAAM/M,GACrD6M,EAASE,GAAQ,EAAI,KAAO,eAAQk2B,EAAUzgC,KAAK,KAAI,KACvD+I,GAAO,IAAAC,SAAQpL,EAAQyC,QAAQ/K,QAAQyR,UAAUkC,SACjD6K,EAAe,gBACjB4R,EAAa,sCAEXyM,EAAc,mJAGWuO,EAAY,wBAEpC33B,EAAKI,OAAM,2CAAmCkB,EAAM,6BAI3D,OAAO,EAAP,KACKk2B,GAAqB,CACxBxsB,SAAS,EACT5K,OAAQ,CAACnR,KAAM+hB,EAAM/hB,KAAMF,KAAMiiB,EAAMjiB,KAAMif,YAAa,EAAAqB,YAAY8B,UACtEpG,aAAY,GAEhB,EAEa,EAAA8H,8BAAgC,SAAChe,EAAgCmc,GAC1E,cAAKwmB,GAAqB,CAAE5nC,IAAK,WAAM,WAAA6nC,yBAAwB5iC,EAASmc,EAAjC,GAAvC,C,kJC3CJ,cAGa,EAAAiI,UACT,SAACK,EAAyClL,EAAkBuhB,GAC1DpW,EAAenL,GACf,IAAMkN,EAAc,EAAA3X,UAAUk0B,eAAezpB,EAAO,GAAGnf,KAAM0gC,GAE7D,MAAO,CADQrW,EAAiBvI,gBAAgB3C,EAAO,GAAIkN,GAE7D,EAES,EAAAnC,aAAe,SAACG,EAAyClL,GAEpE,OADA8mB,EAAkB9mB,IACX,IAAA6K,WAAUK,EAAkB,CAAClL,EAAO,IAAK3e,MAAML,KAAKgf,EAAO,GAAG+d,aACvE,EAEa,EAAAjT,yBAA6D,SAACzR,GACvE,OAAAA,EAAKlO,WAAWe,QAAQ,OAAxB,EAEJ,IAAMif,EAAiB,SAACnL,GACtB,IAAKA,GAA4B,IAAlBA,EAAOlhB,OACpB,MAAM,IAAIJ,MAAM,+BAGlB,GAAuB,WAAnBshB,EAAO,GAAGrf,KACZ,MAAM,IAAIjC,MAAM,8BAEpB,EAEMooC,EAAoB,SAAC9mB,GACzB,IAAKA,GAA4B,IAAlBA,EAAOlhB,OACpB,MAAM,IAAIJ,MAAM,gCAGlB,GAAuB,UAAnBshB,EAAO,GAAGrf,KACZ,MAAM,IAAIjC,MAAM,sBAEpB,C,ojCCxCA,cAIA,UAEA,UAoBMgrC,EAA0B,CAC9BxrC,KAAM,WACNiJ,WAAY,CAAC,KACb8Y,WAAY,CAAC,EAAAgB,YAAY8B,WAGd,EAAA2H,SACT,SAACQ,EAAyClL,EAAkB7U,GAS1D,OARA,IAAAggB,gBAAenL,EAAQ7U,GAQhB,CAPQ+f,EAAiB7jB,IAAI,EAAD,KAE1BqiC,GAAuB,CAC1BrpB,UAAWlV,EAAWigB,SACtB5pB,IAAK,WAAM,OAAAmoC,EAA0Bze,EAAkBlL,EAAQ7U,EAApD,IAEb6U,GAEN,EAES,EAAA2K,0BACT,SAACtR,GAAyC,WAAAwpB,yBAAwBxpB,EAAM,EAA9B,EAEjC,EAAAuR,0BACT,SAACvR,GAAyC,WAAAwpB,yBAAwBxpB,EAAM,EAA9B,EAEjC,EAAAwpB,wBAA0B,SAACxpB,EAAkBuwB,GACxD,IAAM9F,EAAY8F,GAAS,GAGrBxU,EAAO/b,EAAKlO,WAAWY,UAAU,OAAQ,WAC/C,GAAa,YAATqpB,GAA+B,WAATA,IAAsBwU,EAAQ,IAAe,UAATxU,GAC5D,MAAM,IAAI12B,MAAM,6BAAsB02B,IAGxC,IAAI2N,EAAmB,GACnB6G,EAAQ,IACV7G,EAAS1pB,EAAKlO,WAAWc,UAAU,WACnC,IAAAi4B,kBAAiBnB,EAAQ3N,EAAM0O,IAGjC,IAAM+F,EAAqBxwB,EAAKlO,WAAWS,SAAS,sBAAuB,GAErEq3B,EACF2G,EAAQ,GAAKvwB,EAAKlO,WAAWY,UAAU,iCAAkC,cAAgB,aAC7F,IAE4C,IAFxC,CACE,aAAc,qBAAsB,uBAAwB,gBAAiB,qBAAsB,cACnGnN,QAAQqkC,GACZ,MAAM,IAAIvkC,MAAM,qCAA8BukC,EAAuB,uBAEvE,IAAM6G,EAA4C,uBAA5B7G,EAChB8G,EAAmBD,EAEnBE,EACQ,YAAT5U,GAAsBwU,GAAS,GAAMvwB,EAAKlO,WAAWY,UAAU,eAAgB,sBAAwB,GAC5G,IAA+F,IAA3F,CAAC,qBAAsB,oBAAqB,QAAS,OAAQ,IAAInN,QAAQorC,GAC3E,MAAM,IAAItrC,MAAM,wBAAiBsrC,EAAW,uBAG9C,IAAMC,EAAoB5wB,EAAKlO,WAAWS,SAAS,iBAAkB,KAC/Ds+B,EAAkE,IAAjD7wB,EAAKlO,WAAWW,OAAO,kBAAmB,GACjE,GAAIo+B,GAA2B,UAAT9U,EACpB,MAAM,IAAI12B,MAAM,4DAGlB,IAAMyrC,EACDP,EAAQ,IAAuB,YAATxU,GAAkD,eAA5B6N,GAA4D,UAAhB+G,EAEzFI,EAAc,EACdzG,EAAiB,EACjBC,EAAgB,EAgBpB,OAdIgG,EAAQ,GAENvwB,EAAK2G,OAAOlhB,OAAS,GACvBsrC,EAAc,EACdzG,EAAiB,EACjBC,EAAgB,IAEhBD,EAAiB,EACjBC,EAAgB,GAEC,IAAVgG,IACTjG,EAAiB,IAGZ,IAAA94B,6BAA4B,CACjC++B,MAAK,EACL9F,SAAQ,EACR1O,KAAI,EACJ2N,OAAM,EACN8G,mBAAkB,EAClB5G,wBAAuB,EACvB8G,iBAAgB,EAChBD,aAAY,EACZE,YAAW,EACXC,kBAAiB,EACjBC,eAAc,EACdC,yBAAwB,EACxBC,YAAW,EACXzG,eAAc,EACdC,cAAa,GAEjB,EAEA,IAAM+F,EACF,SAACze,EAAyClL,EAAkB7U,GAgB1D,IAfA,IAAMyG,GAAO,IAAAC,SAAQqZ,EAAiBhiB,QAAQ/K,QAAQyR,UAAUkC,SAC1D,IACFoZ,EAAiBvL,+BAA+BK,EAAO,GAAGnf,KAAM,EAAAogB,YAAY8B,UAAS,GADlFsgB,EAAU,KAAED,EAAW,KAGxBlW,EAAclN,EAAO,GAAGnf,KAAKqH,KAAI,SAACtG,EAAKjD,GAAM,OAAAuL,KAAKyc,MAAM/kB,EAAMuJ,EAAW43B,OAAOpkC,GAAnC,IAC7C,IACFusB,EAAiBvL,+BAA+BuN,EAAa,EAAAjM,YAAY8B,UAAS,GAD/EogB,EAAW,KAAED,EAAY,KAE1BthC,EAAMsrB,EAAYpuB,OAElBurC,EAAgB,IAAIhpC,MAAcO,GAClC0oC,EAAe,IAAIjpC,MAAcO,GACnC2oC,EAAuB,qCACN3oC,EAAG,uCACJA,EAAG,cAEdwT,EAAIxT,EAAM,EAAGwT,GAAK,EAAGA,IAC5Bi1B,EAAcj1B,GAAMA,IAAMxT,EAAM,EAAK,EAAIyoC,EAAcj1B,EAAI,GAAK8X,EAAY9X,EAAI,GAChFk1B,EAAal1B,GAAMA,IAAMxT,EAAM,EAAK,EAAI0oC,EAAal1B,EAAI,GAAK4K,EAAO,GAAGnf,KAAKuU,EAAI,GAEjFm1B,GAAwB,mCACPn1B,EAAC,eAAOi1B,EAAcj1B,GAAE,oCACzBA,EAAC,eAAOk1B,EAAal1B,GAAE,eAGzC,IAAMo1B,EAAwB,gGAEUnH,EAAU,aAAKD,EAAW,qDAChCxxB,EAAK8B,UAAS,yDAK1CiJ,EAAmC,YAApBxR,EAAWiqB,KAE5B,gBACJoV,EAAqB,2CACK5oC,EAAG,gGAEkBuhC,EAAW,aAAKD,EAAY,uBAEzEqH,EAAoB,8DAGI3oC,EAAG,+YAejB,IAARA,EAEI,gBACR4oC,EAAqB,iIAG0BrH,EAAW,aAAKD,EAAY,uBAEzEqH,EAAoB,ykCA2BQvqB,EAAO,GAAGnf,KAAK,GAAE,+sBAuBvC,gBACR2pC,EAAqB,iIAG0BrH,EAAW,aAAKD,EAAY,uBAEzEqH,EAAoB,8vBAoBQvqB,EAAO,GAAGnf,KAAK,GAAE,+sBAsB/C,OAAO,EAAP,KACK6oC,GAAuB,CAC1B13B,OAAQ,CAACnR,KAAMqsB,EAAavsB,KAAMqf,EAAO,GAAGrf,KAAMif,YAAa,EAAAqB,YAAY8B,UAC3EpG,aAAY,EACZM,UAAW,CAAC,CACV/e,KAAM,SACNyC,KAAM,MACN+c,YAAavS,EAAW43B,OAAOjkC,OAC/B8B,KAAMuK,EAAW43B,OAAO76B,KAAI,SAAAgnB,GAAK,OAAAhlB,KAAKE,KAAK8kB,EAAV,OAGvC,EAES,EAAA/D,eAAiB,SAACnL,EAAkBvV,GAC/C,IAAKuV,GAAWvV,EAAUm/B,MAAQ,GAAuB,IAAlB5pB,EAAOlhB,QACzC2L,EAAUm/B,OAAS,GAAKn/B,EAAUm/B,MAAQ,IAAwB,IAAlB5pB,EAAOlhB,QACvD2L,EAAUm/B,OAAS,IAAM5pB,EAAOlhB,OAAS,EAC5C,MAAM,IAAIJ,MAAM,mBAGlB,GAAI+L,EAAUs4B,OAAOjkC,OAAS,GAAKkhB,EAAO,GAAGnf,KAAK/B,SAAW2L,EAAUs4B,OAAOjkC,OAC5E,MAAM,IAAIJ,MAAM,wBAGlB,GAAuB,WAAnBshB,EAAO,GAAGrf,KACZ,MAAM,IAAIjC,MAAM,8BAEpB,EAEa,EAAAwlC,iBAAmB,SAACnB,EAAkB3N,EAAc0O,G,YAC/D,GAAKA,E,IAOH,IAAoB,QAAAf,GAAM,8BACxB,GADc,SACD,EACX,MAAM,IAAIrkC,MAAM,wC,2GARpB,IAAoB,QAAAqkC,GAAM,8BACxB,GADc,QACF,EACV,MAAM,IAAIrkC,MAAM,oD,kGAUtB,KAAa,WAAT02B,GAA8B,UAATA,GACD,IAAlB2N,EAAOjkC,QAAmC,IAAlBikC,EAAOjkC,QAA8B,IAAdikC,EAAO,IAA0B,IAAdA,EAAO,IAC3E,MAAM,IAAIrkC,MAAM,sLAELolC,EAAW,SAAW,WAAU,cAGjD,C,upBC1VA,cAEA,UAEA,UACA,UAcA,aAKE,WACW2G,EAAqC76B,EACrC86B,GADA,KAAAD,SAAAA,EAAqC,KAAA76B,UAAAA,EACrC,KAAA86B,sBAAAA,EACTzoC,KAAK0oC,KAAO,IAAIhrC,IAChBsC,KAAK2oC,iBAAkB,CACzB,CAoJF,OAnJE,YAAAnqB,YAAA,SAAYlZ,GACV,OAAOtF,KAAK0oC,KAAKnpC,IAAI+F,EACvB,EACA,YAAAuZ,YAAA,SAAYvZ,EAAcgZ,GACxBte,KAAK0oC,KAAKxpC,IAAIoG,EAAKgZ,EACrB,EACA,YAAAlZ,IAAA,SAAIwjC,EAAyB7qB,EAAuBhO,GAApD,I,EAAA,OACE/P,KAAKwoC,SAASK,MAAM,KAAM,6BAAoD,QAA9B,EAAAD,EAAcl3B,YAAYzV,YAAI,QAAI,mBAAoB,W,MAC9F6sC,EAAK,EAAKn7B,UAAUm7B,GACpBhrB,EAAU8qB,EAAc9qB,QAC9BgrB,EAAGC,WAAWjrB,GACd,IACE,EAAKkrB,WAAWj5B,GACX,EAAK44B,iBACR,EAAKM,eAAeL,EAAcM,iBAEpC,EAAKC,aAAaP,EAAcQ,iBAAqD,QAAnC,EAAAR,EAAcl3B,YAAYsJ,iBAAS,QAAI,GAAI+C,E,CAC7F,MAAOpX,GAEP,MADA,EAAAkH,OAAOw7B,MAAM,iBAAkBT,EAAcl3B,YAAYgJ,cACnD/T,C,CAER,EAAK6hC,SAASK,MAAM,UAAW,oBAAoB,WACjD,EAAKl7B,UAAU27B,MACjB,GACF,GAAGtpC,KAAK2N,UACV,EACA,YAAAT,QAAA,sBACMlN,KAAKupC,cACPvpC,KAAK2N,UAAU67B,aAAaxpC,KAAKupC,cAEnCvpC,KAAK0oC,KAAK/2B,SAAQ,SAAA+G,GAAK,SAAK/K,UAAU87B,cAAc/wB,EAAEoF,QAA/B,GACzB,EACA,YAAAc,MAAA,SAAMlN,EAA0BI,EAAsCjD,GAAtE,WACE,OAAO7O,KAAKwoC,SAASK,MAAM,UAAW,wBAAwB,WAC5D,IAAMa,EAAe,IAAI,EAAAhuB,iBAAiB,EAAK/N,UAAW+D,EAAaI,EAAqBjD,GACtF86B,EAAaD,EAAajvB,aAC1BqD,EAAU,EAAK8rB,QAAQD,GAQ7B,MAPiB,CACfj4B,YAAW,EACXoM,QAAO,EACPsrB,iBAAkB,EAAKS,oBACnB/rB,EAAS4rB,EAAazmC,QAAQyO,YAAYxM,WAAYwkC,EAAazmC,QAAQyO,YAAYsJ,WAC3FkuB,gBAAiB,EAAKY,mBAAmBhsB,GAG7C,GACF,EACU,YAAA8rB,QAAV,SAAkBG,GAChB,IAAK/pC,KAAKupC,aAAc,CACtB,EAAA17B,OAAOE,QAAQ,kBAAmB,0DAClC,IAAMi8B,GAAqB,IAAAC,uBAAsBjqC,KAAK2N,UAAUkC,SAChE7P,KAAKupC,aAAevpC,KAAK2N,UAAUu8B,cAAcF,EAAoBhqC,KAAK2N,UAAUm7B,GAAGqB,c,CAErF,EAAAntC,IAAIotC,OACN,EAAAv8B,OAAOE,QAAQ,kBAAmB,uBACtCg8B,EAAgB,OAGd,IAAMM,EAAarqC,KAAK2N,UAAUu8B,cAAcH,EAAkB/pC,KAAK2N,UAAUm7B,GAAGwB,iBAC9ExsB,EAAU9d,KAAK2N,UAAU48B,cAAcvqC,KAAKupC,aAAcc,GAEhE,OADArqC,KAAK2N,UAAU67B,aAAaa,GACrBvsB,CACT,EACA,YAAAkrB,WAAA,SAAW9pB,GACT,IAAM7e,EAAQ6e,EAAG7e,MACXD,EAAS8e,EAAG9e,OAClB,EAAAyN,OAAOE,QACH,kBACA,qDAA8C1N,EAAK,YAAID,EAAM,mBAAW8e,EAAG3O,MAAK,kBAAU2O,EAAGH,OAAOrgB,OACxGsB,KAAK2N,UAAU68B,kBAAkBtrB,EAAGf,QAAS9d,EAAOD,EACtD,EACA,YAAA6oC,eAAA,SAAeC,GACb,IAAMuB,EAAiBvB,EAAgBwB,SACjCC,EAAqBzB,EAAgB0B,aAC3C5qC,KAAK2N,UAAUk9B,oBAAoBJ,EAAgBE,GACnD3qC,KAAK2oC,iBAAkB,CACzB,EACA,YAAAQ,aAAA,SAAaC,EAA6CpuB,EAA8B8vB,G,UAEhFhC,EAAK9oC,KAAK2N,UAAUm7B,GACtBiC,EAAkB,E,WACV,EAAMrsC,EAAM,EAAU+c,GAChC,IAAMpe,EAA4C,QAApC,EAAA2d,EAAUgwB,MAAK,SAAA/lC,GAAK,OAAAA,EAAEhJ,OAAS,CAAX,WAAgB,eAAE0C,KACpD,GAAa,cAATD,IAAyBrB,EAC3B,MAAM,IAAIZ,MAAM,oBAAa,EAAI,iDAEnC,OAAQiC,GACN,IAAK,YACH,EAAKusC,YAAYH,EAASC,GAAkB,EAAUA,GACtDA,IACA,MACF,IAAK,QACCtvB,EACFqtB,EAAGoC,WAAW,EAAU7tC,GAExByrC,EAAGqC,UAAU,EAAU9tC,GAEzB,MACF,IAAK,MACCoe,EACFqtB,EAAGsC,WAAW,EAAU/tC,GAExByrC,EAAGuC,UAAU,EAAUhuC,GAEzB,MACF,QACE,MAAM,IAAIZ,MAAM,mCAA4BiC,I,aAzBlD,IAAkD,QAAA0qC,GAAgB,+BAAvD,c,EAAK,OAAM,OAAU,WAAa,c,mGA4B/C,EACA,YAAA6B,YAAA,SAAY/rB,EAAiBosB,EAAqCZ,GAChE1qC,KAAK2N,UAAU49B,qBAAqBrsB,EAAGf,QAASusB,EAAUY,EAC5D,EACA,YAAAxB,mBAAA,SAAmBhsB,GACjB,MAAO,CACL4sB,SAAU1qC,KAAKwrC,kBAAkB1tB,EAAS,YAC1C8sB,aAAc5qC,KAAKwrC,kBAAkB1tB,EAAS,gBAElD,EACA,YAAA+rB,oBAAA,SAAoB/rB,EAAuBxC,EAAqBN,G,YAExDouB,EAA8C,GACpD,GAAI9tB,E,IACF,IAAsB,QAAAA,GAAQ,8BAAE,CAA3B,IAAME,EAAO,QAChB4tB,EAAiBtsC,KAAK,CAACb,KAAMuf,EAAS9c,KAAM,YAAa+sC,SAAUzrC,KAAK0rC,mBAAmB5tB,EAAStC,I,mGAGxG,GAAIR,E,IACF,IAAuB,QAAAA,GAAS,8BAAE,CAA7B,IAAMpB,EAAQ,QACjBwvB,EAAiBtsC,KAAK,EAAD,KAAK8c,GAAQ,CAAE6xB,SAAUzrC,KAAK0rC,mBAAmB5tB,EAASlE,EAAS3d,Q,mGAG5F,OAAOmtC,CACT,EACA,YAAAsC,mBAAA,SAAmB5tB,EAAuB7hB,GACxC,IACM0vC,EADK3rC,KAAK2N,UAAUm7B,GACL4C,mBAAmB5tB,EAAS7hB,GACjD,GAAkB,OAAd0vC,EACF,MAAM,IAAIlvC,MAAM,kBAAWR,EAAI,gBAEjC,OAAO0vC,CACT,EACA,YAAAH,kBAAA,SAAkB1tB,EAAuB7hB,GAGvC,OAFW+D,KAAK2N,UAAUm7B,GACW0C,kBAAkB1tB,EAAS7hB,EAElE,EACF,EA9JA,GAAa,EAAA2vC,eAAAA,C,kHCjBb,cAEA,UAKA,UACA,UACA,UACA,UACA,UAGA,aAWE,WAA4B1vC,EAAuC+G,GAAvC,KAAA/G,QAAAA,EAAuC,KAAA+G,QAAAA,EACjEjD,KAAK4d,eAAiB,IAAI,EAAAiuB,sBAAsB3vC,EAAQyR,UAAUm+B,gBAClE9rC,KAAKue,eAAiB,IAAI,EAAAqtB,eAAe5rC,KAAKiD,QAAQulC,SAAUtsC,EAAQyR,UAAW3N,KAAK4d,gBACxF5d,KAAKugB,eAAiB,IAAI,EAAAwrB,eACtB7vC,EAAQyR,UAAW3N,KAAK4d,eAAgB5d,KAAKiD,QAAQulC,SACrD,CAACwD,cAA4C,SAA7B9vC,EAAQuR,mBAC5BzN,KAAKwd,uBAAyB,IAAI9f,IAClCsC,KAAKyd,yBAA2B,IAAI/f,IACpCsC,KAAK0N,KAAOxR,EAAQwR,KACpB1N,KAAKisC,eAAiB,IAAIvuC,IAC1BsC,KAAKksC,eAAiB,IAAIxuC,GAC5B,CA0CF,OAxCE,YAAAyuC,uBAAA,WACE,OAAO,IAAI,EAAA1pB,sBAAsBziB,KACnC,EACA,YAAAosC,mBAAA,SAAmBC,GACjB,IAAMC,EAAeD,EAAME,YAAYhzB,QAAO,SAAAtU,GAAK,OAAY,IAAZA,EAAElG,MAAekG,EAAE8Z,MAAnB,IAA2B9Y,KAAI,SAAAhB,GAAK,OAAAA,EAAE8Z,OAAQK,MAAV,IACvFpf,KAAKssC,aAAe,IAAI70B,IAAI60B,EAC9B,EACA,YAAAtqB,cAAA,SAAcN,GACZ,QAAO1hB,KAAKssC,cAAetsC,KAAKssC,aAAax0B,IAAI4J,EACnD,EACA,YAAA8qB,eAAA,SAAe9qB,GACb1hB,KAAKssC,aAAav0B,IAAI2J,EACxB,EACA,YAAAvC,eAAA,SAAeuC,EAAqB5S,GAClC,OAAIA,EACK9O,KAAKwd,uBAAuBje,IAAImiB,GAEhC1hB,KAAKyd,yBAAyBle,IAAImiB,EAE7C,EACA,YAAAK,eAAA,SAAeL,EAAqBC,EAA0B7S,QAAA,IAAAA,IAAAA,GAAA,GAC5D,EAAAjB,OAAOE,QAAQ,sBAAuB,iCAClCe,EACF9O,KAAKwd,uBAAuBte,IAAIwiB,EAAUC,GAE1C3hB,KAAKyd,yBAAyBve,IAAIwiB,EAAUC,EAEhD,EACA,YAAAzU,QAAA,sBACElN,KAAKue,eAAerR,UACpBlN,KAAKugB,eAAe2B,sBACpBliB,KAAKwd,uBAAuB7L,SAAQ,SAAAuN,GAAM,SAAKqB,eAAe4B,eAAejD,GAAI,EAAvC,IAC1Clf,KAAKwd,uBAAyB,IAAI9f,IAClCsC,KAAKyd,yBAAyB9L,SAAQ,SAAAuN,GAAM,SAAKqB,eAAe4B,eAAejD,GAAI,EAAvC,IAC5Clf,KAAKyd,yBAA2B,IAAI/f,GACtC,EACA,YAAAqF,QAAA,SAAQqU,EAAkBq1B,EAA0BJ,GAClD,IAAMK,GAAK,IAAAC,iBAAgBv1B,EAAMq1B,EAAQ,EAAA/pB,wBACzC,MAAO,CAACkqB,KAAMF,EAAGG,OAAQ5pC,QAASypC,EAAGI,OAASJ,EAAGI,OAAO11B,EAAMi1B,GAASj1B,EACzE,EACF,EAhEA,GAAa,EAAAnJ,oBAAAA,C,8JChBb,cAqCA,aAKE,WAAY66B,EAA4B1kC,GACtC,QADsC,IAAAA,IAAAA,EAAA,GACrB,IAAbA,EACFpE,KAAK+sC,eAAiBjE,EAAGkE,KACzBhtC,KAAKwD,OAASslC,EAAGmE,IACjBjtC,KAAK2d,YAAcmrB,EAAGx+B,MACtBtK,KAAKi4B,YAAc7zB,MACd,IAAiB,IAAbA,EAMT,MAAM,IAAI3H,MAAM,sCAA+B2H,IAL/CpE,KAAK+sC,eAAiBjE,EAAGoE,QACzBltC,KAAKwD,OAASslC,EAAGqE,KACjBntC,KAAK2d,YAAcmrB,EAAGx+B,MACtBtK,KAAKi4B,YAAc7zB,C,CAIvB,CA6BF,OA5BE,YAAA+T,OAAA,SAAO9U,EAA4B+pC,GACjC,IAAIh+B,EACAsB,EAcJ,OAbIrN,EAAI/E,cAAgBX,eACtB,EAAAkQ,OAAOG,QAAQ,UAAW,2DAC1B0C,EAAS,IAAI/S,aAAa0F,IAExB+pC,EAAcptC,KAAKi4B,YAAc50B,EAAIxG,QACvC,EAAAgR,OAAOG,QAAQ,UAAW,kDAC1B0C,EAASrN,EACT+L,EAASpP,KAAKqtC,SAASD,EAAcptC,KAAKi4B,aAC1CvnB,EAAOiB,SAAQ,SAAC1M,EAAGvI,GAAM,OAAA0S,EAAO1S,GAAKuI,CAAZ,KAGzBmK,EADAsB,EAASrN,EAGJ+L,CACT,EACA,YAAAi+B,SAAA,SAAS3tC,GACP,OAAO,IAAI/B,aAAoB,EAAP+B,EAC1B,EACA,YAAA0Y,OAAA,SAAOlY,EAA+BotC,GACpC,OAAyB,IAArBttC,KAAKi4B,YACe/3B,EAAwBqZ,QAAO,SAAClc,EAAOmY,GAAU,OAAAA,EAAQ,GAAM,CAAd,IAAiBuK,SAAS,EAAGutB,GAG/FptC,EAAO6f,SAAS,EAAGutB,EAC5B,EACF,EAhDA,GAAa,EAAAC,sBAAAA,EAoDb,iBAKE,WAAYzE,EAA2B1kC,EAAcuZ,GACnD,QADqC,IAAAvZ,IAAAA,EAAA,GACpB,IAAbA,GAA+B,IAAbA,EACpB,MAAM,IAAI3H,MAAM,sCAA+B2H,IAEjDpE,KAAK+sC,eAAiBjE,EAAGqE,KACzBntC,KAAKwD,OAASslC,EAAGqE,KACjBntC,KAAKi4B,YAAc7zB,EACnBpE,KAAK2d,YAAcA,GAAemrB,EAAGx+B,KACvC,CAoBF,OAnBE,YAAA6N,OAAA,SAAO9U,EAAmB+pC,GACxB,IAAII,EAAOnqC,EAMX,OALyB,IAArBrD,KAAKi4B,cACP,EAAApqB,OAAOE,QAAQ,UAAW,iCAC1By/B,EAAOxtC,KAAKqtC,SAASD,GACrB/pC,EAAIsO,SAAQ,SAAC1M,EAAGvI,GAAM,OAAA8wC,EAAS,EAAJ9wC,GAASuI,CAAd,KAEjBuoC,CACT,EACA,YAAAH,SAAA,SAAS3tC,GACP,OAAO,IAAI/B,aAAoB,EAAP+B,EAC1B,EACA,YAAA0Y,OAAA,SAAOlY,EAA+BotC,GACpC,OAAyB,IAArBttC,KAAKi4B,YACe/3B,EAAwBqZ,QAAO,SAAClc,EAAOmY,GAAU,OAAAA,EAAQ,GAAM,CAAd,IAAiBuK,SAAS,EAAGutB,GAG/FptC,EAAO6f,SAAS,EAAGutB,EAC5B,EACF,EAjCA,GAAa,EAAAG,qBAAAA,EAmCb,iBAKE,WAAY3E,EAA2B1kC,GACrC,QADqC,IAAAA,IAAAA,EAAA,GADvC,KAAA6zB,YAAc,EAEK,IAAb7zB,EACFpE,KAAK+sC,eAAiBjE,EAAG4E,MACzB1tC,KAAKwD,OAASslC,EAAG4E,MACjB1tC,KAAK2d,YAAcmrB,EAAG6E,cACtB3tC,KAAKi4B,YAAc7zB,MACd,IAAiB,IAAbA,EAMT,MAAM,IAAI3H,MAAM,sCAA+B2H,IAL/CpE,KAAK+sC,eAAiBjE,EAAGqE,KACzBntC,KAAKwD,OAASslC,EAAGqE,KACjBntC,KAAK2d,YAAcmrB,EAAG6E,cACtB3tC,KAAKi4B,YAAc7zB,C,CAIvB,CAaF,OAZE,YAAA+T,OAAA,SAAO9U,EAAiBuqC,GACtB,OAAO,IAAIhwC,WAAWyF,EAAInD,OAAQmD,EAAIwC,WAAYxC,EAAIyC,WACxD,EACA,YAAAunC,SAAA,SAAS3tC,GACP,OAAO,IAAI9B,WAAW8B,EAAOM,KAAKi4B,YACpC,EACA,YAAA7f,OAAA,SAAOlY,EAA+BotC,GACpC,GAAIptC,aAAkBtC,WACpB,OAAOsC,EAAO6f,SAAS,EAAGutB,GAE5B,MAAM,IAAI7wC,MAAM,8BAAuByD,EAAO5B,aAChD,EACF,EAhCA,GAAa,EAAAuvC,iBAAAA,C,+PC5Hb,cACA,UAmBA,aACE,WAAmB/B,GAAA,KAAAA,eAAAA,CAAyB,CAoC9C,OAnCE,YAAAgC,iBAAA,SAAiBv9B,EAA0Bw9B,GAEzC,GAAqB,IAAjBx9B,EAAM1T,OACR,MAAO,CAAC,EAAG,GAEb,IAAMivC,EAAiB9rC,KAAK8rC,eAC5B,GAAIiC,QAA6BvxC,IAApBuxC,EAAMC,UAAyB,CAE1C,IAAMC,EAAQF,EAAMC,WAAaz9B,EAAM1T,OAAS,EAAI0T,EAAMqE,MAAMm5B,EAAMC,WAAWjP,QAAO,SAACrmB,EAAGxH,GAAM,OAAAwH,EAAIxH,CAAJ,IAC5Fg9B,EAAQH,EAAMC,WAAa,EAAI,EAAIz9B,EAAMqE,MAAM,EAAGm5B,EAAMC,WAAWjP,QAAO,SAACrmB,EAAGxH,GAAM,OAAAwH,EAAIxH,CAAJ,IAC1F,KAAI+8B,EAAQnC,GAAkBoC,EAAQpC,GAOpC,MAAO,CAACmC,EAAOC,GAJf,EAAArgC,OAAOE,QACH,gBACA,kEAA2DwC,EAAK,uBAAew9B,EAAMC,W,CAS7F,IAJA,IAAMG,EAAY59B,EAAMwuB,QAAO,SAACrmB,EAAGxH,GAAM,OAAAwH,EAAIxH,CAAJ,IAErC7Q,EAAQ4H,KAAKyc,MAAMzc,KAAK+f,KAAKmmB,IAE1B9tC,EAAQyrC,GAAkBzrC,EAAQ8tC,GACnCA,EAAY9tC,GAAU,EADwBA,KAMpD,GAAIA,GAASyrC,GAAkBqC,EAAY9tC,GAAU,EACnD,MAAM,IAAI5D,MAAM,kEAA2D8T,IAE7E,MAAO,CAAClQ,EAAO8tC,EAAY9tC,EAC7B,EACF,EArCA,GAAa,EAAA+tC,+BAAAA,EAuCb,iBACE,WAAmBtC,GAAA,KAAAA,eAAAA,CAAyB,CAwF9C,OAvFE,YAAAgC,iBAAA,SAAiBv9B,EAA0Bw9B,GACzC,IAAMM,EAAKruC,KAAKsuC,eAAe/9B,EAAOw9B,GAKtC,OAJIA,GAASA,EAAMj/B,WACjBu/B,EAAG,IAAM,EACTA,EAAG,IAAM,GAEPN,GAASA,EAAM7tB,UACV,CAACmuB,EAAG,GAAIA,EAAG,IAEbA,CACT,EAEA,YAAAC,eAAA,SAAe/9B,EAA0Bw9B,GACvC,IAAMj/B,EAAWi/B,GAASA,EAAMj/B,SAEhC,GAAqB,IAAjByB,EAAM1T,OACR,OAAOiS,EAAW,CAAC,EAAG,GAAK,CAAC,EAAG,GAEjC,IAAIg9B,EAAiB9rC,KAAK8rC,eAC1B,GAAIiC,QAA6BvxC,IAApBuxC,EAAMC,UAAyB,CAE1C,IAAMC,EAAQF,EAAMC,WAAaz9B,EAAM1T,OAAS,EAAI0T,EAAMqE,MAAMm5B,EAAMC,WAAWjP,QAAO,SAACrmB,EAAGxH,GAAM,OAAAwH,EAAIxH,CAAJ,IAC5Fg9B,EAAQH,EAAMC,WAAa,EAAI,EAAIz9B,EAAMqE,MAAM,EAAGm5B,EAAMC,WAAWjP,QAAO,SAACrmB,EAAGxH,GAAM,OAAAwH,EAAIxH,CAAJ,IAC1F,KAAI+8B,EAAQnC,GAAkBoC,EAAQpC,GAOpC,MAAO,CAACmC,EAAOC,GAJf,EAAArgC,OAAOE,QACH,gBACA,kEAA2DwC,EAAK,uBAAew9B,EAAMC,W,CAK7F,IAAIO,EAAWh+B,EAAMqE,MAAM,GAoB3B,GAnBI9F,IACFg9B,GAAkC,EAYV,KALxByC,EAAWA,EAAStoC,KAChB,SAACkN,EAAGzW,GAAM,OAAAA,GAAK6xC,EAAS1xC,OAAS,EAAK0xC,EAAS7xC,GAAK,GAAM,EAAI6xC,EAAS7xC,GAAK6xC,EAAS7xC,GAAK,EAAK6xC,EAAS7xC,EAA9F,KAIDG,SACX0xC,EAAW,CAAC,EAAGA,EAAS,MAKJ,IAApBA,EAAS1xC,OAAc,CACzB,IAAM2xC,EAAgB74B,EAAa44B,GACnCA,EAAWC,EAAc54B,Q,CAG3B,IAAMlW,EAAO+uC,EAAcF,GAC3B,OAAIA,EAAS1xC,QAAU,GAAK6C,GAAQosC,EAC3B,CAAC,EAAGpsC,GACkB,IAApB6uC,EAAS1xC,QAAgB0xC,EAAS,IAAMzC,GAAkByC,EAAS,IAAMzC,EAC3EyC,EACsB,IAApBA,EAAS1xC,QAAgB0xC,EAAS,GAAKA,EAAS,IAAMzC,GAAkByC,EAAS,IAAMzC,EACzF,CAACyC,EAAS,GAAKA,EAAS,GAAIA,EAAS,IACf,IAApBA,EAAS1xC,QAAgB0xC,EAAS,IAAMzC,GAAkByC,EAAS,GAAKA,EAAS,IAAMzC,EACzF,CAACyC,EAAS,GAAIA,EAAS,GAAKA,EAAS,IAEtB,IAApBA,EAAS1xC,QAAgB0xC,EAAS,GAAKA,EAAS,GAAKA,EAAS,IAAMzC,GACpEyC,EAAS,IAAMzC,EACV,CAACyC,EAAS,GAAKA,EAAS,GAAKA,EAAS,GAAIA,EAAS,IAEpC,IAApBA,EAAS1xC,QAAgB0xC,EAAS,IAAMzC,GACxCyC,EAAS,GAAKA,EAAS,GAAKA,EAAS,IAAMzC,EACtC,CAACyC,EAAS,GAAIA,EAAS,GAAKA,EAAS,GAAKA,EAAS,IAEtDz/B,EAMK4/B,EAAoBhvC,EAAO,GAAGuG,KAAI,SAAAkN,GAAK,OAAI,EAAJA,CAAA,IAEzCu7B,EAAoBhvC,EAE/B,EACF,EAzFA,GA2FA,SAAgBiW,EAAapF,EAAiByb,GAM5C,IALA,IAAMpW,EAAqB,GACrBC,EAAqB,GACrB84B,EAAuB,MAAR3iB,GAAgB5sB,MAAMC,QAAQ2sB,IAAyB,IAAhBA,EAAKnvB,OAC3DyiC,EAAgB,MAARtT,GAAgB2iB,EAAgB,KAAOC,EAAe5iB,EAAMzb,GAAO5H,OAC7E/E,EAAI,EACClH,EAAI,EAAGA,EAAI6T,EAAM1T,SAAUH,EAAG,CACrC,GAAY,MAAR4iC,EAAc,CAChB,GAAIA,EAAK17B,KAAOlH,GAAkB,IAAb6T,EAAM7T,GACzB,MAAM,IAAID,MAAM,6BAAsBC,EAAC,2BAAmB6T,EAAM7T,GAAE,gBAEpD,MAAX4iC,EAAK17B,IAAc07B,EAAK17B,GAAKlH,IAAmB,IAAb6T,EAAM7T,KAC5CkZ,EAAS9Y,KAAKyT,EAAM7T,IACpBmZ,EAAS/Y,KAAKJ,IAEZ4iC,EAAK17B,IAAMlH,GACbkH,G,CAGa,IAAb2M,EAAM7T,KACRkZ,EAAS9Y,KAAKyT,EAAM7T,IACpBmZ,EAAS/Y,KAAKJ,G,CAGlB,MAAO,CAACkZ,SAAQ,EAAEC,SAAQ,EAC5B,CAEA,SAAgB+4B,EAAe5iB,EAAuBzb,GACpD,IAAMY,EAAOZ,EAAM1T,OAkBnB,OAfAmvB,EAAe,MAARA,EAAezb,EAAMtK,KAAI,SAAC8F,EAAGrP,GAAM,OAAAA,CAAA,IAAM,GAAgBgnB,OAAOsI,IAGvE,IAAA6iB,QACI7iB,EAAK+U,OAAM,SAAA+N,GAAM,OAAAA,IAAO39B,GAAQ29B,EAAK39B,CAApB,KACjB,WAAM,4DAA+CA,EAAI,aAAKA,EAAI,UAC9D,mBAAY6a,EADV,KAIV,IAAA6iB,QACI7iB,EAAK+U,MAAMgO,IACX,WAAM,uDACF,mBAAY/iB,EADV,IAIHA,EAAK/lB,KAAI,SAAAyS,GAAK,OAAAA,EAAI,EAAIvH,EAAOuH,EAAIA,CAAnB,GACvB,CACA,SAAgBq2B,EAAMr2B,GACpB,OAAOA,EAAI,GAAM,CACnB,CACA,SAAgB+1B,EAAcl+B,GAC5B,GAAqB,IAAjBA,EAAM1T,OAER,OAAO,EAGT,IADA,IAAI6C,EAAO6Q,EAAM,GACR7T,EAAI,EAAGA,EAAI6T,EAAM1T,OAAQH,IAChCgD,GAAQ6Q,EAAM7T,GAEhB,OAAOgD,CACT,CAQA,SAAgBgvC,EAAoBhvC,GAClC,IAAMW,EAAQ4H,KAAKE,KAAKF,KAAK+f,KAAKtoB,IAClC,MAAO,CAACW,EAAO4H,KAAKE,KAAKzI,EAAOW,GAClC,CAnKa,EAAAwrC,sBAAAA,EA2Fb,iBA2BA,mBAqBA,UAGA,kBAWA,uBAA4Bt7B,GAC1B,GAAqB,IAAjBA,EAAM1T,OACR,MAAMJ,MAAM,wDAGd,MAAO,CAAC8T,EAAM1T,OAAS,EAAI0T,EAAMA,EAAM1T,OAAS,GAAK,EAAG0T,EAAMA,EAAM1T,OAAS,GAC/E,EACA,wBAIA,uBAA4B0T,EAAiBy+B,GAC3C,YAD2C,IAAAA,IAAAA,EAAA,GACpCP,EAAcl+B,EAAMqE,MAAM,EAAGrE,EAAM1T,OAASmyC,GACrD,C,kfCjOA,cAGA,UAEa,EAAAvwB,mCACT,SAACgqB,EAA8Cl4B,EAC9CoN,GACC,IAAM+O,EAAW/O,IAAgB,EAAAqB,YAAY8B,UAAYnD,IAAgB,EAAAqB,YAAY8b,iBAAoB,EAAI,EACvGhsB,EAAW6O,IAAgB,EAAAqB,YAAYC,OACvCiB,EAAavC,IAAgB,EAAAqB,YAAY8b,kBAAoBnd,IAAgB,EAAAqB,YAAYC,OACzF+uB,EAAYrwB,IAAgB,EAAAqB,YAAYM,oBAAsB/O,EAAM1T,OAAS,OAAIL,EACjF0S,EAAgByO,IAAgB,EAAAqB,YAAYM,oBAC9C/O,EAAMtK,KAAI,SAACkN,EAAGzW,GAAM,OAAAA,IAAM6T,EAAM1T,OAAS,EAAQ,EAAJsW,EAAQA,CAAjC,SACpB3W,EACJ,OAAO,IAAAyjB,8BACHwoB,EAAuBl4B,EAAOmc,EAASxd,EAAe,CAACJ,SAAQ,EAAEoR,UAAS,EAAE8tB,UAAS,GAC3F,EAES,EAAAtwB,+BACT,SAAC+qB,EAA8Cl4B,EAA0BoN,GAEnE,IAAMjH,GAAS,IAAA+H,oCAAmCgqB,EAAuBl4B,EAAOoN,GAChF,MAAO,CAACjH,EAAOrW,MAAOqW,EAAOtW,OAC/B,EAKK,EAAA6f,6BACT,SAACwoB,EAA8Cl4B,EAA0BnM,EACxE8K,EAAmC6+B,QADqC,IAAA3pC,IAAAA,EAAA,GAEvE,IAAM0K,KAAci/B,IAASA,EAAMj/B,UAC7B,IAAkB25B,EAAsBqF,iBAAiBh/B,GAAWI,GAAyBqB,EAAOw9B,GAAM,GAAzG1tC,EAAK,KAAED,EAAM,KACd+Q,EAAOZ,EAAM1T,OACfoyC,EAAe1+B,EAAMqE,MAAM,GAI/B,GAHa,IAATzD,IACF89B,EAAe,CAAC,IAED,IAAb7qC,EAEF8K,EAAgBqB,OACX,GAAIzB,EAAU,CACnB,GAAiB,IAAb1K,EACF,MAAM,IAAI3H,MAAM,sCAElByS,EAAgBqB,EACZY,EAAO,IACT89B,EAAa99B,EAAO,GAAKlJ,KAAKE,KAAK8mC,EAAa99B,EAAO,GAAK,IAE1DA,EAAO,IACT89B,EAAa99B,EAAO,GAAKlJ,KAAKE,KAAK8mC,EAAa99B,EAAO,GAAK,G,MAEzD,IAAKjC,EACV,MAAM,IAAIzS,MAAM,oDAElB,MAAO,CACL4D,MAAK,EACLD,OAAM,EACNgE,SAAQ,EACR0K,SAAQ,EACRyB,MAAO0+B,EACP79B,QAAS,EAAAkC,UAAU0N,eAAeiuB,GAClC//B,cAAa,EACbggC,WAAanB,GAASA,EAAM7tB,UAEhC,C,igDClEJ,cAsBA,aAME,WACWvS,EAAgCiQ,EAA8C4qB,EAC7E2G,GADD,KAAAxhC,UAAAA,EAAgC,KAAAiQ,eAAAA,EAA8C,KAAA4qB,SAAAA,EAC7E,KAAA2G,OAAAA,EAJK,KAAAC,YAAuE,IAAI1xC,IAKtFyxC,EAAOnD,gBACThsC,KAAKqvC,cAAgB,IAAI3xC,IACzBsC,KAAKsvC,aAAe,IAAI5xC,IACxBsC,KAAKuvC,cAAgB,IAAI7xC,IAE7B,CAoLF,OAnLE,YAAA8iB,wBAAA,SACIH,EAA2B3J,EAAuB/X,EAA0B2hB,GAC9E,IAAMkvB,EAAkBxvC,KAAKyvC,cAAcpvB,GAErCqvB,EAAU1vC,KAAK2N,UAAUgiC,WAAWH,EAAiB94B,EAAOtS,UAAY,EAAGkc,GACjF,GAAI5J,EAAO5H,UAAsB,IAAVwR,EACrB,MAAM,IAAI7jB,MAAM,mBAElB,IAGI6I,EACA+pC,EAJEhvC,EAAQqW,EAAOrW,MACfD,EAASsW,EAAOtW,OAItB,GAAIJ,KAAKmvC,OAAOnD,cAAe,CAC7B1mC,EAAM,UAAGjF,EAAK,YAAID,EAAM,YAAIsvC,EAAQlsC,OAAM,YAAIksC,EAAQ3C,eAAc,YAAI2C,EAAQ/xB,cAChF0xB,EAAgBrvC,KAAKqvC,cAAc9vC,IAAI+F,MAErC+pC,EAAgB,GAChBrvC,KAAKqvC,cAAcnwC,IAAIoG,EAAK+pC,IAG9B,IAAMC,EAAetvC,KAAKsvC,aAAa/vC,IAAI+F,GAC3C,GAAIgqC,GAAgBA,EAAazyC,OAAS,EAAG,CAC3C,IAAM,EAAUyyC,EAAaM,MAK7B,OAJAP,EAAcvyC,KAAK,GACL,IAAVwjB,GACFtgB,KAAK2N,UAAUkiC,cAAc,EAASxvC,EAAOD,EAAQsvC,EAAS1vC,KAAK8vC,cAAczvB,EAAU1hB,IAEtF,C,EAIX,EAAAkP,OAAOE,QAAQ,iBAAkB,uCAAgC2I,EAAOrW,MAAK,YAAIqW,EAAOtW,SACxF,IAAM+d,EAAUne,KAAK2N,UAAUoiC,gBAAgB1vC,EAAOD,EAAQsvC,EAAS1vC,KAAK8vC,cAAczvB,EAAU1hB,IAMpG,OAJIqB,KAAKmvC,OAAOnD,gBACdqD,EAAevyC,KAAKqhB,GACpBne,KAAKuvC,cAAcrwC,IAAIif,EAAS7Y,IAE3B6Y,CACT,EACA,YAAA0D,YAAA,SAAY3C,EAAiBmB,EAA2Bjc,GAAxD,WAIE,OAHKA,IACHA,EAAW,GAENpE,KAAKwoC,SAASK,MAAM,UAAW,8BAA8B,WAClE,IAAMyE,EAAWpuB,EAAG3O,MAAMwuB,QAAO,SAACrmB,EAAGxH,GAAM,OAAAwH,EAAIxH,CAAJ,IAAS9M,EAC9CzF,EAAO,EAAKgP,UAAUkU,YACxB3C,EAAGf,QAASe,EAAG7e,MAAO6e,EAAG9e,OAAQktC,EAAU,EAAKmC,cAAcpvB,GAAWjc,GAC7E,OAAO,EAAK4rC,aAAa3vB,EAAU1hB,EACrC,GACF,EACM,YAAAmjB,iBAAN,SAAuB5C,EAAiBmB,EAA2Bjc,G,kFAKjE,OAJMgb,EAASF,EAAGH,OAAOK,OACpBhb,IACHA,EAAW,GAETpE,KAAKovC,YAAYt3B,IAAIsH,IACjB,EAAcpf,KAAKovC,YAAY7vC,IAAI6f,GAClC,CAAP,EAAO,IAAItc,SAA2B,SAAAC,GAAW,oBAAW,EAAX,EAAajG,KAAKiG,EAAlB,MAE5C,CAAP,EAAO/C,KAAKwoC,SAASK,MAAM,UAAW,mCAAmC,gD,8DAIvE,OAHA7oC,KAAKovC,YAAYlwC,IAAIkgB,EAAQ,IACvBkuB,EAAWpuB,EAAG3O,MAAMwuB,QAAO,SAACrmB,EAAGxH,GAAM,OAAAwH,EAAIxH,CAAJ,IAAS9M,EAEpD,GAAMpE,KAAK2N,UAAUsiC,yB,OAOrB,OAPA,SACMtxC,EAAOqB,KAAK2N,UAAUkU,YACxB3C,EAAGf,QAASe,EAAG7e,MAAO6e,EAAG9e,OAAQktC,EAAUttC,KAAKyvC,cAAcpvB,GAAWjc,GACvE8rC,EAAalwC,KAAKgwC,aAAa3vB,EAAU1hB,GACzCwxC,EAAcnwC,KAAKovC,YAAY7vC,IAAI6f,GACzCpf,KAAKovC,YAAY1lC,OAAO0V,GACxB+wB,SAAAA,EAAax+B,SAAQ,SAAA5O,GAAW,OAAAA,EAAQmtC,EAAR,IACzB,CAAP,EAAOA,G,kBAGX,YAAA7tB,wBAAA,SAAwBnD,GAAxB,WACE,OAAOlf,KAAKwoC,SAASK,MAAM,UAAW,0CAA0C,WAC9E,IAAMyE,EAAWpuB,EAAG3O,MAAMwuB,QAAO,SAACrmB,EAAGxH,GAAM,OAAAwH,EAAIxH,CAAJ,IACrCvS,EAAO,EAAKgP,UAAUkU,YAAY3C,EAAGf,QAASe,EAAG7e,MAAO6e,EAAG9e,OAAmB,EAAXktC,EAAc,OAAQ,GAC/F,OAAO,IAAI3vC,aAAagB,EAAKuB,OAAQvB,EAAKkH,WAAYynC,EACxD,GACF,EACA,YAAAnrB,eAAA,SAAeR,EAA0ByuB,GACvC,IAAI9qC,EACJ,GAAItF,KAAKmvC,OAAOnD,gBACd1mC,EAAMtF,KAAKuvC,cAAchwC,IAAIoiB,EAAYxD,UAChC,CACHiyB,GACFpwC,KAAKuvC,cAAc7lC,OAAOpE,GAE5B,IAAM+pC,EAAgBrvC,KAAKqvC,cAAc9vC,IAAI+F,GAC7C,GAAI+pC,EAAe,CACjB,IAAM75B,EAAQ65B,EAAc1yC,QAAQglB,EAAYxD,SAChD,IAAe,IAAX3I,EAAc,CAChB65B,EAAczyC,OAAO4Y,EAAO,GAC5B,IAAI85B,EAAetvC,KAAKsvC,aAAa/vC,IAAI+F,GACpCgqC,IACHA,EAAe,GACftvC,KAAKsvC,aAAapwC,IAAIoG,EAAKgqC,IAE7BA,EAAaxyC,KAAK6kB,EAAYxD,Q,GAMjC7Y,IAAO8qC,IACV,EAAAviC,OAAOE,QAAQ,iBAAkB,mCAA4B4T,EAAYthB,MAAK,YAAIshB,EAAYvhB,SAC9FJ,KAAK2N,UAAUyiC,cAAczuB,EAAYxD,SAE7C,EACA,YAAA6xB,aAAA,SAAa3vB,EAA2B1hB,GACtC,OAAQ0hB,GACN,IAAK,QACH,OAAO1hB,aAAgBZ,WAAaY,EAAOZ,WAAWgB,KAAKJ,GAC7D,IAAK,QACH,OAAOA,aAAgBX,WAAaW,EAAOX,WAAWe,KAAKJ,GAC7D,IAAK,OACH,OAAOA,aAAgBd,UAAYc,EAAOd,UAAUkB,KAAKJ,GAC3D,IAAK,SACH,OAAOA,aAAgBb,YAAca,EAAOb,YAAYiB,KAAKJ,GAC/D,IAAK,SACH,OAAOA,aAAgBT,YAAcS,EAAOT,YAAYa,KAAKJ,GAC/D,IAAK,QACL,IAAK,OACH,OAAOA,aAAgBf,WAAae,EAAOf,WAAWmB,KAAKJ,GAC7D,IAAK,UACH,OAAOA,aAAgBhB,aAAegB,EAAOhB,aAAaoB,KAAKJ,GACjE,IAAK,UACH,OAAOA,aAAgBV,aAAeU,EAAOV,aAAac,KAAKJ,GACjE,QACE,MAAM,IAAIlC,MAAM,0BAAmB4jB,EAAQ,sBAEjD,EACA,YAAAyvB,cAAA,SAAczvB,EAA2B1hB,GACvC,GAAKA,EAGL,OAAQA,aAAgBhB,aAAgBgB,EAAO,IAAIhB,aAAagB,EAmBlE,EACA,YAAA8wC,cAAA,SAAcY,GACZ,MAAO,OAgBT,EACA,YAAAnuB,oBAAA,WACEliB,KAAK2N,UAAUuU,qBACjB,EACF,EAlMA,GAAa,EAAA6pB,eAAAA,C,kCCgBb,IAAY/sB,E,uEAAAA,EAAA,EAAAA,cAAA,EAAAA,YAAW,KACrB,yBACA,2CACA,uBACA,mDACA,gD,+rDC3CF,cAOA,0BAA+B9P,GAC7B,IAAMohC,EAAMphC,EAAcrS,OAC1B,OAAOqS,EAAc0F,MAAM,EAAG07B,EAAM,GAAG5sB,OAAOxU,EAAcohC,EAAM,GAAK,EACzE,EAEA,uBACIC,EAAwBC,EAAmCC,G,YAAnC,IAAAD,IAAAA,EAAA,SAAWE,GAAqB,W,4DAC1D,MAAO,CAAP,EAAO,IAAI5tC,SAAc,SAACC,EAASC,GACjC,IAAI2tC,EAAW,EAETC,EAAQ,WACZ,GAAIL,IACFxtC,QADF,CAKA4tC,IAEA,IAAME,EAAcL,EAAQG,GAEV,MAAdF,GAAsBE,GAAYF,EACpCztC,IAGF8tC,WAAWF,EAAOC,E,CACpB,EAEAD,GACF,I,QAOF,sDAA2Dh/B,GAEzD,OADA,IAAAi9B,aAA8B,IAAhBj9B,GAAsD,IAAvBA,EAAY/U,QAAc,WAAM,+CACtE,MAAQ+U,EAAYm/B,OAAO,GAAGC,cAAgBp/B,EAAYgD,MAAM,EACzE,EAMA,iEAAsEhD,GAEpE,OADA,IAAAi9B,aAA8B,IAAhBj9B,GAAsD,IAAvBA,EAAY/U,QAAc,WAAM,+CACtE,MAAQ+U,EAAYm/B,OAAO,GAAGC,cAAgBp/B,EAAYgD,MAAM,GAAK,aAC9E,EAGA,6BAAkCqX,EAA+BtX,GAI/D,OAF8BK,KAAKC,MAAMD,KAAKE,UAAU+W,IACxCtX,CAElB,EAGA,6BAAkCY,EAAkBM,GAClD,OAAOA,EAAS5P,KAAI,SAAAkN,GAAK,OAAAoC,EAAOpC,EAAP,IAAWvM,KAAK,KAC3C,EAGA,6BAAkCuK,GAChC,GAAIA,GAAQ,EACV,MAAO,MACF,GAAa,IAATA,EACT,MAAO,QACF,GAAa,IAATA,EACT,MAAO,QACF,GAAa,IAATA,EACT,MAAO,QACF,GAAa,IAATA,EACT,MAAO,QACF,GAAa,IAATA,EACT,MAAO,QAEP,MAAM1U,MAAM,uBAAgB0U,EAAI,yBAEpC,EAEA,yBAA8BA,GAC5B,YAD4B,IAAAA,IAAAA,EAAA,GACrB,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,KAAKyD,MAAM,EAAGzD,EACjD,C,yIC1FA,cAEA,UAEM7D,EAA6C,CAAC,EAuCpD,SAAgB2jC,EAAsB1jC,GACpC,IAUIu7B,EAVE1mC,EAyCR,WACE,GAAwB,oBAAbC,SAA0B,CACnC,GAA+B,oBAApB6uC,gBACT,MAAM,IAAI50C,UAAU,6DAEtB,OAAO,IAAI40C,gBAAgB,EAAG,E,CAEhC,IAAM9uC,EAA4BC,SAASC,cAAc,UAGzD,OAFAF,EAAO/B,MAAQ,EACf+B,EAAOhC,OAAS,EACTgC,CACT,CApDiB+uC,GAWTC,EAV4C,CAChDlb,OAAO,EACPmb,OAAO,EACPC,WAAW,EACXC,SAAS,EACTC,uBAAuB,EACvBC,oBAAoB,EACpBC,8BAA8B,GAIhC,KAAKnkC,GAA2B,WAAdA,KAChBu7B,EAAK1mC,EAAOI,WAAW,SAAU4uC,IAE/B,IACE,OAAO,IAAI,EAAAO,aAAa7I,EAAI,E,CAC5B,MAAOniC,GACP,EAAAkH,OAAOG,QAAQ,mBAAoB,yEAAkErH,G,CAI3G,KAAK4G,GAA2B,UAAdA,KAChBu7B,EAAK1mC,EAAOI,WAAW,QAAS4uC,IAAOhvC,EAAOI,WAAW,qBAAsB4uC,IAE7E,IACE,OAAO,IAAI,EAAAO,aAAa7I,EAAI,E,CAC5B,MAAOniC,GACP,EAAAkH,OAAOG,QACH,mBACA,gGAAyFrH,G,CAKnG,MAAM,IAAIlK,MAAM,yBAClB,CArEA,8BAAgBmR,EAAmBL,GACjC,IAAItK,EACEsK,GAA2B,WAAdA,KAA2B,WAAYD,GAE7CC,GAA2B,UAAdA,KAA0B,UAAWD,KAC7DrK,EAAUqK,EAAMpQ,OAFhB+F,EAAUqK,EAAMskC,OAKlB3uC,EAAUA,GAAWguC,EAAsB1jC,GAC3CA,EAAYA,GAAiC,IAApBtK,EAAQ4M,QAAgB,QAAU,SAC3D,IAAMi5B,EAAK7lC,EAAQ6lC,GAInB,OAFAx7B,EAAMC,GAAatK,EAEf6lC,EAAG+I,wBACEvkC,EAAMC,GACNK,EAAmBL,KAG5Bu7B,EAAGgJ,QAAQhJ,EAAGiJ,YACdjJ,EAAGgJ,QAAQhJ,EAAGkJ,cACdlJ,EAAGgJ,QAAQhJ,EAAGmJ,OACdnJ,EAAGgJ,QAAQhJ,EAAGoJ,QACdpJ,EAAGgJ,QAAQhJ,EAAGqJ,qBACdrJ,EAAGgJ,QAAQhJ,EAAGsJ,iBACdtJ,EAAGuJ,OAAOvJ,EAAGwJ,cACbxJ,EAAGuJ,OAAOvJ,EAAGyJ,WACbzJ,EAAG0J,SAAS1J,EAAG2J,MAERxvC,EACT,EAEA,yB,0pEC3CA,cAEA,aAEA,SAWA,SAAgByvC,EAAqBrnC,GAEnC,IADA,IAAI3O,EAAI,EACDA,EAAI2O,EAAIxO,QACEwO,EAAI3O,OADIA,GAMzB,OAAOA,EAAI,CACb,CATA,yBAcA,iBAwCE,WAAYosC,EAA2Bj5B,GAF/B,KAAA8iC,kBAAmB,EAogBnB,KAAAC,YAA0B,GAjgBhC5yC,KAAK8oC,GAAKA,EACV9oC,KAAK6P,QAAUA,EAEf7P,KAAK6yC,gBACL7yC,KAAK8yC,aAAe9yC,KAAK+yC,qBACzB/yC,KAAKgzC,YAAchzC,KAAKizC,oBACxBjzC,KAAKkzC,sBACP,CAmhBF,OAjhBE,YAAAnD,gBAAA,SAAgB1vC,EAAeD,EAAgBsvC,EAAsB/wC,GACnE,IAAMmqC,EAAK9oC,KAAK8oC,GAEV3qB,EAAU2qB,EAAGqK,gBAEnBrK,EAAGmC,YAAYnC,EAAGsK,WAAYj1B,GAC9B2qB,EAAGuK,cAAcvK,EAAGsK,WAAYtK,EAAGwK,mBAAoBxK,EAAGyK,SAC1DzK,EAAGuK,cAAcvK,EAAGsK,WAAYtK,EAAG0K,mBAAoB1K,EAAGyK,SAC1DzK,EAAGuK,cAAcvK,EAAGsK,WAAYtK,EAAG2K,eAAgB3K,EAAG4K,eACtD5K,EAAGuK,cAAcvK,EAAGsK,WAAYtK,EAAG6K,eAAgB7K,EAAG4K,eACtD,IAAMxzC,EAASvB,EAAO+wC,EAAQv3B,OAAOxZ,EAAM0B,EAAQD,GAAU,KAQ7D,OAPA0oC,EAAG8K,WACC9K,EAAGsK,WACH,EACA1D,EAAQ3C,eAAgB1sC,EAAOD,EAC/B,EACAsvC,EAAQlsC,OAAQksC,EAAQ/xB,YAAazd,GACzCF,KAAK6zC,aACE11B,CACT,EACA,YAAA0xB,cAAA,SACI1xB,EAAuB9d,EAAeD,EAAgBsvC,EAAsB/wC,GAC9E,IAAMmqC,EAAK9oC,KAAK8oC,GAChBA,EAAGmC,YAAYnC,EAAGsK,WAAYj1B,GAC9B,IAAMje,EAASwvC,EAAQv3B,OAAOxZ,EAAM0B,EAAQD,GAC5C0oC,EAAGgL,cACChL,EAAGsK,WACH,EACA,EACA,EACA/yC,EAAOD,EAAQsvC,EAAQlsC,OAAQksC,EAAQ/xB,YAAazd,GACxDF,KAAK6zC,YACP,EACA,YAAArJ,kBAAA,SAAkBrsB,EAAuB9d,EAAeD,GACtD,IAAM0oC,EAAK9oC,KAAK8oC,GAEhBA,EAAGmC,YAAYnC,EAAGsK,WAAYj1B,GAC9B2qB,EAAGiL,gBAAgBjL,EAAGkL,YAAah0C,KAAKgzC,aACxClK,EAAGmL,qBACCnL,EAAGkL,YAAalL,EAAGoL,kBAAmBpL,EAAGsK,WAAYj1B,EACrD,GACJne,KAAK6zC,aACL/K,EAAGqL,SAAS,EAAG,EAAG9zC,EAAOD,GACzB0oC,EAAGsL,QAAQ,EAAG,EAAG/zC,EAAOD,EAC1B,EACA,YAAAyhB,YAAA,SACI1D,EAAuB9d,EAAeD,EAAgBktC,EAAkBjtB,EACxEjc,GACF,IAAM0kC,EAAK9oC,KAAK8oC,GACX1kC,IACHA,EAAW,GAERpE,KAAK2yC,kBACR3yC,KAAKwqC,kBAAkBrsB,EAAS9d,EAAOD,GAEzC,IAAMsvC,EAAU1vC,KAAK2vC,WAAWtvB,EAAUjc,GACpClE,EAASwvC,EAAQrC,SAAShtC,EAAQD,GAUxC,OARA0oC,EAAGmC,YAAYnC,EAAGsK,WAAYj1B,GAC9B2qB,EAAGmL,qBACCnL,EAAGkL,YAAalL,EAAGoL,kBAAmBpL,EAAGsK,WAAYj1B,EACrD,GAEJ2qB,EAAGuL,WAAW,EAAG,EAAGh0C,EAAOD,EAAQ0oC,EAAGqE,KAAMuC,EAAQ/xB,YAAazd,GACjEF,KAAK6zC,aAEEnE,EAAQt3B,OAAOlY,EAAQotC,EAChC,EAEA,YAAAgH,mBAAA,WAEE,OAAO,CACT,EACA,YAAAC,iBAAA,WACE,IAAMzL,EAAK9oC,KAAK8oC,GACV0L,EAAI1L,EAAG2L,aAAaz0C,KAAK8oC,GAAG4L,gBAClC,MAAO,iBAAWF,EAAI1L,EAAG6L,SAC3B,EACA,YAAAC,kBAAA,WACE,OAAO50C,KAAK8oC,GAAG2L,aAAaz0C,KAAK8oC,GAAG+L,mBACtC,EACA,YAAAC,sBAAA,WACE,OAAO90C,KAAK8oC,GAAG2L,aAAaz0C,KAAK8oC,GAAGiM,oBACtC,EACA,YAAAlK,oBAAA,SAAoBJ,EAAwBE,GAC1C,IAAM7B,EAAK9oC,KAAK8oC,GAChBA,EAAGkM,oBAAoBvK,EAAgB,EAAG3B,EAAGx+B,OAAO,EAAO,GAAI,GAC/Dw+B,EAAGmM,wBAAwBxK,IACC,IAAxBE,IACF7B,EAAGkM,oBAAoBrK,EAAoB,EAAG7B,EAAGx+B,OAAO,EAAO,GAAI,IACnEw+B,EAAGmM,wBAAwBtK,IAE7B3qC,KAAK6zC,YACP,EACA,YAAAtJ,cAAA,SACIhB,EACAc,GAEF,IAAMvB,EAAK9oC,KAAK8oC,GACVhrB,EAAUgrB,EAAGyB,gBAMnB,OAHAzB,EAAGoM,aAAap3B,EAASyrB,GACzBT,EAAGoM,aAAap3B,EAASusB,GACzBvB,EAAGqM,YAAYr3B,GACRA,CACT,EACA,YAAAosB,cAAA,SAAcxvB,EAAsB06B,GAClC,IAAMtM,EAAK9oC,KAAK8oC,GACVuM,EAASvM,EAAGwM,aAAaF,GAC/B,IAAKC,EACH,MAAM,IAAI54C,MAAM,iDAA0C24C,IAK5D,GAFAtM,EAAGpuB,aAAa26B,EAAQ36B,GACxBouB,EAAGoB,cAAcmL,IACwC,IAArDvM,EAAGyM,mBAAmBF,EAAQvM,EAAG0M,gBACnC,MAAM,IAAI/4C,MAAM,oCAA6BqsC,EAAG2M,iBAAiBJ,GAAO,6BAE5E36B,IAEE,OAAO26B,CACT,EACA,YAAA7L,aAAA,SAAa6L,GACXr1C,KAAK8oC,GAAGU,aAAa6L,EACvB,EACA,YAAA9J,qBAAA,SAAqBptB,EAAuBusB,EAAkBY,GAC5D,IAAMxC,EAAK9oC,KAAK8oC,GAChBA,EAAG4M,cAAc5M,EAAG6L,SAAWjK,GAC/B1qC,KAAK6zC,aACL/K,EAAGmC,YAAYnC,EAAGsK,WAAYj1B,GAC9Bne,KAAK6zC,aACL/K,EAAGuC,UAAUC,EAAeZ,GAC5B1qC,KAAK6zC,YACP,EACA,YAAAvK,KAAA,WACEtpC,KAAK8oC,GAAG6M,WAAW31C,KAAK8oC,GAAG8M,eAAgB,EAAG,GAC9C51C,KAAK6zC,YACP,EACA,YAAAA,WAAA,WACE,GAAI,EAAA72C,IAAIotC,MAAO,CACb,IAAMtB,EAAK9oC,KAAK8oC,GACVO,EAAQP,EAAG+M,WACbC,EAAQ,GACZ,OAAQzM,GACN,KAAMP,EAAW,SACf,OACF,KAAMA,EAAe,aACnBgN,EAAQ,eACR,MACF,KAAMhN,EAAgB,cACpBgN,EAAQ,gBACR,MACF,KAAMhN,EAAoB,kBACxBgN,EAAQ,oBACR,MACF,KAAMhN,EAAgC,8BACpCgN,EAAQ,gCACR,MACF,KAAMhN,EAAgB,cACpBgN,EAAQ,gBACR,MACF,KAAMhN,EAAqB,mBACzBgN,EAAQ,qBACR,MACF,QACEA,EAAQ,+BAAwBzM,EAAM0M,SAAS,KAEnD,MAAM,IAAIt5C,MAAMq5C,E,CAEpB,EACA,YAAA1F,cAAA,SAAcjyB,GACZne,KAAK8oC,GAAGsH,cAAcjyB,EACxB,EACA,YAAAsrB,cAAA,SAAc3rB,GACZ9d,KAAK8oC,GAAGW,cAAc3rB,EACxB,EACA,YAAA6xB,WAAA,SAAWtvB,EAA4Bjc,EAAkBkc,GACvD,QADuD,IAAAA,IAAAA,EAAA,GAClC,IAAjBtgB,KAAK6P,QACP,OAAO,IAAImmC,EAAazI,sBAAsBvtC,KAAK8oC,GAA8B1kC,GAGnF,OAAQic,GACN,IAAK,QACH,OAAc,IAAVC,GAAsCtgB,KAAKi2C,yBACtC,IAAID,EAAavI,qBAAqBztC,KAAK8oC,GAAI1kC,GAE/C,IAAI4xC,EAAavI,qBACpBztC,KAAK8oC,GAAI1kC,EAAUpE,KAAKk2C,0BAA2BC,gBAE3D,IAAK,MACH,MAAM,IAAI15C,MAAM,mBAClB,IAAK,OACH,OAAO,IAAIu5C,EAAanI,iBAAiB7tC,KAAK8oC,GAAI1kC,GACpD,QACE,MAAM,IAAI3H,MAAM,4BAAqB4jB,IAE3C,EACA,YAAA6B,oBAAA,WAEE,IADA,IAAM4mB,EAAK9oC,KAAK8oC,GACPsN,EAAO,EAAGA,EAAOp2C,KAAKq2C,uBAAwBD,EACrDtN,EAAG4M,cAAc5M,EAAG6L,SAAWyB,GAC/BtN,EAAGmC,YAAYnC,EAAGsK,WAAY,KAElC,EACA,YAAAlmC,QAAA,WACE,IAAIlN,KAAKs2C,SAAT,CAGA,IAAMxN,EAAK9oC,KAAK8oC,GAChBA,EAAGiL,gBAAgBjL,EAAGkL,YAAa,MACnClL,EAAGyN,kBAAkBv2C,KAAKgzC,aAC1BlK,EAAG0N,WAAW1N,EAAG2N,aAAc,MAC/B3N,EAAG4N,aAAa12C,KAAK8yC,cACrBhK,EAAG0N,WAAW1N,EAAG6N,qBAAsB,MACvC7N,EAAG8N,SACH52C,KAAKs2C,UAAW,C,CAClB,EAEQ,YAAAO,sBAAR,WAEE,OAAO,IAAIl5C,aAAa,EACrB,EAAK,EAAM,EAAK,EAAK,GACrB,GAAM,EAAK,EAAK,EAAK,EACtB,EAAM,EAAM,EAAK,EAAK,EACtB,GAAO,EAAK,EAAK,EAAK,GAE1B,EACQ,YAAAo1C,mBAAR,WACE,IAAMjK,EAAK9oC,KAAK8oC,GACV5oC,EAAS4oC,EAAGgO,eAClB,IAAK52C,EACH,MAAM,IAAIzD,MAAM,gCAElB,IAAMs6C,EAAW/2C,KAAK62C,wBAItB,OAHA/N,EAAG0N,WAAW1N,EAAG2N,aAAcv2C,GAC/B4oC,EAAGkO,WAAWlO,EAAG2N,aAAcM,EAAUjO,EAAGmO,aAC5Cj3C,KAAK6zC,aACE3zC,CACT,EACQ,YAAA+yC,kBAAR,WACE,IAAMiE,EAAKl3C,KAAK8oC,GAAGmK,oBACnB,IAAKiE,EACH,MAAM,IAAIz6C,MAAM,mCAElB,OAAOy6C,CACT,EAEQ,YAAAhE,qBAAR,WACE,IAAMpK,EAAK9oC,KAAK8oC,GAMhB,GAJA9oC,KAAKm3C,sCAAwCn3C,KAAKo3C,2CAClDp3C,KAAKi2C,yBAA2Bj2C,KAAKq3C,qBACrCr3C,KAAKoiB,2BAA6BpiB,KAAKs3C,uBAElB,IAAjBt3C,KAAK6P,UAAkB7P,KAAKk2C,4BAA8Bl2C,KAAKi2C,yBACjE,MAAM,IAAIx5C,MAAM,0DAGlBuD,KAAKu3C,kBAAoBv3C,KAAKi2C,0BAA4Bj2C,KAAKw3C,oBAG/Dx3C,KAAK8rC,eAAiBhD,EAAG2L,aAAa3L,EAAG2O,kBACzCz3C,KAAKq2C,qBAAuBvN,EAAG2L,aAAa3L,EAAG4O,yBAM3C13C,KAAK6P,OAMX,EACQ,YAAAgjC,cAAR,WACuB,IAAjB7yC,KAAK6P,SACP7P,KAAK23C,0BAA4B33C,KAAK8oC,GAAG8O,aAAa,0BACtD53C,KAAK63C,kCAAoC73C,KAAK8oC,GAAG8O,aAAa,qCAE9D53C,KAAK83C,sBAAwB93C,KAAK8oC,GAAG8O,aAAa,qBAClD53C,KAAKk2C,0BAA4Bl2C,KAAK8oC,GAAG8O,aAAa,0BAE1D,EAEQ,YAAAR,yCAAR,WAGE,IAAMtO,EAAK9oC,KAAK8oC,GACV3qB,EAAU2qB,EAAGqK,gBACnBrK,EAAGmC,YAAYnC,EAAGsK,WAAYj1B,GAE9B,IAAM4uB,EAAkC,IAAjB/sC,KAAK6P,QAAiBi5B,EAAoCoE,QAAUpE,EAAGqE,KAC9FrE,EAAG8K,WAAW9K,EAAGsK,WAAY,EAAGrG,EAAgB,EAAG,EAAG,EAAGjE,EAAGqE,KAAMrE,EAAGx+B,MAAO,MAE5E,IAAMytC,EAAcjP,EAAGmK,oBACvBnK,EAAGiL,gBAAgBjL,EAAGkL,YAAa+D,GAEnCjP,EAAGmL,qBAAqBnL,EAAGkL,YAAalL,EAAGoL,kBAAmBpL,EAAGsK,WAAYj1B,EAAS,GAEtF,IAAM65B,EAAalP,EAAGmP,uBAAuBnP,EAAGkL,eAAiBlL,EAAGoP,qBAKpE,OAJApP,EAAGmC,YAAYnC,EAAGsK,WAAY,MAC9BtK,EAAGiL,gBAAgBjL,EAAGkL,YAAa,MACnClL,EAAGsH,cAAcjyB,GACjB2qB,EAAGyN,kBAAkBwB,GACdC,CACT,EAEQ,YAAAX,mBAAR,WACE,GAAqB,IAAjBr3C,KAAK6P,SACP,IAAK7P,KAAK23C,0BACR,OAAO,OAGT,IAAK33C,KAAK83C,sBACR,OAAO,EAGX,OAAO93C,KAAKm3C,qCACd,EAEQ,YAAAG,qBAAR,WACE,GAAqB,IAAjBt3C,KAAK6P,SACP,IAAK7P,KAAK23C,0BACR,OAAO,MAEJ,CACL,IAAK33C,KAAK83C,sBACR,OAAO,EAET,IAAK93C,KAAK8oC,GAAG8O,aAAa,4BACxB,OAAO,C,CAGX,OAAO53C,KAAKm3C,qCACd,EAKQ,YAAAK,kBAAR,WAIE,IAEIr5B,EACA45B,EACAxO,EACA4O,EACAr6B,EANEgrB,EAAK9oC,KAAK8oC,GAQhB,IACE3qB,EAAU2qB,EAAGqK,gBACb4E,EAAcjP,EAAGmK,oBACjBnK,EAAGmC,YAAYnC,EAAGsK,WAAYj1B,GAG9B,IAAM4uB,EAAkC,IAAjB/sC,KAAK6P,QAAiBi5B,EAAoCoE,QAAUpE,EAAGqE,KAS9F,OARArE,EAAG8K,WAAW9K,EAAGsK,WAAY,EAAGrG,EAAgB,EAAG,EAAG,EAAGjE,EAAGqE,KAAMrE,EAAGx+B,MAAO,MAE5Ew+B,EAAGiL,gBAAgBjL,EAAGkL,YAAa+D,GACnCjP,EAAGmL,qBAAqBnL,EAAGkL,YAAalL,EAAGoL,kBAAmBpL,EAAGsK,WAAYj1B,EAAS,GAEtF2qB,EAAGuJ,OAAOvJ,EAAGmJ,UAEb1I,EAAeT,EAAGwM,aAAaxM,EAAGqB,kBAIlCrB,EAAGpuB,aAAa6uB,EAAc,iBAC9BT,EAAGoB,cAAcX,MAEjB4O,EAAiBrP,EAAGwM,aAAaxM,EAAGwB,oBAIpCxB,EAAGpuB,aAAay9B,EAAgB,8DAChCrP,EAAGoB,cAAciO,MAEjBr6B,EAAUgrB,EAAGyB,mBAIbzB,EAAGoM,aAAap3B,EAASyrB,GACzBT,EAAGoM,aAAap3B,EAASq6B,GACzBrP,EAAGqM,YAAYr3B,GACfgrB,EAAGC,WAAWjrB,GAEdgrB,EAAG6M,WAAW7M,EAAGsP,OAAQ,EAAG,GACrBtP,EAAG+M,aAAe/M,EAAGuP,W,SAG5BvP,EAAGgJ,QAAQhJ,EAAGmJ,OAEVn0B,GACFgrB,EAAGW,cAAc3rB,GAEfyrB,GACFT,EAAGU,aAAaD,GAEd4O,GACFrP,EAAGU,aAAa2O,GAEdJ,IACFjP,EAAGiL,gBAAgBjL,EAAGkL,YAAa,MACnClL,EAAGyN,kBAAkBwB,IAEnB55B,IACF2qB,EAAGmC,YAAYnC,EAAGsK,WAAY,MAC9BtK,EAAGsH,cAAcjyB,G,CAGvB,EAEA,YAAAm6B,WAAA,WACE,GAAqB,IAAjBt4C,KAAK6P,SAAiB7P,KAAK63C,kCAAmC,CAChE,IAAMU,EAAMv4C,KAAK8oC,GACX0P,EAAMx4C,KAAK63C,kCAEXY,EAAQF,EAAIG,cAElB,OADAH,EAAII,WAAWH,EAAII,iBAAkBH,GAC9BA,C,CAGP,MAAM,IAAIh8C,MAAM,4CAEpB,EAEA,YAAAo8C,SAAA,WACE,GAAqB,IAAjB74C,KAAK6P,UAAiB7P,KAAK63C,kCAO7B,MAAM,IAAIp7C,MAAM,4CANhB,IAAM87C,EAAMv4C,KAAK8oC,GACX0P,EAAMx4C,KAAK63C,kCACjBU,EAAIO,SAASN,EAAII,iBAMrB,EAEA,YAAAG,uBAAA,SAAuBN,GACrB,IAAIO,EAAmBC,EACvB,GAAqB,IAAjBj5C,KAAK6P,UAAiB7P,KAAK63C,kCAQ7B,MAAM,IAAIp7C,MAAM,4CAPhB,IAAM87C,EAAMv4C,KAAK8oC,GACX0P,EAAMx4C,KAAK63C,kCASnB,OAPEmB,EAAYT,EAAIW,kBAAkBT,EAAOF,EAAIY,wBAC7CF,EAAWV,EAAI9D,aAAa+D,EAAIY,kBAM3BJ,IAAcC,CACvB,EAEA,YAAAI,eAAA,SAAeZ,GACb,IAAIa,EACJ,GAAqB,IAAjBt5C,KAAK6P,QAMP,MAAM,IAAIpT,MAAM,4CALhB,IAAM87C,EAAMv4C,KAAK8oC,GAQnB,OAPEwQ,EAAcf,EAAIW,kBAAkBT,EAAOF,EAAIgB,cAC/ChB,EAAIiB,YAAYf,GAMXa,EAAc,GACvB,EAEM,YAAAG,uBAAN,SAA6BhB,G,qGAC3B,UAAM,IAAAiB,cAAY,WAAM,SAAKX,uBAAuBN,EAA5B,K,OACxB,OADA,SACO,CAAP,EAAOz4C,KAAKq5C,eAAeZ,I,QAGhB,YAAAxI,sBAAb,W,yEAEE,OADM0J,EAAe35C,KAAK45C,YAAY55C,KAAK8oC,IACpC,CAAP,EAAO9oC,KAAK65C,UAAUF,G,QAGhB,YAAAC,YAAR,SAAoB9Q,GAClB,IACMyP,EAAMzP,EACN2P,EAAQF,EAAIuB,UAAUvB,EAAIwB,2BAA4B,GAU5D,OATAjR,EAAGkR,QASI,CAACvB,MAAK,EAAEwB,cARD,OAAVxB,EACc,WAAM,UAEN,WACd,IAAMyB,EAAS3B,EAAI4B,eAAe1B,EAAO,EAAG,GAC5C,OAAOyB,IAAW3B,EAAI6B,kBAAoBF,IAAW3B,EAAI8B,mBAC3D,EAGJ,EAEM,YAAAR,UAAN,SAAgBF,G,8EACd,MAAO,CAAP,EAAO,IAAI72C,SAAc,SAAAC,GAClB,EAAKu3C,eAAc,WAAM,OAAAX,EAAaM,eAAb,IAA8B,WAAM,OAAAl3C,GAAA,GACpE,I,QAKF,YAAAw3C,UAAA,WAGE,IADA,IAAM/kC,EAAQk9B,EAAqB1yC,KAAK4yC,YAAY3sC,KAAI,SAAAgnB,GAAK,OAAAA,EAAEutB,QAAF,KACpD99C,EAAI,EAAGA,GAAK8Y,IAAS9Y,GAE5B+9C,EADoBz6C,KAAK4yC,YAAYl2C,GAAE,aAGzCsD,KAAK4yC,YAAc5yC,KAAK4yC,YAAYh+B,MAAMY,EAAQ,EACpD,EAEc,YAAA8kC,cAAd,SAA4BE,EAAyBC,G,qGAEnD,OADAz6C,KAAK4yC,YAAY91C,KAAK,CAAC09C,SAAQ,EAAEC,UAAS,IACtCz6C,KAAK4yC,YAAY/1C,OAAS,EAE5B,IAGF,IAAM,IAAA68C,cAAY,WAGhB,OAFA,EAAKa,YAE8B,IAA5B,EAAK3H,YAAY/1C,MAC1B,K,cAJA,S,YAMJ,EAnkBA,GAAa,EAAA80C,aAAAA,C,00EC3Bb,cAIA,EACE,SAAmBjF,EAAqBt1B,GAArB,KAAAs1B,GAAAA,EAAqB,KAAAt1B,KAAAA,CAAmB,EAG7D,aACE,WAAoBi1B,EAAc1M,EAAyB6I,GAAvC,KAAA6D,MAAAA,EAAuC,KAAA7D,SAAAA,EACzDxoC,KAAKiN,WAAW0yB,EAClB,CA+IF,OA7IE,YAAA1yB,WAAA,SAAW0yB,GAAX,WACE3/B,KAAKwoC,SAASK,MAAM,UAAW,4BAA4B,WACzD,IAAMjxB,EAAa,EAAKy0B,MAAMqO,WAC9B,GAAI9iC,EAAW/a,SAAW8iC,EAAI9iC,OAC5B,MAAM,IAAIJ,MAAM,2CAGlB,EAAKk+C,KAAOhb,EAAI15B,KAAI,SAACymC,EAAIhwC,GAAM,WAAIk+C,EAASlO,EAAI90B,EAAWlb,GAA5B,IAC/B,EAAKm+C,QAGL,EAAKC,SAAW,GAChB,EAAKH,KAAKhpC,SAAQ,SAAC+6B,EAAIhwC,G,QACjBq+C,GAAW,E,IACf,IAAoB,QAAArO,EAAGt1B,KAAK2G,QAAM,8BAAE,CAA/B,IAAM4C,EAAK,QACd,IACK,EAAKq6B,QAAQr6B,KACsC,IAAjD,EAAK0rB,MAAM4O,kBAAkBt+C,QAAQgkB,GAC1C,CACAo6B,GAAW,EACX,K,oGAGAA,GACF,EAAKD,SAASh+C,KAAKJ,EAEvB,GACF,GACF,EAEA,YAAAm+C,MAAA,WACE76C,KAAKg7C,QAAUh7C,KAAKqsC,MAAME,YAAYtmC,KAAI,SAAAvJ,GAAK,OAAAA,EAAEqiB,MAAF,GACjD,EAEM,YAAAm8B,QAAN,SAAcC,EAAgCC,G,8EAC5C,MAAO,CAAP,EAAOp7C,KAAKwoC,SAASK,MAAM,UAAW,yBAAyB,gD,qFAS7D,GAPA7oC,KAAK66C,QAGC5xB,EAAmBkyB,EAAehP,yBAGlCkP,EAAcr7C,KAAKqsC,MAAM4O,kBAC3BG,EAAYv+C,SAAWw+C,EAAYx+C,OACrC,MAAM,IAAIJ,MAAM,yFACZ2+C,EAAYv+C,OAAM,sBAAcw+C,EAAYx+C,SAGlDu+C,EAAYzpC,SAAQ,SAACgP,EAAOjkB,GAC1B,IAAM8Y,EAAQ6lC,EAAY3+C,GAC1B,EAAKs+C,QAAQxlC,GAASmL,CACxB,IAGM26B,EAAqBt7C,KAAK86C,SAASlmC,MAAM,GAGzC2mC,EAAcv7C,KAAKqsC,MAAME,YACzB30B,EAAa5X,KAAKqsC,MAAMqO,WAE1Bc,EAAO,E,+EAOT,GALMC,EAAcH,EAASE,KACvBE,EAAS,EAAKf,KAAKc,GAGnBE,EAAYD,EAAOtkC,KAAK2G,OAAO9X,KAAI,SAAAvJ,GAAK,SAAKs+C,QAAQt+C,EAAb,KACR,IAAlCi/C,EAAUh/C,aAAQH,GACpB,MAAM,IAAIC,MAAM,yCAAkCi/C,EAAOtkC,OAUxC,OANbwkC,EAAeD,EACrB,EAAA9tC,OAAOE,QACH,WACA,oBAAa2tC,EAAOtkC,KAAKnb,KAAI,aACzB2/C,EAAa31C,KAAI,SAAC+F,EAAGtP,GAAM,iBAAIg/C,EAAOtkC,KAAK2G,OAAOrhB,GAAE,cAAMsP,EAAEtN,KAAI,YAAIsN,EAAEpN,KAAKgI,KAAK,KAAI,IAAzD,IAA8DA,KAAK,MAAK,MAExF,GAAM,EAAK4hC,SAASK,MACnC,OAAQ6S,EAAOtkC,KAAKnb,MAAM,2EAAY,SAAAy/C,EAAOhP,GAAGE,KAAK3jB,EAAkB2yB,EAAcF,EAAOhP,GAAGzpC,S,kBAGnG,IAJM44C,EAAa,UAIJh/C,SAAW6+C,EAAOtkC,KAAKqtB,QAAQ5nC,OAC5C,MAAM,IAAIJ,MAAM,uD,OAIlBo/C,EAAWlqC,SAAQ,SAAC5B,EAAQrT,GAC1B,IAAMkH,EAAI83C,EAAOtkC,KAAKqtB,QAAQ/nC,GAC9B,GAAI,EAAKs+C,QAAQp3C,GACf,MAAM,IAAInH,MAAM,kBAAWmH,EAAC,mCAA2B83C,EAAOtkC,KAAKnb,OAErE,EAAK++C,QAAQp3C,GAAKmM,CACpB,IAGM+rC,EAAkB,IAAIrkC,IAC5BokC,EAAWlqC,SAAQ,SAAC5B,EAAQrT,G,YACpBkH,EAAI83C,EAAOtkC,KAAKqtB,QAAQ/nC,G,IAC9B,IAAyC,kBAAA6+C,EAAY33C,GAAG6nB,KAAE,8BAAE,CAAvD,IAAMswB,EAA0B,QAC7BC,EAAwBpkC,EAAWmkC,GACrChB,GAAW,E,IACf,IAAgB,kBAAAiB,EAAsBj+B,SAAM,8BAAE,CAAzC,IAAM8hB,EAAC,QACV,IAAK,EAAKmb,QAAQnb,GAAI,CACpBkb,GAAW,EACX,K,oGAGAA,GACFe,EAAgB/jC,IAAIgkC,E,mGAG1B,IACAT,EAASx+C,KAAI,MAAbw+C,EAAQ,OAASQ,IAAe,I,wCApD3BN,EAAOF,EAASz+C,O,QAAM,M,oCAuDvBkT,EAAmB,GAChBrT,EAAI,E,sBAAGA,EAAIsD,KAAKqsC,MAAM4P,mBAAmBp/C,QAAM,YAGtD,GAFMq/C,EAAcl8C,KAAKqsC,MAAM4P,mBAAmBv/C,QAE7BF,KADf2/C,EAAen8C,KAAKg7C,QAAQkB,IAEhC,MAAM,IAAIz/C,MAAM,2BAAoBy/C,EAAW,0B,OAE7B,IAAhBA,EAAA,MACF,GAAMC,EAAaC,W,cAAnB,S,aAGAD,EAAax9C,K,iBAEfoR,EAAOjT,KAAKq/C,G,wBAZ4Cz/C,I,aAgB1D,OAFA,EAAAmR,OAAOE,QAAQ,WAAY,iCAC3Bkb,EAAiB/b,UACV,CAAP,EAAO6C,G,kBAOb,EAlJA,GAAa,EAAAssC,cAAAA,C,yaCVb,cAEA,UACA,UACA,UACA,UAEOvzC,EAAS,EAAAC,YAAYC,aAAaC,IAmE5B,EAAAqzC,MAAQ,CAInBv9C,KAAM,SAACw9C,EAA2CC,GAC9C,WAAIC,EAAUF,EAAYC,EAA1B,GAGN,iBACE,WAAYE,GACV18C,KAAK28C,WAAQngD,EACbwD,KAAK48C,IAAM,GACX58C,KAAK+e,YAASviB,EACdwD,KAAKtB,UAAOlC,EAERkgD,IACF18C,KAAKtB,KAAO,EAAAgtB,UAAUmxB,yBAAyBH,EAAUh+C,KAAMo+C,YAEnE,CAYF,OATE,sBAAI,mBAAI,C,IAAR,WACE,OAAO98C,KAAK28C,KACd,E,gCAEA,sBAAI,iBAAE,C,IAAN,WACE,OAAO38C,KAAK48C,GACd,E,gCAGF,EAtBA,GAwBA,EACE,SAAYG,EAAyC9gD,GAC/C8gD,aAAsB,EAAA1zC,KAAK2zC,WAC7Bh9C,KAAK/D,KAAO8gD,EAAW9gD,KACvB+D,KAAKi9C,OAASF,EAAWE,OACzBj9C,KAAKkJ,WAAa,IAAI,EAAAK,UAAUwzC,EAAWv0C,YAClCu0C,aAAsBj0C,EAAOo0C,OACtCl9C,KAAK/D,KAAOA,QAAAA,EAAQ8gD,EAAW9gD,OAC/B+D,KAAKi9C,OAASF,EAAWE,SACzBj9C,KAAKkJ,WAAa,IAAI,EAAAK,UAAU,EAAAmiB,UAAUyxB,8BAA8BJ,KAG1E/8C,KAAK+d,OAAS,GACd/d,KAAKykC,QAAU,GACfzkC,KAAKo9C,aAAc,CACrB,EAUF,aAWE,WAAY/Q,EAAsCgR,GAChD,IAAKhR,EACH,MAAM,IAAI/vC,UAAU,kBAItB0D,KAAKs9C,WAAWjR,GAGhBrsC,KAAKu9C,eAAeF,GAGpBr9C,KAAKw9C,gBACP,CAwoBF,OAtoBE,YAAAvC,gBAAA,WACE,OAAOj7C,KAAKy9C,gBACd,EAEA,YAAAC,cAAA,WACE,OAAO19C,KAAK29C,cACd,EAEA,YAAA1B,iBAAA,WACE,OAAOj8C,KAAK49C,iBACd,EAEA,YAAAC,eAAA,WACE,OAAO79C,KAAK89C,eACd,EAEA,YAAAvR,UAAA,WACE,OAAOvsC,KAAK+9C,QACd,EAEA,YAAArD,SAAA,WACE,OAAO16C,KAAKg+C,MACd,EAEQ,YAAAV,WAAR,SAAmBjR,GAEjB,GAAIA,aAAiB,EAAAhjC,KAAK40C,WACxBj+C,KAAKk+C,yBAAyB7R,OACzB,MAAIA,aAAiBvjC,EAAOwzC,OAGjC,MAAM,IAAIhgD,UAAU,gCAFpB0D,KAAKm+C,wBAAwB9R,E,CAIjC,EACQ,YAAA6R,yBAAR,SAAiC7R,G,4BACzB+R,EAAc,IAAI1gD,IACxBsC,KAAK+9C,SAAW,GAEhB/9C,KAAKy9C,iBAAmB,GACxBz9C,KAAK29C,eAAiB,GAEtB39C,KAAK49C,kBAAoB,GACzB59C,KAAK89C,gBAAkB,GAEvB99C,KAAKg+C,OAAS,GAEd,IAAMK,EAAe,IAAI3gD,IAGzB,IAAK2uC,EAAM1rB,MACT,MAAM,IAAIlkB,MAAM,uCAElB,IAAM6hD,EAAkB,G,IACxB,IAAgB,QAAAjS,EAAM1rB,OAAK,8BAAE,CAAxB,IAAMjkB,EAAC,QACV,GAAI0hD,EAAYtmC,IAAIpb,EAAET,MACpB,MAAM,IAAIQ,MAAM,iCAA0BC,EAAET,OAE9C,IAAMsiD,EAAev+C,KAAK+9C,SAASjhD,KAAK,IAAI0hD,EAAM9hD,IAAM,EACxD0hD,EAAYl/C,IAAIxC,EAAET,KAAOsiD,GACzBD,EAAgBxhD,KAAKJ,EAAET,K,mGAIzB,IAAKowC,EAAMmQ,YACT,MAAM,IAAI//C,MAAM,6C,IAElB,IAAgB,QAAA4vC,EAAMmQ,aAAW,8BAAE,CAAxB9/C,EAAC,QAAP,IACC8Y,EAAQ4oC,EAAY7+C,IAAI7C,EAAET,MAC9B,QAAcO,IAAVgZ,EAAqB,CACvB,IAAMnY,EAAQ,IAAImhD,EAClBnhD,EAAMqB,KAAO,CACX6R,MAAO,CAAC3R,KAAM,EAAA8sB,UAAU+yB,oBAAoB/hD,EAAEkC,OAC9Ck+C,WAAY,EAAApxB,UAAUC,wBAAwBjvB,EAAE2jB,WAElD7K,EAAQxV,KAAK+9C,SAASjhD,KAAKO,GAAS,EACpC+gD,EAAYl/C,IAAIxC,EAAET,KAAOuZ,E,CAE3BxV,KAAK+9C,SAASvoC,GAAOmnC,OAAS,EAC9B38C,KAAK+9C,SAASvoC,GAAOuJ,OAAS,EAAA1gB,OAAOmN,UAAU9O,E,mGAIjD,IAASA,EAAI,EAAGA,EAAIsD,KAAK+9C,SAASlhD,OAAQH,IACnCsD,KAAK+9C,SAASrhD,GAAGqiB,SACpB/e,KAAKy9C,iBAAiB3gD,KAAKJ,GAC3BsD,KAAK29C,eAAe7gD,KAAKwhD,EAAgB5hD,KAK7C,IAAK2vC,EAAMt8B,OACT,MAAM,IAAItT,MAAM,wC,IAElB,IAAgB,QAAA4vC,EAAMt8B,QAAM,8BAAE,CAC5B,GADSrT,EAAC,QACN0hD,EAAYtmC,IAAIpb,EAAET,MACpB,MAAM,IAAIQ,MAAM,kCAA2BC,EAAET,OAEzCsiD,EAAev+C,KAAK+9C,SAASjhD,KAAK,IAAI0hD,EAAM9hD,IAAM,EACxD0hD,EAAYl/C,IAAIxC,EAAET,KAAOsiD,GACzBv+C,KAAK49C,kBAAkB9gD,KAAKyhD,GAC5Bv+C,KAAK89C,gBAAgBhhD,KAAKJ,EAAET,K,mGAI9B,IAAKowC,EAAMj1B,KACT,MAAM,IAAI3a,MAAM,sC,IAElB,IAAwB,QAAA4vC,EAAMj1B,MAAI,8BAAE,CAClC,KADSsnC,EAAS,SACHziD,KAEb,IAAK,IAAI0iD,EAAO,GAAIA,IAAQ,CAC1B,IAAM,EAAO,kBAAWD,EAAUzB,OAAM,YAAI0B,GAC5C,IAAKN,EAAavmC,IAAI,GAAO,CAC3B4mC,EAAUziD,KAAO,EACjB,K,EAKN,GAAIoiD,EAAavmC,IAAI4mC,EAAUziD,MAC7B,MAAM,IAAIQ,MAAM,gCAAyBiiD,EAAUziD,OAE/CsiD,EAAev+C,KAAKg+C,OAAOlhD,KAAK,IAAIogD,EAAKwB,IAAc,EAC7DL,EAAan/C,IAAIw/C,EAAUziD,KAAMsiD,E,mGAInC,IAAS7hD,EAAI,EAAGA,EAAIsD,KAAKg+C,OAAOnhD,OAAQH,IAAK,CAC3C,IAAM0a,EAAOpX,KAAKg+C,OAAOthD,GAEzB,KADMgiD,EAAYrS,EAAMj1B,KAAK1a,IACdqT,OACb,MAAM,IAAItT,MAAM,mCAA4BiiD,EAAUziD,O,IAExD,IAAqB,kBAAAyiD,EAAU3uC,SAAM,8BAAE,CAAlC,IAAMA,EAAM,QAQf,QANyB,KADrB6uC,EAAYR,EAAY7+C,IAAIwQ,MAE9B6uC,EAAY5+C,KAAK+9C,SAASjhD,KAAK,IAAI0hD,GAAW,EAC9CJ,EAAYl/C,IAAI6Q,EAAQ6uC,IAE1BxnC,EAAKqtB,QAAQ3nC,KAAK8hD,QAEqBpiD,IAAnCwD,KAAK+9C,SAASa,GAAWjC,MAC3B,MAAM,IAAIlgD,MAAM,mDAA4CmiD,IAM9D,GAJA5+C,KAAK+9C,SAASa,GAAWjC,MAAQjgD,EAIR,aAArBgiD,EAAUzB,OAAuB,CACnC,IAAKyB,EAAUl2C,WAA4C,IAA/Bk2C,EAAUl2C,UAAU3L,SAAiB6hD,EAAUl2C,UAAU,GAAGwD,EACtF,MAAM,IAAIvP,MAAM,uFAElB,IAAKiiD,EAAU3uC,QAAsC,IAA5B2uC,EAAU3uC,OAAOlT,OACxC,MAAM,IAAIJ,MAAM,4EAElB2a,EAAKqtB,QAAQmL,MACbx4B,EAAKgmC,aAAc,EAEnBp9C,KAAK+9C,SAASa,GAAWjC,OAAS,EAClC38C,KAAK+9C,SAASa,GAAW7/B,OAAS,EAAA1gB,OAAOmN,UAAUkzC,EAAUl2C,UAAU,GAAGwD,E,qGAMhF,IAAStP,EAAI,EAAGA,EAAIsD,KAAKg+C,OAAOnhD,OAAQH,IAAK,CAC3C,IACMgiD,EAEN,GAHMtnC,EAAOpX,KAAKg+C,OAAOthD,KACnBgiD,EAAYrS,EAAMj1B,KAAK1a,IAEdikB,MACb,MAAM,IAAIlkB,MAAM,kCAA2BiiD,EAAUziD,O,IAEvD,IAAoB,kBAAAyiD,EAAU/9B,QAAK,8BAAE,CAAhC,IACGi+B,EADGj+B,EAAK,QAEd,QAAyB,KADnBi+B,EAAYR,EAAY7+C,IAAIohB,IACI,CAEpC,GAAc,KAAVA,GAA2C,IAA3B+9B,EAAU/9B,MAAM9jB,QAAqC,WAArB6hD,EAAUzB,OAC5D,SAEF,MAAM,IAAIxgD,MAAM,8BAAuBkkB,EAAK,uBAAe+9B,EAAUziD,M,CAEvEmb,EAAK2G,OAAOjhB,KAAK8hD,GAEjB5+C,KAAK+9C,SAASa,GAAWhC,IAAI9/C,KAAKJ,E,oGAItC,OAAO,CACT,EAEQ,YAAAyhD,wBAAR,SAAgC9R,G,UACxB+R,EAAc,IAAI1gD,IACxBsC,KAAK+9C,SAAW,GAEhB/9C,KAAKy9C,iBAAmB,GACxBz9C,KAAK29C,eAAiB,GAEtB39C,KAAK49C,kBAAoB,GACzB59C,KAAK89C,gBAAkB,GAEvB99C,KAAKg+C,OAAS,GAMd,IAJA,IAAMK,EAAe,IAAI3gD,IAGnB4gD,EAAkB,GACf5hD,EAAI,EAAGA,EAAI2vC,EAAMwS,eAAgBniD,IAAK,CAC7C,IAAMoiD,EAAYzS,EAAMtuB,OAAOrhB,GAC/B,GAAI0hD,EAAYtmC,IAAIgnC,GAClB,MAAM,IAAIriD,MAAM,iCAA0BqiD,IAG5C,IAAK,IAAIl7C,EAAI,EAAGA,EAAIyoC,EAAM0S,iBAAkBn7C,IAC1C,IAAqB,QAAjB,EAAAyoC,EAAM2S,SAASp7C,UAAE,eAAE3H,UAAW6iD,EAAW,CAC3C,IAAMzhD,EAAQ,IAAImhD,EAElB,IAD2C,QAAzB,EAAiB,QAAjB,EAAAnS,EAAM2S,SAASp7C,UAAE,eAAElF,cAAM,eAAEugD,eAC3Bn2C,EAAOo2C,cAAcC,YACrC,MAAM,IAAI1iD,MAAM,0CAMlB,IAJA,IAAMigD,EAAYrQ,EAAM2S,SAASp7C,GAAIlF,OAAQrB,MAAM,IAAIyL,EAAOs2C,oBACxD1gD,EAAO,EAAAgtB,UAAUC,wBAAwB+wB,EAAU2C,YACnD9uC,EAAQmsC,EAAUnsC,QAClB3R,EAAO,GACJihC,EAAI,EAAGA,EAAItvB,EAAM+uC,YAAczf,IACtCjhC,EAAK9B,KAAK,EAAAoO,SAASE,aAAamF,EAAM5Q,IAAIkgC,GAAIxiC,QAASkiD,aAEzDliD,EAAMqB,KAAO,CAAC6R,MAAO,CAAC3R,KAAI,GAAGk+C,WAAYp+C,GACzC,IAAM6/C,EAAev+C,KAAK+9C,SAASjhD,KAAKO,GAAS,EACjD+gD,EAAYl/C,IAAI4/C,EAAWP,GAC3BD,EAAgBxhD,KAAKgiD,E,EAK3B,IAASpiD,EAAI,EAAGA,EAAI2vC,EAAMmT,qBAAsB9iD,IAAK,CACnD,IAAM8/C,EAAcnQ,EAAMC,aAAa5vC,GACnC8Y,EAAQ4oC,EAAY7+C,IAAIi9C,EAAYvgD,aAC1BO,IAAVgZ,IACInY,EAAQ,IAAImhD,EACZ5/C,EAAO,EAAA8sB,UAAU+zB,wBAAwBjD,GACzC99C,EAAO,EAAAgtB,UAAUC,wBAAwB6wB,EAAYn8B,YAC3DhjB,EAAMqB,KAAO,CAAC6R,MAAO,CAAC3R,KAAI,GAAGk+C,WAAYp+C,GACzC8W,EAAQxV,KAAK+9C,SAASjhD,KAAKO,GAAS,EACpC+gD,EAAYl/C,IAAIs9C,EAAYvgD,OAASuZ,IAEvCxV,KAAK+9C,SAASvoC,GAAOmnC,OAAS,EAC9B38C,KAAK+9C,SAASvoC,GAAOuJ,OAAS,EAAA1gB,OAAOoN,cAAc+wC,E,CAIrD,IAAS9/C,EAAI,EAAGA,EAAIsD,KAAK+9C,SAASlhD,OAAQH,IACnCsD,KAAK+9C,SAASrhD,GAAGqiB,SACpB/e,KAAKy9C,iBAAiB3gD,KAAKJ,GAC3BsD,KAAK29C,eAAe7gD,KAAKwhD,EAAgB5hD,KAK7C,IAASA,EAAI,EAAGA,EAAI2vC,EAAMqT,gBAAiBhjD,IAAK,CAC9C,IAAMijD,EAAatT,EAAM5H,QAAQ/nC,GACjC,GAAI0hD,EAAYtmC,IAAI6nC,GAClB,MAAM,IAAIljD,MAAM,kCAA2BkjD,IAEvCpB,EAAev+C,KAAK+9C,SAASjhD,KAAK,IAAI0hD,GAAW,EACvDJ,EAAYl/C,IAAIygD,EAAYpB,GAC5Bv+C,KAAK49C,kBAAkB9gD,KAAKyhD,GAC5Bv+C,KAAK89C,gBAAgBhhD,KAAK6iD,E,CAI5B,IAAKtT,EAAM90B,MACT,MAAM,IAAI9a,MAAM,sCAElB,IAASC,EAAI,EAAGA,EAAI2vC,EAAMuT,cAAeljD,IAAK,CAC5C,IACI,GADEgiD,EAAYrS,EAAM90B,MAAM7a,IACRT,OACtB,IAAK,EAEH,IAAK,IAAI0iD,EAAO,EACd,EAAO,kBAAWD,EAAWzB,SAAQ,YAAI0B,GACpCN,EAAavmC,IAAI,GAFJ6mC,KAStB,GAAIN,EAAavmC,IAAI,GACnB,MAAM,IAAIrb,MAAM,gCAAyB,IAErC8hD,EAAev+C,KAAKg+C,OAAOlhD,KAAK,IAAIogD,EAAKwB,EAAY,IAAS,EACpEL,EAAan/C,IAAI,EAAMq/C,E,CAIzB,IAAS7hD,EAAI,EAAGA,EAAIsD,KAAKg+C,OAAOnhD,OAAQH,IAAK,CAC3C,IAAM0a,EAAOpX,KAAKg+C,OAAOthD,GAEzB,GAAiB,OADXgiD,EAAYrS,EAAM90B,MAAM7a,IAE5B,MAAM,IAAID,MAAM,kCAA2BC,IAE7C,GAAmC,KAA/BgiD,aAAS,EAATA,EAAWgB,iBACb,MAAM,IAAIjjD,MAAM,mCAA4BiiD,EAAUziD,OAExD,IAAS2H,EAAI,EAAGA,GAAI86C,aAAS,EAATA,EAAWgB,iBAAiB97C,IAAK,CACnD,IAAMmM,EAAS2uC,aAAS,EAATA,EAAWja,QAAQ7gC,GAQlC,QANyB,KADrBg7C,EAAYR,EAAY7+C,IAAIwQ,MAE9B6uC,EAAY5+C,KAAK+9C,SAASjhD,KAAK,IAAI0hD,GAAW,EAC9CJ,EAAYl/C,IAAI6Q,EAAQ6uC,IAE1BxnC,EAAKqtB,QAAQ3nC,KAAK8hD,QAEqBpiD,IAAnCwD,KAAK+9C,SAASa,GAAWjC,MAC3B,MAAM,IAAIlgD,MAAM,mDAA4CmiD,IAM9D,GAJA5+C,KAAK+9C,SAASa,GAAWjC,MAAQjgD,EAIN,aAAvBgiD,EAAUzB,SAAyB,CACrC,GAAqC,IAAjCyB,EAAUmB,qBAA6BnB,EAAUx1C,WAAW,GAAI8C,IAClE,MAAM,IAAIvP,MAAM,uFAElB,GAAkC,IAA9BiiD,EAAUgB,gBACZ,MAAM,IAAIjjD,MAAM,4EAElB2a,EAAKqtB,QAAQmL,MACbx4B,EAAKgmC,aAAc,EAEnBp9C,KAAK+9C,SAASa,GAAWjC,OAAS,EAClC38C,KAAK+9C,SAASa,GAAW7/B,OAAS,EAAA1gB,OAAOoN,cAAcizC,EAAUx1C,WAAW,GAAI8C,I,GAMtF,IAAStP,EAAI,EAAGA,EAAIsD,KAAKg+C,OAAOnhD,OAAQH,IAAK,CAC3C,IACMgiD,EAEN,GAHMtnC,EAAOpX,KAAKg+C,OAAOthD,GAGQ,KAF3BgiD,EAAYrS,EAAM90B,MAAM7a,IAEhBmiD,eACZ,MAAM,IAAIpiD,MAAM,kCAA2BiiD,EAAUziD,OAEvD,IAAS2H,EAAI,EAAGA,EAAI86C,EAAUG,eAAiBj7C,IAAK,CAClD,IACMg7C,EADAj+B,EAAQ+9B,EAAU3gC,OAAOna,GAE/B,QAAyB,KADnBg7C,EAAYR,EAAY7+C,IAAIohB,IAEhC,MAAM,IAAIlkB,MAAM,8BAAuBkkB,EAAK,uBAAe+9B,EAAWziD,SAExEmb,EAAK2G,OAAOjhB,KAAK8hD,GAEjB5+C,KAAK+9C,SAASa,GAAWhC,IAAI9/C,KAAKJ,E,EAGxC,EAEQ,YAAA8gD,eAAR,sBAEQsC,EAAwB,IAAIroC,IAClCzX,KAAKy9C,iBAAiB9rC,SAAQ,SAAAjV,GACf,EAAKqhD,SAASrhD,GACtBkgD,IAAIjrC,SAAQ,SAAA/N,GACfk8C,EAAS/nC,IAAInU,EACf,GACF,IAMA,IAHA,IAAMm8C,EAAa3gD,MAAML,KAAK+gD,GACxBE,EAAa,IAAI5gD,MAAcY,KAAKg+C,OAAOnhD,QAAQkvB,KAAK,S,aAG5D,IAAMk0B,EAAYF,EAAWnQ,MAEC,SAA1BoQ,EAAWC,GACbD,EAAWC,GAAa,SAGxBF,EAAWjjD,KAAKmjD,GAChBD,EAAWC,GAAa,OAExB,EAAKjC,OAAOiC,GAAWxb,QAAQ9yB,SAAQ,SAACuuC,GACtC,IAAMvhD,EAAO,EAAKo/C,SAASmC,GAC3B,QAA2B,IAAhBvhD,EAAKogB,OACd,MAAM,IAAItiB,MAAM,0CAElB,GAAIkC,EAAKg+C,QAAUsD,EACjB,MAAM,IAAIxjD,MAAM,iFAElBkC,EAAKi+C,IAAIjrC,SAAQ,SAACwuC,GAEhB,GAAwC,SAApCH,EAAWG,GACb,MAAM,IAAI1jD,MAAM,yBAG2B,UAApCujD,EAAWG,IAClBJ,EAAWjjD,KAAKqjD,EAEpB,GACF,I,SA5BGJ,EAAWljD,OAAS,G,GA+B7B,EAEQ,YAAA0gD,eAAR,SAAuBF,GAErBr9C,KAAKogD,yBACLpgD,KAAKqgD,wBACLrgD,KAAKsgD,0BAEDjD,GACFA,EAAiBE,eAAev9C,MAIlCA,KAAKugD,eACP,EAQA,YAAAA,cAAA,WAUE,IAVF,WACM3b,EAAS,EAMP4b,EAAa,IAAIphD,MAAcY,KAAKg+C,OAAOnhD,OAAQ,GACrD4jD,EAAgB,EAEX/jD,EAAI,EAAGA,EAAIsD,KAAKg+C,OAAOnhD,OAAQH,IAEtC8jD,EAAW9jD,GAAK+jD,EACZzgD,KAAKg+C,OAAOthD,GAAG0gD,aACbqD,IAAkB/jD,IACpBsD,KAAKg+C,OAAOyC,GAAiBzgD,KAAKg+C,OAAOthD,IAE3C+jD,KAIAzgD,KAAKg+C,OAAOthD,GAAG+nC,QAAQ9yB,SAAQ,SAAA+uC,GAC7B,EAAK3C,SAAS2C,GAAK/D,OAAS,CAC9B,IAQJ,IAHA38C,KAAKg+C,OAAOphD,OAAO6jD,EAAezgD,KAAKg+C,OAAOnhD,OAAS4jD,GAG9C/jD,EAAI,EAAGA,EAAIsD,KAAK+9C,SAASlhD,OAAQH,IAAK,CAC7C,IAAMikD,EAAc3gD,KAAK+9C,SAASrhD,QACRF,IAAtBmkD,EAAYhE,QAA8C,IAAvBgE,EAAYhE,QAAuC,IAAvBgE,EAAYhE,QAC7EgE,EAAYhE,MAAQ6D,EAAWG,EAAYhE,QAG7C,IAAK,IAAI/4C,EAAI,EAAGA,EAAI+8C,EAAY/D,IAAI//C,OAAQ+G,IAAK,CAC/C,KAAI+8C,EAAY/D,IAAIh5C,IAAM,GAGxB,MAAM,IAAInH,MAAM,mCAFhBkkD,EAAY/D,IAAIh5C,GAAK48C,EAAWG,EAAY/D,IAAIh5C,G,EAOtDghC,EAAS,E,iBAEAloC,GAEP,IAA+B,IAA3B,EAAKqhD,SAASrhD,GAAGqC,OAA+D,IAAhD,EAAK6+C,kBAAkBjhD,QAAQD,EAAIkoC,G,OACrEA,IACA,EAAKmZ,SAASnhD,OAAOF,EAAG,GACxBA,I,EALKA,EAAC,WAQR,GAAIkoC,EAAS,EAAG,CACd,IAAI,GAAO,OAGmBpoC,IAA1B,EAAKuhD,SAASrhD,GAAGqC,OAAiD,IAA3B,EAAKg/C,SAASrhD,GAAGqC,MAE7C,KADb,EAAM,EAAKi/C,OAAO,EAAKD,SAASrhD,GAAGqC,MAAM0lC,QAAQ9nC,QAAQD,EAAIkoC,MAE3D,EAAKoZ,OAAO,EAAKD,SAASrhD,GAAGqC,MAAM0lC,QAAQ,GAAO/nC,IAKvC,KADb,EAAM,EAAK+gD,iBAAiB9gD,QAAQD,EAAIkoC,MAEtC,EAAK6Y,iBAAiB,GAAO/gD,GAKjC,EAAKqhD,SAASrhD,GAAG+uB,GAAG9Z,SAAQ,SAAAyF,IAEb,KADb,EAAM,EAAK4mC,OAAO5mC,GAAM2G,OAAOphB,QAAQD,EAAIkoC,MAEzC,EAAKoZ,OAAO5mC,GAAM2G,OAAO,GAAOrhB,EAEpC,IACmC,IAA/B,EAAKqhD,SAASrhD,GAAG+uB,GAAG5uB,SAGT,KADb,EAAM,EAAK+gD,kBAAkBjhD,QAAQD,EAAIkoC,MAEvC,EAAKgZ,kBAAkB,GAAOlhD,E,GApC7BA,C,SAAT,IAASA,EAAI,EAAGA,EAAIsD,KAAK+9C,SAASlhD,OAAQH,I,EAAjCA,GAAAA,EAAI,CAyCf,EAOQ,YAAAkkD,WAAR,SAAmBX,G,QACX7oC,EAAOpX,KAAKg+C,OAAOiC,GACzB,GAAI7oC,EAAKqtB,QAAQ5nC,OAAS,EACxB,IAAK,IAAIH,EAAI,EAAGA,EAAI0a,EAAKqtB,QAAQ5nC,OAAQH,IACvC,GAAIsD,KAAK+9C,SAAS3mC,EAAKqtB,QAAQ/nC,IAAI+uB,GAAG5uB,OAAS,EAC7C,MAAM,IAAIJ,MAAM,uFAMtB2a,EAAKgmC,aAAc,EACnB,IAAMyD,EAAkBzpC,EAAK2G,OAAO,GAC9B+iC,EAAmB1pC,EAAKqtB,QAAQ,GAChCsc,EAAuB/gD,KAAK+9C,SAAS+C,GAAkBr1B,GAG7D,IAAS/uB,EAAI,EAAGA,EAAI0a,EAAK2G,OAAOlhB,OAAQH,IAAK,CAC3C,IAAMskD,EAAWhhD,KAAK+9C,SAAS3mC,EAAK2G,OAAOrhB,IAAI+uB,GAAG9uB,QAAQsjD,GAE1D,IAAkB,IAAde,EACF,MAAM,IAAIvkD,MAAM,yEAElBuD,KAAK+9C,SAAS3mC,EAAK2G,OAAOrhB,IAAI+uB,GAAG7uB,OAAOokD,EAAU,E,CAIpDhhD,KAAK+9C,SAAS+C,GAAkBlE,IAAM,GAGtC,IAAMpnC,EAAQxV,KAAK49C,kBAAkBjhD,QAAQmkD,GAM7C,IALe,IAAXtrC,IACFxV,KAAK49C,kBAAkBpoC,GAASqrC,GAI9BE,GAAwBA,EAAqBlkD,OAAS,E,IACxD,IAAwB,QAAAkkD,GAAoB,8BAAE,CAAzC,IAAM,EAAS,QACZE,EAAejhD,KAAKg+C,OAAO,GAAWjgC,OAAOphB,QAAQmkD,GAE3D,IAAsB,IAAlBG,EACF,MAAM,IAAIxkD,MAAM,4EAElBuD,KAAKg+C,OAAO,GAAWjgC,OAAOkjC,GAAgBJ,EAC9C7gD,KAAK+9C,SAAS8C,GAAiBp1B,GAAG3uB,KAAK,E,mGAG7C,EAEA,YAAAujD,sBAAA,W,QACMJ,EAAY,E,IAChB,IAAmB,QAAAjgD,KAAKg+C,QAAM,8BAAE,CAA3B,IAAM5mC,EAAI,QAEb,GAAoB,YAAhBA,EAAK6lC,OAAsB,CAE7B,GAA2B,IAAvB7lC,EAAK2G,OAAOlhB,OACd,MAAM,IAAIJ,MAAM,iDAElB,GAA4B,IAAxB2a,EAAKqtB,QAAQ5nC,QAAwC,IAAxBua,EAAKqtB,QAAQ5nC,OAC5C,MAAM,IAAIJ,MAAM,wDAGlB,GAA4B,IAAxB2a,EAAKqtB,QAAQ5nC,QAA8D,IAA9CmD,KAAK+9C,SAAS3mC,EAAKqtB,QAAQ,IAAImY,IAAI//C,OAClE,MAAM,IAAIJ,MAAM,yEAElBuD,KAAK4gD,WAAWX,E,CAElBA,G,mGAEJ,EAEA,YAAAG,uBAAA,W,QACMH,EAAY,E,IAChB,IAAmB,QAAAjgD,KAAKg+C,QAAM,8BAER,aAFP,QAEJf,QACPj9C,KAAK4gD,WAAWX,GAElBA,G,kGAEJ,EAEA,YAAAiB,aAAA,SAAa1M,GACX,OAAQA,EAAEyI,QAER,IAAK,OACL,IAAK,UACL,IAAK,OACH,OAAO,EACT,QACE,OAAO,EAEb,EAEA,YAAAqD,wBAAA,W,YACE,IAAmB,QAAAtgD,KAAKg+C,QAAM,8BAAE,CAA3B,IAAM5mC,EAAI,QACb,GAAoB,SAAhBA,EAAK6lC,OAAmB,CAC1B,IAAMkE,EAAOnhD,KAAK+9C,SAAS3mC,EAAKqtB,QAAQ,IAAImY,IAC5C,GAAoB,IAAhBuE,EAAKtkD,QAAgBmD,KAAKkhD,aAAalhD,KAAKg+C,OAAOmD,EAAK,KAAM,CAChE,IAAMC,EAAQphD,KAAKg+C,OAAOmD,EAAK,IAC/B,GAAqB,SAAjBC,EAAMnE,OACR,GAA4B,IAAxBmE,EAAMrjC,OAAOlhB,OACf,IACEua,EAAKlO,WAAWhK,IACZ,oBAAqB,SACrB,CAACkiD,EAAMl4C,WAAWS,SAAS,OAAQy3C,EAAMl4C,WAAWS,SAAS,Q,CACjE,MAAOjD,GACP0Q,EAAKlO,WAAWhK,IAAI,oBAAqB,SAAU,CAAC,EAAA+1B,SAAU,EAAAC,U,KAE3D,MACHksB,EAAMrjC,OAAOlhB,QAAU,QAA+CL,IAA1CwD,KAAK+9C,SAASqD,EAAMrjC,OAAO,IAAIgB,aACjBviB,IAA1CwD,KAAK+9C,SAASqD,EAAMrjC,OAAO,IAAIgB,QAMjC,SALA3H,EAAKlO,WAAWhK,IAAI,oBAAqB,SAAU,CACjDc,KAAK+9C,SAASqD,EAAMrjC,OAAO,IAAIgB,OAAQgd,UAAU,GAAI/7B,KAAK+9C,SAASqD,EAAMrjC,OAAO,IAAIgB,OAAQgd,UAAU,I,CAO5G3kB,EAAKlO,WAAWhK,IAAI,aAAc,SAAWkiD,EAAY,QACzDphD,KAAK4gD,WAAWO,EAAK,G,qGAI7B,EACF,EAhqBA,E,4gDC7CA,8BAIA,QAHE,YAAAt7B,IAAA,SAAIw7B,EAA4BC,EAAkBC,GAElD,EACF,EAJA,GAKA,0BAsBA,QArBE,YAAA17B,IAAA,SAAI27B,EAA2BC,EAAiBC,GAE9CC,QAAQ97B,IAAI,UAAG7lB,KAAK4hD,MAAMJ,GAAS,YAAIE,EAAW,QAAaA,EAAW,QAAa,IAAE,OAAGD,GAC9F,EAEQ,YAAAG,MAAR,SAAcJ,GACZ,OAAQA,GACN,IAAK,UACH,MAAO,gBACT,IAAK,OACH,MAAO,aACT,IAAK,UACH,MAAO,gBACT,IAAK,QACH,MAAO,gBACT,IAAK,QACH,MAAO,cACT,QACE,MAAM,IAAI/kD,MAAM,gCAAyB+kD,IAE/C,EACF,EAtBA,GAwBMK,EAAiB,CACrB9zC,QAAS,IACT+zC,KAAM,IACN9zC,QAAS,IACTq7B,MAAO,IACP0Y,MAAO,KAGHC,IAAmB,MAChB,KAAG,IAAIC,EACd,EAAU,QAAG,IAAIC,E,GAEbC,EAAwB,CAC5BC,SAAU,UACVC,gBAAiB,UACjBC,aAAa,EACbC,mBAAmB,GAEjBC,IAAiB,MAC2C,IAAKL,EAAgD,GAMrH,SAASt8B,EACLtnB,EAA8BC,EAAeC,EAAsBgH,GACrE,QAAajJ,IAATgC,EAEF,OAkB6BkjD,EAlBEnjD,EAmB1B,CACLwP,QAAS8X,EAAI9X,QAAQ00C,KAAK,KAAMf,GAChCI,KAAMj8B,EAAIi8B,KAAKW,KAAK,KAAMf,GAC1B1zC,QAAS6X,EAAI7X,QAAQy0C,KAAK,KAAMf,GAChCrY,MAAOxjB,EAAIwjB,MAAMoZ,KAAK,KAAMf,GAC5BK,MAAOl8B,EAAIk8B,MAAMU,KAAK,KAAMf,IAvBvB,QAAallD,IAATiC,EAETikD,EAAYnkD,EAAyBC,QAChC,GAAoB,iBAATC,QAA8BjC,IAATiJ,EAErCi9C,EAAYnkD,EAAyBC,QAChC,GAAoB,iBAATC,QAA8BjC,IAATiJ,EAErCi9C,EAAYnkD,EAAyBE,EAAM,EAAGD,OACzC,IAAoB,iBAATC,GAAqC,iBAATgH,EAI5C,MAAM,IAAInJ,UAAU,kBAFpBomD,EAAYnkD,EAAyBE,EAAMgH,EAAMjH,E,CAMrD,IAAiCkjD,CAFjC,CAeA,SAASgB,EAAYlB,EAA2BC,EAAiBkB,EAAejB,GAC9E,IAAMvS,EAASqT,EAAkBd,GAAY,KAAOc,EAAkB,IAClEX,EAAeL,GAAYK,EAAe1S,EAAOkT,mBAIjDlT,EAAOmT,cACTb,EAAU,WAAG,IAAImB,MAAOC,cAAa,YAAIpB,IAGvCtS,EAAOoT,kBAIXP,EAAoB7S,EAAOiT,UAAUv8B,IAAI27B,EAAUC,EAASC,GAC9D,EAGA,SAAU77B,GA2BR,SAAgBg1B,EAAM1L,GACpBqT,EAAoB,CAAC,EACrBtjD,EAAI,GAAIiwC,GAAU,CAAC,EACrB,CACA,SAAgBjwC,EAAIwiD,EAAkBvS,GACpC,GAAiB,MAAbuS,EACF7G,EAAM1L,OACD,CACL,IAAM2T,EAAiBN,EAAkBd,IAAaS,EACtDK,EAAkBd,GAAY,CAC5BU,SAAUjT,EAAOiT,UAAYU,EAAeV,SAC5CC,gBAAiBlT,EAAOkT,iBAAmBS,EAAeT,gBAC1DC,iBAAqC9lD,IAAvB2yC,EAAOmT,YAA6BQ,EAAeR,YAAcnT,EAAOmT,YACtFC,uBAAiD/lD,IAA7B2yC,EAAOoT,kBAAmCO,EAAeP,kBACfpT,EAAOoT,kB,CAK3E,CA3CgB,EAAAx0C,QAAhB,SAAwBxP,EAAcC,GACpCqnB,EAAI,UAAWtnB,EAAMC,EACvB,EAGgB,EAAAsjD,KAAhB,SAAqBvjD,EAAcC,GACjCqnB,EAAI,OAAQtnB,EAAMC,EACpB,EAGgB,EAAAwP,QAAhB,SAAwBzP,EAAcC,GACpCqnB,EAAI,UAAWtnB,EAAMC,EACvB,EAGgB,EAAA6qC,MAAhB,SAAsB9qC,EAAcC,GAClCqnB,EAAI,QAAStnB,EAAMC,EACrB,EAGgB,EAAAujD,MAAhB,SAAsBxjD,EAAcC,GAClCqnB,EAAI,QAAStnB,EAAMC,EACrB,EAEgB,EAAAq8C,MAAK,EAIL,EAAA37C,IAAG,EAiBH,EAAA4O,WAAhB,SAA2B9Q,GACzB,IAAMmyC,EAAwB,CAAC,EAC3BnyC,EAAII,WACN+xC,EAAOkT,gBAAkBrlD,EAAII,UAE/B8B,EAAI,GAAIiwC,EACV,CACD,CAvDD,CAAUtpB,IAAAA,EAAG,KA0DA,EAAAhY,OAAiBgY,EAkB9B,iBACE,WACW67B,EAAyCzlD,EAAqB8mD,EAC7DC,EAAsDC,EAA2BC,GADlF,KAAAxB,SAAAA,EAAyC,KAAAzlD,KAAAA,EAAqB,KAAA8mD,UAAAA,EAC7D,KAAAC,YAAAA,EAAsD,KAAAC,MAAAA,EAA2B,KAAAC,IAAAA,CAAqB,CAcpH,OAZQ,YAAAhhB,IAAN,W,mEACE,MAAO,CAAP,EAAOliC,KAAKgjD,YAAYhjD,M,QAGpB,YAAAmjD,WAAN,W,mEACE,QAAiB3mD,IAAbwD,KAAKkjD,UAAoC1mD,IAAfwD,KAAKijD,MACjC,MAAM,IAAIxmD,MAAM,wBAGhB,OADAuD,KAAKkjD,IAAIrK,WACF,CAAP,EAAO74C,KAAKkjD,IAAIzJ,uBAAuBz5C,KAAKijD,O,QAGlD,EAjBA,GAmBA,EACE,SACWvB,EAAyCzlD,EAAqB8mD,EAA0BK,GAAxF,KAAA1B,SAAAA,EAAyC,KAAAzlD,KAAAA,EAAqB,KAAA8mD,UAAAA,EAA0B,KAAAK,QAAAA,CAAkB,EAGvH,aAQE,WAAoBC,EAA0BC,EAAyBC,GA+H/D,KAAAC,UAAW,EASX,KAAAC,cAAgB,EAvItBzjD,KAAKwjD,UAAW,EAChBxjD,KAAK0jD,sBAAuClnD,IAApB6mD,EAAgC,IAAQA,EAChErjD,KAAK2jD,qBAAqCnnD,IAAnB8mD,EAA+B,GAAKA,EAC3DtjD,KAAK4jD,kCAA+DpnD,IAAhC+mD,EAA4C,IAAOA,CACzF,CAoIF,OAhJS,EAAAM,OAAP,SAAc1U,GACZ,YAAe3yC,IAAX2yC,EACK,IAAInvC,KAEN,IAAIA,KAAKmvC,EAAOkU,gBAAiBlU,EAAOmU,eAAgBnU,EAAOoU,4BACxE,EAUA,YAAAhmB,MAAA,WACEv9B,KAAKwjD,UAAW,EAChBxjD,KAAK8jD,cAAgB,GACrB9jD,KAAK+jD,YAAa,IAAAC,OAClBhkD,KAAKyjD,cAAgB,CACvB,EAGA,YAAAQ,KAAA,WAEE,IADAjkD,KAAKwjD,UAAW,EACTxjD,KAAKyjD,cAAgBzjD,KAAK8jD,cAAcjnD,OAAQmD,KAAKyjD,gBAC1DzjD,KAAKkkD,YAAYlkD,KAAK8jD,cAAc9jD,KAAKyjD,eAE7C,EAMA,YAAA5a,MAAA,SAAS6Y,EAAkCzlD,EAAcw4B,EAA4ByuB,GAArF,WAEQra,EAAQ7oC,KAAKwjD,SAAWxjD,KAAKmkD,MAAMzC,EAAUzlD,EAAMinD,QAAO1mD,EAC5D4nD,GAAY,EAEVjqB,EAAM1F,IAGZ,GAAI0F,GAA2C,mBAA5BA,EAAmBkqB,KAEpC,OADAD,GAAY,EACL,IAAIthD,SAAW,SAACC,EAASC,GAC7Bm3B,EACIkqB,MACG,SAAMhnD,GAAK,qC,yDACLwrC,EACF,GAAMA,EAAM3G,OADV,M,OACF,S,wBAEFn/B,EAAQ1F,G,cAEV,SAAMinD,GAAM,qC,yDACNzb,EACF,GAAMA,EAAM3G,OADV,M,OACF,S,wBAEFl/B,EAAOshD,G,aAEnB,IAEF,IAAKF,GAAavb,EAAO,CACvB,IAAM,EAAWA,EAAM3G,MACvB,GAAI,GAAqC,mBAAlB,EAASmiB,KAC9B,OAAO,IAAIvhD,SAAW,SAACC,EAASC,GAC9B,EAAWqhD,MACP,WACEthD,EAAQo3B,EACV,IACA,SAACmqB,GACCthD,EAAOshD,EACT,GACN,G,CAGJ,OAAOnqB,CACT,EAGA,YAAAgqB,MAAA,SAAMzC,EAAkCzlD,EAAcinD,GAAtD,WACE,IAAKljD,KAAKwjD,SACR,MAAM,IAAI/mD,MAAM,+BAElB,QAAYD,IAAR0mD,EAAmB,CACrB,IAAMH,GAAY,IAAAiB,OAElB,OADAhkD,KAAKg6C,MAAM+I,GACJ,IAAIwB,EAAM7C,EAAUzlD,EAAM8mD,GAAW,SAAAr8C,GAAK,SAAK89C,QAAQ99C,EAAb,G,CAEjD,IAAMu8C,EAAoBC,EAAI5K,aAC9B,OAAO,IAAIiM,EAAM7C,EAAUzlD,EAAM,GAAG,SAAMyK,GAAC,gEAAI,SAAA1G,KAAKkiC,IAAIx7B,G,SAAIu8C,EAAOC,EAEvE,EAGc,YAAAhhB,IAAd,SAAkB2G,G,gGACQ,SAAMA,EAAMsa,c,cAA9BC,EAAkB,SACpBpjD,KAAK8jD,cAAcjnD,OAASmD,KAAK0jD,mBACnC1jD,KAAK8jD,cAAchnD,KAAK,IAAI2nD,EAAY5b,EAAM6Y,SAAU7Y,EAAM5sC,KAAM4sC,EAAMka,UAAWK,IACrFpjD,KAAKg6C,MAAMoJ,I,YAIP,YAAAoB,QAAR,SAAgB3b,GACd,IAAMua,GAAkB,IAAAY,OACpBhkD,KAAK8jD,cAAcjnD,OAASmD,KAAK0jD,mBACnC1jD,KAAK8jD,cAAchnD,KAAK,IAAI2nD,EAAY5b,EAAM6Y,SAAU7Y,EAAM5sC,KAAM4sC,EAAMka,UAAWK,IACrFpjD,KAAKg6C,MAAMoJ,GAEf,EAEQ,YAAAc,YAAR,SAAoBrb,GAClB,EAAAh7B,OAAOE,QACH,mBAAY86B,EAAM6Y,UAClB,WAAI7Y,EAAMua,QAAUva,EAAMka,WAAW2B,QAAQ,GAAE,wBAAgB7b,EAAM5sC,KAAI,gBAAQ4sC,EAAMua,QAAQsB,QAAQ,IAC7G,EAEQ,YAAA1K,MAAR,SAAc2K,GACZ,GAAI3kD,KAAK8jD,cAAcjnD,OAASmD,KAAKyjD,eAAiBzjD,KAAK2jD,iBACvDgB,EAAc3kD,KAAK+jD,YAAc/jD,KAAK4jD,6BAA8B,CAGtE,IAAK,IAAMgB,EAAkB5kD,KAAKyjD,cAAezjD,KAAKyjD,cAAgBmB,EAAkB5kD,KAAK2jD,iBACxF3jD,KAAKyjD,cAAgBzjD,KAAK8jD,cAAcjnD,OACxCmD,KAAKyjD,gBACRzjD,KAAKkkD,YAAYlkD,KAAK8jD,cAAc9jD,KAAKyjD,gBAG3CzjD,KAAK+jD,YAAa,IAAAC,M,CAEtB,EAEA,sBAAI,sBAAO,C,IAAX,WACE,OAAOhkD,KAAKwjD,QACd,E,gCAWF,EAjJA,GAAa,EAAAqB,SAAAA,EAsJA,EAAAb,IAA8B,oBAAhBc,aAA+BA,YAAYd,IAAO,WAAM,OAAAc,YAAYd,KAAZ,EAAoBpB,KAAKoB,G,oGC3b5G,cACA,UAEA,UAEA,UACA,UAEOl7C,EAAS,EAAAC,YAAYC,aAAaC,IAEzC,aAEE,aAAe,CAwDjB,OAtDE,YAAA87C,KAAA,SAAKC,EAAiB3H,EAAsC4H,GAC1D,IAAKA,EAEH,IAEE,YADAjlD,KAAKklD,mBAAmBF,EAAK3H,E,CAE7B,MAAO32C,GACP,QAAoBlK,IAAhByoD,EACF,MAAMv+C,C,CAKZ1G,KAAKmlD,kBAAkBH,EAAK3H,EAC9B,EAEQ,YAAA6H,mBAAR,SAA2BF,EAAiB3H,GAC1C,IAAM+H,EAAa,EAAA/7C,KAAKg8C,WAAWjtC,OAAO4sC,GAE1C,GADkB,EAAA95C,SAASE,aAAag6C,EAAWE,WACnC,EACd,MAAM,IAAI7oD,MAAM,8CAGlBuD,KAAKulD,QACDH,EAAWI,YAAYv/C,KAAI,SAAAvJ,GAAK,OAAE+oD,OAAQ/oD,EAAE+oD,OAAkB51C,QAAS,EAAA3E,SAASE,aAAa1O,EAAEmT,SAA/D,IAEpC7P,KAAK0lD,OAAS,EAAApJ,MAAMv9C,KAAKqmD,EAAW/Y,MAAQgR,EAC9C,EAEQ,YAAA8H,kBAAR,SAA0BH,EAAiB3H,GACzC,IAAMnG,EAAK,IAAI,EAAAyO,YAAYC,WAAWZ,GAChCa,EAAW/8C,EAAOvE,iBAAiBuhD,0BAA0B5O,GAAI6O,QAEvE,GADkB,EAAA76C,SAASE,aAAay6C,EAASP,aACjC,EACd,MAAM,IAAI7oD,MAAM,8CAElBuD,KAAKulD,QAAU,GACf,IAAK,IAAI7oD,EAAI,EAAGA,EAAImpD,EAASG,oBAAqBtpD,IAAK,CACrD,IAAMupD,EAAUJ,EAASL,YAAY9oD,GACrCsD,KAAKulD,QAAQzoD,KAAK,CAAC2oD,OAAQQ,aAAO,EAAPA,EAASR,SAAoB51C,QAAS,EAAA3E,SAASE,aAAa66C,EAAQp2C,Y,CAGjG7P,KAAK0lD,OAAS,EAAApJ,MAAMv9C,KAAK8mD,EAASxZ,QAAUgR,EAC9C,EAGA,sBAAI,oBAAK,C,IAAT,WACE,OAAOr9C,KAAK0lD,MACd,E,gCAGA,sBAAI,qBAAM,C,IAAV,WACE,OAAO1lD,KAAKulD,OACd,E,gCACF,EA1DA,GAAa,EAAAW,MAAAA,C,mICEA,EAAAtwB,aACT,CAAC,UAAW,UAAW,QAAS,QAAS,OAAQ,SAAU,SAAU,SAC5D,EAAAuwB,UAAwC,CAAC,QAAS,QAAS,OAAQ,SAAU,SAAU,SACvF,EAAAC,YAA0C,CAAC,UAAW,U,uWC8BnE,SAASC,EAAcx2C,EAAiBy2C,GACtC,GAAIA,EAASC,SAAS,KAAM,CAE1B,IAAMC,EAAa5mD,OAAO6mD,SAASH,EAASI,UAAU,EAAGJ,EAASzpD,OAAS,GAAI,IAC/E,OAAQ8pD,MAAMH,IAAeA,GAAc32C,C,CACtC,GAAmC,IAA/By2C,EAASltC,MAAM,KAAKvc,OAAc,CAE3C,IAAM+pD,EAAON,EAASltC,MAAM,KAEtBytC,GADAL,EAAa5mD,OAAO6mD,SAASG,EAAK,GAAI,IAC3BhnD,OAAO6mD,SAASG,EAAK,GAAI,KAC1C,OAAQD,MAAMH,KAAgBG,MAAME,IAAaL,GAAc32C,GAAWA,GAAWg3C,C,CAGrF,OAAOjnD,OAAO6mD,SAASH,EAAU,MAAQz2C,CAE7C,C,0EAvCA,2BAAgCuH,EAAkBq1B,EAA0Bqa,G,gBAC1E,IAAmB,QAAAA,GAAK,8BAAE,CAArB,IAAMC,EAAI,QACP9J,EAAS8J,EAAK,GACdtB,EAASsB,EAAK,GACdC,EAAkBD,EAAK,GACvBla,EAASka,EAAK,GACdja,EAASia,EAAK,GAEpB,GAAI3vC,EAAK6lC,SAAWA,E,IAClB,IAAoB,kBAAAxQ,IAAM,8BAAE,CAAvB,IAAM9E,EAAK,QAEd,IAAIA,EAAM8d,SAAWA,GAA4B,YAAjB9d,EAAM8d,QAAmC,KAAXA,IACxDY,EAAc1e,EAAM93B,QAASm3C,GAC/B,MAAO,CAACna,OAAM,EAAEC,OAAM,E,sMAOhC,MAAM,IAAIxwC,UAAU,mCAA4B8a,EAAK6lC,OAAM,0BACvDxQ,EAAOxmC,KAAI,SAAA/G,GAAO,gBAAGA,EAAIumD,QAAU,UAAS,aAAKvmD,EAAI2Q,QAAnC,IAA8CjJ,KAAK,OAC3E,C,0GC3CA,IAKiBmC,EAAYC,EAAaC,EAC5BoB,EANd,UAKiBtB,EAAA,EAAAA,cAAA,EAAAA,YAAW,IAACC,EAAA,EAAAA,eAAA,EAAAA,aAAY,IAACC,EAAA,EAAAA,MAAA,EAAAA,IAAG,KAC/BoB,EAAA,EAAAA,gBAAA,EAAAA,cAAa,KACvB,2BACA,qBACA,iBACA,uBACA,uBACA,qBACA,uBACA,mBACA,yBACA,yBACA,wBACA,sCACA,wCAOJ,SAAiBtB,IAAY,SAAAC,IAAa,SAAAC,GACxC,IAAYg+C,KAAA,EAAAA,qBAAA,EAAAA,mBAAkB,KAAE,uBAAa,qBAAW,oBACzD,CAFyC,GAAAh+C,MAAA,EAAAA,IAAG,IAE5C,CAF4B,GAAAD,eAAA,EAAAA,aAAY,IAExC,CAFD,CAAiB,EAAAD,cAAA,EAAAA,YAAW,KAO5B,SAAiBA,IAAY,SAAAC,IAAa,SAAAC,GACxC,IAAYi+C,KAAA,EAAAA,iBAAA,EAAAA,eAAc,KACxB,2BACA,qBACA,qBACA,mBACA,uBACA,qBACA,qBACA,qBACA,uBACA,mBACA,0BACA,wBACA,wBACA,wBACA,8BACA,gCACA,2BAEH,CApByC,GAAAj+C,MAAA,EAAAA,IAAG,IAoB5C,CApB4B,GAAAD,eAAA,EAAAA,aAAY,IAoBxC,CApBD,CAAiB,EAAAD,cAAA,EAAAA,YAAW,KAyB5B,SAAiBA,IAAY,SAAAC,IAAa,SAAAC,GACxC,IAAYk+C,KAAA,EAAAA,WAAA,EAAAA,SAAQ,KAAE,2BAAe,oBACtC,CAFyC,GAAAl+C,MAAA,EAAAA,IAAG,IAE5C,CAF4B,GAAAD,eAAA,EAAAA,aAAY,IAExC,CAFD,CAAiB,EAAAD,cAAA,EAAAA,YAAW,KAO5B,SAAiBA,IAAY,SAAAC,IAAa,SAAAC,GACxC,IAAYi2C,KAAA,EAAAA,gBAAA,EAAAA,cAAa,KAAE,iBAAU,iCAAiB,qCAAmB,0BAC1E,CAFyC,GAAAj2C,MAAA,EAAAA,IAAG,IAE5C,CAF4B,GAAAD,eAAA,EAAAA,aAAY,IAExC,CAFD,CAAiB,EAAAD,cAAA,EAAAA,YAAW,KAO5B,SAAiBA,IAAY,SAAAC,IAAa,SAAAC,GACxC,8BACE,KAAAm+C,GAAkC,KAElC,KAAAC,OAAS,CAqGX,QA/FE,YAAAC,OAAA,SAAO5qD,EAAW0qD,GAGhB,OAFApnD,KAAKqnD,OAAS3qD,EACdsD,KAAKonD,GAAKA,EACHpnD,IACT,EAOO,EAAAunD,eAAP,SAAsBH,EAA4Br6C,GAChD,OAAQA,GAAO,IAAIy6C,GAASF,OAAOF,EAAGK,UAAUL,EAAG1c,YAAc0c,EAAG1c,WAAY0c,EAClF,EAOO,EAAAM,2BAAP,SAAkCN,EAA4Br6C,GAE5D,OADAq6C,EAAGO,YAAYP,EAAG1c,WAAa,EAAAib,YAAYiC,qBACnC76C,GAAO,IAAIy6C,GAASF,OAAOF,EAAGK,UAAUL,EAAG1c,YAAc0c,EAAG1c,WAAY0c,EAClF,EAOA,YAAAznD,IAAA,SAAI6V,EAAezI,GACjB,IAAI63B,EAAS5kC,KAAKonD,GAAIS,SAAS7nD,KAAKqnD,OAAQ,GAC5C,OAAOziB,GAAU73B,GAAO,IAAIhE,EAAYC,aAAaC,IAAI6+C,WACpCR,OAAOtnD,KAAKonD,GAAIW,WAAW/nD,KAAKonD,GAAIY,SAAShoD,KAAKqnD,OAASziB,GAAkB,EAARpvB,GAAYxV,KAAKonD,IAC3F,IAClB,EAKA,YAAA9H,UAAA,WACE,IAAI1a,EAAS5kC,KAAKonD,GAAIS,SAAS7nD,KAAKqnD,OAAQ,GAC5C,OAAOziB,EAAS5kC,KAAKonD,GAAIa,aAAajoD,KAAKqnD,OAASziB,GAAU,CAChE,EAKO,EAAAsjB,WAAP,SAAkBC,GAChBA,EAAQC,YAAY,EACtB,EAMO,EAAAC,OAAP,SAAcF,EAA8BhsC,GAC1CgsC,EAAQG,eAAe,EAAGnsC,EAAW,EACvC,EAOO,EAAAosC,gBAAP,SAAuBJ,EAA8BxpD,GACnDwpD,EAAQK,YAAY,EAAG7pD,EAAK9B,OAAQ,GACpC,IAAK,IAAIH,EAAIiC,EAAK9B,OAAS,EAAGH,GAAK,EAAGA,IACpCyrD,EAAQM,UAAU9pD,EAAKjC,IAEzB,OAAOyrD,EAAQO,WACjB,EAMO,EAAAC,eAAP,SAAsBR,EAA8BS,GAClDT,EAAQK,YAAY,EAAGI,EAAU,EACnC,EAMO,EAAAC,SAAP,SAAgBV,GAEd,OADaA,EAAQW,WAEvB,EAEO,EAAAC,YAAP,SAAmBZ,EAA8BhsC,GAG/C,OAFAqrC,EAAMU,WAAWC,GACjBX,EAAMa,OAAOF,EAAShsC,GACfqrC,EAAMqB,SAASV,EACxB,EACF,EAxGA,GAAa,EAAAX,MAAK,CAyGnB,CA1GyC,GAAAv+C,MAAA,EAAAA,IAAG,IA0G5C,CA1G4B,GAAAD,eAAA,EAAAA,aAAY,IA0GxC,CA1GD,CAAiB,EAAAD,cAAA,EAAAA,YAAW,KA8G5B,SAAiBA,IAAY,SAAAC,IAAa,SAAAC,GACxC,8BACE,KAAAm+C,GAAkC,KAElC,KAAAC,OAAS,CA6FX,QAvFE,YAAAC,OAAA,SAAO5qD,EAAW0qD,GAGhB,OAFApnD,KAAKqnD,OAAS3qD,EACdsD,KAAKonD,GAAKA,EACHpnD,IACT,EAOO,EAAAgpD,mBAAP,SAA0B5B,EAA4Br6C,GACpD,OAAQA,GAAO,IAAI+6C,GAAaR,OAAOF,EAAGK,UAAUL,EAAG1c,YAAc0c,EAAG1c,WAAY0c,EACtF,EAOO,EAAA6B,+BAAP,SAAsC7B,EAA4Br6C,GAEhE,OADAq6C,EAAGO,YAAYP,EAAG1c,WAAa,EAAAib,YAAYiC,qBACnC76C,GAAO,IAAI+6C,GAAaR,OAAOF,EAAGK,UAAUL,EAAG1c,YAAc0c,EAAG1c,WAAY0c,EACtF,EAMA,YAAA/pD,MAAA,SAAM0P,GACJ,IAAI63B,EAAS5kC,KAAKonD,GAAIS,SAAS7nD,KAAKqnD,OAAQ,GAC5C,OAAOziB,GAAU73B,GAAO,IAAIhE,EAAYC,aAAaC,IAAIigD,gBACpC5B,OAAOtnD,KAAKonD,GAAIW,WAAW/nD,KAAKqnD,OAASziB,GAAS5kC,KAAKonD,IAC5D,IAClB,EAQA,YAAA+B,WAAA,SAAWC,GACT,IAAIxkB,EAAS5kC,KAAKonD,GAAIS,SAAS7nD,KAAKqnD,OAAQ,GAC5C,OAAOziB,EAAS5kC,KAAKonD,GAAIiC,SAASrpD,KAAKqnD,OAASziB,EAAQwkB,GAAoB,IAC9E,EAKO,EAAAE,eAAP,SAAsBnB,GACpBA,EAAQC,YAAY,EACtB,EAMO,EAAAmB,SAAP,SAAgBpB,EAA8BqB,GAC5CrB,EAAQG,eAAe,EAAGkB,EAAa,EACzC,EAMO,EAAAC,cAAP,SAAqBtB,EAA8BuB,GACjDvB,EAAQG,eAAe,EAAGoB,EAAkB,EAC9C,EAMO,EAAAC,aAAP,SAAoBxB,GAElB,OADaA,EAAQW,WAEvB,EAEO,EAAAc,gBAAP,SACIzB,EAA8BqB,EAC9BE,GAIF,OAHA5B,EAAUwB,eAAenB,GACzBL,EAAUyB,SAASpB,EAASqB,GAC5B1B,EAAU2B,cAActB,EAASuB,GAC1B5B,EAAU6B,aAAaxB,EAChC,EACF,EAhGA,GAAa,EAAAL,UAAS,CAiGvB,CAlGyC,GAAA7+C,MAAA,EAAAA,IAAG,IAkG5C,CAlG4B,GAAAD,eAAA,EAAAA,aAAY,IAkGxC,CAlGD,CAAiB,EAAAD,cAAA,EAAAA,YAAW,KAsG5B,SAAiBA,IAAY,SAAAC,IAAa,SAAAC,GACxC,8BACE,KAAAm+C,GAAkC,KAElC,KAAAC,OAAS,CA4GX,QAtGE,YAAAC,OAAA,SAAO5qD,EAAW0qD,GAGhB,OAFApnD,KAAKqnD,OAAS3qD,EACdsD,KAAKonD,GAAKA,EACHpnD,IACT,EAOO,EAAA6pD,wBAAP,SAA+BzC,EAA4Br6C,GACzD,OAAQA,GAAO,IAAIm8C,GAAkB5B,OAAOF,EAAGK,UAAUL,EAAG1c,YAAc0c,EAAG1c,WAAY0c,EAC3F,EAOO,EAAA0C,oCAAP,SAA2C1C,EAA4Br6C,GAErE,OADAq6C,EAAGO,YAAYP,EAAG1c,WAAa,EAAAib,YAAYiC,qBACnC76C,GAAO,IAAIm8C,GAAkB5B,OAAOF,EAAGK,UAAUL,EAAG1c,YAAc0c,EAAG1c,WAAY0c,EAC3F,EAKA,YAAA2C,QAAA,WACE,IAAInlB,EAAS5kC,KAAKonD,GAAIS,SAAS7nD,KAAKqnD,OAAQ,GAC5C,OAAOziB,EAAkB5kC,KAAKonD,GAAI4C,SAAShqD,KAAKqnD,OAASziB,GACzC77B,EAAYC,aAAaC,IAAIg+C,mBAAmBgD,OAClE,EAKA,YAAA1K,SAAA,WACE,IAAI3a,EAAS5kC,KAAKonD,GAAIS,SAAS7nD,KAAKqnD,OAAQ,GAC5C,OAAOziB,EAAS5kC,KAAKonD,GAAI8C,UAAUlqD,KAAKqnD,OAASziB,GAAU5kC,KAAKonD,GAAI+C,WAAW,EAAG,EACpF,EAQA,YAAAC,SAAA,SAAShB,GACP,IAAIxkB,EAAS5kC,KAAKonD,GAAIS,SAAS7nD,KAAKqnD,OAAQ,GAC5C,OAAOziB,EAAS5kC,KAAKonD,GAAIiC,SAASrpD,KAAKqnD,OAASziB,EAAQwkB,GAAoB,IAC9E,EAKO,EAAAiB,oBAAP,SAA2BlC,GACzBA,EAAQC,YAAY,EACtB,EAMO,EAAAkC,WAAP,SAAkBnC,EAA8B4B,GAC9C5B,EAAQoC,aAAa,EAAGR,EAAShhD,EAAYC,aAAaC,IAAIg+C,mBAAmBgD,QACnF,EAMO,EAAAO,YAAP,SAAmBrC,EAA8B5I,GAC/C4I,EAAQsC,cAAc,EAAGlL,EAAU4I,EAAQgC,WAAW,EAAG,GAC3D,EAMO,EAAAO,YAAP,SAAmBvC,EAA8BwC,GAC/CxC,EAAQG,eAAe,EAAGqC,EAAgB,EAC5C,EAMO,EAAAC,kBAAP,SAAyBzC,GAEvB,OADaA,EAAQW,WAEvB,EAEO,EAAA+B,qBAAP,SACI1C,EAA8B4B,EAC9BxK,EAA4BoL,GAK9B,OAJAzB,EAAemB,oBAAoBlC,GACnCe,EAAeoB,WAAWnC,EAAS4B,GACnCb,EAAesB,YAAYrC,EAAS5I,GACpC2J,EAAewB,YAAYvC,EAASwC,GAC7BzB,EAAe0B,kBAAkBzC,EAC1C,EACF,EA/GA,GAAa,EAAAe,eAAc,CAgH5B,CAjHyC,GAAAjgD,MAAA,EAAAA,IAAG,IAiH5C,CAjH4B,GAAAD,eAAA,EAAAA,aAAY,IAiHxC,CAjHD,CAAiB,EAAAD,cAAA,EAAAA,YAAW,KAqH5B,SAAiBA,IAAY,SAAAC,IAAa,SAAAC,GACxC,8BACE,KAAAm+C,GAAkC,KAElC,KAAAC,OAAS,CA4FX,QAtFE,YAAAC,OAAA,SAAO5qD,EAAW0qD,GAGhB,OAFApnD,KAAKqnD,OAAS3qD,EACdsD,KAAKonD,GAAKA,EACHpnD,IACT,EAOO,EAAA8qD,4BAAP,SAAmC1D,EAA4Br6C,GAC7D,OAAQA,GAAO,IAAIqyC,GAAsBkI,OAAOF,EAAGK,UAAUL,EAAG1c,YAAc0c,EAAG1c,WAAY0c,EAC/F,EAOO,EAAA2D,wCAAP,SAA+C3D,EAA4Br6C,GAGzE,OADAq6C,EAAGO,YAAYP,EAAG1c,WAAa,EAAAib,YAAYiC,qBACnC76C,GAAO,IAAIqyC,GAAsBkI,OAAOF,EAAGK,UAAUL,EAAG1c,YAAc0c,EAAG1c,WAAY0c,EAC/F,EAKA,YAAA/H,SAAA,WACE,IAAIza,EAAS5kC,KAAKonD,GAAIS,SAAS7nD,KAAKqnD,OAAQ,GAC5C,OAAOziB,EAAkB5kC,KAAKonD,GAAIK,UAAUznD,KAAKqnD,OAASziB,GAC1C77B,EAAYC,aAAaC,IAAIi+C,eAAe8D,SAC9D,EAMA,YAAAz6C,MAAA,SAAMxD,GACJ,IAAI63B,EAAS5kC,KAAKonD,GAAIS,SAAS7nD,KAAKqnD,OAAQ,GAC5C,OAAOziB,GAAU73B,GAAO,IAAIhE,EAAYC,aAAaC,IAAIu+C,OACpCF,OAAOtnD,KAAKonD,GAAIW,WAAW/nD,KAAKqnD,OAASziB,GAAS5kC,KAAKonD,IAC5D,IAClB,EAKO,EAAA6D,wBAAP,SAA+B9C,GAC7BA,EAAQC,YAAY,EACtB,EAMO,EAAA8C,YAAP,SAAmB/C,EAA8B9I,GAC/C8I,EAAQgD,cAAc,EAAG9L,EAAUt2C,EAAYC,aAAaC,IAAIi+C,eAAe8D,UACjF,EAMO,EAAAI,SAAP,SAAgBjD,EAA8BkD,GAC5ClD,EAAQG,eAAe,EAAG+C,EAAa,EACzC,EAMO,EAAAC,sBAAP,SAA6BnD,GAE3B,OADaA,EAAQW,WAEvB,EAEO,EAAAyC,yBAAP,SACIpD,EAA8B9I,EAC9BgM,GAIF,OAHAjM,EAAmB6L,wBAAwB9C,GAC3C/I,EAAmB8L,YAAY/C,EAAS9I,GACxCD,EAAmBgM,SAASjD,EAASkD,GAC9BjM,EAAmBkM,sBAAsBnD,EAClD,EACF,EA/FA,GAAa,EAAA/I,mBAAkB,CAgGhC,CAjGyC,GAAAn2C,MAAA,EAAAA,IAAG,IAiG5C,CAjG4B,GAAAD,eAAA,EAAAA,aAAY,IAiGxC,CAjGD,CAAiB,EAAAD,cAAA,EAAAA,YAAW,KAqG5B,SAAiBA,IAAY,SAAAC,IAAa,SAAAC,GACxC,8BACE,KAAAm+C,GAAkC,KAElC,KAAAC,OAAS,CA2FX,QArFE,YAAAC,OAAA,SAAO5qD,EAAW0qD,GAGhB,OAFApnD,KAAKqnD,OAAS3qD,EACdsD,KAAKonD,GAAKA,EACHpnD,IACT,EAOO,EAAAwrD,iBAAP,SAAwBpE,EAA4Br6C,GAClD,OAAQA,GAAO,IAAI0+C,GAAWnE,OAAOF,EAAGK,UAAUL,EAAG1c,YAAc0c,EAAG1c,WAAY0c,EACpF,EAOO,EAAAsE,6BAAP,SAAoCtE,EAA4Br6C,GAE9D,OADAq6C,EAAGO,YAAYP,EAAG1c,WAAa,EAAAib,YAAYiC,qBACnC76C,GAAO,IAAI0+C,GAAWnE,OAAOF,EAAGK,UAAUL,EAAG1c,YAAc0c,EAAG1c,WAAY0c,EACpF,EAKA,YAAAuE,QAAA,WACE,IAAI/mB,EAAS5kC,KAAKonD,GAAIS,SAAS7nD,KAAKqnD,OAAQ,GAC5C,OAAOziB,EAAkB5kC,KAAKonD,GAAIK,UAAUznD,KAAKqnD,OAASziB,GAC1C77B,EAAYC,aAAaC,IAAIi+C,eAAe8D,SAC9D,EAMA,YAAA/L,UAAA,SAAUlyC,GACR,IAAI63B,EAAS5kC,KAAKonD,GAAIS,SAAS7nD,KAAKqnD,OAAQ,GAC5C,OAAOziB,GAAU73B,GAAO,IAAIhE,EAAYC,aAAaC,IAAI2iD,UACpCtE,OAAOtnD,KAAKonD,GAAIW,WAAW/nD,KAAKqnD,OAASziB,GAAS5kC,KAAKonD,IAC5D,IAClB,EAKO,EAAAyE,aAAP,SAAoB1D,GAClBA,EAAQC,YAAY,EACtB,EAMO,EAAA0D,WAAP,SAAkB3D,EAA8BwD,GAC9CxD,EAAQgD,cAAc,EAAGQ,EAAS5iD,EAAYC,aAAaC,IAAIi+C,eAAe8D,UAChF,EAMO,EAAAe,aAAP,SAAoB5D,EAA8B6D,GAChD7D,EAAQG,eAAe,EAAG0D,EAAiB,EAC7C,EAMO,EAAAC,WAAP,SAAkB9D,GAEhB,OADaA,EAAQW,WAEvB,EAEO,EAAAoD,cAAP,SACI/D,EAA8BwD,EAC9BK,GAIF,OAHAP,EAAQI,aAAa1D,GACrBsD,EAAQK,WAAW3D,EAASwD,GAC5BF,EAAQM,aAAa5D,EAAS6D,GACvBP,EAAQQ,WAAW9D,EAC5B,EACF,EA9FA,GAAa,EAAAsD,QAAO,CA+FrB,CAhGyC,GAAAxiD,MAAA,EAAAA,IAAG,IAgG5C,CAhG4B,GAAAD,eAAA,EAAAA,aAAY,IAgGxC,CAhGD,CAAiB,EAAAD,cAAA,EAAAA,YAAW,KAoG5B,SAAiBA,IAAY,SAAAC,IAAa,SAAAC,GACxC,8BACE,KAAAm+C,GAAkC,KAElC,KAAAC,OAAS,CAuEX,QAjEE,YAAAC,OAAA,SAAO5qD,EAAW0qD,GAGhB,OAFApnD,KAAKqnD,OAAS3qD,EACdsD,KAAKonD,GAAKA,EACHpnD,IACT,EAOO,EAAAmsD,sBAAP,SAA6B/E,EAA4Br6C,GACvD,OAAQA,GAAO,IAAIq/C,GAAgB9E,OAAOF,EAAGK,UAAUL,EAAG1c,YAAc0c,EAAG1c,WAAY0c,EACzF,EAOO,EAAAiF,kCAAP,SAAyCjF,EAA4Br6C,GAEnE,OADAq6C,EAAGO,YAAYP,EAAG1c,WAAa,EAAAib,YAAYiC,qBACnC76C,GAAO,IAAIq/C,GAAgB9E,OAAOF,EAAGK,UAAUL,EAAG1c,YAAc0c,EAAG1c,WAAY0c,EACzF,EAMA,YAAA/H,SAAA,SAAStyC,GACP,IAAI63B,EAAS5kC,KAAKonD,GAAIS,SAAS7nD,KAAKqnD,OAAQ,GAC5C,OAAOziB,GAAU73B,GAAO,IAAIhE,EAAYC,aAAaC,IAAI2iD,UACpCtE,OAAOtnD,KAAKonD,GAAIW,WAAW/nD,KAAKqnD,OAASziB,GAAS5kC,KAAKonD,IAC5D,IAClB,EAKO,EAAAkF,kBAAP,SAAyBnE,GACvBA,EAAQC,YAAY,EACtB,EAMO,EAAA8C,YAAP,SAAmB/C,EAA8BoE,GAC/CpE,EAAQG,eAAe,EAAGiE,EAAgB,EAC5C,EAMO,EAAAC,gBAAP,SAAuBrE,GAErB,OADaA,EAAQW,WAEvB,EAEO,EAAA2D,mBAAP,SAA0BtE,EAA8BoE,GAGtD,OAFAH,EAAaE,kBAAkBnE,GAC/BiE,EAAalB,YAAY/C,EAASoE,GAC3BH,EAAaI,gBAAgBrE,EACtC,EACF,EA1EA,GAAa,EAAAiE,aAAY,CA2E1B,CA5EyC,GAAAnjD,MAAA,EAAAA,IAAG,IA4E5C,CA5E4B,GAAAD,eAAA,EAAAA,aAAY,IA4ExC,CA5ED,CAAiB,EAAAD,cAAA,EAAAA,YAAW,KAgF5B,SAAiBA,IAAY,SAAAC,IAAa,SAAAC,GACxC,8BACE,KAAAm+C,GAAkC,KAElC,KAAAC,OAAS,CAiDX,QA3CE,YAAAC,OAAA,SAAO5qD,EAAW0qD,GAGhB,OAFApnD,KAAKqnD,OAAS3qD,EACdsD,KAAKonD,GAAKA,EACHpnD,IACT,EAKA,YAAAigD,UAAA,WACE,OAAOjgD,KAAKonD,GAAIsF,WAAW1sD,KAAKqnD,OAClC,EAKA,YAAAsF,YAAA,WACE,OAAO3sD,KAAKonD,GAAIK,UAAUznD,KAAKqnD,OAAS,EAC1C,EAKA,YAAAuF,YAAA,WACE,OAAO5sD,KAAKonD,GAAIK,UAAUznD,KAAKqnD,OAAS,EAC1C,EASO,EAAAwF,cAAP,SACI1E,EAA8B2E,EAAoBC,EAClDC,GAKF,OAJA7E,EAAQ8E,KAAK,EAAG,IAChB9E,EAAQ+E,WAAWF,GACnB7E,EAAQ+E,WAAWH,GACnB5E,EAAQ+E,WAAWJ,GACZ3E,EAAQvjB,QACjB,EACF,EApDA,GAAa,EAAAuoB,QAAO,CAqDrB,CAtDyC,GAAAlkD,MAAA,EAAAA,IAAG,IAsD5C,CAtD4B,GAAAD,eAAA,EAAAA,aAAY,IAsDxC,CAtDD,CAAiB,EAAAD,cAAA,EAAAA,YAAW,KA0D5B,SAAiBA,IAAY,SAAAC,IAAa,SAAAC,GACxC,8BACE,KAAAm+C,GAAkC,KAElC,KAAAC,OAAS,CAgJX,QA1IE,YAAAC,OAAA,SAAO5qD,EAAW0qD,GAGhB,OAFApnD,KAAKqnD,OAAS3qD,EACdsD,KAAKonD,GAAKA,EACHpnD,IACT,EAOO,EAAAotD,kBAAP,SAAyBhG,EAA4Br6C,GACnD,OAAQA,GAAO,IAAIsgD,GAAY/F,OAAOF,EAAGK,UAAUL,EAAG1c,YAAc0c,EAAG1c,WAAY0c,EACrF,EAOO,EAAAkG,8BAAP,SAAqClG,EAA4Br6C,GAE/D,OADAq6C,EAAGO,YAAYP,EAAG1c,WAAa,EAAAib,YAAYiC,qBACnC76C,GAAO,IAAIsgD,GAAY/F,OAAOF,EAAGK,UAAUL,EAAG1c,YAAc0c,EAAG1c,WAAY0c,EACrF,EAKA,YAAAnH,UAAA,WACE,IAAIrb,EAAS5kC,KAAKonD,GAAIS,SAAS7nD,KAAKqnD,OAAQ,GAC5C,OAAOziB,EAAS5kC,KAAKonD,GAAIsF,WAAW1sD,KAAKqnD,OAASziB,GAAU,CAC9D,EAOA,YAAA2oB,WAAA,SAAW/3C,EAAezI,GACxB,IAAI63B,EAAS5kC,KAAKonD,GAAIS,SAAS7nD,KAAKqnD,OAAQ,GAC5C,OAAOziB,GAAU73B,GAAO,IAAIhE,EAAYC,aAAaC,IAAIkkD,SACpC7F,OAAOtnD,KAAKonD,GAAIY,SAAShoD,KAAKqnD,OAASziB,GAAkB,GAARpvB,EAAYxV,KAAKonD,IACvE,IAClB,EAKA,YAAAoG,iBAAA,WACE,IAAI5oB,EAAS5kC,KAAKonD,GAAIS,SAAS7nD,KAAKqnD,OAAQ,GAC5C,OAAOziB,EAAS5kC,KAAKonD,GAAIa,aAAajoD,KAAKqnD,OAASziB,GAAU,CAChE,EAOA,YAAA6oB,YAAA,SAAYj4C,EAAezI,GACzB,IAAI63B,EAAS5kC,KAAKonD,GAAIS,SAAS7nD,KAAKqnD,OAAQ,GAC5C,OAAOziB,GAAU73B,GAAO,IAAIhE,EAAYC,aAAaC,IAAIkkD,SACpC7F,OAAOtnD,KAAKonD,GAAIY,SAAShoD,KAAKqnD,OAASziB,GAAkB,GAARpvB,EAAYxV,KAAKonD,IACvE,IAClB,EAKA,YAAAsG,kBAAA,WACE,IAAI9oB,EAAS5kC,KAAKonD,GAAIS,SAAS7nD,KAAKqnD,OAAQ,GAC5C,OAAOziB,EAAS5kC,KAAKonD,GAAIa,aAAajoD,KAAKqnD,OAASziB,GAAU,CAChE,EAKO,EAAA+oB,cAAP,SAAqBxF,GACnBA,EAAQC,YAAY,EACtB,EAMO,EAAAwF,aAAP,SAAoBzF,EAA8BlI,GAChDkI,EAAQgD,cAAc,EAAGlL,EAAW,EACtC,EAMO,EAAA4N,cAAP,SAAqB1F,EAA8B2F,GACjD3F,EAAQG,eAAe,EAAGwF,EAAkB,EAC9C,EAMO,EAAAC,sBAAP,SAA6B5F,EAA8BS,GACzDT,EAAQK,YAAY,GAAII,EAAU,EACpC,EAMO,EAAAoF,eAAP,SAAsB7F,EAA8B8F,GAClD9F,EAAQG,eAAe,EAAG2F,EAAmB,EAC/C,EAMO,EAAAC,uBAAP,SAA8B/F,EAA8BS,GAC1DT,EAAQK,YAAY,GAAII,EAAU,EACpC,EAMO,EAAAuF,YAAP,SAAmBhG,GAEjB,OADaA,EAAQW,WAEvB,EAEO,EAAAsF,eAAP,SACIjG,EAA8BlI,EAAmB6N,EACjDG,GAKF,OAJAZ,EAASM,cAAcxF,GACvBkF,EAASO,aAAazF,EAASlI,GAC/BoN,EAASQ,cAAc1F,EAAS2F,GAChCT,EAASW,eAAe7F,EAAS8F,GAC1BZ,EAASc,YAAYhG,EAC9B,EACF,EAnJA,GAAa,EAAAkF,SAAQ,CAoJtB,CArJyC,GAAApkD,MAAA,EAAAA,IAAG,IAqJ5C,CArJ4B,GAAAD,eAAA,EAAAA,aAAY,IAqJxC,CArJD,CAAiB,EAAAD,cAAA,EAAAA,YAAW,KAyJ5B,SAAiBA,IAAY,SAAAC,IAAa,SAAAC,GACxC,8BACE,KAAAm+C,GAAkC,KAElC,KAAAC,OAAS,CAodX,QA9cE,YAAAC,OAAA,SAAO5qD,EAAW0qD,GAGhB,OAFApnD,KAAKqnD,OAAS3qD,EACdsD,KAAKonD,GAAKA,EACHpnD,IACT,EAOO,EAAAquD,cAAP,SAAqBjH,EAA4Br6C,GAC/C,OAAQA,GAAO,IAAImwC,GAAQoK,OAAOF,EAAGK,UAAUL,EAAG1c,YAAc0c,EAAG1c,WAAY0c,EACjF,EAOO,EAAAkH,0BAAP,SAAiClH,EAA4Br6C,GAE3D,OADAq6C,EAAGO,YAAYP,EAAG1c,WAAa,EAAAib,YAAYiC,qBACnC76C,GAAO,IAAImwC,GAAQoK,OAAOF,EAAGK,UAAUL,EAAG1c,YAAc0c,EAAG1c,WAAY0c,EACjF,EAQA,YAAAnrD,KAAA,SAAKmtD,GACH,IAAIxkB,EAAS5kC,KAAKonD,GAAIS,SAAS7nD,KAAKqnD,OAAQ,GAC5C,OAAOziB,EAAS5kC,KAAKonD,GAAIiC,SAASrpD,KAAKqnD,OAASziB,EAAQwkB,GAAoB,IAC9E,EAQA,YAAAmF,UAAA,SAAUnF,GACR,IAAIxkB,EAAS5kC,KAAKonD,GAAIS,SAAS7nD,KAAKqnD,OAAQ,GAC5C,OAAOziB,EAAS5kC,KAAKonD,GAAIiC,SAASrpD,KAAKqnD,OAASziB,EAAQwkB,GAAoB,IAC9E,EAQA,YAAA3D,OAAA,SAAO2D,GACL,IAAIxkB,EAAS5kC,KAAKonD,GAAIS,SAAS7nD,KAAKqnD,OAAQ,GAC5C,OAAOziB,EAAS5kC,KAAKonD,GAAIiC,SAASrpD,KAAKqnD,OAASziB,EAAQwkB,GAAoB,IAC9E,EAKA,YAAAoF,aAAA,WACE,IAAI5pB,EAAS5kC,KAAKonD,GAAIS,SAAS7nD,KAAKqnD,OAAQ,IAC5C,OAAOziB,EAAS5kC,KAAKonD,GAAIK,UAAUznD,KAAKqnD,OAASziB,GAAU,CAC7D,EAKA,YAAApvB,MAAA,WACE,IAAIovB,EAAS5kC,KAAKonD,GAAIS,SAAS7nD,KAAKqnD,OAAQ,IAC5C,OAAOziB,EAAS5kC,KAAKonD,GAAIsF,WAAW1sD,KAAKqnD,OAASziB,GAAU,CAC9D,EAQA,YAAAqY,OAAA,SAAOmM,GACL,IAAIxkB,EAAS5kC,KAAKonD,GAAIS,SAAS7nD,KAAKqnD,OAAQ,IAC5C,OAAOziB,EAAS5kC,KAAKonD,GAAIiC,SAASrpD,KAAKqnD,OAASziB,EAAQwkB,GAAoB,IAC9E,EAKA,YAAA1qD,KAAA,WACE,IAAIkmC,EAAS5kC,KAAKonD,GAAIS,SAAS7nD,KAAKqnD,OAAQ,IAC5C,OAAOziB,EAAkB5kC,KAAKonD,GAAIK,UAAUznD,KAAKqnD,OAASziB,GAC1C77B,EAAYC,aAAaC,IAAIk+C,SAASsH,SACxD,EAQA,YAAAC,sBAAA,SAAsBtF,GACpB,IAAIxkB,EAAS5kC,KAAKonD,GAAIS,SAAS7nD,KAAKqnD,OAAQ,IAC5C,OAAOziB,EAAS5kC,KAAKonD,GAAIiC,SAASrpD,KAAKqnD,OAASziB,EAAQwkB,GAAoB,IAC9E,EASA,YAAArrC,OAAA,SAAOvI,EAAe4zC,GACpB,IAAIxkB,EAAS5kC,KAAKonD,GAAIS,SAAS7nD,KAAKqnD,OAAQ,IAC5C,OAAOziB,EAAS5kC,KAAKonD,GAAIiC,SAASrpD,KAAKonD,GAAIY,SAAShoD,KAAKqnD,OAASziB,GAAkB,EAARpvB,EAAW4zC,GAAoB,IAC7G,EAKA,YAAAvK,aAAA,WACE,IAAIja,EAAS5kC,KAAKonD,GAAIS,SAAS7nD,KAAKqnD,OAAQ,IAC5C,OAAOziB,EAAS5kC,KAAKonD,GAAIa,aAAajoD,KAAKqnD,OAASziB,GAAU,CAChE,EASA,YAAAH,QAAA,SAAQjvB,EAAe4zC,GACrB,IAAIxkB,EAAS5kC,KAAKonD,GAAIS,SAAS7nD,KAAKqnD,OAAQ,IAC5C,OAAOziB,EAAS5kC,KAAKonD,GAAIiC,SAASrpD,KAAKonD,GAAIY,SAAShoD,KAAKqnD,OAASziB,GAAkB,EAARpvB,EAAW4zC,GAAoB,IAC7G,EAKA,YAAA1J,cAAA,WACE,IAAI9a,EAAS5kC,KAAKonD,GAAIS,SAAS7nD,KAAKqnD,OAAQ,IAC5C,OAAOziB,EAAS5kC,KAAKonD,GAAIa,aAAajoD,KAAKqnD,OAASziB,GAAU,CAChE,EAOA,YAAA17B,WAAA,SAAWsM,EAAezI,GAExB,IAAI63B,EAAS5kC,KAAKonD,GAAIS,SAAS7nD,KAAKqnD,OAAQ,IAC5C,OAAOziB,GAAU73B,GAAO,IAAIhE,EAAYC,aAAaC,IAAIM,WACpC+9C,OAAOtnD,KAAKonD,GAAIW,WAAW/nD,KAAKonD,GAAIY,SAAShoD,KAAKqnD,OAASziB,GAAkB,EAARpvB,GAAYxV,KAAKonD,IAC3F,IAClB,EAKA,YAAAvH,iBAAA,WACE,IAAIjb,EAAS5kC,KAAKonD,GAAIS,SAAS7nD,KAAKqnD,OAAQ,IAC5C,OAAOziB,EAAS5kC,KAAKonD,GAAIa,aAAajoD,KAAKqnD,OAASziB,GAAU,CAChE,EAMA,YAAA+pB,eAAA,SAAen5C,GACb,IAAIovB,EAAS5kC,KAAKonD,GAAIS,SAAS7nD,KAAKqnD,OAAQ,IAC5C,OAAOziB,EAAS5kC,KAAKonD,GAAIK,UAAUznD,KAAKonD,GAAIY,SAAShoD,KAAKqnD,OAASziB,GAAkB,EAARpvB,GAAa,CAC5F,EAKA,YAAAo5C,qBAAA,WACE,IAAIhqB,EAAS5kC,KAAKonD,GAAIS,SAAS7nD,KAAKqnD,OAAQ,IAC5C,OAAOziB,EAAS5kC,KAAKonD,GAAIa,aAAajoD,KAAKqnD,OAASziB,GAAU,CAChE,EAKA,YAAAiqB,oBAAA,WACE,IAAIjqB,EAAS5kC,KAAKonD,GAAIS,SAAS7nD,KAAKqnD,OAAQ,IAC5C,OAAOziB,EACH,IAAI5mC,WACAgC,KAAKonD,GAAI0H,QAAQ5uD,OAAQF,KAAKonD,GAAI0H,QAAQjpD,WAAa7F,KAAKonD,GAAIY,SAAShoD,KAAKqnD,OAASziB,GACvF5kC,KAAKonD,GAAIa,aAAajoD,KAAKqnD,OAASziB,IACxC,IACN,EASA,YAAAmqB,eAAA,SAAev5C,EAAe4zC,GAC5B,IAAIxkB,EAAS5kC,KAAKonD,GAAIS,SAAS7nD,KAAKqnD,OAAQ,IAC5C,OAAOziB,EAAS5kC,KAAKonD,GAAIiC,SAASrpD,KAAKonD,GAAIY,SAAShoD,KAAKqnD,OAASziB,GAAkB,EAARpvB,EAAW4zC,GAAoB,IAC7G,EAKA,YAAA4F,qBAAA,WACE,IAAIpqB,EAAS5kC,KAAKonD,GAAIS,SAAS7nD,KAAKqnD,OAAQ,IAC5C,OAAOziB,EAAS5kC,KAAKonD,GAAIa,aAAajoD,KAAKqnD,OAASziB,GAAU,CAChE,EAKO,EAAAqqB,UAAP,SAAiB9G,GACfA,EAAQC,YAAY,GACtB,EAMO,EAAA8G,QAAP,SAAe/G,EAA8BgH,GAC3ChH,EAAQG,eAAe,EAAG6G,EAAY,EACxC,EAMO,EAAAC,aAAP,SAAoBjH,EAA8BkH,GAChDlH,EAAQG,eAAe,EAAG+G,EAAiB,EAC7C,EAMO,EAAAC,UAAP,SAAiBnH,EAA8BoH,GAC7CpH,EAAQG,eAAe,EAAGiH,EAAc,EAC1C,EAMO,EAAAC,gBAAP,SAAuBrH,EAA8BqG,GACnDrG,EAAQgD,cAAc,EAAGqD,EAAc,EACzC,EAMO,EAAAiB,SAAP,SAAgBtH,EAA8B3yC,GAC5C2yC,EAAQgD,cAAc,EAAG31C,EAAO,EAClC,EAMO,EAAAk6C,UAAP,SAAiBvH,EAA8BwH,GAC7CxH,EAAQG,eAAe,EAAGqH,EAAc,EAC1C,EAMO,EAAAC,QAAP,SAAezH,EAA8BzpD,GAC3CypD,EAAQgD,cAAc,EAAGzsD,EAAMqK,EAAYC,aAAaC,IAAIk+C,SAASsH,UACvE,EAMO,EAAAoB,yBAAP,SAAgC1H,EAA8B2H,GAC5D3H,EAAQG,eAAe,EAAGwH,EAA6B,EACzD,EAMO,EAAAC,UAAP,SAAiB5H,EAA8B6H,GAC7C7H,EAAQG,eAAe,EAAG0H,EAAc,EAC1C,EAOO,EAAAC,mBAAP,SAA0B9H,EAA8BxpD,GACtDwpD,EAAQK,YAAY,EAAG7pD,EAAK9B,OAAQ,GACpC,IAAK,IAAIH,EAAIiC,EAAK9B,OAAS,EAAGH,GAAK,EAAGA,IACpCyrD,EAAQM,UAAU9pD,EAAKjC,IAEzB,OAAOyrD,EAAQO,WACjB,EAMO,EAAAwH,kBAAP,SAAyB/H,EAA8BS,GACrDT,EAAQK,YAAY,EAAGI,EAAU,EACnC,EAMO,EAAAuH,WAAP,SAAkBhI,EAA8BiI,GAC9CjI,EAAQG,eAAe,EAAG8H,EAAe,EAC3C,EAOO,EAAAC,oBAAP,SAA2BlI,EAA8BxpD,GACvDwpD,EAAQK,YAAY,EAAG7pD,EAAK9B,OAAQ,GACpC,IAAK,IAAIH,EAAIiC,EAAK9B,OAAS,EAAGH,GAAK,EAAGA,IACpCyrD,EAAQM,UAAU9pD,EAAKjC,IAEzB,OAAOyrD,EAAQO,WACjB,EAMO,EAAA4H,mBAAP,SAA0BnI,EAA8BS,GACtDT,EAAQK,YAAY,EAAGI,EAAU,EACnC,EAMO,EAAA2H,cAAP,SAAqBpI,EAA8BqI,GACjDrI,EAAQG,eAAe,GAAIkI,EAAkB,EAC/C,EAOO,EAAAC,uBAAP,SAA8BtI,EAA8BxpD,GAC1DwpD,EAAQK,YAAY,EAAG7pD,EAAK9B,OAAQ,GACpC,IAAK,IAAIH,EAAIiC,EAAK9B,OAAS,EAAGH,GAAK,EAAGA,IACpCyrD,EAAQM,UAAU9pD,EAAKjC,IAEzB,OAAOyrD,EAAQO,WACjB,EAMO,EAAAgI,sBAAP,SAA6BvI,EAA8BS,GACzDT,EAAQK,YAAY,EAAGI,EAAU,EACnC,EAMO,EAAA+H,kBAAP,SAAyBxI,EAA8ByI,GACrDzI,EAAQG,eAAe,GAAIsI,EAAsB,EACnD,EAOO,EAAAC,2BAAP,SAAkC1I,EAA8BxpD,GAC9DwpD,EAAQK,YAAY,EAAG7pD,EAAK9B,OAAQ,GACpC,IAAK,IAAIH,EAAIiC,EAAK9B,OAAS,EAAGH,GAAK,EAAGA,IACpCyrD,EAAQ2I,SAASnyD,EAAKjC,IAExB,OAAOyrD,EAAQO,WACjB,EAMO,EAAAqI,0BAAP,SAAiC5I,EAA8BS,GAC7DT,EAAQK,YAAY,EAAGI,EAAU,EACnC,EAMO,EAAAoI,kBAAP,SAAyB7I,EAA8B8I,GACrD9I,EAAQG,eAAe,GAAI2I,EAAsB,EACnD,EAOO,EAAAC,2BAAP,SAAkC/I,EAA8BxpD,GAC9DwpD,EAAQK,YAAY,EAAG7pD,EAAK9B,OAAQ,GACpC,IAAK,IAAIH,EAAIiC,EAAK9B,OAAS,EAAGH,GAAK,EAAGA,IACpCyrD,EAAQM,UAAU9pD,EAAKjC,IAEzB,OAAOyrD,EAAQO,WACjB,EAMO,EAAAyI,0BAAP,SAAiChJ,EAA8BS,GAC7DT,EAAQK,YAAY,EAAGI,EAAU,EACnC,EAMO,EAAAwI,QAAP,SAAejJ,GAEb,OADaA,EAAQW,WAEvB,EAEO,EAAAuI,WAAP,SACIlJ,EAA8BgH,EAAgCE,EAC9DE,EAAkCf,EAAsBh5C,EAAem6C,EACvEjxD,EAA6CoxD,EAC7CE,EAAkCI,EAAmCI,EACrEI,EAA0CK,GAe5C,OAdA/T,EAAK+R,UAAU9G,GACfjL,EAAKgS,QAAQ/G,EAASgH,GACtBjS,EAAKkS,aAAajH,EAASkH,GAC3BnS,EAAKoS,UAAUnH,EAASoH,GACxBrS,EAAKsS,gBAAgBrH,EAASqG,GAC9BtR,EAAKuS,SAAStH,EAAS3yC,GACvB0nC,EAAKwS,UAAUvH,EAASwH,GACxBzS,EAAK0S,QAAQzH,EAASzpD,GACtBw+C,EAAK2S,yBAAyB1H,EAAS2H,GACvC5S,EAAK6S,UAAU5H,EAAS6H,GACxB9S,EAAKiT,WAAWhI,EAASiI,GACzBlT,EAAKqT,cAAcpI,EAASqI,GAC5BtT,EAAKyT,kBAAkBxI,EAASyI,GAChC1T,EAAK8T,kBAAkB7I,EAAS8I,GACzB/T,EAAKkU,QAAQjJ,EACtB,EACF,EAvdA,GAAa,EAAAjL,KAAI,CAwdlB,CAzdyC,GAAAj0C,MAAA,EAAAA,IAAG,IAyd5C,CAzd4B,GAAAD,eAAA,EAAAA,aAAY,IAydxC,CAzdD,CAAiB,EAAAD,cAAA,EAAAA,YAAW,KA6d5B,SAAiBA,IAAY,SAAAC,IAAa,SAAAC,GACxC,8BACE,KAAAm+C,GAAkC,KAElC,KAAAC,OAAS,CAiHX,QA3GE,YAAAC,OAAA,SAAO5qD,EAAW0qD,GAGhB,OAFApnD,KAAKqnD,OAAS3qD,EACdsD,KAAKonD,GAAKA,EACHpnD,IACT,EAOO,EAAAsxD,mBAAP,SAA0BlK,EAA4Br6C,GACpD,OAAQA,GAAO,IAAIwkD,GAAajK,OAAOF,EAAGK,UAAUL,EAAG1c,YAAc0c,EAAG1c,WAAY0c,EACtF,EAOO,EAAAoK,+BAAP,SAAsCpK,EAA4Br6C,GAEhE,OADAq6C,EAAGO,YAAYP,EAAG1c,WAAa,EAAAib,YAAYiC,qBACnC76C,GAAO,IAAIwkD,GAAajK,OAAOF,EAAGK,UAAUL,EAAG1c,YAAc0c,EAAG1c,WAAY0c,EACtF,EAQA,YAAAnrD,KAAA,SAAKmtD,GACH,IAAIxkB,EAAS5kC,KAAKonD,GAAIS,SAAS7nD,KAAKqnD,OAAQ,GAC5C,OAAOziB,EAAS5kC,KAAKonD,GAAIiC,SAASrpD,KAAKqnD,OAASziB,EAAQwkB,GAAoB,IAC9E,EAQA,YAAAmF,UAAA,SAAUnF,GACR,IAAIxkB,EAAS5kC,KAAKonD,GAAIS,SAAS7nD,KAAKqnD,OAAQ,GAC5C,OAAOziB,EAAS5kC,KAAKonD,GAAIiC,SAASrpD,KAAKqnD,OAASziB,EAAQwkB,GAAoB,IAC9E,EAMA,YAAA1qD,KAAA,SAAKqO,GACH,IAAI63B,EAAS5kC,KAAKonD,GAAIS,SAAS7nD,KAAKqnD,OAAQ,GAC5C,OAAOziB,GAAU73B,GAAO,IAAIhE,EAAYC,aAAaC,IAAI2iD,UACpCtE,OAAOtnD,KAAKonD,GAAIW,WAAW/nD,KAAKqnD,OAASziB,GAAS5kC,KAAKonD,IAC5D,IAClB,EAKO,EAAAqK,eAAP,SAAsBtJ,GACpBA,EAAQC,YAAY,EACtB,EAMO,EAAA8G,QAAP,SAAe/G,EAA8BgH,GAC3ChH,EAAQG,eAAe,EAAG6G,EAAY,EACxC,EAMO,EAAAC,aAAP,SAAoBjH,EAA8BkH,GAChDlH,EAAQG,eAAe,EAAG+G,EAAiB,EAC7C,EAMO,EAAAO,QAAP,SAAezH,EAA8BuJ,GAC3CvJ,EAAQG,eAAe,EAAGoJ,EAAY,EACxC,EAMO,EAAAC,aAAP,SAAoBxJ,GAElB,OADaA,EAAQW,WAEvB,EAEO,EAAA8I,gBAAP,SACIzJ,EAA8BgH,EAAgCE,EAC9DqC,GAKF,OAJAH,EAAUE,eAAetJ,GACzBoJ,EAAUrC,QAAQ/G,EAASgH,GAC3BoC,EAAUnC,aAAajH,EAASkH,GAChCkC,EAAU3B,QAAQzH,EAASuJ,GACpBH,EAAUI,aAAaxJ,EAChC,EACF,EApHA,GAAa,EAAAoJ,UAAS,CAqHvB,CAtHyC,GAAAtoD,MAAA,EAAAA,IAAG,IAsH5C,CAtH4B,GAAAD,eAAA,EAAAA,aAAY,IAsHxC,CAtHD,CAAiB,EAAAD,cAAA,EAAAA,YAAW,KA0H5B,SAAiBA,IAAY,SAAAC,IAAa,SAAAC,GACxC,8BACE,KAAAm+C,GAAkC,KAElC,KAAAC,OAAS,CA6GX,QAvGE,YAAAC,OAAA,SAAO5qD,EAAW0qD,GAGhB,OAFApnD,KAAKqnD,OAAS3qD,EACdsD,KAAKonD,GAAKA,EACHpnD,IACT,EAOO,EAAA6xD,kBAAP,SAAyBzK,EAA4Br6C,GACnD,OAAQA,GAAO,IAAI6+C,GAAYtE,OAAOF,EAAGK,UAAUL,EAAG1c,YAAc0c,EAAG1c,WAAY0c,EACrF,EAOO,EAAA0K,8BAAP,SAAqC1K,EAA4Br6C,GAE/D,OADAq6C,EAAGO,YAAYP,EAAG1c,WAAa,EAAAib,YAAYiC,qBACnC76C,GAAO,IAAI6+C,GAAYtE,OAAOF,EAAGK,UAAUL,EAAG1c,YAAc0c,EAAG1c,WAAY0c,EACrF,EAQA,YAAA+B,WAAA,SAAWC,GACT,IAAIxkB,EAAS5kC,KAAKonD,GAAIS,SAAS7nD,KAAKqnD,OAAQ,GAC5C,OAAOziB,EAAS5kC,KAAKonD,GAAIiC,SAASrpD,KAAKqnD,OAASziB,EAAQwkB,GAAoB,IAC9E,EAKA,YAAAnK,UAAA,WACE,IAAIra,EAAS5kC,KAAKonD,GAAIS,SAAS7nD,KAAKqnD,OAAQ,GAC5C,OAAOziB,EAAkB5kC,KAAKonD,GAAI2K,UAAU/xD,KAAKqnD,OAASziB,GAC1C77B,EAAYC,aAAaC,IAAIi2C,cAAc8S,IAC7D,EAMA,YAAA30D,MAAA,SAAmC0P,GACjC,IAAI63B,EAAS5kC,KAAKonD,GAAIS,SAAS7nD,KAAKqnD,OAAQ,GAC5C,OAAOziB,EAAS5kC,KAAKonD,GAAI6K,QAAQllD,EAAK/M,KAAKqnD,OAASziB,GAAU,IAChE,EAKO,EAAAstB,cAAP,SAAqB/J,GACnBA,EAAQC,YAAY,EACtB,EAMO,EAAAqB,cAAP,SAAqBtB,EAA8BuB,GACjDvB,EAAQG,eAAe,EAAGoB,EAAkB,EAC9C,EAMO,EAAAqC,aAAP,SAAoB5D,EAA8BlJ,GAChDkJ,EAAQoC,aAAa,EAAGtL,EAAWl2C,EAAYC,aAAaC,IAAIi2C,cAAc8S,KAChF,EAMO,EAAAzI,SAAP,SAAgBpB,EAA8BqB,GAC5CrB,EAAQG,eAAe,EAAGkB,EAAa,EACzC,EAMO,EAAA2I,YAAP,SAAmBhK,GAEjB,OADaA,EAAQW,WAEvB,EAEO,EAAAsJ,eAAP,SACIjK,EAA8BuB,EAC9BzK,EAAuDuK,GAKzD,OAJAoC,EAASsG,cAAc/J,GACvByD,EAASnC,cAActB,EAASuB,GAChCkC,EAASG,aAAa5D,EAASlJ,GAC/B2M,EAASrC,SAASpB,EAASqB,GACpBoC,EAASuG,YAAYhK,EAC9B,EACF,EAhHA,GAAa,EAAAyD,SAAQ,CAiHtB,CAlHyC,GAAA3iD,MAAA,EAAAA,IAAG,IAkH5C,CAlH4B,GAAAD,eAAA,EAAAA,aAAY,IAkHxC,CAlHD,CAAiB,EAAAD,cAAA,EAAAA,YAAW,KAsH5B,SAAiBA,IAAY,SAAAC,IAAa,SAAAC,GACxC,8BACE,KAAAm+C,GAAkC,KAElC,KAAAC,OAAS,CAyFX,QAnFE,YAAAC,OAAA,SAAO5qD,EAAW0qD,GAGhB,OAFApnD,KAAKqnD,OAAS3qD,EACdsD,KAAKonD,GAAKA,EACHpnD,IACT,EAOO,EAAAqyD,uBAAP,SAA8BjL,EAA4Br6C,GACxD,OAAQA,GAAO,IAAIulD,GAAiBhL,OAAOF,EAAGK,UAAUL,EAAG1c,YAAc0c,EAAG1c,WAAY0c,EAC1F,EAOO,EAAAmL,mCAAP,SAA0CnL,EAA4Br6C,GAEpE,OADAq6C,EAAGO,YAAYP,EAAG1c,WAAa,EAAAib,YAAYiC,qBACnC76C,GAAO,IAAIulD,GAAiBhL,OAAOF,EAAGK,UAAUL,EAAG1c,YAAc0c,EAAG1c,WAAY0c,EAC1F,EAQA,YAAA3B,OAAA,SAAO2D,GACL,IAAIxkB,EAAS5kC,KAAKonD,GAAIS,SAAS7nD,KAAKqnD,OAAQ,GAC5C,OAAOziB,EAAS5kC,KAAKonD,GAAIiC,SAASrpD,KAAKqnD,OAASziB,EAAQwkB,GAAoB,IAC9E,EAKA,YAAAv5C,QAAA,WACE,IAAI+0B,EAAS5kC,KAAKonD,GAAIS,SAAS7nD,KAAKqnD,OAAQ,GAC5C,OAAOziB,EAAS5kC,KAAKonD,GAAI8C,UAAUlqD,KAAKqnD,OAASziB,GAAU5kC,KAAKonD,GAAI+C,WAAW,EAAG,EACpF,EAKO,EAAAqI,mBAAP,SAA0BrK,GACxBA,EAAQC,YAAY,EACtB,EAMO,EAAAkH,UAAP,SAAiBnH,EAA8BoH,GAC7CpH,EAAQG,eAAe,EAAGiH,EAAc,EAC1C,EAMO,EAAAkD,WAAP,SAAkBtK,EAA8Bt4C,GAC9Cs4C,EAAQsC,cAAc,EAAG56C,EAASs4C,EAAQgC,WAAW,EAAG,GAC1D,EAMO,EAAAuI,iBAAP,SAAwBvK,GAEtB,OADaA,EAAQW,WAEvB,EAEO,EAAA6J,oBAAP,SACIxK,EAA8BoH,EAAkC1/C,GAIlE,OAHAyiD,EAAcE,mBAAmBrK,GACjCmK,EAAchD,UAAUnH,EAASoH,GACjC+C,EAAcG,WAAWtK,EAASt4C,GAC3ByiD,EAAcI,iBAAiBvK,EACxC,EACF,EA5FA,GAAa,EAAAmK,cAAa,CA6F3B,CA9FyC,GAAArpD,MAAA,EAAAA,IAAG,IA8F5C,CA9F4B,GAAAD,eAAA,EAAAA,aAAY,IA8FxC,CA9FD,CAAiB,EAAAD,cAAA,EAAAA,YAAW,KAkG5B,SAAiBA,IAAY,SAAAC,IAAa,SAAAC,GACxC,8BACE,KAAAm+C,GAAkC,KAElC,KAAAC,OAAS,CA6QX,QAvQE,YAAAC,OAAA,SAAO5qD,EAAW0qD,GAGhB,OAFApnD,KAAKqnD,OAAS3qD,EACdsD,KAAKonD,GAAKA,EACHpnD,IACT,EAOO,EAAA4yD,gBAAP,SAAuBxL,EAA4Br6C,GACjD,OAAQA,GAAO,IAAI1O,GAAUipD,OAAOF,EAAGK,UAAUL,EAAG1c,YAAc0c,EAAG1c,WAAY0c,EACnF,EAOO,EAAAyL,4BAAP,SAAmCzL,EAA4Br6C,GAE7D,OADAq6C,EAAGO,YAAYP,EAAG1c,WAAa,EAAAib,YAAYiC,qBACnC76C,GAAO,IAAI1O,GAAUipD,OAAOF,EAAGK,UAAUL,EAAG1c,YAAc0c,EAAG1c,WAAY0c,EACnF,EAQA,YAAAnrD,KAAA,SAAKmtD,GACH,IAAIxkB,EAAS5kC,KAAKonD,GAAIS,SAAS7nD,KAAKqnD,OAAQ,GAC5C,OAAOziB,EAAS5kC,KAAKonD,GAAIiC,SAASrpD,KAAKqnD,OAASziB,EAAQwkB,GAAoB,IAC9E,EAQA,YAAAmF,UAAA,SAAUnF,GACR,IAAIxkB,EAAS5kC,KAAKonD,GAAIS,SAAS7nD,KAAKqnD,OAAQ,GAC5C,OAAOziB,EAAS5kC,KAAKonD,GAAIiC,SAASrpD,KAAKqnD,OAASziB,EAAQwkB,GAAoB,IAC9E,EAMA,YAAAxqD,KAAA,SAAK4W,GACH,IAAIovB,EAAS5kC,KAAKonD,GAAIS,SAAS7nD,KAAKqnD,OAAQ,GAC5C,OAAOziB,EAAS5kC,KAAKonD,GAAI8C,UAAUlqD,KAAKonD,GAAIY,SAAShoD,KAAKqnD,OAASziB,GAAkB,EAARpvB,GAC7DxV,KAAKonD,GAAI+C,WAAW,EAAG,EACzC,EAKA,YAAA2I,WAAA,WACE,IAAIluB,EAAS5kC,KAAKonD,GAAIS,SAAS7nD,KAAKqnD,OAAQ,GAC5C,OAAOziB,EAAS5kC,KAAKonD,GAAIa,aAAajoD,KAAKqnD,OAASziB,GAAU,CAChE,EAKA,YAAAvkB,SAAA,WACE,IAAIukB,EAAS5kC,KAAKonD,GAAIS,SAAS7nD,KAAKqnD,OAAQ,IAC5C,OAAOziB,EAAkB5kC,KAAKonD,GAAIK,UAAUznD,KAAKqnD,OAASziB,GAC1C77B,EAAYC,aAAaC,IAAIi+C,eAAe8D,SAC9D,EAMA,YAAA+H,QAAA,SAAQv9C,GACN,IAAIovB,EAAS5kC,KAAKonD,GAAIS,SAAS7nD,KAAKqnD,OAAQ,IAC5C,OAAOziB,EAAS5kC,KAAKonD,GAAI2K,UAAU/xD,KAAKonD,GAAIY,SAAShoD,KAAKqnD,OAASziB,GAAUpvB,GAAS,CACxF,EAKA,YAAAw9C,cAAA,WACE,IAAIpuB,EAAS5kC,KAAKonD,GAAIS,SAAS7nD,KAAKqnD,OAAQ,IAC5C,OAAOziB,EAAS5kC,KAAKonD,GAAIa,aAAajoD,KAAKqnD,OAASziB,GAAU,CAChE,EAKA,YAAAquB,aAAA,WACE,IAAIruB,EAAS5kC,KAAKonD,GAAIS,SAAS7nD,KAAKqnD,OAAQ,IAC5C,OAAOziB,EACH,IAAIhnC,WACAoC,KAAKonD,GAAI0H,QAAQ5uD,OAAQF,KAAKonD,GAAI0H,QAAQjpD,WAAa7F,KAAKonD,GAAIY,SAAShoD,KAAKqnD,OAASziB,GACvF5kC,KAAKonD,GAAIa,aAAajoD,KAAKqnD,OAASziB,IACxC,IACN,EASA,YAAAsuB,WAAA,SAAW19C,EAAe4zC,GACxB,IAAIxkB,EAAS5kC,KAAKonD,GAAIS,SAAS7nD,KAAKqnD,OAAQ,IAC5C,OAAOziB,EAAS5kC,KAAKonD,GAAIiC,SAASrpD,KAAKonD,GAAIY,SAAShoD,KAAKqnD,OAASziB,GAAkB,EAARpvB,EAAW4zC,GAAoB,IAC7G,EAKA,YAAA+J,iBAAA,WACE,IAAIvuB,EAAS5kC,KAAKonD,GAAIS,SAAS7nD,KAAKqnD,OAAQ,IAC5C,OAAOziB,EAAS5kC,KAAKonD,GAAIa,aAAajoD,KAAKqnD,OAASziB,GAAU,CAChE,EAKO,EAAAwuB,YAAP,SAAmBjL,GACjBA,EAAQC,YAAY,EACtB,EAMO,EAAA8G,QAAP,SAAe/G,EAA8BgH,GAC3ChH,EAAQG,eAAe,EAAG6G,EAAY,EACxC,EAMO,EAAAC,aAAP,SAAoBjH,EAA8BkH,GAChDlH,EAAQG,eAAe,EAAG+G,EAAiB,EAC7C,EAMO,EAAAgE,QAAP,SAAelL,EAA8BmL,GAC3CnL,EAAQG,eAAe,EAAGgL,EAAY,EACxC,EAOO,EAAAC,iBAAP,SAAwBpL,EAA8BxpD,GACpDwpD,EAAQK,YAAY,EAAG7pD,EAAK9B,OAAQ,GACpC,IAAK,IAAIH,EAAIiC,EAAK9B,OAAS,EAAGH,GAAK,EAAGA,IACpCyrD,EAAQqL,SAAS70D,EAAKjC,IAExB,OAAOyrD,EAAQO,WACjB,EAMO,EAAA+K,gBAAP,SAAuBtL,EAA8BS,GACnDT,EAAQK,YAAY,EAAGI,EAAU,EACnC,EAMO,EAAA8K,YAAP,SAAmBvL,EAA8B9nC,GAC/C8nC,EAAQgD,cAAc,EAAG9qC,EAAUtX,EAAYC,aAAaC,IAAIi+C,eAAe8D,UACjF,EAMO,EAAA2I,WAAP,SAAkBxL,EAA8ByL,GAC9CzL,EAAQG,eAAe,EAAGsL,EAAe,EAC3C,EAOO,EAAAC,oBAAP,SAA2B1L,EAA8BxpD,GACvDwpD,EAAQK,YAAY,EAAG7pD,EAAK9B,OAAQ,GACpC,IAAK,IAAIH,EAAIiC,EAAK9B,OAAS,EAAGH,GAAK,EAAGA,IACpCyrD,EAAQ2L,QAAQn1D,EAAKjC,IAEvB,OAAOyrD,EAAQO,WACjB,EAMO,EAAAqL,mBAAP,SAA0B5L,EAA8BS,GACtDT,EAAQK,YAAY,EAAGI,EAAU,EACnC,EAMO,EAAAoL,cAAP,SAAqB7L,EAA8B8L,GACjD9L,EAAQG,eAAe,EAAG2L,EAAkB,EAC9C,EAOO,EAAAC,uBAAP,SAA8B/L,EAA8BxpD,GAC1DwpD,EAAQK,YAAY,EAAG7pD,EAAK9B,OAAQ,GACpC,IAAK,IAAIH,EAAIiC,EAAK9B,OAAS,EAAGH,GAAK,EAAGA,IACpCyrD,EAAQM,UAAU9pD,EAAKjC,IAEzB,OAAOyrD,EAAQO,WACjB,EAMO,EAAAyL,sBAAP,SAA6BhM,EAA8BS,GACzDT,EAAQK,YAAY,EAAGI,EAAU,EACnC,EAMO,EAAAwL,UAAP,SAAiBjM,GAEf,OADaA,EAAQW,WAEvB,EAEO,EAAAuL,aAAP,SACIlM,EAA8BgH,EAAgCE,EAC9DiE,EAAgCjzC,EAChCuzC,EAAmCK,GAQrC,OAPA51D,EAAO+0D,YAAYjL,GACnB9pD,EAAO6wD,QAAQ/G,EAASgH,GACxB9wD,EAAO+wD,aAAajH,EAASkH,GAC7BhxD,EAAOg1D,QAAQlL,EAASmL,GACxBj1D,EAAOq1D,YAAYvL,EAAS9nC,GAC5BhiB,EAAOs1D,WAAWxL,EAASyL,GAC3Bv1D,EAAO21D,cAAc7L,EAAS8L,GACvB51D,EAAO+1D,UAAUjM,EAC1B,EACF,EAhRA,GAAa,EAAA9pD,OAAM,CAiRpB,CAlRyC,GAAA4K,MAAA,EAAAA,IAAG,IAkR5C,CAlR4B,GAAAD,eAAA,EAAAA,aAAY,IAkRxC,CAlRD,CAAiB,EAAAD,cAAA,EAAAA,YAAW,KAsR5B,SAAiBA,IAAY,SAAAC,IAAa,SAAAC,GACxC,8BACE,KAAAm+C,GAAkC,KAElC,KAAAC,OAAS,CA6IX,QAvIE,YAAAC,OAAA,SAAO5qD,EAAW0qD,GAGhB,OAFApnD,KAAKqnD,OAAS3qD,EACdsD,KAAKonD,GAAKA,EACHpnD,IACT,EAOO,EAAAs0D,sBAAP,SAA6BlN,EAA4Br6C,GACvD,OAAQA,GAAO,IAAIwnD,GAAgBjN,OAAOF,EAAGK,UAAUL,EAAG1c,YAAc0c,EAAG1c,WAAY0c,EACzF,EAOO,EAAAoN,kCAAP,SAAyCpN,EAA4Br6C,GAEnE,OADAq6C,EAAGO,YAAYP,EAAG1c,WAAa,EAAAib,YAAYiC,qBACnC76C,GAAO,IAAIwnD,GAAgBjN,OAAOF,EAAGK,UAAUL,EAAG1c,YAAc0c,EAAG1c,WAAY0c,EACzF,EAMA,YAAAqN,OAAA,SAAO1nD,GACL,IAAI63B,EAAS5kC,KAAKonD,GAAIS,SAAS7nD,KAAKqnD,OAAQ,GAC5C,OAAOziB,GAAU73B,GAAO,IAAIhE,EAAYC,aAAaC,IAAI5K,QACpCipD,OAAOtnD,KAAKonD,GAAIW,WAAW/nD,KAAKqnD,OAASziB,GAAS5kC,KAAKonD,IAC5D,IAClB,EAMA,YAAAsN,QAAA,SAAQ3nD,GACN,IAAI63B,EAAS5kC,KAAKonD,GAAIS,SAAS7nD,KAAKqnD,OAAQ,GAC5C,OAAOziB,GAAU73B,GAAO,IAAIhE,EAAYC,aAAaC,IAAI5K,QACpCipD,OAAOtnD,KAAKonD,GAAIW,WAAW/nD,KAAKqnD,OAASziB,GAAS5kC,KAAKonD,IAC5D,IAClB,EAMA,YAAAxoD,KAAA,SAAK4W,GACH,IAAIovB,EAAS5kC,KAAKonD,GAAIS,SAAS7nD,KAAKqnD,OAAQ,GAC5C,OAAOziB,EAAS5kC,KAAKonD,GAAI8C,UAAUlqD,KAAKonD,GAAIY,SAAShoD,KAAKqnD,OAASziB,GAAkB,EAARpvB,GAC7DxV,KAAKonD,GAAI+C,WAAW,EAAG,EACzC,EAKA,YAAA2I,WAAA,WACE,IAAIluB,EAAS5kC,KAAKonD,GAAIS,SAAS7nD,KAAKqnD,OAAQ,GAC5C,OAAOziB,EAAS5kC,KAAKonD,GAAIa,aAAajoD,KAAKqnD,OAASziB,GAAU,CAChE,EAKO,EAAA+vB,kBAAP,SAAyBxM,GACvBA,EAAQC,YAAY,EACtB,EAMO,EAAAwM,UAAP,SAAiBzM,EAA8B0M,GAC7C1M,EAAQG,eAAe,EAAGuM,EAAc,EAC1C,EAMO,EAAAC,WAAP,SAAkB3M,EAA8B4M,GAC9C5M,EAAQG,eAAe,EAAGyM,EAAe,EAC3C,EAMO,EAAA1B,QAAP,SAAelL,EAA8BmL,GAC3CnL,EAAQG,eAAe,EAAGgL,EAAY,EACxC,EAOO,EAAAC,iBAAP,SAAwBpL,EAA8BxpD,GACpDwpD,EAAQK,YAAY,EAAG7pD,EAAK9B,OAAQ,GACpC,IAAK,IAAIH,EAAIiC,EAAK9B,OAAS,EAAGH,GAAK,EAAGA,IACpCyrD,EAAQqL,SAAS70D,EAAKjC,IAExB,OAAOyrD,EAAQO,WACjB,EAMO,EAAA+K,gBAAP,SAAuBtL,EAA8BS,GACnDT,EAAQK,YAAY,EAAGI,EAAU,EACnC,EAMO,EAAAoM,gBAAP,SAAuB7M,GAErB,OADaA,EAAQW,WAEvB,EAEO,EAAAmM,mBAAP,SACI9M,EAA8B0M,EAAkCE,EAChEzB,GAKF,OAJAiB,EAAaI,kBAAkBxM,GAC/BoM,EAAaK,UAAUzM,EAAS0M,GAChCN,EAAaO,WAAW3M,EAAS4M,GACjCR,EAAalB,QAAQlL,EAASmL,GACvBiB,EAAaS,gBAAgB7M,EACtC,EACF,EAhJA,GAAa,EAAAoM,aAAY,CAiJ1B,CAlJyC,GAAAtrD,MAAA,EAAAA,IAAG,IAkJ5C,CAlJ4B,GAAAD,eAAA,EAAAA,aAAY,IAkJxC,CAlJD,CAAiB,EAAAD,cAAA,EAAAA,YAAW,KAsJ5B,SAAiBA,IAAY,SAAAC,IAAa,SAAAC,GACxC,8BACE,KAAAm+C,GAAkC,KAElC,KAAAC,OAAS,CAidX,QA3cE,YAAAC,OAAA,SAAO5qD,EAAW0qD,GAGhB,OAFApnD,KAAKqnD,OAAS3qD,EACdsD,KAAKonD,GAAKA,EACHpnD,IACT,EAOO,EAAAk1D,mBAAP,SAA0B9N,EAA4Br6C,GACpD,OAAQA,GAAO,IAAIxD,GAAa+9C,OAAOF,EAAGK,UAAUL,EAAG1c,YAAc0c,EAAG1c,WAAY0c,EACtF,EAOO,EAAA+N,+BAAP,SAAsC/N,EAA4Br6C,GAEhE,OADAq6C,EAAGO,YAAYP,EAAG1c,WAAa,EAAAib,YAAYiC,qBACnC76C,GAAO,IAAIxD,GAAa+9C,OAAOF,EAAGK,UAAUL,EAAG1c,YAAc0c,EAAG1c,WAAY0c,EACtF,EAQA,YAAAnrD,KAAA,SAAKmtD,GACH,IAAIxkB,EAAS5kC,KAAKonD,GAAIS,SAAS7nD,KAAKqnD,OAAQ,GAC5C,OAAOziB,EAAS5kC,KAAKonD,GAAIiC,SAASrpD,KAAKqnD,OAASziB,EAAQwkB,GAAoB,IAC9E,EAQA,YAAAmF,UAAA,SAAUnF,GACR,IAAIxkB,EAAS5kC,KAAKonD,GAAIS,SAAS7nD,KAAKqnD,OAAQ,GAC5C,OAAOziB,EAAS5kC,KAAKonD,GAAIiC,SAASrpD,KAAKqnD,OAASziB,EAAQwkB,GAAoB,IAC9E,EAKA,YAAA1qD,KAAA,WACE,IAAIkmC,EAAS5kC,KAAKonD,GAAIS,SAAS7nD,KAAKqnD,OAAQ,GAC5C,OAAOziB,EAAkB5kC,KAAKonD,GAAIK,UAAUznD,KAAKqnD,OAASziB,GAC1C77B,EAAYC,aAAaC,IAAIoB,cAAc2gD,SAC7D,EAKA,YAAAl/C,EAAA,WACE,IAAI84B,EAAS5kC,KAAKonD,GAAIS,SAAS7nD,KAAKqnD,OAAQ,IAC5C,OAAOziB,EAAS5kC,KAAKonD,GAAIgO,YAAYp1D,KAAKqnD,OAASziB,GAAU,CAC/D,EAKA,YAAAloC,EAAA,WACE,IAAIkoC,EAAS5kC,KAAKonD,GAAIS,SAAS7nD,KAAKqnD,OAAQ,IAC5C,OAAOziB,EAAS5kC,KAAKonD,GAAI8C,UAAUlqD,KAAKqnD,OAASziB,GAAU5kC,KAAKonD,GAAI+C,WAAW,EAAG,EACpF,EAQA,YAAAp+C,EAAA,SAAEq9C,GACA,IAAIxkB,EAAS5kC,KAAKonD,GAAIS,SAAS7nD,KAAKqnD,OAAQ,IAC5C,OAAOziB,EAAS5kC,KAAKonD,GAAIiC,SAASrpD,KAAKqnD,OAASziB,EAAQwkB,GAAoB,IAC9E,EAMA,YAAAp9C,EAAA,SAAEe,GACA,IAAI63B,EAAS5kC,KAAKonD,GAAIS,SAAS7nD,KAAKqnD,OAAQ,IAC5C,OAAOziB,GAAU73B,GAAO,IAAIhE,EAAYC,aAAaC,IAAI5K,QACpCipD,OAAOtnD,KAAKonD,GAAIW,WAAW/nD,KAAKqnD,OAASziB,GAAS5kC,KAAKonD,IAC5D,IAClB,EAMA,YAAAn7C,EAAA,SAAEc,GACA,IAAI63B,EAAS5kC,KAAKonD,GAAIS,SAAS7nD,KAAKqnD,OAAQ,IAC5C,OAAOziB,GAAU73B,GAAO,IAAIhE,EAAYC,aAAaC,IAAIqzC,OACpCgL,OAAOtnD,KAAKonD,GAAIW,WAAW/nD,KAAKqnD,OAASziB,GAAS5kC,KAAKonD,IAC5D,IAClB,EAMA,YAAAl7C,OAAA,SAAOsJ,GACL,IAAIovB,EAAS5kC,KAAKonD,GAAIS,SAAS7nD,KAAKqnD,OAAQ,IAC5C,OAAOziB,EAAS5kC,KAAKonD,GAAIgO,YAAYp1D,KAAKonD,GAAIY,SAAShoD,KAAKqnD,OAASziB,GAAkB,EAARpvB,GAAa,CAC9F,EAKA,YAAA6/C,aAAA,WACE,IAAIzwB,EAAS5kC,KAAKonD,GAAIS,SAAS7nD,KAAKqnD,OAAQ,IAC5C,OAAOziB,EAAS5kC,KAAKonD,GAAIa,aAAajoD,KAAKqnD,OAASziB,GAAU,CAChE,EAKA,YAAAr4B,YAAA,WACE,IAAIq4B,EAAS5kC,KAAKonD,GAAIS,SAAS7nD,KAAKqnD,OAAQ,IAC5C,OAAOziB,EACH,IAAIjnC,aACAqC,KAAKonD,GAAI0H,QAAQ5uD,OAAQF,KAAKonD,GAAI0H,QAAQjpD,WAAa7F,KAAKonD,GAAIY,SAAShoD,KAAKqnD,OAASziB,GACvF5kC,KAAKonD,GAAIa,aAAajoD,KAAKqnD,OAASziB,IACxC,IACN,EAMA,YAAAz4B,KAAA,SAAKqJ,GACH,IAAIovB,EAAS5kC,KAAKonD,GAAIS,SAAS7nD,KAAKqnD,OAAQ,IAC5C,OAAOziB,EAAS5kC,KAAKonD,GAAI8C,UAAUlqD,KAAKonD,GAAIY,SAAShoD,KAAKqnD,OAASziB,GAAkB,EAARpvB,GAC7DxV,KAAKonD,GAAI+C,WAAW,EAAG,EACzC,EAKA,YAAA39C,WAAA,WACE,IAAIo4B,EAAS5kC,KAAKonD,GAAIS,SAAS7nD,KAAKqnD,OAAQ,IAC5C,OAAOziB,EAAS5kC,KAAKonD,GAAIa,aAAajoD,KAAKqnD,OAASziB,GAAU,CAChE,EASA,YAAAx4B,QAAA,SAAQoJ,EAAe4zC,GACrB,IAAIxkB,EAAS5kC,KAAKonD,GAAIS,SAAS7nD,KAAKqnD,OAAQ,IAC5C,OAAOziB,EAAS5kC,KAAKonD,GAAIiC,SAASrpD,KAAKonD,GAAIY,SAAShoD,KAAKqnD,OAASziB,GAAkB,EAARpvB,EAAW4zC,GAAoB,IAC7G,EAKA,YAAA38C,cAAA,WACE,IAAIm4B,EAAS5kC,KAAKonD,GAAIS,SAAS7nD,KAAKqnD,OAAQ,IAC5C,OAAOziB,EAAS5kC,KAAKonD,GAAIa,aAAajoD,KAAKqnD,OAASziB,GAAU,CAChE,EAOA,YAAAv4B,QAAA,SAAQmJ,EAAezI,GACrB,IAAI63B,EAAS5kC,KAAKonD,GAAIS,SAAS7nD,KAAKqnD,OAAQ,IAC5C,OAAOziB,GAAU73B,GAAO,IAAIhE,EAAYC,aAAaC,IAAI5K,QACpCipD,OAAOtnD,KAAKonD,GAAIW,WAAW/nD,KAAKonD,GAAIY,SAAShoD,KAAKqnD,OAASziB,GAAkB,EAARpvB,GAAYxV,KAAKonD,IAC3F,IAClB,EAKA,YAAA16C,cAAA,WACE,IAAIk4B,EAAS5kC,KAAKonD,GAAIS,SAAS7nD,KAAKqnD,OAAQ,IAC5C,OAAOziB,EAAS5kC,KAAKonD,GAAIa,aAAajoD,KAAKqnD,OAASziB,GAAU,CAChE,EAOA,YAAAt4B,OAAA,SAAOkJ,EAAezI,GACpB,IAAI63B,EAAS5kC,KAAKonD,GAAIS,SAAS7nD,KAAKqnD,OAAQ,IAC5C,OAAOziB,GAAU73B,GAAO,IAAIhE,EAAYC,aAAaC,IAAIqzC,OACpCgL,OAAOtnD,KAAKonD,GAAIW,WAAW/nD,KAAKonD,GAAIY,SAAShoD,KAAKqnD,OAASziB,GAAkB,EAARpvB,GAAYxV,KAAKonD,IAC3F,IAClB,EAKA,YAAAkO,aAAA,WACE,IAAI1wB,EAAS5kC,KAAKonD,GAAIS,SAAS7nD,KAAKqnD,OAAQ,IAC5C,OAAOziB,EAAS5kC,KAAKonD,GAAIa,aAAajoD,KAAKqnD,OAASziB,GAAU,CAChE,EAKO,EAAA2wB,eAAP,SAAsBpN,GACpBA,EAAQC,YAAY,GACtB,EAMO,EAAA8G,QAAP,SAAe/G,EAA8BgH,GAC3ChH,EAAQG,eAAe,EAAG6G,EAAY,EACxC,EAMO,EAAAC,aAAP,SAAoBjH,EAA8BkH,GAChDlH,EAAQG,eAAe,EAAG+G,EAAiB,EAC7C,EAMO,EAAAO,QAAP,SAAezH,EAA8BzpD,GAC3CypD,EAAQgD,cAAc,EAAGzsD,EAAMqK,EAAYC,aAAaC,IAAIoB,cAAc2gD,UAC5E,EAMO,EAAAwK,KAAP,SAAYrN,EAA8Br8C,GACxCq8C,EAAQsN,gBAAgB,EAAG3pD,EAAG,EAChC,EAMO,EAAA4pD,KAAP,SAAYvN,EAA8BzrD,GACxCyrD,EAAQsC,cAAc,EAAG/tD,EAAGyrD,EAAQgC,WAAW,EAAG,GACpD,EAMO,EAAAwL,KAAP,SAAYxN,EAA8ByN,GACxCzN,EAAQG,eAAe,EAAGsN,EAAS,EACrC,EAMO,EAAAC,KAAP,SAAY1N,EAA8B2N,GACxC3N,EAAQG,eAAe,EAAGwN,EAAS,EACrC,EAMO,EAAAC,KAAP,SAAY5N,EAA8B6N,GACxC7N,EAAQG,eAAe,EAAG0N,EAAS,EACrC,EAMO,EAAAC,UAAP,SAAiB9N,EAA8B+N,GAC7C/N,EAAQG,eAAe,EAAG4N,EAAc,EAC1C,EAOO,EAAAC,mBAAP,SAA0BhO,EAA8BxpD,GACtDwpD,EAAQK,YAAY,EAAG7pD,EAAK9B,OAAQ,GACpC,IAAK,IAAIH,EAAIiC,EAAK9B,OAAS,EAAGH,GAAK,EAAGA,IACpCyrD,EAAQiO,WAAWz3D,EAAKjC,IAE1B,OAAOyrD,EAAQO,WACjB,EAMO,EAAA2N,kBAAP,SAAyBlO,EAA8BS,GACrDT,EAAQK,YAAY,EAAGI,EAAU,EACnC,EAMO,EAAA0N,QAAP,SAAenO,EAA8BoO,GAC3CpO,EAAQG,eAAe,EAAGiO,EAAY,EACxC,EAOO,EAAAC,iBAAP,SAAwBrO,EAA8BxpD,GACpDwpD,EAAQK,YAAY,EAAG7pD,EAAK9B,OAAQ,GACpC,IAAK,IAAIH,EAAIiC,EAAK9B,OAAS,EAAGH,GAAK,EAAGA,IACpCyrD,EAAQqL,SAAS70D,EAAKjC,IAExB,OAAOyrD,EAAQO,WACjB,EAMO,EAAA+N,gBAAP,SAAuBtO,EAA8BS,GACnDT,EAAQK,YAAY,EAAGI,EAAU,EACnC,EAMO,EAAA8N,WAAP,SAAkBvO,EAA8BwO,GAC9CxO,EAAQG,eAAe,GAAIqO,EAAe,EAC5C,EAOO,EAAAC,oBAAP,SAA2BzO,EAA8BxpD,GACvDwpD,EAAQK,YAAY,EAAG7pD,EAAK9B,OAAQ,GACpC,IAAK,IAAIH,EAAIiC,EAAK9B,OAAS,EAAGH,GAAK,EAAGA,IACpCyrD,EAAQM,UAAU9pD,EAAKjC,IAEzB,OAAOyrD,EAAQO,WACjB,EAMO,EAAAmO,mBAAP,SAA0B1O,EAA8BS,GACtDT,EAAQK,YAAY,EAAGI,EAAU,EACnC,EAMO,EAAAkO,WAAP,SAAkB3O,EAA8B4O,GAC9C5O,EAAQG,eAAe,GAAIyO,EAAe,EAC5C,EAOO,EAAAC,oBAAP,SAA2B7O,EAA8BxpD,GACvDwpD,EAAQK,YAAY,EAAG7pD,EAAK9B,OAAQ,GACpC,IAAK,IAAIH,EAAIiC,EAAK9B,OAAS,EAAGH,GAAK,EAAGA,IACpCyrD,EAAQM,UAAU9pD,EAAKjC,IAEzB,OAAOyrD,EAAQO,WACjB,EAMO,EAAAuO,mBAAP,SAA0B9O,EAA8BS,GACtDT,EAAQK,YAAY,EAAGI,EAAU,EACnC,EAMO,EAAAsO,UAAP,SAAiB/O,EAA8BgP,GAC7ChP,EAAQG,eAAe,GAAI6O,EAAc,EAC3C,EAOO,EAAAC,mBAAP,SAA0BjP,EAA8BxpD,GACtDwpD,EAAQK,YAAY,EAAG7pD,EAAK9B,OAAQ,GACpC,IAAK,IAAIH,EAAIiC,EAAK9B,OAAS,EAAGH,GAAK,EAAGA,IACpCyrD,EAAQM,UAAU9pD,EAAKjC,IAEzB,OAAOyrD,EAAQO,WACjB,EAMO,EAAA2O,kBAAP,SAAyBlP,EAA8BS,GACrDT,EAAQK,YAAY,EAAGI,EAAU,EACnC,EAMO,EAAA0O,aAAP,SAAoBnP,GAElB,OADaA,EAAQW,WAEvB,EAEO,EAAAyO,gBAAP,SACIpP,EAA8BgH,EAAgCE,EAC9D3wD,EAAkDoN,EAAWpP,EAAqBk5D,EAClFE,EAA6BE,EAA6BE,EAC1DK,EAAgCI,EAAmCI,EACnEI,GAeF,OAdA5tD,EAAUgsD,eAAepN,GACzB5+C,EAAU2lD,QAAQ/G,EAASgH,GAC3B5lD,EAAU6lD,aAAajH,EAASkH,GAChC9lD,EAAUqmD,QAAQzH,EAASzpD,GAC3B6K,EAAUisD,KAAKrN,EAASr8C,GACxBvC,EAAUmsD,KAAKvN,EAASzrD,GACxB6M,EAAUosD,KAAKxN,EAASyN,GACxBrsD,EAAUssD,KAAK1N,EAAS2N,GACxBvsD,EAAUwsD,KAAK5N,EAAS6N,GACxBzsD,EAAU0sD,UAAU9N,EAAS+N,GAC7B3sD,EAAU+sD,QAAQnO,EAASoO,GAC3BhtD,EAAUmtD,WAAWvO,EAASwO,GAC9BptD,EAAUutD,WAAW3O,EAAS4O,GAC9BxtD,EAAU2tD,UAAU/O,EAASgP,GACtB5tD,EAAU+tD,aAAanP,EAChC,EACF,EApdA,GAAa,EAAA5+C,UAAS,CAqdvB,CAtdyC,GAAAN,MAAA,EAAAA,IAAG,IAsd5C,CAtd4B,GAAAD,eAAA,EAAAA,aAAY,IAsdxC,CAtdD,CAAiB,EAAAD,cAAA,EAAAA,YAAW,KA0d5B,SAAiBA,IAAY,SAAAC,IAAa,SAAAC,GACxC,8BACE,KAAAm+C,GAAkC,KAElC,KAAAC,OAAS,CAwaX,QAlaE,YAAAC,OAAA,SAAO5qD,EAAW0qD,GAGhB,OAFApnD,KAAKqnD,OAAS3qD,EACdsD,KAAKonD,GAAKA,EACHpnD,IACT,EAOO,EAAAw3D,eAAP,SAAsBpQ,EAA4Br6C,GAChD,OAAQA,GAAO,IAAIuvC,GAASgL,OAAOF,EAAGK,UAAUL,EAAG1c,YAAc0c,EAAG1c,WAAY0c,EAClF,EAOO,EAAAqQ,2BAAP,SAAkCrQ,EAA4Br6C,GAE5D,OADAq6C,EAAGO,YAAYP,EAAG1c,WAAa,EAAAib,YAAYiC,qBACnC76C,GAAO,IAAIuvC,GAASgL,OAAOF,EAAGK,UAAUL,EAAG1c,YAAc0c,EAAG1c,WAAY0c,EAClF,EAOA,YAAA9a,aAAA,SAAa92B,EAAezI,GAC1B,IAAI63B,EAAS5kC,KAAKonD,GAAIS,SAAS7nD,KAAKqnD,OAAQ,GAC5C,OAAOziB,GAAU73B,GAAO,IAAIhE,EAAYC,aAAaC,IAAI5K,QACpCipD,OAAOtnD,KAAKonD,GAAIW,WAAW/nD,KAAKonD,GAAIY,SAAShoD,KAAKqnD,OAASziB,GAAkB,EAARpvB,GAAYxV,KAAKonD,IAC3F,IAClB,EAKA,YAAA5H,mBAAA,WACE,IAAI5a,EAAS5kC,KAAKonD,GAAIS,SAAS7nD,KAAKqnD,OAAQ,GAC5C,OAAOziB,EAAS5kC,KAAKonD,GAAIa,aAAajoD,KAAKqnD,OAASziB,GAAU,CAChE,EAOA,YAAAoa,SAAA,SAASxpC,EAAezI,GACtB,IAAI63B,EAAS5kC,KAAKonD,GAAIS,SAAS7nD,KAAKqnD,OAAQ,GAC5C,OAAOziB,GAAU73B,GAAO,IAAIhE,EAAYC,aAAaC,IAAIsoD,WACpCjK,OAAOtnD,KAAKonD,GAAIW,WAAW/nD,KAAKonD,GAAIY,SAAShoD,KAAKqnD,OAASziB,GAAkB,EAARpvB,GAAYxV,KAAKonD,IAC3F,IAClB,EAKA,YAAArI,eAAA,WACE,IAAIna,EAAS5kC,KAAKonD,GAAIS,SAAS7nD,KAAKqnD,OAAQ,GAC5C,OAAOziB,EAAS5kC,KAAKonD,GAAIa,aAAajoD,KAAKqnD,OAASziB,GAAU,CAChE,EAOA,YAAArtB,MAAA,SAAM/B,EAAezI,GACnB,IAAI63B,EAAS5kC,KAAKonD,GAAIS,SAAS7nD,KAAKqnD,OAAQ,GAC5C,OAAOziB,GAAU73B,GAAO,IAAIhE,EAAYC,aAAaC,IAAIi0C,MACpCoK,OAAOtnD,KAAKonD,GAAIW,WAAW/nD,KAAKonD,GAAIY,SAAShoD,KAAKqnD,OAASziB,GAAkB,EAARpvB,GAAYxV,KAAKonD,IAC3F,IAClB,EAKA,YAAAxH,YAAA,WACE,IAAIhb,EAAS5kC,KAAKonD,GAAIS,SAAS7nD,KAAKqnD,OAAQ,GAC5C,OAAOziB,EAAS5kC,KAAKonD,GAAIa,aAAajoD,KAAKqnD,OAASziB,GAAU,CAChE,EAKA,YAAA8yB,aAAA,WACE,IAAI9yB,EAAS5kC,KAAKonD,GAAIS,SAAS7nD,KAAKqnD,OAAQ,IAC5C,OAAOziB,EAAS5kC,KAAKonD,GAAIsF,WAAW1sD,KAAKqnD,OAASziB,GAAU,CAC9D,EAOA,YAAA+yB,UAAA,SAAUniD,EAAezI,GACvB,IAAI63B,EAAS5kC,KAAKonD,GAAIS,SAAS7nD,KAAKqnD,OAAQ,IAC5C,OAAOziB,GAAU73B,GAAO,IAAIhE,EAAYC,aAAaC,IAAIokD,UACpC/F,OAAOtnD,KAAKonD,GAAIW,WAAW/nD,KAAKonD,GAAIY,SAAShoD,KAAKqnD,OAASziB,GAAkB,EAARpvB,GAAYxV,KAAKonD,IAC3F,IAClB,EAKA,YAAAwQ,gBAAA,WACE,IAAIhzB,EAAS5kC,KAAKonD,GAAIS,SAAS7nD,KAAKqnD,OAAQ,IAC5C,OAAOziB,EAAS5kC,KAAKonD,GAAIa,aAAajoD,KAAKqnD,OAASziB,GAAU,CAChE,EASA,YAAA7mB,OAAA,SAAOvI,EAAe4zC,GACpB,IAAIxkB,EAAS5kC,KAAKonD,GAAIS,SAAS7nD,KAAKqnD,OAAQ,IAC5C,OAAOziB,EAAS5kC,KAAKonD,GAAIiC,SAASrpD,KAAKonD,GAAIY,SAAShoD,KAAKqnD,OAASziB,GAAkB,EAARpvB,EAAW4zC,GAAoB,IAC7G,EAKA,YAAAvK,aAAA,WACE,IAAIja,EAAS5kC,KAAKonD,GAAIS,SAAS7nD,KAAKqnD,OAAQ,IAC5C,OAAOziB,EAAS5kC,KAAKonD,GAAIa,aAAajoD,KAAKqnD,OAASziB,GAAU,CAChE,EASA,YAAAH,QAAA,SAAQjvB,EAAe4zC,GACrB,IAAIxkB,EAAS5kC,KAAKonD,GAAIS,SAAS7nD,KAAKqnD,OAAQ,IAC5C,OAAOziB,EAAS5kC,KAAKonD,GAAIiC,SAASrpD,KAAKonD,GAAIY,SAAShoD,KAAKqnD,OAASziB,GAAkB,EAARpvB,EAAW4zC,GAAoB,IAC7G,EAKA,YAAA1J,cAAA,WACE,IAAI9a,EAAS5kC,KAAKonD,GAAIS,SAAS7nD,KAAKqnD,OAAQ,IAC5C,OAAOziB,EAAS5kC,KAAKonD,GAAIa,aAAajoD,KAAKqnD,OAASziB,GAAU,CAChE,EAOA,YAAAizB,mBAAA,SAAmBriD,EAAezI,GAEhC,IAAI63B,EAAS5kC,KAAKonD,GAAIS,SAAS7nD,KAAKqnD,OAAQ,IAC5C,OAAOziB,GAAU73B,GAAO,IAAIhE,EAAYC,aAAaC,IAAIsrD,cACpCjN,OAAOtnD,KAAKonD,GAAIW,WAAW/nD,KAAKonD,GAAIY,SAAShoD,KAAKqnD,OAASziB,GAAkB,EAARpvB,GAAYxV,KAAKonD,IAC3F,IAClB,EAKA,YAAA0Q,yBAAA,WACE,IAAIlzB,EAAS5kC,KAAKonD,GAAIS,SAAS7nD,KAAKqnD,OAAQ,IAC5C,OAAOziB,EAAS5kC,KAAKonD,GAAIa,aAAajoD,KAAKqnD,OAASziB,GAAU,CAChE,EAKO,EAAAmzB,WAAP,SAAkB5P,GAChBA,EAAQC,YAAY,EACtB,EAMO,EAAA4P,gBAAP,SAAuB7P,EAA8B8P,GACnD9P,EAAQG,eAAe,EAAG2P,EAAoB,EAChD,EAOO,EAAAC,yBAAP,SAAgC/P,EAA8BxpD,GAC5DwpD,EAAQK,YAAY,EAAG7pD,EAAK9B,OAAQ,GACpC,IAAK,IAAIH,EAAIiC,EAAK9B,OAAS,EAAGH,GAAK,EAAGA,IACpCyrD,EAAQM,UAAU9pD,EAAKjC,IAEzB,OAAOyrD,EAAQO,WACjB,EAMO,EAAAyP,wBAAP,SAA+BhQ,EAA8BS,GAC3DT,EAAQK,YAAY,EAAGI,EAAU,EACnC,EAMO,EAAAwP,YAAP,SAAmBjQ,EAA8BkQ,GAC/ClQ,EAAQG,eAAe,EAAG+P,EAAgB,EAC5C,EAOO,EAAAC,qBAAP,SAA4BnQ,EAA8BxpD,GACxDwpD,EAAQK,YAAY,EAAG7pD,EAAK9B,OAAQ,GACpC,IAAK,IAAIH,EAAIiC,EAAK9B,OAAS,EAAGH,GAAK,EAAGA,IACpCyrD,EAAQM,UAAU9pD,EAAKjC,IAEzB,OAAOyrD,EAAQO,WACjB,EAMO,EAAA6P,oBAAP,SAA2BpQ,EAA8BS,GACvDT,EAAQK,YAAY,EAAGI,EAAU,EACnC,EAMO,EAAA4P,SAAP,SAAgBrQ,EAA8BsQ,GAC5CtQ,EAAQG,eAAe,EAAGmQ,EAAa,EACzC,EAOO,EAAAC,kBAAP,SAAyBvQ,EAA8BxpD,GACrDwpD,EAAQK,YAAY,EAAG7pD,EAAK9B,OAAQ,GACpC,IAAK,IAAIH,EAAIiC,EAAK9B,OAAS,EAAGH,GAAK,EAAGA,IACpCyrD,EAAQM,UAAU9pD,EAAKjC,IAEzB,OAAOyrD,EAAQO,WACjB,EAMO,EAAAiQ,iBAAP,SAAwBxQ,EAA8BS,GACpDT,EAAQK,YAAY,EAAGI,EAAU,EACnC,EAMO,EAAAgQ,gBAAP,SAAuBzQ,EAA8BuP,GACnDvP,EAAQgD,cAAc,EAAGuM,EAAc,EACzC,EAMO,EAAAmB,aAAP,SAAoB1Q,EAA8B2Q,GAChD3Q,EAAQG,eAAe,EAAGwQ,EAAiB,EAC7C,EAOO,EAAAC,sBAAP,SAA6B5Q,EAA8BxpD,GACzDwpD,EAAQK,YAAY,EAAG7pD,EAAK9B,OAAQ,GACpC,IAAK,IAAIH,EAAIiC,EAAK9B,OAAS,EAAGH,GAAK,EAAGA,IACpCyrD,EAAQM,UAAU9pD,EAAKjC,IAEzB,OAAOyrD,EAAQO,WACjB,EAMO,EAAAsQ,qBAAP,SAA4B7Q,EAA8BS,GACxDT,EAAQK,YAAY,EAAGI,EAAU,EACnC,EAMO,EAAAmH,UAAP,SAAiB5H,EAA8B6H,GAC7C7H,EAAQG,eAAe,EAAG0H,EAAc,EAC1C,EAOO,EAAAC,mBAAP,SAA0B9H,EAA8BxpD,GACtDwpD,EAAQK,YAAY,EAAG7pD,EAAK9B,OAAQ,GACpC,IAAK,IAAIH,EAAIiC,EAAK9B,OAAS,EAAGH,GAAK,EAAGA,IACpCyrD,EAAQM,UAAU9pD,EAAKjC,IAEzB,OAAOyrD,EAAQO,WACjB,EAMO,EAAAwH,kBAAP,SAAyB/H,EAA8BS,GACrDT,EAAQK,YAAY,EAAGI,EAAU,EACnC,EAMO,EAAAuH,WAAP,SAAkBhI,EAA8BiI,GAC9CjI,EAAQG,eAAe,EAAG8H,EAAe,EAC3C,EAOO,EAAAC,oBAAP,SAA2BlI,EAA8BxpD,GACvDwpD,EAAQK,YAAY,EAAG7pD,EAAK9B,OAAQ,GACpC,IAAK,IAAIH,EAAIiC,EAAK9B,OAAS,EAAGH,GAAK,EAAGA,IACpCyrD,EAAQM,UAAU9pD,EAAKjC,IAEzB,OAAOyrD,EAAQO,WACjB,EAMO,EAAA4H,mBAAP,SAA0BnI,EAA8BS,GACtDT,EAAQK,YAAY,EAAGI,EAAU,EACnC,EAMO,EAAAqQ,sBAAP,SAA6B9Q,EAA8B+Q,GACzD/Q,EAAQG,eAAe,EAAG4Q,EAA0B,EACtD,EAOO,EAAAC,+BAAP,SAAsChR,EAA8BxpD,GAElEwpD,EAAQK,YAAY,EAAG7pD,EAAK9B,OAAQ,GACpC,IAAK,IAAIH,EAAIiC,EAAK9B,OAAS,EAAGH,GAAK,EAAGA,IACpCyrD,EAAQM,UAAU9pD,EAAKjC,IAEzB,OAAOyrD,EAAQO,WACjB,EAMO,EAAA0Q,8BAAP,SAAqCjR,EAA8BS,GACjET,EAAQK,YAAY,EAAGI,EAAU,EACnC,EAMO,EAAAyQ,SAAP,SAAgBlR,GAEd,OADaA,EAAQW,WAEvB,EAEO,EAAAwQ,YAAP,SACInR,EAA8B8P,EAAwCI,EACtEI,EAAiCf,EAAsBoB,EACvD9I,EAAkCI,EAClC8I,GAUF,OATA5c,EAAMyb,WAAW5P,GACjB7L,EAAM0b,gBAAgB7P,EAAS8P,GAC/B3b,EAAM8b,YAAYjQ,EAASkQ,GAC3B/b,EAAMkc,SAASrQ,EAASsQ,GACxBnc,EAAMsc,gBAAgBzQ,EAASuP,GAC/Bpb,EAAMuc,aAAa1Q,EAAS2Q,GAC5Bxc,EAAMyT,UAAU5H,EAAS6H,GACzB1T,EAAM6T,WAAWhI,EAASiI,GAC1B9T,EAAM2c,sBAAsB9Q,EAAS+Q,GAC9B5c,EAAM+c,SAASlR,EACxB,EACF,EA3aA,GAAa,EAAA7L,MAAK,CA4anB,CA7ayC,GAAArzC,MAAA,EAAAA,IAAG,IA6a5C,CA7a4B,GAAAD,eAAA,EAAAA,aAAY,IA6axC,CA7aD,CAAiB,EAAAD,cAAA,EAAAA,YAAW,KAib5B,SAAiBA,IAAY,SAAAC,IAAa,SAAAC,GACxC,8BACE,KAAAm+C,GAAkC,KAElC,KAAAC,OAAS,CAoQX,QA9PE,YAAAC,OAAA,SAAO5qD,EAAW0qD,GAGhB,OAFApnD,KAAKqnD,OAAS3qD,EACdsD,KAAKonD,GAAKA,EACHpnD,IACT,EAOO,EAAAu5D,eAAP,SAAsBnS,EAA4Br6C,GAChD,OAAQA,GAAO,IAAIm5C,GAASoB,OAAOF,EAAGK,UAAUL,EAAG1c,YAAc0c,EAAG1c,WAAY0c,EAClF,EAOO,EAAAoS,2BAAP,SAAkCpS,EAA4Br6C,GAE5D,OADAq6C,EAAGO,YAAYP,EAAG1c,WAAa,EAAAib,YAAYiC,qBACnC76C,GAAO,IAAIm5C,GAASoB,OAAOF,EAAGK,UAAUL,EAAG1c,YAAc0c,EAAG1c,WAAY0c,EAClF,EAKA,YAAA9B,UAAA,WACE,IAAI1gB,EAAS5kC,KAAKonD,GAAIS,SAAS7nD,KAAKqnD,OAAQ,GAC5C,OAAOziB,EAAS5kC,KAAKonD,GAAI8C,UAAUlqD,KAAKqnD,OAASziB,GAAU5kC,KAAKonD,GAAI+C,WAAW,EAAG,EACpF,EAOA,YAAA3E,YAAA,SAAYhwC,EAAezI,GAEzB,IAAI63B,EAAS5kC,KAAKonD,GAAIS,SAAS7nD,KAAKqnD,OAAQ,GAC5C,OAAOziB,GAAU73B,GAAO,IAAIhE,EAAYC,aAAaC,IAAIqpD,eACpChL,OAAOtnD,KAAKonD,GAAIW,WAAW/nD,KAAKonD,GAAIY,SAAShoD,KAAKqnD,OAASziB,GAAkB,EAARpvB,GAAYxV,KAAKonD,IAC3F,IAClB,EAKA,YAAApB,kBAAA,WACE,IAAIphB,EAAS5kC,KAAKonD,GAAIS,SAAS7nD,KAAKqnD,OAAQ,GAC5C,OAAOziB,EAAS5kC,KAAKonD,GAAIa,aAAajoD,KAAKqnD,OAASziB,GAAU,CAChE,EAQA,YAAA60B,aAAA,SAAarQ,GACX,IAAIxkB,EAAS5kC,KAAKonD,GAAIS,SAAS7nD,KAAKqnD,OAAQ,GAC5C,OAAOziB,EAAS5kC,KAAKonD,GAAIiC,SAASrpD,KAAKqnD,OAASziB,EAAQwkB,GAAoB,IAC9E,EAQA,YAAAsQ,gBAAA,SAAgBtQ,GACd,IAAIxkB,EAAS5kC,KAAKonD,GAAIS,SAAS7nD,KAAKqnD,OAAQ,IAC5C,OAAOziB,EAAS5kC,KAAKonD,GAAIiC,SAASrpD,KAAKqnD,OAASziB,EAAQwkB,GAAoB,IAC9E,EAQA,YAAA3D,OAAA,SAAO2D,GACL,IAAIxkB,EAAS5kC,KAAKonD,GAAIS,SAAS7nD,KAAKqnD,OAAQ,IAC5C,OAAOziB,EAAS5kC,KAAKonD,GAAIiC,SAASrpD,KAAKqnD,OAASziB,EAAQwkB,GAAoB,IAC9E,EAKA,YAAAuQ,aAAA,WACE,IAAI/0B,EAAS5kC,KAAKonD,GAAIS,SAAS7nD,KAAKqnD,OAAQ,IAC5C,OAAOziB,EAAS5kC,KAAKonD,GAAI8C,UAAUlqD,KAAKqnD,OAASziB,GAAU5kC,KAAKonD,GAAI+C,WAAW,EAAG,EACpF,EAQA,YAAAoE,UAAA,SAAUnF,GACR,IAAIxkB,EAAS5kC,KAAKonD,GAAIS,SAAS7nD,KAAKqnD,OAAQ,IAC5C,OAAOziB,EAAS5kC,KAAKonD,GAAIiC,SAASrpD,KAAKqnD,OAASziB,EAAQwkB,GAAoB,IAC9E,EAMA,YAAA/c,MAAA,SAAMt/B,GACJ,IAAI63B,EAAS5kC,KAAKonD,GAAIS,SAAS7nD,KAAKqnD,OAAQ,IAC5C,OAAOziB,GAAU73B,GAAO,IAAIhE,EAAYC,aAAaC,IAAIqzC,OACpCgL,OAAOtnD,KAAKonD,GAAIW,WAAW/nD,KAAKqnD,OAASziB,GAAS5kC,KAAKonD,IAC5D,IAClB,EAQA,YAAAwS,eAAA,SAAexQ,GACb,IAAIxkB,EAAS5kC,KAAKonD,GAAIS,SAAS7nD,KAAKqnD,OAAQ,IAC5C,OAAOziB,EAAS5kC,KAAKonD,GAAIiC,SAASrpD,KAAKqnD,OAASziB,EAAQwkB,GAAoB,IAC9E,EAKO,EAAAyQ,WAAP,SAAkB1R,GAChBA,EAAQC,YAAY,EACtB,EAMO,EAAA0R,aAAP,SAAoB3R,EAA8B7C,GAChD6C,EAAQsC,cAAc,EAAGnF,EAAW6C,EAAQgC,WAAW,EAAG,GAC5D,EAMO,EAAA4P,eAAP,SAAsB5R,EAA8B6R,GAClD7R,EAAQG,eAAe,EAAG0R,EAAmB,EAC/C,EAOO,EAAAC,wBAAP,SAA+B9R,EAA8BxpD,GAC3DwpD,EAAQK,YAAY,EAAG7pD,EAAK9B,OAAQ,GACpC,IAAK,IAAIH,EAAIiC,EAAK9B,OAAS,EAAGH,GAAK,EAAGA,IACpCyrD,EAAQM,UAAU9pD,EAAKjC,IAEzB,OAAOyrD,EAAQO,WACjB,EAMO,EAAAwR,uBAAP,SAA8B/R,EAA8BS,GAC1DT,EAAQK,YAAY,EAAGI,EAAU,EACnC,EAMO,EAAAuR,gBAAP,SAAuBhS,EAA8BiS,GACnDjS,EAAQG,eAAe,EAAG8R,EAAoB,EAChD,EAMO,EAAAC,mBAAP,SAA0BlS,EAA8BmS,GACtDnS,EAAQG,eAAe,EAAGgS,EAAuB,EACnD,EAMO,EAAAhL,UAAP,SAAiBnH,EAA8BoH,GAC7CpH,EAAQG,eAAe,EAAGiH,EAAc,EAC1C,EAMO,EAAAgL,gBAAP,SAAuBpS,EAA8BwR,GACnDxR,EAAQsC,cAAc,EAAGkP,EAAcxR,EAAQgC,WAAW,EAAG,GAC/D,EAMO,EAAAiF,aAAP,SAAoBjH,EAA8BkH,GAChDlH,EAAQG,eAAe,EAAG+G,EAAiB,EAC7C,EAMO,EAAAmL,SAAP,SAAgBrS,EAA8BsS,GAC5CtS,EAAQG,eAAe,EAAGmS,EAAa,EACzC,EAMO,EAAAC,kBAAP,SAAyBvS,EAA8BwS,GACrDxS,EAAQG,eAAe,EAAGqS,EAAsB,EAClD,EAMO,EAAAC,SAAP,SAAgBzS,GAEd,OADaA,EAAQW,WAEvB,EAEO,EAAA+R,YAAP,SACI1S,EAA8B7C,EAA6B0U,EAC3DI,EAAwCE,EACxC/K,EAAkCoK,EAAgCtK,EAClEoL,EAAiCE,GAWnC,OAVAzU,EAAM2T,WAAW1R,GACjBjC,EAAM4T,aAAa3R,EAAS7C,GAC5BY,EAAM6T,eAAe5R,EAAS6R,GAC9B9T,EAAMiU,gBAAgBhS,EAASiS,GAC/BlU,EAAMmU,mBAAmBlS,EAASmS,GAClCpU,EAAMoJ,UAAUnH,EAASoH,GACzBrJ,EAAMqU,gBAAgBpS,EAASwR,GAC/BzT,EAAMkJ,aAAajH,EAASkH,GAC5BnJ,EAAMsU,SAASrS,EAASsS,GACxBvU,EAAMwU,kBAAkBvS,EAASwS,GAC1BzU,EAAM0U,SAASzS,EACxB,EACF,EAvQA,GAAa,EAAAjC,MAAK,CAwQnB,CAzQyC,GAAAj9C,MAAA,EAAAA,IAAG,IAyQ5C,CAzQ4B,GAAAD,eAAA,EAAAA,aAAY,IAyQxC,CAzQD,CAAiB,EAAAD,cAAA,EAAAA,YAAW,KA6Q5B,SAAiBA,IAAY,SAAAC,IAAa,SAAAC,GACxC,8BACE,KAAAm+C,GAAkC,KAElC,KAAAC,OAAS,CAiKX,QA3JE,YAAAC,OAAA,SAAO5qD,EAAW0qD,GAGhB,OAFApnD,KAAKqnD,OAAS3qD,EACdsD,KAAKonD,GAAKA,EACHpnD,IACT,EAOO,EAAA86D,2BAAP,SAAkC1T,EAA4Br6C,GAC5D,OAAQA,GAAO,IAAIguD,GAAqBzT,OAAOF,EAAGK,UAAUL,EAAG1c,YAAc0c,EAAG1c,WAAY0c,EAC9F,EAOO,EAAA4T,uCAAP,SAA8C5T,EAA4Br6C,GAGxE,OADAq6C,EAAGO,YAAYP,EAAG1c,WAAa,EAAAib,YAAYiC,qBACnC76C,GAAO,IAAIguD,GAAqBzT,OAAOF,EAAGK,UAAUL,EAAG1c,YAAc0c,EAAG1c,WAAY0c,EAC9F,EAMA,YAAA6T,YAAA,SAAYzlD,GACV,IAAIovB,EAAS5kC,KAAKonD,GAAIS,SAAS7nD,KAAKqnD,OAAQ,GAC5C,OAAOziB,EAAS5kC,KAAKonD,GAAIsF,WAAW1sD,KAAKonD,GAAIY,SAAShoD,KAAKqnD,OAASziB,GAAkB,EAARpvB,GAAa,CAC7F,EAKA,YAAA0lD,kBAAA,WACE,IAAIt2B,EAAS5kC,KAAKonD,GAAIS,SAAS7nD,KAAKqnD,OAAQ,GAC5C,OAAOziB,EAAS5kC,KAAKonD,GAAIa,aAAajoD,KAAKqnD,OAASziB,GAAU,CAChE,EAKA,YAAAu2B,iBAAA,WACE,IAAIv2B,EAAS5kC,KAAKonD,GAAIS,SAAS7nD,KAAKqnD,OAAQ,GAC5C,OAAOziB,EACH,IAAI1mC,YACA8B,KAAKonD,GAAI0H,QAAQ5uD,OAAQF,KAAKonD,GAAI0H,QAAQjpD,WAAa7F,KAAKonD,GAAIY,SAAShoD,KAAKqnD,OAASziB,GACvF5kC,KAAKonD,GAAIa,aAAajoD,KAAKqnD,OAASziB,IACxC,IACN,EAMA,YAAAw2B,gBAAA,SAAgB5lD,GACd,IAAIovB,EAAS5kC,KAAKonD,GAAIS,SAAS7nD,KAAKqnD,OAAQ,GAC5C,OAAOziB,EAAS5kC,KAAKonD,GAAIiU,WAAWr7D,KAAKonD,GAAIY,SAAShoD,KAAKqnD,OAASziB,GAAkB,EAARpvB,GAC9DxV,KAAKonD,GAAI+C,WAAW,EAAG,EACzC,EAKA,YAAAmR,sBAAA,WACE,IAAI12B,EAAS5kC,KAAKonD,GAAIS,SAAS7nD,KAAKqnD,OAAQ,GAC5C,OAAOziB,EAAS5kC,KAAKonD,GAAIa,aAAajoD,KAAKqnD,OAASziB,GAAU,CAChE,EAKO,EAAA22B,uBAAP,SAA8BpT,GAC5BA,EAAQC,YAAY,EACtB,EAMO,EAAAoT,eAAP,SAAsBrT,EAA8BsT,GAClDtT,EAAQG,eAAe,EAAGmT,EAAmB,EAC/C,EAOO,EAAAC,wBAAP,SAA+BvT,EAA8BxpD,GAC3DwpD,EAAQK,YAAY,EAAG7pD,EAAK9B,OAAQ,GACpC,IAAK,IAAIH,EAAIiC,EAAK9B,OAAS,EAAGH,GAAK,EAAGA,IACpCyrD,EAAQ2I,SAASnyD,EAAKjC,IAExB,OAAOyrD,EAAQO,WACjB,EAMO,EAAAiT,uBAAP,SAA8BxT,EAA8BS,GAC1DT,EAAQK,YAAY,EAAGI,EAAU,EACnC,EAMO,EAAAgT,mBAAP,SAA0BzT,EAA8B0T,GACtD1T,EAAQG,eAAe,EAAGuT,EAAuB,EACnD,EAOO,EAAAC,4BAAP,SAAmC3T,EAA8BxpD,GAC/DwpD,EAAQK,YAAY,EAAG7pD,EAAK9B,OAAQ,GACpC,IAAK,IAAIH,EAAIiC,EAAK9B,OAAS,EAAGH,GAAK,EAAGA,IACpCyrD,EAAQqL,SAAS70D,EAAKjC,IAExB,OAAOyrD,EAAQO,WACjB,EAMO,EAAAqT,2BAAP,SAAkC5T,EAA8BS,GAC9DT,EAAQK,YAAY,EAAGI,EAAU,EACnC,EAMO,EAAAoT,qBAAP,SAA4B7T,GAE1B,OADaA,EAAQW,WAEvB,EAEO,EAAAmT,wBAAP,SACI9T,EAA8BsT,EAC9BI,GAIF,OAHAd,EAAkBQ,uBAAuBpT,GACzC4S,EAAkBS,eAAerT,EAASsT,GAC1CV,EAAkBa,mBAAmBzT,EAAS0T,GACvCd,EAAkBiB,qBAAqB7T,EAChD,EACF,EApKA,GAAa,EAAA4S,kBAAiB,CAqK/B,CAtKyC,GAAA9xD,MAAA,EAAAA,IAAG,IAsK5C,CAtK4B,GAAAD,eAAA,EAAAA,aAAY,IAsKxC,CAtKD,CAAiB,EAAAD,cAAA,EAAAA,YAAW,KA0K5B,SAAiBA,IAAY,SAAAC,IAAa,SAAAC,GACxC,8BACE,KAAAm+C,GAAkC,KAElC,KAAAC,OAAS,CA+FX,QAzFE,YAAAC,OAAA,SAAO5qD,EAAW0qD,GAGhB,OAFApnD,KAAKqnD,OAAS3qD,EACdsD,KAAKonD,GAAKA,EACHpnD,IACT,EAOO,EAAAk8D,8BAAP,SAAqC9U,EAA4Br6C,GAC/D,OAAQA,GAAO,IAAIovD,GAAwB7U,OAAOF,EAAGK,UAAUL,EAAG1c,YAAc0c,EAAG1c,WAAY0c,EACjG,EAOO,EAAAgV,0CAAP,SAAiDhV,EAA4Br6C,GAG3E,OADAq6C,EAAGO,YAAYP,EAAG1c,WAAa,EAAAib,YAAYiC,qBACnC76C,GAAO,IAAIovD,GAAwB7U,OAAOF,EAAGK,UAAUL,EAAG1c,YAAc0c,EAAG1c,WAAY0c,EACjG,EAQA,YAAAiV,QAAA,SAAQjT,GACN,IAAIxkB,EAAS5kC,KAAKonD,GAAIS,SAAS7nD,KAAKqnD,OAAQ,GAC5C,OAAOziB,EAAS5kC,KAAKonD,GAAIiC,SAASrpD,KAAKqnD,OAASziB,EAAQwkB,GAAoB,IAC9E,EAMA,YAAAkT,aAAA,SAAavvD,GACX,IAAI63B,EAAS5kC,KAAKonD,GAAIS,SAAS7nD,KAAKqnD,OAAQ,GAC5C,OAAOziB,GAAU73B,GAAO,IAAIhE,EAAYC,aAAaC,IAAIszD,cACpCjV,OAAOtnD,KAAKonD,GAAIW,WAAW/nD,KAAKqnD,OAASziB,GAAS5kC,KAAKonD,IAC5D,IAClB,EAKO,EAAAoV,0BAAP,SAAiCrU,GAC/BA,EAAQC,YAAY,EACtB,EAMO,EAAAqU,WAAP,SAAkBtU,EAA8BuU,GAC9CvU,EAAQG,eAAe,EAAGoU,EAAe,EAC3C,EAMO,EAAAC,gBAAP,SAAuBxU,EAA8ByU,GACnDzU,EAAQG,eAAe,EAAGsU,EAAoB,EAChD,EAMO,EAAAC,wBAAP,SAA+B1U,GAC7B,IAAIvjB,EAASujB,EAAQW,YAErB,OADAX,EAAQ2U,cAAcl4B,EAAQ,GACvBA,CACT,EAEO,EAAAm4B,2BAAP,SACI5U,EAA8BuU,EAC9BE,GAIF,OAHAT,EAAqBK,0BAA0BrU,GAC/CgU,EAAqBM,WAAWtU,EAASuU,GACzCP,EAAqBQ,gBAAgBxU,EAASyU,GACvCT,EAAqBU,wBAAwB1U,EACtD,EACF,EAlGA,GAAa,EAAAgU,qBAAoB,CAmGlC,CApGyC,GAAAlzD,MAAA,EAAAA,IAAG,IAoG5C,CApG4B,GAAAD,eAAA,EAAAA,aAAY,IAoGxC,CApGD,CAAiB,EAAAD,cAAA,EAAAA,YAAW,KAwG5B,SAAiBA,IAAY,SAAAC,IAAa,SAAAC,GACxC,8BACE,KAAAm+C,GAAkC,KAElC,KAAAC,OAAS,CA6HX,QAvHE,YAAAC,OAAA,SAAO5qD,EAAW0qD,GAGhB,OAFApnD,KAAKqnD,OAAS3qD,EACdsD,KAAKonD,GAAKA,EACHpnD,IACT,EAOO,EAAAg9D,sBAAP,SAA6B5V,EAA4Br6C,GACvD,OAAQA,GAAO,IAAIwvD,GAAgBjV,OAAOF,EAAGK,UAAUL,EAAG1c,YAAc0c,EAAG1c,WAAY0c,EACzF,EAOO,EAAA6V,kCAAP,SAAyC7V,EAA4Br6C,GAEnE,OADAq6C,EAAGO,YAAYP,EAAG1c,WAAa,EAAAib,YAAYiC,qBACnC76C,GAAO,IAAIwvD,GAAgBjV,OAAOF,EAAGK,UAAUL,EAAG1c,YAAc0c,EAAG1c,WAAY0c,EACzF,EAMA,YAAA8V,QAAA,SAAQnwD,GACN,IAAI63B,EAAS5kC,KAAKonD,GAAIS,SAAS7nD,KAAKqnD,OAAQ,GAC5C,OAAOziB,GAAU73B,GAAO,IAAIhE,EAAYC,aAAaC,IAAI8xD,mBACpCzT,OAAOtnD,KAAKonD,GAAIW,WAAW/nD,KAAKqnD,OAASziB,GAAS5kC,KAAKonD,IAC5D,IAClB,EAOA,YAAA+V,sBAAA,SAAsB3nD,EAAezI,GAEnC,IAAI63B,EAAS5kC,KAAKonD,GAAIS,SAAS7nD,KAAKqnD,OAAQ,GAC5C,OAAOziB,GAAU73B,GAAO,IAAIhE,EAAYC,aAAaC,IAAIkzD,sBACpC7U,OAAOtnD,KAAKonD,GAAIW,WAAW/nD,KAAKonD,GAAIY,SAAShoD,KAAKqnD,OAASziB,GAAkB,EAARpvB,GAAYxV,KAAKonD,IAC3F,IAClB,EAKA,YAAAgW,4BAAA,WACE,IAAIx4B,EAAS5kC,KAAKonD,GAAIS,SAAS7nD,KAAKqnD,OAAQ,GAC5C,OAAOziB,EAAS5kC,KAAKonD,GAAIa,aAAajoD,KAAKqnD,OAASziB,GAAU,CAChE,EAKO,EAAAy4B,kBAAP,SAAyBlV,GACvBA,EAAQC,YAAY,EACtB,EAMO,EAAAkV,WAAP,SAAkBnV,EAA8BoV,GAC9CpV,EAAQG,eAAe,EAAGiV,EAAe,EAC3C,EAMO,EAAAC,yBAAP,SAAgCrV,EAA8BsV,GAC5DtV,EAAQG,eAAe,EAAGmV,EAA6B,EACzD,EAOO,EAAAC,kCAAP,SAAyCvV,EAA8BxpD,GAErEwpD,EAAQK,YAAY,EAAG7pD,EAAK9B,OAAQ,GACpC,IAAK,IAAIH,EAAIiC,EAAK9B,OAAS,EAAGH,GAAK,EAAGA,IACpCyrD,EAAQM,UAAU9pD,EAAKjC,IAEzB,OAAOyrD,EAAQO,WACjB,EAMO,EAAAiV,iCAAP,SAAwCxV,EAA8BS,GACpET,EAAQK,YAAY,EAAGI,EAAU,EACnC,EAMO,EAAAgV,gBAAP,SAAuBzV,GAErB,OADaA,EAAQW,WAEvB,EAEO,EAAA+U,mBAAP,SACI1V,EAA8BoV,EAC9BE,GAIF,OAHAlB,EAAac,kBAAkBlV,GAC/BoU,EAAae,WAAWnV,EAASoV,GACjChB,EAAaiB,yBAAyBrV,EAASsV,GACxClB,EAAaqB,gBAAgBzV,EACtC,EACF,EAhIA,GAAa,EAAAoU,aAAY,CAiI1B,CAlIyC,GAAAtzD,MAAA,EAAAA,IAAG,IAkI5C,CAlI4B,GAAAD,eAAA,EAAAA,aAAY,IAkIxC,CAlID,CAAiB,EAAAD,cAAA,EAAAA,YAAW,KAsI5B,SAAiBA,IAAY,SAAAC,IAAa,SAAAC,GACxC,8BACE,KAAAm+C,GAAkC,KAElC,KAAAC,OAAS,CAyIX,QAnIE,YAAAC,OAAA,SAAO5qD,EAAW0qD,GAGhB,OAFApnD,KAAKqnD,OAAS3qD,EACdsD,KAAKonD,GAAKA,EACHpnD,IACT,EAOO,EAAA8lD,0BAAP,SAAiCsB,EAA4Br6C,GAC3D,OAAQA,GAAO,IAAIxI,GAAoB+iD,OAAOF,EAAGK,UAAUL,EAAG1c,YAAc0c,EAAG1c,WAAY0c,EAC7F,EAOO,EAAA0W,sCAAP,SAA6C1W,EAA4Br6C,GAEvE,OADAq6C,EAAGO,YAAYP,EAAG1c,WAAa,EAAAib,YAAYiC,qBACnC76C,GAAO,IAAIxI,GAAoB+iD,OAAOF,EAAGK,UAAUL,EAAG1c,YAAc0c,EAAG1c,WAAY0c,EAC7F,EAMO,EAAA2W,oBAAP,SAA2B3W,GACzB,OAAOA,EAAG4W,iBAAiB,OAC7B,EAQA,YAAAC,WAAA,SAAW7U,GACT,IAAIxkB,EAAS5kC,KAAKonD,GAAIS,SAAS7nD,KAAKqnD,OAAQ,GAC5C,OAAOziB,EAAS5kC,KAAKonD,GAAIiC,SAASrpD,KAAKqnD,OAASziB,EAAQwkB,GAAoB,IAC9E,EAMA,YAAArD,MAAA,SAAMh5C,GACJ,IAAI63B,EAAS5kC,KAAKonD,GAAIS,SAAS7nD,KAAKqnD,OAAQ,GAC5C,OAAOziB,GAAU73B,GAAO,IAAIhE,EAAYC,aAAaC,IAAIi9C,OACpCoB,OAAOtnD,KAAKonD,GAAIW,WAAW/nD,KAAKqnD,OAASziB,GAAS5kC,KAAKonD,IAC5D,IAClB,EAMA,YAAAkV,aAAA,SAAavvD,GACX,IAAI63B,EAAS5kC,KAAKonD,GAAIS,SAAS7nD,KAAKqnD,OAAQ,GAC5C,OAAOziB,GAAU73B,GAAO,IAAIhE,EAAYC,aAAaC,IAAIszD,cACpCjV,OAAOtnD,KAAKonD,GAAIW,WAAW/nD,KAAKqnD,OAASziB,GAAS5kC,KAAKonD,IAC5D,IAClB,EAKO,EAAA8W,sBAAP,SAA6B/V,GAC3BA,EAAQC,YAAY,EACtB,EAMO,EAAA+V,cAAP,SAAqBhW,EAA8BiW,GACjDjW,EAAQG,eAAe,EAAG8V,EAAkB,EAC9C,EAMO,EAAAC,SAAP,SAAgBlW,EAA8BmW,GAC5CnW,EAAQG,eAAe,EAAGgW,EAAa,EACzC,EAMO,EAAA3B,gBAAP,SAAuBxU,EAA8ByU,GACnDzU,EAAQG,eAAe,EAAGsU,EAAoB,EAChD,EAMO,EAAA2B,oBAAP,SAA2BpW,GAEzB,OADaA,EAAQW,WAEvB,EAMO,EAAA0V,6BAAP,SAAoCrW,EAA8BvjB,GAChEujB,EAAQvR,OAAOhS,EAAQ,OACzB,EAMO,EAAA65B,yCAAP,SAAgDtW,EAA8BvjB,GAC5EujB,EAAQvR,OAAOhS,EAAQ,QAAQ,EACjC,EAEO,EAAA85B,uBAAP,SACIvW,EAA8BiW,EAAsCE,EACpE1B,GAKF,OAJAr4D,EAAiB25D,sBAAsB/V,GACvC5jD,EAAiB45D,cAAchW,EAASiW,GACxC75D,EAAiB85D,SAASlW,EAASmW,GACnC/5D,EAAiBo4D,gBAAgBxU,EAASyU,GACnCr4D,EAAiBg6D,oBAAoBpW,EAC9C,EACF,EA5IA,GAAa,EAAA5jD,iBAAgB,CA6I9B,CA9IyC,GAAA0E,MAAA,EAAAA,IAAG,IA8I5C,CA9I4B,GAAAD,eAAA,EAAAA,aAAY,IA8IxC,CA9ID,CAAiB,EAAAD,cAAA,EAAAA,YAAW,I,ugDCxoH5B,cAGA,UAEA,aACE,WAAoB9B,GAAA,KAAAA,QAAAA,EAClBjH,KAAKkF,WAAalF,KAAKiH,QAAQ/B,WAC/BlF,KAAK6E,YAAc7E,KAAKiH,QAAQpC,WAClC,CAgCF,OA9BQ,YAAAqI,QAAN,W,oFAGM,YAAA9H,IAAN,SACIV,EAAiCi6D,EACjCC,G,wGAEF,IAAW,KADLC,EAAW,IAAInhE,IACFgH,EACbpH,OAAOiI,eAAeC,KAAKd,EAAO,KAC9Bo6D,EAAOp6D,EAAM,GACnBm6D,EAAS3/D,IACL,EACA,IAAI,SACA4/D,EAAKlgE,KAAMkgE,EAAKpgE,UAA+BlC,OAAWA,EAC1DsiE,EAAKngE,QAGC,SAAMqB,KAAKiH,QAAQ7B,IAAIy5D,I,OAKzC,OALME,EAAY,SACZhvD,EAAoC,CAAC,EAC3CgvD,EAAUptD,SAAQ,SAACoN,EAAQ9iB,GACzB8T,EAAO9T,GAAQ,IAAI,EAAAoC,OAAO0gB,EAAOrgB,KAAMqgB,EAAOpgB,KAAMogB,EAAOngB,KAC7D,IACO,CAAP,EAAOmR,G,QAET,YAAAjJ,eAAA,WACE9G,KAAKiH,QAAQH,gBACf,EACA,YAAAC,aAAA,WACE/G,KAAKiH,QAAQF,cACf,EACF,EApCA,GAAa,EAAAK,qBAAAA,C,0/CCLb,cACA,UAEA,UACA,UAEA,UACA,UAiBA,aACE,WAAY+nC,QAAA,IAAAA,IAAAA,EAAA,IACVnvC,KAAKg/D,cAAe,EACpBh/D,KAAK6M,YAAcsiC,EAAOtiC,YAC1B7M,KAAKwoC,SAAW,EAAAqc,SAAShB,OAAO1U,EAAO3G,UACvCxoC,KAAKiD,QAAU,CAACulC,SAAUxoC,KAAKwoC,SAAUy2B,gBAAiB,GAAIC,eAAgB,GAChF,CAgOF,OA9NE,sBAAI,yBAAU,C,IAAd,WACE,OAAOl/D,KAAKm/D,OAAO9yB,MAAMqR,eAC3B,E,gCACA,sBAAI,0BAAW,C,IAAf,WACE,OAAO19C,KAAKm/D,OAAO9yB,MAAMwR,gBAC3B,E,gCAEA,YAAA/2C,eAAA,WACE9G,KAAKwoC,SAASjL,OAChB,EAEA,YAAAx2B,aAAA,WACE/G,KAAKwoC,SAASyb,MAChB,EAKM,YAAA98C,UAAN,SAAgBi4D,EAAoCv5D,EAAqBhJ,G,qGACvE,SAAMmD,KAAKwoC,SAASK,MAAM,UAAW,qBAAqB,gD,8DAExC,UAAM,IAAAhiC,gBAAe7G,KAAK6M,c,cAApC3Q,EAAU,SAChB8D,KAAKm7C,eAAiBj/C,EAAQG,qBAAqB2D,KAAKiD,SAExDjD,KAAKm/D,OAAS,IAAI,EAAAjZ,MACC,iBAARkZ,EAAP,OACIna,EAAcma,EAAI7Y,SAAS,QACZ,oBAAV8Y,MAAP,MAEU,IAAM,IAAAC,WAAU,EAAAC,SAAV,CAAoBH,K,cAAhCpa,EAAM,SACZhlD,KAAKiN,WAAW+3C,EAAKC,G,aAGJ,SAAMoa,MAAMD,I,OACjB,SADK,SACUI,e,OAArBxa,EAAM,SACZhlD,KAAKiN,WAAW,IAAIrP,WAAWonD,GAAMC,G,oCAE7Bt/C,YAAY85D,OAAOL,GAM7Bp/D,KAAKiN,WAAWmyD,IAJV/zD,EAAM,IAAIzN,WAAWwhE,EAAKv5D,GAAc,EAAGhJ,GAAUuiE,EAAIt5D,YAC/D9F,KAAKiN,WAAW5B,I,oDArBpB,S,YA6BM,YAAA4B,WAAR,SAAmByyD,EAA4Bza,GAA/C,WACE,GAAIjlD,KAAKg/D,aACP,MAAM,IAAIviE,MAAM,uBAGlBuD,KAAKwoC,SAASK,MAAM,UAAW,sBAAsB,WAEnD,IAAMwU,EACF,EAAKlC,eAAeoC,eAAiB,EAAKpC,oBAAsC3+C,EACpF,EAAK2iE,OAAOpa,KAAK2a,EAAgBriB,EAAkB4H,GAG/C,EAAK9J,eAAe/O,oBACtB,EAAK+O,eAAe/O,mBAAmB,EAAK+yB,OAAO9yB,OAGrD,EAAKszB,cAAc,EAAKR,OAAO9yB,OAG/B,EAAKuzB,eAAiB,IAAI,EAAAvjB,cAAc,EAAK8iB,OAAO9yB,MAAO,EAAKsO,KAAM,EAAKnS,SAC7E,IAEAxoC,KAAKg/D,cAAe,CACtB,EAEM,YAAA55D,IAAN,SAAU2Y,G,8EACR,IAAK/d,KAAKg/D,aACR,MAAM,IAAIviE,MAAM,+BAGlB,MAAO,CAAP,EAAOuD,KAAKwoC,SAASK,MAAM,UAAW,eAAe,gD,0DAG7B,OAFhB+S,EAAe57C,KAAK6/D,2BAA2B9hD,GAE/B,GAAM/d,KAAK4/D,eAAe1kB,QAAQl7C,KAAKm7C,eAAgBS,I,OAE7E,OAFMkkB,EAAgB,SAEf,CAAP,EAAO9/D,KAAK+/D,aAAaD,I,kBAIrB,YAAAD,2BAAR,SAAmC9hD,GACjC,IAAMiiD,EAAkBhgE,KAAKm/D,OAAO9yB,MAAMqR,gBAI1C,GAAIt+C,MAAMC,QAAQ0e,IAChB,GAAIA,EAAOlhB,SAAWmjE,EAAgBnjE,OACpC,MAAM,IAAIJ,MAAM,iDAA0CujE,EAAgBnjE,OAAM,oBAAYkhB,EAAOlhB,aAKlG,CACH,GAAIkhB,EAAOre,OAASsgE,EAAgBnjE,OAClC,MAAM,IAAIJ,MAAM,6CAAsCujE,EAAgBnjE,OAAM,oBAAYkhB,EAAOre,OAKjG,IAFA,IAAMugE,EAAe,IAAI7gE,MAAc2e,EAAOre,MAC1CwgE,EAAoB,EACfxjE,EAAI,EAAGA,EAAIsjE,EAAgBnjE,SAAUH,EAAG,CAC/C,IAAMqiB,EAAShB,EAAOxe,IAAIygE,EAAgBtjE,IAC1C,IAAKqiB,EACH,MAAM,IAAItiB,MAAM,qCAA8BR,KAAI,MAEpDgkE,EAAaC,KAAuBnhD,C,CAGtChB,EAASkiD,C,CAKX,GAAKjgE,KAAKiD,QAAQg8D,iBAA2D,IAAxCj/D,KAAKiD,QAAQg8D,gBAAgBpiE,QAAiBmD,KAAKiD,QAAQi8D,gBACrD,IAAvCl/D,KAAKiD,QAAQi8D,eAAeriE,OAqB9BmD,KAAKmgE,wBAAwBngE,KAAKiD,QAAQi8D,eAAgBnhD,GAAQ,OArBtB,CAC5C,IAAMqiD,EAAoBpgE,KAAKm/D,OAAO9yB,MAAM4O,kBACtColB,EAAcrgE,KAAKm/D,OAAO9yB,MAAME,YAEhC2yB,EAAiB,IAAI9/D,MAAyBghE,EAAkBvjE,QAEtE,IAASH,EAAI,EAAGA,EAAI0jE,EAAkBvjE,SAAUH,EAAG,CACjD,IAAM4jE,EAAaD,EAAYD,EAAkB1jE,IACjDwiE,EAAexiE,GAAK4jE,EAAW5hE,KAAM6R,MAAM3R,KAI3CoB,KAAKiD,QAAQg8D,gBAAiBniE,KAAKwjE,EAAW5hE,KAAMo+C,YACpD98C,KAAKiD,QAAQi8D,eAAgBpiE,KAAKihB,EAAOrhB,GAAGkC,K,CAG9CoB,KAAKmgE,wBAAwBjB,EAAgBnhD,GAAQ,E,CAWvD,OAFA/d,KAAKugE,yBAAyBvgE,KAAKiD,QAAQg8D,gBAAkBlhD,GAEtDA,CACT,EAEQ,YAAAwiD,yBAAR,SAAiCtB,EAAoCuB,GACnE,IAAK,IAAI9jE,EAAI,EAAGA,EAAI8jE,EAAY3jE,OAAQH,IAAK,CAC3C,IAAM+jE,EAAexB,EAAgBviE,GAC/BgkE,EAAaF,EAAY9jE,GAAGgC,KAClC,GAAI+hE,IAAiBC,EACnB,MAAM,IAAIjkE,MAAM,uBAAgBC,EAAC,0CAAkC+jE,EAAY,qBAAaC,G,CAGlG,EAEQ,YAAAP,wBAAR,SACIjB,EAA0CsB,EAAuBG,GACnE,IAAK,IAAIjkE,EAAI,EAAGA,EAAI8jE,EAAY3jE,OAAQH,IAAK,CAC3C,IAAMkkE,EAAe1B,EAAexiE,GAC9BmkE,EAAaL,EAAY9jE,GAAGkC,KAClC,IAAKoB,KAAK8gE,kBAAkBF,EAAcC,EAAYF,GACpD,MAAM,IAAIlkE,MAAM,uBAAgBC,EAAC,4CAAoCkkE,EAAah6D,KAAK,KAAI,uBACvFi6D,EAAWj6D,KAAK,KAAI,K,CAG9B,EAEQ,YAAAk6D,kBAAR,SAA0BF,EAAiCC,EAA+BF,GAExF,GAAIC,EAAa/jE,SAAWgkE,EAAWhkE,OACrC,OAAO,EAGT,IAAK,IAAIH,EAAI,EAAGA,EAAIkkE,EAAa/jE,SAAUH,EACzC,GAAIkkE,EAAalkE,KAAOmkE,EAAWnkE,MAAQikE,GAAwC,IAApBC,EAAalkE,IAE1E,OAAO,EAIX,OAAO,CACT,EAEQ,YAAAqjE,aAAR,SAAqBD,GACnB,IAAMiB,EAAmB/gE,KAAKm/D,OAAO9yB,MAAMwR,iBAC3C,GAAIiiB,EAAcjjE,SAAWkkE,EAAiBlkE,OAC5C,MAAM,IAAIJ,MAAM,uEAIlB,IADA,IAAMsT,EAAS,IAAIrS,IACVhB,EAAI,EAAGA,EAAIqkE,EAAiBlkE,SAAUH,EAC7CqT,EAAO7Q,IAAI6hE,EAAiBrkE,GAAIojE,EAAcpjE,IAGhD,OAAOqT,CACT,EAEQ,YAAA4vD,cAAR,SAAsBtzB,GACpB,IAAM90B,EAAQ80B,EAAMqO,WACpB16C,KAAK26C,KAAO,IAAIv7C,MAAMmY,EAAM1a,QAE5B,IAAK,IAAIH,EAAI,EAAGA,EAAI6a,EAAM1a,OAAQH,IAChCsD,KAAK26C,KAAKj+C,GAAKsD,KAAKm7C,eAAep4C,QAAQwU,EAAM7a,GAAIsD,KAAKm/D,OAAO1yB,OAAQJ,EAE7E,EAaF,EAtOA,GAAa,EAAAnlC,QAAAA,C,ykDCxBb,cACA,aACA,UAEA,UACA,UAEO4B,EAAS,EAAAC,YAAYC,aAAaC,IAiCzC,aA+GE,WAIoBrK,EAIAF,EAA+BsiE,EACvCC,EAA+C3zD,EAIvC8R,QAAA,IAAAA,IAAAA,EAAe,EAAA8hD,KAAKrd,UATpB,KAAAjlD,KAAAA,EAIA,KAAAF,KAAAA,EAA+B,KAAAsiE,aAAAA,EACvC,KAAAC,kBAAAA,EAA+C,KAAA3zD,MAAAA,EAIvC,KAAA8R,OAAAA,EAClBpf,KAAKN,KAAO,EAAA4T,UAAU6tD,wBAAwBviE,GAC9C,IAAMc,EAAOM,KAAKN,KACZ0hE,OAA0B5kE,IAAjBwkE,QAAoDxkE,IAAtBykE,QAA6CzkE,IAAV8Q,EAEhF,QAAc9Q,IAAV8Q,GACEA,EAAMzQ,SAAW6C,EACnB,MAAM,IAAII,WAAW,yCAIzB,GAAa,WAATpB,EAAmB,CACrB,UAAclC,IAAV8Q,GAAyBlO,MAAMC,QAAQiO,IAAWA,EAAMyzB,OAAM,SAAArkC,GAAK,MAAa,iBAANA,CAAP,KACrE,MAAM,IAAIJ,UAAU,kCAGlB8kE,IACFphE,KAAKsN,MAAQ,IAAIlO,MAAcM,G,KAE5B,CACL,QAAclD,IAAV8Q,EAAqB,CACvB,IAAMhP,EAAc+iE,EAAoB3iE,GACxC,KAAM4O,aAAiBhP,GACrB,MAAM,IAAIhC,UAAU,+BAAwBgC,EAAYrC,M,CAI5D,GAAImlE,EAAO,CACT,IAAMpc,EAAM,IAAIr/C,YAAYjG,EA2JpC,SAAgBhB,GACd,OAAQA,GACN,IAAK,OACL,IAAK,OACL,IAAK,QACH,OAAO,EACT,IAAK,QACL,IAAK,SACH,OAAO,EACT,IAAK,QACL,IAAK,SACL,IAAK,UACH,OAAO,EACT,IAAK,UACH,OAAO,EACT,QACE,MAAM,IAAIjC,MAAM,4CAAqCiC,IAE3D,CA7K2C4iE,CAAO5iE,IAC1CsB,KAAKsN,MAoMb,SAAoBi0D,EAAyB7iE,GAC3C,OAAO,IAAK2iE,EAAoB3iE,GAAzB,CAAgC6iE,EACzC,CAtMqBC,CAAWxc,EAAKtmD,E,EAGnC,CAqJF,OA7SE,sBAAI,mBAAI,C,IAAR,WACE,QAAmBlC,IAAfwD,KAAKsN,MAAqB,CAC5B,IAAM3O,EAAOqB,KAAKghE,aAAchhE,KAAKof,QACrC,GAAIzgB,EAAK9B,SAAWmD,KAAKN,KACvB,MAAM,IAAIjD,MAAM,8FAElBuD,KAAKsN,MAAQ3O,C,CAEf,OAAOqB,KAAKsN,KACd,E,gCAKA,sBAAI,yBAAU,C,IAAd,WACE,GAAkB,WAAdtN,KAAKtB,KACP,MAAM,IAAIpC,UAAU,2BAGtB,OAAO0D,KAAKrB,IACd,E,gCAMA,sBAAI,0BAAW,C,IAAf,WACE,OAAQqB,KAAKtB,MACX,IAAK,QACL,IAAK,OACL,IAAK,SACL,IAAK,QACL,IAAK,QACL,IAAK,SACL,IAAK,OACH,OAAOsB,KAAKrB,KAEd,QACE,MAAM,IAAIrC,UAAU,8EAE1B,E,gCAKA,sBAAI,wBAAS,C,IAAb,WACE,OAAQ0D,KAAKtB,MACX,IAAK,UACL,IAAK,UACH,OAAOsB,KAAKrB,KAEd,QACE,MAAM,IAAIrC,UAAU,6CAE1B,E,gCAMA,sBAAI,yBAAU,C,IAAd,WACE,GAAkB,WAAd0D,KAAKtB,KACP,OAAOsB,KAAKrB,KAEd,MAAM,IAAIrC,UAAU,qCACtB,E,gCAKA,YAAAiD,IAAA,SAAIm1D,GACF,OAAO10D,KAAKrB,KAAK,EAAA2U,UAAU0I,gBAAgB04C,EAAS10D,KAAKoR,SAC3D,EAKA,YAAAlS,IAAA,SAAIw1D,EAA4Br3D,GAC9B2C,KAAKrB,KAAK,EAAA2U,UAAU0I,gBAAgB04C,EAAS10D,KAAKoR,UAAY/T,CAChE,EAKM,YAAA++C,QAAN,W,4GACqB5/C,IAAfwD,KAAKsN,MAAL,OACF,EAAAtN,KAAa,GAAMA,KAAKihE,kBAAmBjhE,KAAKof,U,OAAhD,EAAK9R,MAAQ,S,iBAEf,MAAO,CAAP,EAAOtN,KAAKsN,O,QAYd,sBAAI,sBAAO,C,IAAX,WAIE,OAHKtN,KAAKyhE,WACRzhE,KAAKyhE,SAAW,EAAAnuD,UAAU0N,eAAehhB,KAAKpB,OAEzCoB,KAAKyhE,QACd,E,gCAqDO,EAAAj2D,UAAP,SAAiBk2D,GACf,IAAKA,EACH,MAAM,IAAIjlE,MAAM,+CAElB,IAAMiC,EAAO,EAAAgtB,UAAUC,wBAAwB+1C,EAAYrhD,UAGrDhjB,EAAQ,IAAIgB,EAFL,EAAAqtB,UAAU+yB,oBAAoBijB,EAAY9iE,MAExBF,GAE/B,GAAa,WAATA,EAGFgjE,EAAYxO,WAAYvhD,SAAQ,SAACgwD,EAAKjlE,GACpCW,EAAMsB,KAAKjC,IAAK,IAAAiP,kBAAiBg2D,EACnC,SAEK,GACHD,EAAY3O,SAAqD,iBAAnC2O,EAAY3O,QAAQjtD,YAClD47D,EAAY3O,QAAQjtD,WAAa,EAAG,CAItC,IAAM87D,EAAWvkE,EAAMsB,KACjBkjE,EACF,IAAIC,SAASJ,EAAY3O,QAAQ7yD,OAAQwhE,EAAY3O,QAAQltD,WAAY67D,EAAY3O,QAAQjtD,YAC3Fi8D,EAAcC,EAAYN,EAAYrhD,UACtC,EAASqhD,EAAY3O,QAAQjtD,WAAai8D,EAEhD,GAAIL,EAAY3O,QAAQjtD,WAAai8D,GAAgB,EACnD,MAAM,IAAItlE,MAAM,yBAElB,GAAImlE,EAAS/kE,SAAW,EACtB,MAAM,IAAIJ,MAAM,0BAGlB,IAAK,IAAIC,EAAI,EAAGA,EAAI,EAAQA,IAAK,CAC/B,IAAM83C,EAAIytB,EAAUJ,EAAYH,EAAYrhD,SAAW3jB,EAAIqlE,GAC3DH,EAASllE,GAAK83C,C,MAEX,CAEL,IAAIvV,OAAK,EACT,OAAQyiC,EAAYrhD,UAClB,KAAK,EAAAhX,KAAK64D,YAAYC,SAAS73D,MAC7B20B,EAAQyiC,EAAY3lC,UACpB,MACF,KAAK,EAAA1yB,KAAK64D,YAAYC,SAASC,MAC/B,KAAK,EAAA/4D,KAAK64D,YAAYC,SAASE,MAC/B,KAAK,EAAAh5D,KAAK64D,YAAYC,SAASG,OAC/B,KAAK,EAAAj5D,KAAK64D,YAAYC,SAASI,KAC/B,KAAK,EAAAl5D,KAAK64D,YAAYC,SAASK,MAC/B,KAAK,EAAAn5D,KAAK64D,YAAYC,SAASM,KAC7BxjC,EAAQyiC,EAAYgB,UACpB,MACF,KAAK,EAAAr5D,KAAK64D,YAAYC,SAASQ,MAC7B1jC,EAAQyiC,EAAYkB,UACpB,MACF,KAAK,EAAAv5D,KAAK64D,YAAYC,SAASU,OAC7B5jC,EAAQyiC,EAAYoB,WACpB,MACF,KAAK,EAAAz5D,KAAK64D,YAAYC,SAASY,OAC/B,KAAK,EAAA15D,KAAK64D,YAAYC,SAASa,OAC7B/jC,EAAQyiC,EAAYuB,WACpB,MACF,QAEE,MAAM,IAAIxmE,MAAM,oBAGpB,GAAIwiC,QACF,MAAM,IAAIxiC,MAAM,oDAGlB,IAAMkC,EAAOtB,EAAMsB,KACnB,GAAIA,EAAK9B,SAAWoiC,EAAMpiC,OACxB,MAAM,IAAIJ,MAAM,yBAGlB,IAASC,EAAI,EAAGA,EAAIuiC,EAAMpiC,OAAQH,IAAK,CACrC,IAAMwmE,EAAUjkC,EAAMviC,GAClB,UAAKyO,OAAO+3D,GACdvkE,EAAKjC,GAAK0O,EAAa83D,EAASxB,EAAYrhD,UAE5C1hB,EAAKjC,GAAKwmE,C,EAKhB,OAAO7lE,CACT,EASO,EAAA8lE,SAAP,SAAgBxkE,EAA2CC,EAAyBF,GAClF,OAAO,IAAIL,EAAOO,EAAMF,OAAMlC,OAAWA,EAAWmC,EACtD,EAEO,EAAA8M,cAAP,SAAqB23D,GACnB,IAAKA,EACH,MAAM,IAAI3mE,MAAM,+CAElB,IAAMmC,EAAO,EAAA8sB,UAAU+zB,wBAAwB2jB,GACzC1kE,EAAO,EAAAgtB,UAAUC,wBAAwBy3C,EAAU/iD,YAEnDhjB,EAAQ,IAAIgB,EAAOO,EAAMF,GAE/B,GAAa,WAATA,EAGF,IAAK,IAAIhC,EAAI,EAAGA,EAAI0mE,EAAUjQ,mBAAoBz2D,IAChDW,EAAMsB,KAAKjC,GAAK0mE,EAAUlQ,WAAWx2D,QAGlC,GACH0mE,EAAUnQ,gBAAuD,iBAA9BmQ,EAAUpQ,iBAAgCoQ,EAAUpQ,gBAAkB,EAAG,CAI9G,IAAM4O,EAAWvkE,EAAMsB,KACjBkjE,EAAa,IAAIC,SACnBsB,EAAUnQ,eAAgB/yD,OAAQkjE,EAAUnQ,eAAgBptD,WAAYu9D,EAAUpQ,iBAChF+O,EAAcC,EAAYoB,EAAU/iD,YACpC,EAAS+iD,EAAUpQ,gBAAkB+O,EAE3C,GAAIqB,EAAUpQ,gBAAkB+O,GAAgB,EAC9C,MAAM,IAAItlE,MAAM,yBAElB,GAAImlE,EAAS/kE,SAAW,EACtB,MAAM,IAAIJ,MAAM,0BAGlB,IAASC,EAAI,EAAGA,EAAI,EAAQA,IAAK,CAC/B,IAAM83C,EAAIytB,EAAUJ,EAAYuB,EAAU/iD,WAAY3jB,EAAIqlE,GAC1DH,EAASllE,GAAK83C,C,EAGlB,OAAOn3C,CACT,EACF,EAjTA,GAuUA,SAAS2kE,EAAYtjE,GACnB,OAAQA,GACN,KAAK,EAAA2K,KAAK64D,YAAYC,SAASK,MAC/B,KAAK,EAAAn5D,KAAK64D,YAAYC,SAASI,KAC/B,KAAK,EAAAl5D,KAAK64D,YAAYC,SAASM,KAC7B,OAAO,EACT,KAAK,EAAAp5D,KAAK64D,YAAYC,SAASG,OAC/B,KAAK,EAAAj5D,KAAK64D,YAAYC,SAASE,MAC7B,OAAO,EACT,KAAK,EAAAh5D,KAAK64D,YAAYC,SAAS73D,MAC/B,KAAK,EAAAjB,KAAK64D,YAAYC,SAASC,MAC/B,KAAK,EAAA/4D,KAAK64D,YAAYC,SAASY,OAC7B,OAAO,EACT,KAAK,EAAA15D,KAAK64D,YAAYC,SAASQ,MAC/B,KAAK,EAAAt5D,KAAK64D,YAAYC,SAASU,OAC/B,KAAK,EAAAx5D,KAAK64D,YAAYC,SAASa,OAC7B,OAAO,EACT,QACE,MAAM,IAAIvmE,MAAM,4CAAqC,EAAA4M,KAAK64D,YAAYC,SAASzjE,KAErF,CAMA,SAAS2iE,EAAoB3iE,GAC3B,OAAQA,GACN,IAAK,OACL,IAAK,QACH,OAAOd,WACT,IAAK,OACH,OAAOC,UACT,IAAK,QACH,OAAOE,WACT,IAAK,SACH,OAAOD,YACT,IAAK,QACH,OAAOE,WACT,IAAK,SACH,OAAOE,YACT,IAAK,UACH,OAAOP,aACT,IAAK,UACH,OAAOM,aACT,QAEE,MAAM,IAAIxB,MAAM,qBAEtB,CAGA,SAAS2O,EAAa1O,EAASgC,GAE7B,GAAIA,IAAS,EAAA2K,KAAK64D,YAAYC,SAASQ,OAASjkE,IAASoK,EAAOo+C,eAAeyb,OAC7E,GAAIjmE,EAAE2mE,mBAAmB,aAAe3mE,EAAE4mE,UAAU,YAClD,MAAM,IAAIhnE,UAAU,8BAEjB,IACHoC,IAAS,EAAA2K,KAAK64D,YAAYC,SAASY,QAAUrkE,IAASoK,EAAOo+C,eAAe6b,QAC5ErkE,IAAS,EAAA2K,KAAK64D,YAAYC,SAASa,QAAUtkE,IAASoK,EAAOo+C,eAAe8b,OAK9E,MAAM,IAAI1mE,UAAU,2BAAoB,EAAA+M,KAAK64D,YAAYC,SAASzjE,KAJlE,GAAIhC,EAAE2mE,mBAAmB,aAAe3mE,EAAE4mE,SAAS,GACjD,MAAM,IAAIhnE,UAAU,0B,CAMxB,OAAOI,EAAE6mE,UACX,CAGA,SAAStB,EAAUuB,EAAgB9kE,EAAuDmH,GACxF,OAAQnH,GACN,KAAK,EAAA2K,KAAK64D,YAAYC,SAASM,KAC/B,KAAK,EAAAp5D,KAAK64D,YAAYC,SAASK,MAC7B,OAAOgB,EAAKC,SAAS59D,GACvB,KAAK,EAAAwD,KAAK64D,YAAYC,SAASI,KAC7B,OAAOiB,EAAKE,QAAQ79D,GACtB,KAAK,EAAAwD,KAAK64D,YAAYC,SAASG,OAC7B,OAAOkB,EAAKG,UAAU99D,GAAY,GACpC,KAAK,EAAAwD,KAAK64D,YAAYC,SAASE,MAC7B,OAAOmB,EAAKI,SAAS/9D,GAAY,GACnC,KAAK,EAAAwD,KAAK64D,YAAYC,SAAS73D,MAC7B,OAAOk5D,EAAKK,WAAWh+D,GAAY,GACrC,KAAK,EAAAwD,KAAK64D,YAAYC,SAASC,MAC7B,OAAOoB,EAAKM,SAASj+D,GAAY,GACnC,KAAK,EAAAwD,KAAK64D,YAAYC,SAASY,OAC7B,OAAOS,EAAKO,UAAUl+D,GAAY,GACpC,KAAK,EAAAwD,KAAK64D,YAAYC,SAASQ,MAC7B,OAAOv3D,EACH,UAAK44D,SAASR,EAAKO,UAAUl+D,GAAY,GAAO29D,EAAKO,UAAUl+D,EAAa,GAAG,IAAO,GAAQnH,GACpG,KAAK,EAAA2K,KAAK64D,YAAYC,SAASU,OAC7B,OAAOW,EAAKS,WAAWp+D,GAAY,GACrC,KAAK,EAAAwD,KAAK64D,YAAYC,SAASa,OAC7B,OAAO53D,EACH,UAAK44D,SAASR,EAAKO,UAAUl+D,GAAY,GAAO29D,EAAKO,UAAUl+D,EAAa,GAAG,IAAO,GAAOnH,GACnG,QACE,MAAM,IAAIjC,MAAM,6CAAsC,EAAA4M,KAAK64D,YAAYC,SAASzjE,KAEtF,CA3aa,EAAAL,OAAAA,C,+/BCxCb,cACA,aACA,UAIA,UAMA,4BAAiC0f,G,IAAkB,wDACjD,IAAKA,GAAUA,EAAOlhB,SAAWqnE,EAAmBrnE,OAClD,OAAO,EAET,IAAK,IAAIH,EAAI,EAAGA,EAAIqhB,EAAOlhB,OAAQH,IACjC,IAAKqhB,EAAOrhB,GAAGkC,MAAQmf,EAAOrhB,GAAGkC,KAAK/B,SAAWqnE,EAAmBxnE,GAClE,OAAO,EAGX,OAAO,CACT,EAGA,kBAAuBynE,EAAeC,GACpC,IAAKD,EACH,MAAM,IAAI1nE,MAAqB,iBAAR2nE,EAAmBA,EAAMA,IAEpD,EAEA,8BAsBA,QAfS,EAAAxzD,YAAP,SACIyzD,EAEAC,GAEF,GAAID,EAAGxnE,SAAWynE,EAAGznE,OACnB,OAAO,EAET,IAAK,IAAIH,EAAI,EAAGA,EAAI2nE,EAAGxnE,OAAQH,IAC7B,GAAI2nE,EAAG3nE,KAAO4nE,EAAG5nE,GACf,OAAO,EAGX,OAAO,CACT,EACF,EAtBA,GAAa,EAAAiU,UAAAA,EAwBb,8BAkDA,QA3CS,EAAA4zD,sBAAP,SAA6BC,EAA0BC,GAYrD,MAAO,CAPqB,IAAjBD,EAAM3nE,OAAgB,CAAC,EAAG2nE,EAAM,IAAMA,EAKrB,IAAjBC,EAAM5nE,OAAgB,CAAC4nE,EAAM,GAAI,GAAKA,EAGnD,EASO,EAAAC,uBAAP,SAA8Bz5C,EAAuBI,EAAeC,GAEpD,IAAVD,GAEFJ,EAAYruB,OAAOquB,EAAYpuB,OAAS,EAAG,GAG/B,IAAVyuB,GACFL,EAAY2kB,KAEhB,EAQO,EAAA+0B,gBAAP,SAAuBjsD,EAAqBxH,GAC1C,OAAQwH,EAAE,KAAOxH,EAAE,QAAM1U,EAAY,CAACkc,EAAE,GAAIxH,EAAE,GAChD,EACF,EAlDA,GAAa,EAAA0zD,WAAAA,EAoDb,8BA+LA,QAvLS,EAAAx5C,UAAP,SAAiBy5C,EAA0BC,EAA0BC,G,WAAA,IAAAA,IAAAA,GAAA,GACnE,IAAMrqC,EAAQmqC,EAAMhoE,OACd89B,EAAQmqC,EAAMjoE,OACpB,GAAc,IAAV69B,EACF,OAAOoqC,EAET,GAAc,IAAVnqC,EACF,OAAOkqC,EAET,IAAMG,EAAQ/8D,KAAK47B,IAAIghC,EAAMhoE,OAAQioE,EAAMjoE,QACrCooE,EAAQ,IAAI7lE,MAAc4lE,GAGhC,GAAID,EAAU,CACZ,GAAIrqC,EAAQ,GAAKC,EAAQ,EACvB,OAEF,IAAMuqC,EACFN,EAAWD,gBAAgB,CAACE,EAAMnqC,EAAQ,GAAImqC,EAAMnqC,EAAQ,IAAK,CAACoqC,EAAMnqC,EAAQ,GAAImqC,EAAMnqC,EAAQ,KACtG,QAAqBn+B,IAAjB0oE,EACF,OAEF,IAAuCA,EAAY,GAAlDD,EAAMD,EAAQ,GAAE,KAAEC,EAAMD,EAAQ,GAAE,I,CAGrC,IAAK,IAAItoE,EAAIqoE,EAAW,EAAI,EAAGroE,GAAKsoE,EAAOtoE,IAAK,CAC9C,IAAMyoE,EAAOzqC,EAAQh+B,EAAI,EAAI,EAAImoE,EAAMnqC,EAAQh+B,GACzC0oE,EAAOzqC,EAAQj+B,EAAI,EAAI,EAAIooE,EAAMnqC,EAAQj+B,GAE/C,GAAIyoE,IAASC,GAAQD,EAAO,GAAKC,EAAO,EACtC,OAEFH,EAAMD,EAAQtoE,GAAKuL,KAAK47B,IAAIshC,EAAMC,E,CAGpC,OAAOH,CACT,EAQO,EAAAzvD,MAAP,SAAa6vD,EAAuCC,GAIlD,IAAMC,EAAkB,IAAInmE,MAAMkmE,EAAczoE,QAEhD,OADAgW,EAAc2yD,UAAUH,EAAoBC,EAAeC,GACpDA,CACT,EASO,EAAAC,UAAP,SAAiBH,EAAuCC,EAAkCC,GAKxF,IADA,IAAMppD,EAAYkpD,EAAmBxoE,OAASyoE,EAAczoE,OACnDH,EAAI,EAAGA,EAAI4oE,EAAczoE,OAAQH,IACxC6oE,EAAgB7oE,GAAK2oE,EAAmBlpD,EAAYzf,GAAK4oE,EAAc5oE,EAE3E,EAUO,EAAA+oE,KAAP,SACI/sD,EAAWxH,EAAWw7B,EAA+Dg5B,EACrFC,GACF,IAAM16C,EAAcpY,EAAcuY,UAAU1S,EAAE9Z,KAAMsS,EAAEtS,MAEtD,GAAIqsB,EAAa,CACf,GAAIy6C,IAAYpyD,EAAU0X,SAASC,EAAavS,EAAE9Z,MAEhD,OAGF,IAAMc,EAAO4T,EAAU5T,KAAKurB,GACtBtS,EAAI+sD,EAAUhtD,EAAI,IAAI,EAAAra,OAAO4sB,EAAa06C,GAAcjtD,EAAEha,MAGhE,GAA2B,IAAvBusB,EAAYpuB,OACd8b,EAAEzZ,IAAI,GAAIwtC,EAAGh0B,EAAEnZ,IAAI,IAAK2R,EAAE3R,IAAI,UAI3B,CACH,IAAMqmE,EAAgB,IAAIxmE,MAAc6rB,EAAYpuB,QAC9CgpE,EAAmB,IAAIzmE,MAAMsZ,EAAE9Z,KAAK/B,QACpCipE,EAAmB,IAAI1mE,MAAM8R,EAAEtS,KAAK/B,QACtCkpE,EAAsB,EACtBC,EAAsB,EACtBC,GAAY,EACZC,GAAY,EACM,IAAlBxtD,EAAE9Z,KAAK/B,SACTkpE,EAAOrtD,EAAEnZ,IAAI,IACb0mE,GAAY,GAEQ,IAAlB/0D,EAAEtS,KAAK/B,SACTmpE,EAAO90D,EAAE3R,IAAI,IACb2mE,GAAY,GAGd,IADA,IAAIC,OAAI,EACCzpE,EAAI,EAAGA,EAAIgD,EAAMhD,IAAK,CAE7BypE,EAAOzpE,EACP,IAAK,IAAIkH,EAAIqnB,EAAYpuB,OAAS,EAAG+G,GAAK,EAAGA,IAC3CgiE,EAAchiE,GAAKuiE,EAAOl7C,EAAYrnB,GACtCuiE,EAAOl+D,KAAKyc,MAAMyhD,EAAOl7C,EAAYrnB,IAGlCqiE,IAEHpzD,EAAc2yD,UAAUI,EAAeltD,EAAE9Z,KAAMinE,GAC/CE,EAAOrtD,EAAEnZ,IAAIsmE,IAEVK,IACHrzD,EAAc2yD,UAAUI,EAAe10D,EAAEtS,KAAMknE,GAC/CE,EAAO90D,EAAE3R,IAAIumE,IAGfntD,EAAEzZ,IAAI0mE,EAAel5B,EAAGq5B,EAAMC,G,EAIlC,OAAOrtD,C,CAIX,EAOO,EAAAytD,iBAAP,SAAwB71D,EAA0B81D,GAEhD,IAAMtrC,EAAYxqB,EAAM1T,OAClBypE,EAAYD,EAAWxpE,OAC7B,GAAIk+B,EAAYurC,EACd,OAAO,EAET,IAAK,IAAI5pE,EAAI,EAAGA,GAAKq+B,EAAWr+B,IAC9B,GAA6B,IAAzB6T,EAAMwqB,EAAYr+B,IAAY6T,EAAMwqB,EAAYr+B,KAAO2pE,EAAWC,EAAY5pE,GAChF,OAAO,EAGX,OAAO,CACT,EASO,EAAAoW,iBAAP,SAAwBmZ,EAA+BhB,GAGrD,IAFA,IAAMvY,EAASuZ,EAAWpvB,OACpB+B,EAAiB,GACdlC,EAAI,EAAGA,EAAIgW,EAAQhW,IAAK,CAC/B,IAAMiD,EAAM+S,EAAS,EAAIhW,EACnBgc,EAAIuT,EAAWtsB,IAAQ,GACnBsrB,EAAYA,EAAYpuB,OAAS,EAAIH,IAAM,GAC7C,GAAW,IAANgc,GACX9Z,EAAK2nE,QAAQ5mE,E,CAGjB,OAAOf,CACT,EACF,EA/LA,GAAa,EAAAiU,cAAAA,EAmMb,2BACI2zD,EAAoC91D,EAAoC+1D,EAAqBC,EAC7FC,GACF,GAAID,EAAc,GAAKA,GAAeh2D,EAAO7T,OAC3C,MAAM,IAAIJ,MAAM,6BAElB,GAAIgqE,EAAc,GAAKA,GAAeD,EAAO3pE,OAC3C,MAAM,IAAIJ,MAAM,6BAElB,GAAIiqE,EAAcC,EAAYj2D,EAAO7T,OACnC,MAAM,IAAIJ,MAAM,kDAElB,GAAIgqE,EAAcE,EAAYH,EAAO3pE,OACnC,MAAM,IAAIJ,MAAM,4CAGlB,IAAK,IAAImoC,EAAS,EAAGA,EAAS+hC,EAAW/hC,IACvC4hC,EAAOC,EAAc7hC,GAAUl0B,EAAOg2D,EAAc9hC,EAExD,EAEA,8BA+CA,QA3CS,EAAApO,qBAAP,SACIowC,EAA8BC,EAAoBC,EAA+BC,EACjFC,GACF,GAAyB,IAArBJ,EAAU/pE,QAAsC,IAAtBiqE,EAAWjqE,OACvC,MAAM,IAAIJ,MAAM,8BAGlB,IAAIwqE,EACAC,EACAC,EAEAN,GACFI,EAAIL,EAAU,GACdM,EAAIN,EAAU,KAEdK,EAAIL,EAAU,GACdM,EAAIN,EAAU,IAGhB,IAAIQ,GAAQ,EAUZ,GARIL,GACFI,EAAIL,EAAW,GACfM,EAAO,IAEPD,EAAIL,EAAW,GACfM,EAAO,GAGLN,EAAWM,KAAUF,EACvB,MAAM,IAAIzqE,MAAM,sBAGlB,GAAIwqE,GAAK,GAAKE,GAAK,GAAKD,GAAK,EAC3B,MAAM,IAAIzqE,MAAM,2BAGlB,GAAIuqE,IAAcn0D,EAAcuzD,iBAAiBY,EAAW,CAACC,EAAGE,IAC9D,MAAM,IAAI1qE,MAAM,0CAGlB,MAAO,CAACwqE,EAAGE,EAAGD,EAChB,EACF,EA/CA,GAAa,EAAA3wC,SAAAA,EAiDb,8BAkGA,QAjGS,EAAA5K,wBAAP,SAA+B07C,GAE7B,OAAQA,GACN,KAAK,EAAAh+D,KAAK64D,YAAYC,SAASI,KAC7B,MAAO,OACT,KAAK,EAAAl5D,KAAK64D,YAAYC,SAASK,MAC7B,MAAO,QACT,KAAK,EAAAn5D,KAAK64D,YAAYC,SAASM,KAC7B,MAAO,OACT,KAAK,EAAAp5D,KAAK64D,YAAYC,SAASE,MAC7B,MAAO,QACT,KAAK,EAAAh5D,KAAK64D,YAAYC,SAASG,OAC7B,MAAO,SACT,KAAK,EAAAj5D,KAAK64D,YAAYC,SAASC,MAC7B,MAAO,QACT,KAAK,EAAA/4D,KAAK64D,YAAYC,SAASY,OAC7B,MAAO,SACT,KAAK,EAAA15D,KAAK64D,YAAYC,SAAS73D,MAC7B,MAAO,UACT,KAAK,EAAAjB,KAAK64D,YAAYC,SAASU,OAC7B,MAAO,UACT,KAAK,EAAAx5D,KAAK64D,YAAYC,SAAS33D,OAC7B,MAAO,SAIT,KAAK,EAAAnB,KAAK64D,YAAYC,SAASQ,MAC7B,MAAO,QACT,KAAK,EAAAt5D,KAAK64D,YAAYC,SAASa,OAC7B,MAAO,SAET,QACE,MAAM,IAAIvmE,MAAM,iCAA0B,EAAA4M,KAAK64D,YAAYC,SAASkF,KAE1E,EAEO,EAAAC,2BAAP,SAAkC5oE,GAChC,OAAQA,GACN,IAAK,OACH,OAAO,EAAA2K,KAAK64D,YAAYC,SAASI,KACnC,IAAK,QACH,OAAO,EAAAl5D,KAAK64D,YAAYC,SAASK,MACnC,IAAK,OACH,OAAO,EAAAn5D,KAAK64D,YAAYC,SAASM,KACnC,IAAK,QACH,OAAO,EAAAp5D,KAAK64D,YAAYC,SAASE,MACnC,IAAK,SACH,OAAO,EAAAh5D,KAAK64D,YAAYC,SAASG,OACnC,IAAK,QACH,OAAO,EAAAj5D,KAAK64D,YAAYC,SAASC,MACnC,IAAK,SACH,OAAO,EAAA/4D,KAAK64D,YAAYC,SAASY,OACnC,IAAK,UACH,OAAO,EAAA15D,KAAK64D,YAAYC,SAASoF,QACnC,IAAK,UACH,OAAO,EAAAl+D,KAAK64D,YAAYC,SAAS73D,MACnC,IAAK,UACH,OAAO,EAAAjB,KAAK64D,YAAYC,SAASU,OACnC,IAAK,SACH,OAAO,EAAAx5D,KAAK64D,YAAYC,SAAS33D,OACnC,IAAK,QACH,OAAO,EAAAnB,KAAK64D,YAAYC,SAASQ,MACnC,IAAK,SACH,OAAO,EAAAt5D,KAAK64D,YAAYC,SAASa,OAEnC,QACE,MAAM,IAAIvmE,MAAM,iCAA0BiC,IAEhD,EAEO,EAAA+/C,oBAAP,SAA2B7/C,GAEzB,OAAOA,EAAKqH,KAAI,SAAAkN,GAAK,iBAAKhI,OAAOgI,GAAKA,EAAEowD,WAAapwD,CAAhC,GACvB,EAEO,EAAA0pC,yBAAP,SAAgCoC,GAC9B,MAAO,CACLnC,WAAYpxB,EAAUC,wBAAwBszB,EAAUI,UACxD9uC,MAAO,CAAC3R,KAAM8sB,EAAU+yB,oBAAoBQ,EAAU1uC,MAAO5Q,IAAKsG,KAAI,SAAAkN,GAAK,OAAAA,EAAEosC,QAAF,MAE/E,EAEO,EAAAE,wBAAP,SAA+B1gC,GAE7B,IADA,IAAMngB,EAAO,GACJlC,EAAI,EAAGA,EAAIqiB,EAAO+zC,aAAcp2D,IACvCkC,EAAK9B,KAAKoO,EAASE,aAAa2T,EAAOngB,KAAKlC,KAE9C,OAAOkC,CACT,EAEO,EAAAu+C,8BAAP,SAAqC/lC,GAEnC,IADA,IAAMlO,EAAa,GACVxM,EAAI,EAAGA,EAAI0a,EAAKyoC,mBAAoBnjD,IAC3CwM,EAAWpM,KAAKsa,EAAKlO,WAAWxM,IAElC,OAAOwM,CACT,EACF,EAlGA,GAAa,EAAAwiB,UAAAA,EAoGb,8BAeA,QAXS,EAAAtgB,aAAP,SAAoBopC,EAAiCgzB,GACnD,OAAI,UAAKr8D,OAAOqpC,GACPA,EAAE+uB,WACA/uB,aAAa,EAAAmR,YAAY8hB,KAC3B,UAAKC,UAAU,CAACC,IAAKnzB,EAAEmzB,IAAKC,KAAMpzB,EAAEozB,KAAMJ,SAAUA,SAAAA,IAAoBjE,WAE1E/uB,CACT,EACO,EAAArpC,OAAP,SAAcqpC,GACZ,OAAO,UAAKrpC,OAAOqpC,IAAMA,aAAa,EAAAmR,YAAY8hB,IACpD,EACF,EAfA,GAAa,EAAAv8D,SAAAA,EAiBb,8BA0UA,QAzUS,EAAAxL,KAAP,SAAYd,GACV,OAAO0U,EAAUu0D,0BAA0BjpE,EAAM,EAAGA,EAAK/B,OAC3D,EAGO,EAAAsmC,kBAAP,SAAyBvkC,EAAyBotB,GAChD,GAAIA,EAAO,GAAKA,EAAOptB,EAAK/B,OAC1B,MAAM,IAAIJ,MAAM,+BAAwBuvB,EAAI,gDAAwCptB,EAAK/B,OAAM,iBAEjG,OAAOyW,EAAUu0D,0BAA0BjpE,EAAMotB,EAAMptB,EAAK/B,OAC9D,EAGO,EAAAomC,gBAAP,SAAuBrkC,EAAyBotB,GAC9C,GAAIA,EAAO,GAAKA,EAAOptB,EAAK/B,OAC1B,MAAM,IAAIJ,MAAM,+BAAwBuvB,EAAI,8CAAsCptB,EAAK/B,OAAM,iBAE/F,OAAOyW,EAAUu0D,0BAA0BjpE,EAAM,EAAGotB,EACtD,EAEO,EAAA67C,0BAAP,SAAiCjpE,EAAyB2+B,EAAe2E,GAEvE,IADA,IAAIxiC,EAAO,EACFhD,EAAI6gC,EAAO7gC,EAAIwlC,EAAKxlC,IAAK,CAGhC,GAAIkC,EAAKlC,IAAM,EACb,MAAM,IAAID,MAEN,sHAENiD,GAAQd,EAAKlC,E,CAEf,OAAOgD,CACT,EAEO,EAAAshB,eAAP,SAAsBpiB,GACpB,IAAMuS,EAAOvS,EAAK/B,OAClB,GAAa,IAATsU,EACF,MAAO,GACF,GAAa,IAATA,EACT,MAAO,CAAC,GAEV,IAAMC,EAAU,IAAIhS,MAAM+R,GAC1BC,EAAQD,EAAO,GAAK,EACpBC,EAAQD,EAAO,GAAKvS,EAAKuS,EAAO,GAChC,IAAK,IAAIzU,EAAIyU,EAAO,EAAGzU,GAAK,IAAKA,EAC/B0U,EAAQ1U,GAAK0U,EAAQ1U,EAAI,GAAKkC,EAAKlC,EAAI,GAEzC,OAAO0U,CACT,EAEO,EAAAyF,UAAP,SAAiBjY,GAEf,OADaA,EAAKgW,QACNsB,SACd,EAEO,EAAA8F,gBAAP,SAAuB04C,EAA4BtjD,EAA4B4a,QAChExvB,IAATwvB,IACFA,EAAO0oC,EAAQ73D,QAGjB,IADA,IAAI+nC,EAAS,EACJloC,EAAI,EAAGA,EAAIsvB,IAAQtvB,EAC1BkoC,GAAUxzB,EAAQ1U,GAAKg4D,EAAQh4D,GAEjC,OAAOkoC,CACT,EAEO,EAAA7oB,gBAAP,SAAuB6oB,EAAgBxzB,GACrC,IAAMD,EAAOC,EAAQvU,OACrB,GAAa,IAATsU,EACF,MAAO,GACF,GAAa,IAATA,EACT,MAAO,CAACyzB,EAASxzB,EAAQ,IAG3B,IADA,IAAMsjD,EAAoB,IAAIt1D,MAAMgS,EAAQvU,QACnCH,EAAI,EAAGA,EAAIg4D,EAAQ73D,OAAS,IAAKH,EACxCg4D,EAAQh4D,GAAKuL,KAAKyc,MAAMkgB,EAASxzB,EAAQ1U,IACzCkoC,GAAU8vB,EAAQh4D,GAAK0U,EAAQ1U,GAGjC,OADAg4D,EAAQA,EAAQ73D,OAAS,GAAK+nC,EACvB8vB,CACT,EAKO,EAAAp/B,cAAP,SAAqBtJ,EAAckC,GACjC,GAAIlC,GAAQkC,GAAclC,GAAQkC,EAChC,MAAM,IAAIzxB,MAAM,wCAElB,OAAOuvB,EAAO,EAAIA,EAAOkC,EAAalC,CACxC,EAEO,EAAA0T,cAAP,SAAqBJ,EAAyBpR,GAA9C,WACE,OAAOoR,EAAKr5B,KAAI,SAAAgnB,GAAK,SAAKqI,cAAcrI,EAAGiB,EAAtB,GACvB,EAUO,EAAA45C,eAAP,SAAsBtyD,EAAiB5W,EAAyBmpE,GAC9D,GAAoB,IAAhBnpE,EAAK/B,QAAiC,IAAjB2Y,EAAM3Y,OAC7B,MAAM,IAAIJ,MAAM,oDAElB,QAA0BD,IAAtBurE,EACFA,EAAoBnpE,EAAK/B,YAEzB,GAAIkrE,GAAqB,GAAKA,EAAoBnpE,EAAK/B,OACrD,MAAM,IAAIJ,MAAM,kCAIpB,IAAK,IAAIojC,EAAIkoC,EAAoB,EAAGloC,GAAK,IACvCrqB,EAAMqqB,OACFrqB,EAAMqqB,GAAKjhC,EAAKihC,OAFwBA,EAK5CrqB,EAAMqqB,GAAK,CAEf,EAcO,EAAAY,sBAAP,SAA6BunC,EAAiCC,GAE5D,GAA0B,IAAtBA,EAAWprE,OAAc,CAC3B,GAA4B,IAAxBmrE,EAAanrE,QAAiD,IAAjCyW,EAAU5T,KAAKsoE,GAC9C,MAAO,GAEP,MAAM,IAAIvrE,MAAM,oC,CAQpB,IAJA,IAAMyrE,EAAQD,EAAWprE,OACnB+jB,EAAe,IAAIxhB,MAAc8oE,GACnCC,GAAoB,EACpBC,EAAgB,EACX1rE,EAAI,EAAGA,EAAIwrE,EAAOxrE,IAAK,CAC9B,GAAIurE,EAAWvrE,IAAM,EACnB,MAAM,IAAID,MAAM,qDAElB,IAAuB,IAAnBwrE,EAAWvrE,GAAW,CACxB,IAA0B,IAAtByrE,EACF,MAAM,IAAI1rE,MAAM,kDAElB0rE,EAAmBzrE,C,KACd,CACL,GAAsB,IAAlBurE,EAAWvrE,GAAU,CACvB,GAAIA,GAAKsrE,EAAanrE,OACpB,MAAM,IAAIJ,MAAM,gFAElBmkB,EAAalkB,GAAKsrE,EAAatrE,E,MAE/BkkB,EAAalkB,GAAKurE,EAAWvrE,GAE/B0rE,GAAiBxnD,EAAalkB,E,EAIlC,IAAM2rE,EAAgB/0D,EAAU5T,KAAKsoE,GACrC,IAA0B,IAAtBG,EAAyB,CAC3B,GAAIE,EAAgBD,GAAkB,EACpC,MAAM,IAAI3rE,MAAM,oFACZurE,EAAY,4BAAoBC,EAAU,MAEhDrnD,EAAaunD,GAAoBE,EAAgBD,C,MAIjD,GAAIA,IAAkBC,EACpB,MAAM,IAAI5rE,MAAM,2DAGpB,OAAOmkB,CACT,EAQO,EAAA8kB,gBAAP,SAAuBhtB,EAAsB6a,GAC3C,OAAIA,EACKA,EAAKttB,KAAI,SAAChB,GAAM,OAAAyT,EAAEzT,EAAF,IAEhByT,EAAE9D,QAAQsB,SAErB,EAOO,EAAA8lB,SAAP,SAAgBp9B,EAAyB0pE,GACvC,IAAMn3D,EAAOvS,EAAK/B,OAClB,OAAO+B,EAAKqH,KAAI,SAAChB,EAAGvI,GAAM,OAAAuI,EAAIqjE,EAAI5rE,GAAK4rE,EAAI5rE,EAAIyU,EAArB,GAC5B,EAOO,EAAA6Z,SAAP,SAAgBu9C,EAA2BC,GACzC,OAAID,EAAO1rE,SAAW2rE,EAAO3rE,QAGtB0rE,EAAOxnC,OAAM,SAAC97B,EAAGvI,GAAM,OAAAuI,IAAMujE,EAAO9rE,EAAb,GAChC,EAMO,EAAAykE,wBAAP,SAA+BviE,G,QAC7B,GAAIA,EAAK/B,OAAS,EAChB,MAAM,IAAIP,UAAU,mDAEtB,IAAIoD,EAAO,E,IACX,IAAgB,QAAAd,GAAI,8BAAE,CAAjB,IAAM41C,EAAC,QACV,IAAK50C,OAAOgI,UAAU4sC,GACpB,MAAM,IAAIl4C,UAAU,yBAAkBk4C,EAAC,uBAEzC,GAAIA,EAAI,GAAKA,EAAI,WACf,MAAM,IAAIl4C,UAAU,gCAAyBk4C,EAAC,oBAEhD90C,GAAQ80C,C,mGAEV,OAAO90C,CACT,EAOO,EAAA60B,aAAP,SAAoB31B,EAAyBotB,GACvCA,EAAO,IACTA,GAAQptB,EAAK/B,QAEf,IAAM4rE,EAAQ7pE,EAAKmgC,QAAO,SAAC9R,EAAGy7C,GAAM,OAAAz7C,EAAIy7C,CAAJ,GAAO,GACrCC,EAAQ/pE,EAAKgW,MAAMoX,GAAM+S,QAAO,SAAC9R,EAAGy7C,GAAM,OAAAz7C,EAAIy7C,CAAJ,GAAO,GAGvD,MAFmB,CAACD,EAAQE,EAAOA,EAGrC,EAOO,EAAAhzD,aAAP,SAAoB/W,EAAyB0gC,GAC3C,IAAMhL,EAAa,IAAIl1B,MAGvBkgC,EAAOhsB,EAAUosB,cAAcJ,EAAM1gC,EAAK/B,QAE1C,IAAK,IAAIH,EAAI,EAAGA,EAAIkC,EAAK/B,OAAQH,IAAK,CACpC,IAAMksE,EAAgBtpC,EAAK3iC,QAAQD,IAAM,EACzC,GAAIksE,GAA6B,IAAZhqE,EAAKlC,GACxB,MAAM,IAAID,MAAM,6CAGG,IAAhB6iC,EAAKziC,QAAgB+B,EAAKlC,GAAK,GAAO4iC,EAAKziC,OAAS,IAAM+rE,IAC7Dt0C,EAAWx3B,KAAK8B,EAAKlC,G,CAIzB,OAAO43B,CACT,EAOO,EAAAkT,eAAP,SAAsB5oC,EAAyB0gC,GAC7C,IAAMhL,EAAa,IAAIl1B,MAAcR,EAAK/B,OAASyiC,EAAKziC,QAGxDy3B,EAAWvI,KAAK,GAGhB,IAAK,IAAIrvB,EAAI,EAAGA,EAAI4iC,EAAKziC,OAAQH,IAAK,CACpC,IAAMsvB,EAAO1Y,EAAUgiB,cAAcgK,EAAK5iC,GAAI43B,EAAWz3B,QACzD,GAAImvB,GAAQsI,EAAWz3B,OACrB,MAAM,IAAIJ,MAAM,mCAElB,GAAyB,IAArB63B,EAAWtI,GACb,MAAM,IAAIvvB,MAAM,+BAGlB63B,EAAWtI,GAAQ,C,CAIrB,IAAI68C,EAAoB,EACxB,IAASnsE,EAAI,EAAGA,EAAI43B,EAAWz3B,OAAQH,IACf,IAAlB43B,EAAW53B,KACb43B,EAAW53B,GAAKkC,EAAKiqE,MAMzB,GAAIA,IAAsBjqE,EAAK/B,OAC7B,MAAM,IAAIJ,MAAM,qDAGlB,OAAO63B,CACT,EACF,EA1UA,GAAa,EAAAhhB,UAAAA,EA6Ub,8BAwFA,QAtFS,EAAAw1D,IAAP,SACItC,EAAoC91D,EAAoC+1D,EAAqBC,EAC7FC,GACF,GAAID,EAAc,GAAKA,GAAeh2D,EAAO7T,OAC3C,MAAM,IAAIJ,MAAM,6BAElB,GAAIgqE,EAAc,GAAKA,GAAeD,EAAO3pE,OAC3C,MAAM,IAAIJ,MAAM,6BAElB,GAAIiqE,EAAcC,EAAYj2D,EAAO7T,OACnC,MAAM,IAAIJ,MAAM,kDAElB,GAAIgqE,EAAcE,EAAYH,EAAO3pE,OACnC,MAAM,IAAIJ,MAAM,4CAGlB,IAAK,IAAImoC,EAAS,EAAGA,EAAS+hC,EAAW/hC,IACvC4hC,EAAOC,EAAc7hC,IAAW38B,KAAKwe,IAAI/V,EAAOg2D,EAAc9hC,GAAS,EAE3E,EAGO,EAAAmkC,KAAP,SACIvC,EAAoC91D,EAAoC+1D,EAAqBC,EAC7FC,EAAmBzwC,GACrB,GAAIwwC,EAAc,GAAKA,GAAeh2D,EAAO7T,OAC3C,MAAM,IAAIJ,MAAM,6BAElB,GAAIgqE,EAAc,GAAKA,GAAeD,EAAO3pE,OAC3C,MAAM,IAAIJ,MAAM,6BAElB,GAAIiqE,EAAcC,EAAYj2D,EAAO7T,OACnC,MAAM,IAAIJ,MAAM,kDAElB,GAAIgqE,EAAcE,EAAYH,EAAO3pE,OACnC,MAAM,IAAIJ,MAAM,4CAGlB,IAAK,IAAImoC,EAAS,EAAGA,EAAS+hC,EAAW/hC,IACvC4hC,EAAOC,EAAc7hC,IAAY1O,EAAQxlB,EAAOg2D,EAAc9hC,EAElE,EAGO,EAAAokC,KAAP,SACIxC,EAAoC91D,EAAoC+1D,EAAqBC,EAC7FC,EAAmBz1D,GACrB,GAAIw1D,EAAc,GAAKA,GAAeh2D,EAAO7T,OAC3C,MAAM,IAAIJ,MAAM,6BAElB,GAAIgqE,EAAc,GAAKA,GAAeD,EAAO3pE,OAC3C,MAAM,IAAIJ,MAAM,6BAElB,GAAIiqE,EAAcC,EAAYj2D,EAAO7T,OACnC,MAAM,IAAIJ,MAAM,kDAElB,GAAIgqE,EAAcE,EAAYH,EAAO3pE,OACnC,MAAM,IAAIJ,MAAM,4CAGlB,IAAK,IAAImoC,EAAS,EAAGA,EAAS+hC,EAAW/hC,IACvC4hC,EAAOC,EAAc7hC,GAAU38B,KAAKwe,IAAI/V,EAAOg2D,EAAc9hC,GAAS1zB,EAE1E,EAGO,EAAAkM,IAAP,SACIopD,EAAoC91D,EAAoC+1D,EAAqBC,EAC7FC,GACF,GAAID,EAAc,GAAKA,GAAeh2D,EAAO7T,OAC3C,MAAM,IAAIJ,MAAM,6BAElB,GAAIgqE,EAAc,GAAKA,GAAeD,EAAO3pE,OAC3C,MAAM,IAAIJ,MAAM,6BAElB,GAAIiqE,EAAcC,EAAYj2D,EAAO7T,OACnC,MAAM,IAAIJ,MAAM,kDAElB,GAAIgqE,EAAcE,EAAYH,EAAO3pE,OACnC,MAAM,IAAIJ,MAAM,4CAGlB,IAAK,IAAImoC,EAAS,EAAGA,EAAS+hC,EAAW/hC,IACvC4hC,EAAOC,EAAc7hC,GAAWl0B,EAAOg2D,EAAc9hC,GAAU4hC,EAAOC,EAAc7hC,EAExF,EACF,EAxFA,GAAa,EAAAqkC,SAAAA,EA0Fb,8BAsCA,QA/BS,EAAAtkC,WAAP,SAAkB/lC,EAAyBotB,EAAc5S,EAAiBorB,GAExE,GAAqB,IAAjBprB,EAAMvc,OAAc,CACtB,IAAK2nC,EACH,MAAM,IAAI/nC,MAAM,8EAElBioC,EAAUwkC,eAAetqE,EAAKotB,GAAOwY,EAAYprB,E,CAKnD,IAFA,IAAMoT,EAAqB,GACrBC,EAAU,CAAC,GACR/vB,EAAI,EAAGA,EAAI0c,EAAMvc,SAAUH,EAAG,CAC3B,IAANA,GACF+vB,EAAQ3vB,KAAK2vB,EAAQ/vB,EAAI,GAAK0c,EAAM1c,EAAI,IAE1C,IAAM6T,EAAQ3R,EAAKgW,QACnBrE,EAAMyb,GAAQ5S,EAAM1c,GACpB8vB,EAAO1vB,KAAKyT,E,CAEd,MAAO,CAACic,EAAQC,EAClB,EAEO,EAAAy8C,eAAP,SAAsBC,EAA8B3kC,EAAoBprB,GAEtE,GAAI+vD,EAAuB3kC,GAAe,EACxC,MAAM,IAAI/nC,MAAM,4CAElB,IAAK,IAAIC,EAAI,EAAGA,EAAI8nC,IAAc9nC,EAChC0c,EAAMtc,KAAKqsE,EAAuB3kC,EAEtC,EACF,EAtCA,GAAa,EAAAE,UAAAA,EAwCb,8BA4FA,QAlFS,EAAA0kC,WAAP,SACI1wD,EAAW4mB,EAAgB+pC,EAAmB/rC,EAC9CX,GACF,IAAM/9B,EAAO8Z,EAAE9Z,KAAKgW,MAAM,GAEN,IAAhB0qB,EAAKziC,QACP+B,EAAK+S,SAAQ,SAACwB,EAAGutC,GAAQ,OAAAphB,EAAKxiC,KAAK4jD,EAAV,IAW3B,IARA,IAAMpsB,EAAag1C,EAAWC,gBAAgB3qE,EAAM0gC,GAAM,GAGpD5/B,EAAO4T,EAAU5T,KAAK40B,GACtBo0C,EAAI,IAAI,EAAArqE,OAAOi2B,EAAY5b,EAAEha,MAC7B0S,EAAUkC,EAAU0N,eAAesT,GACnCk1C,EAAel2D,EAAU0N,eAAepiB,GACxC6qE,EAAW,IAAIrqE,MAAMR,EAAK/B,QACvBH,EAAI,EAAGA,EAAIgD,EAAMhD,IAAK,CAC7B,IAAMg4D,EAAUphD,EAAUyI,gBAAgBrf,EAAG0U,GAE7CyB,EAAc2yD,UAAU9Q,EAAS91D,EAAM6qE,GACvCf,EAAExpE,IACEw1D,EACA4U,EAAWI,iBACPhxD,EAAE+G,WAAY6f,EAAM1gC,EAAM,EAAG0U,EAAU0I,gBAAgBytD,EAAUD,GAAelsC,EAAKX,G,CAG/F,OAAI0sC,EACKX,EAGA,IAAI,EAAArqE,OACPirE,EAAWC,gBAAgB3qE,EAAM0gC,EAAM+pC,GAAWX,EAAEhqE,UAAMlC,OAAWA,EAAWksE,EAAE/pE,KAAM+pE,EAAEtpD,OAElG,EAaO,EAAAsqD,iBAAP,SACI/oD,EAA0B2e,EAAgB1gC,EAAgB+qE,EAAoBC,EAC9EtsC,EAA4BX,GAC9B,IAAIxC,EAAM,EACV,GAAIwvC,GAAcrqC,EAAKziC,OACrB,OAAOygC,EAAI3c,EAAMipD,IAInB,IAFA,IAAM59C,EAAOsT,EAAKqqC,GACZzoE,EAAO8qB,GAAQptB,EAAK/B,OAAS,EAAIyW,EAAU5T,KAAKd,EAAKgW,MAAMoX,EAAO,IAC/DtvB,EAAI,EAAGA,EAAIkC,EAAKotB,GAAOtvB,IAC9By9B,EAAY,IAANz9B,EAAU4sE,EAAWI,iBAAiB/oD,EAAO2e,EAAM1gC,EAAM+qE,EAAa,EAAGC,EAAKtsC,EAAKX,GACzEA,EAAIxC,EAAKmvC,EAAWI,iBAAiB/oD,EAAO2e,EAAM1gC,EAAM+qE,EAAa,EAAGC,EAAKtsC,EAAKX,IAClGitC,GAAO1oE,EAET,OAAOi5B,CACT,EASO,EAAAovC,gBAAP,SAAuB3qE,EAAyB0gC,EAAyBC,GAEvE,IADA,IAAMjL,EAAa11B,EAAKgW,QACflY,EAAI,EAAGA,EAAI4iC,EAAKziC,OAAQH,IAE7B43B,EAAWgL,EAAK5iC,IADd6iC,EACoB,EAEA,EAG1B,OAAOjL,EAAW/a,QAAO,SAAA5Z,GAAO,OAAQ,IAARA,CAAA,GAClC,EACF,EA5FA,GAAa,EAAA2pE,WAAAA,EA8Fb,8BAwMA,QA9LS,EAAArsC,qBAAP,SACIR,EAA2BY,EAA8BtO,EAAuB3d,EAChF0d,EAAqBE,GACvB,IAAKyN,GAAoB1N,EAAYlyB,SAAWwgC,EAAUxgC,OAAS,EACjE,MAAM,IAAIJ,MAAM,sFAGlB,GAAIggC,EAEF,IAAK,IAAI98B,EAAM,EAAGA,EAAM09B,EAAUxgC,OAAS,EAAG8C,IACxCA,GAAOovB,EAAYlyB,OACrBkyB,EAAYjyB,KAAKugC,EAAU19B,EAAM,IAEjCovB,EAAYpvB,GAAO09B,EAAU19B,EAAM,GAMzC,IAASA,EAAM,EAAGA,EAAMovB,EAAYlyB,OAAQ8C,IAC1C,GAAIA,EAAMyR,EAAQvU,QAChB,GAAIuU,EAAQzR,GAAO,EACjB,MAAM,IAAIlD,MAAM,qDAGlB2U,EAAQtU,KAAK,GAKjB,IAAS6C,EAAM,EAAGA,EAAMovB,EAAYlyB,OAAQ8C,IAC1C,GAAIA,EAAMmvB,EAAUjyB,QAClB,GAAIiyB,EAAUnvB,GAAO,EACnB,MAAM,IAAIlD,MAAM,uDAGlBqyB,EAAUhyB,KAAK,GAKnB,IAAS6C,EAAM,EAAGA,EAA2B,EAArBovB,EAAYlyB,OAAY8C,IAC9C,GAAIA,EAAMqvB,EAAKnyB,QACb,GAAImyB,EAAKrvB,GAAO,EACd,MAAM,IAAIlD,MAAM,iDAGlBuyB,EAAKlyB,KAAK,GAKd,IAAS6C,EAAM,EAAGA,EAAMovB,EAAYlyB,OAAQ8C,IAAO,CACjD,GAAIovB,EAAYpvB,IAAQ,EACtB,MAAM,IAAIlD,MAAM,2CAGlB,GAAIuyB,EAAKrvB,IAAQovB,EAAYpvB,IAAQqvB,EAAKrvB,EAAMovB,EAAYlyB,SAAWkyB,EAAYpvB,GACjF,MAAM,IAAIlD,MAAM,qC,CAGtB,EAGO,EAAAs2B,yBAAP,SACIsK,EAA8BjsB,EAA4B0d,EAC1DC,EAAgCC,EAAgBH,GAClD,GAAKA,EAAL,CAIA,GAAIG,EAAKnyB,SAAW,GAAKwgC,EAAUxgC,OAAS,GAC1C,MAAM,IAAIJ,MAAM,gEAGlB,GAAI2U,EAAQvU,SAAYwgC,EAAUxgC,OAAS,EACzC,MAAM,IAAIJ,MAAM,6DAGlB,GAAIsyB,EAAYlyB,SAAYwgC,EAAUxgC,OAAS,EAC7C,MAAM,IAAIJ,MAAM,mEAGlB,IAAK,IAAIkD,EAAM,EAAGA,EAAM09B,EAAUxgC,OAAS,EAAG8C,IAC5CmzB,EAAa+2C,wBACTxsC,EAAU19B,EAAM,GAAIyR,EAAQzR,GAAMmvB,EAAUnvB,GAAMovB,EAAYpvB,GAAMqvB,EAAMrvB,EAAKA,EAAM09B,EAAUxgC,OAAS,EACxGgyB,E,CAER,EAaO,EAAAqO,uBAAP,SACIT,EAA2BY,EAA8BjsB,EAAmB0d,EAC5EC,EAAuBC,EAAgBH,GACzC,GAAIwO,EAAUxgC,QAAU,EACtB,MAAM,IAAIJ,MAAM,8CAIlB,IAAM63B,EAAa,CAAC+I,EAAU,GAAIA,EAAU,IAI5C,OAFAvK,EAAag3C,mBACTrtC,EAAkBY,EAAW/I,EAAYljB,EAAS0d,EAAWC,EAAaC,EAAMH,GAC7EyF,CACT,EAYO,EAAAy1C,uBAAP,SACI1sC,EAA8B2sC,EAA+B54D,EAAmB0d,EAChFC,EAAuBC,EAAgBH,GACzC,GAAIwO,EAAUxgC,QAAU,GAAKmtE,EAAWntE,QAAU,EAChD,MAAM,IAAIJ,MAAM,2DAIlB,IAAM63B,EAAa,CAAC+I,EAAU,GAAI2sC,EAAW,IAG7C,OADAl3C,EAAag3C,oBAAmB,EAAOzsC,EAAW/I,EAAYljB,EAAS0d,EAAWC,EAAaC,EAAMH,GAC9FyF,CACT,EAKe,EAAAw1C,mBAAf,SACIrtC,EAA2BY,EAA8B/I,EAAsBljB,EAC/E0d,EAA8BC,EAAgCC,EAAgBH,GAChF,GAAI4N,EACF,IAAK,IAAI98B,EAAM,EAAGA,EAAM09B,EAAUxgC,OAAS,EAAG8C,IAC5C20B,EAAWx3B,KAAK,QAGlB,IAAS6C,EAAM,EAAGA,EAAM09B,EAAUxgC,OAAS,EAAG8C,IAC5C20B,EAAWx3B,KAAKg2B,EAAa+2C,wBACzBxsC,EAAU19B,EAAM,GAAIyR,EAAQzR,GAAMmvB,EAAUnvB,GAAMovB,EAAYpvB,GAAMqvB,EAAMrvB,EAAKA,EAAM09B,EAAUxgC,OAAS,EACxGgyB,GAGV,EAIe,EAAAg7C,wBAAf,SACII,EAAgBjpE,EAAgBsvB,EAAkBD,EAAgBrB,EAAgBk7C,EAClFC,EAAsBt7C,GACxB,IAAMu7C,EAAU95C,GAAYD,EAAS,GAAK,EAC1C,IAAIxB,GAAuB,WAAZA,EAsBb,OAAO5mB,KAAKyc,OAAQulD,EAASj7C,EAAKk7C,GAAgBl7C,EAAKm7C,GAAgBC,GAAWppE,EAAU,GArB5F,OAAQ6tB,GACN,IAAK,QAGH,OAFAG,EAAKk7C,GAAgB,EACrBl7C,EAAKm7C,GAAgB,EACdliE,KAAKyc,OAAQulD,EAASG,GAAWppE,EAAU,GACpD,IAAK,aACL,IAAK,aACH,GAAiB,IAAbsvB,EACF,MAAM,IAAI7zB,MAAM,uDAEhB,IACM4tE,IADoBJ,EAASjpE,EAAS,GAAKA,EACX,GAAKA,EAASqvB,EAAS45C,EAI7D,OAHAj7C,EAAKk7C,GACY,eAAZr7C,EAA4B5mB,KAAKyc,OAAO2lD,EAAY,GAAK,GAAKpiE,KAAKyc,MAAM2lD,EAAY,GAC1Fr7C,EAAKm7C,GAAgBE,EAAYr7C,EAAKk7C,GAC/BjiE,KAAKyc,OAAQulD,EAASI,EAAYh6C,GAAUrvB,EAAU,GAEjE,QACE,MAAM,IAAIvE,MAAM,4BAKxB,EACF,EAxMA,GAAa,EAAAq2B,aAAAA,EA0MA,EAAAmC,UAAY,qBACZ,EAAAC,SAAW,qBAExB,4BAAiCh1B,GAC/B,OAAO,IAAIoqE,aAAclyD,OAAOlY,EAClC,C,8mECnuCA,cAEA,UACA,UACA,UA2BA,0BAiBE,KAAAqqE,gBAA+B,KAmC/B,KAAAC,eAAyC,KACzC,KAAAC,mBAAiD,KACjD,KAAAC,sBAAwB,EAExB,KAAAC,kBAAmB,CA0QrB,QAjSE,sBAAI,sCAAuB,C,IAA3B,WACE,GAA6B,OAAzB3qE,KAAKuqE,gBACP,MAAM,IAAI9tE,MAAM,2EAGlB,IAAIkC,EAAOqB,KAAK4qE,iBAAiBrrE,IAAIS,KAAKuqE,iBAM1C,OALK5rE,IACHA,EAAO,CAAC,EACRqB,KAAK4qE,iBAAiB1rE,IAAIc,KAAKuqE,gBAAiB5rE,IAG3CA,CACT,E,gCAeM,YAAAsO,WAAN,SAAiBjQ,G,oGACf,IAAK8K,UAAU+iE,IAEb,MAAM,IAAIpuE,MAAM,2CAGF,SAAMqL,UAAU+iE,IAAIC,kB,OACpC,KADMC,EAAU,UAEd,MAAM,IAAItuE,MAAM,6CAkBJ,OAfRuuE,EAAwC,CAC5CC,eAAgB,CACdC,+BAAgCH,EAAQI,OAAOD,+BAC/CE,iCAAkCL,EAAQI,OAAOC,iCACjDC,4BAA6BN,EAAQI,OAAOE,8BAK5CN,EAAQO,SAASxzD,IAAI,kCAAiE,YAA7B9a,EAAIG,OAAOouE,gBACtEvrE,KAAK2qE,kBAAmB,EAExBK,EAAiBQ,iBAAmB,CAAC,kCAGvC,EAAAxrE,KAAc,GAAM+qE,EAAQU,cAAcT,I,cAA1C,EAAKU,OAAS,SACd1rE,KAAK2rE,gBAAiB,IAAAC,sBAAqB5rE,MAC3CA,KAAKue,eAAiB,IAAI,EAAAqtB,eAAe5rC,MACzCA,KAAKk9D,QAAU,IAAIx/D,IACnBsC,KAAK6rE,qBAAuB,IAAInuE,IAChCsC,KAAK4qE,iBAAmB,IAAIltE,KAG5B,IAAAouE,iBAAgB9uE,EAAII,WAAaJ,EAAIotC,OAIrCpqC,KAAK0rE,OAAOK,kBAAoB,SAAAC,GAC1BA,EAAG3iC,iBAAiB4iC,oBAEtBtqB,QAAQtY,MAAM,0DAAmD2iC,EAAG3iC,MAAM6iC,SAE9E,EAEIlsE,KAAK2qE,mBACP3qE,KAAKmsE,kBAAoBnsE,KAAK0rE,OAAOU,eAAe,CAClD1tE,KAAM,YACN2lC,MAAO,K,YAKb,YAAAn3B,QAAA,WAKA,EAEA,YAAAm/D,kBAAA,WAIE,OAHKrsE,KAAKwqE,iBACRxqE,KAAKwqE,eAAiBxqE,KAAK0rE,OAAOY,wBAE7BtsE,KAAKwqE,cACd,EAEA,YAAA+B,sBAAA,WAIE,OAHKvsE,KAAKyqE,qBACRzqE,KAAKyqE,mBAAqBzqE,KAAKqsE,oBAAoBG,oBAE9CxsE,KAAKyqE,kBACd,EAEA,YAAAgC,eAAA,WACMzsE,KAAKyqE,qBACPzqE,KAAKyqE,mBAAmBvoC,MACxBliC,KAAKyqE,mBAAqB,KAE9B,EAEA,YAAAzwB,MAAA,WACEh6C,KAAKysE,iBACLzsE,KAAK0rE,OAAOgB,MAAMC,OAAO,CAAC3sE,KAAKqsE,oBAAoBz1B,WACnD52C,KAAK2rE,eAAeiB,wBACpB5sE,KAAKwqE,eAAiB,KACtBxqE,KAAK0qE,sBAAwB,CAC/B,EAcA,YAAAtlE,IAAA,SAAI0Y,EAAwCC,EAA+B6nD,EACvEiH,EACAC,GACF,GAAI/uD,EAAOlhB,SAAWihB,EAAQE,WAAWnhB,OACvC,MAAM,IAAIJ,MAAM,sCAA+BqhB,EAAQE,WAAWnhB,OAAM,MAK1E,IADA,IAAMkwE,EAAwB,GACrBrwE,EAAI,EAAGA,EAAIqhB,EAAOlhB,SAAUH,EAAG,CAEtC,KADMswE,EAAUhtE,KAAK2rE,eAAepsE,IAAIwe,EAAOrhB,GAAGiC,OAEhD,MAAM,IAAIlC,MAAM,iCAA0BshB,EAAOrhB,GAAGiC,OAEtDouE,EAAWrwE,GAAKswE,C,CAGlB,IAAM1nE,EAlMN,SAACoM,EAA4Cu7D,EAC5CC,GACC,IAAMC,EAA4BF,EAAkBhnE,KAAI,SAAAkN,GAAK,gBAAGA,EAAEvM,KAAK,KAAV,IAAkBA,KAAK,KAC9EwmE,EAA4BF,EAAkBtmE,KAAK,KACrDtB,EAAMoM,EAAYzV,KAKtB,OAJIyV,EAAY0M,YACd9Y,GAAO,IAAMoM,EAAY0M,UAAY,KAEvC9Y,EAAO,IAAM6nE,EAA4B,IAAMC,CAEjD,CAwLY/uD,CAAwBP,EAASC,EAAO9X,KAAI,SAAAvJ,GAAK,OAAAA,EAAEkC,IAAF,IAASmuE,EAAW9mE,KAAI,SAAAvJ,GAAK,OAAAA,EAAEgC,IAAF,KACtF4f,EAAWte,KAAKue,eAAeC,YAAYlZ,GACzCoM,EAAc4M,EAChBA,EAAS5M,YACsC,mBAAtCoM,EAA8Bve,IAAsBue,EAA8Bve,MAC9Bue,EAG3DuvD,EAAkD,IAAzBzH,EAAc/oE,OAAe6U,EAAY+yB,QAAQx+B,KAAI,SAACw9B,EAAG/mC,GAAM,OAAAA,CAAA,IAAKkpE,EACnG,GAAIyH,EAAuBxwE,SAAW6U,EAAY+yB,QAAQ5nC,OACxD,MAAM,IAAIJ,MAAM,sBAAe4wE,EAAuBxwE,OAAM,6BAAqB6U,EAAY+yB,QAAQ5nC,OAAM,MAI7G,IAAMywE,EAAkC,GAClCC,EAAyB,GAC/B,IAAS7wE,EAAI,EAAGA,EAAIgV,EAAY+yB,QAAQ5nC,SAAUH,EAAG,CAGnD,IAAKkD,OAAOgI,UAAUylE,EAAuB3wE,KAAO2wE,EAAuB3wE,IAAM,GAC7E2wE,EAAuB3wE,IAAMgV,EAAY+yB,QAAQ5nC,OACnD,MAAM,IAAIJ,MAAM,gCAAyB4wE,EAAuB3wE,KAElE,IAKMswE,EALAQ,GAA6C,IAA/BH,EAAuB3wE,GACrC+wE,GAA8C,IAA/BJ,EAAuB3wE,GACtCgxE,EAAcF,GAAeC,EAC/BX,EAAyBp7D,EAAY+yB,QAAQ/nC,GAAG2jB,SAAU3O,EAAY+yB,QAAQ/nC,GAAGkC,MACjFiuE,EAAmBQ,EAAuB3wE,GAAIgV,EAAY+yB,QAAQ/nC,GAAG2jB,SAAU3O,EAAY+yB,QAAQ/nC,GAAGkC,MAE1G,KADMouE,EAAUhtE,KAAK2rE,eAAepsE,IAAImuE,EAAW/uE,OAEjD,MAAM,IAAIlC,MAAM,kCAA2BixE,EAAW/uE,OAKxD,GAHI6uE,GACFxtE,KAAK2tE,cAAc7wE,KAAKkwE,GAEtBS,EAAc,CAChB,IAAIG,EAAiB5tE,KAAK6rE,qBAAqBtsE,IAAIS,KAAKuqE,iBACnDqD,IACHA,EAAiB,GACjB5tE,KAAK6rE,qBAAqB3sE,IAAIc,KAAKuqE,gBAAkBqD,IAEvDA,EAAe9wE,KAAKkwE,E,CAEtBM,EAAkBxwE,KAAK4wE,GACvBH,EAAYzwE,KAAKkwE,E,CAGnB,IAAMa,EAA0B7tE,KAAKue,eAAeuvD,2BAA2Bp8D,EAAYq8D,cAAchwD,IAazG,OAXKO,IACHA,EAAWte,KAAKue,eAAeK,MAAMlN,EAAam8D,GAClD7tE,KAAKue,eAAeM,YAAYvZ,EAAKgZ,KAGvC,IAAA0vD,WACI,QACA,WAAM,sCAAyBt8D,EAAYzV,KAAI,kBAAUqJ,EAAG,kBAAUuoE,EAAwB,GAAE,YAC5FA,EAAwB,GAAE,YAAIA,EAAwB,GADpD,IAEV7tE,KAAKue,eAAenZ,IAAIkZ,EAAUyuD,EAAYQ,EAAaM,GAEpDP,CACT,EAEA,YAAAW,OAAA,SAAOC,EAAmBvvE,GACxBqB,KAAK2rE,eAAesC,OAAOC,EAAWvvE,EACxC,EAEA,YAAAwvE,OAAA,SAAO9qE,EAAa+qE,GAClBpuE,KAAK2rE,eAAewC,OAAO9qE,EAAK+qE,EAClC,EAEM,YAAAC,SAAN,SAAeH,EAAmBI,G,gGACZ,SAAMtuE,KAAK2rE,eAAe0C,SAASH,I,cAAjD1O,EAAc,SAIP8O,IACRpvE,IAAI,IAAItB,WAAW4hE,I,YAG1B,YAAA+O,MAAA,SAAM7uE,GACJ,OAAOM,KAAK2rE,eAAe9nB,OAAOnkD,GAAM8uE,EAC1C,EAEA,YAAAC,KAAA,SAAKC,GACH,OAAO1uE,KAAK2rE,eAAegD,QAAQD,EACrC,EAEA,YAAAE,aAAA,SAAa3yE,EAAc4yE,EAAkBrmE,GAC3C,IAAMkkC,EAAK,EAAAoiC,wBAAwBvvE,IAAItD,GACvC,IAAKywC,EACH,MAAM,IAAIjwC,MAAM,kCAA2BR,IAG7C+D,KAAKk9D,QAAQh+D,IAAI2vE,EAAU,CAAC5yE,EAAMywC,EAAG,GAAI,CAACA,EAAG,GAAIlkC,IACnD,EAEA,YAAAumE,cAAA,SAAcF,G,QACNjB,EAAiB5tE,KAAK6rE,qBAAqBtsE,IAAIsvE,GACrD,GAAIjB,EAAgB,C,IAClB,IAAmB,QAAAA,GAAc,8BAAE,CAA9B,IAAMjvE,EAAI,QACbqB,KAAK2rE,eAAegD,QAAQhwE,EAAK6vE,G,mGAEnCxuE,KAAK6rE,qBAAqBniE,OAAOmlE,E,CAGnC7uE,KAAK4qE,iBAAiBlhE,OAAOmlE,GAC7B7uE,KAAKk9D,QAAQxzD,OAAOmlE,EACtB,EAEA,YAAAG,cAAA,SAAcH,EAAkB5rE,G,QACxBotB,EAASrwB,KAAKk9D,QAAQ39D,IAAIsvE,GAChC,IAAKx+C,EACH,MAAM,IAAI5zB,MAAM,8BAAuBoyE,IAEnC,QAAkCx+C,EAAM,GAAvCp0B,EAAI,KAAEgzE,EAAW,KAAE/lE,EAAU,KACpC,GAA6B,OAAzBlJ,KAAKuqE,gBACP,MAAM,IAAI9tE,MAAM,kBAAWR,EAAI,8CAEjC+D,KAAKuqE,gBAAkBsE,EAGnB3lE,EAAW,KACbA,EAAW,GAAKA,EAAW,GAAGA,EAAW,IACzCA,EAAW,QAAK1M,IAGlB,IAAAwxE,WAAU,QAAQ,WAAM,8CAAiC/xE,EAAI,OAArC,IAExB+D,KAAK2tE,cAAgB,GACrB,IAEE,OADAsB,EAAYhsE,EAASiG,EAAW,IACzB,C,CACP,MAAOxC,GAEP,OADA,IAAAsnE,WAAU,UAAW,2BAAoB/xE,EAAI,4BAAoByK,IAC1D,C,aAEP,IAAmB,QAAA1G,KAAK2tE,eAAa,8BAAE,CAAlC,IAAMhvE,EAAI,QACbqB,KAAK2rE,eAAegD,QAAQhwE,EAAK6vE,G,mGAEnCxuE,KAAK2tE,cAAgB,GACrB3tE,KAAKuqE,gBAAkB,I,CAE3B,EACF,EAlUA,GAAa,EAAA2E,cAAAA,C,u/CC9Bb,cAEA,UACA,UAEA,UAKA,aACE,WACYxzE,EAAuC2kB,EAAkC1hB,EACjEC,GADR,KAAAlD,OAAAA,EAAuC,KAAA2kB,SAAAA,EAAkC,KAAA1hB,KAAAA,EACjE,KAAAC,KAAAA,CAA0B,CAYhD,OAVE,YAAAuwE,gBAAA,WACE,OAAO,IAAIxxE,aAAaqC,KAAKtE,OAAO0zE,MAAMlvE,OAAQF,KAAKrB,KAAM,EAAA2U,UAAU5T,KAAKM,KAAKpB,MACnF,EAEA,YAAA0F,QAAA,SAAQ+qE,GACN,GAAI,EAAA/7D,UAAU5T,KAAK2vE,KAAa,EAAA/7D,UAAU5T,KAAKM,KAAKpB,MAClD,MAAM,IAAInC,MAAM,qBAElB,OAAO,IAAI6yE,EAAetvE,KAAKtE,OAAQsE,KAAKqgB,SAAUrgB,KAAKrB,KAAM0wE,EACnE,EACF,EAfA,GAiBA,aAME,WAAoB3zE,EAA+BQ,EAAwBqzE,GAAvD,KAAA7zE,OAAAA,EAA+B,KAAAQ,QAAAA,EACjD,IAAMszE,EAAU9zE,EAAO+zE,QAGnB7wB,EAAa2wB,GAAqB,EACtCvvE,KAAK0vE,gBAAkBF,EAAQ5wB,KAI/B,IAHA,IAAM/yB,EAAa2jD,EAAQ5wB,KAErB7gC,EAAuB,GACpBrhB,EAAI,EAAGA,EAAImvB,EAAYnvB,IAAK,CAKnC,IAJA,IAAM2jB,EAAWmvD,EAAQ5wB,KACnBjgD,EAAO6wE,EAAQ5wB,KACfj/C,EAAM6vE,EAAQ5wB,KACdhgD,EAAiB,GACduU,EAAI,EAAGA,EAAIxT,EAAKwT,IACvBvU,EAAK9B,KAAK0yE,EAAQ5wB,MAEpB7gC,EAAOjhB,KAAK,IAAIwyE,EAAe5zE,EAAQ2kB,EAAU1hB,EAAMC,G,CAEzDoB,KAAK+d,OAASA,CAChB,CAoCF,OA3DE,sBAAI,yBAAU,C,IAAd,WACE,OAAO/d,KAAK9D,QAAQyzE,uBACtB,E,gCAuBA,YAAAC,QAAA,SAAQ9xD,EAAwC+xD,GAAhD,I,MAAA,OAGQC,EACgF,QAAlF,EAA4B,QAA5B,EAAAD,aAAoB,EAApBA,EAAsB9xD,cAAM,eAAE9X,KAAI,SAAAvJ,GAAK,MAAa,iBAANA,EAAiB,EAAKqhB,OAAOrhB,GAAKA,CAAzC,WAA2C,QAAIsD,KAAK+d,OAEzF6nD,EAA6C,QAA7B,EAAAiK,aAAoB,EAApBA,EAAsBprC,eAAO,QAAI,GAWvD,OAAOzkC,KAAK9D,QAAQkJ,IAAI0Y,EAASgyD,EAAclK,GAVpB,SAACpwD,EAAe6K,EAAkBzhB,GACzD,WAAI0wE,EAAe,EAAK5zE,OAAQ2kB,EAAU,EAAKtQ,OAAOyF,EAAO5W,GAAOA,EAApE,IAC0B,SAACyhB,EAAkBzhB,GAC/C,IAAMmjE,GAAc,IAAAgO,sBAAqB1vD,GACzC,IAAK0hD,EACH,MAAM,IAAItlE,MAAM,iCAA0B4jB,IAE5C,IAAM2vD,EAAajO,EAAc,EAAAzuD,UAAU5T,KAAKd,GAChD,OAAO,IAAI0wE,EAAe,EAAK5zE,OAAQ2kB,EAAU,EAAKnkB,QAAQyvE,eAAe9nB,OAAOmsB,GAAYxB,GAAI5vE,EACtG,GAEF,EAEA,YAAAmR,OAAA,SAAOyF,EAAe5W,GACpB,IAAM+jD,EAAQ3iD,KAAKtE,OAAOu0E,YAC1B,IACE,IAAMtxE,EAAOqB,KAAKtE,OAAOw0E,WAA+B,GAAnB,EAAItxE,EAAK/B,SAC1C+nC,EAASjmC,GAAQ,EACrBqB,KAAKtE,OAAO+zE,QAAQ7qC,KAAYhmC,EAAK/B,OACrC,IAAK,IAAIH,EAAI,EAAGA,EAAIkC,EAAK/B,OAAQH,IAC/BsD,KAAKtE,OAAO+zE,QAAQ7qC,KAAYhmC,EAAKlC,GAEvC,OAAOsD,KAAKtE,OAAOy0E,YAAYnwE,KAAK0vE,gBAAiBl6D,EAAO7W,E,SAE5DqB,KAAKtE,OAAO00E,aAAaztB,E,CAE7B,EACF,EA9DA,GAgEa,EAAAvmD,KAAO,SAAMV,EAAuBsB,GAAQ,0C,+DACjDZ,EAAOV,EAAO20E,YACRvoE,UAAU+iE,IAAlB,YACF,IAAK7tE,EAAIC,KAAKwK,KACZ,MAAM,IAAIhL,MACN,qGAGN,UADM,EAAU,IAAI,EAAAyyE,eACNjiE,WAAWjQ,I,OAAzB,SAEAZ,EAEI,CAACF,QAAO,IAGR,SAACwD,GAAiB,SAAQ6uE,MAAM7uE,EAAd,IAGlB,SAACgvE,GAAgB,SAAQD,KAAKC,EAAb,IAGjB,SAACrrE,EAAa+qE,EAAa1uE,EAAc4wE,GACvC,QADuC,IAAAA,IAAAA,GAAA,GACnCA,GACF,IAAAtC,WAAU,WAAW,WAAM,+CAAkC3qE,EAAG,iBAAS+qE,EAAG,kBAAU1uE,EAA3D,IAC3B,EAAQyuE,OAAO9qE,EAAK+qE,OACf,EACL,IAAAJ,WAAU,WAAW,WAAM,sDAAyC3qE,EAAG,uBAAe+qE,EAAG,kBAAU1uE,EAAxE,IAC3B,IAAMf,EAAOjD,EAAO60E,OAAOxwD,SAAS1c,EAAKA,EAAM3D,GAC/C,EAAQuuE,OAAOG,EAAKzvE,E,CAExB,IAGA,SAAMuvE,EAAmBsC,EAAoB9wE,GAAY,0C,kDAMnD,OAJA,IAAAsuE,WACI,WACA,WAAM,qDAAwCE,EAAS,wBAAgBsC,EAAU,kBAAU9wE,EAArF,IAEV,GAAM,EAAQ2uE,SAASH,GAAW,WAAM,OAAAxyE,EAAO60E,OAAOxwD,SAASywD,EAAYA,EAAa9wE,EAAhD,K,cAAxC,S,cAIN,SAACzD,EAAco0B,EAAgB7nB,GAAuB,SAAQomE,aAAa3yE,EAAMo0B,EAAQ7nB,EAAnC,IAGtD,SAAC6nB,GAAmB,SAAQ0+C,cAAc1+C,EAAtB,IAGpB,SAACA,EAAgBk/C,IACf,IAAAvB,WAAU,WAAW,WAAM,yCAA4B39C,EAAM,+BAAuBk/C,EAAzD,IAC3B,IAAMtsE,EAAU,IAAIwtE,EAAmB/0E,EAAQ,EAAS6zE,GACxD,OAAO,EAAQP,cAAc3+C,EAAQptB,EACvC,I,+qBCjJR,IAcIytE,EACAtmC,EAfJ,UAOMumC,EAAiB,CAAC,IAAK,IAAK,IAAK,IAAK,KAU/B,EAAA7E,gBAAkB,SAAC8E,EAA2BC,GACzDH,EAAiBE,EACjBxmC,EAAQymC,CACV,EAKa,EAAAC,IAAM,SAAC1zE,EAAoBgnE,GACtC,IAjBa2M,EAAe7E,EAiBtB8E,GAAe,IAAAC,sBAAqB7zE,GAEtC4zE,IADgB,IAAAC,sBAAqBP,KAlB5BK,EAoBLC,EApBoB9E,EAoBS,mBAAR9H,EAAqBA,IAAQA,EAlB1DziB,QAAQ97B,IAAI,WAAI8qD,EAAeI,GAAM,aAAI,IAAInuB,MAAOC,cAAa,YAAIqpB,IAoBvE,EAKa,EAAA8B,UAAwB,W,IAAC,sDAChC5jC,GACF,EAAA0mC,IAAG,oBAAII,IAAI,GAEf,C,oeCxCA,8BAUA,QAHS,EAAAvM,gBAAP,SAAuBjsD,EAAqBxH,GAC1C,OAAQwH,EAAE,KAAOxH,EAAE,QAAM1U,EAAY,CAACkc,EAAE,GAAIxH,EAAE,GAChD,EACF,EAVA,GAAa,EAAA0zD,WAAAA,EAab,8BAiEA,QAzDS,EAAAx5C,UAAP,SAAiBy5C,EAA0BC,EAA0BC,G,WAAA,IAAAA,IAAAA,GAAA,GACnE,IAAMrqC,EAAQmqC,EAAMhoE,OACd89B,EAAQmqC,EAAMjoE,OACpB,GAAc,IAAV69B,EACF,OAAOoqC,EAET,GAAc,IAAVnqC,EACF,OAAOkqC,EAET,IAAMG,EAAQ/8D,KAAK47B,IAAIghC,EAAMhoE,OAAQioE,EAAMjoE,QACrCooE,EAAQ,IAAI7lE,MAAc4lE,GAGhC,GAAID,EAAU,CACZ,GAAIrqC,EAAQ,GAAKC,EAAQ,EACvB,OAEF,IAAMuqC,EACFN,EAAWD,gBAAgB,CAACE,EAAMnqC,EAAQ,GAAImqC,EAAMnqC,EAAQ,IAAK,CAACoqC,EAAMnqC,EAAQ,GAAImqC,EAAMnqC,EAAQ,KACtG,QAAqBn+B,IAAjB0oE,EACF,OAEF,IAAuCA,EAAY,GAAlDD,EAAMD,EAAQ,GAAE,KAAEC,EAAMD,EAAQ,GAAE,I,CAGrC,IAAK,IAAItoE,EAAIqoE,EAAW,EAAI,EAAGroE,GAAKsoE,EAAOtoE,IAAK,CAC9C,IAAMyoE,EAAOzqC,EAAQh+B,EAAI,EAAI,EAAImoE,EAAMnqC,EAAQh+B,GACzC0oE,EAAOzqC,EAAQj+B,EAAI,EAAI,EAAIooE,EAAMnqC,EAAQj+B,GAE/C,GAAIyoE,IAASC,GAAQD,EAAO,GAAKC,EAAO,EACtC,OAEFH,EAAMD,EAAQtoE,GAAKuL,KAAK47B,IAAIshC,EAAMC,E,CAGpC,OAAOH,CACT,EAOO,EAAAmB,iBAAP,SAAwB71D,EAA0B81D,GAEhD,IAAMtrC,EAAYxqB,EAAM1T,OAClBypE,EAAYD,EAAWxpE,OAC7B,GAAIk+B,EAAYurC,EACd,OAAO,EAET,IAAK,IAAI5pE,EAAI,EAAGA,GAAKq+B,EAAWr+B,IAC9B,GAA6B,IAAzB6T,EAAMwqB,EAAYr+B,IAAY6T,EAAMwqB,EAAYr+B,KAAO2pE,EAAWC,EAAY5pE,GAChF,OAAO,EAGX,OAAO,CACT,EACF,EAjEA,GAAa,EAAAmW,cAAAA,EAoEb,8BA+GA,QA3GS,EAAAnT,KAAP,SAAYd,GACV,OAAO0U,EAAUu0D,0BAA0BjpE,EAAM,EAAGA,EAAK/B,OAC3D,EAKO,EAAAsmC,kBAAP,SAAyBvkC,EAAyBotB,GAChD,GAAIA,EAAO,GAAKA,EAAOptB,EAAK/B,OAC1B,MAAM,IAAIJ,MAAM,+BAAwBuvB,EAAI,gDAAwCptB,EAAK/B,OAAM,iBAEjG,OAAOyW,EAAUu0D,0BAA0BjpE,EAAMotB,EAAMptB,EAAK/B,OAC9D,EAKO,EAAAomC,gBAAP,SAAuBrkC,EAAyBotB,GAC9C,GAAIA,EAAO,GAAKA,EAAOptB,EAAK/B,OAC1B,MAAM,IAAIJ,MAAM,+BAAwBuvB,EAAI,8CAAsCptB,EAAK/B,OAAM,iBAE/F,OAAOyW,EAAUu0D,0BAA0BjpE,EAAM,EAAGotB,EACtD,EAKO,EAAA67C,0BAAP,SAAiCjpE,EAAyB2+B,EAAe2E,GAEvE,IADA,IAAIxiC,EAAO,EACFhD,EAAI6gC,EAAO7gC,EAAIwlC,EAAKxlC,IAAK,CAGhC,GAAIkC,EAAKlC,IAAM,EACb,MAAM,IAAID,MAEN,sHAENiD,GAAQd,EAAKlC,E,CAEf,OAAOgD,CACT,EAEO,EAAAshB,eAAP,SAAsBpiB,GACpB,IAAMuS,EAAOvS,EAAK/B,OAClB,GAAa,IAATsU,EACF,MAAO,GACF,GAAa,IAATA,EACT,MAAO,CAAC,GAEV,IAAMC,EAAU,IAAIhS,MAAM+R,GAC1BC,EAAQD,EAAO,GAAK,EACpBC,EAAQD,EAAO,GAAKvS,EAAKuS,EAAO,GAChC,IAAK,IAAIzU,EAAIyU,EAAO,EAAGzU,GAAK,IAAKA,EAC/B0U,EAAQ1U,GAAK0U,EAAQ1U,EAAI,GAAKkC,EAAKlC,EAAI,GAEzC,OAAO0U,CACT,EAKO,EAAAkkB,cAAP,SAAqBtJ,EAAckC,GACjC,GAAIlC,GAAQkC,GAAclC,GAAQkC,EAChC,MAAM,IAAIzxB,MAAM,wCAElB,OAAOuvB,EAAO,EAAIA,EAAOkC,EAAalC,CACxC,EAEO,EAAA0T,cAAP,SAAqBJ,EAAyBpR,GAA9C,WACE,OAAOoR,EAAKr5B,KAAI,SAAAgnB,GAAK,SAAKqI,cAAcrI,EAAGiB,QAAAA,EAAcoR,EAAKziC,OAAzC,GACvB,EAQO,EAAA6oC,gBAAP,SAAuBhtB,EAAsB6a,GAC3C,OAAIA,EACKA,EAAKttB,KAAI,SAAChB,GAAM,OAAAyT,EAAEzT,EAAF,IAEhByT,EAAE9D,QAAQsB,SAErB,EAOO,EAAA8lB,SAAP,SAAgBp9B,EAAyB0pE,GACvC,IAAMn3D,EAAOvS,EAAK/B,OAClB,OAAO+B,EAAKqH,KAAI,SAAChB,EAAGvI,GAAM,OAAAuI,EAAIqjE,EAAI5rE,GAAK4rE,EAAI5rE,EAAIyU,EAArB,GAC5B,EAOO,EAAA6Z,SAAP,SAAgBu9C,EAA2BC,GACzC,OAAID,EAAO1rE,SAAW2rE,EAAO3rE,QAGtB0rE,EAAOxnC,OAAM,SAAC97B,EAAGvI,GAAM,OAAAuI,IAAMujE,EAAO9rE,EAAb,GAChC,EACF,EA/GA,GAAa,EAAA4W,UAAAA,EAiHb,8BAwMA,QA9LS,EAAA2pB,qBAAP,SACIR,EAA2BY,EAA8BtO,EAAuB3d,EAChF0d,EAAqBE,GACvB,IAAKyN,GAAoB1N,EAAYlyB,SAAWwgC,EAAUxgC,OAAS,EACjE,MAAM,IAAIJ,MAAM,sFAGlB,GAAIggC,EAEF,IAAK,IAAI98B,EAAM,EAAGA,EAAM09B,EAAUxgC,OAAS,EAAG8C,IACxCA,GAAOovB,EAAYlyB,OACrBkyB,EAAYjyB,KAAKugC,EAAU19B,EAAM,IAEjCovB,EAAYpvB,GAAO09B,EAAU19B,EAAM,GAMzC,IAASA,EAAM,EAAGA,EAAMovB,EAAYlyB,OAAQ8C,IAC1C,GAAIA,EAAMyR,EAAQvU,QAChB,GAAIuU,EAAQzR,GAAO,EACjB,MAAM,IAAIlD,MAAM,qDAGlB2U,EAAQtU,KAAK,GAKjB,IAAS6C,EAAM,EAAGA,EAAMovB,EAAYlyB,OAAQ8C,IAC1C,GAAIA,EAAMmvB,EAAUjyB,QAClB,GAAIiyB,EAAUnvB,GAAO,EACnB,MAAM,IAAIlD,MAAM,uDAGlBqyB,EAAUhyB,KAAK,GAKnB,IAAS6C,EAAM,EAAGA,EAA2B,EAArBovB,EAAYlyB,OAAY8C,IAC9C,GAAIA,EAAMqvB,EAAKnyB,QACb,GAAImyB,EAAKrvB,GAAO,EACd,MAAM,IAAIlD,MAAM,iDAGlBuyB,EAAKlyB,KAAK,GAKd,IAAS6C,EAAM,EAAGA,EAAMovB,EAAYlyB,OAAQ8C,IAAO,CACjD,GAAIovB,EAAYpvB,IAAQ,EACtB,MAAM,IAAIlD,MAAM,2CAGlB,GAAIuyB,EAAKrvB,IAAQovB,EAAYpvB,IAAQqvB,EAAKrvB,EAAMovB,EAAYlyB,SAAWkyB,EAAYpvB,GACjF,MAAM,IAAIlD,MAAM,qC,CAGtB,EAGO,EAAAs2B,yBAAP,SACIsK,EAA8BjsB,EAA4B0d,EAC1DC,EAAgCC,EAAgBmiD,EAAwBtiD,GAC1E,GAAKA,EAAL,CAIA,GAAIG,EAAKnyB,SAAW,GAAKwgC,EAAUxgC,OAAS,GAC1C,MAAM,IAAIJ,MAAM,gEAGlB,GAAI2U,EAAQvU,SAAYwgC,EAAUxgC,OAAS,EACzC,MAAM,IAAIJ,MAAM,6DAGlB,GAAIsyB,EAAYlyB,SAAYwgC,EAAUxgC,OAAS,EAC7C,MAAM,IAAIJ,MAAM,mEAGlB,IAAK,IAAIkD,EAAM,EAAGA,EAAM09B,EAAUxgC,OAAS,EAAG8C,IAC5CmzB,EAAa+2C,wBACTxsC,EAAU19B,GAAOwxE,EAAgB,EAAI,IAAK//D,EAAQzR,GAAMmvB,EAAUnvB,GAAMovB,EAAYpvB,GAAMqvB,EAAMrvB,EAChGA,EAAM09B,EAAUxgC,OAAS,EAAGgyB,E,CAEpC,EAaO,EAAAqO,uBAAP,SACIT,EAA2BY,EAA8BjsB,EAAmB0d,EAC5EC,EAAuBC,EAAgBH,GACzC,GAAIwO,EAAUxgC,QAAU,EACtB,MAAM,IAAIJ,MAAM,8CAIlB,IAAM63B,EAAa,CAAC+I,EAAU,GAAIA,EAAU,IAI5C,OAFAvK,EAAag3C,mBACTrtC,EAAkBY,EAAW/I,EAAYljB,EAAS0d,EAAWC,EAAaC,EAAMH,GAC7EyF,CACT,EAYO,EAAAy1C,uBAAP,SACI1sC,EAA8B2sC,EAA+B54D,EAAmB0d,EAChFC,EAAuBC,EAAgBH,GACzC,GAAIwO,EAAUxgC,QAAU,GAAKmtE,EAAWntE,QAAU,EAChD,MAAM,IAAIJ,MAAM,2DAIlB,IAAM63B,EAAa,CAAC+I,EAAU,GAAI2sC,EAAW,IAG7C,OADAl3C,EAAag3C,oBAAmB,EAAOzsC,EAAW/I,EAAYljB,EAAS0d,EAAWC,EAAaC,EAAMH,GAC9FyF,CACT,EAKe,EAAAw1C,mBAAf,SACIrtC,EAA2BY,EAA8B/I,EAAsBljB,EAC/E0d,EAA8BC,EAAgCC,EAAgBH,GAChF,GAAI4N,EACF,IAAK,IAAI98B,EAAM,EAAGA,EAAM09B,EAAUxgC,OAAS,EAAG8C,IAC5C20B,EAAWx3B,KAAK,QAGlB,IAAS6C,EAAM,EAAGA,EAAM09B,EAAUxgC,OAAS,EAAG8C,IAC5C20B,EAAWx3B,KAAKg2B,EAAa+2C,wBACzBxsC,EAAU19B,EAAM,GAAIyR,EAAQzR,GAAMmvB,EAAUnvB,GAAMovB,EAAYpvB,GAAMqvB,EAAMrvB,EAAKA,EAAM09B,EAAUxgC,OAAS,EACxGgyB,GAGV,EAIe,EAAAg7C,wBAAf,SACII,EAAgBjpE,EAAgBsvB,EAAkBD,EAAgBrB,EAAgBk7C,EAClFC,EAAsBt7C,GACxB,IAAMu7C,EAAU95C,GAAYD,EAAS,GAAK,EAC1C,IAAIxB,GAAuB,WAAZA,EAsBb,OAAO5mB,KAAKyc,OAAQulD,EAASj7C,EAAKk7C,GAAgBl7C,EAAKm7C,GAAgBC,GAAWppE,EAAU,GArB5F,OAAQ6tB,GACN,IAAK,QAGH,OAFAG,EAAKk7C,GAAgB,EACrBl7C,EAAKm7C,GAAgB,EACdliE,KAAKyc,OAAQulD,EAASG,GAAWppE,EAAU,GACpD,IAAK,aACL,IAAK,aACH,GAAiB,IAAbsvB,EACF,MAAM,IAAI7zB,MAAM,uDAEhB,IACM4tE,IADoBJ,EAASjpE,EAAS,GAAKA,EACX,GAAKA,EAASqvB,EAAS45C,EAI7D,OAHAj7C,EAAKk7C,GACY,eAAZr7C,EAA4B5mB,KAAKyc,OAAO2lD,EAAY,GAAK,GAAKpiE,KAAKyc,MAAM2lD,EAAY,GAC1Fr7C,EAAKm7C,GAAgBE,EAAYr7C,EAAKk7C,GAC/BjiE,KAAKyc,OAAQulD,EAASI,EAAYh6C,GAAUrvB,EAAU,GAEjE,QACE,MAAM,IAAIvE,MAAM,4BAKxB,EACF,EAxMA,GAAa,EAAAq2B,aAAAA,EA0Mb,8BA+CA,QA3CS,EAAA0D,qBAAP,SACIowC,EAA8BC,EAAoBC,EAA+BC,EACjFC,GACF,GAAyB,IAArBJ,EAAU/pE,QAAsC,IAAtBiqE,EAAWjqE,OACvC,MAAM,IAAIJ,MAAM,8BAGlB,IAAIwqE,EACAC,EACAC,EAEAN,GACFI,EAAIL,EAAU,GACdM,EAAIN,EAAU,KAEdK,EAAIL,EAAU,GACdM,EAAIN,EAAU,IAGhB,IAAIQ,GAAQ,EAUZ,GARIL,GACFI,EAAIL,EAAW,GACfM,EAAO,IAEPD,EAAIL,EAAW,GACfM,EAAO,GAGLN,EAAWM,KAAUF,EACvB,MAAM,IAAIzqE,MAAM,sBAGlB,GAAIwqE,GAAK,GAAKE,GAAK,GAAKD,GAAK,EAC3B,MAAM,IAAIzqE,MAAM,2BAGlB,GAAIuqE,IAAcn0D,EAAcuzD,iBAAiBY,EAAW,CAACC,EAAGE,IAC9D,MAAM,IAAI1qE,MAAM,0CAGlB,MAAO,CAACwqE,EAAGE,EAAGD,EAChB,EACF,EA/CA,GAAa,EAAA3wC,SAAAA,EAkDA,EAAAtB,UAAY,qBACZ,EAAAC,SAAW,oB,uHCjcxB,iBACE,WAAY1sB,GACVlL,OAAOmL,OAAOzI,KAAMwI,EACtB,CAUF,OAPE,sBAAW,uBAAQ,C,IAAnB,sBAKE,OAJKxI,KAAK0I,YACR1I,KAAK0I,UACDpL,OAAO0H,oBAAoBhF,MAAM2I,OAAO1C,KAAI,SAAAhK,GAAQ,gBAAI,EAAiCA,GAArC,IAA8C2K,KAAK,MAEtG5G,KAAK0I,SACd,E,gCACF,EAbA,GAsBa,EAAAE,4BAA8B,SAAoCJ,GAC3E,WAAIK,EAA0BL,EAA9B,C,i1ECtBJ,cAEA,UAuDM4oE,EAA2B,SAAC1xE,GAAiB,OAAuB,GAAvBuI,KAAKE,KAAKzI,EAAO,GAAjB,EAE/C2xE,EAAO,EAGX,aAYE,WAAoBn1E,GAAA,KAAAA,QAAAA,EAClB8D,KAAKsxE,aAAe,IAAI5zE,IACxBsC,KAAKuxE,cAAgB,IAAI7zE,IACzBsC,KAAKwxE,2BAA6B,GAClCxxE,KAAKyxE,eAAiB,EACxB,CAgJF,OA9IE,YAAAxD,OAAA,SAAOO,EAAe7vE,GACpB,IAAM+yE,EAAiB/yE,EAAKuB,OACtByxE,EAAYhzE,EAAKkH,WACjB+rE,EAAYjzE,EAAKmH,WACjBpG,EAAO0xE,EAAyBQ,GAGhCC,EAAe7xE,KAAKsxE,aAAa/xE,IAAIivE,GAC3C,IAAKqD,EACH,MAAM,IAAIp1E,MAAM,yCAElB,GAAIo1E,EAAaC,eAAiBF,EAChC,MAAM,IAAIn1E,MAAM,gDAAyCo1E,EAAaC,aAAY,uBAAeF,IAInG,IAAMG,EAAwB/xE,KAAK9D,QAAQwvE,OAAO50B,aAE9C,CAACk7B,kBAAkB,EAAMtyE,KAAI,EAAE4gB,MAAO2xD,eAAeC,UAAYD,eAAeE,WAG9E3S,EAAcuS,EAAsBK,iBAC1C,IAAIx0E,WAAW4hE,GAAatgE,IAAI,IAAItB,WAAW8zE,EAAgBC,EAAWC,IAC1EG,EAAsBM,QAItB,IAAM7H,EAAiBxqE,KAAK9D,QAAQmwE,oBACpCrsE,KAAK9D,QAAQuwE,iBACbjC,EAAe8H,mBAAmBP,EAAuB,EAAGF,EAAa7E,QAAQ9sE,OAAQ,EAAGR,IAE5F,IAAAsuE,WAAU,WAAW,WAAM,kDAAqCQ,EAAE,IAAvC,IAE3BxuE,KAAKwxE,2BAA2B10E,KAAKi1E,EACvC,EAEA,YAAA5D,OAAA,SAAOoE,EAAqBC,GAE1B,IAAMC,EAAqBzyE,KAAKsxE,aAAa/xE,IAAIgzE,GACjD,IAAKE,EACH,MAAM,IAAIh2E,MAAM,6CAGlB,IAAMi2E,EAA0B1yE,KAAKsxE,aAAa/xE,IAAIizE,GACtD,IAAKE,EACH,MAAM,IAAIj2E,MAAM,kDAElB,GAAIg2E,EAAmBX,eAAiBY,EAAwBZ,aAC9D,MAAM,IAAIr1E,MAAM,qDAElB,IAAMiD,EAAO0xE,EAAyBqB,EAAmBX,cAEzD9xE,KAAK9D,QAAQmwE,oBAAoBiG,mBAC7BG,EAAmBzF,QAAQ9sE,OAAQ,EAAGwyE,EAAwB1F,QAAQ9sE,OAAQ,EAAGR,EACvF,EAGA,YAAAmkD,OAAA,SAAOnkD,EAAc4gB,QAAA,IAAAA,IAAAA,EAAQ2xD,eAAeU,QAAUV,eAAeE,SAAWF,eAAeW,UAM7F,IAAM5C,EAAaoB,EAAyB1xE,GAGtCmzE,EAAY7yE,KAAK9D,QAAQwvE,OAAO50B,aAAa,CAACp3C,KAAMswE,EAAY1vD,MAAK,IAErE0sD,EAAU,CAACwB,GAzFY6C,IAyFc3yE,KAAM,EAAAo0E,YAAYC,QAAS7yE,OAAQ2yE,GAI9E,OAHA7yE,KAAKsxE,aAAapyE,IAAI8tE,EAAQwB,GAAI,CAACxB,QAAO,EAAE8E,aAAcpyE,KAE1D,IAAAsuE,WAAU,WAAW,WAAM,oDAAuCtuE,EAAI,mBAAWstE,EAAQwB,GAA9D,IACpBxB,CACT,EAEA,YAAAztE,IAAA,SAAIivE,G,MACF,OAAgC,QAAzB,EAAAxuE,KAAKsxE,aAAa/xE,IAAIivE,UAAG,eAAExB,OACpC,EAEA,YAAA2B,QAAA,SAAQH,GACN,IAAMwE,EAAahzE,KAAKsxE,aAAa/xE,IAAIivE,GACzC,IAAKwE,EACH,MAAM,IAAIv2E,MAAM,iCAclB,OAXA,IAAAuxE,WAAU,WAAW,WAAM,mDAAsCQ,EAAE,wBAAgBwE,EAAWhG,QAAQwB,GAA3E,IAE3BxuE,KAAKsxE,aAAa5nE,OAAO8kE,GACzBxuE,KAAKyxE,eAAe30E,KAAKk2E,EAAWhG,QAAQ9sE,QAGpBF,KAAKuxE,cAAchyE,IAAIivE,IAE7CxuE,KAAKuxE,cAAc7nE,OAAO8kE,GAGrBwE,EAAWlB,YACpB,EAEM,YAAAzD,SAAN,SAAeG,G,iFAEb,GADMyE,EAAejzE,KAAKuxE,cAAchyE,IAAIivE,GAE1C,MAAO,CAAP,EAAOyE,EAAat0E,MAItB,KADMq0E,EAAahzE,KAAKsxE,aAAa/xE,IAAIivE,IAEvC,MAAM,IAAI/xE,MAAM,uBAwBlB,OArBM+tE,EAAiBxqE,KAAK9D,QAAQmwE,oBACpCrsE,KAAK9D,QAAQuwE,iBACPyG,EAAgBlzE,KAAK9D,QAAQwvE,OAAO50B,aAEtC,CAACp3C,KAAMszE,EAAWlB,aAAcxxD,MAAO2xD,eAAeW,SAAWX,eAAekB,WACpF3I,EAAe8H,mBACXU,EAAWhG,QAAQ9sE,OAA4B,EAAuBgzE,EACtE,EAA4BF,EAAWlB,cAE3C9xE,KAAK9D,QAAQ89C,QAEPo5B,EAAkB,IAAItwE,SAAqB,SAACC,GAChDmwE,EAAcG,SAASC,WAAWC,MAAMlvB,MAAK,WAC3C,IAAM1lD,EAAOu0E,EAAcd,iBAAiBx9D,MAAM,GAClDs+D,EAAcM,UACdzwE,EAAQpE,EACV,GACF,IAEAqB,KAAKuxE,cAAcryE,IAAIsvE,EAAI,CAAC7vE,KAAMy0E,IAE3B,CAAP,EAAOA,E,QAGT,YAAAxG,sBAAA,W,gBACE,IAAqB,QAAA5sE,KAAKwxE,4BAA0B,8BAAnC,QACRgC,S,sGAET,IAAqB,QAAAxzE,KAAKyxE,gBAAc,8BAAvB,QACR+B,S,kGAEX,EACF,EAjKA,GAmKa,EAAA5H,qBAAuB,W,IAAC,sDACjC,WAAI6H,EAAkB,WAAlBA,EAAkB,aAAIvC,IAAI,IAA9B,C,8vBCnOJ,gBACA,UACA,UACA,UACA,aACA,UACA,aAOa,EAAApC,wBAA+D,IAAIpxE,IAAI,CAClF,CAAC,MAAO,CAACilB,EAASC,MAClB,CAAC,OAAQ,CAACD,EAASE,OACnB,CAAC,QAAS,CAACF,EAAS+wD,QACpB,CAAC,MAAO,CAAC5wD,EAAU/K,MACnB,CAAC,OAAQ,CAAC4K,EAASK,OACnB,CAAC,QAAS,CAACL,EAASgxD,QACpB,CAAC,OAAQ,CAAChxD,EAASM,OACnB,CAAC,QAAS,CAACN,EAASixD,QAEpB,CAAC,cAAe,CAACC,EAAK3wD,YAAa2wD,EAAK1wD,6BACxC,CAAC,OAAQ,CAACR,EAASxa,OACnB,CAAC,UAAW,CAACwa,EAASmxD,UACtB,CAAC,OAAQ,CAACnxD,EAASY,OACnB,CAAC,OAAQ,CAAC,EAAAK,KAAM,EAAAC,sBAChB,CAAC,MAAO,CAAClB,EAASqB,MAClB,CAAC,OAAQ,CAACrB,EAASoxD,OACnB,CAAC,MAAO,CAACjxD,EAAUzF,MACnB,CAAC,MAAO,CAACsF,EAAS0B,IAAK1B,EAASqxD,uBAChC,CAAC,MAAO,CAACrxD,EAASsxD,MAClB,CAAC,MAAO,CAACtxD,EAAS4B,MAClB,CAAC,QAAS,CAAC5B,EAAS+B,QACpB,CAAC,OAAQ,CAAC,EAAAG,KAAM,EAAAiR,sBAChB,CAAC,oBAAqB,CAAC+9C,EAAK7uD,kBAAmB6uD,EAAK5uD,mCACpD,CAAC,gBAAiB,CAAC4uD,EAAK3uD,cAAe2uD,EAAKK,+BAC5C,CAAC,YAAa,CAACvxD,EAAS6C,UAAW7C,EAASqxD,uBAC5C,CAAC,SAAU,CAAC,EAAAluD,SAEZ,CAAC,UAAW,CAAC+tD,EAAK7tD,QAAS6tD,EAAK5tD,yBAChC,CAAC,MAAO,CAACnD,EAAU1F,MACnB,CAAC,MAAO,CAACuF,EAASuD,MAClB,CAAC,MAAO,CAACpD,EAAU2D,MACnB,CAAC,aAAc,CAAC9D,EAASwxD,aACzB,CAAC,OAAQ,CAACxxD,EAASwE,OACnB,CAAC,UAAW,CAACxE,EAAS4E,UACtB,CAAC,MAAO,CAAC5E,EAAS6E,MAClB,CAAC,OAAQ,CAAC7E,EAASyxD,OACnB,CAAC,OAAQ,CAACzxD,EAASqF,OACnB,CAAC,MAAO,CAAClF,EAAU3F,MACnB,CAAC,MAAO,CAACwF,EAAS0F,MAClB,CAAC,OAAQ,CAAC1F,EAAS2F,OACnB,CAAC,kBAAmB,CAAC3F,EAAS0xD,gBAAiB1xD,EAASqxD,uBACxD,CAAC,YAAa,CAAC,EAAAn9D,UAAW,EAAA2R,4B,sJCnCf,EAAA8rD,YAAc,SAACC,GAC1B,OAAQA,GACN,KAAK,EACH,MAAO,MACT,KAAK,EACH,MAAO,YACT,KAAK,EACH,MAAO,YACT,KAAK,EACH,MAAO,YACT,QACE,MAAM,IAAI93E,MAAM,UAAG83E,EAAS,iCAElC,EAEa,EAAAC,oBACT,SAAC9/C,EAAyB+/C,EAAoCC,EAAiBC,GAC7E,YADwB,IAAAF,IAAAA,GAAA,QAAoC,IAAAC,IAAAA,GAAA,QAAiB,IAAAC,IAAAA,EAAA,GAMtE,EACT,EAES,EAAAC,sBAAwB,SAACrmD,EAAkBmG,GAAoC,wBACpFnG,EAAU,iDAAmD,GAAE,mBAC/DmG,EAAa,qCAAuC,GAAE,WAF8B,C,qWC3B5F,cAEA,UACA,UAGA,UACA,UACA,SA2Ha,EAAAmgD,8BACT,SAAC92D,EAA+B+N,EAA2B5iB,EAC1D+hB,EAAgC6pD,EAAmBC,EAAmBC,EAAkBzmD,EACxF0mD,GACC,IAAMC,EAAuC,SAAtBhsE,EAAW1F,OAC5B2xE,EAAaD,EAAiBn3D,EAAO,GAAGnf,KAAK,GAAKmf,EAAO,GAAGnf,KAAK,GACjEkzB,EAAY7G,EAAY,GACxBmqD,EAAWF,EAAiBjqD,EAAY,GAAKA,EAAY,GACzDoqD,EAAYH,EAAiBjqD,EAAY,GAAKA,EAAY,GAC1D+G,EAAckjD,EAAiBjqD,EAAY,GAAKA,EAAY,GAC5DqqD,IAAYH,EAAa,GAAM,GAAKA,EAAa,GAAM,IAAMD,GAClDE,EAAW,GAAM,IAAMF,IACpCljD,EAAc,GAAM,EAGlBujD,EAAYL,EAAiBljD,EAAcojD,EAAWC,EACtDG,EAAYN,EAAiBE,EAAWC,EAAYrjD,EACpDyjD,EACFH,EAAS,CAAC,EAAG,EAAG,GAAK,CAACC,GAAa,EAAI,EAAI,GAAIA,EAAY,GAAKC,GAAa,EAAI,EAAI,GAAI,GACvFE,EACFJ,EAAS,CAAC,EAAG,EAAG,GAAK,CAACC,GAAa,EAAI,EAAI,EAAGA,EAAY,GAAKC,GAAa,EAAI,EAAI,EAAG,GACrFG,EAAW,CACf1tE,KAAKE,KAAKotE,EAAYE,EAAc,GAAKC,EAAkB,IAC3DztE,KAAKE,KAAKqtE,EAAYC,EAAc,GAAKC,EAAkB,IAC3DztE,KAAKE,KAAK2pB,EAAY2jD,EAAc,GAAKC,EAAkB,MAG7D,IAAA1H,WAAU,WAAW,WAAM,8CAAiC2H,EAAjC,IAE3B,IAAMC,EAAmBN,EAAUJ,GAAkBC,EAAa,GAAM,EAAI,EAAI,EAAKO,EAAkB,GAEjGG,EAAaJ,EAAc,GAAKC,EAAkB,GAClDI,EAAaL,EAAc,GAAKC,EAAkB,GAClDK,EAAY9tE,KAAK47B,IAAI4xC,EAAc,GAAKG,EAAkBH,EAAc,IAExEO,EAAYlB,EAAYe,GAAe,EACvCI,EAAYlB,EAAYe,GAAe,EACvCI,EAAWlB,EAAWe,GAAc,EAEpCI,EAAeb,EAAS,CAACM,EAAkB,EAAG,GAAK,CAAC,EAAG,EAAG,GAE1DQ,EAAgB,CACpB,4DAAqDd,GAA+B,IAArBM,EAAyB,YAAc,MAAK,MAC3G,4DAAqDN,EAAS,YAAc,MAAK,OAE/Ee,EAAmB,+DACwBf,EAAS,YAAc,MAAK,4CACnDA,EAAS,YAAc,MAAK,yGAEmBA,EAAS,YAAc,MAAK,iIAEpEA,EAAS,MAAQ,GAAE,sBAUlD,OARI/mD,IACF6nD,EAAct5E,KAAK,+DAAwDw4E,EAAS,YAAc,MAAK,OACvGe,GAAoB,oEAC8Bf,EAAS,YAAc,MAAK,4CACvDJ,EAAiB,IAAM,KAAG,OAAGI,EAAS,MAAQ,GAAE,kBAIlE,EAAP,KACKxpD,GAAQ,CACX2Y,QAAS,CAAC,CAAC7lC,KAAMqsB,EAAa5K,SAAUtC,EAAO,GAAGsC,SAAUi2D,YAAa,EAAAxD,YAAYC,UACrFhF,cAAe,WAAM,OAAE9gD,EAAG0oD,EAAS,GAAIjN,EAAGiN,EAAS,GAAIY,EAAGZ,EAAS,GAA9C,EACrBa,gBAAiB,WAAM,0BACrB,EAAAC,cAAa,6SAIbL,EAAcxvE,KAAK,IAAG,wCACHwvE,EAAcv5E,OAAM,oDACrCy4E,EAAS,YAAc,MAAK,4CACTc,EAAcv5E,OAAS,EAAC,8FAERkhB,EAAO,GAAGnf,KAAKgI,KAAK,KAAI,4DACxBmX,EAAO,GAAGnf,KAAKgI,KAAK,KAAI,8DACtBqkB,EAAYrkB,KAAK,KAAI,qEACd,EAAA0M,UAAU0N,eAAeiK,GAAarW,MAAM,EAAG,GAAGhO,KAAK,KAAI,gEAChEsC,EAAW6lB,YAAY,GAAE,aAAK7lB,EAAW6lB,YAAY,GAAE,yDAC9D7lB,EAAW8lB,KAAK,GAAE,aAAK9lB,EAAW8lB,KAAK,GAAE,4DACtC9lB,EAAWkI,QAAQ,GAAE,aAAKlI,EAAWkI,QAAQ,GAAE,8DAC7ClI,EAAW4lB,UAAU,GAAE,aAAK5lB,EAAW4lB,UAAU,GAAE,+CAClEgmD,EAAS,8CACTC,EAAS,6CACVC,EAAQ,sBAC/BqB,EAAgB,qBA9MtB,SAACnB,EAAyBc,EAAoBC,EAAoBC,EAAmBQ,EACpFhiD,EAAyBiiD,EAAmCC,EAAuBC,EACnFjB,QAFoF,IAAAc,IAAAA,GAAA,QAC3D,IAAAC,IAAAA,GAAA,QAAmC,IAAAC,IAAAA,EAAA,QAAuB,IAAAC,IAAAA,EAAA,QACnF,IAAAjB,IAAAA,EAAA,GACC,IAsBMkB,EAAgB5B,EAAiB,6DAGA,6DAIjC6B,EAAkB7B,EAAiB,+GAOA,+GAQnC8B,EAAU9B,EAAiB,YAAc,YACzC+B,EAAS/B,EAAiB,YAAc,YACxCj+C,EAAMi+C,EAAiB,MAAQ,MAC/Bh+C,EAAMg+C,EAAiB,MAAQ,MAC/BgC,EAAe,gEAENhC,EAAiB,cAAgB,cAAa,+BAChDj+C,EAAG,0CACHA,EAAG,0CAELC,EAAG,4DACHA,EAAG,6LAGJA,EAAG,8CACC,IAAAo9C,aAAYsC,GAAkB,6JAGpBI,EAAO,mCAA2BC,EAAM,sBAC9DH,EAAa,4EA/DK,SAAClB,GACnB,OAAQA,GACN,KAAK,EACH,MAAO,uBACT,KAAK,EACH,MAAO,gEACT,KAAK,EACH,MAAO,2BACT,QACE,MAAM,IAAIn5E,MAAM,2BAAoBm5E,EAAgB,uBAE1D,CAsDEuB,CAAYP,GAAkB,gCAI1BQ,EAAUlC,EAAkBc,GAAaE,EAAW,kCACxCU,EAAiB,kBACnCM,GAC0D,kCACxCN,EAAiB,kEAEjCM,EAAY,gCAEP,IAAA5C,aAAYsC,GAAkB,UACHV,GAAYD,EAAY,kCACxCW,EAAiB,kBACnCM,GAC0D,kCACxCN,EAAiB,kEAEjCM,EAAY,gCAEP,IAAA5C,aAAYsC,GAAkB,UAE/BS,EAAU,UA5EI,SAACzB,GACnB,OAAQA,GACN,KAAK,EACH,MAAO,qCACT,KAAK,EACH,MAAO,yCACT,QACE,MAAM,IAAIn5E,MAAM,2BAAoBm5E,EAAgB,uBAE1D,CAmEmB0B,CAAYT,IAEzBU,GAAU,IAAAjD,aAAYsB,GACtB4B,EAAQtC,GAAiB,IAAAZ,aAAYsC,IAAqB,IAAAtC,aAAYuC,GACtEY,EAAQvC,GAAiB,IAAAZ,aAAYuC,IAAqB,IAAAvC,aAAYsC,GAsB5E,MArBiB,iBACjB,IAAApC,qBAAoB9/C,EAAYiiD,EAAgD,IAArBf,EAAwB,GAAE,oEAClC4B,EAAK,qBACtDtC,EAAiBkC,EAAUC,EAAO,6EAGeI,EAAK,qBACtDvC,EAAiBmC,EAAUD,EAAO,oFAGsBG,EAAO,wCAC7C3B,EAAgB,uHAInBV,EAAiB,cAAgB,cAAa,oBAC7D6B,EAAe,oBACf,IAAAnC,uBAAsB8B,EAAShiD,GAAW,gGAK9C,CA0FQgjD,CACIxC,EAAgBc,EAAWC,EAAWC,EAAU3nD,OAAS/xB,GAAW,EAAO25E,EAAa,GACxFA,EAAa,GAAIA,EAAa,IAAG,yBAErCb,GAAS,IAAAqC,4BAA2BjC,EAAmBD,GAAgBP,EAAgBa,IAC9E,IAAA6B,wBACIlC,EAAmBD,GAAgBP,EAAgBa,GAAW,OAAOv5E,EACrEy4E,GA9BM,GAgC3B,C,0GCpOS,EAAAwB,cAAgB,uV,+IC0ChB,EAAAkB,2BACT,SAACE,EAAyBC,EAAyCC,EAAoBhC,EACtFiC,EAAgBC,EAAsBC,QAD4B,IAAAH,IAAAA,GAAA,QAAoB,IAAAhC,IAAAA,EAAA,SACtF,IAAAiC,IAAAA,GAAA,QAAgB,IAAAC,IAAAA,EAAA,SAAsB,IAAAC,IAAAA,GAAA,GACrC,IA7C8BrhE,EA6CxBg/D,EAAaiC,EAAc,GAAKD,EAAc,GAC9C/B,EAAagC,EAAc,GAAKD,EAAc,GAC9CM,EAAaJ,EAAalC,EAAaE,EACvCqC,EAAaL,EAAahC,EAAYF,EACtCD,EAAmBuC,EAAaL,EAAc,GAC9CO,EAAgBtC,EAAY+B,EAAc,GAEhD,KAAQC,GAAmC,IAArBnC,GAA+C,IAArBiC,EAAc,MACrDE,GAAoC,IAArBnC,GAA+C,IAArBA,IAC5CuC,EAAaL,EAAc,IAAO,GAAK/B,EAAY+B,EAAc,IAAO,GAA0B,IAArBD,EAAc,GAC/F,MAAM,IAAIp7E,MAAM,wBAAiBs7E,EAAU,sCACvCnC,EAAgB,iCAAyBiC,EAAc,GAAE,0DACjCjC,EAAgB,0CACrCuC,EAAU,iDAAyCL,EAAc,GAAE,uBACtE/B,EAAS,kDAA0C+B,EAAc,GAAE,0BACnED,EAAc,GAAE,gBAEtB,MAAO,oDAC6BjC,EAAgB,kBAAUuC,EAAavC,EAAgB,cAAMwC,EAAU,+DAC/DtC,EAAa+B,EAAc,GAAE,cAAM9B,EAAS,sCAEvE8B,EAAc,GAAE,mCAChBA,EAAc,GAAE,uCACZjC,EAAgB,gCACvBG,EAAS,yCAEF+B,EAAc,GAAE,aAAKA,EAAc,GAAE,aAAKA,EAAc,GAAE,qPAKnEI,EAAY,IAAM,0BAAyB,mEAGzCA,EAAY,IAAM,iCAAgC,gEAEtDF,EAAS,IAAM,kBAAiB,0DACFnC,EAAU,iCAErCmC,EAAS,UAAG/vE,KAAKE,KAAK8vE,EAAkBlC,IAAe,iCAAgC,6BACzFiC,EAAS,4BAAqBC,GAAoB,IAAG,4HAKxCI,EAAa,0RA1FPxhE,EAgGGkhE,EA/FjClhE,EACK,4JAOA,wJAuFuC,gHAIRwhE,EAAa,6mBAatB,IAArBzC,EAAyB,GAAK,6DAA4D,yBAhGvE,SAACmC,EAAqBnC,GACnD,OAAImC,EACK,+NAIoB,IAArBnC,EAAyB,GAAK,8DAA6D,8OAKpE,IAArBA,EAAyB,GAAK,4CAA2C,eAG1E,yRAMsB,IAArBA,EAAyB,GAAK,0CAAyC,cAGnF,CA2EY0C,CAAuBP,EAAYnC,GAAiB,8MAU5D,EAEJ,IAAM2C,EAAyB,SAAC1hE,GAC9B,OAAIA,EACK,yJAOA,wJAMX,EAOa,EAAA+gE,uBACT,SAACC,EAAyBC,EAAyCC,EAAoBhC,EACtFiC,EAAgBC,EAAsBhD,QAD4B,IAAA8C,IAAAA,GAAA,QAAoB,IAAAhC,IAAAA,EAAA,SACtF,IAAAiC,IAAAA,GAAA,QAAgB,IAAAC,IAAAA,EAAA,SAAsB,IAAAhD,IAAAA,GAAA,GACrC,IAAMY,EAAagC,EAAc,GAAKC,EAAc,GAC9ChC,EAAa+B,EAAc,GAAKC,EAAc,GAC9CK,EAAaJ,EAAalC,EAAaE,EACvCqC,EAAaL,EAAahC,EAAYF,EAE5C,GAAMuC,EAAaN,EAAc,IAAO,GAAKK,EAAaL,EAAc,IAAO,GACzE/B,EAAY+B,EAAc,IAAO,EACrC,MAAM,IAAIr7E,MAAM,qBAAc27E,EAAU,iDACpCN,EAAc,GAAE,wBAAgBK,EAAU,iDAC1CL,EAAc,GAAE,uBAAe/B,EAAS,iDAAyC+B,EAAc,KAErG,IAAMU,EAAgBJ,EAAaN,EAAc,GAC3CW,EAAgBN,EAAaL,EAAc,GAC3CO,EAAgBtC,EAAY+B,EAAc,GAC1CY,EAAgBzD,EAClB,kIAGsCY,EAAU,4DACVC,EAAU,mMAKTsC,EAAU,mCAA2BN,EAAc,GAAE,iEACnDK,EAAU,mCAA2BL,EAAc,GAAE,0BAC5FS,EAAuBR,GAAW,gIAIGhC,EAAS,mCAA2B+B,EAAc,GAAE,qEAC9ChC,EAAU,mCAA2BgC,EAAc,GAAE,4fAajDA,EAAc,GAAE,sIAI7DC,EAAa,2CAAoCD,EAAc,GAAE,MACpD,wCAAiCA,EAAc,GAAE,SAAO,6ZAUzBA,EAAc,GAAE,0JAEdA,EAAc,GAAE,0FAKlE,sPAMkCjC,EAAU,gDAEpB2C,EAAa,8CACbC,EAAa,8CACbJ,EAAa,0KAITG,EAAa,+EACXC,EAAa,qIAG7CF,EAAuBR,GAAW,2GAKJM,EAAa,ouBAjGnB,SAACN,GAC7B,OAAAA,EAAa,gDAAkD,+CAA/D,CAoHIY,CAAwBZ,GAAW,2eAkBrC,MAAO,wDACiCI,EAAU,cAAMC,EAAU,2DAC1BtC,EAAU,cAAMC,EAAS,sCAC9C8B,EAAc,GAAE,qCAChBA,EAAc,GAAE,kCACnB9B,EAAS,yCAEJ+B,EAAc,GAAE,aAAKA,EAAc,GAAE,aAAKA,EAAc,GAAE,mNAInEE,EAAS,IAAM,kBAAiB,iCAC7BA,EAAS,UAAG/vE,KAAKE,KAAK8vE,EAAkBlC,IAAe,iCAAgC,+BACzFiC,EAAS,4BAAqBC,GAAoB,IAAG,iXAUlES,EAAa,UAGf,C,kWClUJ,cACA,UAEA,UA6JME,EACF,SAAC76D,EAA+B9hB,EAAc48E,EAA8BC,EAC3E3vD,GACC,IAAM2C,EACgB,CAAC7vB,KAAI,EAAE+hB,WAAY,CAAC,EAAA80D,YAAYC,QAAS,EAAAD,YAAYC,SAAU30D,UAAW+K,GAChG,OAAO,EAAP,KACK2C,GAAQ,CACXvsB,IAAK,WAAM,OAxDf,SAACusB,EAA2BpT,EAAexH,EAAe2nE,EACzDC,EAAmCC,G,aAAA,IAAAA,IAAAA,EAAyBrgE,EAAE2H,UAC7D,IAAM0K,GAAe,EAAAzX,UAAU0X,SAAStS,EAAE9Z,KAAMsS,EAAEtS,MAC9CqsB,EAAcvS,EAAE9Z,KAChBo6E,EAAa,EAAA1lE,UAAU5T,KAAKgZ,EAAE9Z,MAE9Bq6E,GAAY,EAIhB,GAAIluD,EAAa,CACf,IAAMI,EAAkB,EAAAtY,cAAcuY,UAAU1S,EAAE9Z,KAAMsS,EAAEtS,MAAM,GAChE,IAAKusB,EACH,MAAM,IAAI1uB,MAAM,gDAElBwuB,EAAcE,EACd6tD,EAAa,EAAA1lE,UAAU5T,KAAKurB,GAI5B,IADA,IAAIiuD,EAAkB,EACbx8E,EAAI,EAAGA,EAAIuuB,EAAYpuB,OAAQH,IAAK,CAC3C,IAAMy8E,EAAgC,QAAzB,EAAAzgE,EAAE9Z,KAAK8Z,EAAE9Z,KAAK/B,OAASH,UAAE,QAAI,EAE1C,GAAIy8E,KADkC,QAAzB,EAAAjoE,EAAEtS,KAAKsS,EAAEtS,KAAK/B,OAASH,UAAE,QAAI,GAIxC,MAFAw8E,GAAmBC,C,CAKnBD,EAAkB,GAAM,IAC1BD,GAAY,E,MAMdA,GAAY,EAGd,OAAO,EAAP,KACKntD,GAAQ,CACX0qD,gBAAiB,SAAC4C,GAAiB,OA3IvC,SAACA,EAA4B5U,EAA0BC,EAA0B4U,EAChFJ,EAAoBK,EAAsBT,EAA8BC,EACxES,EAAeC,EAAeC,QAA9B,IAAAF,IAAAA,EAAA,YAAe,IAAAC,IAAAA,EAAA,YAAe,IAAAC,IAAAA,EAAA,OAC7B,IAGIC,EACAC,EAJEX,EAAa,EAAA1lE,UAAU5T,KAAK25E,GAC5BO,EAAU3xE,KAAKE,KAAK6wE,EAAa,GAIf,iBAAbH,EACTa,EAAmBC,EAAmB,SAACjhE,EAAGxH,GAAM,gBAAG2nE,EAAQ,aAAKngE,EAAC,cAAMxH,EAAC,KAAxB,EACnB,mBAAb2nE,EAChBa,EAAmBC,EAAmBd,GAEtCa,EAAmBb,EAASgB,OAC5BF,EAAmBd,EAASiB,QAG9B,IA4BIC,EA5BAC,EAAgB,GACdC,GAAsB,IAAAC,qBAAoB,SAAUb,GAC1D,GAAIC,EAAa,CACf,IAAMa,EAAiB,SAACv7E,GAGtB,IAFA,IAAMwS,EAAU,EAAAkC,UAAU0N,eAAepiB,GACnC6tB,EAAoB,GACjB/vB,EAAIkC,EAAK/B,OAAS,EAAGH,GAAK,EAAGA,IAAK,CACzC,IAAM0wB,EAA4B,IAAtBisD,EAAWx8E,OAAe,KACX,IAAtBw8E,EAAWx8E,OAAsB,mBACA,2BAAoBH,EAAI28E,EAAWx8E,OAAS+B,EAAK/B,OAAM,KAC7F4vB,EAAQ3vB,KAAK,UAAGsU,EAAQ1U,GAAE,gBAAQ0wB,EAAG,cAAMxuB,EAAKlC,GAAE,M,CAEpD,OAAO+vB,EAAQ5vB,OAAS,EAAI4vB,EAAQ7lB,KAAK,KAAO,IAClD,EAEAozE,EAAgB,cACpBC,EAAoBG,QAAO,6DAEiBH,EAAoBI,MAAK,mCAC5DF,EAAe3V,GAAM,mEAGcyV,EAAoBI,MAAK,mCAC5DF,EAAe1V,GAAM,a,CAM5B,GAAIwU,EAEAc,EADET,EACW,kBACfW,EAAoBK,2BAA2B,iBAAgB,mBAC/DL,EAAoBM,QAAQ,kBAAmB,iBAAgB,gJAGtCZ,EAAiB,sBAAuB,uBAAsB,KAExE,mCAA4BA,EAAiB,oBAAqB,qBAAoB,SAEhG,CACL,IAAKL,EACH,MAAM,IAAI78E,MAAM,wFAElB,IAAM+9E,EAAmB,SAACvtD,GACxB,IAAMwtD,EAAc,sBAAextD,EAAC,uBAAeA,EAAC,KAC9CytD,EAAc,sBAAeztD,EAAC,uBAAeA,EAAC,KACpD,MAAO,kBACTgtD,EAAoBM,QAAQ,4BAAqBttD,EAAC,KAAK,iBAAgB,8BAC5DA,EAAC,6DACDA,EAAC,4DACFA,EAAC,qBAAaA,EAAC,mCACfA,EAAC,qBAAaA,EAAC,uCACXA,EAAC,qBAAaA,EAAC,uCACfA,EAAC,qBAAaA,EAAC,gDACNA,EAAC,eAAOysD,EAAiBe,EAAaC,GAAY,IACzE,EAEAX,EAAa,kBACbE,EAAoBK,2BAA2B,iBAAgB,mBAC/DE,EAAiB,GAAE,mBACnBA,EAAiB,GAAE,mBACnBA,EAAiB,GAAE,mBACnBA,EAAiB,G,CAGnB,MAAO,0EACmDjB,EAAK,8EACLC,EAAK,yFACMC,EAAU,oBAEjFX,QAAAA,EAA4B,GAAE,eAC9BkB,EAAa,iBAEbZ,EAAauB,YAAW,iBACtBvB,EAAawB,sCAAsChB,GAAQ,iBAC3DG,EAAU,QAEZ,CA4CuCc,CAC/BzB,EAAc1gE,EAAE9Z,KAAMsS,EAAEtS,KAAMqsB,EAAaguD,EAAWluD,EAAa8tD,EAAUC,EAD9C,EAEnCr0C,QAAS,CAAC,CAAC7lC,KAAMqsB,EAAa5K,SAAU04D,EAAgBzC,YAAa,EAAAxD,YAAYC,UACjFhF,cAAe,WACX,OAAE9gD,EAAGhlB,KAAKE,KAAK6wE,EAAa,IAA2BC,EAAY,EAAI,IAAvE,GAER,CASe6B,CAA0BhvD,EAAU/N,EAAO,GAAIA,EAAO,GAAI86D,EAAUC,EAApE,GAEf,EAES,EAAA/gE,IAAM,SAAC9U,GAClBA,EAAQ2sE,QAAQgJ,EAAgC31E,EAAQ8a,OAAQ,OAAO,SAACrF,EAAGxH,GAAM,gBAAGwH,EAAC,YAAIxH,EAAR,IACnF,EAEa,EAAAmM,IAAM,SAACpa,GAClBA,EAAQ2sE,QAAQgJ,EAAgC31E,EAAQ8a,OAAQ,OAAO,SAACrF,EAAGxH,GAAM,gBAAGwH,EAAC,YAAIxH,EAAR,IACnF,EAEa,EAAAkM,IAAM,SAACna,GAClBA,EAAQ2sE,QAAQgJ,EAAgC31E,EAAQ8a,OAAQ,OAAO,SAACrF,EAAGxH,GAAM,gBAAGwH,EAAC,YAAIxH,EAAR,IACnF,EAEa,EAAAuV,IAAM,SAACxjB,GAClBA,EAAQ2sE,QAAQgJ,EACZ31E,EAAQ8a,OAAQ,MAAO,CAAE87D,OAAQ,SAACnhE,EAAGxH,GAAM,wBAAWwH,EAAC,YAAIxH,EAAC,IAAjB,EAAsB4oE,OAAQ,SAACphE,EAAGxH,GAAM,yBAAYwH,EAAC,YAAIxH,EAAC,IAAlB,GAAyB,ueAclH,EAEa,EAAAiM,IAAM,SAACla,GAClBA,EAAQ2sE,QAAQgJ,EAAgC31E,EAAQ8a,OAAQ,OAAO,SAACrF,EAAGxH,GAAM,gBAAGwH,EAAC,YAAIxH,EAAR,IACnF,C,wJC5MA,cAYa,EAAA6pE,eAAiB,GAkCjB,EAAAb,oBAAsB,SAACj+E,EAAcsU,GAKhD,IAJA,IAAM8pE,EAAQ9pE,EAAM1T,OAAS,EAAI,MAAQ,qBAAc0T,EAAM1T,OAAM,KAE7DuU,EAAU,EAAAkC,UAAU0N,eAAezQ,GACrCyqE,EAAa,GACRt+E,EAAI,EAAGA,EAAI6T,EAAM1T,OAAS,EAAGH,IACpCs+E,GAAc,uBACLt+E,EAAC,wBAAgB0U,EAAQ1U,GAAE,2BAC1BA,EAAC,wBAAgB0U,EAAQ1U,GAAE,8BACxBA,EAAC,kBAAUA,EAAC,gCACTA,EAAC,WAGnBs+E,GAAc,qBAAczqE,EAAM1T,OAAS,EAAC,gBAE5C,IAAMu9E,EAAU7pE,EAAM1T,OAAS,EAAI,GAAK,wBAC5BZ,EAAI,gDAAwCo+E,EAAK,gDAEzDW,EAAU,SAMRvuD,EAAoB,GAC1B,GAAqB,IAAjBlc,EAAM1T,OACR4vB,EAAQ3vB,KAAK,WACR,GAAIyT,EAAM1T,OAAS,EACxB4vB,EAAQ3vB,KAAK,mBAEb,IAASJ,EAAI6T,EAAM1T,OAAS,EAAGH,GAAK,EAAGA,IACrC+vB,EAAQ3vB,KAAK,UAAGsU,EAAQ1U,GAAE,2BAAmBA,EAAC,OAelD,MAAO,CAAC09E,QAAO,EAAEG,QAzBD,SAACU,EAAmBC,GAChC,OAAA3qE,EAAM1T,OAAS,EAAI,UAAGq+E,EAAU,YAAID,EAAS,KAAM,iBAAUh/E,EAAI,YAAIg/E,EAAS,cAAMC,EAAU,KAA9F,EAwBsBC,QAXV5qE,EAAM1T,OAAS,EAAI,GAAK,wBAC5BZ,EAAI,mCAA2Bo+E,EAAK,mCACrC5tD,EAAQ7lB,KAAK,KAAI,UASOw0E,cANb,SAACF,EAAoBG,GACvC,OAAA9qE,EAAM1T,OAAS,EAAI,WAAIw+E,EAAQ,IAAM,IAAE,OAAGH,EAAU,KAAM,iBAAUj/E,EAAI,YAAIo/E,EAAQ,GAAK,KAAG,OAAGH,EAAU,IAAzG,EAK8CZ,2BAHf,SAACr1E,EAAW7I,GAC3C,oBAAO6I,EAAC,YAAIo1E,GAAK,OAAGj+E,EAAO,WAAIi+E,EAAK,YAAIj+E,EAAKwK,KAAK,KAAI,KAAM,GAAE,IAA9D,EAE0EyzE,MAAK,EACrF,EAUA,iBACE,WAAoBxM,GAAA,KAAAA,wBAAAA,CAAoD,CA0B1E,OAzBE,YAAA+M,sCAAA,SAAsCl7E,GAEpC,IAAM47E,EAA6B,iBAAT57E,EAAoB,UAAGA,EAAI,KAAMA,EAC3D,MAAO,4BAAqB47E,EAAU,gBACxC,EACA,YAAAX,UAAA,SAAU7C,QAAA,IAAAA,IAAAA,EAAiD,EAAAiD,gBACzD,IAAMQ,EAA0C,iBAAlBzD,EAA6BA,EAAgBA,EAAc,GACnF0D,EAA0C,iBAAlB1D,EAA6B,EAAIA,EAAc,GACvE2D,EAA0C,iBAAlB3D,EAA6B,EAAIA,EAAc,GAEvE4D,EAA2D,IAApC17E,KAAK6tE,wBAAwB,IAAgD,IAApC7tE,KAAK6tE,wBAAwB,GAC7F8N,EAAYD,EAAuB,uDACA,2GAEnCE,EAAsBF,EACxB,gCACA,6CAAsC17E,KAAK6tE,wBAAwB,GAAK7tE,KAAK6tE,wBAAwB,GAAE,2CAClF7tE,KAAK6tE,wBAAwB,GAAE,iCAChD0N,EAAiBC,EAAiBC,EAAc,oBAExD,MAAO,mCAA4BF,EAAc,aAAKC,EAAc,aAAKC,EAAc,wBAC/EE,EAAS,oBACfC,EAAmB,OAEvB,EACF,EA3BA,GA6Ba,EAAAC,mBAAqB,SAAC9N,GAC/B,WAAI+N,EAAiB/N,EAArB,C,0WCpIJ,cACA,UAEA,UACA,UACA,UAgHa,EAAAgO,mCACT,SAACh+D,EAA+B7U,EAC/B8yE,GACC,IAjHoCztD,EAAkBnQ,EAiHhD0N,GAjH8ByC,EAiHcxQ,EAAOlhB,OAAS,EAjHZuhB,EAiHelV,EAAWigB,SAjHa,CACjGltB,KAAM,cACN+hB,WAAYuQ,EAAU,CAAC,EAAAukD,YAAYC,QAAS,EAAAD,YAAYC,QAAS,EAAAD,YAAYC,SACvD,CAAC,EAAAD,YAAYC,QAAS,EAAAD,YAAYC,SACxD30D,UAAS,IA8GL,OAAO,EAAP,KACK0N,GAAQ,CACXvsB,IAAK,WAAM,OA5Gf,SAACwe,EAA+B+N,EAA2B5iB,EAC1D8yE,GACC,IAAMztD,EAAUxQ,EAAOlhB,OAAS,EAC1B2xB,EAAcD,EAAU,8BAAgC,GACxDE,EAAS1Q,EAAO,GAAGnf,KACnB8vB,EAAS3Q,EAAO,GAAGnf,KACnB+vB,EAAyBD,EAAO,GAAKxlB,EAAW0lB,MAEhDvO,EAAW,MACX,GAAwC,IAAA47D,sBAAqB/yE,GAA5DimB,EAAkB,qBAAEC,EAAe,kBACpC8sD,EAAkC,CACtC,6DAAsD77D,EAAQ,MAC9D,6DAAsDA,EAAQ,OAE5DkO,GACF2tD,EAAgCp/E,KAAK,6DAAsDujB,EAAQ,OAGrG,IAAM8wD,EAAsC,SAAtBjoE,EAAW1F,OAC3BynB,GAAc,IAAAgE,sBAChBR,EAAQC,EAAQxlB,EAAW4lB,UAAW5lB,EAAW8lB,KAAM9lB,EAAWkI,QAAS+/D,GACzE6H,EAAa,EAAA1lE,UAAU5T,KAAKurB,GAC5BgvD,GAAsB,IAAAC,qBAAoB,SAAUjvD,GACpDkxD,GAAiB,IAAAjC,qBAAoB,IAAKzrD,GAC1C2tD,GAAiB,IAAAlC,qBAAoB,IAAKxrD,GA8DhD,OAAO,EAAP,KACK5C,GAAQ,CACX2Y,QAAS,CAAC,CACR7lC,KAAMo9E,EAA6BA,EAA2B/wD,GAAeA,EAC7E5K,SAAUtC,EAAO,GAAGsC,SACpBi2D,YAAa,EAAAxD,YAAYC,UAE3ByD,gBAnEsB,SAAC4C,GAA+B,oDAC1BlwE,EAAWkI,QAAQ,GAAE,cAAMlI,EAAWkI,QAAQ,GAAE,+CACnDlI,EAAW8lB,KAAK,GAAE,cAAM9lB,EAAW8lB,KAAK,GAAE,oBAEvEktD,EAAgCt1E,KAAK,MAAK,kCACvBs1E,EAAgCr/E,OAAM,qDAA6CwjB,EAAQ,mBAE9G8O,EAAkB,eAClB8qD,EAAoBG,QAAO,eAC3B+B,EAAehB,QAAO,eACtBiB,EAAejB,QAAO,iBAEtB/B,EAAauB,YAAW,iBACtBvB,EAAawB,sCAAsC5B,GAAW,mBAE9DiB,EAAoBK,2BAA2B,iBAAgB,iBAC/DL,EAAoBM,QAAQ,aAAc,iBAAgB,iGAElBpJ,EAAgB,EAAI,EAAC,sEACVA,EAAgB,EAAI,EAAC,4BACpEA,EAAgB,EAAI,EAAC,0EACYxiD,EAAsB,gCAEhDtO,EAAQ,cAAMA,EAAQ,iEACWqO,EAAO,GAAE,oEACpBA,EAAO,GAAE,wEACFA,EAAO,GAAE,0EACPxlB,EAAW4lB,UAAU,GAAE,wDAE9BL,EAAO0iD,EAAgB,EAAI,GAAE,+FAIxBziD,EAAO,GAAE,yEACPxlB,EAAW4lB,UAAU,GAAE,sDAC9BL,EAAO0iD,EAAgB,EAAI,GAAE,iEAK5DgL,EAAe7B,2BACX,WACAnJ,EAAgB,CAAC,QAAS,UAAW,SAAU,iBAC/B,CACE,QAAS,gBAAiB,UAAW,WACrC,oCACPgL,EAAef,cAAc,YAAW,yBAEvDgB,EAAe9B,2BAA2B,WAAY,CACpD,iBAAkB,aAAc,UAAW,WAC3C,oCACa8B,EAAehB,cAAc,YAAW,6EAK3D5sD,EAAW,iBACXY,EAAe,yCAzDyC,EAoEtD2+C,cAAe,WAAM,OAAE9gD,EAAGhlB,KAAKE,KAAK6wE,EAAa,IAA5B,GAEzB,CAYeqD,CAA6Bt+D,EAAQ+N,EAAU5iB,EAAY8yE,EAA3D,GAEf,C,yXC5HJ,cACA,SAGA,UACA,UACA,UACA,UAEa,EAAA/sD,qBACT,SAAChD,EAA+B8C,EAAgCD,EAC/D+C,EAA+BzgB,EAA4B+/D,GAC1D,IAAMr/C,EAAY7F,EAAW,GACvB8F,EAAoB9F,EAAWrX,MAAMu8D,EAAgB,EAAI,EAAGA,EAAgB,EAAI,GAChF7/C,EAAcS,EAAkBl1B,OAChCm1B,EAAcjD,EAAY,GAE1BkD,EADqBlD,EAAYna,MAAM,GACC3O,KAAI,SAAChB,EAAGvI,GAAM,OAAAuI,GAAKA,EAAI,IAAM6pB,EAAUpyB,GAAK,EAA9B,IAEtDuuB,EAD2B8G,EAAkB9rB,KAAI,SAAChB,EAAGvI,GAAM,OAAAuI,EAAI4sB,EAAWn1B,GAAKm1B,EAAWn1B,EAAI40B,EAAnC,IAEpCrrB,KAAI,SAAChB,EAAGvI,GAAM,OAAAuL,KAAKyc,OAAOzf,EAAIgtB,EAAmBv1B,GAAK0U,EAAQ1U,IAAM0U,EAAQ1U,GAA9D,IAG3C,OAFAuuB,EAAYruB,OAAO,EAAG,EAAGk1B,GACzB7G,EAAYruB,OAAOu0E,EAAgB,EAAI,EAAG,EAAGn/C,GACtC/G,CACT,EAcJ,IAAMqxD,GAAgD,IAAA1zE,6BAA4B,CAAC2qB,KAAM,CAAC,EAAG,EAAG,EAAG,KA8D7FnB,EAA4B,SAA2BlpB,EAAe6U,GAG1E,IAFA,IAAMgR,EAAc7lB,EAAW6lB,YAAYna,QAElClY,EAAI,EAAGA,EAAIqhB,EAAO,GAAGnf,KAAK/B,SAAUH,EAChB,IAAvBqyB,EAAYryB,EAAI,KAClBqyB,EAAYryB,EAAI,GAAKqhB,EAAO,GAAGnf,KAAKlC,IAGxC,IAAMsyB,EAAO9lB,EAAW8lB,KAAKpa,QAC7B,EAAAke,aAAaC,yBACThV,EAAO,GAAGnf,KAAMsK,EAAWkI,QAASlI,EAAW4lB,UAAWC,EAAaC,EAA4B,SAAtB9lB,EAAW1F,OACxF0F,EAAW2lB,SAGf,IAAM4C,EAAmBn0B,OAAOmL,OAAO,CAAC,EAAGS,GAE3C,OADA5L,OAAOmL,OAAOgpB,EAAe,CAAC1C,YAAW,EAAEC,KAAI,EAAE7F,SAAUjgB,EAAWigB,WAC/DsI,CACT,EAEa,EAAA5N,oBAAsB,SAAC3a,GAClC,IAAMwoB,GAAuB,IAAAC,mCAAkCzoB,GAEzD1F,EAAS0F,EAAW1F,OACpBqrB,EAAU,CAAC,SAAU,QAAS,aAAc,cAAc3lB,EAAWqzE,UACrEztD,EAAY5lB,EAAW4lB,UACvBF,EAAQ1lB,EAAW0lB,MACnBG,EAAc7lB,EAAWszE,aACzBxtD,EAAO9lB,EAAW8lB,KAClB5d,EAAUlI,EAAWkI,QACrBqrE,EAAYvzE,EAAWwzE,aAE7B,OAAO,IAAA9zE,6BAA2B,GAC7BimB,QAAO,EAAErrB,OAAM,EAAEsrB,UAAS,EAAEF,MAAK,EAAEG,YAAW,EAAEC,KAAI,EAAE5d,QAAO,EAAEqrE,SAAQ,GAAK/qD,GACnF,EA2Ga,EAAA9N,KAAO,SAAC3gB,EAAyBiG,IAxMvB,SAAC6U,EAA+B7U,GAGrD,IAAK6U,GAA6B,IAAlBA,EAAOlhB,QAAkC,IAAlBkhB,EAAOlhB,OAC5C,MAAM,IAAIJ,MAAM,+BAIlB,GAA8B,IAA1BshB,EAAO,GAAGnf,KAAK/B,QAA0C,IAA1BkhB,EAAO,GAAGnf,KAAK/B,OAChD,MAAM,IAAIJ,MAAM,yCAGlB,GAAIshB,EAAO,GAAGnf,KAAK/B,SAAWkhB,EAAO,GAAGnf,KAAK/B,OAC3C,MAAM,IAAIJ,MAAM,gDAMlB,GAFoBshB,EAAO,GAAGnf,KAA2B,SAAtBsK,EAAW1F,OAAoBua,EAAO,GAAGnf,KAAK/B,OAAS,EAAI,KACtEkhB,EAAO,GAAGnf,KAAK,GAAKsK,EAAW0lB,MAErD,MAAM,IAAInyB,MAAM,qDAIlB,GAAsB,IAAlBshB,EAAOlhB,SAA2C,IAA1BkhB,EAAO,GAAGnf,KAAK/B,QAAgBkhB,EAAO,GAAGnf,KAAK,KAAOmf,EAAO,GAAGnf,KAAK,IAC9F,MAAM,IAAInC,MAAM,gBAGlB,IAAM60B,EAAcvT,EAAO,GAAGnf,KAAK/B,OAAS,EAE5C,GAAIqM,EAAW4lB,UAAUjyB,SAAWy0B,EAClC,MAAM,IAAI70B,MAAM,8BAAuB60B,EAAW,MAIpD,GAAIpoB,EAAWkI,QAAQvU,SAAWy0B,EAChC,MAAM,IAAI70B,MAAM,4BAAqB60B,EAAW,MAIlD,GAAIpoB,EAAW8lB,KAAKnyB,SAAyB,EAAdy0B,EAC7B,MAAM,IAAI70B,MAAM,yBAAgC,EAAd60B,EAAe,MAKnD,GAAsC,IAAlCpoB,EAAW6lB,YAAYlyB,QAAgBqM,EAAW6lB,YAAYlyB,SAAWkhB,EAAO,GAAGnf,KAAK/B,OAAS,EACnG,MAAM,IAAIJ,MAAM,wBAIlB,GAA2B,IAAvBshB,EAAO,GAAGsC,UAAsD,IAAvBtC,EAAO,GAAGsC,SACrD,MAAM,IAAI5jB,MAAM,0CAGlB,GAAsB,IAAlBshB,EAAOlhB,QAAuC,IAAvBkhB,EAAO,GAAGsC,SACnC,MAAM,IAAI5jB,MAAM,0CAEpB,CA+IEysB,CAAejmB,EAAQ8a,OAAQ7U,GACO,IAAlCjG,EAAQ8a,OAAO,GAAGnf,KAAK/B,OA5Bd,SAACoG,EAAyBiG,GAEvC,IAAMioE,EAAsC,SAAtBjoE,EAAW1F,OAC3Bua,EAAS,CACb9a,EAAQ8a,OAAO,GAAGzZ,QACd6sE,EAEI,CAACluE,EAAQ8a,OAAO,GAAGnf,KAAK,GAAI,EAAGqE,EAAQ8a,OAAO,GAAGnf,KAAK,GAAIqE,EAAQ8a,OAAO,GAAGnf,KAAK,IAEjF,CAACqE,EAAQ8a,OAAO,GAAGnf,KAAK,GAAIqE,EAAQ8a,OAAO,GAAGnf,KAAK,GAAI,EAAGqE,EAAQ8a,OAAO,GAAGnf,KAAK,KAEzFqE,EAAQ8a,OAAO,GAAGzZ,QAAQ,CAACrB,EAAQ8a,OAAO,GAAGnf,KAAK,GAAIqE,EAAQ8a,OAAO,GAAGnf,KAAK,GAAI,EAAGqE,EAAQ8a,OAAO,GAAGnf,KAAK,MAE/E,IAA1BqE,EAAQ8a,OAAOlhB,QACjBkhB,EAAOjhB,KAAKmG,EAAQ8a,OAAO,IAE7B,IAAMiR,EAAO,CAAC,EAAG9lB,EAAW8lB,KAAK,GAAI,EAAG9lB,EAAW8lB,KAAK,IAClD5d,EAAU,CAAC,GAAGsS,OAAOxa,EAAWkI,SAChC0d,EAAY,CAAC,GAAGpL,OAAOxa,EAAW4lB,WAClCC,EAAc,CAAC,GAAGrL,OAAOxa,EAAW6lB,aACpC+B,EAAqBsB,EAA0B,EAAD,KAAKlpB,GAAU,CAAE8lB,KAAI,EAAE5d,QAAO,EAAE0d,UAAS,EAAEC,YAAW,IAAGhR,GAC7G9a,EAAQ2sE,SAAQ,IAAAmM,oCACZh+D,EAAQ+S,GACR,SAAA7F,GAAe,OAAAkmD,EAAgB,CAAClmD,EAAY,GAAIA,EAAY,GAAIA,EAAY,IAAM,EAAnE,IACrB,CAKI0xD,CAAO15E,EAASiG,GA5GL,SAACjG,EAAyB8a,EAA+B7U,G,MAChE4nB,EAAqBsB,EAA0BlpB,EAAY6U,GAI3DwQ,EAA4B,IAAlBxQ,EAAOlhB,OAEjBq4E,EAAuC,SAAtBhsE,EAAW1F,OAG5B29B,EAAcpjB,EAAO,GAAGnf,KAAKs2E,EAAiB,EAAI,GAClD9zC,EAAarjB,EAAO,GAAGnf,KAAKs2E,EAAiB,EAAI,GACjD0H,EAAgB7+D,EAAO,GAAGnf,KAAKs2E,EAAiB,EAAI,GACpD2H,EAAe9+D,EAAO,GAAGnf,KAAK,GAC9Bk+E,EAAc/+D,EAAO,GAAGnf,KAAK,GAE7BqsB,GAAc,IAAAgE,sBAChBlR,EAAO,GAAGnf,KAAMmf,EAAO,GAAGnf,KAAMsK,EAAW4lB,UAAWgC,EAAmB9B,KAAM9lB,EAAWkI,QAC1F8jE,GACEG,EAAYpqD,EAAYiqD,EAAiB,EAAI,GAC7CE,EAAWnqD,EAAYiqD,EAAiB,EAAI,GAC5CljD,EAAc/G,EAAYiqD,EAAiB,EAAI,GAIrD,GADIA,GAAkB2H,IAAiB17C,GAAe27C,IAAgB17C,GAAqC,UAAvBl4B,EAAW2lB,SAEzE,IAAjBguD,GAAsC,IAAhBC,GAAiD,IAA5B5zE,EAAW4lB,UAAU,IAAwC,IAA5B5lB,EAAW4lB,UAAU,IACvE,IAA1B5lB,EAAWkI,QAAQ,IAAsC,IAA1BlI,EAAWkI,QAAQ,KAC1B,eAAvBlI,EAAW2lB,SAAmD,eAAvB3lB,EAAW2lB,SAC3B,UAAvB3lB,EAAW2lB,SAEf5rB,EAAQ2sE,SAAQ,IAAAmM,oCAAmCh+D,EAAQ+S,SAI7D,GAAKokD,GAAuC,IAArBhsE,EAAW0lB,MAAlC,CAOA,IAAMkmD,EAAYI,EAAiBG,EAAYD,EAAWpjD,EACpD+iD,EAAYG,EAAiBljD,EAAcqjD,EAAYD,EACvDJ,EAAW6H,EAAeC,EAAcF,EAKxCG,EAAoE,QAAhD,EAAA95E,EAAQ+5E,WAAWC,UAA6B,QACtEh6E,EAAQ2sE,QAAQ,EAAD,KAEN,EAAAxqC,0BAAwB,CAC3BhnB,UAAWk+D,EAAyBnzD,SACpC5pB,IAAK,WAAM,WAAA8lC,4BAA2BtnB,EAAO,GAAIu+D,EAAyB/oD,KAA/D,IAEb,CAACxV,OAAQ,CAAC,GAAI0mB,QAAS,CAACv7B,EAAWuzE,UAAY,GAAK,KAAK,GAC7DvzE,EAAWuzE,WAAax5E,EAAQ+5E,WAAWC,KAC7Ch6E,EAAQ+5E,WAAWC,GAAKF,GAI1B,IAAMG,EAAa,CAACn/D,EAAO,GAAIg/D,GAC3BxuD,IACG2mD,GAA4C,IAA1Bn3D,EAAO,GAAGnf,KAAK/B,OAGpCqgF,EAAWpgF,KAAKihB,EAAO,IAFvBm/D,EAAWpgF,KAAKihB,EAAO,GAAGzZ,QAAQ,CAACyZ,EAAO,GAAGnf,KAAK,GAAI,EAAG,MAO7DqE,EAAQ2sE,SACJ,IAAAuN,qCACID,EAAYpsD,EAAoB7F,EAAa6pD,EAAWC,EAAWC,EAAUzmD,GA5Bf,GA8BlE,CAACxQ,OAAQm/D,G,MAxCXj6E,EAAQ2sE,SAAQ,IAAAmM,oCAAmCh+D,EAAQ+S,GAyC/D,CAiCIqB,CAAOlvB,EAASA,EAAQ8a,OAAQ7U,EAEpC,C,2WCxPA,cAEA,UAWa,EAAAi0E,oCACT,SAACp/D,EAA+B7U,EAA4B+hB,EAAgC6pD,EAC3FC,EAAmBC,EAAkBzmD,EAAkB0mD,GACtD,IAAMnpD,EAV8B,SAACyC,EAAkBnQ,GAAuC,OAClGniB,KAAM,eACN+hB,WAAYuQ,EAAU,CAAC,EAAAukD,YAAYC,QAAS,EAAAD,YAAYC,QAAS,EAAAD,YAAYC,SACvD,CAAC,EAAAD,YAAYC,QAAS,EAAAD,YAAYC,SACxD30D,UAAS,EAJyF,CAU7Eg/D,CAAkC7uD,EAASrlB,EAAWigB,UACvE,OAAO,EAAP,KACK2C,GAAQ,CACXvsB,IAAK,WAAM,WAAAs1E,+BACP92D,EAAQ+N,EAAU5iB,EAAY+hB,EAAa6pD,EAAWC,EAAWC,EAAUzmD,EAC3E0mD,EAFO,GAIf,C,wcCxBJ,cASa,EAAAgH,qBACT,SAAC/yE,GACC,OAAQA,EAAWwrB,YACjB,IAAK,OACH,MAAO,CAACvF,mBAAoB,GAAIC,gBAAiB,4BACnD,IAAK,UACH,MAAO,CAACD,mBAAoB,GAAIC,gBAAiB,wCACnD,IAAK,OACH,MAAO,CACLD,mBACI,8BAAuBjmB,EAAW4rB,QAAQ,iCAAyB5rB,EAAW6rB,QAAQ,MAC1F3F,gBAAiB,+CAGrB,QACE,MAAO,CAACD,mBAAoB,GAAIC,gBAAiB,IAEvD,EAES,EAAAuC,kCACT,SAACzoB,GACC,IAAMwrB,GAAaxrB,aAAU,EAAVA,EAAYwrB,aAAwB,GAEvD,GAAmB,SAAfA,EAAuB,CACnB,SAAqBxrB,aAAU,EAAVA,EAAYm0E,oBAAyC,CAAC,EAAApoD,SAAU,EAAAC,UAAS,GAA7FJ,EAAO,KAAEC,EAAO,KACvB,MAAO,CAACL,WAAU,EAAEK,QAAO,EAAED,QAAO,EAAEpB,mBAAoB,UAAGgB,EAAU,YAAII,EAAO,YAAIC,G,CAExF,MAAO,CAACL,WAAU,EAAEhB,mBAAoBgB,EAC1C,C,+oBCnCJ,cACA,SACA,UAmIa,EAAA7P,KAAO,SAAC5hB,EAAyBiG,IA/HvB,SAAC6U,GACtB,IAAKA,EACH,MAAM,IAAIthB,MAAM,oBAElB,GAAIshB,EAAOlhB,OAAS,GAAKkhB,EAAOlhB,OAAS,EACvC,MAAM,IAAIJ,MAAM,wBAIlB,GAAsB,IAAlBshB,EAAOlhB,QAAgBkhB,EAAO,GAAGnf,KAAK/B,OAAS,EACjD,MAAM,IAAIJ,MAAM,4BAGlB,GAA4B,IAAvBshB,EAAO,GAAGsC,UAAwD,IAAvBtC,EAAO,GAAGsC,UACnC,IAAlBtC,EAAOlhB,QAAuC,IAAvBkhB,EAAO,GAAGsC,SACpC,MAAM,IAAI5jB,MAAM,uBAGlB,GAAKshB,EAAO,GAAGsC,WAAatC,EAAO,GAAGsC,UACf,IAAlBtC,EAAOlhB,QAAgBkhB,EAAO,GAAGsC,WAAatC,EAAO,GAAGsC,SAC3D,MAAM,IAAI5jB,MAAM,6BAEpB,CA0GEysB,CAAejmB,EAAQ8a,QACvB9a,EAAQ2sE,QAb0B,SAAC7xD,EAA+B7U,GAClE,IAAM4iB,EAAW,CACf7vB,KAAM,OACN+hB,WAA8B,IAAlBD,EAAOlhB,OAAe,CAAC,EAAAi2E,YAAYC,QAAS,EAAAD,YAAYC,QAAS,EAAAD,YAAYC,SACvD,CAAC,EAAAD,YAAYC,QAAS,EAAAD,YAAYC,SACpE30D,UAAWlV,EAAWigB,UAGxB,OAAO,EAAP,KAAW2C,GAAQ,CAAEvsB,IAAK,WAAM,OAzE9B,SAACusB,EAA2B/N,EAA+B7U,GACzD,IAAMmtB,EAAStY,EAAO,GAAGnf,KAAKgW,QACxB0hB,EAASvY,EAAO,GAAGnf,KAAKgW,QACxB,IAAY,EAAA2hB,SAASC,qBACvBH,EAAQntB,EAAW8sB,OAAQM,EAAQptB,EAAW+sB,OAA0B,IAAlBlY,EAAOlhB,OAAekhB,EAAO,GAAGnf,UAAOpC,GAAU,GADpGyqE,EAAC,KAAEE,EAAC,KAAED,EAAC,KAERj8C,EAAc,CAACg8C,EAAGE,GACxB,IAAKl8C,EACH,MAAM,IAAIxuB,MAAM,uCAElB,IAAMu8E,EAAa,EAAA1lE,UAAU5T,KAAKurB,GAC9BwL,EAAO,GACPvtB,EAAW8sB,QAAU9sB,EAAW+sB,OAClCQ,EAAO,wCACEvtB,EAAW8sB,SAAW9sB,EAAW+sB,OAC1CQ,EAAO,yCACGvtB,EAAW8sB,QAAU9sB,EAAW+sB,OAC1CQ,EAAO,wCACGvtB,EAAW8sB,QAAW9sB,EAAW+sB,SAC3CQ,EAAO,yCAGT,IAAMpW,EAAW,MACXi9D,EAAsC,IAArBp0E,EAAWgtB,MAAc,GAAK,kBAC/CU,EAA+B,IAAlB7Y,EAAOlhB,OAAe,4BA3C/B,SAAC0gF,EAAW/oC,EAAW51C,GACrC,GAAoB,IAAhBA,EAAK/B,OACP,MAAO,KAGT,IAAM2gF,EAA8B,IAAhB5+E,EAAK/B,QAAsB,IAAN0gF,GAA6B,IAAhB3+E,EAAK/B,QAAgB+B,EAAK,KAAO2+E,EACjFE,EAAa7+E,EAAKA,EAAK/B,OAAS,KAAO23C,EAEzC5P,EAAS,KAQb,OAPK44C,IACH54C,GAAU,gBAAShmC,EAAKA,EAAK/B,OAAS,GAAE,MAErC4gF,IACH74C,GAAU,MAGLA,CACT,CA0BoE84C,CAAQzW,EAAGE,EAAGppD,EAAO,GAAGnf,MAAK,MAAO,GAC5Fs9E,EAAkC,CACtC,6DAAsD77D,EAAQ,MAC9D,6DAAsDA,EAAQ,OA+BhE,OA7BsB,IAAlBtC,EAAOlhB,QACTq/E,EAAgCp/E,KAAK,6DAAsDujB,EAAQ,OA4B9F,EAAP,KACKyL,GAAQ,CACX2Y,QAAS,CAAC,CAAC7lC,KAAMqsB,EAAa5K,SAAUtC,EAAO,GAAGsC,SAAUi2D,YAAa,EAAAxD,YAAYC,UACrFyD,gBA7BsB,SAAC4C,GAA+B,mCAC3CnS,EAAC,gCACDE,EAAC,gCACDD,EAAC,+BACF7mD,EAAQ,YAAInX,EAAWgtB,MAAK,8BAC7B7V,EAAQ,YAAInX,EAAWitB,KAAI,mBAExC+lD,EAAgCt1E,KAAK,MAAK,kCACvBmX,EAAOlhB,OAAM,qDAA6CwjB,EAAQ,mBAErF+4D,EAAauB,YAAW,iBACtBvB,EAAawB,sCAAsC5B,GAAW,6FAKlD34D,EAAQ,6CACI6mD,EAAC,4BACvBzwC,EAAI,0BAGN6mD,EAAc,iBACd1mD,EAAU,4CAtB8C,EA8BtDm3C,cAAe,WAAM,OAAE9gD,EAAGhlB,KAAKE,KAAK6wE,EAAa,IAA5B,GAEzB,CAU8B5iD,CAAsBtK,EAAU/N,EAAQ7U,EAAxC,GAClC,CAIkB2sB,CAA4B5yB,EAAQ8a,OAAQ7U,GAC9D,EAEa,EAAA4sB,oBAAsB,SAAC5sB,GAChC,WAAAN,6BAA4BM,EAA5B,C,8WC3IJ,cACA,UAGA,UAiEa,EAAAupB,8BACT,SAAC1U,EAA+B2T,GAC9B,IAhE+BnD,EAAkBnQ,EAgE3C0N,GAhEyByC,EAgEcxQ,EAAOlhB,OAAS,EAhEZuhB,EAgEesT,EAAqBgC,mBAhEd,CAC3Ez3B,KAAM,SACN+hB,WAAYuQ,EAAU,CAAC,EAAAukD,YAAYC,QAAS,EAAAD,YAAYC,QAAS,EAAAD,YAAYC,SACvD,CAAC,EAAAD,YAAYC,QAAS,EAAAD,YAAYC,SACxD30D,UAAS,IA6DL,OAAO,EAAP,KAAW0N,GAAQ,CAAEvsB,IAAK,WAAM,OAzDlC,SAACusB,EAA2B/N,EAA+B2T,GAErD,IAAM2E,EAAStY,EAAO,GAAGnf,KACnB03B,EAASvY,EAAO,GAAGnf,KACnBqsB,EAAc,EAAApY,cAAcuY,UAAUiL,EAAQC,GAAQ,GAC5D,IAAKrL,EACH,MAAM,IAAIxuB,MAAM,yCAElB,IAAMu8E,EAAa,EAAA1lE,UAAU5T,KAAKurB,GAG5B5K,EAAW,MACX,GAAwC,IAAA47D,sBAAqBvqD,GAA5DvC,EAAkB,qBAAEC,EAAe,kBAEpC63C,EAAIh8C,EAAYA,EAAYpuB,OAAS,GACrCqqE,EAAI7wC,EAAOA,EAAOx5B,OAAS,GAC3BsqE,EAAIl8C,EAAYA,EAAYpuB,OAAS,GA8B3C,OAAO,EAAP,KACKivB,GAAQ,CACX2Y,QAAS,CAAC,CAAC7lC,KAAMqsB,EAAa5K,SAAUtC,EAAO,GAAGsC,SAAUi2D,YAAa,EAAAxD,YAAYC,UACrFyD,gBAhCsB,SAAC4C,GAA+B,mCAC/CnS,EAAC,gCACDE,EAAC,gCACDD,EAAC,sEAEmC7mD,EAAQ,oEACRA,EAAQ,+EACGA,EAAQ,mBAEtE8O,EAAkB,iBAElBiqD,EAAauB,YAAW,iBACtBvB,EAAawB,sCAAsC5B,GAAW,wOAUlD34D,EAAQ,6CACI6mD,EAAC,kGAGzB93C,EAAe,yCA1B6C,EAiCtD2+C,cAAe,WAAM,OAAE9gD,EAAGhlB,KAAKE,KAAK6wE,EAAa,IAA5B,GAEzB,CAK8Bp+C,CAAwB9O,EAAU/N,EAAQ2T,EAA1C,GAClC,EAgBS,EAAA5L,OAAS,SAAC7iB,IAdA,SAAC8a,GACtB,IAAKA,GAA4B,IAAlBA,EAAOlhB,OACpB,MAAM,IAAIJ,MAAM,6BAGlB,GAAIshB,EAAO,GAAGnf,KAAKmf,EAAO,GAAGnf,KAAK/B,OAAS,KAAOkhB,EAAO,GAAGnf,KAAKmf,EAAO,GAAGnf,KAAK/B,OAAS,GACvF,MAAM,IAAIJ,MAAM,oCAGlB,GAA2B,IAAvBshB,EAAO,GAAGsC,UAAsD,IAAvBtC,EAAO,GAAGsC,SACrD,MAAM,IAAI5jB,MAAM,8BAEpB,CAGEysB,CAAejmB,EAAQ8a,QAEvB9a,EAAQ2sE,SAAQ,IAAAn9C,+BAA8BxvB,EAAQ8a,OAAQ,CAAC2W,WAAY,GAAIhB,mBAAoB,KACrG,C,syBC7FA,cACA,SACA,UAEA,UAQMxK,EAAiB,SAACnL,GACtB,IAAKA,GAA4B,IAAlBA,EAAOlhB,OACpB,MAAM,IAAIJ,MAAM,8BAElB,GAA8B,IAA1BshB,EAAO,GAAGnf,KAAK/B,OACjB,MAAM,IAAIJ,MAAM,8CAElB,GAA2B,IAAvBshB,EAAO,GAAGsC,SACZ,MAAM,IAAI5jB,MAAM,sBAEpB,EAEMigC,EAA0C,SAC5C3e,EAA+B7U,EAA2BuzB,GAC5D,IAAMy4C,EAAuC,SAAtBhsE,EAAW1F,OAC5Bm6E,EAA2BzI,EAC7B,CAACn3D,EAAO,GAAGnf,KAAK,GAAImf,EAAO,GAAGnf,KAAK,GAAImf,EAAO,GAAGnf,KAAK,GAAImf,EAAO,GAAGnf,KAAK,IACzEmf,EAAO,GAAGnf,KAAKgW,QACbooB,EAAe1/B,OAAOiI,eAAeC,KAAK0D,EAAY,aACtD6lB,EAAc7lB,EAAW6lB,YAAYna,QACrCxD,EAAUlI,EAAWkI,QAAQwD,QAC7Bka,EAAsBkO,EAAgB9zB,EAAiC4lB,UAAUla,QAAU,GAC3Foa,EAAO9lB,EAAW8lB,KAAKpa,QAC7B,EAAAke,aAAamK,qBAAqBR,EAAkBkhD,EAA0B5uD,EAAa3d,EAAS0d,EAAWE,GAE/G,IAAM4uD,EAA4B,EAAA9qD,aAAaoK,uBAC3CT,EAAkBkhD,EAA0BvsE,EAAS0d,EAAWC,EAAaC,EAAM9lB,EAAW2lB,SAE5F4C,EAAgBn0B,OAAOmL,OAAO,CAAC,EAAGS,GAMxC,OALI8zB,EACF1/B,OAAOmL,OAAOgpB,EAAe,CAAC1C,YAAW,EAAE3d,QAAO,EAAE4d,KAAI,EAAEF,UAAS,EAAE3F,SAAUjgB,EAAWigB,WAE1F7rB,OAAOmL,OAAOgpB,EAAe,CAAC1C,YAAW,EAAE3d,QAAO,EAAE4d,KAAI,EAAE7F,SAAUjgB,EAAWigB,WAE1E,CACLsI,EACAyjD,EACI,CACE0I,EAA0B,GAAIA,EAA0B,GAAIA,EAA0B,GACtFA,EAA0B,IAE5BA,EAER,EAEM/gD,EAAsB,SACxBu8C,EAA4B/7C,EAA8BpS,EAAgC/hB,EAC1Fo0B,EAAaX,EAAatc,EAAkBkd,GAC9C,IAAM23C,EAAuC,SAAtBhsE,EAAW1F,OAC5B2N,EAAOksB,EAAUxgC,OACjBm8E,EAAa,EAAA1lE,UAAU5T,KAAKurB,GAC5BgvD,GAAsB,IAAAC,qBAAoB,SAAUjvD,GACpDkxD,GAAiB,IAAAjC,qBAAoB,IAAK78C,GAEhD,GAAIn0B,EAAW6lB,YAAYlyB,QAAU,EAAG,CACtC,IAKI2gC,EALEC,EAAKv0B,EAAW6lB,YAAY7lB,EAAW6lB,YAAYlyB,OAAS,GAC5D6gC,EAAKx0B,EAAWkI,QAAQlI,EAAWkI,QAAQvU,OAAS,GACpD8gC,EAAUz0B,EAAW8lB,KAAK9lB,EAAW8lB,KAAKnyB,OAAS,EAAI,GAEvDghF,EAAU1sE,GAAQ+jE,EAAiB,EAAI,GAEzCp3C,EAAQ,GACRC,EAAW,GAqBf,GAnBEP,EADEG,EALUz0B,EAAW8lB,KAAK9lB,EAAW8lB,KAAKnyB,OAAS,KAK/B,EACd,oDAC4B4gC,EAAE,+CACjBogD,EAAO,uBAAeA,EAAO,eAAOngD,EAAE,cAAMC,EAAO,+CAC/CkgD,EAAO,6BAAqBA,EAAO,gBAAQxgD,EAAUwgD,GAAQ,wHAI5D1B,EAAef,cAAc,YAAW,+BACtD99C,EAAG,qBAGP,oDAC4BG,EAAE,+CACjBogD,EAAO,uBAAeA,EAAO,eAAOngD,EAAE,cAAMC,EAAO,gDAC9Cw+C,EAAef,cAAc,YAAW,+BACtD99C,EAAG,qBAIqB,IAAlCp0B,EAAW6lB,YAAYlyB,OAAc,CACvC,IAAMmhC,EAAK90B,EAAW6lB,YAAY7lB,EAAW6lB,YAAYlyB,OAAS,GAC5DohC,EAAK/0B,EAAWkI,QAAQlI,EAAWkI,QAAQvU,OAAS,GACpDqhC,EAAUh1B,EAAW8lB,KAAK9lB,EAAW8lB,KAAKnyB,OAAS,EAAI,GACvDshC,EAAQj1B,EAAW8lB,KAAK9lB,EAAW8lB,KAAKnyB,OAAS,GACjDihF,EAAU3sE,GAAQ+jE,EAAiB,EAAI,GACvC92C,EAAOf,EAAUygD,GAErBhgD,EADEI,EAAUC,IAAU,EACd,sDAC4BH,EAAE,iDACjB8/C,EAAO,uBAAeA,EAAO,eAAO7/C,EAAE,cAAMC,EAAO,iDAC/C4/C,EAAO,6BAAqBA,EAAO,gBAAQ1/C,EAAI,0CACpDX,EAAE,yEAKd,sDAC4BO,EAAE,iDACjB8/C,EAAO,uBAAeA,EAAO,eAAO7/C,EAAE,cAAMC,EAAO,2BAG1EH,EAAW,iC,CA6Bb,MAxBoB,2EACyC1d,EAAQ,yFACGA,EAAQ,6BAEtE45D,EAAoBG,QAAO,yBAC3B+B,EAAehB,QAAO,2BAEtB/B,EAAauB,YAAW,2BACtBvB,EAAawB,sCAAsC5B,GAAW,6BAE9DiB,EAAoBK,2BAA2B,WAAU,2BACzDL,EAAoBM,QAAQ,aAAc,WAAU,2BACpDN,EAAoBK,2BAA2B,YAAW,2BAC1DL,EAAoBM,QAAQ,aAAc,YAAW,wCAE1Cl6D,EAAQ,cAAMA,EAAQ,YAAIkd,EAAK,yDAE1CO,EAAK,2BACLN,EAAK,2BACLO,EAAQ,2BACRpB,EAAG,+D,CAMf,GAAIu4C,EACF,MAAM,IAAIz4E,MAAM,yEAElB,IAKI4hC,EALEtH,EAAa,EAAAzjB,UAAU5T,KAAKwJ,EAAW6lB,aACvCuP,EAAgB,EAAAhrB,UAAU0N,eAAe9X,EAAW6lB,aACpDwP,EAAcD,EAAczhC,OAC5B2hC,EAAWt1B,EAAW8lB,KAAKnyB,OAkEjC,OA9DEwhC,EAHcn1B,EAAW8lB,KAAK+P,QAAO,SAAC3W,EAAK4W,GAAQ,OAAA5W,EAAM4W,CAAN,IAGzC,oPAQgBm9C,EAAef,cAAc,YAAW,+BACtD99C,EAAG,qBAGL,yDAEc6+C,EAAef,cAAc,YAAW,6BACtD99C,EAAG,kBAGK,2EACyCjd,EAAQ,yFACGA,EAAQ,6BAEtE45D,EAAoBG,QAAO,yBAC3B+B,EAAehB,QAAO,mDAEE38C,EAAQ,aAAKt1B,EAAW8lB,KAAK/oB,KAAI,SAAAvJ,GAAK,gBAAGA,EAAC,IAAJ,IAASkK,KAAK,KAAI,wDACnDuK,EAAI,aAAKksB,EAAUp3B,KAAI,SAAAvJ,GAAK,gBAAGA,EAAC,IAAJ,IAASkK,KAAK,KAAI,4DAC1C23B,EAAW,aAAKD,EAAcr4B,KAAI,SAAAvJ,GAAK,gBAAGA,EAAC,IAAJ,IAASkK,KAAK,KAAI,sDAC/D23B,EAAW,aAAKr1B,EAAWkI,QAAQnL,KAAI,SAAAvJ,GAAK,gBAAGA,EAAC,IAAJ,IAASkK,KAAK,KAAI,6BAEzFwyE,EAAauB,YAAW,2BACtBvB,EAAawB,sCAAsC5B,GAAW,6BAE9DiB,EAAoBK,2BAA2B,WAAU,2BACzDL,EAAoBM,QAAQ,aAAc,WAAU,2BACpDN,EAAoBK,2BAA2B,YAAW,2BAC1DL,EAAoBM,QAAQ,aAAc,YAAW,qDAE7Bh8C,EAAW,2CAEvBle,EAAQ,YAAIkd,EAAK,uHAIHxG,EAAU,4FAEbwH,EAAc,EAAC,wLAI5BA,EAAc,EAAC,uFAGVptB,EAAOotB,EAAW,kBAAUptB,EAAI,+EACJA,EAAOotB,EAAW,iDACzCptB,EAAOotB,EAAW,iDAClCF,EAAO,4CAEX1B,EAAG,+DAMnB,EAcMohD,EAA4B,SAAC70E,GAA8D,OAC/F1F,OAAQ0F,EAAW1F,OACnBqrB,QAAS,CAAC,SAAU,QAAS,aAAc,cAAc3lB,EAAWqzE,UACpEhgD,SAAUrzB,EAAW80E,UACrBjvD,YAAa7lB,EAAWszE,aACxBprE,QAASlI,EAAWkI,QACpB4d,KAAM9lB,EAAW8lB,KAN8E,EAa3FsN,EACF,SAACve,EAA+B+N,EAA2B2Q,EAC1DvzB,GACO,QACFwzB,EAAwC3e,EAAQ7U,EAAYuzB,GAAiB,GAD1E3L,EAAkB,KAAE7F,EAAW,KAEhC8L,EAAa,EAAAzjB,UAAU5T,KAAKoxB,EAAmB/B,aAE/C1O,EAAW,MAGbsc,EAAM,GAMV,OALI7L,EAAmB0L,gBACrBG,GAAO,mBAAYtc,EAAQ,YAAI0W,EAAU,MAEzC4F,GAAO,mBAAYtc,EAAQ,YAAI0W,EAAU,YAEpC,EAAP,KACKjL,GAAQ,CACX2Y,QAAS,CAAC,CAAC7lC,KAAMqsB,EAAa5K,SAAUtC,EAAO,GAAGsC,SAAUi2D,YAAa,EAAAxD,YAAYC,UACrFyD,gBAAiB,SAAA4C,GAAgB,OAAAv8C,EAC7Bu8C,EAAcr7D,EAAO,GAAGnf,KAAMqsB,EAAa6F,EAXrC,kBAW8D6L,EAAKtc,EAAU,MADtD,EAEjC0tD,cAAe,WAAM,OAAE9gD,EAAGhlB,KAAKE,KAAK,EAAAmL,UAAU5T,KAAKurB,GAAe,IAA7C,GAEzB,EAES,EAAA9H,2BAA6B,SAACja,GACzC,IAAMszB,EAA+D,IAA5CtzB,EAAW+0E,kBAE9B70E,EAAO20E,EAA0B70E,GAEvC,GAAsB,IAAlBE,EAAKmzB,SACP,MAAM,IAAI9/B,MAAM,0EAGlB,OAAO,IAAAmM,6BAA2B,GAAE4zB,gBAAe,GAAKpzB,GAC1D,EAEa,EAAA8Z,YAAc,SAACjgB,EAAyBiG,GACnDggB,EAAejmB,EAAQ8a,QACvB,IAAM+N,EAAW,CAAC7vB,KAAM,cAAe+hB,WAAY,CAAC,EAAA80D,YAAYC,SAAU30D,UAAWlV,EAAWigB,UAChGlmB,EAAQ2sE,QAAQ,EAAD,KAAK9jD,GAAQ,CAAEvsB,IAAK,WAAM,OAAA+8B,EAA6Br5B,EAAQ8a,OAAQ+N,GAAU,EAAO5iB,EAA9D,IAC3C,EAEA,IAAMg1E,EAAuB,CAC3BrvD,QAAS,GACT0N,SAAU,EACVC,iBAAiB,EACjBzN,YAAa,GACb3d,QAAS,GACT4d,KAAM,GACN+N,aAAc,EACdjO,UAAW,GACX3F,SAAU,IAGC,EAAAlE,iCAAmC,SAAC/b,GAC/C,IAAM1F,EAAS0F,EAAW1F,OAC1B,OAAO,EAAP,GAAQA,OAAM,GAAK06E,GAAoB,CAAE/0D,SAAU3lB,GACrD,EAEa,EAAAwhB,kBAAoB,SAAC/hB,EAAyBiG,GACzDggB,EAAejmB,EAAQ8a,QACvB,IAAM+N,EAAW,CAAC7vB,KAAM,oBAAqB+hB,WAAY,CAAC,EAAA80D,YAAYC,SAAU30D,UAAWlV,EAAWigB,UACtGlmB,EAAQ2sE,QAAQ,EAAD,KAAK9jD,GAAQ,CAAEvsB,IAAK,WAAM,OAAA+8B,EAA6Br5B,EAAQ8a,OAAQ+N,GAAU,EAAM5iB,EAA7D,IAC3C,EAOA,IAAM4zB,EACF,SAAC/e,EAA+B+N,EAA2B2Q,EAC1DvzB,GACO,QACFwzB,EAAwC3e,EAAQ7U,EAAYuzB,GAAiB,GAD1E3L,EAAkB,KAAE7F,EAAW,KAMtC,OAAO,EAAP,KACKa,GAAQ,CACX2Y,QAAS,CAAC,CAAC7lC,KAAMqsB,EAAa5K,SAAUtC,EAAO,GAAGsC,SAAUi2D,YAAa,EAAAxD,YAAYC,UACrFyD,gBAAiB,SAAA4C,GACb,OAAAv8C,EAAoBu8C,EAAcr7D,EAAO,GAAGnf,KAAMqsB,EAAa6F,EARzD,2CAGA,GAKuF,MAAO,OAApG,EACJi9C,cAAe,WAAM,OAAE9gD,EAAGhlB,KAAKE,KAAK,EAAAmL,UAAU5T,KAAKurB,GAAe,IAA7C,GAEzB,EAES,EAAAjF,QAAU,SAAC/iB,EAAyBiG,GAC/CggB,EAAejmB,EAAQ8a,QACvB,IAAM+N,EAAW,CAAC7vB,KAAM,UAAW+hB,WAAY,CAAC,EAAA80D,YAAYC,SAAU30D,UAAWlV,EAAWigB,UAC5FlmB,EAAQ2sE,QAAQ,EAAD,KAAK9jD,GAAQ,CAAEvsB,IAAK,WAAM,OAAAu9B,EAAyB75B,EAAQ8a,OAAQ+N,GAAU,EAAO5iB,EAA1D,IAC3C,EAEa,EAAA+c,uBAAyB,SAAC/c,GACrC,IAAM6zB,EAAe7zB,EAAWi1E,cAC1BrvD,EAAY5lB,EAAW4lB,UAEvB1lB,EAAO20E,EAA0B70E,GAEvC,GAAqB,IAAjB6zB,EACF,MAAM,IAAItgC,MAAM,+DAElB,GAAsB,IAAlB2M,EAAKmzB,SACP,MAAM,IAAI9/B,MAAM,sEAGlB,OAAO,IAAAmM,6BAA2B,GAAEm0B,aAAY,EAAEjO,UAAS,GAAK1lB,GAClE,EAEa,EAAA8qE,6BAA+B,SAAChrE,GAC3C,IAAM1F,EAAS0F,EAAW1F,OAC1B,OAAO,EAAP,GAAQA,OAAM,GAAK06E,GAAoB,CAAE/0D,SAAU3lB,GACrD,EAEa,EAAA0hB,cAAgB,SAACjiB,EAAyBiG,GACrDggB,EAAejmB,EAAQ8a,QACvB,IAAM+N,EAAW,CAAC7vB,KAAM,gBAAiB+hB,WAAY,CAAC,EAAA80D,YAAYC,SAAU30D,UAAWlV,EAAWigB,UAClGlmB,EAAQ2sE,QAAQ,EAAD,KAAK9jD,GAAQ,CAAEvsB,IAAK,WAAM,OAAAu9B,EAAyB75B,EAAQ8a,OAAQ+N,GAAU,EAAM5iB,EAAzD,IAC3C,C,66BCjXA,cACA,SACA,UAEA,UAMa,EAAAk8B,yBAA2B,CACtCnpC,KAAM,YACN+hB,WAAY,CAAC,EAAA80D,YAAYC,UAG3B,IAUMztC,EAAkB,SAACrZ,EAA+BsH,GACpD,OAACA,GAAQA,EAAK12B,SAAWovB,EAAWpvB,OAAU,OAAKovB,EAAW9R,SAAO,GAAEjE,UAAYqd,CAAnF,EAeS,EAAA8R,2BAA6B,SAAC1kB,EAAmBy9D,GAC5D,IACMnyD,EAAatL,EAAM/hB,KACnB20B,EAAO+R,EAAgBrZ,EAAYmyD,GACnCnzD,EAjBe,SAACgB,EAA+BsH,GACnD,SAAAjgB,UAAUoyB,gBAAgBzZ,EAAYqZ,EAAgBrZ,EAAYsH,GAAlE,CAgBkBiS,CAAevZ,EAAYsH,GACzCpiB,EAAO8a,EAAWpvB,OAClBm8E,EAAa,EAAA1lE,UAAU5T,KAAKurB,GAK5BgvD,GAAsB,IAAAC,qBAAoB,SAAUjvD,GACpDozD,GAAqB,IAAAnE,qBAAoB,IAAKjuD,GAoBpD,OAAO,EAAP,KACK,EAAAmZ,0BAAwB,CAC3BX,QAAS,CAAC,CAAC7lC,KAAMqsB,EAAa5K,SAAUM,EAAMN,SAAUi2D,YAAa,EAAAxD,YAAYC,UACjFyD,gBArBsB,SAAC4C,GAA+B,uEAbvC,MAc4C,+EAd5C,MAeuD,mBA1BjD,SAAC7lD,EAAgBpiB,GACxC,IAAMw0B,EAAc,GACpBA,EAAY7oC,KAAK,8CAAuCqU,EAAI,2CAAmCA,EAAI,UACnG,IAAK,IAAIzU,EAAI,EAAGA,EAAIyU,IAAQzU,EAC1BipC,EAAY7oC,KAAK,iBAAUy2B,EAAK72B,GAAE,kBAAUA,EAAC,OAG/C,OADAipC,EAAY7oC,KAAK,OACV6oC,EAAY/+B,KAAK,KAC1B,CAoBI03E,CAAiB/qD,EAAMpiB,GAAK,eAC5B8oE,EAAoBG,QAAO,eAC3BiE,EAAmBlD,QAAO,iBAE1B/B,EAAauB,YAAW,iBACtBvB,EAAawB,sCAAsC5B,GAAW,mBAE9DiB,EAAoBK,2BAA2B,WAAU,iBACzDL,EAAoBM,QAAQ,aAAc,WAAU,iBACpD8D,EAAmB/D,2BAA2B,YAAW,0EAGlC+D,EAAmBjD,cAAc,YAAW,UAhBf,EAsBtDrN,cAAe,WAAM,OAAE9gD,EAAGhlB,KAAKE,KAAK6wE,EAAa,IAA5B,GAEzB,EAEa,EAAAniE,UAAY,SAAC5T,EAAyBiG,IAlE5B,SAAC6U,GACtB,IAAKA,GAA4B,IAAlBA,EAAOlhB,OACpB,MAAM,IAAIJ,MAAM,+BAGlB,GAA2B,IAAvBshB,EAAO,GAAGsC,SACZ,MAAM,IAAI5jB,MAAM,+BAEpB,CA2DEysB,CAAejmB,EAAQ8a,QACvB9a,EAAQ2sE,QAAQ,EAAD,KACV,EAAAxqC,0BAAwB,CAC3BhnB,UAAWlV,EAAWigB,SACtB5pB,IAAK,WAAM,WAAA8lC,4BAA2BpiC,EAAQ8a,OAAO,GAAI7U,EAAWqqB,KAAzD,IAEf,EAEa,EAAA/K,yBAA2B,SAACtf,GACrC,WAAAN,6BAA4B,CAAC2qB,KAAMrqB,EAAWqqB,MAA9C,C,ijBC5FJ,cACA,SACA,UA4CMyT,EACF,SAACrmB,EAAmB1kB,EAAc48E,EAAmCC,EACpE3vD,GACC,IAAM2C,EAA4B,CAAC7vB,KAAI,EAAE+hB,WAAY,CAAC,EAAA80D,YAAYC,SAAU30D,UAAW+K,GACvF,OAAO,EAAP,KACK2C,GAAQ,CACXvsB,IAAK,WAAM,OAhBf,SAACusB,EAA2BnL,EAAmBk4D,EAC9CC,GAAmD,cAC/ChtD,GAAQ,CACX0qD,gBAAiB,SAAA4C,GACb,OA7BN,SAACA,EAA4BmF,EAAkB1F,EAC9CC,GACC,IAEI0F,EAFE5E,EAAU3xE,KAAKE,KAAKo2E,EAAW,GAQrC,OAJEC,EADsB,iBAAb3F,EACI,UAAGA,EAAQ,OAEXA,EAAS,KAEjB,2KAITC,QAAAA,EAA4B,GAAE,iBAE9BM,EAAauB,YAAW,iBACtBvB,EAAawB,sCAAsChB,GAAQ,gFAGlC4E,EAAU,SAErC,CAOMC,CAA+BrF,EAAc,EAAA9lE,UAAU5T,KAAKihB,EAAM/hB,MAAOi6E,EAAUC,EAAnF,EACJr0C,QAAS,CAAC,CAAC7lC,KAAM+hB,EAAM/hB,KAAMyhB,SAAUM,EAAMN,SAAUi2D,YAAa,EAAAxD,YAAYC,UAChFhF,cAAe,SAACnyB,GACZ,OAAE3uB,EAAGhlB,KAAKE,KAAK,EAAAmL,UAAU5T,KAAKk8C,EAAa,GAAGh9C,MAAQ,GAA0B,GAAhF,GAN8C,CAerCqoC,CAA6Bnb,EAAUnL,EAAOk4D,EAAUC,EAAxD,GAEf,EAES,EAAAl2D,IAAM,SAAC3f,GAClBA,EAAQ2sE,QAAQ5oC,EAAmC/jC,EAAQ8a,OAAO,GAAI,MAAO,OAC/E,EAEa,EAAA8E,KAAO,SAAC5f,GACnBA,EAAQ2sE,QAAQ5oC,EAAmC/jC,EAAQ8a,OAAO,GAAI,OAAQ,QAChF,EAEa,EAAA21D,MAAQ,SAACzwE,GACpBA,EAAQ2sE,QAAQ5oC,EAAmC/jC,EAAQ8a,OAAO,GAAI,QAAS,SACjF,EAEa,EAAAiF,KAAO,SAAC/f,GACnBA,EAAQ2sE,QAAQ5oC,EAAmC/jC,EAAQ8a,OAAO,GAAI,OAAQ,QAChF,EAEa,EAAA41D,MAAQ,SAAC1wE,GACpBA,EAAQ2sE,QAAQ5oC,EAAmC/jC,EAAQ8a,OAAO,GAAI,QAAS,SACjF,EAEa,EAAAkF,KAAO,SAAChgB,GACnBA,EAAQ2sE,QAAQ5oC,EAAmC/jC,EAAQ8a,OAAO,GAAI,OAAQ,QAChF,EACa,EAAA61D,MAAQ,SAAC3wE,GACpBA,EAAQ2sE,QAAQ5oC,EAAmC/jC,EAAQ8a,OAAO,GAAI,QAAS,SACjF,EAOa,EAAA+1D,QAAU,SAAC7wE,EAAyBiG,GAC/CjG,EAAQ2sE,QACJ5oC,EACI/jC,EAAQ8a,OAAO,GAAI,QAAQ,SAAArF,GAAK,sBAASA,EAAC,0BAAV,GAAqC,sDACnCxP,EAAWhB,IAAG,0DACdgB,EAAW26B,IAAG,SAEhD36B,EAAWigB,UACf,CAACpL,OAAQ,CAAC,IAChB,EAOa,EAAAwF,KAAO,SAACtgB,GACnB,IAPwC8a,EAClC7V,EACA27B,EAKA36B,GANAhB,GADkC6V,EAOY9a,EAAQ8a,QANxClhB,QAAU,EAAKkhB,EAAO,GAAGoxD,kBAAkB,GAAK,EAAAl6C,SAC9D4O,EAAO9lB,EAAOlhB,QAAU,EAAKkhB,EAAO,GAAGoxD,kBAAkB,GAAK,EAAAj6C,UAC7D,IAAAtsB,6BAA4B,CAACV,IAAG,EAAE27B,IAAG,MAK5C,IAAAiwC,SAAQ7wE,EAASiG,EACnB,EAEa,EAAAf,KAAO,SAAClF,GACnBA,EAAQ2sE,QAAQ5oC,EAAmC/jC,EAAQ8a,OAAO,GAAI,OAAQ,QAChF,EAEa,EAAAiG,IAAM,SAAC/gB,GAClBA,EAAQ2sE,QAAQ5oC,EAAmC/jC,EAAQ8a,OAAO,GAAI,MAAO,OAC/E,EAEa,EAAAg2D,KAAO,SAAC9wE,GACnBA,EAAQ2sE,QAAQ5oC,EAAmC/jC,EAAQ8a,OAAO,GAAI,OAAQ,QAChF,EAMa,EAAAi2D,qBAAuB,SAAC9qE,GACjC,WAAAN,6BAA4BM,EAA5B,EAES,EAAAmb,IAAM,SAACphB,EAAyBiG,GAC3CjG,EAAQ2sE,QAAQ5oC,EACZ/jC,EAAQ8a,OAAO,GAAI,OAAO,SAAArF,GAAK,yBAAYA,EAAC,IAAb,GAAkB,0CACvBxP,EAAWgtB,MAAK,mOAS1ChtB,EAAWigB,UACjB,EAEa,EAAA8qD,IAAM,SAAChxE,GAClBA,EAAQ2sE,QAAQ5oC,EAAmC/jC,EAAQ8a,OAAO,GAAI,OAAO,SAAArF,GAAK,yBAAYA,EAAC,IAAb,GAAkB,2ZAatG,EAEa,EAAA6L,IAAM,SAACthB,GAClBA,EAAQ2sE,QAAQ5oC,EAAmC/jC,EAAQ8a,OAAO,GAAI,MAAO,OAC/E,EAEa,EAAA2G,MAAQ,SAACzhB,GACpBA,EAAQ2sE,QAAQ5oC,EAAmC/jC,EAAQ8a,OAAO,GAAI,QAAS,SACjF,EAEa,EAAAyH,UAAY,SAACviB,EAAyBiG,GACjDjG,EAAQ2sE,QAAQ5oC,EACZ/jC,EAAQ8a,OAAO,GAAI,aAAa,SAAArF,GAAK,2CAA8BA,EAAC,aAAKA,EAAC,aAAKA,EAAC,sBAA3C,GACrC,6CAAsCxP,EAAWgtB,MAAK,MAAMhtB,EAAWigB,UAC7E,EAEa,EAAAjD,IAAM,SAACjjB,GAClBA,EAAQ2sE,QAAQ5oC,EAAmC/jC,EAAQ8a,OAAO,GAAI,OAAO,SAAArF,GAAK,iBAAIA,EAAJ,IACpF,EAEa,EAAAy7D,WAAa,SAAClxE,GACzBA,EAAQ2sE,QAAQ5oC,EAAmC/jC,EAAQ8a,OAAO,GAAI,cAAc,SAAArF,GAAK,oBAAOA,EAAP,IAC3F,EAEa,EAAAyO,KAAO,SAAClkB,GACnBA,EAAQ2sE,QAAQ5oC,EACZ/jC,EAAQ8a,OAAO,GAAI,QAAQ,SAAArF,GAAK,uCAA0BA,EAAC,aAAKA,EAAC,qBAAjC,IACtC,EAEa,EAAA6O,QAAU,SAACtkB,GACtBA,EAAQ2sE,QAAQ5oC,EAAmC/jC,EAAQ8a,OAAO,GAAI,WAAW,SAAArF,GAAK,mCAAsBA,EAAC,MAAvB,IACxF,EAEa,EAAA8O,IAAM,SAACvkB,GAClBA,EAAQ2sE,QAAQ5oC,EAAmC/jC,EAAQ8a,OAAO,GAAI,MAAO,OAC/E,EAEa,EAAAq2D,KAAO,SAACnxE,GACnBA,EAAQ2sE,QAAQ5oC,EAAmC/jC,EAAQ8a,OAAO,GAAI,OAAQ,QAChF,EAEa,EAAAiK,KAAO,SAAC/kB,GACnBA,EAAQ2sE,QAAQ5oC,EAAmC/jC,EAAQ8a,OAAO,GAAI,OAAQ,QAChF,EAEa,EAAAsK,IAAM,SAACplB,GAClBA,EAAQ2sE,QAAQ5oC,EAAmC/jC,EAAQ8a,OAAO,GAAI,MAAO,OAC/E,EAEa,EAAAuK,KAAO,SAACrlB,GACnBA,EAAQ2sE,QAAQ5oC,EAAmC/jC,EAAQ8a,OAAO,GAAI,OAAQ,QAChF,EAEa,EAAAs2D,gBAAkB,SAACpxE,EAAyBiG,GAIvD,OAHAjG,EAAQ2sE,QAAQ5oC,EACZ/jC,EAAQ8a,OAAO,GAAI,mBAAmB,SAAArF,GAAK,uCAA0BA,EAAC,aAAKA,EAAC,8BAAjC,GAC3C,+DAAwDxP,EAAWgtB,MAAK,MAAMhtB,EAAWigB,WACtF,CACT,C,27BCvNA,cAEA,UAYA,aAIE,WAAoBjtB,GAAA,KAAAA,QAAAA,EAClB8D,KAAK0oC,KAAO,IAAIhrC,IAChBsC,KAAK2oC,iBAAkB,CACzB,CAqHF,OApHE,YAAAnqB,YAAA,SAAYlZ,GACV,OAAOtF,KAAK0oC,KAAKnpC,IAAI+F,EACvB,EACA,YAAAuZ,YAAA,SAAYvZ,EAAcgZ,GACxBte,KAAK0oC,KAAKxpC,IAAIoG,EAAKgZ,EACrB,EACA,YAAAlZ,IAAA,SAAIwjC,EAAyB7qB,EAAmB0mB,EAAoBspC,G,YAApE,OACQrC,EAAS1rE,KAAK9D,QAAQwvE,OACtBjB,EAAqBzqE,KAAK9D,QAAQqwE,wBAEpCvsE,KAAK9D,QAAQyuE,kBAIdF,EAA2BiU,eAAe1+E,KAAK9D,QAAQiwE,kBAAmB,GAG7E1B,EAAmBkU,YAAY/1C,EAAcg2C,iBAC7C,IAAMC,EAAU,G,IAChB,IAAoB,QAAA9gE,GAAM,8BAAE,CAAvB,IAAM4C,EAAK,QACdk+D,EAAQ/hF,KAAK,CAACgiF,QAASD,EAAQhiF,OAAQkiF,SAAU,CAAC7+E,OAAQygB,EAAMzgB,S,uGAElE,IAAqB,QAAAukC,GAAO,8BAAE,CAAzB,IAAM10B,EAAM,QACf8uE,EAAQ/hF,KAAK,CAACgiF,QAASD,EAAQhiF,OAAQkiF,SAAU,CAAC7+E,OAAQ6P,EAAO7P,S,mGAEnE,IAAM8+E,EAAYtT,EAAOuT,gBAAgB,CAACvoE,OAAQkyB,EAAcg2C,gBAAgBM,mBAAmB,GAAIL,QAAO,IAO9G,GANApU,EAAmB0U,aAAa,EAAGH,GAEnCvU,EAAmB2U,mBAAkB,MAArC3U,EAAkB,OAAuBsD,IAAa,IAEtD/tE,KAAK9D,QAAQwuE,wBAET1qE,KAAK9D,QAAQyuE,iBAAkB,CAIhCF,EAA2BiU,eAAe1+E,KAAK9D,QAAQiwE,kBAAmB,GAE3E,IAAM,EAAYnsE,KAAK9D,QAAQyvE,eAAe9nB,OAAO,GAAIouB,eAAeE,SAAWF,eAAeoN,eAE5F,EAAWr/E,KAAK9D,QAAQyvE,eAAe9nB,OAAO,GAAIouB,eAAekB,SAAWlB,eAAeW,UAEjG5yE,KAAK9D,QAAQuwE,iBACbzsE,KAAK9D,QAAQmwE,oBAAoBiT,gBAAgBt/E,KAAK9D,QAAQiwE,kBAAmB,EAAG,EAAG,EAAUjsE,OAAQ,GACzGF,KAAK9D,QAAQmwE,oBAAoBiG,mBAAmB,EAAUpyE,OAAQ,EAAG,EAASA,OAAQ,EAAG,IAC7FF,KAAK9D,QAAQ89C,QAEb,IAAM,EAAWh6C,KAAK9D,QAAQquE,gBACxB,EAAavqE,KAAK9D,QAAQghE,QAAQ39D,IAAI,GAAW,GAEvD,EAASW,OAAOmzE,SAASC,WAAWC,MAAMlvB,MAAK,WAC7C,IAAMk7B,EAAa,IAAItgF,eAAe,EAASiB,OAAOkyE,kBAChDoN,EAAeD,EAAW,GAC1BE,EAAaF,EAAW,GAE9B,EAASr/E,OAAOmyE,aAE8B,IAAnC,EAAKn2E,QAAQwjF,oBACtB,EAAKxjF,QAAQwjF,kBAAoBF,GAGnC,IAAMz8B,EAAYnjD,OAAO4/E,EAAe,EAAKtjF,QAAQwjF,mBAC/Ct8B,EAAUxjD,OAAO6/E,EAAa,EAAKvjF,QAAQwjF,mBAEjD,IAAK9/E,OAAOC,cAAckjD,KAAenjD,OAAOC,cAAcujD,GAC5D,MAAM,IAAItjD,WAAW,6BAGvB,EAAK5D,QAAQyvE,eAAegD,QAAQ,EAAUH,IAC9C,EAAKtyE,QAAQyvE,eAAegD,QAAQ,EAASH,IAG7C7sB,QAAQ97B,IAAI,8BAAuB,EAAQ,YAAI,EAAU,6BAAqBu9B,EAAUL,EAAS,OACnG,G,CAGE/iD,KAAK9D,QAAQwuE,uBAAyB,IACxC1qE,KAAK9D,QAAQ89C,OAEjB,EACA,YAAA9sC,QAAA,WAEA,EACA,YAAA0R,MAAA,SAAMlN,EAA0BiuE,GAC9B,IAAMjU,EAAS1rE,KAAK9D,QAAQwvE,OAEtBkU,EAAOluE,EAAY8kE,iBAAgB,IAAAqF,oBAAmB8D,IACtDE,EAAenU,EAAOoU,mBAAmB,CAACF,KAAI,IAMpD,OALA,IAAA5R,WAAU,WAAW,WAAM,sCAAyB4R,EAAzB,IAKpB,CAACluE,YAAW,EAAEktE,gBAFjBlT,EAAOqU,sBAAsB,CAACnQ,QAAS,CAACl0E,OAAQmkF,EAAcG,WAAY,QAAStpE,OAAQ,SAGjG,EAEA,YAAAo3D,2BAAA,SAA2BC,GACzB,IAAM9gD,EAA6B,iBAAlB8gD,EAA6BA,EAAgBA,EAAc9gD,EACtEy7C,EAA6B,iBAAlBqF,EAA6B,EAAKA,EAAcrF,GAAK,EAChE6N,EAA6B,iBAAlBxI,EAA6B,EAAKA,EAAcwI,GAAK,EAChE0J,EAAoBjgF,KAAK9D,QAAQwvE,OAAOP,OAAOC,iCACrD,GAAIn+C,GAAKgzD,GAAqBvX,GAAKuX,GAAqB1J,GAAK0J,EAC3D,MAAO,CAAChzD,EAAGy7C,EAAG6N,GAEhB,IAAM72E,EAAOutB,EAAIy7C,EAAI6N,EACjB2J,EAAkBj4E,KAAKE,KAAKF,KAAK+f,KAAKtoB,IAC1C,GAAIwgF,EAAkBD,EAAmB,CAEvC,IADAC,EAAkBj4E,KAAKE,KAAKF,KAAKk4E,KAAKzgF,KAChBugF,EACpB,MAAM,IAAIxjF,MAAM,+CAElB,MAAO,CAACyjF,EAAiBA,EAAiBA,E,CAE1C,MAAO,CAACA,EAAiBA,EAAiB,EAE9C,EACF,EA5HA,GAAa,EAAAt0C,eAAAA,C,kCCXb,IAAYknC,E,uEAAAA,EAAA,EAAAA,cAAA,EAAAA,YAAW,KACrB,uBACA,uBACA,wB,iaCHW,EAAAsN,oBACT,SAACjgF,EAAkCkgF,EAAgBC,EAClD97E,GACC,GAAsB,iBAAXrE,GAAmC,OAAZA,EAAkB,CAClD,GAAImgF,EAAKxoE,IAAI3X,GACX,MAAM,IAAI1D,MAAM,iCAEhB6jF,EAAKvoE,IAAI5X,E,CAIb7C,OAAOuhF,QAAQ1+E,GAASwR,SAAQ,SAAC,G,IAAA,SAACrM,EAAG,KAAEjI,EAAK,KACpCpB,EAAO,EAAWokF,EAAS/6E,EAAMA,EACvC,GAAqB,iBAAVjI,GACT,IAAA+iF,qBAAoB/iF,EAAkCpB,EAAO,IAAKqkF,EAAM97E,QACnE,GAAqB,iBAAVnH,GAAuC,iBAAVA,EAC7CmH,EAAQvI,EAAMoB,EAAM04C,gBACf,IAAqB,kBAAV14C,EAGhB,MAAM,IAAIZ,MAAM,iDAA0CY,IAF1DmH,EAAQvI,EAAM,EAAU,IAAM,I,CAIlC,GACF,C,gxEC3BJ,IAOIskF,EAQAC,EACAC,EAhBJ,UAGA,aACA,SAEMC,EAAU,WAAe,QAAE,EAAA1jF,IAAIC,KAAKyK,OAA6B,oBAAbrF,QAA3B,EAE3Bs+E,GAAe,EACfr6E,GAAc,EACdC,GAAU,EAORq6E,EAAiF,GACjFC,EAAuF,GACvFC,EAA+E,GAC/EC,EAAyD,GACzDC,EAA8D,GAC9DC,EAAuD,GAEvDC,EAAe,WACnB,GAAIP,IAAiBr6E,GAAeC,IAAYg6E,EAC9C,MAAM,IAAI9jF,MAAM,mBAEpB,EAEM0kF,EAAuB,SAACnV,GAC5B,OAAQA,EAAGrtE,KAAKD,MACd,IAAK,YACHiiF,GAAe,EACX3U,EAAGrtE,KAAKgI,KACVJ,GAAU,EACVi6E,EAAkB,GAAGxU,EAAGrtE,KAAKgI,OAE7BL,GAAc,EACdk6E,EAAkB,MAEpB,MACF,IAAK,WACCxU,EAAGrtE,KAAKgI,IACV85E,EAAiB,GAAGzU,EAAGrtE,KAAKgI,KAE5B85E,EAAiB,KAEnB,MACF,IAAK,kBACCzU,EAAGrtE,KAAKgI,IACVi6E,EAA+B5zD,QAAS,GAAGg/C,EAAGrtE,KAAKgI,KAEnDi6E,EAA+B5zD,QAAS,GAAGg/C,EAAGrtE,KAAKyiF,KAErD,MACF,IAAK,kBACCpV,EAAGrtE,KAAKgI,IACVk6E,EAA+B7zD,QAAS,GAAGg/C,EAAGrtE,KAAKgI,KAEnDk6E,EAA+B7zD,QAAS,GAAGg/C,EAAGrtE,KAAKyiF,KAErD,MACF,IAAK,SACCpV,EAAGrtE,KAAKgI,IACVm6E,EAAuB9zD,QAAS,GAAGg/C,EAAGrtE,KAAKgI,KAE3Cm6E,EAAuB9zD,QAAS,GAAGg/C,EAAGrtE,KAAKyiF,KAE7C,MACF,IAAK,UACCpV,EAAGrtE,KAAKgI,IACVo6E,EAAwB/zD,QAAS,GAAGg/C,EAAGrtE,KAAKgI,KAE5Co6E,EAAwB/zD,QAAS,KAEnC,MACF,IAAK,MACCg/C,EAAGrtE,KAAKgI,IACVq6E,EAAah0D,QAAS,GAAGg/C,EAAGrtE,KAAKgI,KAEjCq6E,EAAah0D,QAAS,GAAGg/C,EAAGrtE,KAAKyiF,KAEnC,MACF,IAAK,gBACCpV,EAAGrtE,KAAKgI,IACVs6E,EAAsBj0D,QAAS,GAAGg/C,EAAGrtE,KAAKgI,KAE1Cs6E,EAAsBj0D,QAAS,KAKvC,EAEMq0D,EAAgC,oBAAbh/E,SAAyE,QAA7C,EAAQ,OAARA,eAAQ,IAARA,cAAQ,EAARA,SAAUi/E,qBAAmC,eAAEj+E,SAAM7G,EAE7F,EAAA4L,8BAAgC,qD,2BAC3C,GAAsCs4E,IAAW,CAC/C,GAAIp6E,EACF,UAEF,GAAIq6E,EACF,MAAM,IAAIlkF,MAAM,4CAElB,GAAI8J,EACF,MAAM,IAAI9J,MAAM,yCAYlB,OATAkkF,GAAe,OAGYnkF,IAAvB,EAAAQ,IAAIC,KAAKskF,WACPF,GAA4C,IAA/BA,EAAU1kF,QAAQ,WACjC,EAAAK,IAAIC,KAAKskF,UAAYF,EAAUG,OAAO,GAAI,EAAYC,YAAY,KAAO,IAItE,CAAP,EAAO,IAAI3+E,SAAc,SAACC,EAASC,GACjCu9E,SAAAA,EAAamB,aAEbnB,EAAc,aACFoB,UAAYR,EACxBX,EAAoB,CAACz9E,EAASC,GAC9B,IAAMkpE,EAA0B,CAACxtE,KAAM,YAAakjF,GAAK,EAAA5kF,IAAIC,MAC7DsjF,EAAYsB,YAAY3V,EAC1B,I,CAGA,MAAO,CAAP,GAAO,IAAA4V,uBAAsB,EAAA9kF,IAAIC,M,QAIxB,EAAA8kF,kBAAoB,SAAM/kF,GAAQ,0C,yDACP0jF,KACpCQ,IACO,CAAP,EAAO,IAAIp+E,SAAc,SAACC,EAASC,GACjCy9E,EAAmB,CAAC19E,EAASC,GAC7B,IAAMkpE,EAA0B,CAACxtE,KAAM,WAAYkjF,GAAK5kF,GACxDujF,EAAasB,YAAY3V,EAC3B,MANE,M,OAQF,SAAM8V,EAAKC,YAAYjlF,I,OAAvB,S,mCAIS,EAAAklF,sBAAwB,SAAMn8B,GAAiB,0C,2BAC1D,OAAsC26B,KACpCQ,IACO,CAAP,EAAO,IAAIp+E,SAA+B,SAACC,EAASC,GAClD49E,EAA+B9jF,KAAK,CAACiG,EAASC,IAC9C,IAAMkpE,EAA0B,CAACxtE,KAAM,kBAAmBkjF,GAAK,CAAC77B,MAAK,IACrEw6B,EAAasB,YAAY3V,EAAS,CAACnmB,EAAM7lD,QAC3C,MAEO,CAAP,EAAO8hF,EAAKE,sBAAsBn8B,G,QAIzB,EAAAo8B,sBAAwB,SAAMC,EAAkCjiF,GAAyC,0C,2BAEhH,OAAsCugF,KACpCQ,IACO,CAAP,EAAO,IAAIp+E,SAAqC,SAACC,EAASC,GACxD69E,EAA+B/jF,KAAK,CAACiG,EAASC,IAC9C,IAAMkpE,EAA0B,CAACxtE,KAAM,kBAAmBkjF,GAAK,CAACQ,UAAS,EAAEjiF,QAAO,IAClFogF,EAAasB,YAAY3V,EAC3B,MAEO,CAAP,EAAO8V,EAAKG,sBAAsBC,EAAWjiF,G,QAIxC,EAAAkiF,cACT,SAAMt8B,EAAmB5lD,GAAyC,0C,2BACpE,OAAsCugF,KACpCQ,IACO,CAAP,EAAO,IAAIp+E,SAAqC,SAACC,EAASC,GACxD89E,EAAuBhkF,KAAK,CAACiG,EAASC,IACtC,IAAMkpE,EAA0B,CAACxtE,KAAM,SAAUkjF,GAAK,CAAC77B,MAAK,EAAE5lD,QAAO,IACrEogF,EAAasB,YAAY3V,EAAS,CAACnmB,EAAM7lD,QAC3C,MAEO,CAAP,EAAO8hF,EAAKK,cAAct8B,EAAO5lD,G,QAIxB,EAAAmiF,eAAiB,SAAMC,GAAiB,0C,2BACnD,OAAsC7B,KACpCQ,IACO,CAAP,EAAO,IAAIp+E,SAAc,SAACC,EAASC,GACjC+9E,EAAwBjkF,KAAK,CAACiG,EAASC,IACvC,IAAMkpE,EAA0B,CAACxtE,KAAM,UAAWkjF,GAAKW,GACvDhC,EAAasB,YAAY3V,EAC3B,OAEA8V,EAAKM,eAAeC,G,YAIX,EAAAn9E,IAAM,SACfm9E,EAAmBC,EAAwBzkE,EAA8B6nD,EACzEzlE,GAAoC,0C,2BACtC,OAAsCugF,KACpCQ,IACO,CAAP,EAAO,IAAIp+E,SAA8B,SAACC,EAASC,GACjDg+E,EAAalkF,KAAK,CAACiG,EAASC,IAC5B,IAAMkpE,EAA0B,CAACxtE,KAAM,MAAOkjF,GAAK,CAACW,UAAS,EAAEC,aAAY,EAAEzkE,OAAM,EAAE6nD,cAAa,EAAEzlE,QAAO,IAC3GogF,EAAasB,YAAY3V,EAAS8V,EAAKS,2BAA2B1kE,GACpE,MAEO,CAAP,EAAOikE,EAAK58E,IAAIm9E,EAAWC,EAAczkE,EAAQ6nD,EAAezlE,G,QAIvD,EAAA4G,aAAe,SAAMw7E,GAAiB,0C,2BACjD,OAAsC7B,KACpCQ,IACO,CAAP,EAAO,IAAIp+E,SAAc,SAACC,EAASC,GACjCi+E,EAAsBnkF,KAAK,CAACiG,EAASC,IACrC,IAAMkpE,EAA0B,CAACxtE,KAAM,gBAAiBkjF,GAAKW,GAC7DhC,EAAasB,YAAY3V,EAC3B,OAEA8V,EAAKj7E,aAAaw7E,G,uHC9NtB,cACA,UACA,SAEa,EAAAG,cAAgB,SAACviF,GAC5B,IAAMlD,GAAO,IAAA0lF,eACTC,EAAmB,EACjBC,EAAmB,GAEnBC,EAA0C3iF,GAAW,CAAC,EAE5D,IACE,QAAkC3D,KAA9B2D,aAAO,EAAPA,EAAS4iF,kBACXD,EAAWC,iBAAmB,OACzB,GACiC,iBAA7B5iF,EAAQ4iF,mBAAkCnjF,OAAOgI,UAAUzH,EAAQ4iF,mBAC1E5iF,EAAQ4iF,iBAAmB,GAAK5iF,EAAQ4iF,iBAAmB,EAC7D,MAAM,IAAItmF,MAAM,4CAAqC0D,EAAQ4iF,mBAG/D,QAAmCvmF,KAA/B2D,aAAO,EAAPA,EAAS6iF,mBACXF,EAAWE,kBAAoB,OAC1B,GAAyC,iBAA9B7iF,EAAQ6iF,oBAAmCpjF,OAAOgI,UAAUzH,EAAQ6iF,mBACpF,MAAM,IAAIvmF,MAAM,4CAAqC0D,EAAQ6iF,yBAGpCxmF,KAAvB2D,aAAO,EAAPA,EAASuhF,aACXoB,EAAWpB,WAAY,GAGzB,IAAIuB,EAAgB,EAOpB,QANqBzmF,KAAjB2D,aAAO,EAAPA,EAAS+iF,OACXD,GAAgB,IAAAE,iBAAgBhjF,EAAQ+iF,IAAKL,IAKtB,KAFzBD,EAAmB3lF,EAAKmmF,qBACpBN,EAAWC,iBAAmBD,EAAWE,oBAAsBF,EAAWpB,UAAYuB,IAExF,MAAM,IAAIxmF,MAAM,4BAclB,YAXuBD,KAAnB2D,aAAO,EAAPA,EAASkjF,SACX,IAAAjD,qBAAoBjgF,EAAQkjF,MAAO,GAAI,IAAIC,SAAoC,SAACh+E,EAAKjI,GACnF,IAAMkmF,GAAgB,IAAAJ,iBAAgB79E,EAAKu9E,GACrCW,GAAkB,IAAAL,iBAAgB9lF,EAAOwlF,GAE/C,GAAqF,IAAjF5lF,EAAKwmF,sBAAsBb,EAAkBW,EAAeC,GAC9D,MAAM,IAAI/mF,MAAM,wCAAiC6I,EAAG,cAAMjI,GAE9D,IAGK,CAACulF,EAAkBC,E,CAC1B,MAAOn8E,GAKP,MAJyB,IAArBk8E,GACF3lF,EAAKymF,sBAAsBd,GAE7BC,EAAOlxE,QAAQ1U,EAAK0mF,OACdj9E,C,CAEV,C,o0DC9DA,IAOIk9E,EAPJ,UACA,UACA,UAGA,UAIA,0BAoFA,QA9EQ,YAAA1B,sBAAN,SAA4B2B,G,gGAGT,SAAMxkB,MAAMwkB,I,OACT,SADH,SACkBrkB,e,OACnC,OADMA,EAAc,SACb,CAAP,GAAO,IAAA0iB,uBAAsB,IAAItkF,WAAW4hE,K,QAGxC,YAAAr4D,UAAN,SAAgBH,EAAiC7G,G,+GAC1CyjF,EAAD,MACF,IAAM,IAAA7B,mBAAkB,EAAA/kF,M,OAAxB,SACA4mF,GAAqB,E,uBAGK,iBAAjB58E,EAAP,MACmB,oBAAVq4D,MAAP,MAEY,IAAM,IAAAC,WAAU,EAAAC,SAAV,CAAoBv4D,I,OACc,OADhD++C,EAAQ,SACwC,IAAM,IAAAs8B,eAAct8B,EAAO5lD,I,cAAjF,kBAAsD,SAAmC,IAAxFH,KAAKuiF,UAAS,KAAEviF,KAAKkF,WAAU,KAAElF,KAAK6E,YAAW,K,aAIT,SAAM7E,KAAKkiF,sBAAsBl7E,I,OAEpB,OAFhD88E,EAAmC,SAEa,IAAM,IAAA3B,uBAAsB2B,EAAW3jF,I,OAA7F,kBAAsD,SAA+C,IAApGH,KAAKuiF,UAAS,KAAEviF,KAAKkF,WAAU,KAAElF,KAAK6E,YAAW,K,qCAGE,UAAM,IAAAw9E,eAAcr7E,EAAc7G,I,QAAxF,kBAAsD,SAA0C,IAA/FH,KAAKuiF,UAAS,KAAEviF,KAAKkF,WAAU,KAAElF,KAAK6E,YAAW,K,qCAIhD,YAAAqI,QAAN,W,mEACE,MAAO,CAAP,GAAO,IAAAo1E,gBAAetiF,KAAKuiF,W,QAGvB,YAAAn9E,IAAN,SAAUV,EAAiCC,EAAqCxE,G,iHA2B1E,OAzBE4jF,EAAuB,GACvBvB,EAAyB,GAC/BllF,OAAOuhF,QAAQn6E,GAAOiN,SAAQ,SAAAqyE,GAC5B,IAAM/nF,EAAO+nF,EAAI,GACXjlE,EAASilE,EAAI,GACbxuE,EAAQ,EAAKtQ,WAAWvI,QAAQV,GACtC,IAAe,IAAXuZ,EACF,MAAM,IAAI/Y,MAAM,yBAAkBR,EAAI,MAExC8nF,EAAWjnF,KAAKiiB,GAChByjE,EAAa1lF,KAAK0Y,EACpB,IAEMowD,EAA0B,GAChCtoE,OAAOuhF,QAAQl6E,GAASgN,SAAQ,SAAAqyE,GAC9B,IAAM/nF,EAAO+nF,EAAI,GAEXxuE,EAAQ,EAAK3Q,YAAYlI,QAAQV,GACvC,IAAe,IAAXuZ,EACF,MAAM,IAAI/Y,MAAM,0BAAmBR,EAAI,MAEzC2pE,EAAc9oE,KAAK0Y,EACrB,IAGI,IAAM,IAAApQ,KAAIpF,KAAKuiF,UAAWC,EAAcuB,EAAW99E,KAAI,SAAA+F,GAAK,OAACA,EAAEtN,KAAMsN,EAAEpN,KAAMoN,EAAErN,KAAnB,IAA2BinE,EAAezlE,I,OAG1G,IAJMskC,EACF,SAEEr1B,EAAoC,CAAC,EAClC1S,EAAI,EAAGA,EAAI+nC,EAAQ5nC,OAAQH,IAClC0S,EAAOpP,KAAK6E,YAAY+gE,EAAclpE,KAAO,IAAI,EAAA2B,OAAOomC,EAAQ/nC,GAAG,GAAI+nC,EAAQ/nC,GAAG,GAAI+nC,EAAQ/nC,GAAG,IAEnG,MAAO,CAAP,EAAO0S,G,QAGT,YAAAtI,eAAA,WAEA,EAEA,YAAAC,aAAA,YACO,IAAAA,cAAa/G,KAAKuiF,UACzB,EACF,EApFA,GAAa,EAAAl6E,qCAAAA,C,qbCPb,cACA,UACA,SAmGa,EAAA47E,kBAAoB,SAAC9jF,G,YAC1BlD,GAAO,IAAA0lF,eACTuB,EAAuB,EACrBrB,EAAmB,GAEnBsB,EAAkDhkF,GAAW,CAAC,GA5EzC,SAACA,GACvBA,EAAQkjF,QACXljF,EAAQkjF,MAAQ,CAAC,GAEdljF,EAAQkjF,MAAMp8E,UACjB9G,EAAQkjF,MAAMp8E,QAAU,CAAC,GAE3B,IAAMA,EAAU9G,EAAQkjF,MAAMp8E,QACzBA,EAAQm9E,+BAEXn9E,EAAQm9E,6BAA+B,KAIrCjkF,EAAQ6F,oBACR7F,EAAQ6F,mBAAmB48B,MAAK,SAAAyhD,GAAM,MAA4C,YAA7B,iBAAPA,EAAkBA,EAAKA,EAAGpoF,KAAlC,MACxCkE,EAAQmkF,kBAAmB,EAE/B,CA2DEC,CAAqBJ,GAErB,IACE,IAAMK,EA1GuB,SAACA,GAChC,OAAQA,GACN,IAAK,WACH,OAAO,EACT,IAAK,QACH,OAAO,EACT,IAAK,WACH,OAAO,EACT,IAAK,MACH,OAAO,GACT,QACE,MAAM,IAAI/nF,MAAM,gDAAyC+nF,IAE/D,CA6FmCC,CAA8D,QAArC,EAAAN,EAAeK,8BAAsB,QAAI,OAC3FE,EA5Fe,SAACA,GACxB,OAAQA,GACN,IAAK,aACH,OAAO,EACT,IAAK,WACH,OAAO,EACT,QACE,MAAM,IAAIjoF,MAAM,sCAA+BioF,IAErD,CAmF0BC,CAA6C,QAA5B,EAAAR,EAAeO,qBAAa,QAAI,cACjEE,EAC8B,iBAAzBT,EAAeU,OAAqB,IAAA1B,iBAAgBgB,EAAeU,MAAOhC,GAAU,EAEzFE,EAAkD,QAA/B,EAAAoB,EAAepB,wBAAgB,QAAI,EAC5D,IAAKnjF,OAAOgI,UAAUm7E,IAAqBA,EAAmB,GAAKA,EAAmB,EACpF,MAAM,IAAItmF,MAAM,4CAAqCsmF,IAGvD,IAAMC,EAAoD,QAAhC,EAAAmB,EAAenB,yBAAiB,QAAI,EAC9D,IAAKpjF,OAAOgI,UAAUo7E,IAAsBA,EAAoB,GAAKA,EAAoB,EACvF,MAAM,IAAIvmF,MAAM,4CAAqCumF,IAGvD,IAAM8B,EAAgF,iBAA1CX,EAAeY,wBACvD,IAAA5B,iBAAgBgB,EAAeY,uBAAwBlC,GACvD,EAMJ,GAA6B,KAJ7BqB,EAAuBjnF,EAAK+nF,yBACxBR,IAA0BL,EAAec,oBAAqBd,EAAeG,iBAAkBI,IAC7FP,EAAee,gBAAiB,EAAGN,EAAiB7B,EAAkBC,EACxE8B,IAEF,MAAM,IAAIroF,MAAM,gCAkBlB,OAfI0nF,EAAen+E,oBAtFnB,SAACk+E,EAA8Bl+E,EAC9B68E,G,YACC,IAAiB,QAAA78E,GAAkB,8BAAE,CAAhC,IAAMq+E,EAAE,QACPc,EAAuB,iBAAPd,EAAkBA,EAAKA,EAAGpoF,KAG9C,OAAQkpF,GACN,IAAK,UACHA,EAAS,UACT,MACF,IAAK,QAEH,GADAA,EAAS,QACS,iBAAPd,EAAiB,CAC1B,IAAMe,EAAef,EACrB,GAAIe,aAAY,EAAZA,EAAcC,WAAY,CAC5B,IAAM9B,GAAgB,IAAAJ,iBAAgB,aAAcN,GAC9CW,GAAkB,IAAAL,iBAAgBiC,EAAaC,WAAYxC,GACjE,GACI,KADA,IAAAF,eAAc2C,0BAA0BpB,EAAsBX,EAAeC,GAE/E,MAAM,IAAI/mF,MAAM,2DAAoD2oF,EAAaC,Y,CAGrF,IAAID,aAAY,EAAZA,EAAcG,mBACVhC,GAAgB,IAAAJ,iBAAgB,kBAAmBN,GACnDW,GAAkB,IAAAL,iBAAgBiC,EAAaG,gBAAiB1C,GAElE,KADA,IAAAF,eAAc2C,0BAA0BpB,EAAsBX,EAAeC,IAE/E,MAAM,IAAI/mF,MACN,gEAAyD2oF,EAAaG,iB,CAIhF,MACF,IAAK,SACHJ,EAAS,KACT,MACF,IAAK,OACL,IAAK,MACH,SACF,QACE,MAAM,IAAI1oF,MAAM,4BAAqB0oF,IAGzC,IAAMK,GAAmB,IAAArC,iBAAgBgC,EAAQtC,GACjD,GAA0F,KAAtF,IAAAF,eAAc8C,4BAA4BvB,EAAsBsB,GAClE,MAAM,IAAI/oF,MAAM,2CAAoC0oF,G,mGAG1D,CAuCEO,CAAsBxB,EAAsBC,EAAen+E,mBAAoB68E,QAGpDrmF,IAAzB2nF,EAAed,QACjB,IAAAjD,qBAAoB+D,EAAed,MAAO,GAAI,IAAIC,SAAoC,SAACh+E,EAAKjI,GAC1F,IAAMkmF,GAAgB,IAAAJ,iBAAgB79E,EAAKu9E,GACrCW,GAAkB,IAAAL,iBAAgB9lF,EAAOwlF,GAE/C,GAA6F,IAAzF5lF,EAAKqoF,0BAA0BpB,EAAsBX,EAAeC,GACtE,MAAM,IAAI/mF,MAAM,4CAAqC6I,EAAG,cAAMjI,GAElE,IAGK,CAAC6mF,EAAsBrB,E,CAC9B,MAAOn8E,GAKP,MAJ6B,IAAzBw9E,GACFjnF,EAAK0oF,0BAA0BzB,GAEjCrB,EAAOlxE,QAAQ1U,EAAK0mF,OACdj9E,C,CAEV,C,8GClKA,aAEa,EAAAy8E,gBAAkB,SAACxkF,EAAckkF,GAC5C,IAAM5lF,GAAO,IAAA0lF,eAEPiD,EAAa3oF,EAAK4oF,gBAAgBlnF,GAAQ,EAC1C6xE,EAAavzE,EAAK6oF,QAAQF,GAIhC,OAHA3oF,EAAK8oF,aAAapnF,EAAM6xE,EAAYoV,GACpC/C,EAAO/lF,KAAK0zE,GAELA,CACT,C,sOCiBa,EAAAlJ,2BAA6B,SAAC5oE,GACzC,OAAQA,GACN,IAAK,OACH,OAAO,EACT,IAAK,QACH,OAAO,EACT,IAAK,OACH,OAAO,EACT,IAAK,QACH,OAAO,EACT,IAAK,SACH,OAAO,EACT,IAAK,QACH,OAAO,EACT,IAAK,SACH,OAAO,GACT,IAAK,UACH,OAAO,GACT,IAAK,UACH,OAAO,EACT,IAAK,UACH,OAAO,GACT,IAAK,SACH,OAAO,EACT,IAAK,QACH,OAAO,EACT,IAAK,SACH,OAAO,GAET,QACE,MAAM,IAAIjC,MAAM,iCAA0BiC,IAEhD,EAKa,EAAAsnF,2BAA6B,SAAC3e,GACzC,OAAQA,GACN,KAAK,EACH,MAAO,OACT,KAAK,EACH,MAAO,QACT,KAAK,EACH,MAAO,OACT,KAAK,EACH,MAAO,QACT,KAAK,EAML,KAAK,GACH,MAAO,SALT,KAAK,EACH,MAAO,QACT,KAAK,GACH,MAAO,SAGT,KAAK,EACH,MAAO,UACT,KAAK,GACH,MAAO,UACT,KAAK,EACH,MAAO,SACT,KAAK,EACH,MAAO,QACT,KAAK,GACH,MAAO,SAET,QACE,MAAM,IAAI5qE,MAAM,iCAA0B4qE,IAEhD,EAMa,EAAA0I,qBAAuB,SAACkW,GACpB,YAACzpF,EAAW,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,OAAGA,EAAW,EAAG,EAAG,EAAG,EAAG,OAAGA,OAAWA,OAAWA,GAAWypF,EAA5F,EAKJ,EAAAC,kCAAoC,SAACxnF,GAG5C,OAAQA,GACN,IAAK,UACH,OAAOf,aACT,IAAK,QAUL,IAAK,OACH,OAAOC,WATT,IAAK,OACH,OAAOC,UACT,IAAK,SACH,OAAOC,YACT,IAAK,QACH,OAAOC,WACT,IAAK,QACH,OAAOC,WAGT,IAAK,UACH,OAAOC,aACT,IAAK,SACH,OAAOC,YACT,IAAK,QACH,OAAOY,cACT,IAAK,SACH,OAAOG,eACT,QACE,MAAM,IAAIxC,MAAM,4BAAqBiC,IAE3C,EAKS,EAAAuyE,qBAAuB,SAAC7zE,GACnC,OAAQA,GACN,IAAK,UACH,OAAO,EACT,IAAK,OACH,OAAO,EACT,IAAK,UACH,OAAO,EACT,IAAK,QACH,OAAO,EACT,IAAK,QACH,OAAO,EACT,QACE,MAAM,IAAIX,MAAM,qCAA8BW,IAEpD,C,+uEC5JA,cAEA,UACA,UACA,UACA,UACA,SAkBa,EAAA6kF,YAAc,SAAMjlF,GAAQ,0C,kDAEvC,UAboB2K,EAaN3K,EAAIC,KAAK0K,WAbiBw+E,GAaJ,IAAAlV,sBAAqBj0E,EAAII,UAbD,mC,iCAE5D,GAAkB,KADZgpF,GAAY,IAAAzD,eAAc0D,SAAS1+E,EAAYw+E,IAEnD,MAAM,IAAI1pF,MAAM,qDAA8C2pF,I,yBAahE,OAHA,SAGA,IAAM,IAAAhqF,OAAS,IAAAumF,eAAe3lF,I,cAA9B,S,IAhBc,IAAM2K,EAAoBw+E,C,QAwB1C,IAAMG,EAAiB,IAAI5oF,IAMd,EAAAwkF,sBAAwB,SAACn8B,GACpC,IAAM9oD,GAAO,IAAA0lF,eACP4D,EAAkBtpF,EAAK6oF,QAAQ//B,EAAMjgD,YAE3C,OADA7I,EAAKszE,OAAOrxE,IAAI6mD,EAAOwgC,GAChB,CAACA,EAAiBxgC,EAAMjgD,WACjC,EAEa,EAAAq8E,sBACT,SAAC2B,EAAkC3jF,G,MAC3BlD,GAAO,IAAA0lF,eAET6D,EAAgB,EAChBtC,EAAuB,EACvBrB,EAAmB,GAEvB,IAIE,GAHCqB,GAAD,KAAiC,IAAAD,mBAAkB9jF,GAAQ,IAAtC,GAAE0iF,EAAM,KAGP,KADtB2D,EAAgBvpF,EAAKwpF,kBAAkB3C,EAAU,GAAIA,EAAU,GAAII,IAEjE,MAAM,IAAIznF,MAAM,yB,SAGlBQ,EAAK0mF,MAAMG,EAAU,IACQ,IAAzBI,GACFjnF,EAAK0oF,0BAA0BzB,GAEjCrB,EAAOlxE,QAAQ1U,EAAK0mF,M,CAUtB,IAPA,IAAM93D,EAAa5uB,EAAKypF,kBAAkBF,GACpCG,EAAc1pF,EAAK2pF,mBAAmBJ,GAEtCthF,EAAa,GACb2hF,EAAwB,GACxBhiF,EAAc,GACdiiF,EAAyB,GACtBpqF,EAAI,EAAGA,EAAImvB,EAAYnvB,IAAK,CACnC,IAAM,EAAOO,EAAK8pF,iBAAiBP,EAAe9pF,GAClD,GAAa,IAAT,EACF,MAAM,IAAID,MAAM,2BAElBoqF,EAAsB/pF,KAAK,GAC3BoI,EAAWpI,KAAKG,EAAK+pF,aAAa,G,CAEpC,IAAStqF,EAAI,EAAGA,EAAIiqF,EAAajqF,IAAK,CACpC,IAAM,EAAOO,EAAKgqF,kBAAkBT,EAAe9pF,GACnD,GAAa,IAAT,EACF,MAAM,IAAID,MAAM,4BAElBqqF,EAAuBhqF,KAAK,GAC5B+H,EAAY/H,KAAKG,EAAK+pF,aAAa,G,CAIrC,OADAV,EAAepnF,IAAIsnF,EAAe,CAACA,EAAeK,EAAuBC,IAClE,CAACN,EAAethF,EAAYL,EACrC,EAOS,EAAAw9E,cACT,SAACt8B,EAAmB5lD,GAClB,IAAM2jF,GAAmC,IAAA5B,uBAAsBn8B,GAC/D,OAAO,IAAAo8B,uBAAsB2B,EAAW3jF,EAC1C,EAES,EAAAmiF,eAAiB,SAACC,GAC7B,IAAMtlF,GAAO,IAAA0lF,eACP17E,EAAUq/E,EAAe/mF,IAAIgjF,GACnC,IAAKt7E,EACH,MAAM,IAAIxK,MAAM,sBAElB,IAAM+pF,EAAgBv/E,EAAQ,GACxB4/E,EAAwB5/E,EAAQ,GAChC6/E,EAAyB7/E,EAAQ,GAEvC4/E,EAAsBl1E,QAAQ1U,EAAKiqF,UACnCJ,EAAuBn1E,QAAQ1U,EAAKiqF,UACpCjqF,EAAKkqF,mBAAmBX,GACxBF,EAAe58E,OAAO64E,EACxB,EAKa,EAAAn9E,IAAM,SACfm9E,EAAmBC,EAAwBzkE,EAA8B6nD,EACzEzlE,GAAoC,0C,mJAGtC,GAFMlD,GAAO,IAAA0lF,iBACP17E,EAAUq/E,EAAe/mF,IAAIgjF,IAEjC,MAAM,IAAI9lF,MAAM,sBAEZ+pF,EAAgBv/E,EAAQ,GACxB4/E,EAAwB5/E,EAAQ,GAChC6/E,EAAyB7/E,EAAQ,GAEjC4kB,EAAa22D,EAAa3lF,OAC1B8pF,EAAc/gB,EAAc/oE,OAE9B+lF,EAAmB,EACnBwE,EAA6B,GAE3BC,EAAwB,GACxBC,EAAwB,G,iBAM5B,I,sBAHA,MAAuC,IAAA5E,eAAcviF,GAAQ,GAA5DyiF,EAAgB,MAAEwE,EAAgB,M,WAG1B1qF,GACP,IAAM2jB,EAAWtC,EAAOrhB,GAAG,GACrBkC,EAAOmf,EAAOrhB,GAAG,GACjBiC,EAAOof,EAAOrhB,GAAG,GAEnB8zE,OAAU,EACV+W,OAAc,EAElB,GAAInoF,MAAMC,QAAQV,GAAO,CAEvB4oF,EAAiB,EAAI5oF,EAAK9B,OAC1B2zE,EAAavzE,EAAK6oF,QAAQyB,GAC1BD,EAAYxqF,KAAK0zE,GAEjB,IADA,IAAI5xB,EAAY4xB,EAAa,EACpB,EAAI,EAAG,EAAI7xE,EAAK9B,OAAQ,IAAK,CACpC,GAAuB,iBAAZ8B,EAAK,GACd,MAAM,IAAIrC,UAAU,+BAAwB,EAAC,qBAE/CW,EAAKwyE,QAAQ7wB,MAAe,IAAAukC,iBAAgBxkF,EAAK,GAAI2oF,E,OAGvDC,EAAiB5oF,EAAKmH,WACtB0qE,EAAavzE,EAAK6oF,QAAQyB,GAC1BD,EAAYxqF,KAAK0zE,GACjBvzE,EAAKszE,OAAOrxE,IAAI,IAAItB,WAAWe,EAAKuB,OAAQvB,EAAKkH,WAAY0hF,GAAiB/W,GAGhF,IAAM7tB,EAAQ1lD,EAAKgzE,YACb3c,EAAar2D,EAAKizE,WAAW,EAAItxE,EAAK/B,QAC5C,IACE,IAAI,EAAWy2D,EAAa,EAC5B10D,EAAK+S,SAAQ,SAAAwB,GAAK,OAAAlW,EAAKuqF,OAAO,KAAcr0E,CAA1B,IAClB,IAAM4L,EAAS9hB,EAAKwqF,kBAChB,IAAAngB,4BAA2BjnD,GAAWmwD,EAAY+W,EAAgBj0B,EAAY10D,EAAK/B,QACvF,GAAe,IAAXkiB,EACF,MAAM,IAAItiB,MAAM,yBAElB4qF,EAAYvqF,KAAKiiB,E,SAEjB9hB,EAAKmzE,aAAaztB,E,GAvCbjmD,EAAI,EAAGA,EAAImvB,EAAYnvB,I,EAAvBA,GA2CHgrF,EAAiBzqF,EAAKgzE,YACtB0X,EAAoB1qF,EAAKizE,WAAwB,EAAbrkD,GACpC+7D,EAAmB3qF,EAAKizE,WAAwB,EAAbrkD,GACnCg8D,EAAqB5qF,EAAKizE,WAAyB,EAAdyW,GACrCmB,EAAoB7qF,EAAKizE,WAAyB,EAAdyW,G,iBAOxC,I,sBAJIoB,EAAmBJ,EAAoB,EACvCK,EAAkBJ,EAAmB,EACrCK,EAAoBJ,EAAqB,EACzCK,EAAmBJ,EAAoB,EAClCprF,EAAI,EAAGA,EAAImvB,EAAYnvB,IAC9BO,EAAKwyE,QAAQsY,KAAsBV,EAAY3qF,GAC/CO,EAAKwyE,QAAQuY,KAAqBnB,EAAsBrE,EAAa9lF,IAEvE,IAASA,EAAI,EAAGA,EAAIiqF,EAAajqF,IAC/BO,EAAKwyE,QAAQwY,KAAuB,EACpChrF,EAAKwyE,QAAQyY,KAAsBpB,EAAuBlhB,EAAclpE,I,OAItE0pF,EAAYnpF,EAAKkrF,QACjB3B,EAAeoB,EAAkBD,EAAmB97D,EAAYi8D,EAAmBnB,EACnFkB,EAAoBjF,IAGlBwF,EAAanrF,EAAKorF,sBACqB,IAApBD,EAAW/jC,KACtB,GAAM+jC,GADhB,M,OACFhC,EAAY,S,iBAKd,GAFMr2E,EAA+B,GAEnB,IAAdq2E,EACF,IAAS1pF,EAAI,EAAGA,EAAIiqF,EAAajqF,IAAK,CAC9BqiB,EAAS9hB,EAAKwyE,QAAQoY,EAAqB,EAAInrF,GAE/C4rF,EAA2BrrF,EAAKgzE,YAEhCsY,EAAmBtrF,EAAKizE,WAAW,IAErCxxE,OAAI,EAAyB8xE,EAAa,EAC9C,IAGE,GAAkB,KAFlB4V,EAAYnpF,EAAKurF,kBACbzpE,EAAQwpE,EAAkBA,EAAmB,EAAGA,EAAmB,EAAGA,EAAmB,KAE3F,MAAM,IAAI9rF,MAAM,wDAAiD2pF,IAQnE,IANIqC,EAAkBF,EAAmB,EACnCloE,EAAWpjB,EAAKwyE,QAAQgZ,KAC9BjY,EAAavzE,EAAKwyE,QAAQgZ,KACpBn1B,EAAar2D,EAAKwyE,QAAQgZ,KAC1B31B,EAAa71D,EAAKwyE,QAAQgZ,KAC1B7pF,EAAO,GACJ,EAAI,EAAG,EAAIk0D,EAAY,IAC9Bl0D,EAAK9B,KAAKG,EAAKwyE,QAAQnc,EAAa,EAAI,IAM1C,GAJAr2D,EAAKiqF,SAAS5zB,GAER5zD,EAAuB,IAAhBd,EAAK/B,OAAe,EAAI+B,EAAKmgC,QAAO,SAACrmB,EAAGxH,GAAM,OAAAwH,EAAIxH,CAAJ,IAE9C,YADbxS,GAAO,IAAAsnF,4BAA2B3lE,IACX,CAGrB,IAFM6yC,EAAuB,GACzBtU,EAAY4xB,EAAa,EACpB,EAAI,EAAG,EAAI9wE,EAAM,IAClBklC,EAAS3nC,EAAKwyE,QAAQ7wB,KACtB8pC,EAAiB,IAAMhpF,EAAO,OAAIlD,EAAYS,EAAKwyE,QAAQ7wB,GAAaha,EAC9EsuB,EAAWp2D,KAAKG,EAAK+pF,aAAapiD,EAAQ8jD,IAE5C34E,EAAOjT,KAAK,CAAC4B,EAAME,EAAMs0D,G,MAEnB5zD,IAAwB,IAAA4mF,mCAAkCxnF,GAC1DC,GAAO,IAAIW,GAAsBI,GACvC,IAAI9B,WAAWe,GAAKuB,OAAQvB,GAAKkH,WAAYlH,GAAKmH,YAC7C5G,IAAIjC,EAAKszE,OAAOxwD,SAASywD,EAAYA,EAAa7xE,GAAKmH,aAC5DiK,EAAOjT,KAAK,CAAC4B,EAAME,EAAMD,I,SAG3B1B,EAAKmzE,aAAakY,GACL,WAAT5pF,GAAqB8xE,GACvBvzE,EAAK0mF,MAAMnT,GAEbvzE,EAAK0rF,kBAAkB5pE,E,EAK7B,GAAkB,IAAdqnE,EACF,MAAO,CAAP,EAAOr2E,GAEP,MAAM,IAAItT,MAAM,gDAAyC2pF,EAAS,M,cAGpEnpF,EAAKmzE,aAAasX,G,qCAGpBL,EAAY11E,QAAQ1U,EAAK0rF,mBACzBrB,EAAY31E,QAAQ1U,EAAK0mF,OAEzB1mF,EAAKymF,sBAAsBd,GAC3BwE,EAAiBz1E,QAAQ1U,EAAK0mF,O,6BAOrB,EAAA58E,aAAe,SAACw7E,GAC3B,IAAMtlF,GAAO,IAAA0lF,eACP17E,EAAUq/E,EAAe/mF,IAAIgjF,GACnC,IAAKt7E,EACH,MAAM,IAAIxK,MAAM,sBAElB,IAAM+pF,EAAgBv/E,EAAQ,GAGxB2hF,EAAkB3rF,EAAK4rF,iBAAiBrC,GAC9C,GAAwB,IAApBoC,EACF,MAAM,IAAInsF,MAAM,kCAElBQ,EAAKiqF,SAAS0B,EAChB,EAEa,EAAAnG,2BAA6B,SAACp2E,G,QACnCy8E,EAA6B,G,IACnC,IAAqB,QAAAz8E,GAAO,8BAAE,CAAzB,IACG1N,EADS,QACK,IACfS,MAAMC,QAAQV,IAASA,EAAKuB,QAC/B4oF,EAAQhsF,KAAK6B,EAAKuB,O,mGAGtB,OAAO4oF,CACT,C,mqEC5UA,IAeI7rF,EAfJ,aAMM8rF,EAC0B,EAAQ,KAElCC,EAC2B,EAAQ,MAMrC1iF,GAAc,EACdq6E,GAAe,EACfp6E,GAAU,EA2DD,EAAAu7E,sBAAwB,SAAMmH,GAA2B,0C,4EACpE,GAAI3iF,EACF,MAAO,CAAP,EAAOxD,QAAQC,WAEjB,GAAI49E,EACF,MAAM,IAAIlkF,MAAM,yDAElB,GAAI8J,EACF,MAAM,IAAI9J,MAAM,sDA+FlB,OA5FAkkF,GAAe,EAGTuI,EAAUD,EAAMzhF,YAChBG,EAAashF,EAAMthF,WACnBF,EAAOwhF,EAAMxhF,KAEb0hF,EAAaxhF,EAAa,GA3EH,WAC7B,IAEE,MAAiC,oBAAtB/B,oBAMmB,oBAAnBwjF,iBACT,IAAIA,gBAAiBC,MAAMxH,YAAY,IAAIj8E,kBAAkB,IAKxD0jF,YAAYC,SAAS,IAAI3rF,WAAW,CACzC,EAAG,GAAI,IAAK,IAAK,EAAG,EAAI,EAAI,EAAG,EAAG,EAAG,EAAI,GAAI,EAAK,EAAI,EAAG,EAAG,EAAI,EAAG,EACnE,EAAG,EAAI,EAAK,EAAK,EAAG,GAAI,GAAI,EAAG,EAAG,EAAG,GAAI,EAAI,IAAK,GAAI,EAAG,EAAG,GAAI,M,CAElE,MAAO8I,GACP,OAAO,C,CAEX,CAqDuC8iF,GAC/BC,EAAUhiF,GApDM,WACtB,IAeE,OAAO6hF,YAAYC,SAAS,IAAI3rF,WAAW,CACzC,EAAK,GAAI,IAAK,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,EAAK,GAAK,EAAG,GAAI,EACvF,IAAK,GAAI,IAAK,GAAK,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAI,EAAI,IAAK,IAAK,EAAG,GAAI,K,CAEzF,MAAO8I,GACP,OAAO,C,CAEX,CA6B0BgjF,GAElBnI,EAAY0H,EAAM1H,UAClBoI,EAA0C,iBAAdpI,EAAyBA,OAAY/kF,EACjEotF,EA/BgB,SAACH,EAAkBN,GACzC,OAAIA,EACKM,EAAU,8BAAgC,yBAE1CA,EAAU,qBAAuB,eAE5C,CAyBuBI,CAAgBJ,EAASN,GACxCW,EAAwC,iBAAdvI,EAAyBA,EAAUqI,QAAgBptF,EAE/EutF,GAAY,EAEVC,EAA8B,GAGhCd,EAAU,GACZc,EAAMltF,KAAK,IAAIgG,SAAQ,SAACC,GACtB+tC,YAAW,WACTi5C,GAAY,EACZhnF,GACF,GAAGmmF,EACL,KAIFc,EAAMltF,KAAK,IAAIgG,SAAQ,SAACC,EAASC,GAC/B,IAAMxH,EAAU2tF,EAAaH,EAAyBD,EAChD55C,EAAiC,CACrC86C,WAAY,SAACC,EAAkBC,GAC7B,OAAuChB,GAAce,EAAS3jC,SAAS,eACnD,oBAAT6jC,KACFC,IAAIC,gBAAgB,IAAIF,KAC3B,CAGE,EAAQ,OAEV,CAAC1rF,KAAM,qBAGTwrF,EAAS3jC,SAAS,SAChBujC,IAIWH,QAAAA,EAAsBQ,GAUrBP,EAGXO,EAAkBD,CAC3B,GAGF,GAAuCf,EACrC,GAAoB,oBAATiB,KACTj7C,EAAOo7C,oBAAsB1G,EAAKj9E,K,IAAgB,4BAC7C,CACL,IAAM4jF,EAAmB,gEAAyDhvF,EAAQu6C,WAAU,SACpG5G,EAAOo7C,oBAAsB,IAAIH,KAAK,CAACI,GAAmB,CAAC9rF,KAAM,mB,CAIrElD,EAAQ2zC,GAAQkV,MAEZ,SAAA3oD,GACEilF,GAAe,EACfr6E,GAAc,EACdrJ,EAAOvB,EACPqH,GACF,IAEA,SAAC0nF,GACC9J,GAAe,EACfp6E,GAAU,EACVvD,EAAOynF,EACT,GACN,KAEA,GAAM3nF,QAAQ4nF,KAAKV,I,OAEnB,GAFA,SAEID,EACF,MAAM,IAAIttF,MAAM,kEAA2DysF,EAAO,O,kBAIzE,EAAAvG,YAAc,WACzB,GAAIr8E,GAAerJ,EACjB,OAAOA,EAGT,MAAM,IAAIR,MAAM,sCAClB,EAEa,EAAAyQ,QAAU,W,OACjB5G,GAAgBq6E,GAAiBp6E,IACnCo6E,GAAe,EAEwB,QAAtC,EAAA1jF,EAA+B0tF,eAAO,SAAEC,sBACzC3tF,OAAOT,EAEPmkF,GAAe,EACfr6E,GAAc,EACdC,GAAU,EAEd,C,2FC/Me,SAASskF,IACtB,OAAO,IAAO,g/7LAAmnjM,cAAUruF,OAAWA,EACxpjM,C,gCCAAd,EAAOD,QAAU,SAAUgmD,EAASqpC,EAAmBC,EAAeC,GACpE,IAAIC,EAAcpvF,MAAQqvF,OAE1B,IACE,IACE,IAAIC,EAEJ,IAEEA,EAAO,IAAIF,EAAYb,KAAK,CAAC3oC,GAC/B,CAAE,MAAO/6C,IAGPykF,EAAO,IADWF,EAAYG,aAAeH,EAAYI,mBAAqBJ,EAAYK,gBAAkBL,EAAYM,gBAEnHC,OAAO/pC,GACZ0pC,EAAOA,EAAKM,SACd,CAEA,IAAIpB,EAAMY,EAAYZ,KAAOY,EAAYS,UACrCC,EAAYtB,EAAIC,gBAAgBa,GAChCS,EAAS,IAAIX,EAAYH,GAAmBa,EAAWZ,GAE3D,OADAV,EAAIwB,gBAAgBF,GACbC,CACT,CAAE,MAAOllF,GACP,OAAO,IAAIukF,EAAYH,GAAmB,+BAA+BpnE,OAAOooE,mBAAmBrqC,IAAWspC,EAChH,CACF,CAAE,MAAOrkF,GACP,IAAKskF,EACH,MAAMvuF,MAAM,kCAGd,OAAO,IAAIwuF,EAAYH,GAAmBE,EAAKD,EACjD,CACF,C,2BCtCIgB,WAAWrlF,GAAsIqlF,YAAnIA,WAAW,oBAAoB1pF,UAAUA,SAASi/E,cAAcj/E,SAASi/E,cAAcj+E,SAAI,I,YAA2E,SAASqD,EAAE,CAAC,GAAG,SAAS8tC,IAAI,OAAOpZ,EAAEl7B,QAAQ04B,EAAE14B,QAAQ8rF,IAAIpzD,CAAC,CAAC,SAAS5sB,IAAI,OAAOovB,EAAEl7B,QAAQ04B,EAAE14B,QAAQ8rF,IAAIC,CAAC,CAAC,SAASz3D,IAAI,OAAO4G,EAAEl7B,QAAQ04B,EAAE14B,QAAQ8rF,IAAInsD,CAAC,CAAC,SAASnnB,IAAI,OAAO0iB,EAAEl7B,QAAQ04B,EAAE14B,QAAQ8rF,IAAIE,CAAC,CAAC,SAASl/E,IAAI,OAAOouB,EAAEl7B,QAAQ04B,EAAE14B,QAAQ8rF,IAAIG,CAAC,CAAC,IAAIzvF,EAAE0vF,EAAErgF,EAAErP,IAAIA,OAAE,IAASgK,EAAEA,EAAE,CAAC,GAAGhK,EAAE2vF,MAAM,IAAIvpF,SAAQ,CAAE4D,EAAE8tC,KAAK43C,EAAE1lF,EAAEqF,EAAEyoC,CAAE,IAAG,IAAI1oC,EAAE6M,EAAE2zE,EAAE5oD,EAAEpmC,OAAOmL,OAAO,CAAC,EAAE/L,GAAG6gF,EAAE,iBAAiBpqE,EAAE,CAACzM,EAAE8tC,KAAK,MAAMA,GAAG+3C,EAAE,iBAAiBrB,OAAOj/E,EAAE,mBAAmBugF,cAAc9jB,EAAE,iBAAiB+jB,SAAS,iBAAiBA,QAAQC,UAAU,iBAAiBD,QAAQC,SAASt1E,KAAKlG,EAAExU,EAAEiwF,yBAAwB,EAAG1nF,EAAE,GAAG,SAAS4xB,EAAEnwB,GAAG,OAAOhK,EAAEutF,WAAWvtF,EAAEutF,WAAWvjF,EAAEzB,GAAGA,EAAEyB,CAAC,CAAC,GAAGgiE,EAAE,CAAC,IAAIjlC,EAAE,EAAQ,MAAMmpD,EAAE,EAAQ,KAAQ,IAAIlmF,EAAEzB,EAAEgH,EAAE2gF,EAAEC,QAAQ5nF,GAAG,IAAI6nF,KAAchhF,EAAE,CAACpF,EAAE8tC,KAAK9tC,EAAEA,EAAEqmF,WAAW,WAAW,IAAI1C,IAAI3jF,GAAGkmF,EAAEI,UAAUtmF,GAAG+8B,EAAEwpD,aAAavmF,EAAE8tC,OAAE,EAAO,SAAS83C,EAAE5lF,KAAKA,EAAEoF,EAAEpF,GAAE,IAAKxG,SAASwG,EAAE,IAAI9I,WAAW8I,IAAIA,GAAGiS,EAAE,CAACjS,EAAE8tC,EAAExoC,EAAEwoB,GAAE,KAAM9tB,EAAEA,EAAEqmF,WAAW,WAAW,IAAI1C,IAAI3jF,GAAGkmF,EAAEI,UAAUtmF,GAAG+8B,EAAE87B,SAAS74D,EAAE8tB,OAAE,EAAO,QAAO,CAAE9tB,EAAEgS,KAAKhS,EAAEsF,EAAEtF,GAAG8tC,EAAEhgB,EAAE9b,EAAExY,OAAOwY,EAAG,GAAC,GAAIhc,EAAEwwF,aAAa,EAAET,QAAQU,KAAKtwF,SAAS0gF,EAAEkP,QAAQU,KAAK,GAAG1zE,QAAQ,MAAM,MAAMgzE,QAAQU,KAAKv4E,MAAM,GAAGzB,EAAE,CAACzM,EAAE8tC,KAAK,MAAMi4C,QAAQW,SAAS1mF,EAAE8tC,GAAG93C,EAAE2wF,QAAQ,IAAI,6BAA6B,IAAI3mF,EAAE,EAAQ,KAAiB,CAAC,MAAMA,GAAG,MAAMi7C,QAAQtY,MAAM,2GAA2G3iC,CAAC,CAAC,EAAAuF,EAAOqhF,OAAO5mF,EAAE4mF,MAAM,MAAMf,GAAGtgF,KAAKA,EAAEhH,EAAEpJ,KAAK4vC,SAAS8hD,KAAK,oBAAoBlrF,UAAUA,SAASi/E,gBAAgBr8E,EAAE5C,SAASi/E,cAAcj+E,KAAK0oF,aAAa9mF,EAAE8mF,YAAY9mF,EAAE,IAAIA,EAAEtI,QAAQ,SAASsI,EAAEu8E,OAAO,EAAEv8E,EAAEwU,QAAQ,SAAS,IAAIgoE,YAAY,KAAK,GAAG,GAAG/Y,IAAI58D,EAAEpF,IAAI,IAAI8tC,EAAE,IAAIg5C,eAAe,OAAOh5C,EAAEi5C,KAAK,MAAM/mF,GAAE,GAAI8tC,EAAEk5C,KAAK,MAAMl5C,EAAEm5C,cAAc1hF,IAAIqgF,EAAE5lF,IAAI,IAAI8tC,EAAE,IAAIg5C,eAAe,OAAOh5C,EAAEi5C,KAAK,MAAM/mF,GAAE,GAAI8tC,EAAEo5C,aAAa,cAAcp5C,EAAEk5C,KAAK,MAAM,IAAI9vF,WAAW42C,EAAEq5C,SAAQ,GAAIl1E,EAAE,CAACjS,EAAE8tC,EAAExoC,KAAK,IAAIwoB,EAAE,IAAIg5D,eAAeh5D,EAAEi5D,KAAK,MAAM/mF,GAAE,GAAI8tB,EAAEo5D,aAAa,cAAcp5D,EAAElxB,OAAO,KAAK,KAAKkxB,EAAE0lB,QAAQ,GAAG1lB,EAAE0lB,QAAQ1lB,EAAEq5D,SAASr5C,EAAEhgB,EAAEq5D,UAAU7hF,GAAE,EAAGwoB,EAAEs5D,QAAQ9hF,EAAEwoB,EAAEk5D,KAAK,KAAI,IAAKhlB,GAAG,oBAAoB5jB,cAAc,EAAA74C,EAAO64C,YAAY,qBAAmC,IAAIipC,EAAEpsC,QAAQ97B,IAAI48B,KAAKd,SAASslB,EAAEtlB,QAAQqsC,KAAKvrC,KAAKd,SAAS+mB,IAAIqlB,EAAE,IAAIrnF,IAAI+8B,EAAEwqD,UAAU,EAAEvnF,EAAEE,KAAK,KAAK,MAAMqgE,EAAE,IAAIvgE,IAAI+8B,EAAEwqD,UAAU,EAAEvnF,EAAEE,KAAK,KAAK,OAAO,IAAIsnF,EAAElqF,EAAEtH,EAAEyxF,OAAOJ,EAAElqF,EAAEnH,EAAE0xF,UAAUnnB,EAAE3pE,OAAOmL,OAAO/L,EAAEgnC,GAAGA,EAAE,KAAKhnC,EAAEwwF,cAAc3P,EAAE7gF,EAAEwwF,aAAaxwF,EAAE2xF,OAAOl7E,EAAEzW,EAAE2xF,MAAM3xF,EAAE4xF,aAAaJ,EAAExxF,EAAE4xF,YAAY,IAAIC,EAAE7xF,EAAE8xF,gBAAe,EAAG,iBAAiBlF,aAAamF,EAAE,mCAAmC,IAAIrzD,EAAEszD,EAAEzhE,EAAE2L,EAAEqzD,EAAEpsD,EAAEqsD,EAAEC,EAAEwC,GAAE,EAAG,SAAS3C,IAAI,IAAItlF,EAAE00B,EAAEl7B,OAAOxD,EAAE0yE,MAAMx2C,EAAE,IAAI/6B,UAAU6I,GAAGhK,EAAEkyF,OAAO,IAAI7wF,WAAW2I,GAAGhK,EAAE8qF,OAAO3nD,EAAE,IAAI7hC,WAAW0I,GAAGhK,EAAE6zE,OAAO0b,EAAE,IAAIruF,WAAW8I,GAAGhK,EAAEmyF,QAAQ,IAAI/wF,YAAY4I,GAAGhK,EAAE+yE,QAAQyc,EAAE,IAAIhuF,YAAYwI,GAAGhK,EAAEoyF,QAAQ,IAAInxF,aAAa+I,GAAGhK,EAAEqyF,QAAQ5C,EAAE,IAAIluF,aAAayI,EAAE,CAAC,IAAIsoF,EAAEtyF,EAAEuyF,gBAAgB,SAAS,GAAG,SAASD,GAAGP,EAAE,wDAAwDO,EAAE,0BAA0B99E,EAAEkqB,EAAE1+B,EAAEwyF,gBAAgB,GAAGxyF,EAAEwyF,WAAW9zD,EAAE1+B,EAAEwyF,gBAAgB,MAAM9zD,EAAE,IAAIkuD,YAAY6F,OAAO,CAACC,QAAQJ,EAAE,MAAMK,QAAQ,MAAMC,QAAO,KAAMpvF,kBAAkB0F,mBAAmB,MAAM/B,EAAE,+NAA+N6kE,GAAG7kE,EAAE,6GAA6GpH,MAAM,cAAcuvF,IAAIgD,EAAE5zD,EAAEl7B,OAAO4F,WAAW,IAAIypF,EAAEpoB,EAAE,GAAGvjE,EAAE,GAAGE,EAAE,GAAGC,EAAE,EAAE,SAASwyE,IAAI,OAAOgY,GAAG,EAAExqF,CAAC,CAAC,SAASyrF,IAAI,IAAI9oF,EAAEhK,EAAE+yF,OAAOziE,QAAQm6C,EAAEZ,QAAQ7/D,EAAE,CAAC,IAAIgpF,EAAExoB,EAAE,EAAEyoB,EAAE,KAAKjmE,EAAE,KAAK,SAAS+kE,EAAE/nF,GAAG,MAAMhK,EAAEkzF,SAASlzF,EAAEkzF,QAAQlpF,GAAG7C,EAAE6C,EAAE,WAAWA,EAAE,KAAKioF,GAAE,EAAG1hE,EAAE,EAAEvmB,EAAE,IAAI4iF,YAAYuG,aAAanpF,EAAE,4CAA4CqF,EAAErF,GAAGA,CAAC,CAAC,SAASopF,EAAEppF,GAAG,OAAOA,EAAEqmF,WAAW,wCAAwC,CAAC,SAASgD,GAAErpF,GAAG,IAAI,GAAGA,GAAGgpF,GAAGxB,EAAE,OAAO,IAAItwF,WAAWswF,GAAG,GAAG5B,EAAE,OAAOA,EAAE5lF,GAAG,KAAK,iDAAiD,CAAC,MAAMA,GAAG+nF,EAAE/nF,EAAE,CAAC,CAAC,SAASspF,GAAGtpF,EAAE8tC,EAAExoC,GAAG,OAAO,SAAStF,GAAG,IAAIwnF,IAAI3B,GAAGtgF,GAAG,CAAC,GAAG,mBAAmBozD,QAAQ34D,EAAEqmF,WAAW,WAAW,OAAO1tB,MAAM34D,EAAE,CAACupF,YAAY,gBAAgB5rC,MAAM7P,IAAI,IAAIA,EAAE07C,GAAG,KAAK,uCAAuCxpF,EAAE,IAAI,OAAO8tC,EAAEgrB,aAAc,IAAG2wB,OAAM,IAAKJ,GAAErpF,KAAK,GAAGiS,EAAE,OAAO,IAAI7V,SAAQ,CAAE0xC,EAAExoC,KAAK2M,EAAEjS,GAAGA,GAAG8tC,EAAE,IAAI52C,WAAW8I,KAAKsF,EAAG,GAAE,CAAC,OAAOlJ,QAAQC,UAAUshD,MAAK,IAAK0rC,GAAErpF,IAAI,CAA5V,CAA8VA,GAAG29C,MAAM39C,GAAG4iF,YAAY8G,YAAY1pF,EAAE8tC,KAAK6P,MAAM39C,GAAGA,IAAI29C,KAAKr4C,GAAGtF,IAAI7C,EAAE,0CAA0C6C,GAAG+nF,EAAE/nF,EAAG,GAAE,CAAC,SAAS2pF,GAAG3pF,GAAG1G,KAAK/D,KAAK,aAAa+D,KAAKksE,QAAQ,gCAAgCxlE,EAAE,IAAI1G,KAAKk6C,OAAOxzC,CAAC,CAAC,SAAS4pF,GAAG5pF,GAAGA,EAAEg7E,YAAYh7E,EAAEi7E,UAAU,MAAM,CAAC,SAAS4O,GAAG7pF,IAAIA,EAAE8pF,GAAGC,GAAG/pF,KAAK+nF,IAAI+B,GAAGE,GAAGhqF,EAAE,CAAC,SAASiqF,GAAGjqF,GAAG,IAAI8tC,EAAEg8C,GAAGppC,KAAK,IAAI5S,EAAE,OAAO,EAAEg8C,GAAGI,GAAG9zF,KAAK03C,GAAGg8C,GAAGC,GAAG/pF,EAAEmqF,IAAIr8C,EAAEA,EAAEq8C,GAAGnqF,EAAEmqF,GAAG,IAAI7kF,EAAE,CAAC8kF,IAAI,MAAMC,cAAcrqF,EAAEsqF,GAAG5xB,IAAI14D,EAAEuqF,GAAGC,YAAYxqF,EAAEmqF,IAAI,OAAOnoB,GAAGl0B,EAAE28C,QAAQ38C,EAAEqtC,YAAY71E,EAAEtF,EAAE0qF,IAAI,CAAC,CAACtB,EAAEJ,EAAE,4BAA4BA,EAAE74D,EAAE64D,IAAI,IAAI2B,GAAG,oBAAoB/mB,YAAY,IAAIA,YAAY,aAAQ,EAAO,SAASgnB,GAAG5qF,EAAE8tC,EAAExoC,GAAG,IAAIwoB,GAAGggB,KAAK,GAAGxoC,EAAE,IAAIA,EAAEwoC,EAAE9tC,EAAEsF,MAAMA,GAAGwoB,MAAMxoB,EAAE,GAAG,GAAGA,EAAEwoC,GAAG9tC,EAAExG,QAAQmxF,GAAG,OAAOA,GAAGj5E,OAAO1R,EAAExG,kBAAkB0F,kBAAkBc,EAAEkO,MAAM4/B,EAAExoC,GAAGtF,EAAEqZ,SAASy0B,EAAExoC,IAAI,IAAIwoB,EAAE,GAAGggB,EAAExoC,GAAG,CAAC,IAAI0M,EAAEhS,EAAE8tC,KAAK,GAAG,IAAI97B,EAAE,CAAC,IAAI1L,EAAE,GAAGtG,EAAE8tC,KAAK,GAAG,MAAM,IAAI97B,GAAG8b,GAAG+8D,OAAOC,cAAc,GAAG94E,IAAI,EAAE1L,OAAO,CAAC,IAAItQ,EAAE,GAAGgK,EAAE8tC,KAAK,OAAO97B,EAAE,MAAM,IAAIA,IAAI,GAAGA,IAAI,GAAG1L,GAAG,EAAEtQ,GAAG,EAAEgc,IAAI,GAAG1L,GAAG,GAAGtQ,GAAG,EAAE,GAAGgK,EAAE8tC,MAAMhgB,GAAG+8D,OAAOC,aAAa94E,IAAIA,GAAG,MAAM8b,GAAG+8D,OAAOC,aAAa,MAAM94E,GAAG,GAAG,MAAM,KAAKA,GAAG,CAAC,MAAM8b,GAAG+8D,OAAOC,aAAa94E,EAAE,CAAC,OAAO8b,CAAC,CAAC,SAASi9D,GAAG/qF,EAAE8tC,GAAG,OAAO9tC,KAAK,GAAG4qF,GAAGtlF,IAAItF,EAAE8tC,GAAG,EAAE,CAAC,SAASk9C,GAAGhrF,GAAG,GAAGwK,EAAE,OAAOygF,GAAG,EAAE,EAAEjrF,GAAGumB,EAAEvmB,EAAE6vE,MAAMia,GAAGoB,KAAKl1F,EAAEm1F,QAAQn1F,EAAEm1F,OAAOnrF,GAAGioF,GAAE,GAAIx7E,EAAEzM,EAAE,IAAI2pF,GAAG3pF,GAAG,CAAC,SAASorF,GAAGprF,GAAG,GAAGumB,EAAEvmB,EAAEwK,EAAE,MAAM6gF,GAAGrrF,GAAG,SAASgrF,GAAGhrF,EAAE,CAAC,SAASsrF,GAAGtrF,GAAGA,aAAa2pF,IAAI,UAAU3pF,GAAGyM,EAAE,EAAEzM,EAAE,CAAC,IAAI8pF,GAAG,CAACyB,GAAG,GAAGrB,GAAG,GAAGsB,GAAG,GAAGzB,GAAG,CAAC,EAAE0B,GAAG,WAAWjhF,GAAGs/E,GAAG4B,IAAI,EAAEC,GAAG,WAAW,EAAED,GAAG,WAAW5B,GAAG8B,sBAAsB9B,GAAG+B,GAAG/B,GAAGgC,cAAchC,GAAGiC,GAAGjC,GAAGkC,cAAclC,GAAGmC,GAAGpE,GAAE,CAAE,EAAEoE,GAAG,SAASjsF,GAAGumB,EAAEvmB,CAAC,EAAEksF,GAAG,CAAC,oBAAoBhB,GAAG,WAAW,IAAI,IAAIlrF,KAAK8pF,GAAGI,GAAGN,GAAG5pF,GAAG,IAAIA,KAAK8pF,GAAGyB,GAAG3B,GAAG5pF,GAAG8pF,GAAGyB,GAAG,GAAGzB,GAAGI,GAAG,GAAGJ,GAAGC,GAAG,EAAE,EAAEC,GAAG,SAAShqF,GAAG,IAAI8tC,EAAE9tC,EAAEmqF,UAAUL,GAAGC,GAAGj8C,GAAGg8C,GAAGyB,GAAGn1F,KAAK4J,GAAG8pF,GAAGI,GAAGh0F,OAAO4zF,GAAGI,GAAGj0F,QAAQ+J,GAAG,GAAGA,EAAEmqF,GAAG,EAAEgC,GAAGr+C,EAAE,EAAE+9C,GAAG,WAAW,EAAEE,GAAG,WAAWjC,GAAG0B,GAAGvgF,SAASjL,GAAGA,KAAK,EAAEwwC,GAAGxwC,GAAG,IAAI5D,SAAS0xC,IAAI9tC,EAAEi7E,UAAU31E,IAAI,IAAIwoB,GAAGxoB,EAAEA,EAAErN,MAAMmyF,IAAI,GAAGpqF,EAAEmqF,KAAKL,GAAGsC,GAAGpsF,EAAEmqF,IAAI7kF,EAAE+mF,cAAc/mF,EAAE+mF,cAAcC,KAAK,CAAC,IAAIt6E,EAAE83E,GAAGC,GAAGzkF,EAAEinF,IAAIv6E,EAAEA,EAAEmpE,YAAY71E,EAAEA,EAAEknF,cAAcrvF,EAAE,0CAA0C2wB,EAAE,uBAAuBxoB,EAAE+mF,aAAa,sCAAsC,KAAK,iBAAiBv+D,EAAE2+D,KAAK,gBAAgB3+D,EAAEm8D,GAAG3kF,GAAG,kBAAkBwoB,EAAE+7D,GAAGvkF,EAAEonF,QAAQ,eAAe5+D,GAAGxoB,EAAEA,EAAEonF,OAAO5+D,EAAEg8D,GAAGC,GAAGzkF,UAAUwkF,GAAGC,GAAGzkF,GAAGskF,GAAG97D,GAAGq+D,GAAG7mF,GAAGwkF,GAAGI,GAAGh0F,OAAO4zF,GAAGI,GAAGj0F,QAAQ63B,GAAG,GAAGA,EAAEq8D,GAAG,GAAG,iBAAiBr8D,EAAEg8D,GAAGC,GAAGzkF,EAAEonF,QAAQvR,YAAY,CAACiP,IAAI,WAAW,WAAWt8D,GAAG9tB,EAAE2sF,QAAO,EAAG7+C,EAAE9tC,IAAI,UAAU8tB,EAAExwB,EAAE,UAAUgI,EAAEsnF,SAAS,KAAKtnF,EAAEunF,MAAM,aAAa/+D,EAAE3wB,EAAE,UAAUmI,EAAEsnF,SAAS,KAAKtnF,EAAEunF,MAAM,UAAU/+D,EAAEg/D,MAAM,UAAUxnF,EAAEsnF,SAAS,KAAKtnF,EAAEunF,MAAM,iBAAiBvnF,EAAEw6D,OAAO9/D,EAAEm7E,YAAY71E,GAAG,gBAAgBwoB,EAAE93B,EAAEsP,EAAExH,YAAYwH,EAAEklE,MAAM18C,GAAG3wB,EAAE,kCAAkC2wB,GAAGg8D,GAAGsC,QAAG,CAAK,EAAGpsF,EAAEonF,QAAQpnF,IAAI,MAAM7C,EAAE,yBAAyB6C,EAAE+sF,SAAS,IAAI/sF,EAAEgtF,OAAO,KAAKhtF,EAAEwlE,SAASxlE,GAAGgiE,IAAIhiE,EAAEitF,GAAG,WAAU,SAAUn/C,GAAG9tC,EAAEi7E,UAAU,CAAChjF,KAAK61C,GAAI,IAAG9tC,EAAEitF,GAAG,SAAQ,SAAUn/C,GAAG9tC,EAAEonF,QAAQt5C,EAAG,KAAI,IAAIxoC,EAAEwoB,EAAE,GAAG,IAAIxoB,IAAI,CAAC,SAAS,UAAU,QAAQ,YAAYtP,EAAE6I,eAAeyG,IAAIwoB,EAAE13B,KAAKkP,GAAGtF,EAAEm7E,YAAY,CAACiP,IAAI,OAAO8C,SAASp/D,EAAEq/D,UAAUn3F,EAAE6tF,qBAAqBwB,WAAWmD,WAAW9zD,EAAE04D,WAAWpF,GAAI,IAAGqF,GAAG,SAASrtF,GAAGA,GAAG,EAAEstF,GAAG,WAAW,IAAIttF,EAAEmwB,EAAE,+BAA+BnwB,EAAE,IAAI4mF,OAAO5mF,GAAG8pF,GAAGyB,GAAGn1F,KAAK4J,EAAE,EAAE0gD,GAAG,WAAW,OAAO,GAAGopC,GAAGyB,GAAGp1F,SAAS2zF,GAAGwD,KAAKxD,GAAGt5C,GAAGs5C,GAAGyB,GAAG,KAAKzB,GAAGyB,GAAGriD,KAAK,GAAG,SAASqkD,GAAGvtF,GAAG,KAAK,EAAEA,EAAE7J,QAAQ6J,EAAEsmB,OAAFtmB,CAAUhK,EAAE,CAAC,SAASq1F,GAAGrrF,GAAG,GAAGwK,EAAE,OAAOygF,GAAG,EAAE,EAAEjrF,GAAGorF,GAAGprF,EAAE,CAAChK,EAAEiuF,QAAQ6F,GAAG9zF,EAAEw3F,oBAAoB,WAAW,IAAIxtF,EAAEssF,KAAKx+C,EAAEhgB,IAAI9tB,EAAE,IAAI,IAAI,GAAGytF,GAAG3/C,EAAEA,GAAG9tC,EAAE8tB,IAAI9tB,EAAE,IAAI,IAAI,KAAK0tF,GAAG5/C,EAAE,EAAE,IAAI6/C,GAAG,GAAG,SAASC,GAAG5tF,GAAG1G,KAAKu0F,GAAG7tF,EAAE,GAAG1G,KAAKw0F,GAAG,SAAS9tF,GAAGgS,IAAI1Y,KAAKu0F,GAAG,GAAG,IAAI,GAAG7tF,CAAC,EAAE1G,KAAKy0F,GAAG,SAAS/tF,GAAGgS,IAAI1Y,KAAKu0F,GAAG,GAAG,IAAI,GAAG7tF,CAAC,EAAE1G,KAAKmyF,GAAG,SAASzrF,EAAE8tC,GAAGx0C,KAAK00F,KAAK10F,KAAKw0F,GAAG9tF,GAAG1G,KAAKy0F,GAAGjgD,EAAE,EAAEx0C,KAAK00F,GAAG,WAAWh8E,IAAI1Y,KAAKu0F,GAAG,IAAI,IAAI,GAAG,CAAC,CAAC,CAAC,SAASI,GAAGjuF,EAAE8tC,EAAExoC,EAAEwoB,GAAG,OAAOtjB,EAAEygF,GAAG,EAAE,EAAEjrF,EAAE8tC,EAAExoC,EAAEwoB,GAAGogE,GAAGluF,EAAE8tC,EAAExoC,EAAEwoB,EAAE,CAAC,SAASogE,GAAGluF,EAAE8tC,EAAExoC,EAAEwoB,GAAG,GAAG,oBAAoB5uB,kBAAkB,OAAO/B,EAAE,uFAAuF,EAAE,IAAI6U,EAAE,GAAG,OAAOxH,GAAG,IAAIwH,EAAE7b,OAAO83F,GAAGjuF,EAAE8tC,EAAExoC,EAAEwoB,IAAI9tB,EAAE,CAACsqF,GAAGhlF,EAAE6kF,GAAGnqF,EAAEuqF,GAAGz8D,EAAE48D,GAAG14E,GAAGxH,GAAGxK,EAAEmuF,GAAG,cAAchT,YAAYn7E,EAAEgS,GAAG,GAAGi4E,GAAGjqF,GAAG,CAAC,SAASouF,GAAGpuF,EAAE8tC,EAAExoC,GAAG,OAAOkF,EAAEygF,GAAG,EAAE,EAAEjrF,EAAE8tC,EAAExoC,GAAG,CAAC,CAAC,SAAS+oF,GAAGruF,EAAE8tC,GAAG,GAAGtjC,EAAE,OAAOygF,GAAG,EAAE,EAAEjrF,EAAE8tC,EAAE,CAAC,SAASwgD,GAAGtuF,GAAG,IAAI,IAAI8tC,EAAE,EAAExoC,EAAE,EAAEA,EAAEtF,EAAE7J,SAASmP,EAAE,CAAC,IAAIwoB,EAAE9tB,EAAEuuF,WAAWjpF,GAAG,KAAKwoB,EAAEggB,IAAI,MAAMhgB,EAAEggB,GAAG,EAAE,OAAOhgB,GAAG,OAAOA,GAAGggB,GAAG,IAAIxoC,GAAGwoC,GAAG,CAAC,CAAC,OAAOA,CAAC,CAAC,SAAS0gD,GAAGxuF,EAAE8tC,EAAExoC,EAAEwoB,GAAG,KAAK,EAAEA,GAAG,OAAO,EAAE,IAAI9b,EAAE1M,KAAK,EAAEwoB,EAAExoB,EAAEwoB,EAAE,EAAE,IAAI,IAAIxnB,EAAE,EAAEA,EAAEtG,EAAE7J,SAASmQ,EAAE,CAAC,IAAItQ,EAAEgK,EAAEuuF,WAAWjoF,GAAG,GAAG,OAAOtQ,GAAG,OAAOA,IAAIA,EAAE,QAAQ,KAAKA,IAAI,IAAI,KAAKgK,EAAEuuF,aAAajoF,IAAI,KAAKtQ,EAAE,CAAC,GAAGsP,GAAGwoB,EAAE,MAAMggB,EAAExoC,MAAM,GAAGtP,CAAC,KAAK,CAAC,GAAG,MAAMA,EAAE,CAAC,GAAGsP,EAAE,GAAGwoB,EAAE,MAAMggB,EAAExoC,MAAM,GAAG,IAAItP,GAAG,CAAC,KAAK,CAAC,GAAG,OAAOA,EAAE,CAAC,GAAGsP,EAAE,GAAGwoB,EAAE,MAAMggB,EAAExoC,MAAM,GAAG,IAAItP,GAAG,EAAE,KAAK,CAAC,GAAGsP,EAAE,GAAGwoB,EAAE,MAAMggB,EAAExoC,MAAM,GAAG,IAAItP,GAAG,GAAG83C,EAAExoC,MAAM,GAAG,IAAItP,GAAG,GAAG,EAAE,CAAC83C,EAAExoC,MAAM,GAAG,IAAItP,GAAG,EAAE,EAAE,CAAC83C,EAAExoC,MAAM,GAAG,IAAI,GAAGtP,CAAC,CAAC,CAAC,OAAO83C,EAAExoC,IAAI,GAAG,EAAEA,EAAE0M,CAAC,CAAC,SAASy8E,GAAGzuF,EAAE8tC,EAAEhgB,GAAG,OAAO0gE,GAAGxuF,EAAEsF,IAAIwoC,EAAEhgB,EAAE,CAAC,SAAS4gE,GAAG1uF,EAAE8tC,GAAG,GAAGtjC,EAAE,OAAOygF,GAAG,EAAE,EAAEjrF,EAAE8tC,EAAE,CAAC,SAAS6gD,GAAG3uF,EAAE8tC,EAAExoC,GAAG,GAAGkF,EAAE,OAAOygF,GAAG,EAAE,EAAEjrF,EAAE8tC,EAAExoC,EAAE,CAAC,SAASspF,GAAG5uF,EAAE8tC,EAAExoC,GAAG,OAAOkF,EAAEygF,GAAG,EAAE,EAAEjrF,EAAE8tC,EAAExoC,GAAG,CAAC,CAAC,SAASupF,GAAG7uF,EAAE8tC,GAAG,GAAGtjC,EAAE,OAAOygF,GAAG,EAAE,EAAEjrF,EAAE8tC,EAAE,CAAC,SAASghD,GAAG9uF,EAAE8tC,EAAExoC,GAAG,GAAGkF,EAAE,OAAOygF,GAAG,GAAG,EAAEjrF,EAAE8tC,EAAExoC,EAAE,CAAC,SAASypF,GAAG/uF,EAAE8tC,EAAExoC,EAAEwoB,GAAG,GAAGtjB,EAAE,OAAOygF,GAAG,GAAG,EAAEjrF,EAAE8tC,EAAExoC,EAAEwoB,EAAE,CAAC,SAASkhE,GAAGhvF,EAAE8tC,EAAExoC,EAAEwoB,GAAG,GAAGtjB,EAAE,OAAOygF,GAAG,GAAG,EAAEjrF,EAAE8tC,EAAExoC,EAAEwoB,EAAE,CAAC,SAASmhE,GAAGjvF,EAAE8tC,EAAExoC,EAAEwoB,GAAG,GAAGtjB,EAAE,OAAOygF,GAAG,GAAG,EAAEjrF,EAAE8tC,EAAExoC,EAAEwoB,EAAE,CAAC,SAASohE,GAAGlvF,GAAG,GAAGwK,EAAE,OAAOygF,GAAG,GAAG,EAAEjrF,EAAE,CAAC,SAASmvF,GAAGnvF,EAAE8tC,GAAG,GAAGtjC,EAAE,OAAOygF,GAAG,GAAG,EAAEjrF,EAAE8tC,EAAE,CAAC,SAASshD,GAAGpvF,EAAE8tC,EAAExoC,GAAG,GAAGkF,EAAE,OAAOygF,GAAG,GAAG,EAAEjrF,EAAE8tC,EAAExoC,EAAE,CAAC,SAAS+pF,GAAGrvF,GAAG,mBAAmBsvF,QAAQC,KAAKD,QAAQC,GAAGzhE,IAAI9tB,GAAG,EAAEA,GAAGrJ,MAAMgnD,KAAK8uC,IAAIzsF,GAAG,IAAIsvF,QAAQE,MAAM1hE,IAAI9tB,GAAG,EAAE,GAAG,CAAC,SAASysF,KAAK,IAAIzsF,EAAEssF,KAAKtsF,IAAIqvF,GAAGrvF,GAAG,SAASA,GAAG,IAAIioF,EAAE,IAAI,GAAGwH,MAAM5f,IAAI,IAAIrlE,EAAEklF,GAAGnpE,GAAG6kE,GAAG7kE,EAAE,CAAC,MAAMvmB,GAAGsrF,GAAGtrF,EAAE,CAAC,CAAC,MAAMA,GAAGsrF,GAAGtrF,EAAE,CAAC,CAApF,GAAwF,CAAC,SAAS2vF,GAAG3vF,GAAG,OAAOgS,IAAIhS,IAAI,GAAG,WAAW8tB,IAAI9tB,EAAE,IAAI,EAAE,CAAC,SAAS4vF,GAAG5vF,GAAG,OAAO,GAAGA,EAAE,IAAI,GAAGA,EAAE,KAAK,GAAGA,EAAE,IAAI,CAAChK,EAAE65F,iBAAiB,SAAS7vF,EAAE8tC,GAAG,IAAIxoC,EAAEqoF,GAAG3tF,GAAGsF,IAAItF,GAAG2tF,GAAGx3F,SAASw3F,GAAGx3F,OAAO6J,EAAE,GAAG2tF,GAAG3tF,GAAGsF,EAAEujF,EAAEhwF,IAAImH,IAAIA,EAAEsF,EAAEwoC,GAAG+hC,IAAIia,GAAGmC,GAAGjsF,GAAG0vF,GAAG1vF,EAAE,EAAEhK,EAAE85F,kCAAkCT,GAAGr5F,EAAE+5F,aAAatD,GAAG,IAAIuD,GAAGC,GAAG,CAAC,EAAE,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KAAKC,GAAG,CAAC,EAAE,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KAAK,SAASC,GAAGnwF,GAAG,OAAO4vF,GAAG5vF,EAAEowF,eAAeH,GAAGC,IAAIlwF,EAAEqwF,YAAYrwF,EAAEswF,UAAU,CAAC,CAAC,SAASC,GAAGvwF,EAAE8tC,EAAExoC,EAAEwoB,EAAE9b,EAAE1L,EAAEtQ,GAAG,OAAOwU,EAAEygF,GAAG,GAAG,EAAEjrF,EAAE8tC,EAAExoC,EAAEwoB,EAAE9b,EAAE1L,EAAEtQ,IAAI,EAAE,CAAC,SAASw6F,GAAGxwF,EAAE8tC,EAAExoC,EAAEwoB,EAAE9b,EAAE1L,GAAG,GAAGkE,EAAE,OAAOygF,GAAG,GAAG,EAAEjrF,EAAE8tC,EAAExoC,EAAEwoB,EAAE9b,EAAE1L,EAAE,CAAC,SAASmqF,GAAGzwF,GAAG,IAAI8tC,EAAEwgD,GAAGtuF,GAAG,EAAEsF,EAAEorF,GAAG5iD,GAAG,OAAOxoC,GAAGmpF,GAAGzuF,EAAEsF,EAAEwoC,GAAGxoC,CAAC,CAAC,SAAS2lF,GAAGjrF,EAAE8tC,GAAG,IAAIxoC,EAAEqrF,UAAUx6F,OAAO,EAAE23B,EAAE6iE,UAAU,OAAO,SAAS3wF,GAAG,IAAI8tC,EAAE8iD,KAAK,OAAO5wF,EAAEA,IAAI0tF,GAAG5/C,GAAG9tC,CAAC,CAA3C,EAA6C,KAAM,IAAI,IAAIgS,EAAE6+E,GAAG,EAAEvrF,GAAGtP,EAAEgc,GAAG,EAAE0zE,EAAE,EAAEA,EAAEpgF,EAAEogF,IAAI,CAAC,IAAIrgF,EAAEyoB,EAAE,EAAE43D,GAAGp/E,IAAItQ,EAAE0vF,IAAI,GAAGrgF,CAAC,CAAC,OAAOyrF,GAAG9wF,EAAEsF,EAAE0M,EAAE87B,EAAG,GAAE,CAACkiD,GAAGhuB,EAAE,KAAK,IAAIhiE,EAAE+lF,QAAQgL,SAAS,OAAO,IAAI/wF,EAAE,GAAGA,EAAE,GAAG,KAAK,IAAIo+C,YAAY4yC,WAAW5yC,YAAYd,MAAM,IAAI2zC,GAAGC,GAAG,GAAGC,GAAG,CAAC,EAAE,SAASC,KAAK,IAAIH,GAAG,CAAC,IAAIjxF,EAAE8tC,EAAE,CAACujD,KAAK,WAAWC,QAAQ,WAAWC,KAAK,IAAIC,IAAI,IAAIC,KAAK,iBAAiBC,MAAM,iBAAiBtwF,WAAWA,UAAUuwF,WAAWvwF,UAAUuwF,UAAU,IAAI,KAAK5+E,QAAQ,IAAI,KAAK,SAASgqB,EAAE85C,GAAG,kBAAkB,IAAI72E,KAAKmxF,QAAG,IAASA,GAAGnxF,UAAU8tC,EAAE9tC,GAAG8tC,EAAE9tC,GAAGmxF,GAAGnxF,GAAG,IAAIsF,EAAE,GAAG,IAAItF,KAAK8tC,EAAExoC,EAAElP,KAAK4J,EAAE,IAAI8tC,EAAE9tC,IAAIixF,GAAG3rF,CAAC,CAAC,OAAO2rF,EAAE,CAAC,SAASW,GAAG5xF,EAAEsF,GAAG,GAAGkF,EAAE,OAAOygF,GAAG,GAAG,EAAEjrF,EAAEsF,GAAG,IAAIwoB,EAAE,EAAE,OAAOsjE,KAAKnmF,SAAQ,SAAU3E,EAAEtQ,GAAG,IAAI0vF,EAAEpgF,EAAEwoB,EAAE,IAAI93B,EAAEgc,IAAIhS,EAAE,EAAEhK,GAAG,IAAI,GAAG0vF,EAAEA,EAAE,EAAEA,EAAEp/E,EAAEnQ,SAASuvF,EAAE53C,IAAI93C,KAAK,IAAI,GAAGsQ,EAAEioF,WAAW7I,GAAG53C,IAAI93C,GAAG,IAAI,GAAG,EAAE83B,GAAGxnB,EAAEnQ,OAAO,CAAE,IAAG,CAAC,CAAC,SAAS07F,GAAG7xF,EAAE8tC,GAAG,GAAGtjC,EAAE,OAAOygF,GAAG,GAAG,EAAEjrF,EAAE8tC,GAAG,IAAIxoC,EAAE8rF,KAAKp/E,IAAIhS,GAAG,IAAI,GAAGsF,EAAEnP,OAAO,IAAI23B,EAAE,EAAE,OAAOxoB,EAAE2F,SAAQ,SAAUjL,GAAG8tB,GAAG9tB,EAAE7J,OAAO,CAAE,IAAG6b,IAAI87B,GAAG,IAAI,GAAGhgB,EAAE,CAAC,CAAC,SAASgkE,GAAG9xF,GAAG,OAAOwK,EAAEygF,GAAG,GAAG,EAAEjrF,GAAG,EAAE,CAAC,SAAS+xF,GAAG/xF,EAAE8tC,EAAExoC,EAAEwoB,GAAG,OAAOtjB,EAAEygF,GAAG,GAAG,EAAEjrF,EAAE8tC,EAAExoC,EAAEwoB,GAAG,EAAE,CAAC,SAASkkE,GAAGhyF,EAAE8tC,EAAExoC,EAAEwoB,EAAE9b,GAAG,OAAOxH,EAAEygF,GAAG,GAAG,EAAEjrF,EAAE8tC,EAAExoC,EAAEwoB,EAAE9b,GAAG,EAAE,CAAC,IAAIigF,GAAG,CAAC,KAAK,GAAG,IAAI,SAASC,GAAGlyF,EAAE8tC,EAAEhgB,EAAExnB,GAAG,GAAGkE,EAAE,OAAOygF,GAAG,GAAG,EAAEjrF,EAAE8tC,EAAEhgB,EAAExnB,GAAG,IAAI,IAAItQ,EAAE,EAAE0vF,EAAE,EAAEA,EAAE53D,EAAE43D,IAAI,CAAC,IAAIrgF,EAAE2M,IAAI87B,GAAG,IAAI,GAAG1oC,EAAE4M,IAAI87B,EAAE,GAAG,IAAI,GAAGA,GAAG,EAAE,IAAI,IAAI77B,EAAE,EAAEA,EAAE7M,EAAE6M,IAAI,CAAC,IAAI2zE,EAAEtgF,IAAID,EAAE4M,IAAI,GAAG+qB,EAAEi1D,GAAGjyF,GAAG,IAAI4lF,GAAG,KAAKA,IAAI,IAAI5lF,EAAE1C,EAAEH,GAAGytF,GAAG5tD,EAAE,IAAIA,EAAE7mC,OAAO,GAAG6mC,EAAE5mC,KAAKwvF,EAAE,CAAC5vF,GAAGoP,CAAC,CAAC,OAAO4M,IAAI1L,GAAG,IAAI,GAAGtQ,EAAE,CAAC,CAAC,SAASm8F,GAAGnyF,GAAG,OAAOmyF,GAAG,WAAW,GAAG,iBAAiBC,QAAQ,mBAAmBA,OAAOC,gBAAgB,OAAOryF,IAAIA,EAAExH,IAAI45F,OAAOC,gBAAgB,IAAIn7F,WAAW8I,EAAEZ,cAAcY,GAAG,GAAGgiE,EAAE,IAAI,IAAIhiE,EAAE,EAAQ,KAAU,GAAGA,EAAEsyF,eAAe,OAAOxkD,GAAG9tC,EAAEsyF,eAAexkD,GAAG,IAAIA,EAAE9tC,EAAEuyF,YAAY,OAAOvyF,IAAIA,EAAExH,IAAIs1C,EAAE9tC,EAAEZ,aAAaY,EAAE,CAAC,MAAMA,GAAG,CAAC+nF,EAAE,mBAAmB,CAAtU,IAA2U/nF,EAAE,CAAC,IAAIwyF,GAAG,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAIvF,GAAG,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,SAASwF,GAAGzyF,EAAEsF,EAAE0M,EAAE1L,GAAG,SAAStQ,EAAEgK,EAAE8tC,EAAExoC,GAAG,IAAItF,EAAE,iBAAiBA,EAAEA,EAAEqvC,WAAWrvC,GAAG,GAAGA,EAAE7J,OAAO23C,GAAG9tC,EAAEsF,EAAE,GAAGtF,EAAE,OAAOA,CAAC,CAAC,SAAS0lF,EAAE1lF,EAAE8tC,GAAG,OAAO93C,EAAEgK,EAAE8tC,EAAE,IAAI,CAAC,SAASzoC,EAAErF,EAAE8tC,GAAG,SAASxoC,EAAEtF,GAAG,OAAO,EAAEA,GAAG,EAAE,EAAEA,EAAE,EAAE,CAAC,CAAC,IAAI8tB,EAAE,OAAO,KAAKA,EAAExoB,EAAEtF,EAAEowF,cAActiD,EAAEsiD,iBAAiB,KAAKtiE,EAAExoB,EAAEtF,EAAEqwF,WAAWviD,EAAEuiD,eAAeviE,EAAExoB,EAAEtF,EAAEswF,UAAUxiD,EAAEwiD,YAAYxiE,CAAC,CAAC,SAAS1oB,EAAEpF,GAAG,OAAOA,EAAE0yF,UAAU,KAAK,EAAE,OAAO,IAAIx2C,KAAKl8C,EAAEowF,cAAc,EAAE,GAAG,IAAI,KAAK,EAAE,OAAOpwF,EAAE,KAAK,EAAE,OAAO,IAAIk8C,KAAKl8C,EAAEowF,cAAc,EAAE,GAAG,KAAK,EAAE,OAAO,IAAIl0C,KAAKl8C,EAAEowF,cAAc,EAAE,GAAG,KAAK,EAAE,OAAO,IAAIl0C,KAAKl8C,EAAEowF,cAAc,EAAE,GAAG,KAAK,EAAE,OAAO,IAAIl0C,KAAKl8C,EAAEowF,cAAc,EAAE,GAAG,IAAI,KAAK,EAAE,OAAO,IAAIl0C,KAAKl8C,EAAEowF,cAAc,EAAE,GAAG,IAAI,CAAC,SAASn+E,EAAEjS,GAAG,IAAI8tC,EAAE9tC,EAAE2yF,GAAG,IAAI3yF,EAAE,IAAIk8C,KAAK,IAAIA,KAAKl8C,EAAE4yF,GAAG,KAAK,EAAE,GAAGC,WAAW,EAAE/kD,GAAG,CAAC,IAAIxoC,EAAEtF,EAAEqwF,WAAWviE,GAAG8hE,GAAG5vF,EAAEowF,eAAeoC,GAAGvF,IAAI3nF,GAAG,KAAKwoC,EAAEhgB,EAAE9tB,EAAEswF,WAAW,CAACtwF,EAAE8yF,QAAQ9yF,EAAEswF,UAAUxiD,GAAG,KAAK,CAACA,GAAGhgB,EAAE9tB,EAAEswF,UAAU,EAAEtwF,EAAE8yF,QAAQ,GAAG,GAAGxtF,EAAEtF,EAAE+yF,SAASztF,EAAE,IAAItF,EAAE+yF,SAAS,GAAG/yF,EAAEgzF,YAAYhzF,EAAEowF,cAAc,GAAG,CAAC,OAAO9qF,EAAE,IAAI42C,KAAKl8C,EAAEowF,cAAc,EAAE,EAAE,GAAGtiD,EAAE1oC,EAAE,IAAI82C,KAAKl8C,EAAEowF,cAAc,EAAE,IAAI9qF,EAAEF,EAAEE,GAAG,GAAGD,EAAEyoC,EAAE9tC,GAAG,GAAGqF,EAAEC,EAAEtF,GAAGA,EAAEowF,cAAc,EAAEpwF,EAAEowF,cAAcpwF,EAAEowF,cAAc,CAAC,CAAC,IAAIxK,EAAE93D,IAAIxnB,EAAE,IAAI,IAAI,GAAG,IAAI,IAAI02B,KAAK12B,EAAE,CAAC2sF,GAAGnlE,IAAIxnB,GAAG,IAAI,GAAG4sF,GAAGplE,IAAIxnB,EAAE,GAAG,IAAI,GAAG6sF,GAAGrlE,IAAIxnB,EAAE,GAAG,IAAI,GAAG8sF,GAAGtlE,IAAIxnB,EAAE,IAAI,IAAI,GAAG+sF,GAAGvlE,IAAIxnB,EAAE,IAAI,IAAI,GAAGssF,GAAG9kE,IAAIxnB,EAAE,IAAI,IAAI,GAAGgtF,GAAGxlE,IAAIxnB,EAAE,IAAI,IAAI,GAAGqsF,GAAG7kE,IAAIxnB,EAAE,IAAI,IAAI,GAAGitF,GAAGzlE,IAAIxnB,EAAE,IAAI,IAAI,GAAGktF,GAAG1lE,IAAIxnB,EAAE,IAAI,IAAI,GAAGmtF,GAAG7N,EAAEmF,GAAGnF,GAAG,IAAI5zE,EAAE+4E,GAAG/4E,GAAG4zE,EAAE,CAAC,KAAK,uBAAuB,KAAK,WAAW,KAAK,WAAW,KAAK,KAAK,KAAK,cAAc,KAAK,QAAQ,KAAK,WAAW,KAAK,WAAW,KAAK,WAAW,MAAM,KAAK,MAAM,KAAK,MAAM,WAAW,MAAM,WAAW,MAAM,KAAK,MAAM,KAAK,MAAM,KAAK,MAAM,KAAK,MAAM,KAAK,MAAM,KAAK,MAAM,KAAK,MAAM,KAAK,MAAM,KAAK,MAAM,KAAK,MAAM,KAAK,MAAM,KAAK,MAAM,KAAK,MAAM,KAAK,MAAM,MAAM5zE,EAAEA,EAAEe,QAAQ,IAAIE,OAAO+pB,EAAE,KAAK4oD,EAAE5oD,IAAI,IAAI65C,EAAE,2DAA2DnkE,MAAM,KAAKjG,EAAE,wFAAwFiG,MAAM,KAAK,IAAIsqB,KAAK4oD,EAAE,CAAC,KAAK,SAAS5lF,GAAG,OAAO62E,EAAE72E,EAAEszF,IAAItzC,UAAU,EAAE,EAAE,EAAE,KAAK,SAAShgD,GAAG,OAAO62E,EAAE72E,EAAEszF,GAAG,EAAE,KAAK,SAAStzF,GAAG,OAAOyM,EAAEzM,EAAEqzF,IAAIrzC,UAAU,EAAE,EAAE,EAAE,KAAK,SAAShgD,GAAG,OAAOyM,EAAEzM,EAAEqzF,GAAG,EAAE,KAAK,SAASrzF,GAAG,OAAO0lF,GAAG1lF,EAAE4yF,GAAG,MAAM,IAAI,EAAE,EAAE,EAAE,KAAK,SAAS5yF,GAAG,OAAO0lF,EAAE1lF,EAAEozF,GAAG,EAAE,EAAE,KAAK,SAASpzF,GAAG,OAAOhK,EAAEgK,EAAEozF,GAAG,EAAE,IAAI,EAAE,KAAK,SAASpzF,GAAG,OAAOiS,EAAEjS,GAAGqvC,WAAW2Q,UAAU,EAAE,EAAE,KAAK,SAAShgD,GAAG,OAAOiS,EAAEjS,EAAE,EAAE,KAAK,SAASA,GAAG,OAAO0lF,EAAE1lF,EAAEmzF,GAAG,EAAE,EAAE,KAAK,SAASnzF,GAAG,OAAO,IAAIA,EAAEA,EAAEmzF,IAAInzF,EAAE,GAAG,GAAGA,IAAIA,GAAG,IAAI0lF,EAAE1lF,EAAE,EAAE,EAAE,KAAK,SAASA,GAAG,IAAI,IAAI8tC,EAAE,EAAExoC,EAAE,EAAEA,GAAGtF,EAAEqzF,GAAG,EAAEvlD,IAAI8hD,GAAG5vF,EAAE4yF,GAAG,MAAMJ,GAAGvF,IAAI3nF,MAAM,OAAOogF,EAAE1lF,EAAEozF,GAAGtlD,EAAE,EAAE,EAAE,KAAK,SAAS9tC,GAAG,OAAO0lF,EAAE1lF,EAAEqzF,GAAG,EAAE,EAAE,EAAE,KAAK,SAASrzF,GAAG,OAAO0lF,EAAE1lF,EAAEkzF,GAAG,EAAE,EAAE,KAAK,WAAW,MAAM,IAAI,EAAE,KAAK,SAASlzF,GAAG,OAAO,GAAGA,EAAEmzF,IAAI,GAAGnzF,EAAEmzF,GAAG,KAAK,IAAI,EAAE,KAAK,SAASnzF,GAAG,OAAO0lF,EAAE1lF,EAAEizF,GAAG,EAAE,EAAE,KAAK,WAAW,MAAM,IAAI,EAAE,KAAK,SAASjzF,GAAG,OAAOA,EAAEszF,IAAI,CAAC,EAAE,KAAK,SAAStzF,GAAG,OAAO0lF,EAAEnkF,KAAKyc,OAAOhe,EAAE2yF,GAAG,EAAE3yF,EAAEszF,IAAI,GAAG,EAAE,EAAE,KAAK,SAAStzF,GAAG,IAAI8tC,EAAEvsC,KAAKyc,OAAOhe,EAAE2yF,GAAG,GAAG3yF,EAAEszF,GAAG,GAAG,GAAG,GAAG,GAAG,IAAItzF,EAAEszF,GAAG,IAAItzF,EAAE2yF,GAAG,GAAG,GAAG7kD,IAAIA,EAAE,IAAIA,IAAI,IAAIxoC,GAAGtF,EAAEszF,GAAG,IAAItzF,EAAE2yF,IAAI,IAAI,GAAGrtF,GAAGsqF,GAAG5vF,EAAE4yF,MAAM9kD,EAAE,QAAQ,CAACA,EAAE,GAAG,IAAIxoC,GAAGtF,EAAEszF,GAAG,EAAEtzF,EAAE2yF,GAAG,GAAG,GAAG,GAAGrtF,GAAG,GAAGA,GAAGsqF,GAAG5vF,EAAE4yF,GAAG,IAAI,KAAK9kD,GAAG,CAAC,OAAO43C,EAAE53C,EAAE,EAAE,EAAE,KAAK,SAAS9tC,GAAG,OAAOA,EAAEszF,EAAE,EAAE,KAAK,SAAStzF,GAAG,OAAO0lF,EAAEnkF,KAAKyc,OAAOhe,EAAE2yF,GAAG,GAAG3yF,EAAEszF,GAAG,GAAG,GAAG,GAAG,EAAE,EAAE,KAAK,SAAStzF,GAAG,OAAOA,EAAE4yF,GAAG,MAAMvjD,WAAW2Q,UAAU,EAAE,EAAE,KAAK,SAAShgD,GAAG,OAAOA,EAAE4yF,GAAG,IAAI,EAAE,KAAK,SAAS5yF,GAAG,IAAI8tC,EAAE,IAAI9tC,EAAEA,EAAEwzF,IAAI,OAAOxzF,EAAEuB,KAAK2a,IAAIlc,GAAG,IAAI8tC,EAAE,IAAI,KAAK+8C,OAAO,QAAQ7qF,EAAE,GAAG,IAAIA,EAAE,KAAKkO,OAAO,EAAE,EAAE,KAAK,SAASlO,GAAG,OAAOA,EAAEyzF,EAAE,EAAE,KAAK,WAAW,MAAM,GAAG,GAAGzhF,EAAEA,EAAEe,QAAQ,MAAM,QAAQ6yE,EAAE5zE,EAAE0hF,SAAS12D,KAAKhrB,EAAEA,EAAEe,QAAQ,IAAIE,OAAO+pB,EAAE,KAAK4oD,EAAE5oD,GAAG12B,KAAK,OAAO02B,EAAE,SAASh9B,GAAG,IAAI8tC,EAAEp1C,MAAM41F,GAAGtuF,GAAG,GAAG,OAAOwuF,GAAGxuF,EAAE8tC,EAAE,EAAEA,EAAE33C,QAAQ23C,CAAC,CAA5D,CAA8D97B,EAAEA,EAAEe,QAAQ,QAAQ,MAAMiqB,EAAE7mC,OAAOmP,EAAE,GAAG,SAAStF,EAAEsF,GAAGwoC,IAAIt1C,IAAIwH,EAAEsF,IAAI,EAAE,CAA9B,CAAgC03B,EAAEh9B,GAAGg9B,EAAE7mC,OAAO,EAAE,CAAC2zF,GAAG2B,KAAK,IAAIkI,GAAG,CAAC,KAAK3I,GAAGK,GAAG4C,GAAGG,GAAGC,GAAGK,GAAGC,GAAGC,GAAGC,GAAGC,GAAGC,GAAGC,GAAGC,GAAGC,GAAGC,GAAGC,GAAGmB,GAAGC,GAAGoB,GAAGC,GAAGC,GAAGC,GAAGC,GAAGE,IAAI0B,GAAG,CAACppF,EAAE,SAASxK,EAAE8tC,EAAExoC,GAAG,MAAM,IAAIsoF,GAAG5tF,GAAGyrF,GAAG39C,EAAExoC,GAAGtF,CAAC,EAAEg9B,EAAE,WAAW+qD,EAAE,iHAAiH,EAAEtnB,EAAE,SAASzgE,GAAG6zF,GAAG7zF,GAAGuF,EAAE,GAAGsgF,GAAGiE,GAAGiC,IAAI,EAAE5yD,EAAE,SAASn5B,GAAGwK,EAAE2wE,YAAY,CAACiP,IAAI,gBAAgBsC,OAAO1sF,IAAI6pF,GAAG7pF,EAAE,EAAEkyB,EAAEg8D,GAAGrI,EAAEuI,GAAGnG,EAAEoG,GAAGrsB,EAAE0sB,GAAGrxF,EAAEsxF,GAAG1F,EAAE2F,GAAGzxF,EAAE0xF,GAAG7F,EAAE8F,GAAG1F,EAAE2F,GAAGzoF,EAAE0oF,GAAG1xF,EAAE2xF,GAAG9+D,EAAE++D,GAAG7H,EAAE8H,GAAG5oE,EAAE6oE,GAAG16D,EAAE,WAAW,OAAO,MAAM,EAAE+wD,EAAE,WAAW,OAAM,CAAE,EAAEC,EAAE,SAAS1lF,EAAE8tC,GAAG9tC,GAAG8tC,EAAE1D,YAAW,IAAKqiD,OAAOjiF,EAAE2wE,YAAY,CAACkR,aAAarsF,EAAEoqF,IAAI,kBAAkBpqF,EAAE8pF,GAAGC,GAAG/pF,KAAKA,EAAEm7E,YAAY,CAACiP,IAAI,gBAAgB,EAAEvB,EAAE,WAAW,OAAO,CAAC,EAAEtoB,EAAE8uB,GAAGrsE,EAAE,SAAShjB,GAAGgiE,GAAG8nB,GAAGC,GAAG/pF,GAAG8zF,KAAK,EAAE12F,EAAE,SAAS4C,EAAE8tC,GAAG9tC,EAAE,IAAIk8C,KAAK,IAAIyzC,GAAG3vF,IAAI8tB,IAAIggB,GAAG,IAAI,GAAG9tC,EAAE+zF,gBAAgBjmE,IAAIggB,EAAE,GAAG,IAAI,GAAG9tC,EAAEg0F,gBAAgBlmE,IAAIggB,EAAE,GAAG,IAAI,GAAG9tC,EAAEi0F,cAAcnmE,IAAIggB,EAAE,IAAI,IAAI,GAAG9tC,EAAEk0F,aAAapmE,IAAIggB,EAAE,IAAI,IAAI,GAAG9tC,EAAEm0F,cAAcrmE,IAAIggB,EAAE,IAAI,IAAI,GAAG9tC,EAAEo0F,iBAAiB,KAAKtmE,IAAIggB,EAAE,IAAI,IAAI,GAAG9tC,EAAEq0F,YAAYr0F,GAAGA,EAAE6yF,UAAU32C,KAAKo4C,IAAIt0F,EAAEo0F,iBAAiB,EAAE,EAAE,EAAE,EAAE,EAAE,IAAI,MAAM,EAAEtmE,IAAIggB,EAAE,IAAI,IAAI,GAAG9tC,CAAC,EAAEwlF,EAAE,SAASxlF,EAAE8tC,GAAG9tC,EAAE,IAAIk8C,KAAK,IAAIyzC,GAAG3vF,IAAI8tB,IAAIggB,GAAG,IAAI,GAAG9tC,EAAEu0F,aAAazmE,IAAIggB,EAAE,GAAG,IAAI,GAAG9tC,EAAEw0F,aAAa1mE,IAAIggB,EAAE,GAAG,IAAI,GAAG9tC,EAAEy0F,WAAW3mE,IAAIggB,EAAE,IAAI,IAAI,GAAG9tC,EAAEswF,UAAUxiE,IAAIggB,EAAE,IAAI,IAAI,GAAG9tC,EAAEqwF,WAAWviE,IAAIggB,EAAE,IAAI,IAAI,GAAG9tC,EAAEowF,cAAc,KAAKtiE,IAAIggB,EAAE,IAAI,IAAI,GAAG9tC,EAAE0yF,SAAS,IAAIptF,EAAE,EAAE6qF,GAAGnwF,GAAG8tB,IAAIggB,EAAE,IAAI,IAAI,GAAGxoC,EAAEwoB,IAAIggB,EAAE,IAAI,IAAI,IAAI,GAAG9tC,EAAE00F,oBAAoBpvF,EAAE,IAAI42C,KAAKl8C,EAAEowF,cAAc,EAAE,GAAGsE,oBAAoB,IAAI1iF,EAAE,IAAIkqC,KAAKl8C,EAAEowF,cAAc,EAAE,GAAGsE,oBAAoB10F,EAAE,GAAGsF,GAAG0M,GAAGhS,EAAE00F,qBAAqBnzF,KAAKC,IAAIwQ,EAAE1M,IAAIwoB,IAAIggB,EAAE,IAAI,IAAI,GAAG9tC,CAAC,EAAEgoF,EAAE,SAAShoF,GAAG,IAAI8tC,EAAE,IAAIoO,KAAKpuB,IAAI9tB,EAAE,IAAI,IAAI,GAAG,KAAK8tB,IAAI9tB,EAAE,IAAI,IAAI,GAAG8tB,IAAI9tB,EAAE,IAAI,IAAI,GAAG8tB,IAAI9tB,EAAE,GAAG,IAAI,GAAG8tB,IAAI9tB,EAAE,GAAG,IAAI,GAAG8tB,IAAI9tB,GAAG,IAAI,GAAG,GAAGsF,EAAEwoB,IAAI9tB,EAAE,IAAI,IAAI,GAAGgS,EAAE87B,EAAE4mD,oBAAoBpuF,EAAE,IAAI41C,KAAKpO,EAAEsiD,cAAc,EAAE,GAAGsE,oBAAoB1+F,EAAE,IAAIkmD,KAAKpO,EAAEsiD,cAAc,EAAE,GAAGsE,oBAAoBhP,EAAEnkF,KAAKC,IAAIxL,EAAEsQ,GAAG,OAAO,EAAEhB,EAAEwoB,IAAI9tB,EAAE,IAAI,IAAI,GAAG9G,OAAOoN,GAAGtQ,GAAG0vF,GAAG1zE,GAAG,EAAE1M,IAAIogF,GAAG1zE,KAAK1L,EAAE/E,KAAK47B,IAAInnC,EAAEsQ,GAAGwnC,EAAE6mD,QAAQ7mD,EAAE+kD,UAAU,MAAM,EAAEvtF,EAAEogF,EAAEp/E,GAAG0L,KAAK8b,IAAI9tB,EAAE,IAAI,IAAI,GAAG8tC,EAAE4kD,SAASptF,EAAE,EAAE6qF,GAAGriD,GAAGhgB,IAAI9tB,EAAE,IAAI,IAAI,GAAGsF,EAAEwoB,IAAI9tB,GAAG,IAAI,GAAG8tC,EAAEymD,aAAazmE,IAAI9tB,EAAE,GAAG,IAAI,GAAG8tC,EAAE0mD,aAAa1mE,IAAI9tB,EAAE,GAAG,IAAI,GAAG8tC,EAAE2mD,WAAW3mE,IAAI9tB,EAAE,IAAI,IAAI,GAAG8tC,EAAEwiD,UAAUxiE,IAAI9tB,EAAE,IAAI,IAAI,GAAG8tC,EAAEuiD,WAAWviE,IAAI9tB,EAAE,IAAI,IAAI,GAAG8tC,EAAE8mD,UAAU9mD,EAAE+kD,UAAU,IAAI,CAAC,EAAEhL,EAAE0I,GAAGhL,EAAEiL,GAAGlrF,EAAE,SAAStF,EAAE8tC,EAAExoC,GAAG,SAASgB,EAAEtG,GAAG,OAAOA,EAAEA,EAAE60F,eAAetiF,MAAM,sBAAsBvS,EAAE,GAAG,KAAK,CAAC,IAAIhK,GAAE,IAAKkmD,MAAMk0C,cAAc1K,EAAE,IAAIxpC,KAAKlmD,EAAE,EAAE,GAAGqP,EAAE,IAAI62C,KAAKlmD,EAAE,EAAE,GAAGA,EAAE0vF,EAAEgP,oBAAoB,IAAItvF,EAAEC,EAAEqvF,oBAAoBziF,EAAE1Q,KAAK47B,IAAInnC,EAAEoP,GAAG4M,IAAIhS,GAAG,IAAI,GAAG,GAAGiS,EAAE6b,IAAIggB,GAAG,IAAI,GAAG50C,OAAOlD,GAAGoP,GAAGpF,EAAEsG,EAAEo/E,GAAG53C,EAAExnC,EAAEjB,GAAGrF,EAAEywF,GAAGzwF,GAAG8tC,EAAE2iD,GAAG3iD,GAAG1oC,EAAEpP,GAAGgc,IAAI1M,GAAG,IAAI,GAAGtF,EAAEgS,IAAI1M,EAAE,GAAG,IAAI,GAAGwoC,IAAI97B,IAAI1M,GAAG,IAAI,GAAGwoC,EAAE97B,IAAI1M,EAAE,GAAG,IAAI,GAAGtF,EAAE,EAAEiS,EAAE,WAAW81E,EAAE,GAAG,EAAEP,EAAE,WAAWO,EAAE,iHAAiH,EAAEnC,EAAE,WAAW,EAAE5vF,EAAE,WAAW,OAAOkmD,KAAKoB,KAAK,EAAEgrC,EAAE,WAAW,MAAMjrF,GAAG,EAAE,QAAQ,EAAEkB,EAAE,WAAW,OAAO,UAAU,EAAEyB,EAAEgwF,GAAG5qF,EAAE,WAAW,OAAO48D,EAAE,eAAqB7rE,OAAOiL,UAAUE,mBAAmB,EAAEk/D,EAAE,SAASxgE,EAAE8tC,EAAExoC,GAAG4rF,GAAG/6F,OAAO23C,EAAExoC,IAAI,EAAE,IAAI,IAAIwoB,EAAE,EAAEA,EAAEggB,EAAEhgB,IAAIojE,GAAGpjE,GAAGxnB,IAAIhB,EAAEwoB,IAAI,GAAG,OAAO6lE,GAAG3zF,GAAG80F,MAAM,KAAK5D,GAAG,EAAE7rF,EAAE,SAASrF,GAAG,IAAI8tC,EAAExoC,IAAInP,OAAO,IAAI6J,KAAK,IAAI8tC,GAAG,WAAW9tC,EAAE,OAAM,EAAG,IAAI,IAAI8tB,EAAE,EAAE,GAAGA,EAAEA,GAAG,EAAE,CAAC,IAAI9b,EAAE87B,GAAG,EAAE,GAAGhgB,GAAG9b,EAAEzQ,KAAKC,IAAIwQ,EAAEhS,EAAE,WAAW,IAAIsG,EAAE/E,KAAKvL,EAAEsQ,EAAE9E,IAAIwQ,EAAEzQ,KAAK47B,IAAIn9B,EAAEgS,GAAGA,IAAI,MAAMA,EAAE,OAAO,MAAMhS,EAAE,CAAC,IAAI0lF,EAAEhxD,EAAEl7B,OAAO,IAAIk7B,EAAEqgE,KAAK/+F,EAAE8I,KAAKwH,EAAE,WAAW0L,GAAG0zE,EAAEtmF,WAAW,QAAQ,IAAIkmF,IAAI,IAAIjgF,EAAE,EAAE,MAAMrF,CAAC,CAAC,MAAMA,GAAG,CAACqF,OAAE,CAAM,CAAC,GAAGA,EAAE,OAAM,CAAE,CAAC,OAAM,CAAE,EAAE6gF,EAAE0L,GAAGtM,EAAEuM,GAAG30F,EAAEkuF,GAAG7lF,EAAEusF,GAAGhkD,EAAEikD,GAAGjJ,EAAEkJ,GAAGnb,EAAEqb,GAAGpkE,EAAE,SAAS9tB,EAAE8tC,GAAG,OAAOqkD,GAAG7sF,IAAI+T,SAASrZ,IAAI,EAAEA,EAAE8tC,IAAI,IAAI,CAAC,EAAE97B,EAAE0iB,GAAG1+B,EAAEwyF,WAAW3Y,EAAE4iB,GAAGhmF,EAAE,SAASzM,EAAE8tC,EAAExoC,EAAEwoB,GAAG,OAAO2kE,GAAGzyF,EAAE8tC,EAAExoC,EAAEwoB,EAAE,IAAI,WAAW,SAAS9tB,EAAEA,EAAE8tC,GAAG,OAAO9tC,EAAEA,EAAEjL,QAAQiB,EAAEg/F,IAAIh1F,EAAE8pF,GAAG0B,GAAGp1F,KAAKJ,EAAEg/F,IAAIC,IAAIpM,EAAE7yF,EAAEg/F,IAAIE,GAAGh4F,EAAE2iE,QAAQ7pE,EAAEg/F,IAAIjN,GAAGC,EAAEl6C,EAAEg8C,GAAGuD,IAAG,KAAM,GAAG7sB,IAAIxqE,EAAEm/F,wBAAwBn/F,EAAEm/F,uBAAuB30B,GAAG,GAAGA,IAAI,OAAOyoB,IAAImM,cAAcnM,GAAGA,EAAE,MAAMjmE,GAAG,CAAC,IAAIhjB,EAAEgjB,EAAEA,EAAE,KAAKhjB,GAAG,CAAE,IAAGA,CAAC,CAAC,IAAI8tC,EAAE,CAAC97B,EAAE4hF,IAAI,GAAGpzB,IAAIxqE,EAAEm/F,wBAAwBn/F,EAAEm/F,uBAAuB30B,GAAGxqE,EAAEq/F,gBAAgB,IAAI,OAAOr/F,EAAEq/F,gBAAgBvnD,EAAE9tC,EAAE,CAAC,MAAMA,GAAG7C,EAAE,sDAAsD6C,GAAGqF,EAAErF,EAAE,EAAC,SAAUA,EAAE8tC,GAAG,IAAIxoC,EAAE0jF,EAAE,OAAOxB,GAAG,mBAAmB5E,YAAY0S,sBAAsBlM,EAAE9jF,IAAIA,EAAE+gF,WAAW,YAAYrkB,GAAG,mBAAmBrJ,MAAM2wB,GAAGhkF,EAAEtF,EAAE8tC,GAAG6qB,MAAMrzD,EAAE,CAACikF,YAAY,gBAAgB5rC,MAAM7vB,GAAG80D,YAAY0S,qBAAqBxnE,EAAE9tB,GAAG29C,KAAK7P,GAAE,SAAUhgB,GAAG,OAAO3wB,EAAE,kCAAkC2wB,GAAG3wB,EAAE,6CAA6CmsF,GAAGhkF,EAAEtF,EAAE8tC,EAAG,KAAK,EAA/W,CAAiXA,GAAE,SAAUA,GAAG9tC,EAAE8tC,EAAEynD,SAASznD,EAAE94C,OAAQ,IAAGy0F,MAAMpkF,EAAE,CAAv2B,GAA22BrP,EAAE2pF,SAAS,WAAW,OAAO3pF,EAAE2pF,SAAS3pF,EAAEg/F,IAAIj4D,GAAG+3D,MAAM,KAAKnE,UAAU,EAAE36F,EAAEsoF,yBAAyB,WAAW,OAAOtoF,EAAEsoF,yBAAyBtoF,EAAEg/F,IAAI3L,GAAGyL,MAAM,KAAKnE,UAAU,EAAE36F,EAAE+oF,4BAA4B,WAAW,OAAO/oF,EAAE+oF,4BAA4B/oF,EAAEg/F,IAAIQ,IAAIV,MAAM,KAAKnE,UAAU,EAAE36F,EAAE4oF,0BAA0B,WAAW,OAAO5oF,EAAE4oF,0BAA0B5oF,EAAEg/F,IAAIS,IAAIX,MAAM,KAAKnE,UAAU,EAAE36F,EAAEipF,0BAA0B,WAAW,OAAOjpF,EAAEipF,0BAA0BjpF,EAAEg/F,IAAItqD,IAAIoqD,MAAM,KAAKnE,UAAU,EAAE36F,EAAE+pF,kBAAkB,WAAW,OAAO/pF,EAAE+pF,kBAAkB/pF,EAAEg/F,IAAIU,IAAIZ,MAAM,KAAKnE,UAAU,EAAE36F,EAAEyqF,mBAAmB,WAAW,OAAOzqF,EAAEyqF,mBAAmBzqF,EAAEg/F,IAAIW,IAAIb,MAAM,KAAKnE,UAAU,EAAE36F,EAAEgqF,kBAAkB,WAAW,OAAOhqF,EAAEgqF,kBAAkBhqF,EAAEg/F,IAAIY,IAAId,MAAM,KAAKnE,UAAU,EAAE36F,EAAEkqF,mBAAmB,WAAW,OAAOlqF,EAAEkqF,mBAAmBlqF,EAAEg/F,IAAIa,IAAIf,MAAM,KAAKnE,UAAU,EAAE36F,EAAEqqF,iBAAiB,WAAW,OAAOrqF,EAAEqqF,iBAAiBrqF,EAAEg/F,IAAIc,IAAIhB,MAAM,KAAKnE,UAAU,EAAE36F,EAAEuqF,kBAAkB,WAAW,OAAOvqF,EAAEuqF,kBAAkBvqF,EAAEg/F,IAAIe,IAAIjB,MAAM,KAAKnE,UAAU,EAAE36F,EAAEwqF,SAAS,WAAW,OAAOxqF,EAAEwqF,SAASxqF,EAAEg/F,IAAIgB,IAAIlB,MAAM,KAAKnE,UAAU,EAAE36F,EAAE+qF,iBAAiB,WAAW,OAAO/qF,EAAE+qF,iBAAiB/qF,EAAEg/F,IAAIiB,IAAInB,MAAM,KAAKnE,UAAU,EAAE36F,EAAE8rF,kBAAkB,WAAW,OAAO9rF,EAAE8rF,kBAAkB9rF,EAAEg/F,IAAIkB,IAAIpB,MAAM,KAAKnE,UAAU,EAAE36F,EAAEisF,kBAAkB,WAAW,OAAOjsF,EAAEisF,kBAAkBjsF,EAAEg/F,IAAImB,IAAIrB,MAAM,KAAKnE,UAAU,EAAE36F,EAAE0mF,qBAAqB,WAAW,OAAO1mF,EAAE0mF,qBAAqB1mF,EAAEg/F,IAAIoB,IAAItB,MAAM,KAAKnE,UAAU,EAAE36F,EAAE+mF,sBAAsB,WAAW,OAAO/mF,EAAE+mF,sBAAsB/mF,EAAEg/F,IAAIqB,IAAIvB,MAAM,KAAKnE,UAAU,EAAE36F,EAAEgnF,sBAAsB,WAAW,OAAOhnF,EAAEgnF,sBAAsBhnF,EAAEg/F,IAAIsB,IAAIxB,MAAM,KAAKnE,UAAU,EAAE36F,EAAEyrF,QAAQ,WAAW,OAAOzrF,EAAEyrF,QAAQzrF,EAAEg/F,IAAIuB,IAAIzB,MAAM,KAAKnE,UAAU,EAAE36F,EAAEmsF,iBAAiB,WAAW,OAAOnsF,EAAEmsF,iBAAiBnsF,EAAEg/F,IAAIwB,IAAI1B,MAAM,KAAKnE,UAAU,EAAE,IAAIrE,GAAGt2F,EAAEygG,cAAc,WAAW,OAAOnK,GAAGt2F,EAAEygG,cAAczgG,EAAEg/F,IAAI0B,IAAI5B,MAAM,KAAKnE,UAAU,EAAED,GAAG16F,EAAEopF,QAAQ,WAAW,OAAOsR,GAAG16F,EAAEopF,QAAQppF,EAAEg/F,IAAI2B,IAAI7B,MAAM,KAAKnE,UAAU,EAAE36F,EAAEinF,MAAM,WAAW,OAAOjnF,EAAEinF,MAAMjnF,EAAEg/F,IAAI4B,IAAI9B,MAAM,KAAKnE,UAAU,EAAE36F,EAAE6gG,sBAAsB,WAAW,OAAO7gG,EAAE6gG,sBAAsB7gG,EAAEg/F,IAAIC,IAAIH,MAAM,KAAKnE,UAAU,EAAE,IAAIkD,GAAG79F,EAAE8gG,yBAAyB,WAAW,OAAOjD,GAAG79F,EAAE8gG,yBAAyB9gG,EAAEg/F,IAAI+B,IAAIjC,MAAM,KAAKnE,UAAU,EAAE,SAASG,KAAK,OAAOA,GAAG96F,EAAEg/F,IAAIgC,IAAIlC,MAAM,KAAKnE,UAAU,CAAC,SAASxE,KAAK,OAAOA,GAAGn2F,EAAEg/F,IAAIiC,IAAInC,MAAM,KAAKnE,UAAU,CAAC36F,EAAEkhG,4BAA4B,WAAW,OAAOlhG,EAAEkhG,4BAA4BlhG,EAAEg/F,IAAImC,IAAIrC,MAAM,KAAKnE,UAAU,EAAE,IAAIyG,GAAG1H,GAAG15F,EAAEqhG,yBAAyB,WAAW,OAAO3H,GAAG15F,EAAEqhG,yBAAyBrhG,EAAEg/F,IAAIsC,IAAIxC,MAAM,KAAKnE,UAAU,EAAElB,GAAGz5F,EAAEuhG,2BAA2B,WAAW,OAAO9H,GAAGz5F,EAAEuhG,2BAA2BvhG,EAAEg/F,IAAIwC,IAAI1C,MAAM,KAAKnE,UAAU,EAAE,SAASlD,KAAK,OAAOA,GAAGz3F,EAAEg/F,IAAIyC,IAAI3C,MAAM,KAAKnE,UAAU,CAAC,SAASC,KAAK,OAAOA,GAAG56F,EAAEg/F,IAAI0C,IAAI5C,MAAM,KAAKnE,UAAU,CAAC,SAASjD,KAAK,OAAOA,GAAG13F,EAAEg/F,IAAI2C,IAAI7C,MAAM,KAAKnE,UAAU,CAAC,SAASE,KAAK,OAAOA,GAAG76F,EAAEg/F,IAAI4C,IAAI9C,MAAM,KAAKnE,UAAU,CAAC,SAASkH,KAAK,SAAS73F,IAAI,IAAIo3F,KAAKA,IAAG,EAAGphG,EAAE8hG,WAAU,GAAI7P,KAAKz9E,GAAG+iF,GAAGrwF,GAAGwoF,EAAE1vF,GAAGA,EAAE+hG,sBAAsB/hG,EAAE+hG,wBAAwBvtF,GAAG,CAAC,GAAGxU,EAAEgiG,QAAQ,IAAI,mBAAmBhiG,EAAEgiG,UAAUhiG,EAAEgiG,QAAQ,CAAChiG,EAAEgiG,UAAUhiG,EAAEgiG,QAAQ7hG,QAAQ,CAAC,IAAI6J,EAAEhK,EAAEgiG,QAAQ1xE,QAAQlpB,EAAEyiE,QAAQ7/D,EAAE,CAACutF,GAAGnwF,EAAE,CAAC,CAAC,KAAK,EAAEojE,GAAG,GAAGh2D,EAAEk7E,EAAE1vF,GAAGwU,GAAG+iF,GAAGrwF,GAAG+6F,YAAYjiG,OAAO,CAAC,GAAGA,EAAE+yF,OAAO,IAAI,mBAAmB/yF,EAAE+yF,SAAS/yF,EAAE+yF,OAAO,CAAC/yF,EAAE+yF,SAAS/yF,EAAE+yF,OAAO5yF,QAAQ2yF,IAAIyE,GAAG9sB,GAAG,EAAED,IAAIxqE,EAAEkiG,WAAWliG,EAAEkiG,UAAU,cAAc9tD,YAAW,WAAYA,YAAW,WAAYp0C,EAAEkiG,UAAU,GAAI,GAAE,GAAGl4F,GAAI,GAAE,IAAIA,IAAI,CAAC,CAAC,GAAGhK,EAAEmiG,iBAAiBtoB,EAAE75E,EAAEwyF,WAAW9zD,EAAE1+B,EAAEwzE,WAAWqnB,GAAG76F,EAAEuzE,UAAUqnB,GAAG56F,EAAE0zE,aAAagkB,GAAG13F,EAAEsqF,aAAayK,GAAG/0F,EAAEqpF,aAAaoP,GAAGz4F,EAAEmpF,gBAAgBmP,GAAGt4F,EAAEoiG,WAAWzO,GAAG3zF,EAAEiuF,QAAQ6F,GAAG9mE,EAAE,SAAShjB,IAAIo3F,IAAIS,KAAKT,KAAKp0E,EAAEhjB,EAAE,EAAEhK,EAAEqiG,QAAQ,IAAI,mBAAmBriG,EAAEqiG,UAAUriG,EAAEqiG,QAAQ,CAACriG,EAAEqiG,UAAU,EAAEriG,EAAEqiG,QAAQliG,QAAQH,EAAEqiG,QAAQnvD,KAAVlzC,GAAkB,OAAO6hG,KAAK73F,EAAE2lF,KAAK,GAAqD3wF,EAAOD,QAAQiL,C,0BCErgwBqlF,WADFiT,GAEqCjT,YADnCA,WAAiC,oBAAb1pF,UAA4BA,SAASi/E,cAAgBj/E,SAASi/E,cAAcj+E,SAAM7G,I,YAEnG,SACAwiG,EAAU,CAAC,GAEpB,IAEIC,EAAqBC,EAFrBC,OAA2B,IAAXH,EAAyBA,EAAU,CAAC,EAIxDG,EAAc,MAAI,IAAIr8F,SAAQ,CAACC,EAASC,KACvCi8F,EAAsBl8F,EACtBm8F,EAAqBl8F,CAAM,IAG5B,IA2BIo8F,EAAOC,EAAWC,EA3BlBC,EAAkBjiG,OAAOmL,OAAO,CAAC,EAAG02F,GAIpCjS,EAAc,iBAMdsS,EAAsC,iBAAVtU,OAE5BuU,EAAgD,mBAAjBjT,cAE/BkT,EAAwC,iBAAXjT,SAAkD,iBAApBA,QAAQC,UAAwD,iBAAzBD,QAAQC,SAASt1E,KAInH+yE,EAAkB,GAWtB,GAAIuV,EAAqB,CACxB,IAAIC,EAAK,EAAQ,MACbC,EAAW,EAAQ,KAEtBzV,EADGsV,EACeG,EAAS/S,QAAQ1C,GAAmB,IAEpC2C,KAEnBsS,EAAQ,CAAC3L,EAAUoM,KAClBpM,EAAWqM,EAAUrM,GAAY,IAAIpJ,IAAIoJ,GAAYmM,EAAS5S,UAAUyG,GACjEkM,EAAG1S,aAAawG,EAAUoM,OAASrjG,EAAY,SAEvD8iG,EAAa7L,IACZ,IAAIsM,EAAMX,EAAM3L,GAAU,GAI1B,OAHKsM,EAAI7/F,SACR6/F,EAAM,IAAIniG,WAAWmiG,IAEfA,CAAG,EAEXV,EAAY,CAAC5L,EAAUnwF,EAAQwqF,EAAS+R,GAAS,KAChDpM,EAAWqM,EAAUrM,GAAY,IAAIpJ,IAAIoJ,GAAYmM,EAAS5S,UAAUyG,GACxEkM,EAAGpgC,SAASk0B,EAAUoM,OAASrjG,EAAY,QAAQ,CAACmK,EAAKhI,KACpDgI,EAAKmnF,EAAQnnF,GAAWrD,EAAOu8F,EAASlhG,EAAKuB,OAASvB,EAAK,GAC9D,GAEEwgG,EAAoB,aAAK1S,QAAQU,KAAKtwF,OAAS,IACnDqwF,EAAcT,QAAQU,KAAK,GAAG1zE,QAAQ,MAAO,MAEjCgzE,QAAQU,KAAKv4E,MAAM,GAKhCuqF,EAAgB,QAAI,IAAM,4BAC3B,MAAWK,GAAsBC,KAC5BA,EACHtV,EAAkBtuF,KAAK4vC,SAAS8hD,KACH,oBAAZlrF,UAA2BA,SAASi/E,gBACrD6I,EAAkB9nF,SAASi/E,cAAcj+E,KAEtC0oF,aACH5B,EAAkB4B,YAGlB5B,EADwC,IAArCA,EAAgBxtF,QAAQ,SACTwtF,EAAgB3I,OAAO,EAAG2I,EAAgB1wE,QAAQ,SAAU,IAAIgoE,YAAY,KAAO,GAEnF,GAGlB2d,EAAQpU,IACP,IAAIgV,EAAM,IAAIxS,eAGd,OAFAwS,EAAIvS,KAAK,MAAOzC,GAAK,GACrBgV,EAAItS,KAAK,MACFsS,EAAIrS,YAAY,EAEpB8R,IACHH,EAAatU,IACZ,IAAIgV,EAAM,IAAIxS,eAId,OAHAwS,EAAIvS,KAAK,MAAOzC,GAAK,GACrBgV,EAAIpS,aAAe,cACnBoS,EAAItS,KAAK,MACF,IAAI9vF,WAAWoiG,EAAInS,SAAS,GAGrCwR,EAAY,CAACrU,EAAK1nF,EAAQwqF,KACzB,IAAIkS,EAAM,IAAIxS,eACdwS,EAAIvS,KAAK,MAAOzC,GAAK,GACrBgV,EAAIpS,aAAe,cACnBoS,EAAI18F,OAAS,KACM,KAAd08F,EAAI9lD,QAA+B,GAAd8lD,EAAI9lD,QAAe8lD,EAAInS,SAC/CvqF,EAAO08F,EAAInS,UAGZC,GAAS,EAEVkS,EAAIlS,QAAUA,EACdkS,EAAItS,KAAK,KAAK,GAMjB,IAcIY,EAUAY,EAxBA9N,EAAM+d,EAAc,OAAKx9C,QAAQ97B,IAAI48B,KAAKd,SAE1Ch7C,EAAMw4F,EAAiB,UAAKx9C,QAAQqsC,KAAKvrC,KAAKd,SAElDrkD,OAAOmL,OAAO02F,EAAQI,GAEtBA,EAAkB,KAEdJ,EAAkB,WAAgBA,EAAkB,UAEpDA,EAAoB,cAAGjS,EAAciS,EAAoB,aAEzDA,EAAa,MAAWA,EAAa,KAIrCA,EAAmB,aAAG7Q,EAAa6Q,EAAmB,YAEtCA,EAAsB,cAEhB,iBAAf7V,aACV2W,EAAM,mCAKP,IAUU7wB,EAAOmB,EAAQqe,EAAQC,EAASrH,EAAQ/X,EAASqf,EAASoR,EAAQC,EAASpR,EAgBjFqR,EA1BAC,GAAQ,EAYZ,SAASC,IACR,IAAIpvF,EAAIg+E,EAAWhvF,OACnBi/F,EAAc,MAAI/vB,EAAQ,IAAIvxE,UAAUqT,GACxCiuF,EAAe,OAAIvQ,EAAS,IAAI7wF,WAAWmT,GAC3CiuF,EAAe,OAAI3X,EAAS,IAAIxpF,WAAWkT,GAC3CiuF,EAAe,OAAI5uB,EAAS,IAAI3yE,WAAWsT,GAC3CiuF,EAAgB,QAAItQ,EAAU,IAAI/wF,YAAYoT,GAC9CiuF,EAAgB,QAAI1vB,EAAU,IAAIvxE,YAAYgT,GAC9CiuF,EAAgB,QAAIrQ,EAAU,IAAInxF,aAAauT,GAC/CiuF,EAAgB,QAAIpQ,EAAU,IAAI9wF,aAAaiT,GAC/CiuF,EAAe,OAAIe,EAAS,IAAIphG,cAAcoS,GAC9CiuF,EAAgB,QAAIgB,EAAU,IAAIlhG,eAAeiS,EAClD,CAIA,IAAIqvF,EAAe,GAEfC,EAAa,GAIbC,EAAgB,GAiDhBC,EAAkB,EAElBC,EAAuB,KAEvBC,EAAwB,KA+B5B,SAASX,EAAMxV,GACV0U,EAAgB,SACnBA,EAAgB,QAAE1U,GAGnB9jF,EADA8jF,EAAO,WAAaA,EAAO,KAE3B4V,GAAQ,EAER5V,GAAQ,2CACR,IAAI/jF,EAAI,IAAI4iF,YAAYuG,aAAapF,GAErC,MADAyU,EAAmBx4F,GACbA,CACP,CAEA,IAUIm6F,EAnQgBhd,EAyPhBid,EAAgB,wCAEpB,SAASC,EAAUtN,GAClB,OAAOA,EAAS1G,WAAW+T,EAC5B,CAEA,SAAShB,EAAUrM,GAClB,OAAOA,EAAS1G,WAAW,UAC5B,CAUA,SAASiU,EAAUC,GAClB,IACC,GAAIA,GAAQJ,GAAkBvS,EAC7B,OAAO,IAAI1wF,WAAW0wF,GAEvB,GAAIgR,EACH,OAAOA,EAAW2B,GAEnB,KAAM,iDACP,CAAE,MAAOt6F,GACRs5F,EAAMt5F,EACP,CACD,CAwBA,SAASu6F,EAAuBC,EAAYC,EAASC,GACpD,OAvBD,SAA0BF,GACzB,IAAK7S,IAAekR,GAAsBC,GAAwB,CACjE,GAAoB,mBAATpgC,QAAwBygC,EAAUqB,GAC5C,OAAO9hC,MAAM8hC,EAAY,CACxBlR,YAAa,gBACX5rC,MAAKwpC,IACP,IAAKA,EAAa,GACjB,KAAM,uCAAyCsT,EAAa,IAE7D,OAAOtT,EAAsB,aAAG,IAC9BsC,OAAM,IAAM6Q,EAAUG,KAEzB,GAAI9B,EACH,OAAO,IAAIv8F,SAAQ,CAACC,EAASC,KAC5Bq8F,EAAU8B,GAAYtT,GAAY9qF,EAAQ,IAAInF,WAAWiwF,KAAY7qF,EAAO,GAIhF,CACA,OAAOF,QAAQC,UAAUshD,MAAK,IAAM28C,EAAUG,IAC/C,CAGQG,CAAiBH,GAAY98C,MAAKw7C,GACjCvW,YAAY8G,YAAYyP,EAAQuB,KACrC/8C,MAAK43C,GACAA,IACL53C,KAAKg9C,GAAU/8C,IACjB39C,EAAI,0CAA4C29C,GAChD27C,EAAM37C,EAAO,GAEf,CAwDA,SAASi9C,EAAqBC,GAC7B,KAAOA,EAAU3kG,OAAS,GACzB2kG,EAAUx0E,OAAVw0E,CAAkBrC,EAEpB,CA7GK4B,EAFLF,EAAiB,wBArQGhd,EAwQSgd,EAA5BA,EAvQI1B,EAAmB,WACfA,EAAmB,WAAEtb,EAAMsG,GAE5BA,EAAkBtG,GA0b1B,IAAI4d,EAAkB,GAElBC,EAAyB,EAczBC,EAAgB,EASpB,SAASC,EAAcC,GACtB7hG,KAAK6hG,OAASA,EACd7hG,KAAK0uE,IAAMmzB,EAAS,GACpB7hG,KAAK8hG,SAAW,SAASpjG,GACxB+wE,EAAQzvE,KAAK0uE,IAAM,IAAM,GAAKhwE,CAC/B,EACAsB,KAAK+hG,SAAW,WACf,OAAOtyB,EAAQzvE,KAAK0uE,IAAM,IAAM,EACjC,EACA1uE,KAAKgiG,eAAiB,SAASC,GAC9BxyB,EAAQzvE,KAAK0uE,IAAM,IAAM,GAAKuzB,CAC/B,EACAjiG,KAAKkiG,eAAiB,WACrB,OAAOzyB,EAAQzvE,KAAK0uE,IAAM,IAAM,EACjC,EACA1uE,KAAKmiG,WAAa,SAASC,GAC1BA,EAASA,EAAS,EAAI,EACtBhzB,EAAMpvE,KAAK0uE,IAAM,KAAO,GAAK0zB,CAC9B,EACApiG,KAAKqiG,WAAa,WACjB,OAAqC,GAA9BjzB,EAAMpvE,KAAK0uE,IAAM,KAAO,EAChC,EACA1uE,KAAKsiG,aAAe,SAASC,GAC5BA,EAAWA,EAAW,EAAI,EAC1BnzB,EAAMpvE,KAAK0uE,IAAM,KAAO,GAAK6zB,CAC9B,EACAviG,KAAKwiG,aAAe,WACnB,OAAqC,GAA9BpzB,EAAMpvE,KAAK0uE,IAAM,KAAO,EAChC,EACA1uE,KAAK5D,KAAO,SAASsC,EAAMujG,GAC1BjiG,KAAKyiG,iBAAiB,GACtBziG,KAAK8hG,SAASpjG,GACdsB,KAAKgiG,eAAeC,EACrB,EACAjiG,KAAKyiG,iBAAmB,SAASC,GAChCjzB,EAAQzvE,KAAK0uE,IAAM,KAAO,GAAKg0B,CAChC,EACA1iG,KAAK2iG,iBAAmB,WACvB,OAAOlzB,EAAQzvE,KAAK0uE,IAAM,KAAO,EAClC,EACA1uE,KAAK4iG,kBAAoB,WAExB,GADgBC,GAAuB7iG,KAAK+hG,YAE3C,OAAOtyB,EAAQzvE,KAAK6hG,SAAW,GAEhC,IAAIiB,EAAW9iG,KAAK2iG,mBACpB,OAAiB,IAAbG,EAAuBA,EACpB9iG,KAAK6hG,MACb,CACD,CASA,SAASkB,IACR,IAAIC,EAASrB,EACb,IAAKqB,EAEJ,OADAC,GAAY,GACL,EAER,IAAInhD,EAAO,IAAI8/C,EAAcoB,GAC7BlhD,EAAK2gD,iBAAiBO,GACtB,IAAIE,EAAaphD,EAAKigD,WACtB,IAAKmB,EAEJ,OADAD,GAAY,GACLD,EAER,IAAK,IAAItmG,EAAI,EAAGA,EAAI26F,UAAUx6F,OAAQH,IAAK,CAC1C,IAAIymG,EAAa9L,UAAU36F,GAC3B,GAAmB,IAAfymG,GAAoBA,IAAeD,EACtC,MAED,IAAIE,EAAoBthD,EAAK4sB,IAAM,GACnC,GAAI20B,GAAiBF,EAAYD,EAAYE,GAE5C,OADAH,GAAYE,GACLH,CAET,CAEA,OADAC,GAAYC,GACLF,CACR,CAEA,IAAIM,EAA+BP,EAE/BQ,GAA+BR,EAE/BS,GAA+BT,EAE/BU,GAA+BV,EA8B/BW,GAAqB,iHAWrBC,GAAoC,oBAAfr5B,YAA6B,IAAIA,YAAY,aAAU9tE,EAEhF,SAASonG,GAAkBC,EAAaz2E,EAAKs7D,GAI5C,IAFA,IAAIob,GADJ12E,KAAS,GACUs7D,EACfqb,EAAS32E,EACNy2E,EAAYE,MAAaA,GAAUD,MAAWC,EACrD,GAAIA,EAAS32E,EAAM,IAAMy2E,EAAY3jG,QAAUyjG,GAC9C,OAAOA,GAAYvrF,OAAOyrF,EAAY9jF,SAASqN,EAAK22E,IAGrD,IADA,IAAIpiC,EAAM,GACHv0C,EAAM22E,GAAQ,CACpB,IAAIC,EAAKH,EAAYz2E,KACrB,GAAW,IAAL42E,EAAN,CAIA,IAAIC,EAA0B,GAArBJ,EAAYz2E,KACrB,GAAkB,MAAR,IAAL42E,GAAL,CAIA,IAAIE,EAA0B,GAArBL,EAAYz2E,KAMrB,IAJC42E,EADiB,MAAR,IAALA,IACO,GAALA,IAAY,GAAKC,GAAM,EAAIC,GAEtB,EAALF,IAAW,GAAKC,GAAM,GAAKC,GAAM,EAAyB,GAArBL,EAAYz2E,MAE/C,MACRu0C,GAAO4vB,OAAOC,aAAawS,OACrB,CACN,IAAIG,EAAKH,EAAK,MACdriC,GAAO4vB,OAAOC,aAAa,MAAQ2S,GAAM,GAAI,MAAa,KAALA,EACtD,CAZA,MAFCxiC,GAAO4vB,OAAOC,cAAmB,GAALwS,IAAY,EAAIC,EAH7C,MAFCtiC,GAAO4vB,OAAOC,aAAawS,EAoB7B,CACA,OAAOriC,CACR,CAEA,SAASqlB,GAAatY,EAAKga,GAE1B,OADAha,KAAS,GACIk1B,GAAkBrzB,EAAQ7B,EAAKga,GAAkB,EAC/D,CAEA,IAAI0b,GAAW,CACdC,aAAS7nG,EACT+C,IAAK,WAGJ,OAFA6kG,GAASC,SAAW,EACV7c,EAAO4c,GAASC,QAAU,IAAM,EAE3C,EACAC,OAAQ,SAAS51B,GAEhB,OADUsY,GAAatY,EAExB,GAUD,SAASmX,GAAgBlkB,GAExB,IADA,IAAIrxB,EAAM,EACD5zC,EAAI,EAAGA,EAAIilE,EAAI9kE,SAAUH,EAAG,CACpC,IAAIic,EAAIgpD,EAAIszB,WAAWv4F,GACnBic,GAAK,IACR23B,IACU33B,GAAK,KACf23B,GAAO,EACG33B,GAAK,OAASA,GAAK,OAC7B23B,GAAO,IACL5zC,GAEF4zC,GAAO,CAET,CACA,OAAOA,CACR,CAEA,SAASi0D,GAAkB5iC,EAAK6iC,EAAMC,EAAQC,GAE7C,KAAMA,EAAkB,GAAI,OAAO,EAGnC,IAFA,IAAIC,EAFJF,KAAY,EAGRX,EAASW,EAASC,EAAkB,EAC/BhoG,EAAI,EAAGA,EAAIilE,EAAI9kE,SAAUH,EAAG,CACpC,IAAI0vF,EAAIzqB,EAAIszB,WAAWv4F,GAKvB,GAJI0vF,GAAK,OAASA,GAAK,QAEtBA,EAAI,QAAc,KAAJA,IAAa,IAAW,KAD7BzqB,EAAIszB,aAAav4F,IAGvB0vF,GAAK,IAAK,CACb,GAAIqY,GAAUX,EAAQ,MACtBU,EAAKC,MAAa,GAAKrY,CACxB,MAAO,GAAIA,GAAK,KAAM,CACrB,GAAIqY,EAAS,GAAKX,EAAQ,MAC1BU,EAAKC,MAAa,GAAK,IAAMrY,GAAK,EAClCoY,EAAKC,MAAa,GAAK,IAAU,GAAJrY,CAC9B,MAAO,GAAIA,GAAK,MAAO,CACtB,GAAIqY,EAAS,GAAKX,EAAQ,MAC1BU,EAAKC,MAAa,GAAK,IAAMrY,GAAK,GAClCoY,EAAKC,MAAa,GAAK,IAAMrY,GAAK,EAAI,GACtCoY,EAAKC,MAAa,GAAK,IAAU,GAAJrY,CAC9B,KAAO,CACN,GAAIqY,EAAS,GAAKX,EAAQ,MAC1BU,EAAKC,MAAa,GAAK,IAAMrY,GAAK,GAClCoY,EAAKC,MAAa,GAAK,IAAMrY,GAAK,GAAK,GACvCoY,EAAKC,MAAa,GAAK,IAAMrY,GAAK,EAAI,GACtCoY,EAAKC,MAAa,GAAK,IAAU,GAAJrY,CAC9B,CACD,CAEA,OADAoY,EAAKC,IAAW,GAAK,EACdA,EAASE,CACjB,CAEA,SAAS5e,GAAapkB,EAAKijC,EAAQF,GAClC,OAAOH,GAAkB5iC,EAAK4O,EAAQq0B,EAAQF,EAC/C,CA6BA,SAASG,GAAW5/F,GACnB,GAAU,OAANA,EACH,MAAO,OAER,IAAI+G,SAAW/G,EACf,MAAU,WAAN+G,GAAwB,UAANA,GAAuB,aAANA,EAC/B/G,EAAE8wC,WAEF,GAAK9wC,CAEd,CAUA,IAAI6/F,QAAmBtoG,EAEvB,SAASuoG,GAAiBr2B,GAGzB,IAFA,IAAIqxB,EAAM,GACNpnF,EAAI+1D,EACD6B,EAAO53D,IAAM,IACnBonF,GAAO+E,GAAiBv0B,EAAO53D,MAAQ,IAExC,OAAOonF,CACR,CAEA,IAAIiF,GAAuB,CAAC,EAExBC,GAAkB,CAAC,EAEnBC,GAAmB,CAAC,EAEpBC,GAAS,GAETC,GAAS,GAEb,SAASC,GAAsBppG,GAC9B,QAAIO,IAAcP,EACjB,MAAO,WAGR,IAAI6P,GADJ7P,EAAOA,EAAKwd,QAAQ,iBAAkB,MACzBw7E,WAAW,GACxB,OAAInpF,GAAKq5F,IAAUr5F,GAAKs5F,GAChB,IAAMnpG,EAEPA,CACR,CAEA,SAASqpG,GAAoBrpG,EAAMwa,GAElC,MAAO,CACN,CAFDxa,EAAOopG,GAAsBppG,IAEpB,WACP,OAAOwa,EAAK+kF,MAAMx7F,KAAMq3F,UACzB,GACCp7F,EACH,CAEA,SAASspG,GAAYC,EAAeC,GACnC,IAAIC,EAAaJ,GAAoBG,GAAW,SAASv5B,GACxDlsE,KAAK/D,KAAOwpG,EACZzlG,KAAKksE,QAAUA,EACf,IAAIvpB,EAAQ,IAAIlmD,MAAMyvE,GAASvpB,WACjBnmD,IAAVmmD,IACH3iD,KAAK2iD,MAAQ3iD,KAAK+1C,WAAa,KAAO4M,EAAMlpC,QAAQ,qBAAsB,IAE5E,IAUA,OATAisF,EAAWC,UAAYroG,OAAOumD,OAAO2hD,EAAcG,WACnDD,EAAWC,UAAUrnG,YAAconG,EACnCA,EAAWC,UAAU5vD,SAAW,WAC/B,YAAqBv5C,IAAjBwD,KAAKksE,QACDlsE,KAAK/D,KAEL+D,KAAK/D,KAAO,KAAO+D,KAAKksE,OAEjC,EACOw5B,CACR,CAEA,IAAIE,QAAeppG,EAEnB,SAASqpG,GAAkB35B,GAC1B,MAAM,IAAI05B,GAAa15B,EACxB,CA8CA,SAAS45B,GAAaC,EAASC,EAAoB7lG,EAAU,CAAC,GAC7D,KAAM,mBAAoB6lG,GACzB,MAAM,IAAI1pG,UAAU,2DAErB,IAAIL,EAAO+pG,EAAmB/pG,KAI9B,GAHK8pG,GACJF,GAAkB,SAAW5pG,EAAO,iDAEjCgpG,GAAgB1/F,eAAewgG,GAAU,CAC5C,GAAI5lG,EAAQ8lG,6BACX,OAEAJ,GAAkB,yBAA2B5pG,EAAO,UAEtD,CAGA,GAFAgpG,GAAgBc,GAAWC,SACpBd,GAAiBa,GACpBf,GAAqBz/F,eAAewgG,GAAU,CACjD,IAAIvE,EAAYwD,GAAqBe,UAC9Bf,GAAqBe,GAC5BvE,EAAU7vF,SAAQygF,GAAMA,KACzB,CACD,CAEA,SAAS8T,GAA4BjqG,EAAM+wB,EAAOm5E,GACjD,OAAQn5E,GACR,KAAK,EACJ,OAAOm5E,EAAS,SAA2BC,GAC1C,OAAOh3B,EAAMg3B,IAAY,EAC1B,EAAI,SAA2BA,GAC9B,OAAO71B,EAAO61B,IAAY,EAC3B,EAED,KAAK,EACJ,OAAOD,EAAS,SAA4BC,GAC3C,OAAOxX,EAAOwX,IAAY,EAC3B,EAAI,SAA4BA,GAC/B,OAAOvX,EAAQuX,IAAY,EAC5B,EAED,KAAK,EACJ,OAAOD,EAAS,SAA4BC,GAC3C,OAAO5e,EAAO4e,IAAY,EAC3B,EAAI,SAA4BA,GAC/B,OAAO32B,EAAQ22B,IAAY,EAC5B,EAED,KAAK,EACJ,OAAOD,EAAS,SAA4BC,GAC3C,OAAOlG,EAAOkG,GAAW,EAC1B,EAAI,SAA4BA,GAC/B,OAAOjG,EAAQiG,GAAW,EAC3B,EAED,QACC,MAAM,IAAI9pG,UAAU,yBAA2BL,GAEjD,CA6BA,SAASoqG,GAAiB3mG,GACzB,OAAQA,GACR,KAAK,EACJ,OAAO,EAER,KAAK,EACJ,OAAO,EAER,KAAK,EACJ,OAAO,EAER,KAAK,EACJ,OAAO,EAER,QACC,MAAM,IAAIpD,UAAU,sBAAwBoD,GAE9C,CAgDA,IAAI4mG,GAAgB,IAjBpB,WACCtmG,KAAKumG,UAAY,MAAE/pG,GACnBwD,KAAKwmG,SAAW,GAChBxmG,KAAKT,IAAM,SAASivE,GACnB,OAAOxuE,KAAKumG,UAAU/3B,EACvB,EACAxuE,KAAKqtC,SAAW,SAASo5D,GACxB,IAAIj4B,EAAKxuE,KAAKwmG,SAAS52D,OAAS5vC,KAAKumG,UAAU1pG,OAE/C,OADAmD,KAAKumG,UAAU/3B,GAAMi4B,EACdj4B,CACR,EACAxuE,KAAKyuE,KAAO,SAASD,GACpBxuE,KAAKumG,UAAU/3B,QAAMhyE,EACrBwD,KAAKwmG,SAAS1pG,KAAK0xE,EACpB,CACD,EAIA,SAASk4B,GAAeD,GACnBA,GAAUH,GAAcK,UAAY,KAAQL,GAAc/mG,IAAIknG,GAAQG,UACzEN,GAAc73B,KAAKg4B,EAErB,CA0BA,IAAII,GACMJ,IACHA,GACJZ,GAAkB,oCAAsCY,GAElDH,GAAc/mG,IAAIknG,GAAQppG,OAL/BwpG,GAOOxpG,IACT,OAAQA,GACR,UAAKb,EACJ,OAAO,EAER,KAAK,KACJ,OAAO,EAER,KAAK,EACJ,OAAO,EAER,KAAK,EACJ,OAAO,EAER,QAEE,OAAO8pG,GAAcj5D,SAAS,CAC7Bu5D,SAAU,EACVvpG,MAAOA,IAGV,EAIF,SAASypG,GAA2BV,GACnC,OAAOpmG,KAAmB,aAAEwnF,EAAO4e,IAAY,GAChD,CAoBA,SAASW,GAA0B9qG,EAAM+wB,GACxC,OAAQA,GACR,KAAK,EACJ,OAAO,SAASo5E,GACf,OAAOpmG,KAAmB,aAAE8uF,EAAQsX,IAAY,GACjD,EAED,KAAK,EACJ,OAAO,SAASA,GACf,OAAOpmG,KAAmB,aAAE+uF,EAAQqX,IAAY,GACjD,EAED,QACC,MAAM,IAAI9pG,UAAU,uBAAyBL,GAE/C,CA+JA,IAAI+qG,GAAqC,oBAAf18B,YAA6B,IAAIA,YAAY,iBAAc9tE,EAErF,SAASyqG,GAAcv4B,EAAKga,GAI3B,IAHA,IAAIqb,EAASr1B,EACTthD,EAAM22E,GAAU,EAChBmD,EAAS95E,EAAMs7D,EAAiB,IAC3Bt7D,GAAO85E,IAAWrY,EAAQzhE,IAAQ,MAAMA,EAEjD,IADA22E,EAAS32E,GAAO,GACHshD,EAAM,IAAMs4B,GAAc,OAAOA,GAAa5uF,OAAOm4D,EAAOxwD,SAAS2uD,IAAQ,EAAGq1B,IAAW,IAExG,IADA,IAAIpiC,EAAM,GACDjlE,EAAI,IAAKA,GAAKgsF,EAAiB,KAAMhsF,EAAG,CAChD,IAAIyqG,EAAWvY,EAAOlgB,EAAU,EAAJhyE,IAAU,GACtC,GAAgB,GAAZyqG,EAAe,MACnBxlC,GAAO4vB,OAAOC,aAAa2V,EAC5B,CACA,OAAOxlC,CACR,CAEA,SAASylC,GAAczlC,EAAKijC,EAAQF,GAInC,QAHwBloG,IAApBkoG,IACHA,EAAkB,YAEfA,EAAkB,EAAG,OAAO,EAIhC,IAFA,IAAI2C,EAAWzC,EACX0C,GAFJ5C,GAAmB,GAEkC,EAAb/iC,EAAI9kE,OAAa6nG,EAAkB,EAAI/iC,EAAI9kE,OAC1EH,EAAI,EAAGA,EAAI4qG,IAAmB5qG,EAAG,CACzC,IAAIyqG,EAAWxlC,EAAIszB,WAAWv4F,GAC9BkyF,EAAOgW,IAAW,GAAKuC,EACvBvC,GAAU,CACX,CAEA,OADAhW,EAAOgW,IAAW,GAAK,EAChBA,EAASyC,CACjB,CAEA,SAASE,GAAiB5lC,GACzB,OAAoB,EAAbA,EAAI9kE,MACZ,CAEA,SAAS2qG,GAAc94B,EAAKga,GAG3B,IAFA,IAAIhsF,EAAI,EACJilE,EAAM,KACDjlE,GAAKgsF,EAAiB,IAAI,CAClC,IAAI+e,EAAQjgB,EAAO9Y,EAAU,EAAJhyE,IAAU,GACnC,GAAa,GAAT+qG,EAAY,MAEhB,KADE/qG,EACE+qG,GAAS,MAAO,CACnB,IAAItD,EAAKsD,EAAQ,MACjB9lC,GAAO4vB,OAAOC,aAAa,MAAQ2S,GAAM,GAAI,MAAa,KAALA,EACtD,MACCxiC,GAAO4vB,OAAOC,aAAaiW,EAE7B,CACA,OAAO9lC,CACR,CAEA,SAAS+lC,GAAc/lC,EAAKijC,EAAQF,GAKnC,QAHwBloG,IAApBkoG,IACHA,EAAkB,YAEfA,EAAkB,EAAG,OAAO,EAGhC,IAFA,IAAI2C,EALJzC,KAAY,EAMRb,EAASsD,EAAW3C,EAAkB,EACjChoG,EAAI,EAAGA,EAAIilE,EAAI9kE,SAAUH,EAAG,CACpC,IAAIyqG,EAAWxlC,EAAIszB,WAAWv4F,GAO9B,GANIyqG,GAAY,OAASA,GAAY,QAEpCA,EAAW,QAAqB,KAAXA,IAAoB,IAAuB,KAD3CxlC,EAAIszB,aAAav4F,IAGvC8qF,EAAOod,IAAW,GAAKuC,GACvBvC,GAAU,GACG,EAAIb,EAAQ,KAC1B,CAEA,OADAvc,EAAOod,IAAW,GAAK,EAChBA,EAASyC,CACjB,CAEA,SAASM,GAAiBhmC,GAEzB,IADA,IAAIrxB,EAAM,EACD5zC,EAAI,EAAGA,EAAIilE,EAAI9kE,SAAUH,EAAG,CACpC,IAAIyqG,EAAWxlC,EAAIszB,WAAWv4F,GAC1ByqG,GAAY,OAASA,GAAY,SAASzqG,EAC9C4zC,GAAO,CACR,CACA,OAAOA,CACR,CA4FA,SAASs3D,GAAsB7B,EAAS8B,GACvC,IAPIn5B,EACAo5B,EAMAl7D,EAAOq4D,GAAgBc,GAI3B,YAHIvpG,IAAcowC,GACjBi5D,GAAkBgC,EAAY,sBAR3BC,EAAK/C,GADLr2B,EAAMq5B,GASwDhC,IAPlEpiB,GAAMjV,GACCo5B,IAQAl7D,CACR,CAiBA,IAAIo7D,GAAgB,CAAC,EAErB,SAASC,GAAkBC,GAC1B,IAAIC,EAASH,GAAcE,GAC3B,YAAe1rG,IAAX2rG,EACIpD,GAAiBmD,GAElBC,CACR,CAEA,IAAIC,GAAsB,GAsB1B,SAASC,KACR,MAAyB,iBAAdC,WACHA,WAGAC,SACJ,cAFG,EAGR,CAyBA,IAAIC,GAA0B,GAiF1BC,GAAe,CAAC,EA0DpB,SAASC,GAAeh6B,GACvB,OAAOe,EAAQf,IAAQ,GAA6B,WAAxB8Y,EAAO9Y,EAAM,IAAM,EAChD,CAgBA,SAASi6B,GAAWC,GACnB,OAAOA,EAAO,GAAM,IAAMA,EAAO,KAAQ,GAAKA,EAAO,KAAQ,EAC9D,CAEA,IAoHIC,GApHAC,GAA6B,CAAE,EAAG,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAEjFC,GAAgC,CAAE,EAAG,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAExF,SAASC,GAAaC,GAIrB,OAHWN,GAAWM,EAAKnS,eACMgS,GAA6BC,IAC/BE,EAAKlS,YAAckS,EAAKjS,UAAY,CAEpE,CAsDA,SAASkS,GAAgBvnC,GACxB,IAAIjiE,EAAOmmF,GAAgBlkB,GAAO,EAC9Bo+B,EAAMja,GAAQpmF,GAElB,OADIqgG,GAAKha,GAAapkB,EAAKo+B,EAAKrgG,GACzBqgG,CACR,CA6DA,SAASoJ,GAA0BzpG,GAClC,IAAIwR,EAAIg+E,EAAWhvF,OACnB,IAGC,OAFAgvF,EAAWuM,KAAK/7F,EAAOwR,EAAEpL,WAAa,QAAU,IAChDw6F,IACO,CACR,CAAE,MAAO55F,GAAI,CACd,CAjBCmiG,GADGnJ,EACmB,KACrB,IAAI1zF,EAAIygF,QAAQgL,SAChB,OAAc,IAAPzrF,EAAE,GAAWA,EAAE,GAAK,GAAG,EAEH,IAAM84C,YAAYd,MAmC/C,IAAIolD,GAAM,CAAC,EAMX,SAASC,KACR,IAAKA,GAAcj9F,QAAS,CAC3B,IACIpP,EAAM,CACT,KAAQ,WACR,QAAW,WACX,KAAQ,IACR,IAAO,IACP,KAAQ,iBACR,MAP+B,iBAAb8K,WAAyBA,UAAUuwF,WAAavwF,UAAUuwF,UAAU,IAAM,KAAK5+E,QAAQ,IAAK,KAAO,SAQrH,EAbKyzE,GAAe,kBAerB,IAAK,IAAIjgE,KAAKm8E,QACE5sG,IAAX4sG,GAAIn8E,UAAyBjwB,EAAIiwB,GAASjwB,EAAIiwB,GAAKm8E,GAAIn8E,GAE5D,IAAI7gB,EAAU,GACd,IAAK,IAAI6gB,KAAKjwB,EACboP,EAAQtP,KAAKmwB,EAAI,IAAMjwB,EAAIiwB,IAE5Bo8E,GAAcj9F,QAAUA,CACzB,CACA,OAAOi9F,GAAcj9F,OACtB,CAmDA,IAAIk9F,GAAmB,CAAE,KAAM,GAAI,IA0CnC,IAAIC,GAAkB,CAAE,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAEhEC,GAAqB,CAAE,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAqCvE,SAASC,GAAU19F,EAAG29F,EAASlmG,EAAQmmG,GACtC,IAAIC,EAAUpiB,EAAOmiB,EAAK,KAAO,GAC7BV,EAAO,CACVY,OAAQriB,EAAOmiB,IAAO,GACtBG,OAAQtiB,EAAOmiB,EAAK,IAAM,GAC1BI,QAASviB,EAAOmiB,EAAK,IAAM,GAC3BK,QAASxiB,EAAOmiB,EAAK,KAAO,GAC5BM,OAAQziB,EAAOmiB,EAAK,KAAO,GAC3BO,QAAS1iB,EAAOmiB,EAAK,KAAO,GAC5BQ,QAAS3iB,EAAOmiB,EAAK,KAAO,GAC5BS,QAAS5iB,EAAOmiB,EAAK,KAAO,GAC5BU,SAAU7iB,EAAOmiB,EAAK,KAAO,GAC7BW,UAAW9iB,EAAOmiB,EAAK,KAAO,GAC9BC,QAASA,EAAU5iB,GAAa4iB,GAAW,IAExCW,EAAUvjB,GAAaxjF,GACvBgnG,EAAoB,CACvB,KAAM,uBACN,KAAM,WACN,KAAM,WACN,KAAM,KACN,KAAM,cACN,KAAM,QACN,KAAM,WACN,KAAM,WACN,KAAM,WACN,MAAO,KACP,MAAO,KACP,MAAO,WACP,MAAO,WACP,MAAO,KACP,MAAO,KACP,MAAO,KACP,MAAO,KACP,MAAO,KACP,MAAO,KACP,MAAO,KACP,MAAO,KACP,MAAO,KACP,MAAO,KACP,MAAO,KACP,MAAO,KACP,MAAO,KACP,MAAO,KACP,MAAO,MAER,IAAK,IAAIzjD,KAAQyjD,EAChBD,EAAUA,EAAQ9wF,QAAQ,IAAIE,OAAOotC,EAAM,KAAMyjD,EAAkBzjD,IAEpE,IAAI0jD,EAAW,CAAE,SAAU,SAAU,UAAW,YAAa,WAAY,SAAU,YAC/EC,EAAS,CAAE,UAAW,WAAY,QAAS,QAAS,MAAO,OAAQ,OAAQ,SAAU,YAAa,UAAW,WAAY,YAC7H,SAASC,EAAiBttG,EAAOutG,EAAQC,GAExC,IADA,IAAIlpC,EAAsB,iBAATtkE,EAAoBA,EAAM04C,WAAa14C,GAAS,GAC1DskE,EAAI9kE,OAAS+tG,GACnBjpC,EAAMkpC,EAAU,GAAKlpC,EAEtB,OAAOA,CACR,CACA,SAASmpC,EAAaztG,EAAOutG,GAC5B,OAAOD,EAAiBttG,EAAOutG,EAAQ,IACxC,CACA,SAASG,EAAaC,EAAOC,GAC5B,SAASC,EAAI7tG,GACZ,OAAOA,EAAQ,GAAK,EAAIA,EAAQ,EAAI,EAAI,CACzC,CACA,IAAI8tG,EAMJ,OALmE,KAA9DA,EAAUD,EAAIF,EAAMlU,cAAgBmU,EAAMnU,iBACe,KAAxDqU,EAAUD,EAAIF,EAAMjU,WAAakU,EAAMlU,eAC3CoU,EAAUD,EAAIF,EAAMhU,UAAYiU,EAAMjU,YAGjCmU,CACR,CACA,SAASC,EAAsBC,GAC9B,OAAQA,EAAUjS,UAClB,KAAK,EACJ,OAAO,IAAIx2C,KAAKyoD,EAAUvU,cAAgB,EAAG,GAAI,IAElD,KAAK,EACJ,OAAOuU,EAER,KAAK,EACJ,OAAO,IAAIzoD,KAAKyoD,EAAUvU,cAAe,EAAG,GAE7C,KAAK,EACJ,OAAO,IAAIl0C,KAAKyoD,EAAUvU,cAAe,EAAG,GAE7C,KAAK,EACJ,OAAO,IAAIl0C,KAAKyoD,EAAUvU,cAAe,EAAG,GAE7C,KAAK,EACJ,OAAO,IAAIl0C,KAAKyoD,EAAUvU,cAAgB,EAAG,GAAI,IAElD,KAAK,EACJ,OAAO,IAAIl0C,KAAKyoD,EAAUvU,cAAgB,EAAG,GAAI,IAEnD,CACA,SAASwU,EAAiBrC,GACzB,IAAIsC,EArIN,SAAiBtC,EAAMuC,GAEtB,IADA,IAAIC,EAAU,IAAI7oD,KAAKqmD,EAAK1P,WACrBiS,EAAO,GAAG,CAChB,IAAIE,EAAO/C,GAAW8C,EAAQ3U,eAC1B6U,EAAeF,EAAQ1U,WACvB6U,GAAsBF,EAAOnC,GAAkBC,IAAoBmC,GACvE,KAAIH,EAAOI,EAAqBH,EAAQzU,WAWvC,OADAyU,EAAQjS,QAAQiS,EAAQzU,UAAYwU,GAC7BC,EAVPD,GAAQI,EAAqBH,EAAQzU,UAAY,EACjDyU,EAAQjS,QAAQ,GACZmS,EAAe,GAClBF,EAAQhS,SAASkS,EAAe,IAEhCF,EAAQhS,SAAS,GACjBgS,EAAQ/R,YAAY+R,EAAQ3U,cAAgB,GAM/C,CACA,OAAO2U,CACR,CAgHiBI,CAAQ,IAAIjpD,KAAKqmD,EAAKiB,QAAU,KAAM,EAAG,GAAIjB,EAAKmB,SAC7D0B,EAAoB,IAAIlpD,KAAK2oD,EAASzU,cAAe,EAAG,GACxDiV,EAAoB,IAAInpD,KAAK2oD,EAASzU,cAAgB,EAAG,EAAG,GAC5DkV,EAAyBZ,EAAsBU,GAC/CG,EAAyBb,EAAsBW,GACnD,OAAIhB,EAAaiB,EAAwBT,IAAa,EACjDR,EAAakB,EAAwBV,IAAa,EAC9CA,EAASzU,cAAgB,EAE1ByU,EAASzU,cAEVyU,EAASzU,cAAgB,CACjC,CACA,IAAIoV,EAAoB,CACvB,KAAM,SAASjD,GACd,OAAOwB,EAASxB,EAAKkB,SAASzjD,UAAU,EAAG,EAC5C,EACA,KAAM,SAASuiD,GACd,OAAOwB,EAASxB,EAAKkB,QACtB,EACA,KAAM,SAASlB,GACd,OAAOyB,EAAOzB,EAAKgB,QAAQvjD,UAAU,EAAG,EACzC,EACA,KAAM,SAASuiD,GACd,OAAOyB,EAAOzB,EAAKgB,OACpB,EACA,KAAM,SAAShB,GAEd,OAAO6B,GADI7B,EAAKiB,QAAU,MACC,IAAM,EAAG,EACrC,EACA,KAAM,SAASjB,GACd,OAAO6B,EAAa7B,EAAKe,QAAS,EACnC,EACA,KAAM,SAASf,GACd,OAAO0B,EAAiB1B,EAAKe,QAAS,EAAG,IAC1C,EACA,KAAM,SAASf,GACd,OAAOqC,EAAiBrC,GAAMlzD,WAAW2Q,UAAU,EACpD,EACA,KAAM,SAASuiD,GACd,OAAOqC,EAAiBrC,EACzB,EACA,KAAM,SAASA,GACd,OAAO6B,EAAa7B,EAAKc,QAAS,EACnC,EACA,KAAM,SAASd,GACd,IAAIkD,EAAalD,EAAKc,QAEtB,OADkB,GAAdoC,EAAiBA,EAAa,GAAaA,EAAa,KAAIA,GAAc,IACvErB,EAAaqB,EAAY,EACjC,EACA,KAAM,SAASlD,GACd,OAAO6B,EAAa7B,EAAKe,QAlM5B,SAAkB/qE,EAAOzpB,GAExB,IADA,IAAI4S,EAAM,EACD1rB,EAAI,EAAGA,GAAK8Y,EAAO4S,GAAO6W,EAAMviC,MACzC,OAAO0rB,CACR,CA8LsCgkF,CAASzD,GAAWM,EAAKiB,QAAU,MAAQX,GAAkBC,GAAoBP,EAAKgB,OAAS,GAAI,EACvI,EACA,KAAM,SAAShB,GACd,OAAO6B,EAAa7B,EAAKgB,OAAS,EAAG,EACtC,EACA,KAAM,SAAShB,GACd,OAAO6B,EAAa7B,EAAKa,OAAQ,EAClC,EACA,KAAM,WACL,MAAO,IACR,EACA,KAAM,SAASb,GACd,OAAIA,EAAKc,SAAW,GAAKd,EAAKc,QAAU,GAChC,KAED,IACR,EACA,KAAM,SAASd,GACd,OAAO6B,EAAa7B,EAAKY,OAAQ,EAClC,EACA,KAAM,WACL,MAAO,IACR,EACA,KAAM,SAASZ,GACd,OAAOA,EAAKkB,SAAW,CACxB,EACA,KAAM,SAASlB,GACd,IAAIuC,EAAOvC,EAAKmB,QAAU,EAAInB,EAAKkB,QACnC,OAAOW,EAAa7iG,KAAKyc,MAAM8mF,EAAO,GAAI,EAC3C,EACA,KAAM,SAASvC,GACd,IAAI1mE,EAAMt6B,KAAKyc,OAAOukF,EAAKmB,QAAU,GAAKnB,EAAKkB,QAAU,GAAK,GAAK,GAInE,IAHKlB,EAAKkB,QAAU,IAAMlB,EAAKmB,QAAU,GAAK,GAAK,GAClD7nE,IAEIA,GAME,GAAW,IAAPA,EAAW,CACrB,IAAI8pE,GAAQpD,EAAKkB,QAAU,IAAMlB,EAAKmB,SAAW,EACrC,GAARiC,GAAsB,GAARA,GAAc1D,GAAWM,EAAKiB,WAAW3nE,EAAM,EAClE,MATU,CACTA,EAAM,GACN,IAAI+pE,GAASrD,EAAKkB,QAAU,EAAIlB,EAAKmB,QAAU,GAAK,GACvC,GAATkC,GAAuB,GAATA,GAAc3D,GAAWM,EAAKiB,QAAU,IAAM,KAC/D3nE,GAEF,CAIA,OAAOuoE,EAAavoE,EAAK,EAC1B,EACA,KAAM,SAAS0mE,GACd,OAAOA,EAAKkB,OACb,EACA,KAAM,SAASlB,GACd,IAAIuC,EAAOvC,EAAKmB,QAAU,GAAKnB,EAAKkB,QAAU,GAAK,EACnD,OAAOW,EAAa7iG,KAAKyc,MAAM8mF,EAAO,GAAI,EAC3C,EACA,KAAM,SAASvC,GACd,OAAQA,EAAKiB,QAAU,MAAMn0D,WAAW2Q,UAAU,EACnD,EACA,KAAM,SAASuiD,GACd,OAAOA,EAAKiB,QAAU,IACvB,EACA,KAAM,SAASjB,GACd,IAAIsD,EAAMtD,EAAKqB,UACXkC,EAAQD,GAAO,EAGnB,OADAA,GADAA,EAAMtkG,KAAK2a,IAAI2pF,GAAO,IACV,GAAK,IAAMA,EAAM,IACrBC,EAAQ,IAAM,KAAOjb,OAAO,OAASgb,GAAK33F,OAAO,EAC1D,EACA,KAAM,SAASq0F,GACd,OAAOA,EAAKW,OACb,EACA,KAAM,WACL,MAAO,GACR,GAGD,IAAK,IAAI7iD,KADTwjD,EAAUA,EAAQ9wF,QAAQ,MAAO,QAChByyF,EACZ3B,EAAQnQ,SAASrzC,KACpBwjD,EAAUA,EAAQ9wF,QAAQ,IAAIE,OAAOotC,EAAM,KAAMmlD,EAAkBnlD,GAAMkiD,KAI3E,IAlP2BwD,EACvBn8D,EACAo8D,EAMuBztE,EAAO/+B,EA0O9B4uD,IAAoC,EAjPpCxe,EAA4Bu1C,GADL4mB,EAiP3BlC,EAAUA,EAAQ9wF,QAAQ,QAAS,MAhPwB,EAErC8qF,GAAkBkI,EADpCC,EAAU,IAAIttG,MAAMkxC,GACkC,EAAGo8D,EAAQ7vG,QAE9D6vG,GA8OP,OAAI59C,EAAMjyD,OAAS6sG,EACX,GA5OmBzqE,EA8OR6vB,EA9Oe5uD,EA8OR6L,EA7O1BqjE,EAAMlwE,IAAI+/B,EAAO/+B,IAAW,GA8OrB4uD,EAAMjyD,OAAS,EACvB,CAMA,IAAI8vG,GAAkB,GAEtB,SAASC,GAAkBC,GAC1B,IAAIp4E,EAAOk4E,GAAgBE,GAK3B,OAJKp4E,IACAo4E,GAAWF,GAAgB9vG,SAAQ8vG,GAAgB9vG,OAASgwG,EAAU,GAC1EF,GAAgBE,GAAWp4E,EAAO2rE,EAAU7gG,IAAIstG,IAE1Cp4E,CACR,EAv/CA,WAEC,IADA,IAAIq4E,EAAQ,IAAI1tG,MAAM,KACb1C,EAAI,EAAGA,EAAI,MAAOA,EAC1BowG,EAAMpwG,GAAK60F,OAAOC,aAAa90F,GAEhCooG,GAAmBgI,CACpB,CAm/CAC,GAEAnH,GAAezG,EAAqB,aAAIoG,GAAY9oG,MAAO,gBAE3C0iG,EAAsB,cAAIoG,GAAY9oG,MAAO,iBA1tC5D6pG,GAAcC,UAAUzpG,KAAK,CAC5BO,WAAOb,GACL,CACFa,MAAO,MACL,CACFA,OAAO,GACL,CACFA,OAAO,IAERipG,GAAcK,SAAWL,GAAcC,UAAU1pG,OACjDsiG,EAA4B,oBArB7B,WAEC,IADA,IAAI96D,EAAQ,EACH3nC,EAAI4pG,GAAcK,SAAUjqG,EAAI4pG,GAAcC,UAAU1pG,SAAUH,OACvCF,IAA/B8pG,GAAcC,UAAU7pG,MACzB2nC,EAGJ,OAAOA,CACR,EAiuCA,IAqqEIm6D,GArqEAwO,GAAc,CACjB,kBA3zDD,SAA4Bt+B,GAC3B,IAAI5sB,EAAO,IAAI8/C,EAAclzB,GAQ7B,OAPK5sB,EAAKugD,eACTvgD,EAAKqgD,YAAW,GAChBT,KAED5/C,EAAKwgD,cAAa,GAClBb,EAAgB3kG,KAAKglD,GACrBmrD,GAAoCnrD,EAAK+/C,QAClC//C,EAAK8gD,mBACb,EAkzDC,gBA9yDD,WACCsK,GAAU,GACV,IAAIprD,EAAO2/C,EAAgB7xD,MAC3Bu9D,GAAoCrrD,EAAK+/C,QACzCF,EAAgB,CACjB,EA0yDC,4BAA+B2B,EAC/B,4BAA+BC,GAC/B,4BAA+BC,GAC/B,4BAA+BC,GAC/B,cA9sDD,WACC,IAAI3hD,EAAO2/C,EAAgB7xD,MACtBkS,GACJm+C,EAAM,yBAEP,IAAIvxB,EAAM5sB,EAAK+/C,OAQf,MAPK//C,EAAK0gD,iBACTf,EAAgB3kG,KAAKglD,GACrBA,EAAKwgD,cAAa,GAClBxgD,EAAKqgD,YAAW,GAChBT,KAEDC,EAAgBjzB,CAEjB,EAisDC,YA/rDD,SAAsBA,EAAKhwE,EAAMujG,GAKhC,MAJW,IAAIL,EAAclzB,GACxBtyE,KAAKsC,EAAMujG,GAEhBP,IADAC,EAAgBjzB,CAGjB,EA0rDC,0BAxrDD,WACC,OAAOgzB,CACR,EAurDC,QAnrDD,SAAkB+E,EAAQ0B,GACzBlI,EAAMyD,GACP,EAkrDC,kBA7vDD,SAA4Bh1B,GAI3B,MAHKizB,IACJA,EAAgBjzB,GAEXizB,CACP,EAyvDC,kBApnDD,SAA4ByL,EAAItc,EAAKuT,GAEpC,OADAD,GAASC,QAAUA,EACZ,CACR,EAknDC,kBAhnDD,SAA4B+I,EAAIpoD,GAAM,EAinDrC,iBAtjDD,SAA2BA,EAAKtlD,GAAO,EAujDtC,qBArjDD,SAA+B0tG,EAAIC,EAAMhpE,GAAQ,EAsjDhD,gBApjDD,SAA0B+oE,EAAI1gE,EAAI23D,GAEjC,OADAD,GAASC,QAAUA,EACZ,CACR,EAkjDC,kBAhjDD,SAA4BxgB,EAAM7+B,GAAM,EAijDvC,kBA/iDD,SAA4BsoD,EAAOzpB,EAAM1wD,GAAO,EAgjD/C,qBA9iDD,SAA+Bm6E,EAAOzpB,EAAM7+B,EAAKikC,GAAQ,EA+iDxD,iBA7iDD,SAA2BqkB,EAAOzpB,EAAMoF,EAAOob,GAC9CD,GAASC,QAAUA,CACpB,EA4iDC,qBA1iDD,SAA+BiJ,EAAOzpB,EAAM7+B,EAAKuoD,GAAU,EA2iD1D,gBAziDD,SAA0B1pB,GAAO,EA0iDhC,iBAxiDD,SAA2BA,EAAM7+B,GAAM,EAyiDtC,mBAviDD,SAA6BsoD,EAAOzpB,EAAMoF,GAAQ,EAwiDjD,wBAt2CD,SAAkCukB,EAAevxG,EAAMyD,EAAM+tG,EAAUC,GACtEzxG,EAAO8oG,GAAiB9oG,GACxB,IAAI+wB,EAAQq5E,GAAiB3mG,GACzBiuG,GAAuC,GAAtB1xG,EAAKU,QAAQ,KAC9BgxG,IACHD,GAAY,IAAM,KAAO,IAE1B5H,GAAa0H,EAAe,CAC3BvxG,KAAMA,EACN,aAAgB,SAASoB,GACxB,OAAOA,CACR,EACA,WAAc,SAASuwG,EAAavwG,GACnC,GAAoB,iBAATA,GAAqC,iBAATA,EACtC,MAAM,IAAIf,UAAU,mBAAqBuoG,GAAWxnG,GAAS,QAAU2C,KAAK/D,MAE7E,GAAIoB,EAAQowG,GAAYpwG,EAAQqwG,EAC/B,MAAM,IAAIpxG,UAAU,qBAAuBuoG,GAAWxnG,GAAS,wDAA0DpB,EAAO,wCAA0CwxG,EAAW,KAAOC,EAAW,MAExM,OAAOrwG,CACR,EACA,eAAkB,EAClB,qBAAwB6oG,GAA4BjqG,EAAM+wB,GAAQ2gF,GAClEE,mBAAoB,MAEtB,EA80CC,sBAzzCD,SAAgC9H,EAAS9pG,EAAMyD,EAAMouG,EAAWC,GAC/D,IAAI/gF,EAAQq5E,GAAiB3mG,GAE7BomG,GAAaC,EAAS,CACrB9pG,KAFDA,EAAO8oG,GAAiB9oG,GAGvB,aAAgB,SAAS+xG,GACxB,QAASA,CACV,EACA,WAAc,SAASJ,EAAa5gG,GACnC,OAAOA,EAAI8gG,EAAYC,CACxB,EACA,eAAkB,EAClB,qBAAwB,SAAS3H,GAChC,IAAI5B,EACJ,GAAa,IAAT9kG,EACH8kG,EAAOp1B,OACD,GAAa,IAAT1vE,EACV8kG,EAAO5V,MACD,IAAa,IAATlvF,EAGV,MAAM,IAAIpD,UAAU,8BAAgCL,GAFpDuoG,EAAOhd,CAGR,CACA,OAAOxnF,KAAmB,aAAEwkG,EAAK4B,IAAYp5E,GAC9C,EACA6gF,mBAAoB,MAEtB,EA+xCC,uBAxsCD,SAAiC9H,EAAS9pG,GAEzC6pG,GAAaC,EAAS,CACrB9pG,KAFDA,EAAO8oG,GAAiB9oG,GAGvB,aAAgB,SAASwqG,GACxB,IAAIqB,EAAKjB,GAAcJ,GAEvB,OADAC,GAAeD,GACRqB,CACR,EACA,WAAc,SAAS8F,EAAavwG,GACnC,OAAOwpG,GAAexpG,EACvB,EACA,eAAkB,EAClB,qBAAwBypG,GACxB+G,mBAAoB,MAEtB,EAyrCC,uBAtqCD,SAAiC9H,EAAS9pG,EAAMyD,GAC/C,IAAIstB,EAAQq5E,GAAiB3mG,GAE7BomG,GAAaC,EAAS,CACrB9pG,KAFDA,EAAO8oG,GAAiB9oG,GAGvB,aAAgB,SAASoB,GACxB,OAAOA,CACR,EACA,WAAc,SAASuwG,EAAavwG,GACnC,OAAOA,CACR,EACA,eAAkB,EAClB,qBAAwB0pG,GAA0B9qG,EAAM+wB,GACxD6gF,mBAAoB,MAEtB,EAwpCC,yBAtpCD,SAAmCL,EAAevxG,EAAMyD,EAAM+tG,EAAUC,GACvEzxG,EAAO8oG,GAAiB9oG,IACN,IAAdyxG,IACHA,EAAW,YAEZ,IAAI1gF,EAAQq5E,GAAiB3mG,GACzBuuG,EAAe5wG,GAASA,EAC5B,GAAiB,IAAbowG,EAAgB,CACnB,IAAIS,EAAW,GAAK,EAAIxuG,EACxBuuG,EAAe5wG,GAASA,GAAS6wG,IAAaA,CAC/C,CACA,IAAIP,EAAiB1xG,EAAKm+F,SAAS,YAcnC0L,GAAa0H,EAAe,CAC3BvxG,KAAMA,EACN,aAAgBgyG,EAChB,WAdGN,EACU,SAASC,EAAavwG,GAElC,OADuB2C,KAAK/D,KACrBoB,IAAU,CAClB,EAEa,SAASuwG,EAAavwG,GAElC,OADuB2C,KAAK/D,KACrBoB,CACR,EAMA,eAAkB,EAClB,qBAAwB6oG,GAA4BjqG,EAAM+wB,EAAoB,IAAbygF,GACjEI,mBAAoB,MAEtB,EAsnCC,6BApnCD,SAAuC9H,EAASoI,EAAelyG,GAC9D,IACImyG,EADc,CAAEvwG,UAAWD,WAAYG,WAAYD,YAAaE,WAAYE,YAAaP,aAAcM,aAAca,cAAeG,gBACnHkvG,GACrB,SAASE,EAAiB5H,GAEzB,IAAIjC,EAAO/0B,EACP/vE,EAAO8kG,GAFXiC,IAAmB,KAEQ,GACvB9nG,EAAO6lG,EAAKiC,EAAS,IAAM,GAC/B,OAAO,IAAI2H,EAAG5J,EAAKtkG,OAAQvB,EAAMe,EAClC,CAEAomG,GAAaC,EAAS,CACrB9pG,KAFDA,EAAO8oG,GAAiB9oG,GAGvB,aAAgBoyG,EAChB,eAAkB,EAClB,qBAAwBA,GACtB,CACFpI,8BAA8B,GAEhC,EAkmCC,4BAhmCD,SAAsCF,EAAS9pG,GAE9C,IAAIqyG,EAA2B,iBAD/BryG,EAAO8oG,GAAiB9oG,IAExB6pG,GAAaC,EAAS,CACrB9pG,KAAMA,EACN,aAAgB,SAASoB,GACxB,IAEIskE,EAFA9kE,EAAS4yE,EAAQpyE,IAAU,GAC3BkxG,EAAUlxG,EAAQ,EAEtB,GAAIixG,EAEH,IADA,IAAIE,EAAiBD,EACZ7xG,EAAI,EAAGA,GAAKG,IAAUH,EAAG,CACjC,IAAI+xG,EAAiBF,EAAU7xG,EAC/B,GAAIA,GAAKG,GAA0C,GAAhC0zE,EAAOk+B,IAAmB,GAAS,CACrD,IACIC,EAAgB1nB,GAAawnB,EADnBC,EAAiBD,QAEnBhyG,IAARmlE,EACHA,EAAM+sC,GAEN/sC,GAAO4vB,OAAOC,aAAa,GAC3B7vB,GAAO+sC,GAERF,EAAiBC,EAAiB,CACnC,CACD,KACM,CACN,IAAI/1F,EAAI,IAAItZ,MAAMvC,GAClB,IAASH,EAAI,EAAGA,EAAIG,IAAUH,EAC7Bgc,EAAEhc,GAAK60F,OAAOC,aAAajhB,EAAOg+B,EAAU7xG,IAAM,IAEnDilE,EAAMjpD,EAAE9R,KAAK,GACd,CAEA,OADA+8E,GAAMtmF,GACCskE,CACR,EACA,WAAc,SAASisC,EAAavwG,GAInC,IAAIR,EAHAQ,aAAiBsI,cACpBtI,EAAQ,IAAIO,WAAWP,IAGxB,IAAIsxG,EAAsC,iBAATtxG,EAC3BsxG,GAAuBtxG,aAAiBO,YAAcP,aAAiBuxG,mBAAqBvxG,aAAiBQ,WAClHgoG,GAAkB,yCAGlBhpG,EADGyxG,GAAmBK,EACb9oB,GAAgBxoF,GAEhBA,EAAMR,OAEhB,IAAIgyG,EAAO/oB,GAAQ,EAAIjpF,EAAS,GAC5B6xE,EAAMmgC,EAAO,EAGjB,GAFAngC,KAAS,EACTe,EAAQo/B,IAAS,GAAKhyG,EAClByxG,GAAmBK,EACtB5oB,GAAa1oF,EAAOqxE,EAAK7xE,EAAS,QAElC,GAAI8xG,EACH,IAAK,IAAIjyG,EAAI,EAAGA,EAAIG,IAAUH,EAAG,CAChC,IAAIoyG,EAAWzxG,EAAM43F,WAAWv4F,GAC5BoyG,EAAW,MACdnrB,GAAMjV,GACNm3B,GAAkB,2DAEnBt1B,EAAO7B,EAAMhyE,IAAM,GAAKoyG,CACzB,MAEA,IAASpyG,EAAI,EAAGA,EAAIG,IAAUH,EAC7B6zE,EAAO7B,EAAMhyE,IAAM,GAAKW,EAAMX,GAOjC,OAHoB,OAAhBkxG,GACHA,EAAY9wG,KAAK6mF,GAAOkrB,GAElBA,CACR,EACA,eAAkB,EAClB,qBAAwB/H,GACxB+G,mBAAoB,SAASn/B,GAC5BiV,GAAMjV,EACP,GAEF,EA+gCC,6BAr7BD,SAAuCq3B,EAASgJ,EAAU9yG,GAEzD,IAAI+yG,EAAcC,EAAcC,EAASC,EAAgBniF,EADzD/wB,EAAO8oG,GAAiB9oG,GAEP,IAAb8yG,GACHC,EAAe/H,GACfgI,EAAe7H,GACf+H,EAAiB5H,GACjB2H,EAAU,IAAMrgB,EAChB7hE,EAAQ,GACe,IAAb+hF,IACVC,EAAexH,GACfyH,EAAevH,GACfyH,EAAiBxH,GACjBuH,EAAU,IAAMz/B,EAChBziD,EAAQ,GAET84E,GAAaC,EAAS,CACrB9pG,KAAMA,EACN,aAAgB,SAASoB,GAKxB,IAJA,IAEIskE,EAFA9kE,EAAS4yE,EAAQpyE,IAAU,GAC3B+xG,EAAOF,IAEPV,EAAiBnxG,EAAQ,EACpBX,EAAI,EAAGA,GAAKG,IAAUH,EAAG,CACjC,IAAI+xG,EAAiBpxG,EAAQ,EAAIX,EAAIqyG,EACrC,GAAIryG,GAAKG,GAA4C,GAAlCuyG,EAAKX,IAAmBzhF,GAAa,CACvD,IACI0hF,EAAgBM,EAAaR,EADdC,EAAiBD,QAExBhyG,IAARmlE,EACHA,EAAM+sC,GAEN/sC,GAAO4vB,OAAOC,aAAa,GAC3B7vB,GAAO+sC,GAERF,EAAiBC,EAAiBM,CACnC,CACD,CAEA,OADAprB,GAAMtmF,GACCskE,CACR,EACA,WAAc,SAASisC,EAAavwG,GACb,iBAATA,GACZwoG,GAAkB,6CAA+C5pG,GAElE,IAAIY,EAASsyG,EAAe9xG,GACxBqxE,EAAMoX,GAAQ,EAAIjpF,EAASkyG,GAO/B,OALAt/B,GADAf,KAAS,KACO,GAAK7xE,GAAUmwB,EAC/BiiF,EAAa5xG,EAAOqxE,EAAM,EAAG7xE,EAASkyG,GAClB,OAAhBnB,GACHA,EAAY9wG,KAAK6mF,GAAOjV,GAElBA,CACR,EACA,eAAkB,EAClB,qBAAwBo4B,GACxB+G,mBAAoB,SAASn/B,GAC5BiV,GAAMjV,EACP,GAEF,EA03BC,sBAx3BD,SAAgCq3B,EAAS9pG,GAExC6pG,GAAaC,EAAS,CACrBsJ,QAAQ,EACRpzG,KAHDA,EAAO8oG,GAAiB9oG,GAIvB,eAAkB,EAClB,aAAgB,WAEhB,EACA,WAAc,SAAS2xG,EAAa5gG,GAEpC,GAEF,EA42BC,iCAx2BD,WACC,OAHoB,IAIrB,EAu2BC,UAt1BD,SAAoBy5F,EAAQ6I,EAAYC,GACvC9I,EAASI,GAAcJ,GACvB6I,EAAa1H,GAAsB0H,EAAY,aAC/C,IAAI1B,EAAc,GACd4B,EAAK3I,GAAe+G,GAExB,OADAn+B,EAAQ8/B,IAAmB,GAAKC,EACzBF,EAAuB,WAAE1B,EAAanH,EAC9C,EAg1BC,mBA5zBD,SAA6BgJ,EAAQhJ,EAAQiJ,EAAYH,EAAgBr+B,GAIxE,OAHAu+B,EAASrH,GAAoBqH,IAC7BhJ,EAASI,GAAcJ,GACvBiJ,EAAazH,GAAkByH,GArBhC,SAAmCH,GAClC,IAAI3B,EAAc,GAElB,OADAn+B,EAAQ8/B,IAAmB,GAAK1I,GAAe+G,GACxCA,CACR,CAkBmC+B,CAA0BJ,GAAiBr+B,EAC9E,EAwzBC,wBAtzBD,SAAkCu+B,EAAQhJ,EAAQiJ,EAAYx+B,IAC7Du+B,EAASrH,GAAoBqH,IAC7BhJ,EAASI,GAAcJ,GACvBiJ,EAAazH,GAAkByH,GACJ,KAAMx+B,EAClC,EAkzBC,cAAiBw1B,GACjB,cAjzBD,SAAwBkJ,EAAOC,GAG9B,OAFAD,EAAQ/I,GAAc+I,KACb/I,GAAcgJ,EAExB,EA8yBC,kBAnyBD,SAA4B5zG,GAC3B,OAAa,IAATA,EACI4qG,GAAewB,OAEtBpsG,EAAOgsG,GAAkBhsG,GAClB4qG,GAAewB,KAAmBpsG,IAE3C,EA6xBC,yBAhwBD,SAAmC6zG,EAAUC,GAC5C,IAAIC,EAtBL,SAA2BF,EAAUC,GAEpC,IADA,IAAIr3F,EAAI,IAAItZ,MAAM0wG,GACTpzG,EAAI,EAAGA,EAAIozG,IAAYpzG,EAC/Bgc,EAAEhc,GAAKkrG,GAAsBn4B,EAAQsgC,EAAe,EAAJrzG,IAAU,GAAI,aAAeA,GAE9E,OAAOgc,CACR,CAgBau3F,CAAkBH,EAAUC,GACpCG,EAAUF,EAAM,GAChBG,EAAgBD,EAAQj0G,KAAO,KAAO+zG,EAAMp7F,MAAM,GAAG3O,KAAI,SAAS+F,GACrE,OAAOA,EAAE/P,IACV,IAAG2K,KAAK,KAAO,IACXwpG,EAAW5H,GAAwB2H,GACvC,QAAiB3zG,IAAb4zG,EACH,OAAOA,EAKR,IAHA,IAAI76F,EAAS,CAAE,WACX27D,EAAO,CAAEg/B,GACTG,EAAW,GACN3zG,EAAI,EAAGA,EAAIozG,EAAW,IAAKpzG,EACnC2zG,IAAmB,IAAN3zG,EAAU,KAAO,IAAM,MAAQA,EAC5C6Y,EAAOzY,KAAK,UAAYJ,GACxBw0E,EAAKp0E,KAAKkzG,EAAM,EAAItzG,IAErB,IA7C8B+yG,EAC1BjhC,EA6CA8hC,EAAe,mBADAjL,GAAsB,gBAAkB8K,GACJ,wCACnDvrE,EAAS,EACb,IAASloC,EAAI,EAAGA,EAAIozG,EAAW,IAAKpzG,EACnC4zG,GAAgB,cAAgB5zG,EAAI,aAAeA,EAAI,8BAAgCkoC,EAAS,IAAMA,EAAS,IAAM,OACrHA,GAAUorE,EAAMtzG,EAAI,GAAmB,eAGxC,IADA4zG,GAAgB,6BAA+BD,EAAW,OACjD3zG,EAAI,EAAGA,EAAIozG,EAAW,IAAKpzG,EAC/BszG,EAAMtzG,EAAI,GAAiB,eAC9B4zG,GAAgB,cAAgB5zG,EAAI,oBAAsBA,EAAI,QAWhE,OARKwzG,EAAQb,SACZiB,GAAgB,qDAEjBA,GAAgB,OAChB/6F,EAAOzY,KAAKwzG,GA9DkBb,EAgB/B,SAAiBnxG,EAAaiyG,GAC7B,KAAMjyG,aAAuBiqG,UAC5B,MAAM,IAAIjsG,UAAU,4CAA8CgC,EAAc,4BAEjF,IAAIkyG,EAAQlL,GAAoBhnG,EAAYrC,MAAQ,uBAAuB,WAAY,IACvFu0G,EAAM7K,UAAYrnG,EAAYqnG,UAC9B,IAAI54F,EAAM,IAAIyjG,EACVh8E,EAAIl2B,EAAYk9F,MAAMzuF,EAAKwjG,GAC/B,OAAO/7E,aAAal3B,OAASk3B,EAAIznB,CAClC,CAsCuB0jG,CAAQlI,SAAUhzF,GAAQimF,MAAM,KAAMtqB,GA9DxD1C,EAAK45B,GAAoBvrG,OAC7BurG,GAAoBtrG,KAAK2yG,GA8DzBW,EA7DO5hC,EA8DPg6B,GAAwB2H,GAAiBC,EAClCA,CACR,EAytBC,oBAvtBD,SAA8B3J,EAAQnhG,GAGrC,OAFAmhG,EAASI,GAAcJ,GACvBnhG,EAAMuhG,GAAcvhG,GACbuhG,GAAeJ,EAAOnhG,GAC9B,EAotBC,cAltBD,SAAwBmhG,GACnBA,EAAS,IACZH,GAAc/mG,IAAIknG,GAAQG,UAAY,EAExC,EA+sBC,WA7rBD,SAAqBH,EAAQqJ,EAAUC,EAAU7+B,GAChDu1B,EAASI,GAAcJ,GACvB,IAAIiK,EAAQjI,GAAaqH,GAKzB,OAJKY,IACJA,EApBF,SAA6BZ,GAE5B,IADA,IAAIO,EAAW,GACN3zG,EAAI,EAAGA,EAAIozG,IAAYpzG,EAC/B2zG,IAAmB,IAAN3zG,EAAU,KAAO,IAAM,MAAQA,EAE7C,IACI4zG,EAAe,mCAAqCR,EAArC,kEACnB,IAASpzG,EAAI,EAAGA,EAAIozG,IAAYpzG,EAC/B4zG,GAAgB,cAAgB5zG,EAAI,iEAAmEA,EAAvF,eAAiHA,EAAI,aAAeA,EAApI,gDAA+LA,EAA/L,wCAGjB,OADA4zG,GAAgB,6BAA+BD,EAA/B,sCACT,IAAI9H,SAAS,wBAAyB,SAAU,gBAAiB,YAAa+H,EAA9E,CAA4F1I,GAAuBzI,EAAQ0H,IANlH,IAAMp3B,GAOvB,CAQUkhC,CAAoBb,GAC5BrH,GAAaqH,GAAYY,GAEnBA,EAAMjK,EAAQsJ,EAAU7+B,EAChC,EAsrBC,iBAprBD,WACC,OAAO21B,GAAe,GACvB,EAmrBC,kCAjrBD,SAA4CrjC,GAC3CA,EAAOqjC,GAAcrjC,GAErB,IADA,IAAI9qD,EAAI,IAAItZ,MAAMokE,EAAK3mE,QACdH,EAAI,EAAGA,EAAI8mE,EAAK3mE,OAAQH,IAAKgc,EAAEhc,GAAK8mE,EAAK9mE,GAClD,OAAOmqG,GAAenuF,EACvB,EA6qBC,mBA3qBD,SAA6BzT,GAC5B,OAAO4hG,GAAeoB,GAAkBhjG,GACzC,EA0qBC,kBAxqBD,WACC,OAAO4hG,GAAe,CAAC,EACxB,EAuqBC,uBA7pBD,SAAiCJ,IARjC,SAAwBmH,GACvB,KAAOA,EAAY/wG,QAAQ,CAC1B,IAAI6xE,EAAMk/B,EAAYh+D,MACZg+D,EAAYh+D,KACtBghE,CAAIliC,EACL,CACD,CAICmiC,CADkBhK,GAAcJ,IAEhCC,GAAeD,EAChB,EA0pBC,oBAxpBD,SAA8BA,EAAQnhG,EAAKjI,GAC1CopG,EAASI,GAAcJ,GACvBnhG,EAAMuhG,GAAcvhG,GACpBjI,EAAQwpG,GAAcxpG,GACtBopG,EAAOnhG,GAAOjI,CACf,EAopBC,kBAlpBD,SAA4BqB,EAAM0gE,GAEjC,IAAIn6D,GADJvG,EAAOkpG,GAAsBlpG,EAAM,sBACA,qBAAE0gE,GACrC,OAAOynC,GAAe5hG,EACvB,EA+oBC,WAzoBD,SAAqB6rG,EAAMC,GAC1B,IAAI9H,EAAO,IAAIrmD,KAA4B,IAAvB8lD,GAAeoI,IACnCtpB,EAAOupB,IAAU,GAAK9H,EAAKxO,gBAC3BjT,EAAOupB,EAAQ,IAAM,GAAK9H,EAAKvO,gBAC/BlT,EAAOupB,EAAQ,IAAM,GAAK9H,EAAKtO,cAC/BnT,EAAOupB,EAAQ,KAAO,GAAK9H,EAAKrO,aAChCpT,EAAOupB,EAAQ,KAAO,GAAK9H,EAAKpO,cAChCrT,EAAOupB,EAAQ,KAAO,GAAK9H,EAAKnO,iBAAmB,KACnDtT,EAAOupB,EAAQ,KAAO,GAAK9H,EAAKlO,YAChC,IAAIx9D,EAAQqlB,KAAKo4C,IAAIiO,EAAKnO,iBAAkB,EAAG,EAAG,EAAG,EAAG,EAAG,GACvDkW,GAAQ/H,EAAK1P,UAAYh8D,GAAS,MAAuB,EAC7DiqD,EAAOupB,EAAQ,KAAO,GAAKC,CAC5B,EA8nBC,cA7mBD,SAAwBF,EAAMC,GAC7B,IAAI9H,EAAO,IAAIrmD,KAA4B,IAAvB8lD,GAAeoI,IACnCtpB,EAAOupB,IAAU,GAAK9H,EAAKhO,aAC3BzT,EAAOupB,EAAQ,IAAM,GAAK9H,EAAK/N,aAC/B1T,EAAOupB,EAAQ,IAAM,GAAK9H,EAAK9N,WAC/B3T,EAAOupB,EAAQ,KAAO,GAAK9H,EAAKjS,UAChCxP,EAAOupB,EAAQ,KAAO,GAAK9H,EAAKlS,WAChCvP,EAAOupB,EAAQ,KAAO,GAAK9H,EAAKnS,cAAgB,KAChDtP,EAAOupB,EAAQ,KAAO,GAAK9H,EAAK7P,SAChC,IAAI4X,EAA4B,EAArBhI,GAAaC,GACxBzhB,EAAOupB,EAAQ,KAAO,GAAKC,EAC3BxpB,EAAOupB,EAAQ,KAAO,IAAkC,GAA3B9H,EAAK7N,oBAClC,IAAI79D,EAAQ,IAAIqlB,KAAKqmD,EAAKnS,cAAe,EAAG,GACxCma,EAAe,IAAIruD,KAAKqmD,EAAKnS,cAAe,EAAG,GAAGsE,oBAClD8V,EAAe3zE,EAAM69D,oBACrBhtB,EAA2G,GAApG6iC,GAAgBC,GAAgBjI,EAAK7N,qBAAuBnzF,KAAKC,IAAIgpG,EAAcD,IAC9FzpB,EAAOupB,EAAQ,KAAO,GAAK3iC,CAC5B,EA6lBC,WA3lBD,SAAqB2iC,GACpB,IAAI9H,EAAO,IAAIrmD,KAAK4kC,EAAOupB,EAAQ,KAAO,GAAK,KAAMvpB,EAAOupB,EAAQ,KAAO,GAAIvpB,EAAOupB,EAAQ,KAAO,GAAIvpB,EAAOupB,EAAQ,IAAM,GAAIvpB,EAAOupB,EAAQ,IAAM,GAAIvpB,EAAOupB,IAAU,GAAI,GAC5K3iC,EAAMoZ,EAAOupB,EAAQ,KAAO,GAC5BI,EAAgBlI,EAAK7N,oBACrB79D,EAAQ,IAAIqlB,KAAKqmD,EAAKnS,cAAe,EAAG,GACxCma,EAAe,IAAIruD,KAAKqmD,EAAKnS,cAAe,EAAG,GAAGsE,oBAClD8V,EAAe3zE,EAAM69D,oBACrBgW,EAAYnpG,KAAKC,IAAIgpG,EAAcD,GACvC,GAAI7iC,EAAM,EACToZ,EAAOupB,EAAQ,KAAO,GAAKnxG,OAAOqxG,GAAgBC,GAAgBE,GAAaD,QACzE,GAAI/iC,EAAM,IAAMgjC,GAAaD,GAAgB,CACnD,IAAIE,EAAeppG,KAAK47B,IAAIqtE,EAAcD,GACtCK,EAAaljC,EAAM,EAAIgjC,EAAYC,EACvCpI,EAAK5N,QAAQ4N,EAAK1P,UAA2C,KAA9B+X,EAAaH,GAC7C,CACA3pB,EAAOupB,EAAQ,KAAO,GAAK9H,EAAK7P,SAChC,IAAI4X,EAA4B,EAArBhI,GAAaC,GAQxB,OAPAzhB,EAAOupB,EAAQ,KAAO,GAAKC,EAC3BxpB,EAAOupB,IAAU,GAAK9H,EAAKhO,aAC3BzT,EAAOupB,EAAQ,IAAM,GAAK9H,EAAK/N,aAC/B1T,EAAOupB,EAAQ,IAAM,GAAK9H,EAAK9N,WAC/B3T,EAAOupB,EAAQ,KAAO,GAAK9H,EAAKjS,UAChCxP,EAAOupB,EAAQ,KAAO,GAAK9H,EAAKlS,WAChCvP,EAAOupB,EAAQ,KAAO,GAAK9H,EAAK3N,UACzB2N,EAAK1P,UAAY,IAAM,CAC/B,EAmkBC,SAjkBD,SAAmBjpD,EAAKihE,EAAMtoB,EAAOmkB,EAAIb,EAAKhG,EAAWiL,GACxD,OAAQ,EACT,EAgkBC,WA9jBD,SAAqBA,EAAMlhE,EAAKihE,EAAMtoB,EAAOmkB,EAAIxoE,GAAS,EA+jBzD,UAtjBD,SAAoB6sE,EAAUC,EAAUC,GACvC,IAAIC,GAAc,IAAIhvD,MAAOk0C,cACzB+a,EAAS,IAAIjvD,KAAKgvD,EAAa,EAAG,GAClCE,EAAS,IAAIlvD,KAAKgvD,EAAa,EAAG,GAClCV,EAAeW,EAAOzW,oBACtB6V,EAAea,EAAO1W,oBACtB2W,EAAoB9pG,KAAK47B,IAAIqtE,EAAcD,GAG/C,SAASe,EAAY/I,GACpB,IAAIhwF,EAAQgwF,EAAK1N,eAAetiF,MAAM,qBACtC,OAAOA,EAAQA,EAAM,GAAK,KAC3B,CALAw2D,EAAQgiC,IAAa,GAAyB,GAApBM,EAC1BvqB,EAAOkqB,IAAa,GAAK9xG,OAAOsxG,GAAgBD,GAKhD,IAAIgB,EAAaD,EAAYH,GACzBK,EAAaF,EAAYF,GACzBK,EAAgBjJ,GAAgB+I,GAChCG,EAAgBlJ,GAAgBgJ,GAChCjB,EAAeC,GAClBzhC,EAAQkiC,IAAW,GAAKQ,EACxB1iC,EAAQkiC,EAAS,IAAM,GAAKS,IAE5B3iC,EAAQkiC,IAAW,GAAKS,EACxB3iC,EAAQkiC,EAAS,IAAM,GAAKQ,EAE9B,EA+hBC,MA7hBD,WACClS,EAAM,GACP,EA4hBC,OA1hBD,SAAiBwG,GAChBxG,EAAMyD,GACP,EAyhBC,oBAvhBD,WACC,OAAO9gD,KAAKoB,KACb,EAshBC,wBAhhBD,WACC,OAJO,UAKR,EA+gBC,mBAAsB6kD,GACtB,sBArgBD,SAAgCr7D,EAAMnqC,EAAKgvG,GAC1C9hC,EAAO+hC,WAAW9kE,IAAS,EAAGnqC,IAAQ,EAAGA,EAAMgvG,IAAQ,EACxD,EAogBC,uBAzfD,SAAiCE,GAChC,IAMetlF,EANXulF,EAAUjiC,EAAO1zE,OAEjB41G,EAhCG,WAiCP,IAFAF,KAAkC,GAEdE,EACnB,OAAO,EAGR,IAAK,IAAIC,EAAU,EAAGA,GAAW,EAAGA,GAAW,EAAG,CACjD,IAAIC,EAAoBH,GAAW,EAAI,GAAKE,GAI5C,GAHAC,EAAoB1qG,KAAKC,IAAIyqG,EAAmBJ,EAAgB,WAE9CpJ,GADJlhG,KAAKC,IAAIuqG,GAJTxlF,EAI8BhlB,KAAK47B,IAAI0uE,EAAeI,KAAoB,MAJ1C1lF,EAI0C,eAGvF,OAAO,CAET,CACA,OAAO,CACR,EAweC,YAjcD,SAAsB2lF,EAAWC,GAChC,IAAIC,EAAU,EAOd,OANAzJ,KAAgB13F,SAAQ,SAASohG,EAAQr2G,GACxC,IAAIgyE,EAAMmkC,EAAcC,EACxBrjC,EAAQmjC,EAAgB,EAAJl2G,IAAU,GAAKgyE,EAXrC,SAAuB/M,EAAKzhE,GAC3B,IAAK,IAAIxD,EAAI,EAAGA,EAAIilE,EAAI9kE,SAAUH,EACjC0yE,EAAMlvE,MAAa,GAAKyhE,EAAIszB,WAAWv4F,GAExC0yE,EAAMlvE,IAAW,GAAK,CACvB,CAOE8yG,CAAcD,EAAQrkC,GACtBokC,GAAWC,EAAOl2G,OAAS,CAC5B,IACO,CACR,EAybC,kBAvbD,SAA4Bo2G,EAAgBC,GAC3C,IAAI9mG,EAAUi9F,KACd55B,EAAQwjC,IAAmB,GAAK7mG,EAAQvP,OACxC,IAAIi2G,EAAU,EAKd,OAJA1mG,EAAQuF,SAAQ,SAASohG,GACxBD,GAAWC,EAAOl2G,OAAS,CAC5B,IACA4yE,EAAQyjC,IAAsB,GAAKJ,EAC5B,CACR,EA+aC,SA7aD,SAAmB1F,GAClB,OAAO,EACR,EA4aC,QA1aD,SAAkBA,EAAI+F,EAAKC,EAAQC,GAClC,OAAO,EACR,EAyaC,QA/ZD,SAAkBjG,EAAIxoE,EAAQ0uE,EAAQxzF,GACrC,OAAO,EACR,EA8ZC,SA3YD,SAAmBstF,EAAI+F,EAAKC,EAAQC,GAEnC,IADA,IAAIhB,EAAM,EACD31G,EAAI,EAAGA,EAAI02G,EAAQ12G,IAAK,CAChC,IAAIgyE,EAAMe,EAAQ0jC,IAAQ,GACtB7iE,EAAMm/B,EAAQ0jC,EAAM,IAAM,GAC9BA,GAAO,EACP,IAAK,IAAIvvG,EAAI,EAAGA,EAAI0sC,EAAK1sC,IArBR2vG,EAsBNnG,EAtBcoG,EAsBVjjC,EAAO7B,EAAM9qE,IAAM,GArB/B1D,WAASopG,GAAiBiK,GACjB,IAATC,GAAuB,KAATA,IACL,IAAXD,EAAenyB,EAAMz6E,GAAKi9F,GAAkB1jG,EAAQ,IACrDA,EAAOrD,OAAS,GAEhBqD,EAAOpD,KAAK02G,GAkBZnB,GAAO/hE,CACR,CAzBD,IAAmBijE,EAAQC,EACtBtzG,EA0BJ,OADAuvE,EAAQ4jC,IAAS,GAAKhB,EACf,CACR,EA+XC,UAsgBD,SAAmB78F,EAAOi+F,GACzB,IAAIC,EAAKzjC,KACT,IACC,OAAO28B,GAAkBp3F,EAAlBo3F,CAAyB6G,EACjC,CAAE,MAAO/sG,GAER,GADA0pE,GAAasjC,GACThtG,IAAMA,EAAI,EAAG,MAAMA,EACvBwmG,GAAU,EAAG,EACd,CACD,EA9gBC,WAskED,SAAoB13F,EAAOi+F,EAAIE,GAC9B,IAAID,EAAKzjC,KACT,IACC,OAAO28B,GAAkBp3F,EAAlBo3F,CAAyB6G,EAAIE,EACrC,CAAE,MAAOjtG,GAER,GADA0pE,GAAasjC,GACThtG,IAAMA,EAAI,EAAG,MAAMA,EACvBwmG,GAAU,EAAG,EACd,CACD,EA9kEC,YAu/DD,SAAqB13F,EAAOi+F,EAAIE,EAAIC,GACnC,IAAIF,EAAKzjC,KACT,IACC,OAAO28B,GAAkBp3F,EAAlBo3F,CAAyB6G,EAAIE,EAAIC,EACzC,CAAE,MAAOltG,GAER,GADA0pE,GAAasjC,GACThtG,IAAMA,EAAI,EAAG,MAAMA,EACvBwmG,GAAU,EAAG,EACd,CACD,EA//DC,cA2+DD,SAAuB13F,EAAOi+F,EAAIE,EAAIC,EAAIC,EAAIC,GAC7C,IAAIJ,EAAKzjC,KACT,IACC,OAAO28B,GAAkBp3F,EAAlBo3F,CAAyB6G,EAAIE,EAAIC,EAAIC,EAAIC,EACjD,CAAE,MAAOptG,GAER,GADA0pE,GAAasjC,GACThtG,IAAMA,EAAI,EAAG,MAAMA,EACvBwmG,GAAU,EAAG,EACd,CACD,EAn/DC,eAsuCD,SAAwB13F,EAAOi+F,EAAIE,EAAIC,EAAIC,EAAIC,EAAIC,GAClD,IAAIL,EAAKzjC,KACT,IACC,OAAO28B,GAAkBp3F,EAAlBo3F,CAAyB6G,EAAIE,EAAIC,EAAIC,EAAIC,EAAIC,EACrD,CAAE,MAAOrtG,GAER,GADA0pE,GAAasjC,GACThtG,IAAMA,EAAI,EAAG,MAAMA,EACvBwmG,GAAU,EAAG,EACd,CACD,EA9uCC,UA0eD,SAAmB13F,EAAOi+F,GACzB,IAAIC,EAAKzjC,KACT,IACC,OAAO28B,GAAkBp3F,EAAlBo3F,CAAyB6G,EACjC,CAAE,MAAO/sG,GAER,GADA0pE,GAAasjC,GACThtG,IAAMA,EAAI,EAAG,MAAMA,EACvBwmG,GAAU,EAAG,EACd,CACD,EAlfC,WAsjED,SAAoB13F,EAAOi+F,EAAIE,GAC9B,IAAID,EAAKzjC,KACT,IACC,OAAO28B,GAAkBp3F,EAAlBo3F,CAAyB6G,EAAIE,EACrC,CAAE,MAAOjtG,GAER,GADA0pE,GAAasjC,GACThtG,IAAMA,EAAI,EAAG,MAAMA,EACvBwmG,GAAU,EAAG,EACd,CACD,EA9jEC,YAi9DD,SAAqB13F,EAAOi+F,EAAIE,EAAIC,GACnC,IAAIF,EAAKzjC,KACT,IACC,OAAO28B,GAAkBp3F,EAAlBo3F,CAAyB6G,EAAIE,EAAIC,EACzC,CAAE,MAAOltG,GAER,GADA0pE,GAAasjC,GACThtG,IAAMA,EAAI,EAAG,MAAMA,EACvBwmG,GAAU,EAAG,EACd,CACD,EAz9DC,aA86BD,SAAsB13F,EAAOi+F,EAAIE,EAAIC,EAAIC,GACxC,IAAIH,EAAKzjC,KACT,IACC,OAAO28B,GAAkBp3F,EAAlBo3F,CAAyB6G,EAAIE,EAAIC,EAAIC,EAC7C,CAAE,MAAOntG,GAER,GADA0pE,GAAasjC,GACThtG,IAAMA,EAAI,EAAG,MAAMA,EACvBwmG,GAAU,EAAG,EACd,CACD,EAt7BC,SA0bD,SAAkB13F,GACjB,IAAIk+F,EAAKzjC,KACT,IACC,OAAO28B,GAAkBp3F,EAAlBo3F,EACR,CAAE,MAAOlmG,GAER,GADA0pE,GAAasjC,GACThtG,IAAMA,EAAI,EAAG,MAAMA,EACvBwmG,GAAU,EAAG,EACd,CACD,EAlcC,UAqTD,SAAmB13F,EAAOi+F,GACzB,IAAIC,EAAKzjC,KACT,IACC,OAAO28B,GAAkBp3F,EAAlBo3F,CAAyB6G,EACjC,CAAE,MAAO/sG,GAER,GADA0pE,GAAasjC,GACThtG,IAAMA,EAAI,EAAG,MAAMA,EACvBwmG,GAAU,EAAG,EACd,CACD,EA7TC,WA46DD,SAAoB13F,EAAOi+F,EAAIE,GAC9B,IAAID,EAAKzjC,KACT,IACC,OAAO28B,GAAkBp3F,EAAlBo3F,CAAyB6G,EAAIE,EACrC,CAAE,MAAOjtG,GAER,GADA0pE,GAAasjC,GACThtG,IAAMA,EAAI,EAAG,MAAMA,EACvBwmG,GAAU,EAAG,EACd,CACD,EAp7DC,WAojDD,SAAoB13F,EAAOi+F,EAAIE,GAC9B,IAAID,EAAKzjC,KACT,IACC,OAAO28B,GAAkBp3F,EAAlBo3F,CAAyB6G,EAAIE,EACrC,CAAE,MAAOjtG,GAER,GADA0pE,GAAasjC,GACThtG,IAAMA,EAAI,EAAG,MAAMA,EACvBwmG,GAAU,EAAG,EACd,CACD,EA5jDC,WAmVD,SAAoB13F,EAAOi+F,EAAIE,GAC9B,IAAID,EAAKzjC,KACT,IACC,OAAO28B,GAAkBp3F,EAAlBo3F,CAAyB6G,EAAIE,EACrC,CAAE,MAAOjtG,GAER,GADA0pE,GAAasjC,GACThtG,IAAMA,EAAI,EAAG,MAAMA,EACvBwmG,GAAU,EAAG,EACd,CACD,EA3VC,YAo7DD,SAAqB13F,EAAOi+F,EAAIE,EAAIC,GACnC,IAAIF,EAAKzjC,KACT,IACC,OAAO28B,GAAkBp3F,EAAlBo3F,CAAyB6G,EAAIE,EAAIC,EACzC,CAAE,MAAOltG,GAER,GADA0pE,GAAasjC,GACThtG,IAAMA,EAAI,EAAG,MAAMA,EACvBwmG,GAAU,EAAG,EACd,CACD,EA57DC,YA4VD,SAAqB13F,EAAOi+F,EAAIE,EAAIC,GACnC,IAAIF,EAAKzjC,KACT,IACC,OAAO28B,GAAkBp3F,EAAlBo3F,CAAyB6G,EAAIE,EAAIC,EACzC,CAAE,MAAOltG,GAER,GADA0pE,GAAasjC,GACThtG,IAAMA,EAAI,EAAG,MAAMA,EACvBwmG,GAAU,EAAG,EACd,CACD,EApWC,cAwxDD,SAAuB13F,EAAOi+F,EAAIE,EAAIC,EAAIC,EAAIC,GAC7C,IAAIJ,EAAKzjC,KACT,IACC,OAAO28B,GAAkBp3F,EAAlBo3F,CAAyB6G,EAAIE,EAAIC,EAAIC,EAAIC,EACjD,CAAE,MAAOptG,GAER,GADA0pE,GAAasjC,GACThtG,IAAMA,EAAI,EAAG,MAAMA,EACvBwmG,GAAU,EAAG,EACd,CACD,EAhyDC,aAsYD,SAAsB13F,EAAOi+F,EAAIE,EAAIC,EAAIC,GACxC,IAAIH,EAAKzjC,KACT,IACC,OAAO28B,GAAkBp3F,EAAlBo3F,CAAyB6G,EAAIE,EAAIC,EAAIC,EAC7C,CAAE,MAAOntG,GAER,GADA0pE,GAAasjC,GACThtG,IAAMA,EAAI,EAAG,MAAMA,EACvBwmG,GAAU,EAAG,EACd,CACD,EA9YC,cAohED,SAAuB13F,EAAOi+F,EAAIE,EAAIC,EAAIC,EAAIC,GAC7C,IAAIJ,EAAKzjC,KACT,IACC,OAAO28B,GAAkBp3F,EAAlBo3F,CAAyB6G,EAAIE,EAAIC,EAAIC,EAAIC,EACjD,CAAE,MAAOptG,GAER,GADA0pE,GAAasjC,GACThtG,IAAMA,EAAI,EAAG,MAAMA,EACvBwmG,GAAU,EAAG,EACd,CACD,EA5hEC,cAyXD,SAAuB13F,EAAOi+F,EAAIE,EAAIC,EAAIC,EAAIC,GAC7C,IAAIJ,EAAKzjC,KACT,IACC,OAAO28B,GAAkBp3F,EAAlBo3F,CAAyB6G,EAAIE,EAAIC,EAAIC,EAAIC,EACjD,CAAE,MAAOptG,GAER,GADA0pE,GAAasjC,GACThtG,IAAMA,EAAI,EAAG,MAAMA,EACvBwmG,GAAU,EAAG,EACd,CACD,EAjYC,eAkWD,SAAwB13F,EAAOi+F,EAAIE,EAAIC,EAAIC,EAAIC,EAAIC,GAClD,IAAIL,EAAKzjC,KACT,IACC,OAAO28B,GAAkBp3F,EAAlBo3F,CAAyB6G,EAAIE,EAAIC,EAAIC,EAAIC,EAAIC,EACrD,CAAE,MAAOrtG,GAER,GADA0pE,GAAasjC,GACThtG,IAAMA,EAAI,EAAG,MAAMA,EACvBwmG,GAAU,EAAG,EACd,CACD,EA1WC,gBA+cD,SAAyB13F,EAAOi+F,EAAIE,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,GACvD,IAAIN,EAAKzjC,KACT,IACC,OAAO28B,GAAkBp3F,EAAlBo3F,CAAyB6G,EAAIE,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EACzD,CAAE,MAAOttG,GAER,GADA0pE,GAAasjC,GACThtG,IAAMA,EAAI,EAAG,MAAMA,EACvBwmG,GAAU,EAAG,EACd,CACD,EAvdC,iBA2fD,SAA0B13F,EAAOi+F,EAAIE,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,GAC5D,IAAIP,EAAKzjC,KACT,IACC,OAAO28B,GAAkBp3F,EAAlBo3F,CAAyB6G,EAAIE,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAC7D,CAAE,MAAOvtG,GAER,GADA0pE,GAAasjC,GACThtG,IAAMA,EAAI,EAAG,MAAMA,EACvBwmG,GAAU,EAAG,EACd,CACD,EAngBC,kBA4jBD,SAA2B13F,EAAOi+F,EAAIE,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,GACjE,IAAIR,EAAKzjC,KACT,IACC,OAAO28B,GAAkBp3F,EAAlBo3F,CAAyB6G,EAAIE,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EACjE,CAAE,MAAOxtG,GAER,GADA0pE,GAAasjC,GACThtG,IAAMA,EAAI,EAAG,MAAMA,EACvBwmG,GAAU,EAAG,EACd,CACD,EApkBC,mBAqrBD,SAA4B13F,EAAOi+F,EAAIE,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,GACtE,IAAIT,EAAKzjC,KACT,IACC,OAAO28B,GAAkBp3F,EAAlBo3F,CAAyB6G,EAAIE,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EACrE,CAAE,MAAOztG,GAER,GADA0pE,GAAasjC,GACThtG,IAAMA,EAAI,EAAG,MAAMA,EACvBwmG,GAAU,EAAG,EACd,CACD,EA7rBC,oBAmvCD,SAA6B13F,EAAOi+F,EAAIE,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAKC,GAC5E,IAAIV,EAAKzjC,KACT,IACC,OAAO28B,GAAkBp3F,EAAlBo3F,CAAyB6G,EAAIE,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAKC,EAC1E,CAAE,MAAO1tG,GAER,GADA0pE,GAAasjC,GACThtG,IAAMA,EAAI,EAAG,MAAMA,EACvBwmG,GAAU,EAAG,EACd,CACD,EA3vCC,wBAk7BD,SAAiC13F,EAAOi+F,EAAIE,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,GACpG,IAAId,EAAKzjC,KACT,IACC,OAAO28B,GAAkBp3F,EAAlBo3F,CAAyB6G,EAAIE,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,EAC9F,CAAE,MAAO9tG,GAER,GADA0pE,GAAasjC,GACThtG,IAAMA,EAAI,EAAG,MAAMA,EACvBwmG,GAAU,EAAG,EACd,CACD,EA17BC,4BAygCD,SAAqC13F,EAAOi+F,EAAIE,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,GAC5H,IAAIlB,EAAKzjC,KACT,IACC,OAAO28B,GAAkBp3F,EAAlBo3F,CAAyB6G,EAAIE,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,EAClH,CAAE,MAAOluG,GAER,GADA0pE,GAAasjC,GACThtG,IAAMA,EAAI,EAAG,MAAMA,EACvBwmG,GAAU,EAAG,EACd,CACD,EAjhCC,4BAuoDD,SAAqC13F,EAAOi+F,EAAIE,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,GAC5H,IAAIlB,EAAKzjC,KACT,IACC,OAAO28B,GAAkBp3F,EAAlBo3F,CAAyB6G,EAAIE,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,EAClH,CAAE,MAAOluG,GAER,GADA0pE,GAAasjC,GACThtG,IAAMA,EAAI,EAAG,MAAMA,EACvBwmG,GAAU,EAAG,EACd,CACD,EA/oDC,oBAiyDD,SAA6B13F,EAAOi+F,EAAIE,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAKC,GAC5E,IAAIV,EAAKzjC,KACT,IACC,OAAO28B,GAAkBp3F,EAAlBo3F,CAAyB6G,EAAIE,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAKC,EAC1E,CAAE,MAAO1tG,GAER,GADA0pE,GAAasjC,GACThtG,IAAMA,EAAI,EAAG,MAAMA,EACvBwmG,GAAU,EAAG,EACd,CACD,EAzyDC,qBA40DD,SAA8B13F,EAAOi+F,EAAIE,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAKC,EAAKC,GAClF,IAAIX,EAAKzjC,KACT,IACC,OAAO28B,GAAkBp3F,EAAlBo3F,CAAyB6G,EAAIE,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAKC,EAAKC,EAC/E,CAAE,MAAO3tG,GAER,GADA0pE,GAAasjC,GACThtG,IAAMA,EAAI,EAAG,MAAMA,EACvBwmG,GAAU,EAAG,EACd,CACD,EAp1DC,mBAqzDD,SAA4B13F,EAAOi+F,EAAIE,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,GACtE,IAAIT,EAAKzjC,KACT,IACC,OAAO28B,GAAkBp3F,EAAlBo3F,CAAyB6G,EAAIE,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EACrE,CAAE,MAAOztG,GAER,GADA0pE,GAAasjC,GACThtG,IAAMA,EAAI,EAAG,MAAMA,EACvBwmG,GAAU,EAAG,EACd,CACD,EA7zDC,cA+lBD,SAAuB13F,EAAOi+F,EAAIE,EAAIC,EAAIC,EAAIC,GAC7C,IAAIJ,EAAKzjC,KACT,IACC,OAAO28B,GAAkBp3F,EAAlBo3F,CAAyB6G,EAAIE,EAAIC,EAAIC,EAAIC,EACjD,CAAE,MAAOptG,GAER,GADA0pE,GAAasjC,GACThtG,IAAMA,EAAI,EAAG,MAAMA,EACvBwmG,GAAU,EAAG,EACd,CACD,EAvmBC,eAsvCD,SAAwB13F,EAAOi+F,EAAIE,EAAIC,EAAIC,EAAIC,EAAIC,GAClD,IAAIL,EAAKzjC,KACT,IACC,OAAO28B,GAAkBp3F,EAAlBo3F,CAAyB6G,EAAIE,EAAIC,EAAIC,EAAIC,EAAIC,EACrD,CAAE,MAAOrtG,GAER,GADA0pE,GAAasjC,GACThtG,IAAMA,EAAI,EAAG,MAAMA,EACvBwmG,GAAU,EAAG,EACd,CACD,EA9vCC,mBAukBD,SAA4B13F,EAAOi+F,EAAIE,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,GACtE,IAAIT,EAAKzjC,KACT,IACC,OAAO28B,GAAkBp3F,EAAlBo3F,CAAyB6G,EAAIE,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EACrE,CAAE,MAAOztG,GAER,GADA0pE,GAAasjC,GACThtG,IAAMA,EAAI,EAAG,MAAMA,EACvBwmG,GAAU,EAAG,EACd,CACD,EA/kBC,gBA+uDD,SAAyB13F,EAAOi+F,EAAIE,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,GACvD,IAAIN,EAAKzjC,KACT,IACC,OAAO28B,GAAkBp3F,EAAlBo3F,CAAyB6G,EAAIE,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EACzD,CAAE,MAAOttG,GAER,GADA0pE,GAAasjC,GACThtG,IAAMA,EAAI,EAAG,MAAMA,EACvBwmG,GAAU,EAAG,EACd,CACD,EAvvDC,aA6sDD,SAAsB13F,EAAOi+F,EAAIE,EAAIC,EAAIC,GACxC,IAAIH,EAAKzjC,KACT,IACC,OAAO28B,GAAkBp3F,EAAlBo3F,CAAyB6G,EAAIE,EAAIC,EAAIC,EAC7C,CAAE,MAAOntG,GAER,GADA0pE,GAAasjC,GACThtG,IAAMA,EAAI,EAAG,MAAMA,EACvBwmG,GAAU,EAAG,EACd,CACD,EArtDC,cA8xCD,SAAuB13F,EAAOi+F,EAAIE,EAAIC,EAAIC,EAAIC,GAC7C,IAAIJ,EAAKzjC,KACT,IACC,OAAO28B,GAAkBp3F,EAAlBo3F,CAAyB6G,EAAIE,EAAIC,EAAIC,EAAIC,EACjD,CAAE,MAAOptG,GAER,GADA0pE,GAAasjC,GACThtG,IAAMA,EAAI,EAAG,MAAMA,EACvBwmG,GAAU,EAAG,EACd,CACD,EAtyCC,gBAmyDD,SAAyB13F,EAAOi+F,EAAIE,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,GACvD,IAAIN,EAAKzjC,KACT,IACC,OAAO28B,GAAkBp3F,EAAlBo3F,CAAyB6G,EAAIE,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EACzD,CAAE,MAAOttG,GAER,GADA0pE,GAAasjC,GACThtG,IAAMA,EAAI,EAAG,MAAMA,EACvBwmG,GAAU,EAAG,EACd,CACD,EA3yDC,eAmhCD,SAAwB13F,EAAOi+F,EAAIE,EAAIC,EAAIC,EAAIC,EAAIC,GAClD,IAAIL,EAAKzjC,KACT,IACC,OAAO28B,GAAkBp3F,EAAlBo3F,CAAyB6G,EAAIE,EAAIC,EAAIC,EAAIC,EAAIC,EACrD,CAAE,MAAOrtG,GAER,GADA0pE,GAAasjC,GACThtG,IAAMA,EAAI,EAAG,MAAMA,EACvBwmG,GAAU,EAAG,EACd,CACD,EA3hCC,YAkvBD,SAAqB13F,EAAOi+F,EAAIE,EAAIC,GACnC,IAAIF,EAAKzjC,KACT,IACC,OAAO28B,GAAkBp3F,EAAlBo3F,CAAyB6G,EAAIE,EAAIC,EACzC,CAAE,MAAOltG,GAER,GADA0pE,GAAasjC,GACThtG,IAAMA,EAAI,EAAG,MAAMA,EACvBwmG,GAAU,EAAG,EACd,CACD,EA1vBC,aAq1BD,SAAsB13F,EAAOi+F,EAAIE,EAAIC,EAAIC,GACxC,IAAIH,EAAKzjC,KACT,IACC,OAAO28B,GAAkBp3F,EAAlBo3F,CAAyB6G,EAAIE,EAAIC,EAAIC,EAC7C,CAAE,MAAOntG,GAER,GADA0pE,GAAasjC,GACThtG,IAAMA,EAAI,EAAG,MAAMA,EACvBwmG,GAAU,EAAG,EACd,CACD,EA71BC,cAywDD,SAAuB13F,EAAOi+F,EAAIE,EAAIC,EAAIC,EAAIC,GAC7C,IAAIJ,EAAKzjC,KACT,IACC,OAAO28B,GAAkBp3F,EAAlBo3F,CAAyB6G,EAAIE,EAAIC,EAAIC,EAAIC,EACjD,CAAE,MAAOptG,GAER,GADA0pE,GAAasjC,GACThtG,IAAMA,EAAI,EAAG,MAAMA,EACvBwmG,GAAU,EAAG,EACd,CACD,EAjxDC,eAozDD,SAAwB13F,EAAOi+F,EAAIE,EAAIC,EAAIC,EAAIC,EAAIC,GAClD,IAAIL,EAAKzjC,KACT,IACC,OAAO28B,GAAkBp3F,EAAlBo3F,CAAyB6G,EAAIE,EAAIC,EAAIC,EAAIC,EAAIC,EACrD,CAAE,MAAOrtG,GAER,GADA0pE,GAAasjC,GACThtG,IAAMA,EAAI,EAAG,MAAMA,EACvBwmG,GAAU,EAAG,EACd,CACD,EA5zDC,gBAs6CD,SAAyB13F,EAAOi+F,EAAIE,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,GACvD,IAAIN,EAAKzjC,KACT,IACC,OAAO28B,GAAkBp3F,EAAlBo3F,CAAyB6G,EAAIE,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EACzD,CAAE,MAAOttG,GAER,GADA0pE,GAAasjC,GACThtG,IAAMA,EAAI,EAAG,MAAMA,EACvBwmG,GAAU,EAAG,EACd,CACD,EA96CC,kBA83BD,SAA2B13F,EAAOi+F,EAAIE,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,GACjE,IAAIR,EAAKzjC,KACT,IACC,OAAO28B,GAAkBp3F,EAAlBo3F,CAAyB6G,EAAIE,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EACjE,CAAE,MAAOxtG,GAER,GADA0pE,GAAasjC,GACThtG,IAAMA,EAAI,EAAG,MAAMA,EACvBwmG,GAAU,EAAG,EACd,CACD,EAt4BC,sBA21BD,SAA+B13F,EAAOi+F,EAAIE,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAKC,EAAKC,EAAKC,GACxF,IAAIZ,EAAKzjC,KACT,IACC,OAAO28B,GAAkBp3F,EAAlBo3F,CAAyB6G,EAAIE,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAKC,EAAKC,EAAKC,EACpF,CAAE,MAAO5tG,GAER,GADA0pE,GAAasjC,GACThtG,IAAMA,EAAI,EAAG,MAAMA,EACvBwmG,GAAU,EAAG,EACd,CACD,EAn2BC,cAshCD,SAAuB13F,EAAOi+F,EAAIE,EAAIC,EAAIC,EAAIC,GAC7C,IAAIJ,EAAKzjC,KACT,IACC,OAAO28B,GAAkBp3F,EAAlBo3F,CAAyB6G,EAAIE,EAAIC,EAAIC,EAAIC,EACjD,CAAE,MAAOptG,GAER,GADA0pE,GAAasjC,GACThtG,IAAMA,EAAI,EAAG,MAAMA,EACvBwmG,GAAU,EAAG,EACd,CACD,EA9hCC,WAwYD,SAAoB13F,EAAOi+F,EAAIE,GAC9B,IAAID,EAAKzjC,KACT,IACC,OAAO28B,GAAkBp3F,EAAlBo3F,CAAyB6G,EAAIE,EACrC,CAAE,MAAOjtG,GAER,GADA0pE,GAAasjC,GACThtG,IAAMA,EAAI,EAAG,MAAMA,EACvBwmG,GAAU,EAAG,EACd,CACD,EAhZC,YA01DD,SAAqB13F,EAAOi+F,EAAIE,EAAIC,GACnC,IAAIF,EAAKzjC,KACT,IACC,OAAO28B,GAAkBp3F,EAAlBo3F,CAAyB6G,EAAIE,EAAIC,EACzC,CAAE,MAAOltG,GAER,GADA0pE,GAAasjC,GACThtG,IAAMA,EAAI,EAAG,MAAMA,EACvBwmG,GAAU,EAAG,EACd,CACD,EAl2DC,eAm0DD,SAAwB13F,EAAOi+F,EAAIE,EAAIC,EAAIC,EAAIC,EAAIC,GAClD,IAAIL,EAAKzjC,KACT,IACC,OAAO28B,GAAkBp3F,EAAlBo3F,CAAyB6G,EAAIE,EAAIC,EAAIC,EAAIC,EAAIC,EACrD,CAAE,MAAOrtG,GAER,GADA0pE,GAAasjC,GACThtG,IAAMA,EAAI,EAAG,MAAMA,EACvBwmG,GAAU,EAAG,EACd,CACD,EA30DC,cA4pDD,SAAuB13F,EAAOi+F,EAAIE,EAAIC,EAAIC,EAAIC,GAC7C,IAAIJ,EAAKzjC,KACT,IACC,OAAO28B,GAAkBp3F,EAAlBo3F,CAAyB6G,EAAIE,EAAIC,EAAIC,EAAIC,EACjD,CAAE,MAAOptG,GAER,GADA0pE,GAAasjC,GACThtG,IAAMA,EAAI,EAAG,MAAMA,EACvBwmG,GAAU,EAAG,EACd,CACD,EApqDC,eA40DD,SAAwB13F,EAAOi+F,EAAIE,EAAIC,EAAIC,EAAIC,EAAIC,GAClD,IAAIL,EAAKzjC,KACT,IACC,OAAO28B,GAAkBp3F,EAAlBo3F,CAAyB6G,EAAIE,EAAIC,EAAIC,EAAIC,EAAIC,EACrD,CAAE,MAAOrtG,GAER,GADA0pE,GAAasjC,GACThtG,IAAMA,EAAI,EAAG,MAAMA,EACvBwmG,GAAU,EAAG,EACd,CACD,EAp1DC,UA66BD,SAAmB13F,EAAOi+F,GACzB,IAAIC,EAAKzjC,KACT,IACC,OAAO28B,GAAkBp3F,EAAlBo3F,CAAyB6G,EACjC,CAAE,MAAO/sG,GAER,GADA0pE,GAAasjC,GACThtG,IAAMA,EAAI,EAAG,MAAMA,EACvBwmG,GAAU,EAAG,EACd,CACD,EAr7BC,YAyzCD,SAAqB13F,EAAOi+F,EAAIE,EAAIC,GACnC,IAAIF,EAAKzjC,KACT,IACC,OAAO28B,GAAkBp3F,EAAlBo3F,CAAyB6G,EAAIE,EAAIC,EACzC,CAAE,MAAOltG,GAER,GADA0pE,GAAasjC,GACThtG,IAAMA,EAAI,EAAG,MAAMA,EACvBwmG,GAAU,EAAG,EACd,CACD,EAj0CC,cAmqDD,SAAuB13F,EAAOi+F,EAAIE,EAAIC,EAAIC,EAAIC,GAC7C,IAAIJ,EAAKzjC,KACT,IACC,OAAO28B,GAAkBp3F,EAAlBo3F,CAAyB6G,EAAIE,EAAIC,EAAIC,EAAIC,EACjD,CAAE,MAAOptG,GAER,GADA0pE,GAAasjC,GACThtG,IAAMA,EAAI,EAAG,MAAMA,EACvBwmG,GAAU,EAAG,EACd,CACD,EA3qDC,SAk+DD,SAAkB13F,GACjB,IAAIk+F,EAAKzjC,KACT,IACC,OAAO28B,GAAkBp3F,EAAlBo3F,EACR,CAAE,MAAOlmG,GAER,GADA0pE,GAAasjC,GACThtG,IAAMA,EAAI,EAAG,MAAMA,EAEvB,OADAwmG,GAAU,EAAG,GACN,EACR,CACD,EA3+DC,WAusCD,SAAoB13F,EAAOi+F,EAAIE,GAC9B,IAAID,EAAKzjC,KACT,IACC,OAAO28B,GAAkBp3F,EAAlBo3F,CAAyB6G,EAAIE,EACrC,CAAE,MAAOjtG,GAER,GADA0pE,GAAasjC,GACThtG,IAAMA,EAAI,EAAG,MAAMA,EAEvB,OADAwmG,GAAU,EAAG,GACN,EACR,CACD,EAhtCC,UAgcD,SAAmB13F,EAAOi+F,GACzB,IAAIC,EAAKzjC,KACT,IACC,OAAO28B,GAAkBp3F,EAAlBo3F,CAAyB6G,EACjC,CAAE,MAAO/sG,GAER,GADA0pE,GAAasjC,GACThtG,IAAMA,EAAI,EAAG,MAAMA,EAEvB,OADAwmG,GAAU,EAAG,GACN,EACR,CACD,EAzcC,WA2nBD,SAAoB13F,EAAOi+F,EAAIE,GAC9B,IAAID,EAAKzjC,KACT,IACC,OAAO28B,GAAkBp3F,EAAlBo3F,CAAyB6G,EAAIE,EACrC,CAAE,MAAOjtG,GAER,GADA0pE,GAAasjC,GACThtG,IAAMA,EAAI,EAAG,MAAMA,EAEvB,OADAwmG,GAAU,EAAG,GACN,EACR,CACD,EApoBC,YA0wBD,SAAqB13F,EAAOi+F,EAAIE,EAAIC,GACnC,IAAIF,EAAKzjC,KACT,IACC,OAAO28B,GAAkBp3F,EAAlBo3F,CAAyB6G,EAAIE,EAAIC,EACzC,CAAE,MAAOltG,GAER,GADA0pE,GAAasjC,GACThtG,IAAMA,EAAI,EAAG,MAAMA,EAEvB,OADAwmG,GAAU,EAAG,GACN,EACR,CACD,EAnxBC,YAwqDD,SAAqB13F,EAAOi+F,EAAIE,EAAIC,GACnC,IAAIF,EAAKzjC,KACT,IACC,OAAO28B,GAAkBp3F,EAAlBo3F,CAAyB6G,EAAIE,EAAIC,EACzC,CAAE,MAAOltG,GAER,GADA0pE,GAAasjC,GACThtG,IAAMA,EAAI,EAAG,MAAMA,EAEvB,OADAwmG,GAAU,EAAG,GACN,EACR,CACD,EAjrDC,WAi2BD,SAAoB13F,EAAOi+F,EAAIE,GAC9B,IAAID,EAAKzjC,KACT,IACC,OAAO28B,GAAkBp3F,EAAlBo3F,CAAyB6G,EAAIE,EACrC,CAAE,MAAOjtG,GAER,GADA0pE,GAAasjC,GACThtG,IAAMA,EAAI,EAAG,MAAMA,EAEvB,OADAwmG,GAAU,EAAG,GACN,EACR,CACD,EA12BC,SAkUD,SAAkB13F,GACjB,IAAIk+F,EAAKzjC,KACT,IACC28B,GAAkBp3F,EAAlBo3F,EACD,CAAE,MAAOlmG,GAER,GADA0pE,GAAasjC,GACThtG,IAAMA,EAAI,EAAG,MAAMA,EACvBwmG,GAAU,EAAG,EACd,CACD,EA1UC,aAw7BD,SAAsB13F,EAAOi+F,EAAIE,EAAIC,EAAIC,GACxC,IAAIH,EAAKzjC,KACT,IACC28B,GAAkBp3F,EAAlBo3F,CAAyB6G,EAAIE,EAAIC,EAAIC,EACtC,CAAE,MAAOntG,GAER,GADA0pE,GAAasjC,GACThtG,IAAMA,EAAI,EAAG,MAAMA,EACvBwmG,GAAU,EAAG,EACd,CACD,EAh8BC,UAyQD,SAAmB13F,EAAOi+F,GACzB,IAAIC,EAAKzjC,KACT,IACC28B,GAAkBp3F,EAAlBo3F,CAAyB6G,EAC1B,CAAE,MAAO/sG,GAER,GADA0pE,GAAasjC,GACThtG,IAAMA,EAAI,EAAG,MAAMA,EACvBwmG,GAAU,EAAG,EACd,CACD,EAjRC,YA24DD,SAAqB13F,EAAOi+F,EAAIE,EAAIC,GACnC,IAAIF,EAAKzjC,KACT,IACC28B,GAAkBp3F,EAAlBo3F,CAAyB6G,EAAIE,EAAIC,EAClC,CAAE,MAAOltG,GAER,GADA0pE,GAAasjC,GACThtG,IAAMA,EAAI,EAAG,MAAMA,EACvBwmG,GAAU,EAAG,EACd,CACD,EAn5DC,WA27CD,SAAoB13F,EAAOi+F,EAAIE,GAC9B,IAAID,EAAKzjC,KACT,IACC28B,GAAkBp3F,EAAlBo3F,CAAyB6G,EAAIE,EAC9B,CAAE,MAAOjtG,GAER,GADA0pE,GAAasjC,GACThtG,IAAMA,EAAI,EAAG,MAAMA,EACvBwmG,GAAU,EAAG,EACd,CACD,EAn8CC,eAgsBD,SAAwB13F,EAAOi+F,EAAIE,EAAIC,EAAIC,EAAIC,EAAIC,GAClD,IAAIL,EAAKzjC,KACT,IACC28B,GAAkBp3F,EAAlBo3F,CAAyB6G,EAAIE,EAAIC,EAAIC,EAAIC,EAAIC,EAC9C,CAAE,MAAOrtG,GAER,GADA0pE,GAAasjC,GACThtG,IAAMA,EAAI,EAAG,MAAMA,EACvBwmG,GAAU,EAAG,EACd,CACD,EAxsBC,WAgRD,SAAoB13F,EAAOi+F,EAAIE,GAC9B,IAAID,EAAKzjC,KACT,IACC28B,GAAkBp3F,EAAlBo3F,CAAyB6G,EAAIE,EAC9B,CAAE,MAAOjtG,GAER,GADA0pE,GAAasjC,GACThtG,IAAMA,EAAI,EAAG,MAAMA,EACvBwmG,GAAU,EAAG,EACd,CACD,EAxRC,YA4nBD,SAAqB13F,EAAOi+F,EAAIE,EAAIC,GACnC,IAAIF,EAAKzjC,KACT,IACC28B,GAAkBp3F,EAAlBo3F,CAAyB6G,EAAIE,EAAIC,EAClC,CAAE,MAAOltG,GAER,GADA0pE,GAAasjC,GACThtG,IAAMA,EAAI,EAAG,MAAMA,EACvBwmG,GAAU,EAAG,EACd,CACD,EApoBC,YAgsDD,SAAqB13F,EAAOi+F,EAAIE,EAAIC,GACnC,IAAIF,EAAKzjC,KACT,IACC28B,GAAkBp3F,EAAlBo3F,CAAyB6G,EAAIE,EAAIC,EAClC,CAAE,MAAOltG,GAER,GADA0pE,GAAasjC,GACThtG,IAAMA,EAAI,EAAG,MAAMA,EACvBwmG,GAAU,EAAG,EACd,CACD,EAxsDC,aAs8BD,SAAsB13F,EAAOi+F,EAAIE,EAAIC,EAAIC,GACxC,IAAIH,EAAKzjC,KACT,IACC28B,GAAkBp3F,EAAlBo3F,CAAyB6G,EAAIE,EAAIC,EAAIC,EACtC,CAAE,MAAOntG,GAER,GADA0pE,GAAasjC,GACThtG,IAAMA,EAAI,EAAG,MAAMA,EACvBwmG,GAAU,EAAG,EACd,CACD,EA98BC,aA4qCD,SAAsB13F,EAAOi+F,EAAIE,EAAIC,EAAIC,GACxC,IAAIH,EAAKzjC,KACT,IACC28B,GAAkBp3F,EAAlBo3F,CAAyB6G,EAAIE,EAAIC,EAAIC,EACtC,CAAE,MAAOntG,GAER,GADA0pE,GAAasjC,GACThtG,IAAMA,EAAI,EAAG,MAAMA,EACvBwmG,GAAU,EAAG,EACd,CACD,EAprCC,qBAg+CD,SAA8B13F,EAAOi+F,EAAIE,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAKC,EAAKC,GAClF,IAAIX,EAAKzjC,KACT,IACC28B,GAAkBp3F,EAAlBo3F,CAAyB6G,EAAIE,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAKC,EAAKC,EACxE,CAAE,MAAO3tG,GAER,GADA0pE,GAAasjC,GACThtG,IAAMA,EAAI,EAAG,MAAMA,EACvBwmG,GAAU,EAAG,EACd,CACD,EAx+CC,YAuVD,SAAqB13F,EAAOi+F,EAAIE,EAAIC,GACnC,IAAIF,EAAKzjC,KACT,IACC28B,GAAkBp3F,EAAlBo3F,CAAyB6G,EAAIE,EAAIC,EAClC,CAAE,MAAOltG,GAER,GADA0pE,GAAasjC,GACThtG,IAAMA,EAAI,EAAG,MAAMA,EACvBwmG,GAAU,EAAG,EACd,CACD,EA/VC,aAswBD,SAAsB13F,EAAOi+F,EAAIE,EAAIC,EAAIC,GACxC,IAAIH,EAAKzjC,KACT,IACC28B,GAAkBp3F,EAAlBo3F,CAAyB6G,EAAIE,EAAIC,EAAIC,EACtC,CAAE,MAAOntG,GAER,GADA0pE,GAAasjC,GACThtG,IAAMA,EAAI,EAAG,MAAMA,EACvBwmG,GAAU,EAAG,EACd,CACD,EA9wBC,aAimDD,SAAsB13F,EAAOi+F,EAAIE,EAAIC,EAAIC,GACxC,IAAIH,EAAKzjC,KACT,IACC28B,GAAkBp3F,EAAlBo3F,CAAyB6G,EAAIE,EAAIC,EAAIC,EACtC,CAAE,MAAOntG,GAER,GADA0pE,GAAasjC,GACThtG,IAAMA,EAAI,EAAG,MAAMA,EACvBwmG,GAAU,EAAG,EACd,CACD,EAzmDC,eAm2CD,SAAwB13F,EAAOi+F,EAAIE,EAAIC,EAAIC,EAAIC,EAAIC,GAClD,IAAIL,EAAKzjC,KACT,IACC28B,GAAkBp3F,EAAlBo3F,CAAyB6G,EAAIE,EAAIC,EAAIC,EAAIC,EAAIC,EAC9C,CAAE,MAAOrtG,GAER,GADA0pE,GAAasjC,GACThtG,IAAMA,EAAI,EAAG,MAAMA,EACvBwmG,GAAU,EAAG,EACd,CACD,EA32CC,aA8VD,SAAsB13F,EAAOi+F,EAAIE,EAAIC,EAAIC,GACxC,IAAIH,EAAKzjC,KACT,IACC28B,GAAkBp3F,EAAlBo3F,CAAyB6G,EAAIE,EAAIC,EAAIC,EACtC,CAAE,MAAOntG,GAER,GADA0pE,GAAasjC,GACThtG,IAAMA,EAAI,EAAG,MAAMA,EACvBwmG,GAAU,EAAG,EACd,CACD,EAtWC,eAm7BD,SAAwB13F,EAAOi+F,EAAIE,EAAIC,EAAIC,EAAIC,EAAIC,GAClD,IAAIL,EAAKzjC,KACT,IACC28B,GAAkBp3F,EAAlBo3F,CAAyB6G,EAAIE,EAAIC,EAAIC,EAAIC,EAAIC,EAC9C,CAAE,MAAOrtG,GAER,GADA0pE,GAAasjC,GACThtG,IAAMA,EAAI,EAAG,MAAMA,EACvBwmG,GAAU,EAAG,EACd,CACD,EA37BC,cAwYD,SAAuB13F,EAAOi+F,EAAIE,EAAIC,EAAIC,EAAIC,GAC7C,IAAIJ,EAAKzjC,KACT,IACC28B,GAAkBp3F,EAAlBo3F,CAAyB6G,EAAIE,EAAIC,EAAIC,EAAIC,EAC1C,CAAE,MAAOptG,GAER,GADA0pE,GAAasjC,GACThtG,IAAMA,EAAI,EAAG,MAAMA,EACvBwmG,GAAU,EAAG,EACd,CACD,EAhZC,mBAyuBD,SAA4B13F,EAAOi+F,EAAIE,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,GACtE,IAAIT,EAAKzjC,KACT,IACC28B,GAAkBp3F,EAAlBo3F,CAAyB6G,EAAIE,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAC9D,CAAE,MAAOztG,GAER,GADA0pE,GAAasjC,GACThtG,IAAMA,EAAI,EAAG,MAAMA,EACvBwmG,GAAU,EAAG,EACd,CACD,EAjvBC,gBAs8BD,SAAyB13F,EAAOi+F,EAAIE,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,GACvD,IAAIN,EAAKzjC,KACT,IACC28B,GAAkBp3F,EAAlBo3F,CAAyB6G,EAAIE,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAClD,CAAE,MAAOttG,GAER,GADA0pE,GAAasjC,GACThtG,IAAMA,EAAI,EAAG,MAAMA,EACvBwmG,GAAU,EAAG,EACd,CACD,EA98BC,qBAu/CD,SAA8B13F,EAAOi+F,EAAIE,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAKC,EAAKC,GAClF,IAAIX,EAAKzjC,KACT,IACC28B,GAAkBp3F,EAAlBo3F,CAAyB6G,EAAIE,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAKC,EAAKC,EACxE,CAAE,MAAO3tG,GAER,GADA0pE,GAAasjC,GACThtG,IAAMA,EAAI,EAAG,MAAMA,EACvBwmG,GAAU,EAAG,EACd,CACD,EA//CC,eAucD,SAAwB13F,EAAOi+F,EAAIE,EAAIC,EAAIC,EAAIC,EAAIC,GAClD,IAAIL,EAAKzjC,KACT,IACC28B,GAAkBp3F,EAAlBo3F,CAAyB6G,EAAIE,EAAIC,EAAIC,EAAIC,EAAIC,EAC9C,CAAE,MAAOrtG,GAER,GADA0pE,GAAasjC,GACThtG,IAAMA,EAAI,EAAG,MAAMA,EACvBwmG,GAAU,EAAG,EACd,CACD,EA/cC,wBAghCD,SAAiC13F,EAAOi+F,EAAIE,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,GACpG,IAAId,EAAKzjC,KACT,IACC28B,GAAkBp3F,EAAlBo3F,CAAyB6G,EAAIE,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,EACvF,CAAE,MAAO9tG,GAER,GADA0pE,GAAasjC,GACThtG,IAAMA,EAAI,EAAG,MAAMA,EACvBwmG,GAAU,EAAG,EACd,CACD,EAxhCC,yBAogCD,SAAkC13F,EAAOi+F,EAAIE,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,GAC1G,IAAIf,EAAKzjC,KACT,IACC28B,GAAkBp3F,EAAlBo3F,CAAyB6G,EAAIE,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,EAC5F,CAAE,MAAO/tG,GAER,GADA0pE,GAAasjC,GACThtG,IAAMA,EAAI,EAAG,MAAMA,EACvBwmG,GAAU,EAAG,EACd,CACD,EA5gCC,uBAyhCD,SAAgC13F,EAAOi+F,EAAIE,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAKC,EAAKC,EAAKC,EAAKC,GAC9F,IAAIb,EAAKzjC,KACT,IACC28B,GAAkBp3F,EAAlBo3F,CAAyB6G,EAAIE,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAKC,EAAKC,EAAKC,EAAKC,EAClF,CAAE,MAAO7tG,GAER,GADA0pE,GAAasjC,GACThtG,IAAMA,EAAI,EAAG,MAAMA,EACvBwmG,GAAU,EAAG,EACd,CACD,EAjiCC,gBAoeD,SAAyB13F,EAAOi+F,EAAIE,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,GACvD,IAAIN,EAAKzjC,KACT,IACC28B,GAAkBp3F,EAAlBo3F,CAAyB6G,EAAIE,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAClD,CAAE,MAAOttG,GAER,GADA0pE,GAAasjC,GACThtG,IAAMA,EAAI,EAAG,MAAMA,EACvBwmG,GAAU,EAAG,EACd,CACD,EA5eC,iBAogBD,SAA0B13F,EAAOi+F,EAAIE,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,GAC5D,IAAIP,EAAKzjC,KACT,IACC28B,GAAkBp3F,EAAlBo3F,CAAyB6G,EAAIE,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EACtD,CAAE,MAAOvtG,GAER,GADA0pE,GAAasjC,GACThtG,IAAMA,EAAI,EAAG,MAAMA,EACvBwmG,GAAU,EAAG,EACd,CACD,EA5gBC,kBAglBD,SAA2B13F,EAAOi+F,EAAIE,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,GACjE,IAAIR,EAAKzjC,KACT,IACC28B,GAAkBp3F,EAAlBo3F,CAAyB6G,EAAIE,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAC1D,CAAE,MAAOxtG,GAER,GADA0pE,GAAasjC,GACThtG,IAAMA,EAAI,EAAG,MAAMA,EACvBwmG,GAAU,EAAG,EACd,CACD,EAxlBC,oBA6lDD,SAA6B13F,EAAOi+F,EAAIE,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAKC,GAC5E,IAAIV,EAAKzjC,KACT,IACC28B,GAAkBp3F,EAAlBo3F,CAAyB6G,EAAIE,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAKC,EACnE,CAAE,MAAO1tG,GAER,GADA0pE,GAAasjC,GACThtG,IAAMA,EAAI,EAAG,MAAMA,EACvBwmG,GAAU,EAAG,EACd,CACD,EArmDC,oBA+1CD,SAA6B13F,EAAOi+F,EAAIE,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAKC,GAC5E,IAAIV,EAAKzjC,KACT,IACC28B,GAAkBp3F,EAAlBo3F,CAAyB6G,EAAIE,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAKC,EACnE,CAAE,MAAO1tG,GAER,GADA0pE,GAAasjC,GACThtG,IAAMA,EAAI,EAAG,MAAMA,EACvBwmG,GAAU,EAAG,EACd,CACD,EAv2CC,sBA+4BD,SAA+B13F,EAAOi+F,EAAIE,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAKC,EAAKC,EAAKC,GACxF,IAAIZ,EAAKzjC,KACT,IACC28B,GAAkBp3F,EAAlBo3F,CAAyB6G,EAAIE,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAKC,EAAKC,EAAKC,EAC7E,CAAE,MAAO5tG,GAER,GADA0pE,GAAasjC,GACThtG,IAAMA,EAAI,EAAG,MAAMA,EACvBwmG,GAAU,EAAG,EACd,CACD,EAv5BC,mBAmiDD,SAA4B13F,EAAOi+F,EAAIE,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,GACtE,IAAIT,EAAKzjC,KACT,IACC28B,GAAkBp3F,EAAlBo3F,CAAyB6G,EAAIE,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAC9D,CAAE,MAAOztG,GAER,GADA0pE,GAAasjC,GACThtG,IAAMA,EAAI,EAAG,MAAMA,EACvBwmG,GAAU,EAAG,EACd,CACD,EA3iDC,oBAu3BD,SAA6B13F,EAAOi+F,EAAIE,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAKC,GAC5E,IAAIV,EAAKzjC,KACT,IACC28B,GAAkBp3F,EAAlBo3F,CAAyB6G,EAAIE,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAKC,EACnE,CAAE,MAAO1tG,GAER,GADA0pE,GAAasjC,GACThtG,IAAMA,EAAI,EAAG,MAAMA,EACvBwmG,GAAU,EAAG,EACd,CACD,EA/3BC,qBA6lCD,SAA8B13F,EAAOi+F,EAAIE,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAKC,EAAKC,GAClF,IAAIX,EAAKzjC,KACT,IACC28B,GAAkBp3F,EAAlBo3F,CAAyB6G,EAAIE,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAKC,EAAKC,EACxE,CAAE,MAAO3tG,GAER,GADA0pE,GAAasjC,GACThtG,IAAMA,EAAI,EAAG,MAAMA,EACvBwmG,GAAU,EAAG,EACd,CACD,EArmCC,sBAsnBD,SAA+B13F,EAAOi+F,EAAIE,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAKC,EAAKC,EAAKC,GACxF,IAAIZ,EAAKzjC,KACT,IACC28B,GAAkBp3F,EAAlBo3F,CAAyB6G,EAAIE,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAKC,EAAKC,EAAKC,EAC7E,CAAE,MAAO5tG,GAER,GADA0pE,GAAasjC,GACThtG,IAAMA,EAAI,EAAG,MAAMA,EACvBwmG,GAAU,EAAG,EACd,CACD,EA9nBC,uBA03CD,SAAgC13F,EAAOi+F,EAAIE,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAKC,EAAKC,EAAKC,EAAKC,GAC9F,IAAIb,EAAKzjC,KACT,IACC28B,GAAkBp3F,EAAlBo3F,CAAyB6G,EAAIE,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAKC,EAAKC,EAAKC,EAAKC,EAClF,CAAE,MAAO7tG,GAER,GADA0pE,GAAasjC,GACThtG,IAAMA,EAAI,EAAG,MAAMA,EACvBwmG,GAAU,EAAG,EACd,CACD,EAl4CC,wBA68DD,SAAiC13F,EAAOi+F,EAAIE,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,GACpG,IAAId,EAAKzjC,KACT,IACC28B,GAAkBp3F,EAAlBo3F,CAAyB6G,EAAIE,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,EACvF,CAAE,MAAO9tG,GAER,GADA0pE,GAAasjC,GACThtG,IAAMA,EAAI,EAAG,MAAMA,EACvBwmG,GAAU,EAAG,EACd,CACD,EAr9DC,yBAugDD,SAAkC13F,EAAOi+F,EAAIE,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,GAC1G,IAAIf,EAAKzjC,KACT,IACC28B,GAAkBp3F,EAAlBo3F,CAAyB6G,EAAIE,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,EAC5F,CAAE,MAAO/tG,GAER,GADA0pE,GAAasjC,GACThtG,IAAMA,EAAI,EAAG,MAAMA,EACvBwmG,GAAU,EAAG,EACd,CACD,EA/gDC,2BAuiDD,SAAoC13F,EAAOi+F,EAAIE,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,GACtH,IAAIjB,EAAKzjC,KACT,IACC28B,GAAkBp3F,EAAlBo3F,CAAyB6G,EAAIE,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,EACtG,CAAE,MAAOjuG,GAER,GADA0pE,GAAasjC,GACThtG,IAAMA,EAAI,EAAG,MAAMA,EACvBwmG,GAAU,EAAG,EACd,CACD,EA/iDC,4BAghDD,SAAqC13F,EAAOi+F,EAAIE,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,GAC5H,IAAIlB,EAAKzjC,KACT,IACC28B,GAAkBp3F,EAAlBo3F,CAAyB6G,EAAIE,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,EAC3G,CAAE,MAAOluG,GAER,GADA0pE,GAAasjC,GACThtG,IAAMA,EAAI,EAAG,MAAMA,EACvBwmG,GAAU,EAAG,EACd,CACD,EAxhDC,6BA68CD,SAAsC13F,EAAOi+F,EAAIE,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,GAClI,IAAInB,EAAKzjC,KACT,IACC28B,GAAkBp3F,EAAlBo3F,CAAyB6G,EAAIE,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,EAChH,CAAE,MAAOnuG,GAER,GADA0pE,GAAasjC,GACThtG,IAAMA,EAAI,EAAG,MAAMA,EACvBwmG,GAAU,EAAG,EACd,CACD,EAr9CC,mBAw1BD,SAA4B13F,EAAOi+F,EAAIE,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,GACtE,IAAIT,EAAKzjC,KACT,IACC28B,GAAkBp3F,EAAlBo3F,CAAyB6G,EAAIE,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAC9D,CAAE,MAAOztG,GAER,GADA0pE,GAAasjC,GACThtG,IAAMA,EAAI,EAAG,MAAMA,EACvBwmG,GAAU,EAAG,EACd,CACD,EAh2BC,uBAy4CD,SAAgC13F,EAAOi+F,EAAIE,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAKC,EAAKC,EAAKC,EAAKC,GAC9F,IAAIb,EAAKzjC,KACT,IACC28B,GAAkBp3F,EAAlBo3F,CAAyB6G,EAAIE,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAKC,EAAKC,EAAKC,EAAKC,EAClF,CAAE,MAAO7tG,GAER,GADA0pE,GAAasjC,GACThtG,IAAMA,EAAI,EAAG,MAAMA,EACvBwmG,GAAU,EAAG,EACd,CACD,EAj5CC,mBA6iDD,SAA4B13F,EAAOi+F,EAAIE,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,GACtE,IAAIT,EAAKzjC,KACT,IACC28B,GAAkBp3F,EAAlBo3F,CAAyB6G,EAAIE,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAC9D,CAAE,MAAOztG,GAER,GADA0pE,GAAasjC,GACThtG,IAAMA,EAAI,EAAG,MAAMA,EACvBwmG,GAAU,EAAG,EACd,CACD,EArjDC,kBA+yCD,SAA2B13F,EAAOi+F,EAAIE,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,GACjE,IAAIR,EAAKzjC,KACT,IACC28B,GAAkBp3F,EAAlBo3F,CAAyB6G,EAAIE,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAC1D,CAAE,MAAOxtG,GAER,GADA0pE,GAAasjC,GACThtG,IAAMA,EAAI,EAAG,MAAMA,EACvBwmG,GAAU,EAAG,EACd,CACD,EAvzCC,sBA23CD,SAA+B13F,EAAOi+F,EAAIE,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAKC,EAAKC,EAAKC,GACxF,IAAIZ,EAAKzjC,KACT,IACC28B,GAAkBp3F,EAAlBo3F,CAAyB6G,EAAIE,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAKC,EAAKC,EAAKC,EAC7E,CAAE,MAAO5tG,GAER,GADA0pE,GAAasjC,GACThtG,IAAMA,EAAI,EAAG,MAAMA,EACvBwmG,GAAU,EAAG,EACd,CACD,EAn4CC,eAkjBD,SAAwB13F,EAAOi+F,EAAIE,EAAIC,EAAIC,EAAIC,EAAIC,GAClD,IAAIL,EAAKzjC,KACT,IACC28B,GAAkBp3F,EAAlBo3F,CAAyB6G,EAAIE,EAAIC,EAAIC,EAAIC,EAAIC,EAC9C,CAAE,MAAOrtG,GAER,GADA0pE,GAAasjC,GACThtG,IAAMA,EAAI,EAAG,MAAMA,EACvBwmG,GAAU,EAAG,EACd,CACD,EA1jBC,qBA+tCD,SAA8B13F,EAAOi+F,EAAIE,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAKC,EAAKC,GAClF,IAAIX,EAAKzjC,KACT,IACC28B,GAAkBp3F,EAAlBo3F,CAAyB6G,EAAIE,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAKC,EAAKC,EACxE,CAAE,MAAO3tG,GAER,GADA0pE,GAAasjC,GACThtG,IAAMA,EAAI,EAAG,MAAMA,EACvBwmG,GAAU,EAAG,EACd,CACD,EAvuCC,kCAo6CD,SAA2C13F,EAAOi+F,EAAIE,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,GAChK,IAAIxB,EAAKzjC,KACT,IACC28B,GAAkBp3F,EAAlBo3F,CAAyB6G,EAAIE,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,EACzI,CAAE,MAAOxuG,GAER,GADA0pE,GAAasjC,GACThtG,IAAMA,EAAI,EAAG,MAAMA,EACvBwmG,GAAU,EAAG,EACd,CACD,EA56CC,iBA+xCD,SAA0B13F,EAAOi+F,EAAIE,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,GAC5D,IAAIP,EAAKzjC,KACT,IACC28B,GAAkBp3F,EAAlBo3F,CAAyB6G,EAAIE,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EACtD,CAAE,MAAOvtG,GAER,GADA0pE,GAAasjC,GACThtG,IAAMA,EAAI,EAAG,MAAMA,EACvBwmG,GAAU,EAAG,EACd,CACD,EAvyCC,qBAssCD,SAA8B13F,EAAOi+F,EAAIE,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAKC,EAAKC,GAClF,IAAIX,EAAKzjC,KACT,IACC28B,GAAkBp3F,EAAlBo3F,CAAyB6G,EAAIE,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAKC,EAAKC,EACxE,CAAE,MAAO3tG,GAER,GADA0pE,GAAasjC,GACThtG,IAAMA,EAAI,EAAG,MAAMA,EACvBwmG,GAAU,EAAG,EACd,CACD,EA9sCC,kBAuwCD,SAA2B13F,EAAOi+F,EAAIE,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,GACjE,IAAIR,EAAKzjC,KACT,IACC28B,GAAkBp3F,EAAlBo3F,CAAyB6G,EAAIE,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAC1D,CAAE,MAAOxtG,GAER,GADA0pE,GAAasjC,GACThtG,IAAMA,EAAI,EAAG,MAAMA,EACvBwmG,GAAU,EAAG,EACd,CACD,EA/wCC,cAiiBD,SAAuB13F,EAAOi+F,EAAIE,EAAIC,EAAIC,EAAIC,GAC7C,IAAIJ,EAAKzjC,KACT,IACC28B,GAAkBp3F,EAAlBo3F,CAAyB6G,EAAIE,EAAIC,EAAIC,EAAIC,EAC1C,CAAE,MAAOptG,GAER,GADA0pE,GAAasjC,GACThtG,IAAMA,EAAI,EAAG,MAAMA,EACvBwmG,GAAU,EAAG,EACd,CACD,EAziBC,eA+kDD,SAAwB13F,EAAOi+F,EAAIE,EAAIC,EAAIC,EAAIC,EAAIC,GAClD,IAAIL,EAAKzjC,KACT,IACC28B,GAAkBp3F,EAAlBo3F,CAAyB6G,EAAIE,EAAIC,EAAIC,EAAIC,EAAIC,EAC9C,CAAE,MAAOrtG,GAER,GADA0pE,GAAasjC,GACThtG,IAAMA,EAAI,EAAG,MAAMA,EACvBwmG,GAAU,EAAG,EACd,CACD,EAvlDC,gBAmuCD,SAAyB13F,EAAOi+F,EAAIE,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,GACvD,IAAIN,EAAKzjC,KACT,IACC28B,GAAkBp3F,EAAlBo3F,CAAyB6G,EAAIE,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAClD,CAAE,MAAOttG,GAER,GADA0pE,GAAasjC,GACThtG,IAAMA,EAAI,EAAG,MAAMA,EACvBwmG,GAAU,EAAG,EACd,CACD,EA3uCC,gBA0+CD,SAAyB13F,EAAOi+F,EAAIE,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,GACvD,IAAIN,EAAKzjC,KACT,IACC28B,GAAkBp3F,EAAlBo3F,CAAyB6G,EAAIE,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAClD,CAAE,MAAOttG,GAER,GADA0pE,GAAasjC,GACThtG,IAAMA,EAAI,EAAG,MAAMA,EACvBwmG,GAAU,EAAG,EACd,CACD,EAl/CC,aAyyDD,SAAsB13F,EAAOi+F,EAAIE,EAAIC,EAAIC,GACxC,IAAIH,EAAKzjC,KACT,IACC28B,GAAkBp3F,EAAlBo3F,CAAyB6G,EAAIE,EAAIC,EAAIC,EACtC,CAAE,MAAOntG,GAER,GADA0pE,GAAasjC,GACThtG,IAAMA,EAAI,EAAG,MAAMA,EACvBwmG,GAAU,EAAG,EACd,CACD,EAjzDC,cA+uBD,SAAuB13F,EAAOi+F,EAAIE,EAAIC,EAAIC,EAAIC,GAC7C,IAAIJ,EAAKzjC,KACT,IACC28B,GAAkBp3F,EAAlBo3F,CAAyB6G,EAAIE,EAAIC,EAAIC,EAAIC,EAC1C,CAAE,MAAOptG,GAER,GADA0pE,GAAasjC,GACThtG,IAAMA,EAAI,EAAG,MAAMA,EACvBwmG,GAAU,EAAG,EACd,CACD,EAvvBC,eAwbD,SAAwB13F,EAAOi+F,EAAIE,EAAIC,EAAIC,EAAIC,EAAIC,GAClD,IAAIL,EAAKzjC,KACT,IACC28B,GAAkBp3F,EAAlBo3F,CAAyB6G,EAAIE,EAAIC,EAAIC,EAAIC,EAAIC,EAC9C,CAAE,MAAOrtG,GAER,GADA0pE,GAAasjC,GACThtG,IAAMA,EAAI,EAAG,MAAMA,EACvBwmG,GAAU,EAAG,EACd,CACD,EAhcC,iBA2xDD,SAA0B13F,EAAOi+F,EAAIE,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,GAC5D,IAAIP,EAAKzjC,KACT,IACC28B,GAAkBp3F,EAAlBo3F,CAAyB6G,EAAIE,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EACtD,CAAE,MAAOvtG,GAER,GADA0pE,GAAasjC,GACThtG,IAAMA,EAAI,EAAG,MAAMA,EACvBwmG,GAAU,EAAG,EACd,CACD,EAnyDC,mBAirCD,SAA4B13F,EAAOi+F,EAAIE,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,GACtE,IAAIT,EAAKzjC,KACT,IACC28B,GAAkBp3F,EAAlBo3F,CAAyB6G,EAAIE,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAC9D,CAAE,MAAOztG,GAER,GADA0pE,GAAasjC,GACThtG,IAAMA,EAAI,EAAG,MAAMA,EACvBwmG,GAAU,EAAG,EACd,CACD,EAzrCC,oBAinBD,SAA6B13F,EAAOi+F,EAAIE,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAKC,GAC5E,IAAIV,EAAKzjC,KACT,IACC28B,GAAkBp3F,EAAlBo3F,CAAyB6G,EAAIE,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAKC,EACnE,CAAE,MAAO1tG,GAER,GADA0pE,GAAasjC,GACThtG,IAAMA,EAAI,EAAG,MAAMA,EACvBwmG,GAAU,EAAG,EACd,CACD,EAznBC,sBAy0CD,SAA+B13F,EAAOi+F,EAAIE,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAKC,EAAKC,EAAKC,GACxF,IAAIZ,EAAKzjC,KACT,IACC28B,GAAkBp3F,EAAlBo3F,CAAyB6G,EAAIE,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAKC,EAAKC,EAAKC,EAC7E,CAAE,MAAO5tG,GAER,GADA0pE,GAAasjC,GACThtG,IAAMA,EAAI,EAAG,MAAMA,EACvBwmG,GAAU,EAAG,EACd,CACD,EAj1CC,iBA6nDD,SAA0B13F,EAAOi+F,EAAIE,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,GAC5D,IAAIP,EAAKzjC,KACT,IACC28B,GAAkBp3F,EAAlBo3F,CAAyB6G,EAAIE,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EACtD,CAAE,MAAOvtG,GAER,GADA0pE,GAAasjC,GACThtG,IAAMA,EAAI,EAAG,MAAMA,EACvBwmG,GAAU,EAAG,EACd,CACD,EAroDC,kBAy4CD,SAA2B13F,EAAOi+F,EAAIE,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,GACjE,IAAIR,EAAKzjC,KACT,IACC28B,GAAkBp3F,EAAlBo3F,CAAyB6G,EAAIE,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAC1D,CAAE,MAAOxtG,GAER,GADA0pE,GAAasjC,GACThtG,IAAMA,EAAI,EAAG,MAAMA,EACvBwmG,GAAU,EAAG,EACd,CACD,EAj5CC,iBA8oBD,SAA0B13F,EAAOi+F,EAAIE,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,GAC5D,IAAIP,EAAKzjC,KACT,IACC28B,GAAkBp3F,EAAlBo3F,CAAyB6G,EAAIE,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EACtD,CAAE,MAAOvtG,GAER,GADA0pE,GAAasjC,GACThtG,IAAMA,EAAI,EAAG,MAAMA,EACvBwmG,GAAU,EAAG,EACd,CACD,EAtpBC,YAkfD,SAAqB13F,EAAOi+F,EAAIE,EAAIC,GACnC,IAAIF,EAAKzjC,KACT,IACC28B,GAAkBp3F,EAAlBo3F,CAAyB6G,EAAIE,EAAIC,EAClC,CAAE,MAAOltG,GAER,GADA0pE,GAAasjC,GACThtG,IAAMA,EAAI,EAAG,MAAMA,EACvBwmG,GAAU,EAAG,EACd,CACD,EA1fC,aAsnBD,SAAsB13F,EAAOi+F,EAAIE,EAAIC,EAAIC,GACxC,IAAIH,EAAKzjC,KACT,IACC28B,GAAkBp3F,EAAlBo3F,CAAyB6G,EAAIE,EAAIC,EAAIC,EACtC,CAAE,MAAOntG,GAER,GADA0pE,GAAasjC,GACThtG,IAAMA,EAAI,EAAG,MAAMA,EACvBwmG,GAAU,EAAG,EACd,CACD,EA9nBC,eAsgBD,SAAwB13F,EAAOi+F,EAAIE,EAAIC,EAAIC,EAAIC,EAAIC,GAClD,IAAIL,EAAKzjC,KACT,IACC28B,GAAkBp3F,EAAlBo3F,CAAyB6G,EAAIE,EAAIC,EAAIC,EAAIC,EAAIC,EAC9C,CAAE,MAAOrtG,GAER,GADA0pE,GAAasjC,GACThtG,IAAMA,EAAI,EAAG,MAAMA,EACvBwmG,GAAU,EAAG,EACd,CACD,EA9gBC,qBAuyDD,SAA8B13F,EAAOi+F,EAAIE,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAKC,EAAKC,GAClF,IAAIX,EAAKzjC,KACT,IACC28B,GAAkBp3F,EAAlBo3F,CAAyB6G,EAAIE,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAKC,EAAKC,EACxE,CAAE,MAAO3tG,GAER,GADA0pE,GAAasjC,GACThtG,IAAMA,EAAI,EAAG,MAAMA,EACvBwmG,GAAU,EAAG,EACd,CACD,EA/yDC,aAkcD,SAAsB13F,EAAOi+F,EAAIE,EAAIC,EAAIC,GACxC,IAAIH,EAAKzjC,KACT,IACC28B,GAAkBp3F,EAAlBo3F,CAAyB6G,EAAIE,EAAIC,EAAIC,EACtC,CAAE,MAAOntG,GAER,GADA0pE,GAAasjC,GACThtG,IAAMA,EAAI,EAAG,MAAMA,EACvBwmG,GAAU,EAAG,EACd,CACD,EA1cC,cAw5CD,SAAuB13F,EAAOi+F,EAAIE,EAAIC,EAAIC,EAAIC,GAC7C,IAAIJ,EAAKzjC,KACT,IACC28B,GAAkBp3F,EAAlBo3F,CAAyB6G,EAAIE,EAAIC,EAAIC,EAAIC,EAC1C,CAAE,MAAOptG,GAER,GADA0pE,GAAasjC,GACThtG,IAAMA,EAAI,EAAG,MAAMA,EACvBwmG,GAAU,EAAG,EACd,CACD,EAh6CC,gBA4tCD,SAAyB13F,EAAOi+F,EAAIE,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,GACvD,IAAIN,EAAKzjC,KACT,IACC28B,GAAkBp3F,EAAlBo3F,CAAyB6G,EAAIE,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAClD,CAAE,MAAOttG,GAER,GADA0pE,GAAasjC,GACThtG,IAAMA,EAAI,EAAG,MAAMA,EACvBwmG,GAAU,EAAG,EACd,CACD,EApuCC,kBAs4DD,SAA2B13F,EAAOi+F,EAAIE,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,GACjE,IAAIR,EAAKzjC,KACT,IACC28B,GAAkBp3F,EAAlBo3F,CAAyB6G,EAAIE,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAC1D,CAAE,MAAOxtG,GAER,GADA0pE,GAAasjC,GACThtG,IAAMA,EAAI,EAAG,MAAMA,EACvBwmG,GAAU,EAAG,EACd,CACD,EA94DC,qBA2pBD,SAA8B13F,EAAOi+F,EAAIE,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAKC,EAAKC,GAClF,IAAIX,EAAKzjC,KACT,IACC28B,GAAkBp3F,EAAlBo3F,CAAyB6G,EAAIE,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAKC,EAAKC,EACxE,CAAE,MAAO3tG,GAER,GADA0pE,GAAasjC,GACThtG,IAAMA,EAAI,EAAG,MAAMA,EACvBwmG,GAAU,EAAG,EACd,CACD,EAnqBC,oBAwlBD,SAA6B13F,EAAOi+F,EAAIE,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAKC,GAC5E,IAAIV,EAAKzjC,KACT,IACC28B,GAAkBp3F,EAAlBo3F,CAAyB6G,EAAIE,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAKC,EACnE,CAAE,MAAO1tG,GAER,GADA0pE,GAAasjC,GACThtG,IAAMA,EAAI,EAAG,MAAMA,EACvBwmG,GAAU,EAAG,EACd,CACD,EAhmBC,WAkUD,SAAoB13F,EAAOi+F,EAAIE,GAC9B,IAAID,EAAKzjC,KACT,IACC28B,GAAkBp3F,EAAlBo3F,CAAyB6G,EAAIE,EAC9B,CAAE,MAAOjtG,GAER,GADA0pE,GAAasjC,GACThtG,IAAMA,EAAI,EAAG,MAAMA,EACvBwmG,GAAU,EAAG,EACd,CACD,EA1UC,YAgpDD,SAAqB13F,EAAOi+F,EAAIE,EAAIC,GACnC,IAAIF,EAAKzjC,KACT,IACC28B,GAAkBp3F,EAAlBo3F,CAAyB6G,EAAIE,EAAIC,EAClC,CAAE,MAAOltG,GAER,GADA0pE,GAAasjC,GACThtG,IAAMA,EAAI,EAAG,MAAMA,EACvBwmG,GAAU,EAAG,EACd,CACD,EAxpDC,cAwxCD,SAAuB13F,EAAOi+F,EAAIE,EAAIC,EAAIC,EAAIC,GAC7C,IAAIJ,EAAKzjC,KACT,IACC28B,GAAkBp3F,EAAlBo3F,CAAyB6G,EAAIE,EAAIC,EAAIC,EAAIC,EAC1C,CAAE,MAAOptG,GAER,GADA0pE,GAAasjC,GACThtG,IAAMA,EAAI,EAAG,MAAMA,EACvBwmG,GAAU,EAAG,EACd,CACD,EAhyCC,mBAoiCD,SAA4B13F,EAAOi+F,EAAIE,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,GACtE,IAAIT,EAAKzjC,KACT,IACC28B,GAAkBp3F,EAAlBo3F,CAAyB6G,EAAIE,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAC9D,CAAE,MAAOztG,GAER,GADA0pE,GAAasjC,GACThtG,IAAMA,EAAI,EAAG,MAAMA,EACvBwmG,GAAU,EAAG,EACd,CACD,EA5iCC,sBAs8CD,SAA+B13F,EAAOi+F,EAAIE,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAKC,EAAKC,EAAKC,GACxF,IAAIZ,EAAKzjC,KACT,IACC28B,GAAkBp3F,EAAlBo3F,CAAyB6G,EAAIE,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAKC,EAAKC,EAAKC,EAC7E,CAAE,MAAO5tG,GAER,GADA0pE,GAAasjC,GACThtG,IAAMA,EAAI,EAAG,MAAMA,EACvBwmG,GAAU,EAAG,EACd,CACD,EA98CC,YAsZD,SAAqB13F,EAAOi+F,EAAIE,EAAIC,GACnC,IAAIF,EAAKzjC,KACT,IACC28B,GAAkBp3F,EAAlBo3F,CAAyB6G,EAAIE,EAAIC,EAClC,CAAE,MAAOltG,GAER,GADA0pE,GAAasjC,GACThtG,IAAMA,EAAI,EAAG,MAAMA,EACvBwmG,GAAU,EAAG,EACd,CACD,EA9ZC,kBAshCD,SAA2B13F,EAAOi+F,EAAIE,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,GACjE,IAAIR,EAAKzjC,KACT,IACC28B,GAAkBp3F,EAAlBo3F,CAAyB6G,EAAIE,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAC1D,CAAE,MAAOxtG,GAER,GADA0pE,GAAasjC,GACThtG,IAAMA,EAAI,EAAG,MAAMA,EACvBwmG,GAAU,EAAG,EACd,CACD,EA9hCC,cA+oCD,SAAuB13F,EAAOi+F,EAAIE,EAAIC,EAAIC,EAAIC,GAC7C,IAAIJ,EAAKzjC,KACT,IACC28B,GAAkBp3F,EAAlBo3F,CAAyB6G,EAAIE,EAAIC,EAAIC,EAAIC,EAC1C,CAAE,MAAOptG,GAER,GADA0pE,GAAasjC,GACThtG,IAAMA,EAAI,EAAG,MAAMA,EACvBwmG,GAAU,EAAG,EACd,CACD,EAvpCC,kBA25BD,SAA2B13F,EAAOi+F,EAAIE,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,GACjE,IAAIR,EAAKzjC,KACT,IACC28B,GAAkBp3F,EAAlBo3F,CAAyB6G,EAAIE,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAC1D,CAAE,MAAOxtG,GAER,GADA0pE,GAAasjC,GACThtG,IAAMA,EAAI,EAAG,MAAMA,EACvBwmG,GAAU,EAAG,EACd,CACD,EAn6BC,iBA8tBD,SAA0B13F,EAAOi+F,EAAIE,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,GAC5D,IAAIP,EAAKzjC,KACT,IACC28B,GAAkBp3F,EAAlBo3F,CAAyB6G,EAAIE,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EACtD,CAAE,MAAOvtG,GAER,GADA0pE,GAAasjC,GACThtG,IAAMA,EAAI,EAAG,MAAMA,EACvBwmG,GAAU,EAAG,EACd,CACD,EAtuBC,iBA+uCD,SAA0B13F,EAAOi+F,EAAIE,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,GAC5D,IAAIP,EAAKzjC,KACT,IACC28B,GAAkBp3F,EAAlBo3F,CAAyB6G,EAAIE,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EACtD,CAAE,MAAOvtG,GAER,GADA0pE,GAAasjC,GACThtG,IAAMA,EAAI,EAAG,MAAMA,EACvBwmG,GAAU,EAAG,EACd,CACD,EAvvCC,oBA62DD,SAA6B13F,EAAOi+F,EAAIE,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAKC,GAC5E,IAAIV,EAAKzjC,KACT,IACC28B,GAAkBp3F,EAAlBo3F,CAAyB6G,EAAIE,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAKC,EACnE,CAAE,MAAO1tG,GAER,GADA0pE,GAAasjC,GACThtG,IAAMA,EAAI,EAAG,MAAMA,EACvBwmG,GAAU,EAAG,EACd,CACD,EAr3DC,uBAijCD,SAAgC13F,EAAOi+F,EAAIE,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAKC,EAAKC,EAAKC,EAAKC,GAC9F,IAAIb,EAAKzjC,KACT,IACC28B,GAAkBp3F,EAAlBo3F,CAAyB6G,EAAIE,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAKC,EAAKC,EAAKC,EAAKC,EAClF,CAAE,MAAO7tG,GAER,GADA0pE,GAAasjC,GACThtG,IAAMA,EAAI,EAAG,MAAMA,EACvBwmG,GAAU,EAAG,EACd,CACD,EAzjCC,wBAosBD,SAAiC13F,EAAOi+F,EAAIE,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,GACpG,IAAId,EAAKzjC,KACT,IACC28B,GAAkBp3F,EAAlBo3F,CAAyB6G,EAAIE,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,EACvF,CAAE,MAAO9tG,GAER,GADA0pE,GAAasjC,GACThtG,IAAMA,EAAI,EAAG,MAAMA,EACvBwmG,GAAU,EAAG,EACd,CACD,EA5sBC,UA0vBD,SAAmB13F,EAAOi+F,GACzB,IAAIC,EAAKzjC,KACT,IACC28B,GAAkBp3F,EAAlBo3F,CAAyB6G,EAC1B,CAAE,MAAO/sG,GAER,GADA0pE,GAAasjC,GACThtG,IAAMA,EAAI,EAAG,MAAMA,EACvBwmG,GAAU,EAAG,EACd,CACD,EAlwBC,aAw0DD,SAAsB13F,EAAOi+F,EAAIE,EAAIC,EAAIC,GACxC,IAAIH,EAAKzjC,KACT,IACC28B,GAAkBp3F,EAAlBo3F,CAAyB6G,EAAIE,EAAIC,EAAIC,EACtC,CAAE,MAAOntG,GAER,GADA0pE,GAAasjC,GACThtG,IAAMA,EAAI,EAAG,MAAMA,EACvBwmG,GAAU,EAAG,EACd,CACD,EAh1DC,eAopBD,SAAwB13F,EAAOi+F,EAAIE,EAAIC,EAAIC,EAAIC,EAAIC,GAClD,IAAIL,EAAKzjC,KACT,IACC28B,GAAkBp3F,EAAlBo3F,CAAyB6G,EAAIE,EAAIC,EAAIC,EAAIC,EAAIC,EAC9C,CAAE,MAAOrtG,GAER,GADA0pE,GAAasjC,GACThtG,IAAMA,EAAI,EAAG,MAAMA,EACvBwmG,GAAU,EAAG,EACd,CACD,EA5pBC,iBAkkCD,SAA0B13F,EAAOi+F,EAAIE,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,GAC5D,IAAIP,EAAKzjC,KACT,IACC28B,GAAkBp3F,EAAlBo3F,CAAyB6G,EAAIE,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EACtD,CAAE,MAAOvtG,GAER,GADA0pE,GAAasjC,GACThtG,IAAMA,EAAI,EAAG,MAAMA,EACvBwmG,GAAU,EAAG,EACd,CACD,EA1kCC,kBAsjCD,SAA2B13F,EAAOi+F,EAAIE,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,GACjE,IAAIR,EAAKzjC,KACT,IACC28B,GAAkBp3F,EAAlBo3F,CAAyB6G,EAAIE,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAC1D,CAAE,MAAOxtG,GAER,GADA0pE,GAAasjC,GACThtG,IAAMA,EAAI,EAAG,MAAMA,EACvBwmG,GAAU,EAAG,EACd,CACD,EA9jCC,yBAm/BD,SAAkC13F,EAAOi+F,EAAIE,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,GAC1G,IAAIf,EAAKzjC,KACT,IACC28B,GAAkBp3F,EAAlBo3F,CAAyB6G,EAAIE,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,EAC5F,CAAE,MAAO/tG,GAER,GADA0pE,GAAasjC,GACThtG,IAAMA,EAAI,EAAG,MAAMA,EACvBwmG,GAAU,EAAG,EACd,CACD,EA3/BC,2BAu+BD,SAAoC13F,EAAOi+F,EAAIE,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,GACtH,IAAIjB,EAAKzjC,KACT,IACC28B,GAAkBp3F,EAAlBo3F,CAAyB6G,EAAIE,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,EACtG,CAAE,MAAOjuG,GAER,GADA0pE,GAAasjC,GACThtG,IAAMA,EAAI,EAAG,MAAMA,EACvBwmG,GAAU,EAAG,EACd,CACD,EA/+BC,0BA+6BD,SAAmC13F,EAAOi+F,EAAIE,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,GAChH,IAAIhB,EAAKzjC,KACT,IACC28B,GAAkBp3F,EAAlBo3F,CAAyB6G,EAAIE,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,EACjG,CAAE,MAAOhuG,GAER,GADA0pE,GAAasjC,GACThtG,IAAMA,EAAI,EAAG,MAAMA,EACvBwmG,GAAU,EAAG,EACd,CACD,EAv7BC,4BA2/BD,SAAqC13F,EAAOi+F,EAAIE,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,GAC5H,IAAIlB,EAAKzjC,KACT,IACC28B,GAAkBp3F,EAAlBo3F,CAAyB6G,EAAIE,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,EAC3G,CAAE,MAAOluG,GAER,GADA0pE,GAAasjC,GACThtG,IAAMA,EAAI,EAAG,MAAMA,EACvBwmG,GAAU,EAAG,EACd,CACD,EAngCC,6BAy9BD,SAAsC13F,EAAOi+F,EAAIE,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,GAClI,IAAInB,EAAKzjC,KACT,IACC28B,GAAkBp3F,EAAlBo3F,CAAyB6G,EAAIE,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,EAChH,CAAE,MAAOnuG,GAER,GADA0pE,GAAasjC,GACThtG,IAAMA,EAAI,EAAG,MAAMA,EACvBwmG,GAAU,EAAG,EACd,CACD,EAj+BC,mBAjiBD,SAA6BxuG,GAC5B,OAAOA,CACR,EAgiBC,SAAY+qG,GACZ,WApQD,SAAqB19F,EAAG29F,EAASlmG,EAAQmmG,EAAIwL,GAC5C,OAAO1L,GAAU19F,EAAG29F,EAASlmG,EAAQmmG,EACtC,GAmWI7jB,IA/vEJ,WACC,IAlByB+Z,EAAQsB,EAAYC,EAASgU,EAkBlDtzD,EAAO,CACV,IAAOkrD,GACP,uBAA0BA,IAE3B,SAASqI,EAAgBpZ,EAAUvgG,GAClC,IAnJiB02F,EAmJb32F,EAAUwgG,EAASxgG,QAOvB,OANA0jG,EAAY,IAAI1jG,EAChByzF,EAAaiQ,EAAY,IAAU,OACnCmB,IACAF,EAAYjB,EAAY,IAA6B,0BAvJpC/M,EAwJP+M,EAAY,IAAqB,kBAvJ5CqB,EAAWj6B,QAAQ6rB,GA0BpB,SAA6B5jB,GAK5B,GAJAkyB,IACIvB,EAA+B,wBAClCA,EAA+B,uBAAEuB,GAEX,GAAnBA,IAC0B,OAAzBC,IACH7E,cAAc6E,GACdA,EAAuB,MAEpBC,GAAuB,CAC1B,IAAIwU,EAAWxU,EACfA,EAAwB,KACxBwU,GACD,CAEF,CA8GEE,GACO75G,CACR,CAKA,GA3IAilG,IACIvB,EAA+B,wBAClCA,EAA+B,uBAAEuB,GAyI9BvB,EAAwB,gBAC3B,IACC,OAAOA,EAAwB,gBAAEr9C,EAAMuzD,EACxC,CAAE,MAAO3uG,GACRC,EAAI,sDAAwDD,GAC5Dw4F,EAAmBx4F,EACpB,EA1CwBm5F,EA4CRvR,EA5CgB6S,EA4CJN,EA5CgBO,EA4CAt/C,EA5CSszD,EAiCtD,SAAoChmG,GACnCimG,EAAgBjmG,EAAiB,SAClC,EAlCKywF,GAAqD,mBAApCvW,YAAY0S,sBAAuC+E,EAAUI,IAAgBrB,EAAUqB,IAAgBzB,GAAuC,mBAATrgC,MAYnJ6hC,EAAuBC,EAAYC,EAASgU,GAX5C/1C,MAAM8hC,EAAY,CACxBlR,YAAa,gBACX5rC,MAAKwpC,GACMvE,YAAY0S,qBAAqBnO,EAAUuT,GAC1C/8C,KAAK+wD,GAAU,SAAS9wD,GAGrC,OAFA39C,EAAI,kCAAoC29C,GACxC39C,EAAI,6CACGu6F,EAAuBC,EAAYC,EAASgU,EACpD,OAkC6EjlB,MAAM+O,EAEtF,CAooEUqW,GAMKpW,EAAiB,SAAI,WACnC,OAAmBA,EAAiB,SAAIA,EAAY,IAAW,SAAG3D,MAAM,KAAMnE,UAC/E,EAE+B8H,EAAiC,yBAAI,WACnE,OAAmCA,EAAiC,yBAAIA,EAAY,IAA2B,yBAAG3D,MAAM,KAAMnE,UAC/H,EAEkC8H,EAAoC,4BAAI,WACzE,OAAsCA,EAAoC,4BAAIA,EAAY,IAA8B,4BAAG3D,MAAM,KAAMnE,UACxI,EAEgC8H,EAAkC,0BAAI,WACrE,OAAoCA,EAAkC,0BAAIA,EAAY,IAA4B,0BAAG3D,MAAM,KAAMnE,UAClI,EAEgC8H,EAAkC,0BAAI,WACrE,OAAoCA,EAAkC,0BAAIA,EAAY,IAA4B,0BAAG3D,MAAM,KAAMnE,UAClI,EAEwB8H,EAA0B,kBAAI,WACrD,OAA4BA,EAA0B,kBAAIA,EAAY,IAAoB,kBAAG3D,MAAM,KAAMnE,UAC1G,EAEyB8H,EAA2B,mBAAI,WACvD,OAA6BA,EAA2B,mBAAIA,EAAY,IAAqB,mBAAG3D,MAAM,KAAMnE,UAC7G,EAEwB8H,EAA0B,kBAAI,WACrD,OAA4BA,EAA0B,kBAAIA,EAAY,IAAoB,kBAAG3D,MAAM,KAAMnE,UAC1G,EAEyB8H,EAA2B,mBAAI,WACvD,OAA6BA,EAA2B,mBAAIA,EAAY,IAAqB,mBAAG3D,MAAM,KAAMnE,UAC7G,EAEuB8H,EAAyB,iBAAI,WACnD,OAA2BA,EAAyB,iBAAIA,EAAY,IAAmB,iBAAG3D,MAAM,KAAMnE,UACvG,EAEwB8H,EAA0B,kBAAI,WACrD,OAA4BA,EAA0B,kBAAIA,EAAY,IAAoB,kBAAG3D,MAAM,KAAMnE,UAC1G,EAEe8H,EAAiB,SAAI,WACnC,OAAmBA,EAAiB,SAAIA,EAAY,IAAW,SAAG3D,MAAM,KAAMnE,UAC/E,EAEuB8H,EAAyB,iBAAI,WACnD,OAA2BA,EAAyB,iBAAIA,EAAY,IAAmB,iBAAG3D,MAAM,KAAMnE,UACvG,EAEwB8H,EAA0B,kBAAI,WACrD,OAA4BA,EAA0B,kBAAIA,EAAY,IAAoB,kBAAG3D,MAAM,KAAMnE,UAC1G,EAEwB8H,EAA0B,kBAAI,WACrD,OAA4BA,EAA0B,kBAAIA,EAAY,IAAoB,kBAAG3D,MAAM,KAAMnE,UAC1G,EAE2B8H,EAA6B,qBAAI,WAC3D,OAA+BA,EAA6B,qBAAIA,EAAY,IAAuB,qBAAG3D,MAAM,KAAMnE,UACnH,EAE4B8H,EAA8B,sBAAI,WAC7D,OAAgCA,EAA8B,sBAAIA,EAAY,IAAwB,sBAAG3D,MAAM,KAAMnE,UACtH,EAE4B8H,EAA8B,sBAAI,WAC7D,OAAgCA,EAA8B,sBAAIA,EAAY,IAAwB,sBAAG3D,MAAM,KAAMnE,UACtH,EAEc8H,EAAgB,QAAI,WACjC,OAAkBA,EAAgB,QAAIA,EAAY,IAAU,QAAG3D,MAAM,KAAMnE,UAC5E,EAEuB8H,EAAyB,iBAAI,WACnD,OAA2BA,EAAyB,iBAAIA,EAAY,IAAmB,iBAAG3D,MAAM,KAAMnE,UACvG,EAUc8H,EAAgB,QAAI,WACjC,OAAQrZ,GAAUqZ,EAAgB,QAAIA,EAAY,IAAU,QAAG3D,MAAM,KAAMnE,UAC5E,GAEI1T,GAAQwb,EAAc,MAAI,WAC7B,OAAQxb,GAAQwb,EAAc,MAAIA,EAAY,IAAQ,MAAG3D,MAAM,KAAMnE,UACtE,EAEI0Q,GAAiB,WACpB,OAAQA,GAAiB5I,EAAY,IAAiB,eAAG3D,MAAM,KAAMnE,UACtE,EAMI6V,IAJ+B/N,EAAqC,6BAAI,WAC3E,OAAuCA,EAAqC,6BAAIA,EAAY,IAA+B,6BAAG3D,MAAM,KAAMnE,UAC3I,EAEgB,WACf,OAAQ6V,GAAY/N,EAAY,IAAY,UAAG3D,MAAM,KAAMnE,UAC5D,GAEI4L,GAAc,WACjB,OAAQA,GAAc9D,EAAY,IAAe,aAAG3D,MAAM,KAAMnE,UACjE,EAMIpnB,GAAY,WACf,OAAQA,GAAYkvB,EAAY,IAAa,WAAG3D,MAAM,KAAMnE,UAC7D,EAEIjnB,GAAe,WAClB,OAAQA,GAAe+uB,EAAY,IAAgB,cAAG3D,MAAM,KAAMnE,UACnE,EAEInnB,GAAa,WAChB,OAAQA,GAAaivB,EAAY,IAAc,YAAG3D,MAAM,KAAMnE,UAC/D,EAEI8V,GAAsC,WACzC,OAAQA,GAAsChO,EAAY,IAAsC,oCAAG3D,MAAM,KAAMnE,UAChH,EAEI4V,GAAsC,WACzC,OAAQA,GAAsC9N,EAAY,IAAsC,oCAAG3D,MAAM,KAAMnE,UAChH,EAEIgM,GAAmB,WACtB,OAAQA,GAAmBlE,EAAY,IAAmB,iBAAG3D,MAAM,KAAMnE,UAC1E,EAEIwL,GAAyB,WAC5B,OAAQA,GAAyB1D,EAAY,IAAyB,uBAAG3D,MAAM,KAAMnE,UACtF,EAwyDA,SAASjyF,KAQR,SAASowG,IACJhX,KACJA,IAAY,EACZW,EAAkB,WAAI,EAClBkB,IAvwILkB,EAAqBf,GAywIpBvB,EAAoBE,GAChBA,EAA6B,sBAAGA,EAA6B,uBAvwInE,WACC,GAAIA,EAAgB,QAEnB,IADgC,mBAArBA,EAAgB,UAAiBA,EAAgB,QAAI,CAAEA,EAAgB,UAC3EA,EAAgB,QAAEtiG,QAiBLu1F,EAhBN+M,EAAgB,QAAEnyE,QAiBjCyzE,EAAcl6B,QAAQ6rB,GADvB,IAAsBA,EAbrBmP,EAAqBd,EACtB,CAgwIE/B,IACD,CAhBIgC,EAAkB,IAxwIvB,WACC,GAAIvB,EAAe,OAElB,IAD+B,mBAApBA,EAAe,SAAiBA,EAAe,OAAI,CAAEA,EAAe,SACxEA,EAAe,OAAEtiG,QAsBLu1F,EArBN+M,EAAe,OAAEnyE,QAsB/BuzE,EAAah6B,QAAQ6rB,GADtB,IAAqBA,EAlBpBmP,EAAqBhB,EACtB,CAmwIC9Q,GACIiR,EAAkB,IAalBvB,EAAkB,WACrBA,EAAkB,UAAE,cACpBruD,YAAW,WACVA,YAAW,WACVquD,EAAkB,UAAE,GACrB,GAAG,GACHqW,GACD,GAAG,IAEHA,KAEF,CAEA,GAlDArW,EAAmB,WAAIjvB,GAEvBivB,EAAkB,UAAIlvB,GAEtBkvB,EAAqB,aAAI/uB,GAEzB+uB,EAAqB,aAAInY,GAEzBmY,EAAqB,aAAIpZ,GAEzBoZ,EAAwB,gBAAItZ,GAI5B+a,EAAwB,SAAS6U,IAC3BjX,IAAWp5F,KACXo5F,KAAWoC,EAAwB6U,EACzC,EAiCItW,EAAgB,QAEnB,IADgC,mBAArBA,EAAgB,UAAiBA,EAAgB,QAAI,CAAEA,EAAgB,UAC3EA,EAAgB,QAAEtiG,OAAS,GACjCsiG,EAAgB,QAAEvvD,KAAlBuvD,GAOA,OAHF/5F,KAGS45F,EAAQ3S,KAGjB,GAGE3wF,EAAOD,QAAUujG,C,gCC1/InBtjG,EAAOD,QAmBP,SAAmB6+F,EAAIp3C,GAKnB,IAJA,IAAI3tC,EAAU,IAAInW,MAAMi4F,UAAUx6F,OAAS,GACvC+nC,EAAU,EACVpvB,EAAU,EACVkgG,GAAU,EACPlgG,EAAQ6hF,UAAUx6F,QACrB0Y,EAAOqvB,KAAYyyD,UAAU7hF,KACjC,OAAO,IAAI1S,SAAQ,SAAkBC,EAASC,GAC1CuS,EAAOqvB,GAAU,SAAkBj+B,GAC/B,GAAI+uG,EAEA,GADAA,GAAU,EACN/uG,EACA3D,EAAO2D,OACN,CAGD,IAFA,IAAI4O,EAAS,IAAInW,MAAMi4F,UAAUx6F,OAAS,GACtC+nC,EAAS,EACNA,EAASrvB,EAAO1Y,QACnB0Y,EAAOqvB,KAAYyyD,UAAUzyD,GACjC7hC,EAAQy4F,MAAM,KAAMjmF,EACxB,CAER,EACA,IACI+kF,EAAGkB,MAAMt4C,GAAO,KAAM3tC,EAC1B,CAAE,MAAO5O,GACD+uG,IACAA,GAAU,EACV1yG,EAAO2D,GAEf,CACJ,GACJ,C,kCC5CA,IAAIgvG,EAASl6G,EAObk6G,EAAO94G,OAAS,SAAgBk2G,GAC5B,IAAIrvE,EAAIqvE,EAAOl2G,OACf,IAAK6mC,EACD,OAAO,EAEX,IADA,IAAI8Q,EAAI,IACC9Q,EAAI,EAAI,GAA0B,MAArBqvE,EAAOhiE,OAAOrN,MAC9B8Q,EACN,OAAOvsC,KAAKE,KAAqB,EAAhB4qG,EAAOl2G,QAAc,EAAI23C,CAC9C,EASA,IANA,IAAIohE,EAAM,IAAIx2G,MAAM,IAGhBy2G,EAAM,IAAIz2G,MAAM,KAGX1C,EAAI,EAAGA,EAAI,IAChBm5G,EAAID,EAAIl5G,GAAKA,EAAI,GAAKA,EAAI,GAAKA,EAAI,GAAKA,EAAI,GAAKA,EAAI,GAAKA,EAAI,EAAIA,EAAI,GAAK,IAAMA,IASrFi5G,EAAOx9F,OAAS,SAAgBjY,EAAQq9B,EAAO2E,GAM3C,IALA,IAIIl2B,EAJA8pG,EAAQ,KACRC,EAAQ,GACRr5G,EAAI,EACJkH,EAAI,EAED25B,EAAQ2E,GAAK,CAChB,IAAIhxB,EAAIhR,EAAOq9B,KACf,OAAQ35B,GACJ,KAAK,EACDmyG,EAAMr5G,KAAOk5G,EAAI1kG,GAAK,GACtBlF,GAAS,EAAJkF,IAAU,EACftN,EAAI,EACJ,MACJ,KAAK,EACDmyG,EAAMr5G,KAAOk5G,EAAI5pG,EAAIkF,GAAK,GAC1BlF,GAAS,GAAJkF,IAAW,EAChBtN,EAAI,EACJ,MACJ,KAAK,EACDmyG,EAAMr5G,KAAOk5G,EAAI5pG,EAAIkF,GAAK,GAC1B6kG,EAAMr5G,KAAOk5G,EAAQ,GAAJ1kG,GACjBtN,EAAI,EAGRlH,EAAI,QACHo5G,IAAUA,EAAQ,KAAKh5G,KAAKy0F,OAAOC,aAAagK,MAAMjK,OAAQwkB,IAC/Dr5G,EAAI,EAEZ,CAOA,OANIkH,IACAmyG,EAAMr5G,KAAOk5G,EAAI5pG,GACjB+pG,EAAMr5G,KAAO,GACH,IAANkH,IACAmyG,EAAMr5G,KAAO,KAEjBo5G,GACIp5G,GACAo5G,EAAMh5G,KAAKy0F,OAAOC,aAAagK,MAAMjK,OAAQwkB,EAAMnhG,MAAM,EAAGlY,KACzDo5G,EAAMlvG,KAAK,KAEf2qF,OAAOC,aAAagK,MAAMjK,OAAQwkB,EAAMnhG,MAAM,EAAGlY,GAC5D,EAEA,IAAIs5G,EAAkB,mBAUtBL,EAAOv9F,OAAS,SAAgB26F,EAAQ7yG,EAAQ0kC,GAI5C,IAHA,IAEI54B,EAFAuxB,EAAQqH,EACRhhC,EAAI,EAEClH,EAAI,EAAGA,EAAIq2G,EAAOl2G,QAAS,CAChC,IAAI8b,EAAIo6F,EAAO9d,WAAWv4F,KAC1B,GAAU,KAANic,GAAY/U,EAAI,EAChB,MACJ,QAAqBpH,KAAhBmc,EAAIk9F,EAAIl9F,IACT,MAAMlc,MAAMu5G,GAChB,OAAQpyG,GACJ,KAAK,EACDoI,EAAI2M,EACJ/U,EAAI,EACJ,MACJ,KAAK,EACD1D,EAAO0kC,KAAY54B,GAAK,GAAS,GAAJ2M,IAAW,EACxC3M,EAAI2M,EACJ/U,EAAI,EACJ,MACJ,KAAK,EACD1D,EAAO0kC,MAAiB,GAAJ54B,IAAW,GAAS,GAAJ2M,IAAW,EAC/C3M,EAAI2M,EACJ/U,EAAI,EACJ,MACJ,KAAK,EACD1D,EAAO0kC,MAAiB,EAAJ54B,IAAU,EAAI2M,EAClC/U,EAAI,EAGhB,CACA,GAAU,IAANA,EACA,MAAMnH,MAAMu5G,GAChB,OAAOpxE,EAASrH,CACpB,EAOAo4E,EAAOM,KAAO,SAAclD,GACxB,MAAO,mEAAmEkD,KAAKlD,EACnF,C,gCCjIA,SAASmD,IAOLl2G,KAAKm2G,WAAa,CAAC,CACvB,CAhBAz6G,EAAOD,QAAUy6G,EAyBjBA,EAAavQ,UAAUhS,GAAK,SAAYyiB,EAAK9b,EAAIp3C,GAK7C,OAJCljD,KAAKm2G,WAAWC,KAASp2G,KAAKm2G,WAAWC,GAAO,KAAKt5G,KAAK,CACvDw9F,GAAMA,EACNp3C,IAAMA,GAAOljD,OAEVA,IACX,EAQAk2G,EAAavQ,UAAU4G,IAAM,SAAa6J,EAAK9b,GAC3C,QAAY99F,IAAR45G,EACAp2G,KAAKm2G,WAAa,CAAC,OAEnB,QAAW35G,IAAP89F,EACAt6F,KAAKm2G,WAAWC,GAAO,QAGvB,IADA,IAAIC,EAAYr2G,KAAKm2G,WAAWC,GACvB15G,EAAI,EAAGA,EAAI25G,EAAUx5G,QACtBw5G,EAAU35G,GAAG49F,KAAOA,EACpB+b,EAAUz5G,OAAOF,EAAG,KAElBA,EAGlB,OAAOsD,IACX,EAQAk2G,EAAavQ,UAAU2Q,KAAO,SAAcF,GACxC,IAAIC,EAAYr2G,KAAKm2G,WAAWC,GAChC,GAAIC,EAAW,CAGX,IAFA,IAAInlC,EAAO,GACPx0E,EAAI,EACDA,EAAI26F,UAAUx6F,QACjBq0E,EAAKp0E,KAAKu6F,UAAU36F,MACxB,IAAKA,EAAI,EAAGA,EAAI25G,EAAUx5G,QACtBw5G,EAAU35G,GAAG49F,GAAGkB,MAAM6a,EAAU35G,KAAKwmD,IAAKguB,EAClD,CACA,OAAOlxE,IACX,C,+BCYA,SAASxE,EAAQC,GAwNb,MArN4B,oBAAjBkC,aAA8B,WAErC,IAAI44G,EAAM,IAAI54G,aAAa,EAAG,IAC1B64G,EAAM,IAAI54G,WAAW24G,EAAIr2G,QACzBswF,EAAiB,MAAXgmB,EAAI,GAEd,SAASC,EAAmBl0E,EAAKyiB,EAAK4kB,GAClC2sC,EAAI,GAAKh0E,EACTyiB,EAAI4kB,GAAW4sC,EAAI,GACnBxxD,EAAI4kB,EAAM,GAAK4sC,EAAI,GACnBxxD,EAAI4kB,EAAM,GAAK4sC,EAAI,GACnBxxD,EAAI4kB,EAAM,GAAK4sC,EAAI,EACvB,CAEA,SAASE,EAAmBn0E,EAAKyiB,EAAK4kB,GAClC2sC,EAAI,GAAKh0E,EACTyiB,EAAI4kB,GAAW4sC,EAAI,GACnBxxD,EAAI4kB,EAAM,GAAK4sC,EAAI,GACnBxxD,EAAI4kB,EAAM,GAAK4sC,EAAI,GACnBxxD,EAAI4kB,EAAM,GAAK4sC,EAAI,EACvB,CAOA,SAASG,EAAkB3xD,EAAK4kB,GAK5B,OAJA4sC,EAAI,GAAKxxD,EAAI4kB,GACb4sC,EAAI,GAAKxxD,EAAI4kB,EAAM,GACnB4sC,EAAI,GAAKxxD,EAAI4kB,EAAM,GACnB4sC,EAAI,GAAKxxD,EAAI4kB,EAAM,GACZ2sC,EAAI,EACf,CAEA,SAASK,EAAkB5xD,EAAK4kB,GAK5B,OAJA4sC,EAAI,GAAKxxD,EAAI4kB,GACb4sC,EAAI,GAAKxxD,EAAI4kB,EAAM,GACnB4sC,EAAI,GAAKxxD,EAAI4kB,EAAM,GACnB4sC,EAAI,GAAKxxD,EAAI4kB,EAAM,GACZ2sC,EAAI,EACf,CAlBA96G,EAAQo7G,aAAermB,EAAKimB,EAAqBC,EAEjDj7G,EAAQq7G,aAAetmB,EAAKkmB,EAAqBD,EAmBjDh7G,EAAQs7G,YAAcvmB,EAAKmmB,EAAoBC,EAE/Cn7G,EAAQu7G,YAAcxmB,EAAKomB,EAAoBD,CAGlD,CAjDwC,GAiD9B,WAEP,SAASM,EAAmBC,EAAW30E,EAAKyiB,EAAK4kB,GAC7C,IAAIutC,EAAO50E,EAAM,EAAI,EAAI,EAGzB,GAFI40E,IACA50E,GAAOA,GACC,IAARA,EACA20E,EAAU,EAAI30E,EAAM,EAAmB,EAAqB,WAAYyiB,EAAK4kB,QAC5E,GAAIjjB,MAAMpkB,GACX20E,EAAU,WAAYlyD,EAAK4kB,QAC1B,GAAIrnC,EAAM,qBACX20E,GAAWC,GAAQ,GAAK,cAAgB,EAAGnyD,EAAK4kB,QAC/C,GAAIrnC,EAAM,sBACX20E,GAAWC,GAAQ,GAAKlvG,KAAKmvG,MAAM70E,EAAM,yBAA4B,EAAGyiB,EAAK4kB,OAC5E,CACD,IAAIytC,EAAWpvG,KAAKyc,MAAMzc,KAAK4d,IAAI0c,GAAOt6B,KAAKqvG,KAE/CJ,GAAWC,GAAQ,GAAKE,EAAW,KAAO,GAD0B,QAArDpvG,KAAKmvG,MAAM70E,EAAMt6B,KAAKwe,IAAI,GAAI4wF,GAAY,YACI,EAAGryD,EAAK4kB,EACzE,CACJ,CAKA,SAAS2tC,EAAkBC,EAAUxyD,EAAK4kB,GACtC,IAAI6tC,EAAOD,EAASxyD,EAAK4kB,GACrButC,EAAsB,GAAdM,GAAQ,IAAU,EAC1BJ,EAAWI,IAAS,GAAK,IACzBC,EAAkB,QAAPD,EACf,OAAoB,MAAbJ,EACDK,EACAC,IACAR,GAAOS,KACM,IAAbP,EACO,qBAAPF,EAA+BO,EAC/BP,EAAOlvG,KAAKwe,IAAI,EAAG4wF,EAAW,MAAQK,EAAW,QAC3D,CAfAj8G,EAAQo7G,aAAeI,EAAmBx0D,KAAK,KAAMo1D,GACrDp8G,EAAQq7G,aAAeG,EAAmBx0D,KAAK,KAAMq1D,GAgBrDr8G,EAAQs7G,YAAcQ,EAAkB90D,KAAK,KAAMs1D,GACnDt8G,EAAQu7G,YAAcO,EAAkB90D,KAAK,KAAMu1D,EAEtD,CAzCU,GA4CiB,oBAAjB/5G,aAA8B,WAErC,IAAIg6G,EAAM,IAAIh6G,aAAa,EAAE,IACzBu4G,EAAM,IAAI54G,WAAWq6G,EAAI/3G,QACzBswF,EAAiB,MAAXgmB,EAAI,GAEd,SAAS0B,EAAoB31E,EAAKyiB,EAAK4kB,GACnCquC,EAAI,GAAK11E,EACTyiB,EAAI4kB,GAAW4sC,EAAI,GACnBxxD,EAAI4kB,EAAM,GAAK4sC,EAAI,GACnBxxD,EAAI4kB,EAAM,GAAK4sC,EAAI,GACnBxxD,EAAI4kB,EAAM,GAAK4sC,EAAI,GACnBxxD,EAAI4kB,EAAM,GAAK4sC,EAAI,GACnBxxD,EAAI4kB,EAAM,GAAK4sC,EAAI,GACnBxxD,EAAI4kB,EAAM,GAAK4sC,EAAI,GACnBxxD,EAAI4kB,EAAM,GAAK4sC,EAAI,EACvB,CAEA,SAAS2B,EAAoB51E,EAAKyiB,EAAK4kB,GACnCquC,EAAI,GAAK11E,EACTyiB,EAAI4kB,GAAW4sC,EAAI,GACnBxxD,EAAI4kB,EAAM,GAAK4sC,EAAI,GACnBxxD,EAAI4kB,EAAM,GAAK4sC,EAAI,GACnBxxD,EAAI4kB,EAAM,GAAK4sC,EAAI,GACnBxxD,EAAI4kB,EAAM,GAAK4sC,EAAI,GACnBxxD,EAAI4kB,EAAM,GAAK4sC,EAAI,GACnBxxD,EAAI4kB,EAAM,GAAK4sC,EAAI,GACnBxxD,EAAI4kB,EAAM,GAAK4sC,EAAI,EACvB,CAOA,SAAS4B,EAAmBpzD,EAAK4kB,GAS7B,OARA4sC,EAAI,GAAKxxD,EAAI4kB,GACb4sC,EAAI,GAAKxxD,EAAI4kB,EAAM,GACnB4sC,EAAI,GAAKxxD,EAAI4kB,EAAM,GACnB4sC,EAAI,GAAKxxD,EAAI4kB,EAAM,GACnB4sC,EAAI,GAAKxxD,EAAI4kB,EAAM,GACnB4sC,EAAI,GAAKxxD,EAAI4kB,EAAM,GACnB4sC,EAAI,GAAKxxD,EAAI4kB,EAAM,GACnB4sC,EAAI,GAAKxxD,EAAI4kB,EAAM,GACZquC,EAAI,EACf,CAEA,SAASI,EAAmBrzD,EAAK4kB,GAS7B,OARA4sC,EAAI,GAAKxxD,EAAI4kB,GACb4sC,EAAI,GAAKxxD,EAAI4kB,EAAM,GACnB4sC,EAAI,GAAKxxD,EAAI4kB,EAAM,GACnB4sC,EAAI,GAAKxxD,EAAI4kB,EAAM,GACnB4sC,EAAI,GAAKxxD,EAAI4kB,EAAM,GACnB4sC,EAAI,GAAKxxD,EAAI4kB,EAAM,GACnB4sC,EAAI,GAAKxxD,EAAI4kB,EAAM,GACnB4sC,EAAI,GAAKxxD,EAAI4kB,EAAM,GACZquC,EAAI,EACf,CA1BAx8G,EAAQ68G,cAAgB9nB,EAAK0nB,EAAsBC,EAEnD18G,EAAQ88G,cAAgB/nB,EAAK2nB,EAAsBD,EA2BnDz8G,EAAQ+8G,aAAehoB,EAAK4nB,EAAqBC,EAEjD58G,EAAQg9G,aAAejoB,EAAK6nB,EAAqBD,CAGpD,CAjEwC,GAiE9B,WAEP,SAASM,EAAoBxB,EAAWyB,EAAMC,EAAMr2E,EAAKyiB,EAAK4kB,GAC1D,IAAIutC,EAAO50E,EAAM,EAAI,EAAI,EAGzB,GAFI40E,IACA50E,GAAOA,GACC,IAARA,EACA20E,EAAU,EAAGlyD,EAAK4kB,EAAM+uC,GACxBzB,EAAU,EAAI30E,EAAM,EAAmB,EAAqB,WAAYyiB,EAAK4kB,EAAMgvC,QAChF,GAAIjyD,MAAMpkB,GACb20E,EAAU,EAAGlyD,EAAK4kB,EAAM+uC,GACxBzB,EAAU,WAAYlyD,EAAK4kB,EAAMgvC,QAC9B,GAAIr2E,EAAM,sBACb20E,EAAU,EAAGlyD,EAAK4kB,EAAM+uC,GACxBzB,GAAWC,GAAQ,GAAK,cAAgB,EAAGnyD,EAAK4kB,EAAMgvC,OACnD,CACH,IAAIlB,EACJ,GAAIn1E,EAAM,uBAEN20E,GADAQ,EAAWn1E,EAAM,UACM,EAAGyiB,EAAK4kB,EAAM+uC,GACrCzB,GAAWC,GAAQ,GAAKO,EAAW,cAAgB,EAAG1yD,EAAK4kB,EAAMgvC,OAC9D,CACH,IAAIvB,EAAWpvG,KAAKyc,MAAMzc,KAAK4d,IAAI0c,GAAOt6B,KAAKqvG,KAC9B,OAAbD,IACAA,EAAW,MAEfH,EAAqB,kBADrBQ,EAAWn1E,EAAMt6B,KAAKwe,IAAI,GAAI4wF,MACY,EAAGryD,EAAK4kB,EAAM+uC,GACxDzB,GAAWC,GAAQ,GAAKE,EAAW,MAAQ,GAAgB,QAAXK,EAAqB,WAAa,EAAG1yD,EAAK4kB,EAAMgvC,EACpG,CACJ,CACJ,CAKA,SAASC,EAAmBrB,EAAUmB,EAAMC,EAAM5zD,EAAK4kB,GACnD,IAAIkvC,EAAKtB,EAASxyD,EAAK4kB,EAAM+uC,GACzBI,EAAKvB,EAASxyD,EAAK4kB,EAAMgvC,GACzBzB,EAAoB,GAAZ4B,GAAM,IAAU,EACxB1B,EAAW0B,IAAO,GAAK,KACvBrB,EAAW,YAAmB,QAALqB,GAAgBD,EAC7C,OAAoB,OAAbzB,EACDK,EACAC,IACAR,GAAOS,KACM,IAAbP,EACO,OAAPF,EAAgBO,EAChBP,EAAOlvG,KAAKwe,IAAI,EAAG4wF,EAAW,OAASK,EAAW,iBAC5D,CAhBAj8G,EAAQ68G,cAAgBI,EAAoBj2D,KAAK,KAAMo1D,EAAa,EAAG,GACvEp8G,EAAQ88G,cAAgBG,EAAoBj2D,KAAK,KAAMq1D,EAAa,EAAG,GAiBvEr8G,EAAQ+8G,aAAeK,EAAmBp2D,KAAK,KAAMs1D,EAAY,EAAG,GACpEt8G,EAAQg9G,aAAeI,EAAmBp2D,KAAK,KAAMu1D,EAAY,EAAG,EAEvE,CArDU,GAuDJv8G,CACX,CAIA,SAASo8G,EAAYt1E,EAAKyiB,EAAK4kB,GAC3B5kB,EAAI4kB,GAAyB,IAAbrnC,EAChByiB,EAAI4kB,EAAM,GAAMrnC,IAAQ,EAAK,IAC7ByiB,EAAI4kB,EAAM,GAAMrnC,IAAQ,GAAK,IAC7ByiB,EAAI4kB,EAAM,GAAMrnC,IAAQ,EAC5B,CAEA,SAASu1E,EAAYv1E,EAAKyiB,EAAK4kB,GAC3B5kB,EAAI4kB,GAAYrnC,IAAQ,GACxByiB,EAAI4kB,EAAM,GAAMrnC,IAAQ,GAAK,IAC7ByiB,EAAI4kB,EAAM,GAAMrnC,IAAQ,EAAK,IAC7ByiB,EAAI4kB,EAAM,GAAmB,IAAbrnC,CACpB,CAEA,SAASw1E,EAAW/yD,EAAK4kB,GACrB,OAAQ5kB,EAAI4kB,GACJ5kB,EAAI4kB,EAAM,IAAM,EAChB5kB,EAAI4kB,EAAM,IAAM,GAChB5kB,EAAI4kB,EAAM,IAAM,MAAQ,CACpC,CAEA,SAASouC,EAAWhzD,EAAK4kB,GACrB,OAAQ5kB,EAAI4kB,IAAY,GAChB5kB,EAAI4kB,EAAM,IAAM,GAChB5kB,EAAI4kB,EAAM,IAAM,EAChB5kB,EAAI4kB,EAAM,MAAQ,CAC9B,CA5UAluE,EAAOD,QAAUD,EAAQA,E,qCCOzB,SAASw9G,QAAQC,YACb,IACI,IAAIC,IAAMC,KAAK,QAAQ1/F,QAAQ,IAAI,MAAzB0/F,CAAgCF,YAC1C,GAAIC,MAAQA,IAAIr8G,QAAUS,OAAO6c,KAAK++F,KAAKr8G,QACvC,OAAOq8G,GACf,CAAE,MAAOxyG,GAAI,CACb,OAAO,IACX,CAfAhL,OAAOD,QAAUu9G,O,gCCAjBt9G,EAAOD,QA6BP,SAAc8yE,EAAO35D,EAAOlV,GACxB,IAAI05G,EAAS15G,GAAQ,KACjB25G,EAASD,IAAS,EAClBE,EAAS,KACT10E,EAASw0E,EACb,OAAO,SAAoB15G,GACvB,GAAIA,EAAO,GAAKA,EAAO25G,EACnB,OAAO9qC,EAAM7uE,GACbklC,EAASllC,EAAO05G,IAChBE,EAAO/qC,EAAM6qC,GACbx0E,EAAS,GAEb,IAAIogB,EAAMpwC,EAAMpP,KAAK8zG,EAAM10E,EAAQA,GAAUllC,GAG7C,OAFa,EAATklC,IACAA,EAAwB,GAAL,EAATA,IACPogB,CACX,CACJ,C,kCCxCA,IAAIu0D,EAAO99G,EAOX89G,EAAK18G,OAAS,SAAqBk2G,GAG/B,IAFA,IAAIziE,EAAM,EACN33B,EAAI,EACCjc,EAAI,EAAGA,EAAIq2G,EAAOl2G,SAAUH,GACjCic,EAAIo6F,EAAO9d,WAAWv4F,IACd,IACJ4zC,GAAO,EACF33B,EAAI,KACT23B,GAAO,EACe,QAAZ,MAAJ33B,IAAkE,QAAZ,MAA3Bo6F,EAAO9d,WAAWv4F,EAAI,OACrDA,EACF4zC,GAAO,GAEPA,GAAO,EAEf,OAAOA,CACX,EASAipE,EAAKC,KAAO,SAAmBt5G,EAAQq9B,EAAO2E,GAE1C,GADUA,EAAM3E,EACN,EACN,MAAO,GAKX,IAJA,IAGIvxB,EAHA8pG,EAAQ,KACRC,EAAQ,GACRr5G,EAAI,EAED6gC,EAAQ2E,IACXl2B,EAAI9L,EAAOq9B,MACH,IACJw4E,EAAMr5G,KAAOsP,EACRA,EAAI,KAAOA,EAAI,IACpB+pG,EAAMr5G,MAAY,GAAJsP,IAAW,EAAsB,GAAlB9L,EAAOq9B,KAC/BvxB,EAAI,KAAOA,EAAI,KACpBA,IAAU,EAAJA,IAAU,IAAwB,GAAlB9L,EAAOq9B,OAAkB,IAAwB,GAAlBr9B,EAAOq9B,OAAkB,EAAsB,GAAlBr9B,EAAOq9B,MAAiB,MAC1Gw4E,EAAMr5G,KAAO,OAAUsP,GAAK,IAC5B+pG,EAAMr5G,KAAO,OAAc,KAAJsP,IAEvB+pG,EAAMr5G,MAAY,GAAJsP,IAAW,IAAwB,GAAlB9L,EAAOq9B,OAAkB,EAAsB,GAAlBr9B,EAAOq9B,KACnE7gC,EAAI,QACHo5G,IAAUA,EAAQ,KAAKh5G,KAAKy0F,OAAOC,aAAagK,MAAMjK,OAAQwkB,IAC/Dr5G,EAAI,GAGZ,OAAIo5G,GACIp5G,GACAo5G,EAAMh5G,KAAKy0F,OAAOC,aAAagK,MAAMjK,OAAQwkB,EAAMnhG,MAAM,EAAGlY,KACzDo5G,EAAMlvG,KAAK,KAEf2qF,OAAOC,aAAagK,MAAMjK,OAAQwkB,EAAMnhG,MAAM,EAAGlY,GAC5D,EASA68G,EAAKE,MAAQ,SAAoB1G,EAAQ7yG,EAAQ0kC,GAI7C,IAHA,IACI80E,EACAC,EAFAp8E,EAAQqH,EAGHloC,EAAI,EAAGA,EAAIq2G,EAAOl2G,SAAUH,GACjCg9G,EAAK3G,EAAO9d,WAAWv4F,IACd,IACLwD,EAAO0kC,KAAY80E,EACZA,EAAK,MACZx5G,EAAO0kC,KAAY80E,GAAM,EAAU,IACnCx5G,EAAO0kC,KAAuB,GAAX80E,EAAgB,KACV,QAAZ,MAALA,IAA0E,QAAZ,OAAjCC,EAAK5G,EAAO9d,WAAWv4F,EAAI,MAChEg9G,EAAK,QAAiB,KAALA,IAAgB,KAAY,KAALC,KACtCj9G,EACFwD,EAAO0kC,KAAY80E,GAAM,GAAU,IACnCx5G,EAAO0kC,KAAY80E,GAAM,GAAK,GAAK,IACnCx5G,EAAO0kC,KAAY80E,GAAM,EAAK,GAAK,IACnCx5G,EAAO0kC,KAAuB,GAAX80E,EAAgB,MAEnCx5G,EAAO0kC,KAAY80E,GAAM,GAAU,IACnCx5G,EAAO0kC,KAAY80E,GAAM,EAAK,GAAK,IACnCx5G,EAAO0kC,KAAuB,GAAX80E,EAAgB,KAG3C,OAAO90E,EAASrH,CACpB,C,kCCvGA9hC,EAAQm+G,YAAa,EACrB,IAAI14C,EAAsB,WACtB,SAASA,EAAKmQ,GACV,IAAKA,EACD,MAAM,IAAI/0E,UAAU,2CAExB0D,KAAK3C,MAAQ6jE,EAAK24C,MACdxoC,GAAQnQ,EAAK44C,OAAOzoC,KACpBrxE,KAAK3C,MAAQg0E,EAErB,CA2CA,OA1CAnQ,EAAK44C,OAAS,SAAUzoC,GACpB,IAAIh0E,EAAQg0E,EAAKt7B,WACjB,OAAOs7B,IAASA,aAAgBnQ,GAAQA,EAAK64C,UAAU9D,KAAK54G,GAChE,EACA6jE,EAAKrd,OAAS,WACV,OAAO,IAAIqd,EAAK,CAACA,EAAK84C,IAAI,GAAI94C,EAAK84C,IAAI,GAAI94C,EAAK84C,IAAI,GAAI94C,EAAK84C,IAAI,GAAI94C,EAAK84C,IAAI,IAAIpzG,KAAK,KAC3F,EACAs6D,EAAK+4C,YAAc,WACf,OAAO,IAAI/4C,EAAK,YACpB,EACAA,EAAKjsD,MAAQ,SAAUo8D,GACnB,OAAO,IAAInQ,EAAKmQ,EACpB,EACAnQ,EAAKg5C,IAAM,WACP,MAAO,CAACh5C,EAAK84C,IAAI,GAAI94C,EAAK84C,IAAI,GAAI94C,EAAK84C,IAAI,GAAI94C,EAAK84C,IAAI,GAAI94C,EAAK84C,IAAI,IAAIpzG,KAAK,IAClF,EACAs6D,EAAK84C,IAAM,SAAU31E,GAEjB,IADA,IAAI+8C,EAAM,GACD1kF,EAAI,EAAGA,EAAI2nC,EAAO3nC,IAEvB0kF,IAA+B,OAArB,EAAIn5E,KAAKkyG,UAAuB,GAAGpkE,SAAS,IAAI2Q,UAAU,GAExE,OAAO06B,CACX,EACAlgB,EAAKykC,UAAUyU,OAAS,SAAUC,GAG9B,OAAOn5C,EAAK44C,OAAOO,IAAUr6G,KAAK3C,QAAUg9G,EAAMtkE,UACtD,EACAmrB,EAAKykC,UAAU2U,QAAU,WACrB,OAAOt6G,KAAK3C,QAAU6jE,EAAK24C,KAC/B,EACA34C,EAAKykC,UAAU5vD,SAAW,WACtB,OAAO/1C,KAAK3C,KAChB,EACA6jE,EAAKykC,UAAU4U,OAAS,WACpB,MAAO,CACHl9G,MAAO2C,KAAK3C,MAEpB,EACA6jE,EAAK64C,UAAY,IAAIpgG,OAAO,iEAAkE,KAC9FunD,EAAK24C,MAAQ,uCACN34C,CACX,CArDyB,GAsDzBzlE,EAAQylE,KAAOA,C,mBCxDfxlE,EAAOD,QAAUgsE,EAKjB,IAAIxqE,EAAO,KAEX,IACEA,EAAO,IAAIqsF,YAAYkxB,SAAS,IAAIlxB,YAAY6V,OAAO,IAAIvhG,WAAW,CACpE,EAAG,GAAI,IAAK,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,GAAI,EAAG,EAAG,IAAK,GAAI,EAAG,IAAK,IAAK,IAAK,IAAK,EAAG,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,EAAG,GAAI,EAAG,GAAI,EAAG,GAAI,EAAG,EAAG,IAAK,IAAK,IAAK,EAAG,EAAG,EAAG,IAAK,IAAK,IAAK,GAAI,IAAK,EAAG,EAAG,EAAG,IAAK,IAAK,IAAK,GAAI,IAAK,EAAG,EAAG,EAAG,IAAK,IAAK,IAAK,GAAI,IAAK,EAAG,EAAG,EAAG,IAAK,IAAK,IAAK,GAAI,IAAK,EAAG,EAAG,EAAG,IAAK,IAAK,IAAK,GAAI,IAAK,IAAK,IAAK,IAAK,EAAG,EAAG,GAAI,IAAK,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,GAAI,GAAI,EAAG,EAAG,IAAK,GAAI,EAAG,IAAK,GAAI,EAAG,IAAK,GAAI,GAAI,IAAK,IAAK,GAAI,EAAG,IAAK,GAAI,EAAG,IAAK,GAAI,GAAI,IAAK,IAAK,IAAK,GAAI,EAAG,GAAI,GAAI,IAAK,IAAK,GAAI,EAAG,GAAI,EAAG,IAAK,GAAI,GAAI,EAAG,EAAG,IAAK,GAAI,EAAG,IAAK,GAAI,EAAG,IAAK,GAAI,GAAI,IAAK,IAAK,GAAI,EAAG,IAAK,GAAI,EAAG,IAAK,GAAI,GAAI,IAAK,IAAK,IAAK,GAAI,EAAG,GAAI,GAAI,IAAK,IAAK,GAAI,EAAG,GAAI,EAAG,IAAK,GAAI,GAAI,EAAG,EAAG,IAAK,GAAI,EAAG,IAAK,GAAI,EAAG,IAAK,GAAI,GAAI,IAAK,IAAK,GAAI,EAAG,IAAK,GAAI,EAAG,IAAK,GAAI,GAAI,IAAK,IAAK,IAAK,GAAI,EAAG,GAAI,GAAI,IAAK,IAAK,GAAI,EAAG,GAAI,EAAG,IAAK,GAAI,GAAI,EAAG,EAAG,IAAK,GAAI,EAAG,IAAK,GAAI,EAAG,IAAK,GAAI,GAAI,IAAK,IAAK,GAAI,EAAG,IAAK,GAAI,EAAG,IAAK,GAAI,GAAI,IAAK,IAAK,IAAK,GAAI,EAAG,GAAI,GAAI,IAAK,IAAK,GAAI,EAAG,GAAI,EAAG,IAAK,GAAI,GAAI,EAAG,EAAG,IAAK,GAAI,EAAG,IAAK,GAAI,EAAG,IAAK,GAAI,GAAI,IAAK,IAAK,GAAI,EAAG,IAAK,GAAI,EAAG,IAAK,GAAI,GAAI,IAAK,IAAK,IAAK,GAAI,EAAG,GAAI,GAAI,IAAK,IAAK,GAAI,EAAG,GAAI,EAAG,IAAK,MACvnC,CAAC,GAAGnC,OACX,CAAE,MAAOiL,GAET,CAYA,SAAS+gE,EAAKE,EAAKC,EAAMJ,GAMrBxnE,KAAK2nE,IAAY,EAANA,EAMX3nE,KAAK4nE,KAAc,EAAPA,EAMZ5nE,KAAKwnE,WAAaA,CACtB,CAmCA,SAASr8D,EAAO4B,GACZ,OAAsC,KAA9BA,GAAOA,EAAgB,WACnC,CAZA06D,EAAKk+B,UAAU8U,WAEfn9G,OAAOC,eAAekqE,EAAKk+B,UAAW,aAAc,CAAEtoG,OAAO,IAkB7DoqE,EAAKt8D,OAASA,EAOd,IAAIuvG,EAAY,CAAC,EAObC,EAAa,CAAC,EAQlB,SAASC,EAAQv9G,EAAOmqE,GACpB,IAAIz6D,EAAK8tG,EAAWvtG,EACpB,OAAIk6D,GAEIl6D,EAAS,IADbjQ,KAAW,IACgBA,EAAQ,OAC/Bw9G,EAAYF,EAAWt9G,IAEZw9G,GAEf9tG,EAAMi3D,EAAS3mE,GAAgB,EAARA,GAAa,GAAK,EAAI,GAAG,GAC5CiQ,IACAqtG,EAAWt9G,GAAS0P,GACjBA,IAGHO,GAAU,MADdjQ,GAAS,IACqBA,EAAQ,OAClCw9G,EAAYH,EAAUr9G,IAEXw9G,GAEf9tG,EAAMi3D,EAAS3mE,EAAOA,EAAQ,GAAK,EAAI,GAAG,GACtCiQ,IACAotG,EAAUr9G,GAAS0P,GAChBA,EAEf,CAiBA,SAAS+tG,EAAWz9G,EAAOmqE,GACvB,GAAI7gB,MAAMtpD,GACN,OAAOmqE,EAAWuzC,EAAQC,EAC9B,GAAIxzC,EAAU,CACV,GAAInqE,EAAQ,EACR,OAAO09G,EACX,GAAI19G,GAAS49G,EACT,OAAOC,CACf,KAAO,CACH,GAAI79G,IAAU89G,EACV,OAAOC,EACX,GAAI/9G,EAAQ,GAAK89G,EACb,OAAOE,CACf,CACA,OAAIh+G,EAAQ,EACDy9G,GAAYz9G,EAAOmqE,GAAUthD,MACjC89C,EAAU3mE,EAAQi+G,EAAkB,EAAIj+G,EAAQi+G,EAAkB,EAAG9zC,EAChF,CAkBA,SAASxD,EAASu3C,EAASC,EAAUh0C,GACjC,OAAO,IAAIC,EAAK8zC,EAASC,EAAUh0C,EACvC,CA7CAC,EAAKmzC,QAAUA,EAkCfnzC,EAAKqzC,WAAaA,EAsBlBrzC,EAAKzD,SAAWA,EAShB,IAAIy3C,EAAUxzG,KAAKwe,IASnB,SAASi1F,EAAW/5C,EAAK6F,EAAUm0C,GAC/B,GAAmB,IAAfh6C,EAAI9kE,OACJ,MAAMJ,MAAM,gBAChB,GAAY,QAARklE,GAAyB,aAARA,GAA8B,cAARA,GAA+B,cAARA,EAC9D,OAAOq5C,EASX,GARwB,iBAAbxzC,GAEPm0C,EAAQn0C,EACRA,GAAW,GAEXA,IAAcA,GAElBm0C,EAAQA,GAAS,IACL,GAAK,GAAKA,EAClB,MAAM77G,WAAW,SAErB,IAAI4jC,EACJ,IAAKA,EAAIi+B,EAAIhlE,QAAQ,MAAQ,EACzB,MAAMF,MAAM,mBACX,GAAU,IAANinC,EACL,OAAOg4E,EAAW/5C,EAAIjb,UAAU,GAAI8gB,EAAUm0C,GAAOz1F,MAQzD,IAHA,IAAI01F,EAAed,EAAWW,EAAQE,EAAO,IAEzCvsG,EAAS4rG,EACJt+G,EAAI,EAAGA,EAAIilE,EAAI9kE,OAAQH,GAAK,EAAG,CACpC,IAAIgD,EAAOuI,KAAKC,IAAI,EAAGy5D,EAAI9kE,OAASH,GAChCW,EAAQopD,SAASkb,EAAIjb,UAAUhqD,EAAGA,EAAIgD,GAAOi8G,GACjD,GAAIj8G,EAAO,EAAG,CACV,IAAIm8G,EAAQf,EAAWW,EAAQE,EAAOj8G,IACtC0P,EAASA,EAAOgO,IAAIy+F,GAAO9jG,IAAI+iG,EAAWz9G,GAC9C,MAEI+R,GADAA,EAASA,EAAOgO,IAAIw+F,IACJ7jG,IAAI+iG,EAAWz9G,GAEvC,CAEA,OADA+R,EAAOo4D,SAAWA,EACXp4D,CACX,CAmBA,SAASs4D,EAAUnlC,EAAKilC,GACpB,MAAmB,iBAARjlC,EACAu4E,EAAWv4E,EAAKilC,GACR,iBAARjlC,EACAm5E,EAAWn5E,EAAKilC,GAEpBxD,EAASzhC,EAAIolC,IAAKplC,EAAIqlC,KAA0B,kBAAbJ,EAAyBA,EAAWjlC,EAAIilC,SACtF,CAhBAC,EAAKi0C,WAAaA,EAyBlBj0C,EAAKC,UAAYA,EAUjB,IAcI4zC,EAAiBQ,WAOjBb,EAAiBK,EAAiBA,EAOlCH,EAAiBF,EAAiB,EAOlCc,EAAanB,EA5BI,GAAK,IAkCtBI,EAAOJ,EAAQ,GAMnBnzC,EAAKuzC,KAAOA,EAMZ,IAAID,EAAQH,EAAQ,GAAG,GAMvBnzC,EAAKszC,MAAQA,EAMb,IAAIiB,EAAMpB,EAAQ,GAMlBnzC,EAAKu0C,IAAMA,EAMX,IAAIC,EAAOrB,EAAQ,GAAG,GAMtBnzC,EAAKw0C,KAAOA,EAMZ,IAAIC,EAAUtB,GAAS,GAMvBnzC,EAAKy0C,QAAUA,EAMf,IAAIb,EAAYr3C,GAAS,EAAc,YAAc,GAMrDyD,EAAK4zC,UAAYA,EAMjB,IAAIH,EAAqBl3C,GAAS,GAAc,GAAc,GAM9DyD,EAAKyzC,mBAAqBA,EAM1B,IAAIE,EAAYp3C,EAAS,GAAG,YAAc,GAM1CyD,EAAK2zC,UAAYA,EAMjB,IAAIe,EAAgB10C,EAAKk+B,UAMzBwW,EAAcC,MAAQ,WAClB,OAAOp8G,KAAKwnE,SAAWxnE,KAAK2nE,MAAQ,EAAI3nE,KAAK2nE,GACjD,EAMAw0C,EAAc54C,SAAW,WACrB,OAAIvjE,KAAKwnE,UACIxnE,KAAK4nE,OAAS,GAAK0zC,GAAmBt7G,KAAK2nE,MAAQ,GACzD3nE,KAAK4nE,KAAO0zC,GAAkBt7G,KAAK2nE,MAAQ,EACtD,EASAw0C,EAAcpmE,SAAW,SAAkB4lE,GAEvC,IADAA,EAAQA,GAAS,IACL,GAAK,GAAKA,EAClB,MAAM77G,WAAW,SACrB,GAAIE,KAAKq8G,SACL,MAAO,IACX,GAAIr8G,KAAKs8G,aAAc,CACnB,GAAIt8G,KAAKu8G,GAAGnB,GAAY,CAGpB,IAAIoB,EAAY1B,EAAWa,GACvBt+F,EAAMrd,KAAKqd,IAAIm/F,GACfC,EAAOp/F,EAAID,IAAIo/F,GAAWr/F,IAAInd,MAClC,OAAOqd,EAAI04B,SAAS4lE,GAASc,EAAKL,QAAQrmE,SAAS4lE,EACvD,CACI,MAAO,IAAM37G,KAAKkmB,MAAM6vB,SAAS4lE,EACzC,CAOA,IAHA,IAAIC,EAAed,EAAWW,EAAQE,EAAO,GAAI37G,KAAKwnE,UAClDk1C,EAAM18G,KACNoP,EAAS,KACA,CACT,IAAIutG,EAASD,EAAIr/F,IAAIu+F,GAEjBhR,GADS8R,EAAIv/F,IAAIw/F,EAAOv/F,IAAIw+F,IAAeQ,UAAY,GACvCrmE,SAAS4lE,GAE7B,IADAe,EAAMC,GACEN,SACJ,OAAOzR,EAASx7F,EAEhB,KAAOw7F,EAAO/tG,OAAS,GACnB+tG,EAAS,IAAMA,EACnBx7F,EAAS,GAAKw7F,EAASx7F,CAE/B,CACJ,EAMA+sG,EAAcS,YAAc,WACxB,OAAO58G,KAAK4nE,IAChB,EAMAu0C,EAAcU,oBAAsB,WAChC,OAAO78G,KAAK4nE,OAAS,CACzB,EAMAu0C,EAAcW,WAAa,WACvB,OAAO98G,KAAK2nE,GAChB,EAMAw0C,EAAcY,mBAAqB,WAC/B,OAAO/8G,KAAK2nE,MAAQ,CACxB,EAMAw0C,EAAca,cAAgB,WAC1B,GAAIh9G,KAAKs8G,aACL,OAAOt8G,KAAKu8G,GAAGnB,GAAa,GAAKp7G,KAAKkmB,MAAM82F,gBAEhD,IADA,IAAIz6E,EAAmB,GAAbviC,KAAK4nE,KAAY5nE,KAAK4nE,KAAO5nE,KAAK2nE,IACnCs1C,EAAM,GAAIA,EAAM,GACK,IAArB16E,EAAO,GAAK06E,GADOA,KAG5B,OAAoB,GAAbj9G,KAAK4nE,KAAYq1C,EAAM,GAAKA,EAAM,CAC7C,EAMAd,EAAcE,OAAS,WACnB,OAAqB,IAAdr8G,KAAK4nE,MAA2B,IAAb5nE,KAAK2nE,GACnC,EAMAw0C,EAAce,IAAMf,EAAcE,OAMlCF,EAAcG,WAAa,WACvB,OAAQt8G,KAAKwnE,UAAYxnE,KAAK4nE,KAAO,CACzC,EAMAu0C,EAAcgB,WAAa,WACvB,OAAOn9G,KAAKwnE,UAAYxnE,KAAK4nE,MAAQ,CACzC,EAMAu0C,EAAciB,MAAQ,WAClB,OAA0B,IAAP,EAAXp9G,KAAK2nE,IACjB,EAMAw0C,EAAckB,OAAS,WACnB,OAA0B,IAAP,EAAXr9G,KAAK2nE,IACjB,EAOAw0C,EAAc/B,OAAS,SAAgBC,GAGnC,OAFKlvG,EAAOkvG,KACRA,EAAQ3yC,EAAU2yC,KAClBr6G,KAAKwnE,WAAa6yC,EAAM7yC,UAAaxnE,KAAK4nE,OAAS,IAAQ,GAAMyyC,EAAMzyC,OAAS,IAAQ,IAErF5nE,KAAK4nE,OAASyyC,EAAMzyC,MAAQ5nE,KAAK2nE,MAAQ0yC,EAAM1yC,GAC1D,EAQAw0C,EAAcI,GAAKJ,EAAc/B,OAOjC+B,EAAcmB,UAAY,SAAmBjD,GACzC,OAAQr6G,KAAKu8G,GAAmBlC,EACpC,EAQA8B,EAAcoB,IAAMpB,EAAcmB,UAQlCnB,EAAc9rB,GAAK8rB,EAAcmB,UAOjCnB,EAAc74C,SAAW,SAAkB+2C,GACvC,OAAOr6G,KAAKw9G,KAAqBnD,GAAS,CAC9C,EAQA8B,EAAcsB,GAAKtB,EAAc74C,SAOjC64C,EAAcuB,gBAAkB,SAAyBrD,GACrD,OAAOr6G,KAAKw9G,KAAqBnD,IAAU,CAC/C,EAQA8B,EAAcwB,IAAMxB,EAAcuB,gBAQlCvB,EAAc3rB,GAAK2rB,EAAcuB,gBAOjCvB,EAAcyB,YAAc,SAAqBvD,GAC7C,OAAOr6G,KAAKw9G,KAAqBnD,GAAS,CAC9C,EAQA8B,EAAc0B,GAAK1B,EAAcyB,YAOjCzB,EAAc94C,mBAAqB,SAA4Bg3C,GAC3D,OAAOr6G,KAAKw9G,KAAqBnD,IAAU,CAC/C,EAQA8B,EAAc2B,IAAM3B,EAAc94C,mBAQlC84C,EAAcxnB,GAAKwnB,EAAc94C,mBAQjC84C,EAAchR,QAAU,SAAiBkP,GAGrC,GAFKlvG,EAAOkvG,KACRA,EAAQ3yC,EAAU2yC,IAClBr6G,KAAKu8G,GAAGlC,GACR,OAAO,EACX,IAAI0D,EAAU/9G,KAAKs8G,aACf0B,EAAW3D,EAAMiC,aACrB,OAAIyB,IAAYC,GACJ,GACPD,GAAWC,EACL,EAENh+G,KAAKwnE,SAGF6yC,EAAMzyC,OAAS,EAAM5nE,KAAK4nE,OAAS,GAAOyyC,EAAMzyC,OAAS5nE,KAAK4nE,MAASyyC,EAAM1yC,MAAQ,EAAM3nE,KAAK2nE,MAAQ,GAAO,EAAI,EAFhH3nE,KAAKmd,IAAIk9F,GAAOiC,cAAgB,EAAI,CAGnD,EASAH,EAAcqB,KAAOrB,EAAchR,QAMnCgR,EAAc8B,OAAS,WACnB,OAAKj+G,KAAKwnE,UAAYxnE,KAAKu8G,GAAGnB,GACnBA,EACJp7G,KAAKmmB,MAAMpO,IAAIikG,EAC1B,EAOAG,EAAcj2F,IAAMi2F,EAAc8B,OAOlC9B,EAAcpkG,IAAM,SAAammG,GACxB/yG,EAAO+yG,KACRA,EAASx2C,EAAUw2C,IAIvB,IAAIC,EAAMn+G,KAAK4nE,OAAS,GACpBw2C,EAAkB,MAAZp+G,KAAK4nE,KACX6sC,EAAMz0G,KAAK2nE,MAAQ,GACnB02C,EAAiB,MAAXr+G,KAAK2nE,IAEX22C,EAAMJ,EAAOt2C,OAAS,GACtB22C,EAAoB,MAAdL,EAAOt2C,KACb42C,EAAMN,EAAOv2C,MAAQ,GAGrB82C,EAAM,EAAGC,EAAM,EAAGC,EAAM,EAAGC,EAAM,EAYrC,OAVAD,IADAC,GAAOP,GAHgB,MAAbH,EAAOv2C,QAIF,GAGf+2C,IADAC,GAAOlK,EAAM+J,KACE,GAGfC,IADAC,GAAON,EAAMG,KACE,GAEfE,GAAON,EAAMG,EAENt6C,GANP26C,GAAO,QAMiB,IATxBC,GAAO,QAQPH,GAAO,QACoC,IAH3CC,GAAO,OAG+C1+G,KAAKwnE,SAC/D,EAOA20C,EAAc0C,SAAW,SAAkBC,GAGvC,OAFK3zG,EAAO2zG,KACRA,EAAap3C,EAAUo3C,IACpB9+G,KAAK+X,IAAI+mG,EAAW54F,MAC/B,EAQAi2F,EAAch/F,IAAMg/F,EAAc0C,SAOlC1C,EAAc4C,SAAW,SAAkBC,GACvC,GAAIh/G,KAAKq8G,SACL,OAAOrB,EAKX,GAJK7vG,EAAO6zG,KACRA,EAAat3C,EAAUs3C,IAGvB/hH,EAKA,OAAO+mE,EAJG/mE,EAAKmgB,IAAIpd,KAAK2nE,IACL3nE,KAAK4nE,KACLo3C,EAAWr3C,IACXq3C,EAAWp3C,MACT3qE,EAAKgiH,WAAYj/G,KAAKwnE,UAG/C,GAAIw3C,EAAW3C,SACX,OAAOrB,EACX,GAAIh7G,KAAKu8G,GAAGnB,GACR,OAAO4D,EAAW5B,QAAUhC,EAAYJ,EAC5C,GAAIgE,EAAWzC,GAAGnB,GACd,OAAOp7G,KAAKo9G,QAAUhC,EAAYJ,EAEtC,GAAIh7G,KAAKs8G,aACL,OAAI0C,EAAW1C,aACJt8G,KAAKkmB,MAAM9I,IAAI4hG,EAAW94F,OAE1BlmB,KAAKkmB,MAAM9I,IAAI4hG,GAAY94F,MACnC,GAAI84F,EAAW1C,aAClB,OAAOt8G,KAAKod,IAAI4hG,EAAW94F,OAAOA,MAGtC,GAAIlmB,KAAKy9G,GAAG1B,IAAeiD,EAAWvB,GAAG1B,GACrC,OAAOjB,EAAW96G,KAAKujE,WAAay7C,EAAWz7C,WAAYvjE,KAAKwnE,UAKpE,IAAI22C,EAAMn+G,KAAK4nE,OAAS,GACpBw2C,EAAkB,MAAZp+G,KAAK4nE,KACX6sC,EAAMz0G,KAAK2nE,MAAQ,GACnB02C,EAAiB,MAAXr+G,KAAK2nE,IAEX22C,EAAMU,EAAWp3C,OAAS,GAC1B22C,EAAwB,MAAlBS,EAAWp3C,KACjB42C,EAAMQ,EAAWr3C,MAAQ,GACzBu3C,EAAuB,MAAjBF,EAAWr3C,IAEjB82C,EAAM,EAAGC,EAAM,EAAGC,EAAM,EAAGC,EAAM,EAqBrC,OAnBAD,IADAC,GAAOP,EAAMa,KACE,GAGfR,IADAC,GAAOlK,EAAMyK,KACE,GACfP,GAAO,MAEPD,IADAC,GAAON,EAAMG,KACE,GAGfC,IADAC,GAAON,EAAMc,KACE,GACfR,GAAO,MAEPD,IADAC,GAAOjK,EAAM+J,KACE,GACfE,GAAO,MAEPD,IADAC,GAAOL,EAAME,KACE,GAEfE,GAAON,EAAMe,EAAMd,EAAMI,EAAM/J,EAAM8J,EAAMF,EAAMC,EAE1Ct6C,GAZP26C,GAAO,QAYiB,IAlBxBC,GAAO,QAiBPH,GAAO,QACoC,IAH3CC,GAAO,OAG+C1+G,KAAKwnE,SAC/D,EAQA20C,EAAc/+F,IAAM++F,EAAc4C,SAQlC5C,EAAcgD,OAAS,SAAgBC,GAGnC,GAFKj0G,EAAOi0G,KACRA,EAAU13C,EAAU03C,IACpBA,EAAQ/C,SACR,MAAM5/G,MAAM,oBAaZ,IAWA4iH,EAAQ3C,EAAKviF,EArBjB,GAAIl9B,EAIA,OAAK+C,KAAKwnE,WACS,aAAfxnE,KAAK4nE,OACY,IAAjBw3C,EAAQz3C,MAAgC,IAAlBy3C,EAAQx3C,KAU3B5D,GANIhkE,KAAKwnE,SAAWvqE,EAAKqiH,MAAQriH,EAAKsiH,OACzCv/G,KAAK2nE,IACL3nE,KAAK4nE,KACLw3C,EAAQz3C,IACRy3C,EAAQx3C,MAES3qE,EAAKgiH,WAAYj/G,KAAKwnE,UARhCxnE,KAWf,GAAIA,KAAKq8G,SACL,OAAOr8G,KAAKwnE,SAAWuzC,EAAQC,EAEnC,GAAKh7G,KAAKwnE,SA6BH,CAKH,GAFK43C,EAAQ53C,WACT43C,EAAUA,EAAQI,cAClBJ,EAAQvB,GAAG79G,MACX,OAAO+6G,EACX,GAAIqE,EAAQvB,GAAG79G,KAAKy/G,KAAK,IACrB,OAAOxD,EACX9hF,EAAM4gF,CACV,KAvCoB,CAGhB,GAAI/6G,KAAKu8G,GAAGnB,GACR,OAAIgE,EAAQ7C,GAAGP,IAAQoD,EAAQ7C,GAAGL,GACvBd,EACFgE,EAAQ7C,GAAGnB,GACTY,GAIPqD,EADer/G,KAAK0/G,IAAI,GACNriG,IAAI+hG,GAASO,IAAI,IACxBpD,GAAGvB,GACHoE,EAAQ9C,aAAeN,EAAME,GAEpCQ,EAAM18G,KAAKmd,IAAIiiG,EAAQhiG,IAAIiiG,IAC3BllF,EAAMklF,EAAOtnG,IAAI2kG,EAAIr/F,IAAI+hG,KAI9B,GAAIA,EAAQ7C,GAAGnB,GAClB,OAAOp7G,KAAKwnE,SAAWuzC,EAAQC,EACnC,GAAIh7G,KAAKs8G,aACL,OAAI8C,EAAQ9C,aACDt8G,KAAKkmB,MAAM7I,IAAI+hG,EAAQl5F,OAC3BlmB,KAAKkmB,MAAM7I,IAAI+hG,GAASl5F,MAC5B,GAAIk5F,EAAQ9C,aACf,OAAOt8G,KAAKqd,IAAI+hG,EAAQl5F,OAAOA,MACnCiU,EAAM6gF,CACV,CAkBA,IADA0B,EAAM18G,KACC08G,EAAIoB,IAAIsB,IAAU,CAGrBC,EAASp3G,KAAK47B,IAAI,EAAG57B,KAAKyc,MAAMg4F,EAAIn5C,WAAa67C,EAAQ77C,aAWzD,IAPA,IAAIq8C,EAAO33G,KAAKE,KAAKF,KAAK4d,IAAIw5F,GAAUp3G,KAAKqvG,KACzCuI,EAASD,GAAQ,GAAM,EAAInE,EAAQ,EAAGmE,EAAO,IAI7CE,EAAYhF,EAAWuE,GACvBU,EAAYD,EAAU1iG,IAAIgiG,GACvBW,EAAUzD,cAAgByD,EAAUlC,GAAGnB,IAG1CqD,GADAD,EAAYhF,EADZuE,GAAUQ,EACqB7/G,KAAKwnE,WACdpqD,IAAIgiG,GAK1BU,EAAUzD,WACVyD,EAAY9D,GAEhB7hF,EAAMA,EAAIpiB,IAAI+nG,GACdpD,EAAMA,EAAIv/F,IAAI4iG,EAClB,CACA,OAAO5lF,CACX,EAQAgiF,EAAc9+F,IAAM8+F,EAAcgD,OAOlChD,EAAc6D,OAAS,SAAgBZ,GAKnC,OAJKj0G,EAAOi0G,KACRA,EAAU13C,EAAU03C,IAGpBniH,EAOO+mE,GANIhkE,KAAKwnE,SAAWvqE,EAAKgjH,MAAQhjH,EAAKijH,OACzClgH,KAAK2nE,IACL3nE,KAAK4nE,KACLw3C,EAAQz3C,IACRy3C,EAAQx3C,MAES3qE,EAAKgiH,WAAYj/G,KAAKwnE,UAGxCxnE,KAAKmd,IAAInd,KAAKqd,IAAI+hG,GAAShiG,IAAIgiG,GAC1C,EAQAjD,EAAcjD,IAAMiD,EAAc6D,OAQlC7D,EAAcO,IAAMP,EAAc6D,OAMlC7D,EAAch2F,IAAM,WAChB,OAAO69C,GAAUhkE,KAAK2nE,KAAM3nE,KAAK4nE,KAAM5nE,KAAKwnE,SAChD,EAOA20C,EAAcp5F,IAAM,SAAas3F,GAG7B,OAFKlvG,EAAOkvG,KACRA,EAAQ3yC,EAAU2yC,IACfr2C,EAAShkE,KAAK2nE,IAAM0yC,EAAM1yC,IAAK3nE,KAAK4nE,KAAOyyC,EAAMzyC,KAAM5nE,KAAKwnE,SACvE,EAOA20C,EAAc/1F,GAAK,SAAYi0F,GAG3B,OAFKlvG,EAAOkvG,KACRA,EAAQ3yC,EAAU2yC,IACfr2C,EAAShkE,KAAK2nE,IAAM0yC,EAAM1yC,IAAK3nE,KAAK4nE,KAAOyyC,EAAMzyC,KAAM5nE,KAAKwnE,SACvE,EAOA20C,EAAcpzF,IAAM,SAAasxF,GAG7B,OAFKlvG,EAAOkvG,KACRA,EAAQ3yC,EAAU2yC,IACfr2C,EAAShkE,KAAK2nE,IAAM0yC,EAAM1yC,IAAK3nE,KAAK4nE,KAAOyyC,EAAMzyC,KAAM5nE,KAAKwnE,SACvE,EAOA20C,EAAcgE,UAAY,SAAmBC,GAGzC,OAFIj1G,EAAOi1G,KACPA,EAAUA,EAAQhE,SACE,IAAnBgE,GAAW,IACLpgH,KACFogH,EAAU,GACRp8C,EAAShkE,KAAK2nE,KAAOy4C,EAAUpgH,KAAK4nE,MAAQw4C,EAAYpgH,KAAK2nE,MAAS,GAAKy4C,EAAWpgH,KAAKwnE,UAE3FxD,EAAS,EAAGhkE,KAAK2nE,KAAQy4C,EAAU,GAAKpgH,KAAKwnE,SAC5D,EAQA20C,EAAcwD,IAAMxD,EAAcgE,UAOlChE,EAAckE,WAAa,SAAoBD,GAG3C,OAFIj1G,EAAOi1G,KACPA,EAAUA,EAAQhE,SACE,IAAnBgE,GAAW,IACLpgH,KACFogH,EAAU,GACRp8C,EAAUhkE,KAAK2nE,MAAQy4C,EAAYpgH,KAAK4nE,MAAS,GAAKw4C,EAAWpgH,KAAK4nE,MAAQw4C,EAASpgH,KAAKwnE,UAE5FxD,EAAShkE,KAAK4nE,MAASw4C,EAAU,GAAKpgH,KAAK4nE,MAAQ,EAAI,GAAK,EAAG5nE,KAAKwnE,SACnF,EAQA20C,EAAcuD,IAAMvD,EAAckE,WAOlClE,EAAcmE,mBAAqB,SAA4BF,GAI3D,GAHIj1G,EAAOi1G,KACPA,EAAUA,EAAQhE,SAEN,IADhBgE,GAAW,IAEP,OAAOpgH,KAEP,IAAI4nE,EAAO5nE,KAAK4nE,KAChB,OAAIw4C,EAAU,GAEHp8C,EADGhkE,KAAK2nE,MACUy4C,EAAYx4C,GAAS,GAAKw4C,EAAWx4C,IAASw4C,EAASpgH,KAAKwnE,UAE9ExD,EADY,KAAZo8C,EACSx4C,EAEAA,IAAUw4C,EAAU,GAFd,EAAGpgH,KAAKwnE,SAI1C,EAQA20C,EAAcsD,KAAOtD,EAAcmE,mBAQnCnE,EAAcoE,MAAQpE,EAAcmE,mBAMpCnE,EAAcqE,SAAW,WACrB,OAAKxgH,KAAKwnE,SAEHxD,EAAShkE,KAAK2nE,IAAK3nE,KAAK4nE,MAAM,GAD1B5nE,IAEf,EAMAm8G,EAAcqD,WAAa,WACvB,OAAIx/G,KAAKwnE,SACExnE,KACJgkE,EAAShkE,KAAK2nE,IAAK3nE,KAAK4nE,MAAM,EACzC,EAOAu0C,EAAcsE,QAAU,SAAiBjwB,GACrC,OAAOA,EAAKxwF,KAAK0gH,YAAc1gH,KAAK2gH,WACxC,EAMAxE,EAAcuE,UAAY,WACtB,IAAI3H,EAAK/4G,KAAK4nE,KACVkxC,EAAK94G,KAAK2nE,IACd,MAAO,CACS,IAAZmxC,EACAA,IAAQ,EAAI,IACZA,IAAO,GAAK,IACZA,IAAO,GACK,IAAZC,EACAA,IAAQ,EAAI,IACZA,IAAO,GAAK,IACZA,IAAO,GAEf,EAMAoD,EAAcwE,UAAY,WACtB,IAAI5H,EAAK/4G,KAAK4nE,KACVkxC,EAAK94G,KAAK2nE,IACd,MAAO,CACHoxC,IAAO,GACPA,IAAO,GAAK,IACZA,IAAQ,EAAI,IACA,IAAZA,EACAD,IAAO,GACPA,IAAO,GAAK,IACZA,IAAQ,EAAI,IACA,IAAZA,EAER,EASArxC,EAAKm5C,UAAY,SAAmB9xD,EAAO0Y,EAAUgpB,GACjD,OAAOA,EAAK/oB,EAAKo5C,YAAY/xD,EAAO0Y,GAAYC,EAAKq5C,YAAYhyD,EAAO0Y,EAC5E,EAQAC,EAAKo5C,YAAc,SAAqB/xD,EAAO0Y,GAC3C,OAAO,IAAIC,EACP3Y,EAAM,GACNA,EAAM,IAAO,EACbA,EAAM,IAAM,GACZA,EAAM,IAAM,GACZA,EAAM,GACNA,EAAM,IAAO,EACbA,EAAM,IAAM,GACZA,EAAM,IAAM,GACZ0Y,EAER,EAQAC,EAAKq5C,YAAc,SAAqBhyD,EAAO0Y,GAC3C,OAAO,IAAIC,EACP3Y,EAAM,IAAM,GACZA,EAAM,IAAM,GACZA,EAAM,IAAO,EACbA,EAAM,GACNA,EAAM,IAAM,GACZA,EAAM,IAAM,GACZA,EAAM,IAAO,EACbA,EAAM,GACN0Y,EAER,C,oCCvyCA,IA6BYu5C,EAAiBtsD,EAdrBprD,EAfJ23G,EAAY,EAAQ,MAGpBC,EAAUD,EAAUE,OAAQC,EAAUH,EAAUI,OAAQC,EAAQL,EAAUM,KAG1EC,EAAQP,EAAUQ,MAAe,UAAMR,EAAUQ,MAAe,QAAI,CAAC,GAEzED,EAAMl4G,OAOEA,EAAO,CAAC,GAaPo4G,SACGV,EAAa,CAAC,GAAGtsD,EAASn3D,OAAOumD,OAAOk9D,IACrCA,EAAW,GAAK,kBAAoB,EAC3CtsD,EAAOssD,EAAW,GAAK,yBAA2B,EAClDtsD,EAAOssD,EAAW,GAAK,yBAA2B,EAClDtsD,EAAOssD,EAAW,GAAK,wBAA0B,EACjDtsD,EAAOssD,EAAW,GAAK,wBAA0B,EACjDtsD,EAAOssD,EAAW,GAAK,cAAgB,EAChCtsD,GAGXprD,EAAKC,eAAiB,WA8BlB,SAASA,EAAeo4G,GAMpB,GALA1hH,KAAKkM,OAAS,GACdlM,KAAKmM,KAAO,GACZnM,KAAKoM,QAAU,GACfpM,KAAKqM,QAAU,GACfrM,KAAKsM,OAAS,GACVo1G,EACA,IAAK,IAAIvnG,EAAO7c,OAAO6c,KAAKunG,GAAahlH,EAAI,EAAGA,EAAIyd,EAAKtd,SAAUH,EACpC,MAAvBglH,EAAWvnG,EAAKzd,MAChBsD,KAAKma,EAAKzd,IAAMglH,EAAWvnG,EAAKzd,IAChD,CAmqBA,OA3pBA4M,EAAeq8F,UAAU1pG,KAAO,GAQhCqN,EAAeq8F,UAAUgc,YAAc,GAQvCr4G,EAAeq8F,UAAUp3C,UAAY,GAQrCjlD,EAAeq8F,UAAUjnG,KAAO,EAQhC4K,EAAeq8F,UAAU75F,EAAI,EAQ7BxC,EAAeq8F,UAAUjpG,EAAI2kH,EAAM55C,KAAO45C,EAAM55C,KAAKzD,SAAS,EAAE,GAAE,GAAS,EAQ3E16D,EAAeq8F,UAAU55F,EAAIs1G,EAAMO,UAAU,IAQ7Ct4G,EAAeq8F,UAAU35F,EAAI,KAQ7B1C,EAAeq8F,UAAU15F,EAAI,KAQ7B3C,EAAeq8F,UAAUz5F,OAASm1G,EAAMQ,WAQxCv4G,EAAeq8F,UAAUx5F,KAAOk1G,EAAMQ,WAQtCv4G,EAAeq8F,UAAUv5F,QAAUi1G,EAAMQ,WAQzCv4G,EAAeq8F,UAAUt5F,QAAUg1G,EAAMQ,WAQzCv4G,EAAeq8F,UAAUr5F,OAAS+0G,EAAMQ,WAUxCv4G,EAAeu6C,OAAS,SAAgB69D,GACpC,OAAO,IAAIp4G,EAAeo4G,EAC9B,EAWAp4G,EAAe6O,OAAS,SAAgB+zD,EAAS41C,GAe7C,GAdKA,IACDA,EAASX,EAAQt9D,UACD,MAAhBqoB,EAAQjwE,MAAgBiwE,EAAQ3mE,eAAe,SAC/Cu8G,EAAOC,OAA8B,IAAIhP,OAAO7mC,EAAQjwE,MAC3C,MAAbiwE,EAAQpgE,GAAaogE,EAAQ3mE,eAAe,MAC5Cu8G,EAAOC,OAA8B,IAAIC,MAAM91C,EAAQpgE,GAC1C,MAAbogE,EAAQxvE,GAAawvE,EAAQ3mE,eAAe,MAC5Cu8G,EAAOC,OAA8B,IAAIE,MAAM/1C,EAAQxvE,GAC1C,MAAbwvE,EAAQngE,GAAamgE,EAAQ3mE,eAAe,MAC5Cu8G,EAAOC,OAA8B,IAAIjzD,MAAMod,EAAQngE,GAC1C,MAAbmgE,EAAQlgE,GAAakgE,EAAQ3mE,eAAe,MAC5Cg8G,EAAMl4G,KAAK64D,YAAY/pD,OAAO+zD,EAAQlgE,EAAG81G,EAAOC,OAA8B,IAAIG,QAAQC,SAC7E,MAAbj2C,EAAQjgE,GAAaigE,EAAQ3mE,eAAe,MAC5Cg8G,EAAMl4G,KAAK40C,WAAW9lC,OAAO+zD,EAAQjgE,EAAG61G,EAAOC,OAA8B,IAAIG,QAAQC,SACvE,MAAlBj2C,EAAQhgE,QAAkBggE,EAAQhgE,OAAOrP,OAAQ,CACjDilH,EAAOC,OAA8B,IAAIG,OACzC,IAAK,IAAIxlH,EAAI,EAAGA,EAAIwvE,EAAQhgE,OAAOrP,SAAUH,EACzColH,EAAOE,MAAM91C,EAAQhgE,OAAOxP,IAChColH,EAAOK,QACX,CACA,GAAoB,MAAhBj2C,EAAQ//D,MAAgB+/D,EAAQ//D,KAAKtP,OAAQ,CAE7C,IADAilH,EAAOC,OAA8B,IAAIG,OAChCxlH,EAAI,EAAGA,EAAIwvE,EAAQ//D,KAAKtP,SAAUH,EACvColH,EAAOG,MAAM/1C,EAAQ//D,KAAKzP,IAC9BolH,EAAOK,QACX,CACA,GAAuB,MAAnBj2C,EAAQ9/D,SAAmB8/D,EAAQ9/D,QAAQvP,OAC3C,IAASH,EAAI,EAAGA,EAAIwvE,EAAQ9/D,QAAQvP,SAAUH,EAC1ColH,EAAOC,OAA8B,IAAIjzD,MAAMod,EAAQ9/D,QAAQ1P,IACvE,GAAuB,MAAnBwvE,EAAQ7/D,SAAmB6/D,EAAQ7/D,QAAQxP,OAC3C,IAASH,EAAI,EAAGA,EAAIwvE,EAAQ7/D,QAAQxP,SAAUH,EAC1C6kH,EAAMl4G,KAAK64D,YAAY/pD,OAAO+zD,EAAQ7/D,QAAQ3P,GAAIolH,EAAOC,OAA+B,IAAIG,QAAQC,SAC5G,GAAsB,MAAlBj2C,EAAQ5/D,QAAkB4/D,EAAQ5/D,OAAOzP,OACzC,IAASH,EAAI,EAAGA,EAAIwvE,EAAQ5/D,OAAOzP,SAAUH,EACzC6kH,EAAMl4G,KAAK40C,WAAW9lC,OAAO+zD,EAAQ5/D,OAAO5P,GAAIolH,EAAOC,OAA+B,IAAIG,QAAQC,SAO1G,OANyB,MAArBj2C,EAAQ3d,WAAqB2d,EAAQ3mE,eAAe,cACpDu8G,EAAOC,OAA+B,KAAKhP,OAAO7mC,EAAQ3d,WAC1C,MAAhB2d,EAAQxtE,MAAgBwtE,EAAQ3mE,eAAe,SAC/Cu8G,EAAOC,OAA+B,KAAKK,MAAMl2C,EAAQxtE,MAClC,MAAvBwtE,EAAQy1C,aAAuBz1C,EAAQ3mE,eAAe,gBACtDu8G,EAAOC,OAA+B,KAAKhP,OAAO7mC,EAAQy1C,aACvDG,CACX,EAWAx4G,EAAe+4G,gBAAkB,SAAyBn2C,EAAS41C,GAC/D,OAAO9hH,KAAKmY,OAAO+zD,EAAS41C,GAAQK,QACxC,EAaA74G,EAAe8O,OAAS,SAAgBkqG,EAAQzlH,GACtCylH,aAAkBrB,IACpBqB,EAASrB,EAAQp9D,OAAOy+D,IAE5B,IADA,IAAIpgF,OAAiB1lC,IAAXK,EAAuBylH,EAAOhyE,IAAMgyE,EAAO14C,IAAM/sE,EAAQqvE,EAAU,IAAIq1C,EAAMl4G,KAAKC,eACrFg5G,EAAO14C,IAAM1nC,GAAK,CACrB,IAAIghD,EAAMo/B,EAAOP,SACjB,OAAQ7+B,IAAQ,GAChB,KAAK,EACDhX,EAAQjwE,KAAOqmH,EAAOvP,SACtB,MACJ,KAAK,GACD7mC,EAAQy1C,YAAcW,EAAOvP,SAC7B,MACJ,KAAK,GACD7mC,EAAQ3d,UAAY+zD,EAAOvP,SAC3B,MACJ,KAAK,GACD7mC,EAAQxtE,KAAO4jH,EAAOF,QACtB,MACJ,KAAK,EACDl2C,EAAQpgE,EAAIw2G,EAAON,QACnB,MACJ,KAAK,EACD91C,EAAQxvE,EAAI4lH,EAAOL,QACnB,MACJ,KAAK,EACD/1C,EAAQngE,EAAIu2G,EAAOxzD,QACnB,MACJ,KAAK,EACDod,EAAQlgE,EAAIu1G,EAAMl4G,KAAK64D,YAAY9pD,OAAOkqG,EAAQA,EAAOP,UACzD,MACJ,KAAK,EACD71C,EAAQjgE,EAAIs1G,EAAMl4G,KAAK40C,WAAW7lC,OAAOkqG,EAAQA,EAAOP,UACxD,MACJ,KAAK,EAGD,GAFM71C,EAAQhgE,QAAUggE,EAAQhgE,OAAOrP,SACnCqvE,EAAQhgE,OAAS,IACH,IAAP,EAANg3E,GAED,IADA,IAAIq/B,EAAOD,EAAOP,SAAWO,EAAO14C,IAC7B04C,EAAO14C,IAAM24C,GAChBr2C,EAAQhgE,OAAOpP,KAAKwlH,EAAON,cAE/B91C,EAAQhgE,OAAOpP,KAAKwlH,EAAON,SAC/B,MACJ,KAAK,EAGD,GAFM91C,EAAQ//D,MAAQ+/D,EAAQ//D,KAAKtP,SAC/BqvE,EAAQ//D,KAAO,IACD,IAAP,EAAN+2E,GAED,IADIq/B,EAAOD,EAAOP,SAAWO,EAAO14C,IAC7B04C,EAAO14C,IAAM24C,GAChBr2C,EAAQ//D,KAAKrP,KAAKwlH,EAAOL,cAE7B/1C,EAAQ//D,KAAKrP,KAAKwlH,EAAOL,SAC7B,MACJ,KAAK,EACK/1C,EAAQ9/D,SAAW8/D,EAAQ9/D,QAAQvP,SACrCqvE,EAAQ9/D,QAAU,IACtB8/D,EAAQ9/D,QAAQtP,KAAKwlH,EAAOxzD,SAC5B,MACJ,KAAK,GACKod,EAAQ7/D,SAAW6/D,EAAQ7/D,QAAQxP,SACrCqvE,EAAQ7/D,QAAU,IACtB6/D,EAAQ7/D,QAAQvP,KAAKykH,EAAMl4G,KAAK64D,YAAY9pD,OAAOkqG,EAAQA,EAAOP,WAClE,MACJ,KAAK,GACK71C,EAAQ5/D,QAAU4/D,EAAQ5/D,OAAOzP,SACnCqvE,EAAQ5/D,OAAS,IACrB4/D,EAAQ5/D,OAAOxP,KAAKykH,EAAMl4G,KAAK40C,WAAW7lC,OAAOkqG,EAAQA,EAAOP,WAChE,MACJ,QACIO,EAAOE,SAAe,EAANt/B,GAGxB,CACA,OAAOhX,CACX,EAYA5iE,EAAem5G,gBAAkB,SAAyBH,GAGtD,OAFMA,aAAkBrB,IACpBqB,EAAS,IAAIrB,EAAQqB,IAClBtiH,KAAKoY,OAAOkqG,EAAQA,EAAOP,SACtC,EAUAz4G,EAAeo5G,OAAS,SAAgBx2C,GACpC,GAAuB,iBAAZA,GAAoC,OAAZA,EAC/B,MAAO,kBACX,GAAoB,MAAhBA,EAAQjwE,MAAgBiwE,EAAQ3mE,eAAe,UAC1C87G,EAAMn/G,SAASgqE,EAAQjwE,MACxB,MAAO,wBACf,GAA2B,MAAvBiwE,EAAQy1C,aAAuBz1C,EAAQ3mE,eAAe,iBACjD87G,EAAMn/G,SAASgqE,EAAQy1C,aACxB,MAAO,+BACf,GAAyB,MAArBz1C,EAAQ3d,WAAqB2d,EAAQ3mE,eAAe,eAC/C87G,EAAMn/G,SAASgqE,EAAQ3d,WACxB,MAAO,6BACf,GAAoB,MAAhB2d,EAAQxtE,MAAgBwtE,EAAQ3mE,eAAe,QAC/C,OAAQ2mE,EAAQxtE,MAChB,QACI,MAAO,4BACX,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,IAGT,GAAiB,MAAbwtE,EAAQpgE,GAAaogE,EAAQ3mE,eAAe,MACnB,iBAAd2mE,EAAQpgE,EACf,MAAO,qBACf,GAAiB,MAAbogE,EAAQxvE,GAAawvE,EAAQ3mE,eAAe,QACvC87G,EAAMz5G,UAAUskE,EAAQxvE,IAAQwvE,EAAQxvE,GAAK2kH,EAAMz5G,UAAUskE,EAAQxvE,EAAEirE,MAAQ05C,EAAMz5G,UAAUskE,EAAQxvE,EAAEkrE,OAC1G,MAAO,2BACf,GAAiB,MAAbsE,EAAQngE,GAAamgE,EAAQ3mE,eAAe,QACtC2mE,EAAQngE,GAAiC,iBAArBmgE,EAAQngE,EAAElP,QAAuBwkH,EAAMn/G,SAASgqE,EAAQngE,IAC9E,MAAO,qBACf,GAAiB,MAAbmgE,EAAQlgE,GAAakgE,EAAQ3mE,eAAe,OACxC8jC,EAAQk4E,EAAMl4G,KAAK64D,YAAYwgD,OAAOx2C,EAAQlgE,IAE9C,MAAO,KAAOq9B,EAEtB,GAAiB,MAAb6iC,EAAQjgE,GAAaigE,EAAQ3mE,eAAe,OACxC8jC,EAAQk4E,EAAMl4G,KAAK40C,WAAWykE,OAAOx2C,EAAQjgE,IAE7C,MAAO,KAAOo9B,EAEtB,GAAsB,MAAlB6iC,EAAQhgE,QAAkBggE,EAAQ3mE,eAAe,UAAW,CAC5D,IAAKnG,MAAMC,QAAQ6sE,EAAQhgE,QACvB,MAAO,yBACX,IAAK,IAAIxP,EAAI,EAAGA,EAAIwvE,EAAQhgE,OAAOrP,SAAUH,EACzC,GAAiC,iBAAtBwvE,EAAQhgE,OAAOxP,GACtB,MAAO,2BACnB,CACA,GAAoB,MAAhBwvE,EAAQ//D,MAAgB+/D,EAAQ3mE,eAAe,QAAS,CACxD,IAAKnG,MAAMC,QAAQ6sE,EAAQ//D,MACvB,MAAO,uBACX,IAASzP,EAAI,EAAGA,EAAIwvE,EAAQ//D,KAAKtP,SAAUH,EACvC,KAAK2kH,EAAMz5G,UAAUskE,EAAQ//D,KAAKzP,KAASwvE,EAAQ//D,KAAKzP,IAAM2kH,EAAMz5G,UAAUskE,EAAQ//D,KAAKzP,GAAGirE,MAAQ05C,EAAMz5G,UAAUskE,EAAQ//D,KAAKzP,GAAGkrE,OAClI,MAAO,+BACnB,CACA,GAAuB,MAAnBsE,EAAQ9/D,SAAmB8/D,EAAQ3mE,eAAe,WAAY,CAC9D,IAAKnG,MAAMC,QAAQ6sE,EAAQ9/D,SACvB,MAAO,0BACX,IAAS1P,EAAI,EAAGA,EAAIwvE,EAAQ9/D,QAAQvP,SAAUH,EAC1C,KAAMwvE,EAAQ9/D,QAAQ1P,IAA2C,iBAA9BwvE,EAAQ9/D,QAAQ1P,GAAGG,QAAuBwkH,EAAMn/G,SAASgqE,EAAQ9/D,QAAQ1P,KACxG,MAAO,4BACnB,CACA,GAAuB,MAAnBwvE,EAAQ7/D,SAAmB6/D,EAAQ3mE,eAAe,WAAY,CAC9D,IAAKnG,MAAMC,QAAQ6sE,EAAQ7/D,SACvB,MAAO,0BACX,IAAS3P,EAAI,EAAGA,EAAIwvE,EAAQ7/D,QAAQxP,SAAUH,EAE1C,GADI2sC,EAAQk4E,EAAMl4G,KAAK64D,YAAYwgD,OAAOx2C,EAAQ7/D,QAAQ3P,IAEtD,MAAO,WAAa2sC,CAEhC,CACA,GAAsB,MAAlB6iC,EAAQ5/D,QAAkB4/D,EAAQ3mE,eAAe,UAAW,CAC5D,IAAKnG,MAAMC,QAAQ6sE,EAAQ5/D,QACvB,MAAO,yBACX,IAAS5P,EAAI,EAAGA,EAAIwvE,EAAQ5/D,OAAOzP,SAAUH,EAAG,CAC5C,IAAI2sC,EACJ,GADIA,EAAQk4E,EAAMl4G,KAAK40C,WAAWykE,OAAOx2C,EAAQ5/D,OAAO5P,IAEpD,MAAO,UAAY2sC,CAC3B,CACJ,CACA,OAAO,IACX,EAUA//B,EAAeq5G,WAAa,SAAoBC,GAC5C,GAAIA,aAAkBrB,EAAMl4G,KAAKC,eAC7B,OAAOs5G,EACX,IAAI12C,EAAU,IAAIq1C,EAAMl4G,KAAKC,eAO7B,OANmB,MAAfs5G,EAAO3mH,OACPiwE,EAAQjwE,KAAOs1F,OAAOqxB,EAAO3mH,OACP,MAAtB2mH,EAAOjB,cACPz1C,EAAQy1C,YAAcpwB,OAAOqxB,EAAOjB,cAChB,MAApBiB,EAAOr0D,YACP2d,EAAQ3d,UAAYgjC,OAAOqxB,EAAOr0D,YAC9Bq0D,EAAOlkH,MACf,IAAK,YACL,KAAK,EACDwtE,EAAQxtE,KAAO,EACf,MACJ,IAAK,QACL,KAAK,EACDwtE,EAAQxtE,KAAO,EACf,MACJ,IAAK,MACL,KAAK,EACDwtE,EAAQxtE,KAAO,EACf,MACJ,IAAK,SACL,KAAK,EACDwtE,EAAQxtE,KAAO,EACf,MACJ,IAAK,SACL,KAAK,EACDwtE,EAAQxtE,KAAO,EACf,MACJ,IAAK,QACL,KAAK,EACDwtE,EAAQxtE,KAAO,EACf,MACJ,IAAK,SACL,KAAK,EACDwtE,EAAQxtE,KAAO,EACf,MACJ,IAAK,OACL,KAAK,EACDwtE,EAAQxtE,KAAO,EACf,MACJ,IAAK,UACL,KAAK,EACDwtE,EAAQxtE,KAAO,EACf,MACJ,IAAK,UACL,KAAK,EACDwtE,EAAQxtE,KAAO,EACf,MACJ,IAAK,SACL,KAAK,GACDwtE,EAAQxtE,KAAO,GAmBnB,GAhBgB,MAAZkkH,EAAO92G,IACPogE,EAAQpgE,EAAIlM,OAAOgjH,EAAO92G,IACd,MAAZ82G,EAAOlmH,IACH2kH,EAAM55C,MACLyE,EAAQxvE,EAAI2kH,EAAM55C,KAAKC,UAAUk7C,EAAOlmH,IAAI8qE,UAAW,EAC/B,iBAAbo7C,EAAOlmH,EACnBwvE,EAAQxvE,EAAI+pD,SAASm8D,EAAOlmH,EAAG,IACN,iBAAbkmH,EAAOlmH,EACnBwvE,EAAQxvE,EAAIkmH,EAAOlmH,EACM,iBAAbkmH,EAAOlmH,IACnBwvE,EAAQxvE,EAAI,IAAI2kH,EAAMwB,SAASD,EAAOlmH,EAAEirE,MAAQ,EAAGi7C,EAAOlmH,EAAEkrE,OAAS,GAAGrE,aAChE,MAAZq/C,EAAO72G,IACiB,iBAAb62G,EAAO72G,EACds1G,EAAM1L,OAAOv9F,OAAOwqG,EAAO72G,EAAGmgE,EAAQngE,EAAIs1G,EAAMO,UAAUP,EAAM1L,OAAO94G,OAAO+lH,EAAO72G,IAAK,GACrF62G,EAAO72G,EAAElP,SACdqvE,EAAQngE,EAAI62G,EAAO72G,IACX,MAAZ62G,EAAO52G,EAAW,CAClB,GAAwB,iBAAb42G,EAAO52G,EACd,MAAM1P,UAAU,2CACpB4vE,EAAQlgE,EAAIu1G,EAAMl4G,KAAK64D,YAAYygD,WAAWC,EAAO52G,EACzD,CACA,GAAgB,MAAZ42G,EAAO32G,EAAW,CAClB,GAAwB,iBAAb22G,EAAO32G,EACd,MAAM3P,UAAU,2CACpB4vE,EAAQjgE,EAAIs1G,EAAMl4G,KAAK40C,WAAW0kE,WAAWC,EAAO32G,EACxD,CACA,GAAI22G,EAAO12G,OAAQ,CACf,IAAK9M,MAAMC,QAAQujH,EAAO12G,QACtB,MAAM5P,UAAU,+CACpB4vE,EAAQhgE,OAAS,GACjB,IAAK,IAAIxP,EAAI,EAAGA,EAAIkmH,EAAO12G,OAAOrP,SAAUH,EACxCwvE,EAAQhgE,OAAOxP,GAAKkD,OAAOgjH,EAAO12G,OAAOxP,GACjD,CACA,GAAIkmH,EAAOz2G,KAAM,CACb,IAAK/M,MAAMC,QAAQujH,EAAOz2G,MACtB,MAAM7P,UAAU,6CAEpB,IADA4vE,EAAQ//D,KAAO,GACNzP,EAAI,EAAGA,EAAIkmH,EAAOz2G,KAAKtP,SAAUH,EAClC2kH,EAAM55C,MACLyE,EAAQ//D,KAAKzP,GAAK2kH,EAAM55C,KAAKC,UAAUk7C,EAAOz2G,KAAKzP,KAAK8qE,UAAW,EACrC,iBAAnBo7C,EAAOz2G,KAAKzP,GACxBwvE,EAAQ//D,KAAKzP,GAAK+pD,SAASm8D,EAAOz2G,KAAKzP,GAAI,IACZ,iBAAnBkmH,EAAOz2G,KAAKzP,GACxBwvE,EAAQ//D,KAAKzP,GAAKkmH,EAAOz2G,KAAKzP,GACC,iBAAnBkmH,EAAOz2G,KAAKzP,KACxBwvE,EAAQ//D,KAAKzP,GAAK,IAAI2kH,EAAMwB,SAASD,EAAOz2G,KAAKzP,GAAGirE,MAAQ,EAAGi7C,EAAOz2G,KAAKzP,GAAGkrE,OAAS,GAAGrE,WACtG,CACA,GAAIq/C,EAAOx2G,QAAS,CAChB,IAAKhN,MAAMC,QAAQujH,EAAOx2G,SACtB,MAAM9P,UAAU,gDAEpB,IADA4vE,EAAQ9/D,QAAU,GACT1P,EAAI,EAAGA,EAAIkmH,EAAOx2G,QAAQvP,SAAUH,EACR,iBAAtBkmH,EAAOx2G,QAAQ1P,GACtB2kH,EAAM1L,OAAOv9F,OAAOwqG,EAAOx2G,QAAQ1P,GAAIwvE,EAAQ9/D,QAAQ1P,GAAK2kH,EAAMO,UAAUP,EAAM1L,OAAO94G,OAAO+lH,EAAOx2G,QAAQ1P,KAAM,GAChHkmH,EAAOx2G,QAAQ1P,GAAGG,SACvBqvE,EAAQ9/D,QAAQ1P,GAAKkmH,EAAOx2G,QAAQ1P,GAChD,CACA,GAAIkmH,EAAOv2G,QAAS,CAChB,IAAKjN,MAAMC,QAAQujH,EAAOv2G,SACtB,MAAM/P,UAAU,gDAEpB,IADA4vE,EAAQ7/D,QAAU,GACT3P,EAAI,EAAGA,EAAIkmH,EAAOv2G,QAAQxP,SAAUH,EAAG,CAC5C,GAAiC,iBAAtBkmH,EAAOv2G,QAAQ3P,GACtB,MAAMJ,UAAU,iDACpB4vE,EAAQ7/D,QAAQ3P,GAAK6kH,EAAMl4G,KAAK64D,YAAYygD,WAAWC,EAAOv2G,QAAQ3P,GAC1E,CACJ,CACA,GAAIkmH,EAAOt2G,OAAQ,CACf,IAAKlN,MAAMC,QAAQujH,EAAOt2G,QACtB,MAAMhQ,UAAU,+CAEpB,IADA4vE,EAAQ5/D,OAAS,GACR5P,EAAI,EAAGA,EAAIkmH,EAAOt2G,OAAOzP,SAAUH,EAAG,CAC3C,GAAgC,iBAArBkmH,EAAOt2G,OAAO5P,GACrB,MAAMJ,UAAU,gDACpB4vE,EAAQ5/D,OAAO5P,GAAK6kH,EAAMl4G,KAAK40C,WAAW0kE,WAAWC,EAAOt2G,OAAO5P,GACvE,CACJ,CACA,OAAOwvE,CACX,EAWA5iE,EAAew5G,SAAW,SAAkB52C,EAAS/rE,GAC5CA,IACDA,EAAU,CAAC,GACf,IAAIyiH,EAAS,CAAC,EAQd,IAPIziH,EAAQ4iH,QAAU5iH,EAAQ6iH,YAC1BJ,EAAO12G,OAAS,GAChB02G,EAAOz2G,KAAO,GACdy2G,EAAOx2G,QAAU,GACjBw2G,EAAOv2G,QAAU,GACjBu2G,EAAOt2G,OAAS,IAEhBnM,EAAQ6iH,SAAU,CAGlB,GAFAJ,EAAO3mH,KAAO,GACd2mH,EAAO92G,EAAI,EACPu1G,EAAM55C,KAAM,CACZ,IAAIw7C,EAAO,IAAI5B,EAAM55C,KAAK,EAAG,GAAG,GAChCm7C,EAAOlmH,EAAIyD,EAAQ+iH,QAAU3xB,OAAS0xB,EAAKltE,WAAa51C,EAAQ+iH,QAAUtjH,OAASqjH,EAAK1/C,WAAa0/C,CACzG,MACIL,EAAOlmH,EAAIyD,EAAQ+iH,QAAU3xB,OAAS,IAAM,EAC5CpxF,EAAQ2uD,QAAUyiC,OAClBqxB,EAAO72G,EAAI,IAEX62G,EAAO72G,EAAI,GACP5L,EAAQ2uD,QAAU1vD,QAClBwjH,EAAO72G,EAAIs1G,EAAMO,UAAUgB,EAAO72G,KAE1C62G,EAAO52G,EAAI,KACX42G,EAAO32G,EAAI,KACX22G,EAAOr0D,UAAY,GACnBq0D,EAAOlkH,KAAOyB,EAAQgjH,QAAU5xB,OAAS,YAAc,EACvDqxB,EAAOjB,YAAc,EACzB,CAgBA,GAfoB,MAAhBz1C,EAAQjwE,MAAgBiwE,EAAQ3mE,eAAe,UAC/Cq9G,EAAO3mH,KAAOiwE,EAAQjwE,MACT,MAAbiwE,EAAQpgE,GAAaogE,EAAQ3mE,eAAe,OAC5Cq9G,EAAO92G,EAAI3L,EAAQijH,OAASC,SAASn3C,EAAQpgE,GAAKylF,OAAOrlB,EAAQpgE,GAAKogE,EAAQpgE,GACjE,MAAbogE,EAAQxvE,GAAawvE,EAAQ3mE,eAAe,OACnB,iBAAd2mE,EAAQxvE,EACfkmH,EAAOlmH,EAAIyD,EAAQ+iH,QAAU3xB,OAASA,OAAOrlB,EAAQxvE,GAAKwvE,EAAQxvE,EAElEkmH,EAAOlmH,EAAIyD,EAAQ+iH,QAAU3xB,OAAS8vB,EAAM55C,KAAKk+B,UAAU5vD,SAASvwC,KAAK0mE,EAAQxvE,GAAKyD,EAAQ+iH,QAAUtjH,OAAS,IAAIyhH,EAAMwB,SAAS32C,EAAQxvE,EAAEirE,MAAQ,EAAGuE,EAAQxvE,EAAEkrE,OAAS,GAAGrE,WAAa2I,EAAQxvE,GAC3L,MAAbwvE,EAAQngE,GAAamgE,EAAQ3mE,eAAe,OAC5Cq9G,EAAO72G,EAAI5L,EAAQ2uD,QAAUyiC,OAAS8vB,EAAM1L,OAAOx9F,OAAO+zD,EAAQngE,EAAG,EAAGmgE,EAAQngE,EAAElP,QAAUsD,EAAQ2uD,QAAU1vD,MAAQA,MAAMumG,UAAU/wF,MAAMpP,KAAK0mE,EAAQngE,GAAKmgE,EAAQngE,GACzJ,MAAbmgE,EAAQlgE,GAAakgE,EAAQ3mE,eAAe,OAC5Cq9G,EAAO52G,EAAIu1G,EAAMl4G,KAAK64D,YAAY4gD,SAAS52C,EAAQlgE,EAAG7L,IACzC,MAAb+rE,EAAQjgE,GAAaigE,EAAQ3mE,eAAe,OAC5Cq9G,EAAO32G,EAAIs1G,EAAMl4G,KAAK40C,WAAW6kE,SAAS52C,EAAQjgE,EAAG9L,IACrD+rE,EAAQhgE,QAAUggE,EAAQhgE,OAAOrP,OAAQ,CACzC+lH,EAAO12G,OAAS,GAChB,IAAK,IAAItI,EAAI,EAAGA,EAAIsoE,EAAQhgE,OAAOrP,SAAU+G,EACzCg/G,EAAO12G,OAAOtI,GAAKzD,EAAQijH,OAASC,SAASn3C,EAAQhgE,OAAOtI,IAAM2tF,OAAOrlB,EAAQhgE,OAAOtI,IAAMsoE,EAAQhgE,OAAOtI,EACrH,CACA,GAAIsoE,EAAQ//D,MAAQ+/D,EAAQ//D,KAAKtP,OAE7B,IADA+lH,EAAOz2G,KAAO,GACLvI,EAAI,EAAGA,EAAIsoE,EAAQ//D,KAAKtP,SAAU+G,EACR,iBAApBsoE,EAAQ//D,KAAKvI,GACpBg/G,EAAOz2G,KAAKvI,GAAKzD,EAAQ+iH,QAAU3xB,OAASA,OAAOrlB,EAAQ//D,KAAKvI,IAAMsoE,EAAQ//D,KAAKvI,GAEnFg/G,EAAOz2G,KAAKvI,GAAKzD,EAAQ+iH,QAAU3xB,OAAS8vB,EAAM55C,KAAKk+B,UAAU5vD,SAASvwC,KAAK0mE,EAAQ//D,KAAKvI,IAAMzD,EAAQ+iH,QAAUtjH,OAAS,IAAIyhH,EAAMwB,SAAS32C,EAAQ//D,KAAKvI,GAAG+jE,MAAQ,EAAGuE,EAAQ//D,KAAKvI,GAAGgkE,OAAS,GAAGrE,WAAa2I,EAAQ//D,KAAKvI,GAE7O,GAAIsoE,EAAQ9/D,SAAW8/D,EAAQ9/D,QAAQvP,OAEnC,IADA+lH,EAAOx2G,QAAU,GACRxI,EAAI,EAAGA,EAAIsoE,EAAQ9/D,QAAQvP,SAAU+G,EAC1Cg/G,EAAOx2G,QAAQxI,GAAKzD,EAAQ2uD,QAAUyiC,OAAS8vB,EAAM1L,OAAOx9F,OAAO+zD,EAAQ9/D,QAAQxI,GAAI,EAAGsoE,EAAQ9/D,QAAQxI,GAAG/G,QAAUsD,EAAQ2uD,QAAU1vD,MAAQA,MAAMumG,UAAU/wF,MAAMpP,KAAK0mE,EAAQ9/D,QAAQxI,IAAMsoE,EAAQ9/D,QAAQxI,GAE1N,GAAIsoE,EAAQ7/D,SAAW6/D,EAAQ7/D,QAAQxP,OAEnC,IADA+lH,EAAOv2G,QAAU,GACRzI,EAAI,EAAGA,EAAIsoE,EAAQ7/D,QAAQxP,SAAU+G,EAC1Cg/G,EAAOv2G,QAAQzI,GAAK29G,EAAMl4G,KAAK64D,YAAY4gD,SAAS52C,EAAQ7/D,QAAQzI,GAAIzD,GAEhF,GAAI+rE,EAAQ5/D,QAAU4/D,EAAQ5/D,OAAOzP,OAEjC,IADA+lH,EAAOt2G,OAAS,GACP1I,EAAI,EAAGA,EAAIsoE,EAAQ5/D,OAAOzP,SAAU+G,EACzCg/G,EAAOt2G,OAAO1I,GAAK29G,EAAMl4G,KAAK40C,WAAW6kE,SAAS52C,EAAQ5/D,OAAO1I,GAAIzD,GAQ7E,OANyB,MAArB+rE,EAAQ3d,WAAqB2d,EAAQ3mE,eAAe,eACpDq9G,EAAOr0D,UAAY2d,EAAQ3d,WACX,MAAhB2d,EAAQxtE,MAAgBwtE,EAAQ3mE,eAAe,UAC/Cq9G,EAAOlkH,KAAOyB,EAAQgjH,QAAU5xB,OAASgwB,EAAMl4G,KAAKC,eAAee,cAAc6hE,EAAQxtE,MAAQwtE,EAAQxtE,MAClF,MAAvBwtE,EAAQy1C,aAAuBz1C,EAAQ3mE,eAAe,iBACtDq9G,EAAOjB,YAAcz1C,EAAQy1C,aAC1BiB,CACX,EASAt5G,EAAeq8F,UAAU4U,OAAS,WAC9B,OAAOv6G,KAAK1B,YAAYwkH,SAAS9iH,KAAMghH,EAAUM,KAAKgC,cAC1D,EAkBAh6G,EAAee,cAAgB,WAC3B,IAAI02G,EAAa,CAAC,EAAGtsD,EAASn3D,OAAOumD,OAAOk9D,GAY5C,OAXAtsD,EAAOssD,EAAW,GAAK,aAAe,EACtCtsD,EAAOssD,EAAW,GAAK,SAAW,EAClCtsD,EAAOssD,EAAW,GAAK,OAAS,EAChCtsD,EAAOssD,EAAW,GAAK,UAAY,EACnCtsD,EAAOssD,EAAW,GAAK,UAAY,EACnCtsD,EAAOssD,EAAW,GAAK,SAAW,EAClCtsD,EAAOssD,EAAW,GAAK,UAAY,EACnCtsD,EAAOssD,EAAW,GAAK,QAAU,EACjCtsD,EAAOssD,EAAW,GAAK,WAAa,EACpCtsD,EAAOssD,EAAW,GAAK,WAAa,EACpCtsD,EAAOssD,EAAW,IAAM,UAAY,GAC7BtsD,CACV,CAd8B,GAgBxBnrD,CACV,CA5sBqB,GA8sBtBD,EAAKk6G,eAAiB,WAmBlB,SAASA,EAAe7B,GACpB,GAAIA,EACA,IAAK,IAAIvnG,EAAO7c,OAAO6c,KAAKunG,GAAahlH,EAAI,EAAGA,EAAIyd,EAAKtd,SAAUH,EACpC,MAAvBglH,EAAWvnG,EAAKzd,MAChBsD,KAAKma,EAAKzd,IAAMglH,EAAWvnG,EAAKzd,IAChD,CAkNA,OA1MA6mH,EAAe5d,UAAU1pG,KAAO,GAQhCsnH,EAAe5d,UAAUjnG,KAAO,KAQhC6kH,EAAe5d,UAAUp3C,UAAY,GAUrCg1D,EAAe1/D,OAAS,SAAgB69D,GACpC,OAAO,IAAI6B,EAAe7B,EAC9B,EAWA6B,EAAeprG,OAAS,SAAgB+zD,EAAS41C,GAS7C,OARKA,IACDA,EAASX,EAAQt9D,UACD,MAAhBqoB,EAAQjwE,MAAgBiwE,EAAQ3mE,eAAe,SAC/Cu8G,EAAOC,OAA8B,IAAIhP,OAAO7mC,EAAQjwE,MACxC,MAAhBiwE,EAAQxtE,MAAgBwtE,EAAQ3mE,eAAe,SAC/Cg8G,EAAMl4G,KAAKm6G,UAAUrrG,OAAO+zD,EAAQxtE,KAAMojH,EAAOC,OAA8B,IAAIG,QAAQC,SACtE,MAArBj2C,EAAQ3d,WAAqB2d,EAAQ3mE,eAAe,cACpDu8G,EAAOC,OAA8B,IAAIhP,OAAO7mC,EAAQ3d,WACrDuzD,CACX,EAWAyB,EAAelB,gBAAkB,SAAyBn2C,EAAS41C,GAC/D,OAAO9hH,KAAKmY,OAAO+zD,EAAS41C,GAAQK,QACxC,EAaAoB,EAAenrG,OAAS,SAAgBkqG,EAAQzlH,GACtCylH,aAAkBrB,IACpBqB,EAASrB,EAAQp9D,OAAOy+D,IAE5B,IADA,IAAIpgF,OAAiB1lC,IAAXK,EAAuBylH,EAAOhyE,IAAMgyE,EAAO14C,IAAM/sE,EAAQqvE,EAAU,IAAIq1C,EAAMl4G,KAAKk6G,eACrFjB,EAAO14C,IAAM1nC,GAAK,CACrB,IAAIghD,EAAMo/B,EAAOP,SACjB,OAAQ7+B,IAAQ,GAChB,KAAK,EACDhX,EAAQjwE,KAAOqmH,EAAOvP,SACtB,MACJ,KAAK,EACD7mC,EAAQxtE,KAAO6iH,EAAMl4G,KAAKm6G,UAAUprG,OAAOkqG,EAAQA,EAAOP,UAC1D,MACJ,KAAK,EACD71C,EAAQ3d,UAAY+zD,EAAOvP,SAC3B,MACJ,QACIuP,EAAOE,SAAe,EAANt/B,GAGxB,CACA,OAAOhX,CACX,EAYAq3C,EAAed,gBAAkB,SAAyBH,GAGtD,OAFMA,aAAkBrB,IACpBqB,EAAS,IAAIrB,EAAQqB,IAClBtiH,KAAKoY,OAAOkqG,EAAQA,EAAOP,SACtC,EAUAwB,EAAeb,OAAS,SAAgBx2C,GACpC,GAAuB,iBAAZA,GAAoC,OAAZA,EAC/B,MAAO,kBACX,GAAoB,MAAhBA,EAAQjwE,MAAgBiwE,EAAQ3mE,eAAe,UAC1C87G,EAAMn/G,SAASgqE,EAAQjwE,MACxB,MAAO,wBACf,GAAoB,MAAhBiwE,EAAQxtE,MAAgBwtE,EAAQ3mE,eAAe,QAAS,CACxD,IAAI8jC,EAAQk4E,EAAMl4G,KAAKm6G,UAAUd,OAAOx2C,EAAQxtE,MAChD,GAAI2qC,EACA,MAAO,QAAUA,CACzB,CACA,OAAyB,MAArB6iC,EAAQ3d,WAAqB2d,EAAQ3mE,eAAe,eAC/C87G,EAAMn/G,SAASgqE,EAAQ3d,WACjB,6BACR,IACX,EAUAg1D,EAAeZ,WAAa,SAAoBC,GAC5C,GAAIA,aAAkBrB,EAAMl4G,KAAKk6G,eAC7B,OAAOX,EACX,IAAI12C,EAAU,IAAIq1C,EAAMl4G,KAAKk6G,eAG7B,GAFmB,MAAfX,EAAO3mH,OACPiwE,EAAQjwE,KAAOs1F,OAAOqxB,EAAO3mH,OACd,MAAf2mH,EAAOlkH,KAAc,CACrB,GAA2B,iBAAhBkkH,EAAOlkH,KACd,MAAMpC,UAAU,8CACpB4vE,EAAQxtE,KAAO6iH,EAAMl4G,KAAKm6G,UAAUb,WAAWC,EAAOlkH,KAC1D,CAGA,OAFwB,MAApBkkH,EAAOr0D,YACP2d,EAAQ3d,UAAYgjC,OAAOqxB,EAAOr0D,YAC/B2d,CACX,EAWAq3C,EAAeT,SAAW,SAAkB52C,EAAS/rE,GAC5CA,IACDA,EAAU,CAAC,GACf,IAAIyiH,EAAS,CAAC,EAYd,OAXIziH,EAAQ6iH,WACRJ,EAAO3mH,KAAO,GACd2mH,EAAOlkH,KAAO,KACdkkH,EAAOr0D,UAAY,IAEH,MAAhB2d,EAAQjwE,MAAgBiwE,EAAQ3mE,eAAe,UAC/Cq9G,EAAO3mH,KAAOiwE,EAAQjwE,MACN,MAAhBiwE,EAAQxtE,MAAgBwtE,EAAQ3mE,eAAe,UAC/Cq9G,EAAOlkH,KAAO6iH,EAAMl4G,KAAKm6G,UAAUV,SAAS52C,EAAQxtE,KAAMyB,IACrC,MAArB+rE,EAAQ3d,WAAqB2d,EAAQ3mE,eAAe,eACpDq9G,EAAOr0D,UAAY2d,EAAQ3d,WACxBq0D,CACX,EASAW,EAAe5d,UAAU4U,OAAS,WAC9B,OAAOv6G,KAAK1B,YAAYwkH,SAAS9iH,KAAMghH,EAAUM,KAAKgC,cAC1D,EAEOC,CACV,CA3OqB,GA6OtBl6G,EAAK2zC,UAAY,WAuBb,SAASA,EAAU0kE,GAIf,GAHA1hH,KAAK2gB,MAAQ,GACb3gB,KAAK+P,OAAS,GACd/P,KAAKwI,UAAY,GACbk5G,EACA,IAAK,IAAIvnG,EAAO7c,OAAO6c,KAAKunG,GAAahlH,EAAI,EAAGA,EAAIyd,EAAKtd,SAAUH,EACpC,MAAvBglH,EAAWvnG,EAAKzd,MAChBsD,KAAKma,EAAKzd,IAAMglH,EAAWvnG,EAAKzd,IAChD,CAqVA,OA7UAsgD,EAAU2oD,UAAUhlF,MAAQ0gG,EAAMQ,WAQlC7kE,EAAU2oD,UAAU51F,OAASsxG,EAAMQ,WAQnC7kE,EAAU2oD,UAAU1pG,KAAO,GAQ3B+gD,EAAU2oD,UAAU1oD,OAAS,GAQ7BD,EAAU2oD,UAAUlgD,OAAS,GAQ7BzI,EAAU2oD,UAAUn9F,UAAY64G,EAAMQ,WAQtC7kE,EAAU2oD,UAAUp3C,UAAY,GAUhCvR,EAAU6G,OAAS,SAAgB69D,GAC/B,OAAO,IAAI1kE,EAAU0kE,EACzB,EAWA1kE,EAAU7kC,OAAS,SAAgB+zD,EAAS41C,GAGxC,GAFKA,IACDA,EAASX,EAAQt9D,UACA,MAAjBqoB,EAAQvrD,OAAiBurD,EAAQvrD,MAAM9jB,OACvC,IAAK,IAAIH,EAAI,EAAGA,EAAIwvE,EAAQvrD,MAAM9jB,SAAUH,EACxColH,EAAOC,OAA8B,IAAIhP,OAAO7mC,EAAQvrD,MAAMjkB,IACtE,GAAsB,MAAlBwvE,EAAQn8D,QAAkBm8D,EAAQn8D,OAAOlT,OACzC,IAASH,EAAI,EAAGA,EAAIwvE,EAAQn8D,OAAOlT,SAAUH,EACzColH,EAAOC,OAA8B,IAAIhP,OAAO7mC,EAAQn8D,OAAOrT,IAKvE,GAJoB,MAAhBwvE,EAAQjwE,MAAgBiwE,EAAQ3mE,eAAe,SAC/Cu8G,EAAOC,OAA8B,IAAIhP,OAAO7mC,EAAQjwE,MACtC,MAAlBiwE,EAAQjvB,QAAkBivB,EAAQ3mE,eAAe,WACjDu8G,EAAOC,OAA8B,IAAIhP,OAAO7mC,EAAQjvB,QACnC,MAArBivB,EAAQ1jE,WAAqB0jE,EAAQ1jE,UAAU3L,OAC/C,IAASH,EAAI,EAAGA,EAAIwvE,EAAQ1jE,UAAU3L,SAAUH,EAC5C6kH,EAAMl4G,KAAKC,eAAe6O,OAAO+zD,EAAQ1jE,UAAU9L,GAAIolH,EAAOC,OAA8B,IAAIG,QAAQC,SAKhH,OAJyB,MAArBj2C,EAAQ3d,WAAqB2d,EAAQ3mE,eAAe,cACpDu8G,EAAOC,OAA8B,IAAIhP,OAAO7mC,EAAQ3d,WACtC,MAAlB2d,EAAQzmB,QAAkBymB,EAAQ3mE,eAAe,WACjDu8G,EAAOC,OAA8B,IAAIhP,OAAO7mC,EAAQzmB,QACrDq8D,CACX,EAWA9kE,EAAUqlE,gBAAkB,SAAyBn2C,EAAS41C,GAC1D,OAAO9hH,KAAKmY,OAAO+zD,EAAS41C,GAAQK,QACxC,EAaAnlE,EAAU5kC,OAAS,SAAgBkqG,EAAQzlH,GACjCylH,aAAkBrB,IACpBqB,EAASrB,EAAQp9D,OAAOy+D,IAE5B,IADA,IAAIpgF,OAAiB1lC,IAAXK,EAAuBylH,EAAOhyE,IAAMgyE,EAAO14C,IAAM/sE,EAAQqvE,EAAU,IAAIq1C,EAAMl4G,KAAK2zC,UACrFslE,EAAO14C,IAAM1nC,GAAK,CACrB,IAAIghD,EAAMo/B,EAAOP,SACjB,OAAQ7+B,IAAQ,GAChB,KAAK,EACKhX,EAAQvrD,OAASurD,EAAQvrD,MAAM9jB,SACjCqvE,EAAQvrD,MAAQ,IACpBurD,EAAQvrD,MAAM7jB,KAAKwlH,EAAOvP,UAC1B,MACJ,KAAK,EACK7mC,EAAQn8D,QAAUm8D,EAAQn8D,OAAOlT,SACnCqvE,EAAQn8D,OAAS,IACrBm8D,EAAQn8D,OAAOjT,KAAKwlH,EAAOvP,UAC3B,MACJ,KAAK,EACD7mC,EAAQjwE,KAAOqmH,EAAOvP,SACtB,MACJ,KAAK,EACD7mC,EAAQjvB,OAASqlE,EAAOvP,SACxB,MACJ,KAAK,EACD7mC,EAAQzmB,OAAS68D,EAAOvP,SACxB,MACJ,KAAK,EACK7mC,EAAQ1jE,WAAa0jE,EAAQ1jE,UAAU3L,SACzCqvE,EAAQ1jE,UAAY,IACxB0jE,EAAQ1jE,UAAU1L,KAAKykH,EAAMl4G,KAAKC,eAAe8O,OAAOkqG,EAAQA,EAAOP,WACvE,MACJ,KAAK,EACD71C,EAAQ3d,UAAY+zD,EAAOvP,SAC3B,MACJ,QACIuP,EAAOE,SAAe,EAANt/B,GAGxB,CACA,OAAOhX,CACX,EAYAlvB,EAAUylE,gBAAkB,SAAyBH,GAGjD,OAFMA,aAAkBrB,IACpBqB,EAAS,IAAIrB,EAAQqB,IAClBtiH,KAAKoY,OAAOkqG,EAAQA,EAAOP,SACtC,EAUA/kE,EAAU0lE,OAAS,SAAgBx2C,GAC/B,GAAuB,iBAAZA,GAAoC,OAAZA,EAC/B,MAAO,kBACX,GAAqB,MAAjBA,EAAQvrD,OAAiBurD,EAAQ3mE,eAAe,SAAU,CAC1D,IAAKnG,MAAMC,QAAQ6sE,EAAQvrD,OACvB,MAAO,wBACX,IAAK,IAAIjkB,EAAI,EAAGA,EAAIwvE,EAAQvrD,MAAM9jB,SAAUH,EACxC,IAAK2kH,EAAMn/G,SAASgqE,EAAQvrD,MAAMjkB,IAC9B,MAAO,0BACnB,CACA,GAAsB,MAAlBwvE,EAAQn8D,QAAkBm8D,EAAQ3mE,eAAe,UAAW,CAC5D,IAAKnG,MAAMC,QAAQ6sE,EAAQn8D,QACvB,MAAO,yBACX,IAASrT,EAAI,EAAGA,EAAIwvE,EAAQn8D,OAAOlT,SAAUH,EACzC,IAAK2kH,EAAMn/G,SAASgqE,EAAQn8D,OAAOrT,IAC/B,MAAO,2BACnB,CACA,GAAoB,MAAhBwvE,EAAQjwE,MAAgBiwE,EAAQ3mE,eAAe,UAC1C87G,EAAMn/G,SAASgqE,EAAQjwE,MACxB,MAAO,wBACf,GAAsB,MAAlBiwE,EAAQjvB,QAAkBivB,EAAQ3mE,eAAe,YAC5C87G,EAAMn/G,SAASgqE,EAAQjvB,QACxB,MAAO,0BACf,GAAsB,MAAlBivB,EAAQzmB,QAAkBymB,EAAQ3mE,eAAe,YAC5C87G,EAAMn/G,SAASgqE,EAAQzmB,QACxB,MAAO,0BACf,GAAyB,MAArBymB,EAAQ1jE,WAAqB0jE,EAAQ3mE,eAAe,aAAc,CAClE,IAAKnG,MAAMC,QAAQ6sE,EAAQ1jE,WACvB,MAAO,4BACX,IAAS9L,EAAI,EAAGA,EAAIwvE,EAAQ1jE,UAAU3L,SAAUH,EAAG,CAC/C,IAAI2sC,EAAQk4E,EAAMl4G,KAAKC,eAAeo5G,OAAOx2C,EAAQ1jE,UAAU9L,IAC/D,GAAI2sC,EACA,MAAO,aAAeA,CAC9B,CACJ,CACA,OAAyB,MAArB6iC,EAAQ3d,WAAqB2d,EAAQ3mE,eAAe,eAC/C87G,EAAMn/G,SAASgqE,EAAQ3d,WACjB,6BACR,IACX,EAUAvR,EAAU2lE,WAAa,SAAoBC,GACvC,GAAIA,aAAkBrB,EAAMl4G,KAAK2zC,UAC7B,OAAO4lE,EACX,IAAI12C,EAAU,IAAIq1C,EAAMl4G,KAAK2zC,UAC7B,GAAI4lE,EAAOjiG,MAAO,CACd,IAAKvhB,MAAMC,QAAQujH,EAAOjiG,OACtB,MAAMrkB,UAAU,yCACpB4vE,EAAQvrD,MAAQ,GAChB,IAAK,IAAIjkB,EAAI,EAAGA,EAAIkmH,EAAOjiG,MAAM9jB,SAAUH,EACvCwvE,EAAQvrD,MAAMjkB,GAAK60F,OAAOqxB,EAAOjiG,MAAMjkB,GAC/C,CACA,GAAIkmH,EAAO7yG,OAAQ,CACf,IAAK3Q,MAAMC,QAAQujH,EAAO7yG,QACtB,MAAMzT,UAAU,0CAEpB,IADA4vE,EAAQn8D,OAAS,GACRrT,EAAI,EAAGA,EAAIkmH,EAAO7yG,OAAOlT,SAAUH,EACxCwvE,EAAQn8D,OAAOrT,GAAK60F,OAAOqxB,EAAO7yG,OAAOrT,GACjD,CAOA,GANmB,MAAfkmH,EAAO3mH,OACPiwE,EAAQjwE,KAAOs1F,OAAOqxB,EAAO3mH,OACZ,MAAjB2mH,EAAO3lE,SACPivB,EAAQjvB,OAASs0C,OAAOqxB,EAAO3lE,SACd,MAAjB2lE,EAAOn9D,SACPymB,EAAQzmB,OAAS8rC,OAAOqxB,EAAOn9D,SAC/Bm9D,EAAOp6G,UAAW,CAClB,IAAKpJ,MAAMC,QAAQujH,EAAOp6G,WACtB,MAAMlM,UAAU,6CAEpB,IADA4vE,EAAQ1jE,UAAY,GACX9L,EAAI,EAAGA,EAAIkmH,EAAOp6G,UAAU3L,SAAUH,EAAG,CAC9C,GAAmC,iBAAxBkmH,EAAOp6G,UAAU9L,GACxB,MAAMJ,UAAU,8CACpB4vE,EAAQ1jE,UAAU9L,GAAK6kH,EAAMl4G,KAAKC,eAAeq5G,WAAWC,EAAOp6G,UAAU9L,GACjF,CACJ,CAGA,OAFwB,MAApBkmH,EAAOr0D,YACP2d,EAAQ3d,UAAYgjC,OAAOqxB,EAAOr0D,YAC/B2d,CACX,EAWAlvB,EAAU8lE,SAAW,SAAkB52C,EAAS/rE,GACvCA,IACDA,EAAU,CAAC,GACf,IAAIyiH,EAAS,CAAC,EAYd,IAXIziH,EAAQ4iH,QAAU5iH,EAAQ6iH,YAC1BJ,EAAOjiG,MAAQ,GACfiiG,EAAO7yG,OAAS,GAChB6yG,EAAOp6G,UAAY,IAEnBrI,EAAQ6iH,WACRJ,EAAO3mH,KAAO,GACd2mH,EAAO3lE,OAAS,GAChB2lE,EAAOr0D,UAAY,GACnBq0D,EAAOn9D,OAAS,IAEhBymB,EAAQvrD,OAASurD,EAAQvrD,MAAM9jB,OAAQ,CACvC+lH,EAAOjiG,MAAQ,GACf,IAAK,IAAI/c,EAAI,EAAGA,EAAIsoE,EAAQvrD,MAAM9jB,SAAU+G,EACxCg/G,EAAOjiG,MAAM/c,GAAKsoE,EAAQvrD,MAAM/c,EACxC,CACA,GAAIsoE,EAAQn8D,QAAUm8D,EAAQn8D,OAAOlT,OAEjC,IADA+lH,EAAO7yG,OAAS,GACPnM,EAAI,EAAGA,EAAIsoE,EAAQn8D,OAAOlT,SAAU+G,EACzCg/G,EAAO7yG,OAAOnM,GAAKsoE,EAAQn8D,OAAOnM,GAM1C,GAJoB,MAAhBsoE,EAAQjwE,MAAgBiwE,EAAQ3mE,eAAe,UAC/Cq9G,EAAO3mH,KAAOiwE,EAAQjwE,MACJ,MAAlBiwE,EAAQjvB,QAAkBivB,EAAQ3mE,eAAe,YACjDq9G,EAAO3lE,OAASivB,EAAQjvB,QACxBivB,EAAQ1jE,WAAa0jE,EAAQ1jE,UAAU3L,OAEvC,IADA+lH,EAAOp6G,UAAY,GACV5E,EAAI,EAAGA,EAAIsoE,EAAQ1jE,UAAU3L,SAAU+G,EAC5Cg/G,EAAOp6G,UAAU5E,GAAK29G,EAAMl4G,KAAKC,eAAew5G,SAAS52C,EAAQ1jE,UAAU5E,GAAIzD,GAMvF,OAJyB,MAArB+rE,EAAQ3d,WAAqB2d,EAAQ3mE,eAAe,eACpDq9G,EAAOr0D,UAAY2d,EAAQ3d,WACT,MAAlB2d,EAAQzmB,QAAkBymB,EAAQ3mE,eAAe,YACjDq9G,EAAOn9D,OAASymB,EAAQzmB,QACrBm9D,CACX,EASA5lE,EAAU2oD,UAAU4U,OAAS,WACzB,OAAOv6G,KAAK1B,YAAYwkH,SAAS9iH,KAAMghH,EAAUM,KAAKgC,cAC1D,EAEOtmE,CACV,CArXgB,GAuXjB3zC,EAAKg8C,WAAa,WAyBd,SAASA,EAAWq8D,GAGhB,GAFA1hH,KAAKwlD,YAAc,GACnBxlD,KAAKyjH,cAAgB,GACjB/B,EACA,IAAK,IAAIvnG,EAAO7c,OAAO6c,KAAKunG,GAAahlH,EAAI,EAAGA,EAAIyd,EAAKtd,SAAUH,EACpC,MAAvBglH,EAAWvnG,EAAKzd,MAChBsD,KAAKma,EAAKzd,IAAMglH,EAAWvnG,EAAKzd,IAChD,CAsZA,OA9YA2oD,EAAWsgD,UAAUrgD,UAAY+7D,EAAM55C,KAAO45C,EAAM55C,KAAKzD,SAAS,EAAE,GAAE,GAAS,EAQ/E3e,EAAWsgD,UAAUngD,YAAc67D,EAAMQ,WAQzCx8D,EAAWsgD,UAAUlsC,aAAe,GAQpCpU,EAAWsgD,UAAUjsC,gBAAkB,GAQvCrU,EAAWsgD,UAAUlgD,OAAS,GAQ9BJ,EAAWsgD,UAAUhsC,aAAe0nD,EAAM55C,KAAO45C,EAAM55C,KAAKzD,SAAS,EAAE,GAAE,GAAS,EAQlF3e,EAAWsgD,UAAUp3C,UAAY,GAQjClJ,EAAWsgD,UAAUt5D,MAAQ,KAQ7BgZ,EAAWsgD,UAAU8d,cAAgBpC,EAAMQ,WAU3Cx8D,EAAWxB,OAAS,SAAgB69D,GAChC,OAAO,IAAIr8D,EAAWq8D,EAC1B,EAWAr8D,EAAWltC,OAAS,SAAgB+zD,EAAS41C,GAiBzC,GAhBKA,IACDA,EAASX,EAAQt9D,UACI,MAArBqoB,EAAQ5mB,WAAqB4mB,EAAQ3mE,eAAe,cACpDu8G,EAAOC,OAA8B,GAAGE,MAAM/1C,EAAQ5mB,WAC9B,MAAxB4mB,EAAQzS,cAAwByS,EAAQ3mE,eAAe,iBACvDu8G,EAAOC,OAA8B,IAAIhP,OAAO7mC,EAAQzS,cAC7B,MAA3ByS,EAAQxS,iBAA2BwS,EAAQ3mE,eAAe,oBAC1Du8G,EAAOC,OAA8B,IAAIhP,OAAO7mC,EAAQxS,iBACtC,MAAlBwS,EAAQzmB,QAAkBymB,EAAQ3mE,eAAe,WACjDu8G,EAAOC,OAA8B,IAAIhP,OAAO7mC,EAAQzmB,QAChC,MAAxBymB,EAAQvS,cAAwBuS,EAAQ3mE,eAAe,iBACvDu8G,EAAOC,OAA8B,IAAIE,MAAM/1C,EAAQvS,cAClC,MAArBuS,EAAQ3d,WAAqB2d,EAAQ3mE,eAAe,cACpDu8G,EAAOC,OAA8B,IAAIhP,OAAO7mC,EAAQ3d,WACvC,MAAjB2d,EAAQ7/B,OAAiB6/B,EAAQ3mE,eAAe,UAChDg8G,EAAMl4G,KAAK40C,WAAW9lC,OAAO+zD,EAAQ7/B,MAAOy1E,EAAOC,OAA8B,IAAIG,QAAQC,SACtE,MAAvBj2C,EAAQ1mB,aAAuB0mB,EAAQ1mB,YAAY3oD,OACnD,IAAK,IAAIH,EAAI,EAAGA,EAAIwvE,EAAQ1mB,YAAY3oD,SAAUH,EAC9C6kH,EAAMl4G,KAAKq6G,mBAAmBvrG,OAAO+zD,EAAQ1mB,YAAY9oD,GAAIolH,EAAOC,OAA8B,IAAIG,QAAQC,SACtH,GAA6B,MAAzBj2C,EAAQu3C,eAAyBv3C,EAAQu3C,cAAc5mH,OACvD,IAASH,EAAI,EAAGA,EAAIwvE,EAAQu3C,cAAc5mH,SAAUH,EAChD6kH,EAAMl4G,KAAKs6G,uBAAuBxrG,OAAO+zD,EAAQu3C,cAAc/mH,GAAIolH,EAAOC,OAA+B,KAAKG,QAAQC,SAC9H,OAAOL,CACX,EAWAz8D,EAAWg9D,gBAAkB,SAAyBn2C,EAAS41C,GAC3D,OAAO9hH,KAAKmY,OAAO+zD,EAAS41C,GAAQK,QACxC,EAaA98D,EAAWjtC,OAAS,SAAgBkqG,EAAQzlH,GAClCylH,aAAkBrB,IACpBqB,EAASrB,EAAQp9D,OAAOy+D,IAE5B,IADA,IAAIpgF,OAAiB1lC,IAAXK,EAAuBylH,EAAOhyE,IAAMgyE,EAAO14C,IAAM/sE,EAAQqvE,EAAU,IAAIq1C,EAAMl4G,KAAKg8C,WACrFi9D,EAAO14C,IAAM1nC,GAAK,CACrB,IAAIghD,EAAMo/B,EAAOP,SACjB,OAAQ7+B,IAAQ,GAChB,KAAK,EACDhX,EAAQ5mB,UAAYg9D,EAAOL,QAC3B,MACJ,KAAK,EACK/1C,EAAQ1mB,aAAe0mB,EAAQ1mB,YAAY3oD,SAC7CqvE,EAAQ1mB,YAAc,IAC1B0mB,EAAQ1mB,YAAY1oD,KAAKykH,EAAMl4G,KAAKq6G,mBAAmBtrG,OAAOkqG,EAAQA,EAAOP,WAC7E,MACJ,KAAK,EACD71C,EAAQzS,aAAe6oD,EAAOvP,SAC9B,MACJ,KAAK,EACD7mC,EAAQxS,gBAAkB4oD,EAAOvP,SACjC,MACJ,KAAK,EACD7mC,EAAQzmB,OAAS68D,EAAOvP,SACxB,MACJ,KAAK,EACD7mC,EAAQvS,aAAe2oD,EAAOL,QAC9B,MACJ,KAAK,EACD/1C,EAAQ3d,UAAY+zD,EAAOvP,SAC3B,MACJ,KAAK,EACD7mC,EAAQ7/B,MAAQk1E,EAAMl4G,KAAK40C,WAAW7lC,OAAOkqG,EAAQA,EAAOP,UAC5D,MACJ,KAAK,GACK71C,EAAQu3C,eAAiBv3C,EAAQu3C,cAAc5mH,SACjDqvE,EAAQu3C,cAAgB,IAC5Bv3C,EAAQu3C,cAAc3mH,KAAKykH,EAAMl4G,KAAKs6G,uBAAuBvrG,OAAOkqG,EAAQA,EAAOP,WACnF,MACJ,QACIO,EAAOE,SAAe,EAANt/B,GAGxB,CACA,OAAOhX,CACX,EAYA7mB,EAAWo9D,gBAAkB,SAAyBH,GAGlD,OAFMA,aAAkBrB,IACpBqB,EAAS,IAAIrB,EAAQqB,IAClBtiH,KAAKoY,OAAOkqG,EAAQA,EAAOP,SACtC,EAUA18D,EAAWq9D,OAAS,SAAgBx2C,GAChC,GAAuB,iBAAZA,GAAoC,OAAZA,EAC/B,MAAO,kBACX,GAAyB,MAArBA,EAAQ5mB,WAAqB4mB,EAAQ3mE,eAAe,gBAC/C87G,EAAMz5G,UAAUskE,EAAQ5mB,YAAgB4mB,EAAQ5mB,WAAa+7D,EAAMz5G,UAAUskE,EAAQ5mB,UAAUqiB,MAAQ05C,EAAMz5G,UAAUskE,EAAQ5mB,UAAUsiB,OAC1I,MAAO,mCACf,GAA2B,MAAvBsE,EAAQ1mB,aAAuB0mB,EAAQ3mE,eAAe,eAAgB,CACtE,IAAKnG,MAAMC,QAAQ6sE,EAAQ1mB,aACvB,MAAO,8BACX,IAAK,IAAI9oD,EAAI,EAAGA,EAAIwvE,EAAQ1mB,YAAY3oD,SAAUH,EAE9C,GADI2sC,EAAQk4E,EAAMl4G,KAAKq6G,mBAAmBhB,OAAOx2C,EAAQ1mB,YAAY9oD,IAEjE,MAAO,eAAiB2sC,CAEpC,CACA,GAA4B,MAAxB6iC,EAAQzS,cAAwByS,EAAQ3mE,eAAe,kBAClD87G,EAAMn/G,SAASgqE,EAAQzS,cACxB,MAAO,gCACf,GAA+B,MAA3ByS,EAAQxS,iBAA2BwS,EAAQ3mE,eAAe,qBACrD87G,EAAMn/G,SAASgqE,EAAQxS,iBACxB,MAAO,mCACf,GAAsB,MAAlBwS,EAAQzmB,QAAkBymB,EAAQ3mE,eAAe,YAC5C87G,EAAMn/G,SAASgqE,EAAQzmB,QACxB,MAAO,0BACf,GAA4B,MAAxBymB,EAAQvS,cAAwBuS,EAAQ3mE,eAAe,mBAClD87G,EAAMz5G,UAAUskE,EAAQvS,eAAmBuS,EAAQvS,cAAgB0nD,EAAMz5G,UAAUskE,EAAQvS,aAAagO,MAAQ05C,EAAMz5G,UAAUskE,EAAQvS,aAAaiO,OACtJ,MAAO,sCACf,GAAyB,MAArBsE,EAAQ3d,WAAqB2d,EAAQ3mE,eAAe,eAC/C87G,EAAMn/G,SAASgqE,EAAQ3d,WACxB,MAAO,6BACf,GAAqB,MAAjB2d,EAAQ7/B,OAAiB6/B,EAAQ3mE,eAAe,WAC5C8jC,EAAQk4E,EAAMl4G,KAAK40C,WAAWykE,OAAOx2C,EAAQ7/B,QAE7C,MAAO,SAAWhD,EAE1B,GAA6B,MAAzB6iC,EAAQu3C,eAAyBv3C,EAAQ3mE,eAAe,iBAAkB,CAC1E,IAAKnG,MAAMC,QAAQ6sE,EAAQu3C,eACvB,MAAO,gCACX,IAAS/mH,EAAI,EAAGA,EAAIwvE,EAAQu3C,cAAc5mH,SAAUH,EAAG,CACnD,IAAI2sC,EACJ,GADIA,EAAQk4E,EAAMl4G,KAAKs6G,uBAAuBjB,OAAOx2C,EAAQu3C,cAAc/mH,IAEvE,MAAO,iBAAmB2sC,CAClC,CACJ,CACA,OAAO,IACX,EAUAgc,EAAWs9D,WAAa,SAAoBC,GACxC,GAAIA,aAAkBrB,EAAMl4G,KAAKg8C,WAC7B,OAAOu9D,EACX,IAAI12C,EAAU,IAAIq1C,EAAMl4G,KAAKg8C,WAU7B,GATwB,MAApBu9D,EAAOt9D,YACH+7D,EAAM55C,MACLyE,EAAQ5mB,UAAY+7D,EAAM55C,KAAKC,UAAUk7C,EAAOt9D,YAAYkiB,UAAW,EACvC,iBAArBo7C,EAAOt9D,UACnB4mB,EAAQ5mB,UAAYmB,SAASm8D,EAAOt9D,UAAW,IACd,iBAArBs9D,EAAOt9D,UACnB4mB,EAAQ5mB,UAAYs9D,EAAOt9D,UACM,iBAArBs9D,EAAOt9D,YACnB4mB,EAAQ5mB,UAAY,IAAI+7D,EAAMwB,SAASD,EAAOt9D,UAAUqiB,MAAQ,EAAGi7C,EAAOt9D,UAAUsiB,OAAS,GAAGrE,aACpGq/C,EAAOp9D,YAAa,CACpB,IAAKpmD,MAAMC,QAAQujH,EAAOp9D,aACtB,MAAMlpD,UAAU,gDACpB4vE,EAAQ1mB,YAAc,GACtB,IAAK,IAAI9oD,EAAI,EAAGA,EAAIkmH,EAAOp9D,YAAY3oD,SAAUH,EAAG,CAChD,GAAqC,iBAA1BkmH,EAAOp9D,YAAY9oD,GAC1B,MAAMJ,UAAU,iDACpB4vE,EAAQ1mB,YAAY9oD,GAAK6kH,EAAMl4G,KAAKq6G,mBAAmBf,WAAWC,EAAOp9D,YAAY9oD,GACzF,CACJ,CAkBA,GAjB2B,MAAvBkmH,EAAOnpD,eACPyS,EAAQzS,aAAe83B,OAAOqxB,EAAOnpD,eACX,MAA1BmpD,EAAOlpD,kBACPwS,EAAQxS,gBAAkB63B,OAAOqxB,EAAOlpD,kBACvB,MAAjBkpD,EAAOn9D,SACPymB,EAAQzmB,OAAS8rC,OAAOqxB,EAAOn9D,SACR,MAAvBm9D,EAAOjpD,eACH0nD,EAAM55C,MACLyE,EAAQvS,aAAe0nD,EAAM55C,KAAKC,UAAUk7C,EAAOjpD,eAAe6N,UAAW,EAC1C,iBAAxBo7C,EAAOjpD,aACnBuS,EAAQvS,aAAelT,SAASm8D,EAAOjpD,aAAc,IACjB,iBAAxBipD,EAAOjpD,aACnBuS,EAAQvS,aAAeipD,EAAOjpD,aACM,iBAAxBipD,EAAOjpD,eACnBuS,EAAQvS,aAAe,IAAI0nD,EAAMwB,SAASD,EAAOjpD,aAAagO,MAAQ,EAAGi7C,EAAOjpD,aAAaiO,OAAS,GAAGrE,aACzF,MAApBq/C,EAAOr0D,YACP2d,EAAQ3d,UAAYgjC,OAAOqxB,EAAOr0D,YAClB,MAAhBq0D,EAAOv2E,MAAe,CACtB,GAA4B,iBAAjBu2E,EAAOv2E,MACd,MAAM/vC,UAAU,2CACpB4vE,EAAQ7/B,MAAQk1E,EAAMl4G,KAAK40C,WAAW0kE,WAAWC,EAAOv2E,MAC5D,CACA,GAAIu2E,EAAOa,cAAe,CACtB,IAAKrkH,MAAMC,QAAQujH,EAAOa,eACtB,MAAMnnH,UAAU,kDAEpB,IADA4vE,EAAQu3C,cAAgB,GACf/mH,EAAI,EAAGA,EAAIkmH,EAAOa,cAAc5mH,SAAUH,EAAG,CAClD,GAAuC,iBAA5BkmH,EAAOa,cAAc/mH,GAC5B,MAAMJ,UAAU,mDACpB4vE,EAAQu3C,cAAc/mH,GAAK6kH,EAAMl4G,KAAKs6G,uBAAuBhB,WAAWC,EAAOa,cAAc/mH,GACjG,CACJ,CACA,OAAOwvE,CACX,EAWA7mB,EAAWy9D,SAAW,SAAkB52C,EAAS/rE,GACxCA,IACDA,EAAU,CAAC,GACf,IAAIyiH,EAAS,CAAC,EAKd,IAJIziH,EAAQ4iH,QAAU5iH,EAAQ6iH,YAC1BJ,EAAOp9D,YAAc,GACrBo9D,EAAOa,cAAgB,IAEvBtjH,EAAQ6iH,SAAU,CAClB,GAAI3B,EAAM55C,KAAM,CACZ,IAAIw7C,EAAO,IAAI5B,EAAM55C,KAAK,EAAG,GAAG,GAChCm7C,EAAOt9D,UAAYnlD,EAAQ+iH,QAAU3xB,OAAS0xB,EAAKltE,WAAa51C,EAAQ+iH,QAAUtjH,OAASqjH,EAAK1/C,WAAa0/C,CACjH,MACIL,EAAOt9D,UAAYnlD,EAAQ+iH,QAAU3xB,OAAS,IAAM,EACxDqxB,EAAOnpD,aAAe,GACtBmpD,EAAOlpD,gBAAkB,GACzBkpD,EAAOn9D,OAAS,GACZ47D,EAAM55C,MACFw7C,EAAO,IAAI5B,EAAM55C,KAAK,EAAG,GAAG,GAChCm7C,EAAOjpD,aAAex5D,EAAQ+iH,QAAU3xB,OAAS0xB,EAAKltE,WAAa51C,EAAQ+iH,QAAUtjH,OAASqjH,EAAK1/C,WAAa0/C,GAEhHL,EAAOjpD,aAAex5D,EAAQ+iH,QAAU3xB,OAAS,IAAM,EAC3DqxB,EAAOr0D,UAAY,GACnBq0D,EAAOv2E,MAAQ,IACnB,CAqBA,GApByB,MAArB6/B,EAAQ5mB,WAAqB4mB,EAAQ3mE,eAAe,eACnB,iBAAtB2mE,EAAQ5mB,UACfs9D,EAAOt9D,UAAYnlD,EAAQ+iH,QAAU3xB,OAASA,OAAOrlB,EAAQ5mB,WAAa4mB,EAAQ5mB,UAElFs9D,EAAOt9D,UAAYnlD,EAAQ+iH,QAAU3xB,OAAS8vB,EAAM55C,KAAKk+B,UAAU5vD,SAASvwC,KAAK0mE,EAAQ5mB,WAAanlD,EAAQ+iH,QAAUtjH,OAAS,IAAIyhH,EAAMwB,SAAS32C,EAAQ5mB,UAAUqiB,MAAQ,EAAGuE,EAAQ5mB,UAAUsiB,OAAS,GAAGrE,WAAa2I,EAAQ5mB,WAChN,MAAxB4mB,EAAQzS,cAAwByS,EAAQ3mE,eAAe,kBACvDq9G,EAAOnpD,aAAeyS,EAAQzS,cACH,MAA3ByS,EAAQxS,iBAA2BwS,EAAQ3mE,eAAe,qBAC1Dq9G,EAAOlpD,gBAAkBwS,EAAQxS,iBACf,MAAlBwS,EAAQzmB,QAAkBymB,EAAQ3mE,eAAe,YACjDq9G,EAAOn9D,OAASymB,EAAQzmB,QACA,MAAxBymB,EAAQvS,cAAwBuS,EAAQ3mE,eAAe,kBACnB,iBAAzB2mE,EAAQvS,aACfipD,EAAOjpD,aAAex5D,EAAQ+iH,QAAU3xB,OAASA,OAAOrlB,EAAQvS,cAAgBuS,EAAQvS,aAExFipD,EAAOjpD,aAAex5D,EAAQ+iH,QAAU3xB,OAAS8vB,EAAM55C,KAAKk+B,UAAU5vD,SAASvwC,KAAK0mE,EAAQvS,cAAgBx5D,EAAQ+iH,QAAUtjH,OAAS,IAAIyhH,EAAMwB,SAAS32C,EAAQvS,aAAagO,MAAQ,EAAGuE,EAAQvS,aAAaiO,OAAS,GAAGrE,WAAa2I,EAAQvS,cAC/N,MAArBuS,EAAQ3d,WAAqB2d,EAAQ3mE,eAAe,eACpDq9G,EAAOr0D,UAAY2d,EAAQ3d,WACV,MAAjB2d,EAAQ7/B,OAAiB6/B,EAAQ3mE,eAAe,WAChDq9G,EAAOv2E,MAAQk1E,EAAMl4G,KAAK40C,WAAW6kE,SAAS52C,EAAQ7/B,MAAOlsC,IAC7D+rE,EAAQ1mB,aAAe0mB,EAAQ1mB,YAAY3oD,OAAQ,CACnD+lH,EAAOp9D,YAAc,GACrB,IAAK,IAAI5hD,EAAI,EAAGA,EAAIsoE,EAAQ1mB,YAAY3oD,SAAU+G,EAC9Cg/G,EAAOp9D,YAAY5hD,GAAK29G,EAAMl4G,KAAKq6G,mBAAmBZ,SAAS52C,EAAQ1mB,YAAY5hD,GAAIzD,EAC/F,CACA,GAAI+rE,EAAQu3C,eAAiBv3C,EAAQu3C,cAAc5mH,OAE/C,IADA+lH,EAAOa,cAAgB,GACd7/G,EAAI,EAAGA,EAAIsoE,EAAQu3C,cAAc5mH,SAAU+G,EAChDg/G,EAAOa,cAAc7/G,GAAK29G,EAAMl4G,KAAKs6G,uBAAuBb,SAAS52C,EAAQu3C,cAAc7/G,GAAIzD,GAEvG,OAAOyiH,CACX,EASAv9D,EAAWsgD,UAAU4U,OAAS,WAC1B,OAAOv6G,KAAK1B,YAAYwkH,SAAS9iH,KAAMghH,EAAUM,KAAKgC,cAC1D,EAEOj+D,CACV,CAvbiB,GAyblBh8C,EAAKs6G,uBAAyB,WAkB1B,SAASA,EAAuBjC,GAC5B,GAAIA,EACA,IAAK,IAAIvnG,EAAO7c,OAAO6c,KAAKunG,GAAahlH,EAAI,EAAGA,EAAIyd,EAAKtd,SAAUH,EACpC,MAAvBglH,EAAWvnG,EAAKzd,MAChBsD,KAAKma,EAAKzd,IAAMglH,EAAWvnG,EAAKzd,IAChD,CAwLA,OAhLAinH,EAAuBhe,UAAUrgG,IAAM,GAQvCq+G,EAAuBhe,UAAUtoG,MAAQ,GAUzCsmH,EAAuB9/D,OAAS,SAAgB69D,GAC5C,OAAO,IAAIiC,EAAuBjC,EACtC,EAWAiC,EAAuBxrG,OAAS,SAAgB+zD,EAAS41C,GAOrD,OANKA,IACDA,EAASX,EAAQt9D,UACF,MAAfqoB,EAAQ5mE,KAAe4mE,EAAQ3mE,eAAe,QAC9Cu8G,EAAOC,OAA8B,IAAIhP,OAAO7mC,EAAQ5mE,KACvC,MAAjB4mE,EAAQ7uE,OAAiB6uE,EAAQ3mE,eAAe,UAChDu8G,EAAOC,OAA8B,IAAIhP,OAAO7mC,EAAQ7uE,OACrDykH,CACX,EAWA6B,EAAuBtB,gBAAkB,SAAyBn2C,EAAS41C,GACvE,OAAO9hH,KAAKmY,OAAO+zD,EAAS41C,GAAQK,QACxC,EAaAwB,EAAuBvrG,OAAS,SAAgBkqG,EAAQzlH,GAC9CylH,aAAkBrB,IACpBqB,EAASrB,EAAQp9D,OAAOy+D,IAE5B,IADA,IAAIpgF,OAAiB1lC,IAAXK,EAAuBylH,EAAOhyE,IAAMgyE,EAAO14C,IAAM/sE,EAAQqvE,EAAU,IAAIq1C,EAAMl4G,KAAKs6G,uBACrFrB,EAAO14C,IAAM1nC,GAAK,CACrB,IAAIghD,EAAMo/B,EAAOP,SACjB,OAAQ7+B,IAAQ,GAChB,KAAK,EACDhX,EAAQ5mE,IAAMg9G,EAAOvP,SACrB,MACJ,KAAK,EACD7mC,EAAQ7uE,MAAQilH,EAAOvP,SACvB,MACJ,QACIuP,EAAOE,SAAe,EAANt/B,GAGxB,CACA,OAAOhX,CACX,EAYAy3C,EAAuBlB,gBAAkB,SAAyBH,GAG9D,OAFMA,aAAkBrB,IACpBqB,EAAS,IAAIrB,EAAQqB,IAClBtiH,KAAKoY,OAAOkqG,EAAQA,EAAOP,SACtC,EAUA4B,EAAuBjB,OAAS,SAAgBx2C,GAC5C,MAAuB,iBAAZA,GAAoC,OAAZA,EACxB,kBACQ,MAAfA,EAAQ5mE,KAAe4mE,EAAQ3mE,eAAe,SACzC87G,EAAMn/G,SAASgqE,EAAQ5mE,KACjB,uBACM,MAAjB4mE,EAAQ7uE,OAAiB6uE,EAAQ3mE,eAAe,WAC3C87G,EAAMn/G,SAASgqE,EAAQ7uE,OACjB,yBACR,IACX,EAUAsmH,EAAuBhB,WAAa,SAAoBC,GACpD,GAAIA,aAAkBrB,EAAMl4G,KAAKs6G,uBAC7B,OAAOf,EACX,IAAI12C,EAAU,IAAIq1C,EAAMl4G,KAAKs6G,uBAK7B,OAJkB,MAAdf,EAAOt9G,MACP4mE,EAAQ5mE,IAAMisF,OAAOqxB,EAAOt9G,MACZ,MAAhBs9G,EAAOvlH,QACP6uE,EAAQ7uE,MAAQk0F,OAAOqxB,EAAOvlH,QAC3B6uE,CACX,EAWAy3C,EAAuBb,SAAW,SAAkB52C,EAAS/rE,GACpDA,IACDA,EAAU,CAAC,GACf,IAAIyiH,EAAS,CAAC,EASd,OARIziH,EAAQ6iH,WACRJ,EAAOt9G,IAAM,GACbs9G,EAAOvlH,MAAQ,IAEA,MAAf6uE,EAAQ5mE,KAAe4mE,EAAQ3mE,eAAe,SAC9Cq9G,EAAOt9G,IAAM4mE,EAAQ5mE,KACJ,MAAjB4mE,EAAQ7uE,OAAiB6uE,EAAQ3mE,eAAe,WAChDq9G,EAAOvlH,MAAQ6uE,EAAQ7uE,OACpBulH,CACX,EASAe,EAAuBhe,UAAU4U,OAAS,WACtC,OAAOv6G,KAAK1B,YAAYwkH,SAAS9iH,KAAMghH,EAAUM,KAAKgC,cAC1D,EAEOK,CACV,CAhN6B,GAkN9Bt6G,EAAKu6G,iBAAmB,WAkBpB,SAASA,EAAiBlC,GAEtB,GADA1hH,KAAK6jH,0BAA4B,GAC7BnC,EACA,IAAK,IAAIvnG,EAAO7c,OAAO6c,KAAKunG,GAAahlH,EAAI,EAAGA,EAAIyd,EAAKtd,SAAUH,EACpC,MAAvBglH,EAAWvnG,EAAKzd,MAChBsD,KAAKma,EAAKzd,IAAMglH,EAAWvnG,EAAKzd,IAChD,CA4MA,OApMAknH,EAAiBje,UAAUme,WAAa,GAQxCF,EAAiBje,UAAUke,0BAA4BxC,EAAMQ,WAU7D+B,EAAiB//D,OAAS,SAAgB69D,GACtC,OAAO,IAAIkC,EAAiBlC,EAChC,EAWAkC,EAAiBzrG,OAAS,SAAgB+zD,EAAS41C,GAK/C,GAJKA,IACDA,EAASX,EAAQt9D,UACK,MAAtBqoB,EAAQ43C,YAAsB53C,EAAQ3mE,eAAe,eACrDu8G,EAAOC,OAA8B,IAAIhP,OAAO7mC,EAAQ43C,YACnB,MAArC53C,EAAQ23C,2BAAqC33C,EAAQ23C,0BAA0BhnH,OAC/E,IAAK,IAAIH,EAAI,EAAGA,EAAIwvE,EAAQ23C,0BAA0BhnH,SAAUH,EAC5D6kH,EAAMl4G,KAAKs6G,uBAAuBxrG,OAAO+zD,EAAQ23C,0BAA0BnnH,GAAIolH,EAAOC,OAA8B,IAAIG,QAAQC,SACxI,OAAOL,CACX,EAWA8B,EAAiBvB,gBAAkB,SAAyBn2C,EAAS41C,GACjE,OAAO9hH,KAAKmY,OAAO+zD,EAAS41C,GAAQK,QACxC,EAaAyB,EAAiBxrG,OAAS,SAAgBkqG,EAAQzlH,GACxCylH,aAAkBrB,IACpBqB,EAASrB,EAAQp9D,OAAOy+D,IAE5B,IADA,IAAIpgF,OAAiB1lC,IAAXK,EAAuBylH,EAAOhyE,IAAMgyE,EAAO14C,IAAM/sE,EAAQqvE,EAAU,IAAIq1C,EAAMl4G,KAAKu6G,iBACrFtB,EAAO14C,IAAM1nC,GAAK,CACrB,IAAIghD,EAAMo/B,EAAOP,SACjB,OAAQ7+B,IAAQ,GAChB,KAAK,EACDhX,EAAQ43C,WAAaxB,EAAOvP,SAC5B,MACJ,KAAK,EACK7mC,EAAQ23C,2BAA6B33C,EAAQ23C,0BAA0BhnH,SACzEqvE,EAAQ23C,0BAA4B,IACxC33C,EAAQ23C,0BAA0B/mH,KAAKykH,EAAMl4G,KAAKs6G,uBAAuBvrG,OAAOkqG,EAAQA,EAAOP,WAC/F,MACJ,QACIO,EAAOE,SAAe,EAANt/B,GAGxB,CACA,OAAOhX,CACX,EAYA03C,EAAiBnB,gBAAkB,SAAyBH,GAGxD,OAFMA,aAAkBrB,IACpBqB,EAAS,IAAIrB,EAAQqB,IAClBtiH,KAAKoY,OAAOkqG,EAAQA,EAAOP,SACtC,EAUA6B,EAAiBlB,OAAS,SAAgBx2C,GACtC,GAAuB,iBAAZA,GAAoC,OAAZA,EAC/B,MAAO,kBACX,GAA0B,MAAtBA,EAAQ43C,YAAsB53C,EAAQ3mE,eAAe,gBAChD87G,EAAMn/G,SAASgqE,EAAQ43C,YACxB,MAAO,8BACf,GAAyC,MAArC53C,EAAQ23C,2BAAqC33C,EAAQ3mE,eAAe,6BAA8B,CAClG,IAAKnG,MAAMC,QAAQ6sE,EAAQ23C,2BACvB,MAAO,4CACX,IAAK,IAAInnH,EAAI,EAAGA,EAAIwvE,EAAQ23C,0BAA0BhnH,SAAUH,EAAG,CAC/D,IAAI2sC,EAAQk4E,EAAMl4G,KAAKs6G,uBAAuBjB,OAAOx2C,EAAQ23C,0BAA0BnnH,IACvF,GAAI2sC,EACA,MAAO,6BAA+BA,CAC9C,CACJ,CACA,OAAO,IACX,EAUAu6E,EAAiBjB,WAAa,SAAoBC,GAC9C,GAAIA,aAAkBrB,EAAMl4G,KAAKu6G,iBAC7B,OAAOhB,EACX,IAAI12C,EAAU,IAAIq1C,EAAMl4G,KAAKu6G,iBAG7B,GAFyB,MAArBhB,EAAOkB,aACP53C,EAAQ43C,WAAavyB,OAAOqxB,EAAOkB,aACnClB,EAAOiB,0BAA2B,CAClC,IAAKzkH,MAAMC,QAAQujH,EAAOiB,2BACtB,MAAMvnH,UAAU,oEACpB4vE,EAAQ23C,0BAA4B,GACpC,IAAK,IAAInnH,EAAI,EAAGA,EAAIkmH,EAAOiB,0BAA0BhnH,SAAUH,EAAG,CAC9D,GAAmD,iBAAxCkmH,EAAOiB,0BAA0BnnH,GACxC,MAAMJ,UAAU,qEACpB4vE,EAAQ23C,0BAA0BnnH,GAAK6kH,EAAMl4G,KAAKs6G,uBAAuBhB,WAAWC,EAAOiB,0BAA0BnnH,GACzH,CACJ,CACA,OAAOwvE,CACX,EAWA03C,EAAiBd,SAAW,SAAkB52C,EAAS/rE,GAC9CA,IACDA,EAAU,CAAC,GACf,IAAIyiH,EAAS,CAAC,EAOd,IANIziH,EAAQ4iH,QAAU5iH,EAAQ6iH,YAC1BJ,EAAOiB,0BAA4B,IACnC1jH,EAAQ6iH,WACRJ,EAAOkB,WAAa,IACE,MAAtB53C,EAAQ43C,YAAsB53C,EAAQ3mE,eAAe,gBACrDq9G,EAAOkB,WAAa53C,EAAQ43C,YAC5B53C,EAAQ23C,2BAA6B33C,EAAQ23C,0BAA0BhnH,OAAQ,CAC/E+lH,EAAOiB,0BAA4B,GACnC,IAAK,IAAIjgH,EAAI,EAAGA,EAAIsoE,EAAQ23C,0BAA0BhnH,SAAU+G,EAC5Dg/G,EAAOiB,0BAA0BjgH,GAAK29G,EAAMl4G,KAAKs6G,uBAAuBb,SAAS52C,EAAQ23C,0BAA0BjgH,GAAIzD,EAC/H,CACA,OAAOyiH,CACX,EASAgB,EAAiBje,UAAU4U,OAAS,WAChC,OAAOv6G,KAAK1B,YAAYwkH,SAAS9iH,KAAMghH,EAAUM,KAAKgC,cAC1D,EAEOM,CACV,CArOuB,GAuOxBv6G,EAAK40C,WAAa,WAwBd,SAASA,EAAWyjE,GAOhB,GANA1hH,KAAKoX,KAAO,GACZpX,KAAKw8C,YAAc,GACnBx8C,KAAK2gB,MAAQ,GACb3gB,KAAK+P,OAAS,GACd/P,KAAK08C,UAAY,GACjB18C,KAAK+jH,uBAAyB,GAC1BrC,EACA,IAAK,IAAIvnG,EAAO7c,OAAO6c,KAAKunG,GAAahlH,EAAI,EAAGA,EAAIyd,EAAKtd,SAAUH,EACpC,MAAvBglH,EAAWvnG,EAAKzd,MAChBsD,KAAKma,EAAKzd,IAAMglH,EAAWvnG,EAAKzd,IAChD,CAgbA,OAxaAuhD,EAAW0nD,UAAUvuF,KAAOiqG,EAAMQ,WAQlC5jE,EAAW0nD,UAAU1pG,KAAO,GAQ5BgiD,EAAW0nD,UAAUnpD,YAAc6kE,EAAMQ,WAQzC5jE,EAAW0nD,UAAUp3C,UAAY,GAQjCtQ,EAAW0nD,UAAUhlF,MAAQ0gG,EAAMQ,WAQnC5jE,EAAW0nD,UAAU51F,OAASsxG,EAAMQ,WAQpC5jE,EAAW0nD,UAAUjpD,UAAY2kE,EAAMQ,WAQvC5jE,EAAW0nD,UAAUoe,uBAAyB1C,EAAMQ,WAUpD5jE,EAAW4F,OAAS,SAAgB69D,GAChC,OAAO,IAAIzjE,EAAWyjE,EAC1B,EAWAzjE,EAAW9lC,OAAS,SAAgB+zD,EAAS41C,GAGzC,GAFKA,IACDA,EAASX,EAAQt9D,UACD,MAAhBqoB,EAAQ90D,MAAgB80D,EAAQ90D,KAAKva,OACrC,IAAK,IAAIH,EAAI,EAAGA,EAAIwvE,EAAQ90D,KAAKva,SAAUH,EACvC6kH,EAAMl4G,KAAK2zC,UAAU7kC,OAAO+zD,EAAQ90D,KAAK1a,GAAIolH,EAAOC,OAA8B,IAAIG,QAAQC,SAGtG,GAFoB,MAAhBj2C,EAAQjwE,MAAgBiwE,EAAQ3mE,eAAe,SAC/Cu8G,EAAOC,OAA8B,IAAIhP,OAAO7mC,EAAQjwE,MACjC,MAAvBiwE,EAAQ1vB,aAAuB0vB,EAAQ1vB,YAAY3/C,OACnD,IAASH,EAAI,EAAGA,EAAIwvE,EAAQ1vB,YAAY3/C,SAAUH,EAC9C6kH,EAAMl4G,KAAK64D,YAAY/pD,OAAO+zD,EAAQ1vB,YAAY9/C,GAAIolH,EAAOC,OAA8B,IAAIG,QAAQC,SAG/G,GAFyB,MAArBj2C,EAAQ3d,WAAqB2d,EAAQ3mE,eAAe,cACpDu8G,EAAOC,OAA+B,IAAIhP,OAAO7mC,EAAQ3d,WACxC,MAAjB2d,EAAQvrD,OAAiBurD,EAAQvrD,MAAM9jB,OACvC,IAASH,EAAI,EAAGA,EAAIwvE,EAAQvrD,MAAM9jB,SAAUH,EACxC6kH,EAAMl4G,KAAKk6G,eAAeprG,OAAO+zD,EAAQvrD,MAAMjkB,GAAIolH,EAAOC,OAA+B,IAAIG,QAAQC,SAC7G,GAAsB,MAAlBj2C,EAAQn8D,QAAkBm8D,EAAQn8D,OAAOlT,OACzC,IAASH,EAAI,EAAGA,EAAIwvE,EAAQn8D,OAAOlT,SAAUH,EACzC6kH,EAAMl4G,KAAKk6G,eAAeprG,OAAO+zD,EAAQn8D,OAAOrT,GAAIolH,EAAOC,OAA+B,IAAIG,QAAQC,SAC9G,GAAyB,MAArBj2C,EAAQxvB,WAAqBwvB,EAAQxvB,UAAU7/C,OAC/C,IAASH,EAAI,EAAGA,EAAIwvE,EAAQxvB,UAAU7/C,SAAUH,EAC5C6kH,EAAMl4G,KAAKk6G,eAAeprG,OAAO+zD,EAAQxvB,UAAUhgD,GAAIolH,EAAOC,OAA+B,KAAKG,QAAQC,SAClH,GAAsC,MAAlCj2C,EAAQ63C,wBAAkC73C,EAAQ63C,uBAAuBlnH,OACzE,IAASH,EAAI,EAAGA,EAAIwvE,EAAQ63C,uBAAuBlnH,SAAUH,EACzD6kH,EAAMl4G,KAAKu6G,iBAAiBzrG,OAAO+zD,EAAQ63C,uBAAuBrnH,GAAIolH,EAAOC,OAA+B,KAAKG,QAAQC,SACjI,OAAOL,CACX,EAWA7jE,EAAWokE,gBAAkB,SAAyBn2C,EAAS41C,GAC3D,OAAO9hH,KAAKmY,OAAO+zD,EAAS41C,GAAQK,QACxC,EAaAlkE,EAAW7lC,OAAS,SAAgBkqG,EAAQzlH,GAClCylH,aAAkBrB,IACpBqB,EAASrB,EAAQp9D,OAAOy+D,IAE5B,IADA,IAAIpgF,OAAiB1lC,IAAXK,EAAuBylH,EAAOhyE,IAAMgyE,EAAO14C,IAAM/sE,EAAQqvE,EAAU,IAAIq1C,EAAMl4G,KAAK40C,WACrFqkE,EAAO14C,IAAM1nC,GAAK,CACrB,IAAIghD,EAAMo/B,EAAOP,SACjB,OAAQ7+B,IAAQ,GAChB,KAAK,EACKhX,EAAQ90D,MAAQ80D,EAAQ90D,KAAKva,SAC/BqvE,EAAQ90D,KAAO,IACnB80D,EAAQ90D,KAAKta,KAAKykH,EAAMl4G,KAAK2zC,UAAU5kC,OAAOkqG,EAAQA,EAAOP,WAC7D,MACJ,KAAK,EACD71C,EAAQjwE,KAAOqmH,EAAOvP,SACtB,MACJ,KAAK,EACK7mC,EAAQ1vB,aAAe0vB,EAAQ1vB,YAAY3/C,SAC7CqvE,EAAQ1vB,YAAc,IAC1B0vB,EAAQ1vB,YAAY1/C,KAAKykH,EAAMl4G,KAAK64D,YAAY9pD,OAAOkqG,EAAQA,EAAOP,WACtE,MACJ,KAAK,GACD71C,EAAQ3d,UAAY+zD,EAAOvP,SAC3B,MACJ,KAAK,GACK7mC,EAAQvrD,OAASurD,EAAQvrD,MAAM9jB,SACjCqvE,EAAQvrD,MAAQ,IACpBurD,EAAQvrD,MAAM7jB,KAAKykH,EAAMl4G,KAAKk6G,eAAenrG,OAAOkqG,EAAQA,EAAOP,WACnE,MACJ,KAAK,GACK71C,EAAQn8D,QAAUm8D,EAAQn8D,OAAOlT,SACnCqvE,EAAQn8D,OAAS,IACrBm8D,EAAQn8D,OAAOjT,KAAKykH,EAAMl4G,KAAKk6G,eAAenrG,OAAOkqG,EAAQA,EAAOP,WACpE,MACJ,KAAK,GACK71C,EAAQxvB,WAAawvB,EAAQxvB,UAAU7/C,SACzCqvE,EAAQxvB,UAAY,IACxBwvB,EAAQxvB,UAAU5/C,KAAKykH,EAAMl4G,KAAKk6G,eAAenrG,OAAOkqG,EAAQA,EAAOP,WACvE,MACJ,KAAK,GACK71C,EAAQ63C,wBAA0B73C,EAAQ63C,uBAAuBlnH,SACnEqvE,EAAQ63C,uBAAyB,IACrC73C,EAAQ63C,uBAAuBjnH,KAAKykH,EAAMl4G,KAAKu6G,iBAAiBxrG,OAAOkqG,EAAQA,EAAOP,WACtF,MACJ,QACIO,EAAOE,SAAe,EAANt/B,GAGxB,CACA,OAAOhX,CACX,EAYAjuB,EAAWwkE,gBAAkB,SAAyBH,GAGlD,OAFMA,aAAkBrB,IACpBqB,EAAS,IAAIrB,EAAQqB,IAClBtiH,KAAKoY,OAAOkqG,EAAQA,EAAOP,SACtC,EAUA9jE,EAAWykE,OAAS,SAAgBx2C,GAChC,GAAuB,iBAAZA,GAAoC,OAAZA,EAC/B,MAAO,kBACX,GAAoB,MAAhBA,EAAQ90D,MAAgB80D,EAAQ3mE,eAAe,QAAS,CACxD,IAAKnG,MAAMC,QAAQ6sE,EAAQ90D,MACvB,MAAO,uBACX,IAAK,IAAI1a,EAAI,EAAGA,EAAIwvE,EAAQ90D,KAAKva,SAAUH,EAEvC,GADI2sC,EAAQk4E,EAAMl4G,KAAK2zC,UAAU0lE,OAAOx2C,EAAQ90D,KAAK1a,IAEjD,MAAO,QAAU2sC,CAE7B,CACA,GAAoB,MAAhB6iC,EAAQjwE,MAAgBiwE,EAAQ3mE,eAAe,UAC1C87G,EAAMn/G,SAASgqE,EAAQjwE,MACxB,MAAO,wBACf,GAA2B,MAAvBiwE,EAAQ1vB,aAAuB0vB,EAAQ3mE,eAAe,eAAgB,CACtE,IAAKnG,MAAMC,QAAQ6sE,EAAQ1vB,aACvB,MAAO,8BACX,IAAS9/C,EAAI,EAAGA,EAAIwvE,EAAQ1vB,YAAY3/C,SAAUH,EAE9C,GADI2sC,EAAQk4E,EAAMl4G,KAAK64D,YAAYwgD,OAAOx2C,EAAQ1vB,YAAY9/C,IAE1D,MAAO,eAAiB2sC,CAEpC,CACA,GAAyB,MAArB6iC,EAAQ3d,WAAqB2d,EAAQ3mE,eAAe,eAC/C87G,EAAMn/G,SAASgqE,EAAQ3d,WACxB,MAAO,6BACf,GAAqB,MAAjB2d,EAAQvrD,OAAiBurD,EAAQ3mE,eAAe,SAAU,CAC1D,IAAKnG,MAAMC,QAAQ6sE,EAAQvrD,OACvB,MAAO,wBACX,IAASjkB,EAAI,EAAGA,EAAIwvE,EAAQvrD,MAAM9jB,SAAUH,EAExC,GADI2sC,EAAQk4E,EAAMl4G,KAAKk6G,eAAeb,OAAOx2C,EAAQvrD,MAAMjkB,IAEvD,MAAO,SAAW2sC,CAE9B,CACA,GAAsB,MAAlB6iC,EAAQn8D,QAAkBm8D,EAAQ3mE,eAAe,UAAW,CAC5D,IAAKnG,MAAMC,QAAQ6sE,EAAQn8D,QACvB,MAAO,yBACX,IAASrT,EAAI,EAAGA,EAAIwvE,EAAQn8D,OAAOlT,SAAUH,EAEzC,GADI2sC,EAAQk4E,EAAMl4G,KAAKk6G,eAAeb,OAAOx2C,EAAQn8D,OAAOrT,IAExD,MAAO,UAAY2sC,CAE/B,CACA,GAAyB,MAArB6iC,EAAQxvB,WAAqBwvB,EAAQ3mE,eAAe,aAAc,CAClE,IAAKnG,MAAMC,QAAQ6sE,EAAQxvB,WACvB,MAAO,4BACX,IAAShgD,EAAI,EAAGA,EAAIwvE,EAAQxvB,UAAU7/C,SAAUH,EAE5C,GADI2sC,EAAQk4E,EAAMl4G,KAAKk6G,eAAeb,OAAOx2C,EAAQxvB,UAAUhgD,IAE3D,MAAO,aAAe2sC,CAElC,CACA,GAAsC,MAAlC6iC,EAAQ63C,wBAAkC73C,EAAQ3mE,eAAe,0BAA2B,CAC5F,IAAKnG,MAAMC,QAAQ6sE,EAAQ63C,wBACvB,MAAO,yCACX,IAASrnH,EAAI,EAAGA,EAAIwvE,EAAQ63C,uBAAuBlnH,SAAUH,EAAG,CAC5D,IAAI2sC,EACJ,GADIA,EAAQk4E,EAAMl4G,KAAKu6G,iBAAiBlB,OAAOx2C,EAAQ63C,uBAAuBrnH,IAE1E,MAAO,0BAA4B2sC,CAC3C,CACJ,CACA,OAAO,IACX,EAUA4U,EAAW0kE,WAAa,SAAoBC,GACxC,GAAIA,aAAkBrB,EAAMl4G,KAAK40C,WAC7B,OAAO2kE,EACX,IAAI12C,EAAU,IAAIq1C,EAAMl4G,KAAK40C,WAC7B,GAAI2kE,EAAOxrG,KAAM,CACb,IAAKhY,MAAMC,QAAQujH,EAAOxrG,MACtB,MAAM9a,UAAU,yCACpB4vE,EAAQ90D,KAAO,GACf,IAAK,IAAI1a,EAAI,EAAGA,EAAIkmH,EAAOxrG,KAAKva,SAAUH,EAAG,CACzC,GAA8B,iBAAnBkmH,EAAOxrG,KAAK1a,GACnB,MAAMJ,UAAU,0CACpB4vE,EAAQ90D,KAAK1a,GAAK6kH,EAAMl4G,KAAK2zC,UAAU2lE,WAAWC,EAAOxrG,KAAK1a,GAClE,CACJ,CAGA,GAFmB,MAAfkmH,EAAO3mH,OACPiwE,EAAQjwE,KAAOs1F,OAAOqxB,EAAO3mH,OAC7B2mH,EAAOpmE,YAAa,CACpB,IAAKp9C,MAAMC,QAAQujH,EAAOpmE,aACtB,MAAMlgD,UAAU,gDAEpB,IADA4vE,EAAQ1vB,YAAc,GACb9/C,EAAI,EAAGA,EAAIkmH,EAAOpmE,YAAY3/C,SAAUH,EAAG,CAChD,GAAqC,iBAA1BkmH,EAAOpmE,YAAY9/C,GAC1B,MAAMJ,UAAU,iDACpB4vE,EAAQ1vB,YAAY9/C,GAAK6kH,EAAMl4G,KAAK64D,YAAYygD,WAAWC,EAAOpmE,YAAY9/C,GAClF,CACJ,CAGA,GAFwB,MAApBkmH,EAAOr0D,YACP2d,EAAQ3d,UAAYgjC,OAAOqxB,EAAOr0D,YAClCq0D,EAAOjiG,MAAO,CACd,IAAKvhB,MAAMC,QAAQujH,EAAOjiG,OACtB,MAAMrkB,UAAU,0CAEpB,IADA4vE,EAAQvrD,MAAQ,GACPjkB,EAAI,EAAGA,EAAIkmH,EAAOjiG,MAAM9jB,SAAUH,EAAG,CAC1C,GAA+B,iBAApBkmH,EAAOjiG,MAAMjkB,GACpB,MAAMJ,UAAU,2CACpB4vE,EAAQvrD,MAAMjkB,GAAK6kH,EAAMl4G,KAAKk6G,eAAeZ,WAAWC,EAAOjiG,MAAMjkB,GACzE,CACJ,CACA,GAAIkmH,EAAO7yG,OAAQ,CACf,IAAK3Q,MAAMC,QAAQujH,EAAO7yG,QACtB,MAAMzT,UAAU,2CAEpB,IADA4vE,EAAQn8D,OAAS,GACRrT,EAAI,EAAGA,EAAIkmH,EAAO7yG,OAAOlT,SAAUH,EAAG,CAC3C,GAAgC,iBAArBkmH,EAAO7yG,OAAOrT,GACrB,MAAMJ,UAAU,4CACpB4vE,EAAQn8D,OAAOrT,GAAK6kH,EAAMl4G,KAAKk6G,eAAeZ,WAAWC,EAAO7yG,OAAOrT,GAC3E,CACJ,CACA,GAAIkmH,EAAOlmE,UAAW,CAClB,IAAKt9C,MAAMC,QAAQujH,EAAOlmE,WACtB,MAAMpgD,UAAU,8CAEpB,IADA4vE,EAAQxvB,UAAY,GACXhgD,EAAI,EAAGA,EAAIkmH,EAAOlmE,UAAU7/C,SAAUH,EAAG,CAC9C,GAAmC,iBAAxBkmH,EAAOlmE,UAAUhgD,GACxB,MAAMJ,UAAU,+CACpB4vE,EAAQxvB,UAAUhgD,GAAK6kH,EAAMl4G,KAAKk6G,eAAeZ,WAAWC,EAAOlmE,UAAUhgD,GACjF,CACJ,CACA,GAAIkmH,EAAOmB,uBAAwB,CAC/B,IAAK3kH,MAAMC,QAAQujH,EAAOmB,wBACtB,MAAMznH,UAAU,2DAEpB,IADA4vE,EAAQ63C,uBAAyB,GACxBrnH,EAAI,EAAGA,EAAIkmH,EAAOmB,uBAAuBlnH,SAAUH,EAAG,CAC3D,GAAgD,iBAArCkmH,EAAOmB,uBAAuBrnH,GACrC,MAAMJ,UAAU,4DACpB4vE,EAAQ63C,uBAAuBrnH,GAAK6kH,EAAMl4G,KAAKu6G,iBAAiBjB,WAAWC,EAAOmB,uBAAuBrnH,GAC7G,CACJ,CACA,OAAOwvE,CACX,EAWAjuB,EAAW6kE,SAAW,SAAkB52C,EAAS/rE,GACxCA,IACDA,EAAU,CAAC,GACf,IAAIyiH,EAAS,CAAC,EAad,IAZIziH,EAAQ4iH,QAAU5iH,EAAQ6iH,YAC1BJ,EAAOxrG,KAAO,GACdwrG,EAAOpmE,YAAc,GACrBomE,EAAOjiG,MAAQ,GACfiiG,EAAO7yG,OAAS,GAChB6yG,EAAOlmE,UAAY,GACnBkmE,EAAOmB,uBAAyB,IAEhC5jH,EAAQ6iH,WACRJ,EAAO3mH,KAAO,GACd2mH,EAAOr0D,UAAY,IAEnB2d,EAAQ90D,MAAQ80D,EAAQ90D,KAAKva,OAAQ,CACrC+lH,EAAOxrG,KAAO,GACd,IAAK,IAAIxT,EAAI,EAAGA,EAAIsoE,EAAQ90D,KAAKva,SAAU+G,EACvCg/G,EAAOxrG,KAAKxT,GAAK29G,EAAMl4G,KAAK2zC,UAAU8lE,SAAS52C,EAAQ90D,KAAKxT,GAAIzD,EACxE,CAGA,GAFoB,MAAhB+rE,EAAQjwE,MAAgBiwE,EAAQ3mE,eAAe,UAC/Cq9G,EAAO3mH,KAAOiwE,EAAQjwE,MACtBiwE,EAAQ1vB,aAAe0vB,EAAQ1vB,YAAY3/C,OAE3C,IADA+lH,EAAOpmE,YAAc,GACZ54C,EAAI,EAAGA,EAAIsoE,EAAQ1vB,YAAY3/C,SAAU+G,EAC9Cg/G,EAAOpmE,YAAY54C,GAAK29G,EAAMl4G,KAAK64D,YAAY4gD,SAAS52C,EAAQ1vB,YAAY54C,GAAIzD,GAIxF,GAFyB,MAArB+rE,EAAQ3d,WAAqB2d,EAAQ3mE,eAAe,eACpDq9G,EAAOr0D,UAAY2d,EAAQ3d,WAC3B2d,EAAQvrD,OAASurD,EAAQvrD,MAAM9jB,OAE/B,IADA+lH,EAAOjiG,MAAQ,GACN/c,EAAI,EAAGA,EAAIsoE,EAAQvrD,MAAM9jB,SAAU+G,EACxCg/G,EAAOjiG,MAAM/c,GAAK29G,EAAMl4G,KAAKk6G,eAAeT,SAAS52C,EAAQvrD,MAAM/c,GAAIzD,GAE/E,GAAI+rE,EAAQn8D,QAAUm8D,EAAQn8D,OAAOlT,OAEjC,IADA+lH,EAAO7yG,OAAS,GACPnM,EAAI,EAAGA,EAAIsoE,EAAQn8D,OAAOlT,SAAU+G,EACzCg/G,EAAO7yG,OAAOnM,GAAK29G,EAAMl4G,KAAKk6G,eAAeT,SAAS52C,EAAQn8D,OAAOnM,GAAIzD,GAEjF,GAAI+rE,EAAQxvB,WAAawvB,EAAQxvB,UAAU7/C,OAEvC,IADA+lH,EAAOlmE,UAAY,GACV94C,EAAI,EAAGA,EAAIsoE,EAAQxvB,UAAU7/C,SAAU+G,EAC5Cg/G,EAAOlmE,UAAU94C,GAAK29G,EAAMl4G,KAAKk6G,eAAeT,SAAS52C,EAAQxvB,UAAU94C,GAAIzD,GAEvF,GAAI+rE,EAAQ63C,wBAA0B73C,EAAQ63C,uBAAuBlnH,OAEjE,IADA+lH,EAAOmB,uBAAyB,GACvBngH,EAAI,EAAGA,EAAIsoE,EAAQ63C,uBAAuBlnH,SAAU+G,EACzDg/G,EAAOmB,uBAAuBngH,GAAK29G,EAAMl4G,KAAKu6G,iBAAiBd,SAAS52C,EAAQ63C,uBAAuBngH,GAAIzD,GAEnH,OAAOyiH,CACX,EASA3kE,EAAW0nD,UAAU4U,OAAS,WAC1B,OAAOv6G,KAAK1B,YAAYwkH,SAAS9iH,KAAMghH,EAAUM,KAAKgC,cAC1D,EAEOrlE,CACV,CApdiB,GAsdlB50C,EAAK64D,YAAc,WA8Bf,SAASA,EAAYw/C,GASjB,GARA1hH,KAAKpB,KAAO,GACZoB,KAAK+7B,UAAY,GACjB/7B,KAAK0iE,UAAY,GACjB1iE,KAAKkzD,WAAa,GAClBlzD,KAAK4iE,UAAY,GACjB5iE,KAAKgkH,aAAe,GACpBhkH,KAAK8iE,WAAa,GAClB9iE,KAAKijE,WAAa,GACdy+C,EACA,IAAK,IAAIvnG,EAAO7c,OAAO6c,KAAKunG,GAAahlH,EAAI,EAAGA,EAAIyd,EAAKtd,SAAUH,EACpC,MAAvBglH,EAAWvnG,EAAKzd,MAChBsD,KAAKma,EAAKzd,IAAMglH,EAAWvnG,EAAKzd,IAChD,CAu8BA,OA/7BAwlE,EAAYyjC,UAAU/mG,KAAOyiH,EAAMQ,WAQnC3/C,EAAYyjC,UAAUtlF,SAAW,EAQjC6hD,EAAYyjC,UAAUse,QAAU,KAQhC/hD,EAAYyjC,UAAU5pE,UAAYslF,EAAMQ,WAQxC3/C,EAAYyjC,UAAUjjC,UAAY2+C,EAAMQ,WAQxC3/C,EAAYyjC,UAAUzyC,WAAamuD,EAAMQ,WAQzC3/C,EAAYyjC,UAAU/iC,UAAYy+C,EAAMQ,WAQxC3/C,EAAYyjC,UAAU1pG,KAAO,GAQ7BimE,EAAYyjC,UAAUp3C,UAAY,GAQlC2T,EAAYyjC,UAAU5yC,QAAUsuD,EAAMO,UAAU,IAQhD1/C,EAAYyjC,UAAUqe,aAAe3C,EAAMQ,WAQ3C3/C,EAAYyjC,UAAUue,aAAe,EAQrChiD,EAAYyjC,UAAU7iC,WAAau+C,EAAMQ,WAQzC3/C,EAAYyjC,UAAU1iC,WAAao+C,EAAMQ,WAUzC3/C,EAAYre,OAAS,SAAgB69D,GACjC,OAAO,IAAIx/C,EAAYw/C,EAC3B,EAWAx/C,EAAY/pD,OAAS,SAAgB+zD,EAAS41C,GAG1C,GAFKA,IACDA,EAASX,EAAQt9D,UACD,MAAhBqoB,EAAQttE,MAAgBstE,EAAQttE,KAAK/B,OAAQ,CAC7CilH,EAAOC,OAA8B,IAAIG,OACzC,IAAK,IAAIxlH,EAAI,EAAGA,EAAIwvE,EAAQttE,KAAK/B,SAAUH,EACvColH,EAAOG,MAAM/1C,EAAQttE,KAAKlC,IAC9BolH,EAAOK,QACX,CAKA,GAJwB,MAApBj2C,EAAQ7rD,UAAoB6rD,EAAQ3mE,eAAe,aACnDu8G,EAAOC,OAA8B,IAAIK,MAAMl2C,EAAQ7rD,UACpC,MAAnB6rD,EAAQ+3C,SAAmB/3C,EAAQ3mE,eAAe,YAClDg8G,EAAMl4G,KAAK64D,YAAYiiD,QAAQhsG,OAAO+zD,EAAQ+3C,QAASnC,EAAOC,OAA8B,IAAIG,QAAQC,SACnF,MAArBj2C,EAAQnwC,WAAqBmwC,EAAQnwC,UAAUl/B,OAAQ,CAEvD,IADAilH,EAAOC,OAA8B,IAAIG,OAChCxlH,EAAI,EAAGA,EAAIwvE,EAAQnwC,UAAUl/B,SAAUH,EAC5ColH,EAAOE,MAAM91C,EAAQnwC,UAAUr/B,IACnColH,EAAOK,QACX,CACA,GAAyB,MAArBj2C,EAAQxJ,WAAqBwJ,EAAQxJ,UAAU7lE,OAAQ,CAEvD,IADAilH,EAAOC,OAA8B,IAAIG,OAChCxlH,EAAI,EAAGA,EAAIwvE,EAAQxJ,UAAU7lE,SAAUH,EAC5ColH,EAAOM,MAAMl2C,EAAQxJ,UAAUhmE,IACnColH,EAAOK,QACX,CACA,GAA0B,MAAtBj2C,EAAQhZ,YAAsBgZ,EAAQhZ,WAAWr2D,OACjD,IAASH,EAAI,EAAGA,EAAIwvE,EAAQhZ,WAAWr2D,SAAUH,EAC7ColH,EAAOC,OAA8B,IAAIjzD,MAAMod,EAAQhZ,WAAWx2D,IAC1E,GAAyB,MAArBwvE,EAAQtJ,WAAqBsJ,EAAQtJ,UAAU/lE,OAAQ,CAEvD,IADAilH,EAAOC,OAA8B,IAAIG,OAChCxlH,EAAI,EAAGA,EAAIwvE,EAAQtJ,UAAU/lE,SAAUH,EAC5ColH,EAAOG,MAAM/1C,EAAQtJ,UAAUlmE,IACnColH,EAAOK,QACX,CAKA,GAJoB,MAAhBj2C,EAAQjwE,MAAgBiwE,EAAQ3mE,eAAe,SAC/Cu8G,EAAOC,OAA8B,IAAIhP,OAAO7mC,EAAQjwE,MACrC,MAAnBiwE,EAAQnZ,SAAmBmZ,EAAQ3mE,eAAe,YAClDu8G,EAAOC,OAA8B,IAAIjzD,MAAMod,EAAQnZ,SACjC,MAAtBmZ,EAAQpJ,YAAsBoJ,EAAQpJ,WAAWjmE,OAAQ,CAEzD,IADAilH,EAAOC,OAA+B,IAAIG,OACjCxlH,EAAI,EAAGA,EAAIwvE,EAAQpJ,WAAWjmE,SAAUH,EAC7ColH,EAAOsC,OAAOl4C,EAAQpJ,WAAWpmE,IACrColH,EAAOK,QACX,CACA,GAA0B,MAAtBj2C,EAAQjJ,YAAsBiJ,EAAQjJ,WAAWpmE,OAAQ,CAEzD,IADAilH,EAAOC,OAA+B,IAAIG,OACjCxlH,EAAI,EAAGA,EAAIwvE,EAAQjJ,WAAWpmE,SAAUH,EAC7ColH,EAAOuC,OAAOn4C,EAAQjJ,WAAWvmE,IACrColH,EAAOK,QACX,CAGA,GAFyB,MAArBj2C,EAAQ3d,WAAqB2d,EAAQ3mE,eAAe,cACpDu8G,EAAOC,OAA+B,IAAIhP,OAAO7mC,EAAQ3d,WACjC,MAAxB2d,EAAQ83C,cAAwB93C,EAAQ83C,aAAannH,OACrD,IAASH,EAAI,EAAGA,EAAIwvE,EAAQ83C,aAAannH,SAAUH,EAC/C6kH,EAAMl4G,KAAKs6G,uBAAuBxrG,OAAO+zD,EAAQ83C,aAAatnH,GAAIolH,EAAOC,OAA+B,KAAKG,QAAQC,SAG7H,OAF4B,MAAxBj2C,EAAQg4C,cAAwBh4C,EAAQ3mE,eAAe,iBACvDu8G,EAAOC,OAA+B,KAAKK,MAAMl2C,EAAQg4C,cACtDpC,CACX,EAWA5/C,EAAYmgD,gBAAkB,SAAyBn2C,EAAS41C,GAC5D,OAAO9hH,KAAKmY,OAAO+zD,EAAS41C,GAAQK,QACxC,EAaAjgD,EAAY9pD,OAAS,SAAgBkqG,EAAQzlH,GACnCylH,aAAkBrB,IACpBqB,EAASrB,EAAQp9D,OAAOy+D,IAE5B,IADA,IAAIpgF,OAAiB1lC,IAAXK,EAAuBylH,EAAOhyE,IAAMgyE,EAAO14C,IAAM/sE,EAAQqvE,EAAU,IAAIq1C,EAAMl4G,KAAK64D,YACrFogD,EAAO14C,IAAM1nC,GAAK,CACrB,IAAIghD,EAAMo/B,EAAOP,SACjB,OAAQ7+B,IAAQ,GAChB,KAAK,EAGD,GAFMhX,EAAQttE,MAAQstE,EAAQttE,KAAK/B,SAC/BqvE,EAAQttE,KAAO,IACD,IAAP,EAANskF,GAED,IADA,IAAIq/B,EAAOD,EAAOP,SAAWO,EAAO14C,IAC7B04C,EAAO14C,IAAM24C,GAChBr2C,EAAQttE,KAAK9B,KAAKwlH,EAAOL,cAE7B/1C,EAAQttE,KAAK9B,KAAKwlH,EAAOL,SAC7B,MACJ,KAAK,EACD/1C,EAAQ7rD,SAAWiiG,EAAOF,QAC1B,MACJ,KAAK,EACDl2C,EAAQ+3C,QAAU1C,EAAMl4G,KAAK64D,YAAYiiD,QAAQ/rG,OAAOkqG,EAAQA,EAAOP,UACvE,MACJ,KAAK,EAGD,GAFM71C,EAAQnwC,WAAamwC,EAAQnwC,UAAUl/B,SACzCqvE,EAAQnwC,UAAY,IACN,IAAP,EAANmnD,GAED,IADIq/B,EAAOD,EAAOP,SAAWO,EAAO14C,IAC7B04C,EAAO14C,IAAM24C,GAChBr2C,EAAQnwC,UAAUj/B,KAAKwlH,EAAON,cAElC91C,EAAQnwC,UAAUj/B,KAAKwlH,EAAON,SAClC,MACJ,KAAK,EAGD,GAFM91C,EAAQxJ,WAAawJ,EAAQxJ,UAAU7lE,SACzCqvE,EAAQxJ,UAAY,IACN,IAAP,EAANwgB,GAED,IADIq/B,EAAOD,EAAOP,SAAWO,EAAO14C,IAC7B04C,EAAO14C,IAAM24C,GAChBr2C,EAAQxJ,UAAU5lE,KAAKwlH,EAAOF,cAElCl2C,EAAQxJ,UAAU5lE,KAAKwlH,EAAOF,SAClC,MACJ,KAAK,EACKl2C,EAAQhZ,YAAcgZ,EAAQhZ,WAAWr2D,SAC3CqvE,EAAQhZ,WAAa,IACzBgZ,EAAQhZ,WAAWp2D,KAAKwlH,EAAOxzD,SAC/B,MACJ,KAAK,EAGD,GAFMod,EAAQtJ,WAAasJ,EAAQtJ,UAAU/lE,SACzCqvE,EAAQtJ,UAAY,IACN,IAAP,EAANsgB,GAED,IADIq/B,EAAOD,EAAOP,SAAWO,EAAO14C,IAC7B04C,EAAO14C,IAAM24C,GAChBr2C,EAAQtJ,UAAU9lE,KAAKwlH,EAAOL,cAElC/1C,EAAQtJ,UAAU9lE,KAAKwlH,EAAOL,SAClC,MACJ,KAAK,EACD/1C,EAAQjwE,KAAOqmH,EAAOvP,SACtB,MACJ,KAAK,GACD7mC,EAAQ3d,UAAY+zD,EAAOvP,SAC3B,MACJ,KAAK,EACD7mC,EAAQnZ,QAAUuvD,EAAOxzD,QACzB,MACJ,KAAK,GACKod,EAAQ83C,cAAgB93C,EAAQ83C,aAAannH,SAC/CqvE,EAAQ83C,aAAe,IAC3B93C,EAAQ83C,aAAalnH,KAAKykH,EAAMl4G,KAAKs6G,uBAAuBvrG,OAAOkqG,EAAQA,EAAOP,WAClF,MACJ,KAAK,GACD71C,EAAQg4C,aAAe5B,EAAOF,QAC9B,MACJ,KAAK,GAGD,GAFMl2C,EAAQpJ,YAAcoJ,EAAQpJ,WAAWjmE,SAC3CqvE,EAAQpJ,WAAa,IACP,IAAP,EAANogB,GAED,IADIq/B,EAAOD,EAAOP,SAAWO,EAAO14C,IAC7B04C,EAAO14C,IAAM24C,GAChBr2C,EAAQpJ,WAAWhmE,KAAKwlH,EAAO8B,eAEnCl4C,EAAQpJ,WAAWhmE,KAAKwlH,EAAO8B,UACnC,MACJ,KAAK,GAGD,GAFMl4C,EAAQjJ,YAAciJ,EAAQjJ,WAAWpmE,SAC3CqvE,EAAQjJ,WAAa,IACP,IAAP,EAANigB,GAED,IADIq/B,EAAOD,EAAOP,SAAWO,EAAO14C,IAC7B04C,EAAO14C,IAAM24C,GAChBr2C,EAAQjJ,WAAWnmE,KAAKwlH,EAAO+B,eAEnCn4C,EAAQjJ,WAAWnmE,KAAKwlH,EAAO+B,UACnC,MACJ,QACI/B,EAAOE,SAAe,EAANt/B,GAGxB,CACA,OAAOhX,CACX,EAYAhK,EAAYugD,gBAAkB,SAAyBH,GAGnD,OAFMA,aAAkBrB,IACpBqB,EAAS,IAAIrB,EAAQqB,IAClBtiH,KAAKoY,OAAOkqG,EAAQA,EAAOP,SACtC,EAUA7/C,EAAYwgD,OAAS,SAAgBx2C,GACjC,GAAuB,iBAAZA,GAAoC,OAAZA,EAC/B,MAAO,kBACX,GAAoB,MAAhBA,EAAQttE,MAAgBstE,EAAQ3mE,eAAe,QAAS,CACxD,IAAKnG,MAAMC,QAAQ6sE,EAAQttE,MACvB,MAAO,uBACX,IAAK,IAAIlC,EAAI,EAAGA,EAAIwvE,EAAQttE,KAAK/B,SAAUH,EACvC,KAAK2kH,EAAMz5G,UAAUskE,EAAQttE,KAAKlC,KAASwvE,EAAQttE,KAAKlC,IAAM2kH,EAAMz5G,UAAUskE,EAAQttE,KAAKlC,GAAGirE,MAAQ05C,EAAMz5G,UAAUskE,EAAQttE,KAAKlC,GAAGkrE,OAClI,MAAO,+BACnB,CACA,GAAwB,MAApBsE,EAAQ7rD,UAAoB6rD,EAAQ3mE,eAAe,cAC9C87G,EAAMz5G,UAAUskE,EAAQ7rD,UACzB,MAAO,6BACf,GAAuB,MAAnB6rD,EAAQ+3C,SAAmB/3C,EAAQ3mE,eAAe,aAC9C8jC,EAAQk4E,EAAMl4G,KAAK64D,YAAYiiD,QAAQzB,OAAOx2C,EAAQ+3C,UAEtD,MAAO,WAAa56E,EAE5B,GAAyB,MAArB6iC,EAAQnwC,WAAqBmwC,EAAQ3mE,eAAe,aAAc,CAClE,IAAKnG,MAAMC,QAAQ6sE,EAAQnwC,WACvB,MAAO,4BACX,IAASr/B,EAAI,EAAGA,EAAIwvE,EAAQnwC,UAAUl/B,SAAUH,EAC5C,GAAoC,iBAAzBwvE,EAAQnwC,UAAUr/B,GACzB,MAAO,8BACnB,CACA,GAAyB,MAArBwvE,EAAQxJ,WAAqBwJ,EAAQ3mE,eAAe,aAAc,CAClE,IAAKnG,MAAMC,QAAQ6sE,EAAQxJ,WACvB,MAAO,4BACX,IAAShmE,EAAI,EAAGA,EAAIwvE,EAAQxJ,UAAU7lE,SAAUH,EAC5C,IAAK2kH,EAAMz5G,UAAUskE,EAAQxJ,UAAUhmE,IACnC,MAAO,+BACnB,CACA,GAA0B,MAAtBwvE,EAAQhZ,YAAsBgZ,EAAQ3mE,eAAe,cAAe,CACpE,IAAKnG,MAAMC,QAAQ6sE,EAAQhZ,YACvB,MAAO,6BACX,IAASx2D,EAAI,EAAGA,EAAIwvE,EAAQhZ,WAAWr2D,SAAUH,EAC7C,KAAMwvE,EAAQhZ,WAAWx2D,IAA8C,iBAAjCwvE,EAAQhZ,WAAWx2D,GAAGG,QAAuBwkH,EAAMn/G,SAASgqE,EAAQhZ,WAAWx2D,KACjH,MAAO,+BACnB,CACA,GAAyB,MAArBwvE,EAAQtJ,WAAqBsJ,EAAQ3mE,eAAe,aAAc,CAClE,IAAKnG,MAAMC,QAAQ6sE,EAAQtJ,WACvB,MAAO,4BACX,IAASlmE,EAAI,EAAGA,EAAIwvE,EAAQtJ,UAAU/lE,SAAUH,EAC5C,KAAK2kH,EAAMz5G,UAAUskE,EAAQtJ,UAAUlmE,KAASwvE,EAAQtJ,UAAUlmE,IAAM2kH,EAAMz5G,UAAUskE,EAAQtJ,UAAUlmE,GAAGirE,MAAQ05C,EAAMz5G,UAAUskE,EAAQtJ,UAAUlmE,GAAGkrE,OACtJ,MAAO,oCACnB,CACA,GAAoB,MAAhBsE,EAAQjwE,MAAgBiwE,EAAQ3mE,eAAe,UAC1C87G,EAAMn/G,SAASgqE,EAAQjwE,MACxB,MAAO,wBACf,GAAyB,MAArBiwE,EAAQ3d,WAAqB2d,EAAQ3mE,eAAe,eAC/C87G,EAAMn/G,SAASgqE,EAAQ3d,WACxB,MAAO,6BACf,GAAuB,MAAnB2d,EAAQnZ,SAAmBmZ,EAAQ3mE,eAAe,cAC5C2mE,EAAQnZ,SAA6C,iBAA3BmZ,EAAQnZ,QAAQl2D,QAAuBwkH,EAAMn/G,SAASgqE,EAAQnZ,UAC1F,MAAO,2BACf,GAA4B,MAAxBmZ,EAAQ83C,cAAwB93C,EAAQ3mE,eAAe,gBAAiB,CACxE,IAAKnG,MAAMC,QAAQ6sE,EAAQ83C,cACvB,MAAO,+BACX,IAAStnH,EAAI,EAAGA,EAAIwvE,EAAQ83C,aAAannH,SAAUH,EAAG,CAClD,IAAI2sC,EACJ,GADIA,EAAQk4E,EAAMl4G,KAAKs6G,uBAAuBjB,OAAOx2C,EAAQ83C,aAAatnH,IAEtE,MAAO,gBAAkB2sC,CACjC,CACJ,CACA,GAA4B,MAAxB6iC,EAAQg4C,cAAwBh4C,EAAQ3mE,eAAe,gBACvD,OAAQ2mE,EAAQg4C,cAChB,QACI,MAAO,oCACX,KAAK,EACL,KAAK,GAGT,GAA0B,MAAtBh4C,EAAQpJ,YAAsBoJ,EAAQ3mE,eAAe,cAAe,CACpE,IAAKnG,MAAMC,QAAQ6sE,EAAQpJ,YACvB,MAAO,6BACX,IAASpmE,EAAI,EAAGA,EAAIwvE,EAAQpJ,WAAWjmE,SAAUH,EAC7C,GAAqC,iBAA1BwvE,EAAQpJ,WAAWpmE,GAC1B,MAAO,+BACnB,CACA,GAA0B,MAAtBwvE,EAAQjJ,YAAsBiJ,EAAQ3mE,eAAe,cAAe,CACpE,IAAKnG,MAAMC,QAAQ6sE,EAAQjJ,YACvB,MAAO,6BACX,IAASvmE,EAAI,EAAGA,EAAIwvE,EAAQjJ,WAAWpmE,SAAUH,EAC7C,KAAK2kH,EAAMz5G,UAAUskE,EAAQjJ,WAAWvmE,KAASwvE,EAAQjJ,WAAWvmE,IAAM2kH,EAAMz5G,UAAUskE,EAAQjJ,WAAWvmE,GAAGirE,MAAQ05C,EAAMz5G,UAAUskE,EAAQjJ,WAAWvmE,GAAGkrE,OAC1J,MAAO,qCACnB,CACA,OAAO,IACX,EAUA1F,EAAYygD,WAAa,SAAoBC,GACzC,GAAIA,aAAkBrB,EAAMl4G,KAAK64D,YAC7B,OAAO0gD,EACX,IAAI12C,EAAU,IAAIq1C,EAAMl4G,KAAK64D,YAC7B,GAAI0gD,EAAOhkH,KAAM,CACb,IAAKQ,MAAMC,QAAQujH,EAAOhkH,MACtB,MAAMtC,UAAU,0CACpB4vE,EAAQttE,KAAO,GACf,IAAK,IAAIlC,EAAI,EAAGA,EAAIkmH,EAAOhkH,KAAK/B,SAAUH,EAClC2kH,EAAM55C,MACLyE,EAAQttE,KAAKlC,GAAK2kH,EAAM55C,KAAKC,UAAUk7C,EAAOhkH,KAAKlC,KAAK8qE,UAAW,EACrC,iBAAnBo7C,EAAOhkH,KAAKlC,GACxBwvE,EAAQttE,KAAKlC,GAAK+pD,SAASm8D,EAAOhkH,KAAKlC,GAAI,IACZ,iBAAnBkmH,EAAOhkH,KAAKlC,GACxBwvE,EAAQttE,KAAKlC,GAAKkmH,EAAOhkH,KAAKlC,GACC,iBAAnBkmH,EAAOhkH,KAAKlC,KACxBwvE,EAAQttE,KAAKlC,GAAK,IAAI2kH,EAAMwB,SAASD,EAAOhkH,KAAKlC,GAAGirE,MAAQ,EAAGi7C,EAAOhkH,KAAKlC,GAAGkrE,OAAS,GAAGrE,WACtG,CAGA,GAFuB,MAAnBq/C,EAAOviG,WACP6rD,EAAQ7rD,SAA6B,EAAlBuiG,EAAOviG,UACR,MAAlBuiG,EAAOqB,QAAiB,CACxB,GAA8B,iBAAnBrB,EAAOqB,QACd,MAAM3nH,UAAU,8CACpB4vE,EAAQ+3C,QAAU1C,EAAMl4G,KAAK64D,YAAYiiD,QAAQxB,WAAWC,EAAOqB,QACvE,CACA,GAAIrB,EAAO7mF,UAAW,CAClB,IAAK38B,MAAMC,QAAQujH,EAAO7mF,WACtB,MAAMz/B,UAAU,+CAEpB,IADA4vE,EAAQnwC,UAAY,GACXr/B,EAAI,EAAGA,EAAIkmH,EAAO7mF,UAAUl/B,SAAUH,EAC3CwvE,EAAQnwC,UAAUr/B,GAAKkD,OAAOgjH,EAAO7mF,UAAUr/B,GACvD,CACA,GAAIkmH,EAAOlgD,UAAW,CAClB,IAAKtjE,MAAMC,QAAQujH,EAAOlgD,WACtB,MAAMpmE,UAAU,+CAEpB,IADA4vE,EAAQxJ,UAAY,GACXhmE,EAAI,EAAGA,EAAIkmH,EAAOlgD,UAAU7lE,SAAUH,EAC3CwvE,EAAQxJ,UAAUhmE,GAA2B,EAAtBkmH,EAAOlgD,UAAUhmE,EAChD,CACA,GAAIkmH,EAAO1vD,WAAY,CACnB,IAAK9zD,MAAMC,QAAQujH,EAAO1vD,YACtB,MAAM52D,UAAU,gDAEpB,IADA4vE,EAAQhZ,WAAa,GACZx2D,EAAI,EAAGA,EAAIkmH,EAAO1vD,WAAWr2D,SAAUH,EACR,iBAAzBkmH,EAAO1vD,WAAWx2D,GACzB2kH,EAAM1L,OAAOv9F,OAAOwqG,EAAO1vD,WAAWx2D,GAAIwvE,EAAQhZ,WAAWx2D,GAAK2kH,EAAMO,UAAUP,EAAM1L,OAAO94G,OAAO+lH,EAAO1vD,WAAWx2D,KAAM,GACzHkmH,EAAO1vD,WAAWx2D,GAAGG,SAC1BqvE,EAAQhZ,WAAWx2D,GAAKkmH,EAAO1vD,WAAWx2D,GACtD,CACA,GAAIkmH,EAAOhgD,UAAW,CAClB,IAAKxjE,MAAMC,QAAQujH,EAAOhgD,WACtB,MAAMtmE,UAAU,+CAEpB,IADA4vE,EAAQtJ,UAAY,GACXlmE,EAAI,EAAGA,EAAIkmH,EAAOhgD,UAAU/lE,SAAUH,EACvC2kH,EAAM55C,MACLyE,EAAQtJ,UAAUlmE,GAAK2kH,EAAM55C,KAAKC,UAAUk7C,EAAOhgD,UAAUlmE,KAAK8qE,UAAW,EAC1C,iBAAxBo7C,EAAOhgD,UAAUlmE,GAC7BwvE,EAAQtJ,UAAUlmE,GAAK+pD,SAASm8D,EAAOhgD,UAAUlmE,GAAI,IACjB,iBAAxBkmH,EAAOhgD,UAAUlmE,GAC7BwvE,EAAQtJ,UAAUlmE,GAAKkmH,EAAOhgD,UAAUlmE,GACJ,iBAAxBkmH,EAAOhgD,UAAUlmE,KAC7BwvE,EAAQtJ,UAAUlmE,GAAK,IAAI2kH,EAAMwB,SAASD,EAAOhgD,UAAUlmE,GAAGirE,MAAQ,EAAGi7C,EAAOhgD,UAAUlmE,GAAGkrE,OAAS,GAAGrE,WACrH,CAUA,GATmB,MAAfq/C,EAAO3mH,OACPiwE,EAAQjwE,KAAOs1F,OAAOqxB,EAAO3mH,OACT,MAApB2mH,EAAOr0D,YACP2d,EAAQ3d,UAAYgjC,OAAOqxB,EAAOr0D,YAChB,MAAlBq0D,EAAO7vD,UACuB,iBAAnB6vD,EAAO7vD,QACdsuD,EAAM1L,OAAOv9F,OAAOwqG,EAAO7vD,QAASmZ,EAAQnZ,QAAUsuD,EAAMO,UAAUP,EAAM1L,OAAO94G,OAAO+lH,EAAO7vD,UAAW,GACvG6vD,EAAO7vD,QAAQl2D,SACpBqvE,EAAQnZ,QAAU6vD,EAAO7vD,UAC7B6vD,EAAOoB,aAAc,CACrB,IAAK5kH,MAAMC,QAAQujH,EAAOoB,cACtB,MAAM1nH,UAAU,kDAEpB,IADA4vE,EAAQ83C,aAAe,GACdtnH,EAAI,EAAGA,EAAIkmH,EAAOoB,aAAannH,SAAUH,EAAG,CACjD,GAAsC,iBAA3BkmH,EAAOoB,aAAatnH,GAC3B,MAAMJ,UAAU,mDACpB4vE,EAAQ83C,aAAatnH,GAAK6kH,EAAMl4G,KAAKs6G,uBAAuBhB,WAAWC,EAAOoB,aAAatnH,GAC/F,CACJ,CACA,OAAQkmH,EAAOsB,cACf,IAAK,UACL,KAAK,EACDh4C,EAAQg4C,aAAe,EACvB,MACJ,IAAK,WACL,KAAK,EACDh4C,EAAQg4C,aAAe,EAG3B,GAAItB,EAAO9/C,WAAY,CACnB,IAAK1jE,MAAMC,QAAQujH,EAAO9/C,YACtB,MAAMxmE,UAAU,gDAEpB,IADA4vE,EAAQpJ,WAAa,GACZpmE,EAAI,EAAGA,EAAIkmH,EAAO9/C,WAAWjmE,SAAUH,EAC5CwvE,EAAQpJ,WAAWpmE,GAAKkD,OAAOgjH,EAAO9/C,WAAWpmE,GACzD,CACA,GAAIkmH,EAAO3/C,WAAY,CACnB,IAAK7jE,MAAMC,QAAQujH,EAAO3/C,YACtB,MAAM3mE,UAAU,gDAEpB,IADA4vE,EAAQjJ,WAAa,GACZvmE,EAAI,EAAGA,EAAIkmH,EAAO3/C,WAAWpmE,SAAUH,EACxC2kH,EAAM55C,MACLyE,EAAQjJ,WAAWvmE,GAAK2kH,EAAM55C,KAAKC,UAAUk7C,EAAO3/C,WAAWvmE,KAAK8qE,UAAW,EAC3C,iBAAzBo7C,EAAO3/C,WAAWvmE,GAC9BwvE,EAAQjJ,WAAWvmE,GAAK+pD,SAASm8D,EAAO3/C,WAAWvmE,GAAI,IAClB,iBAAzBkmH,EAAO3/C,WAAWvmE,GAC9BwvE,EAAQjJ,WAAWvmE,GAAKkmH,EAAO3/C,WAAWvmE,GACL,iBAAzBkmH,EAAO3/C,WAAWvmE,KAC9BwvE,EAAQjJ,WAAWvmE,GAAK,IAAI2kH,EAAMwB,SAASD,EAAO3/C,WAAWvmE,GAAGirE,MAAQ,EAAGi7C,EAAO3/C,WAAWvmE,GAAGkrE,OAAS,GAAGrE,UAAS,GACjI,CACA,OAAO2I,CACX,EAWAhK,EAAY4gD,SAAW,SAAkB52C,EAAS/rE,GACzCA,IACDA,EAAU,CAAC,GACf,IAAIyiH,EAAS,CAAC,EAyBd,IAxBIziH,EAAQ4iH,QAAU5iH,EAAQ6iH,YAC1BJ,EAAOhkH,KAAO,GACdgkH,EAAO7mF,UAAY,GACnB6mF,EAAOlgD,UAAY,GACnBkgD,EAAO1vD,WAAa,GACpB0vD,EAAOhgD,UAAY,GACnBggD,EAAO9/C,WAAa,GACpB8/C,EAAO3/C,WAAa,GACpB2/C,EAAOoB,aAAe,IAEtB7jH,EAAQ6iH,WACRJ,EAAOviG,SAAW,EAClBuiG,EAAOqB,QAAU,KACjBrB,EAAO3mH,KAAO,GACVkE,EAAQ2uD,QAAUyiC,OAClBqxB,EAAO7vD,QAAU,IAEjB6vD,EAAO7vD,QAAU,GACb5yD,EAAQ2uD,QAAU1vD,QAClBwjH,EAAO7vD,QAAUsuD,EAAMO,UAAUgB,EAAO7vD,WAEhD6vD,EAAOr0D,UAAY,GACnBq0D,EAAOsB,aAAe/jH,EAAQgjH,QAAU5xB,OAAS,UAAY,GAE7DrlB,EAAQttE,MAAQstE,EAAQttE,KAAK/B,OAAQ,CACrC+lH,EAAOhkH,KAAO,GACd,IAAK,IAAIgF,EAAI,EAAGA,EAAIsoE,EAAQttE,KAAK/B,SAAU+G,EACR,iBAApBsoE,EAAQttE,KAAKgF,GACpBg/G,EAAOhkH,KAAKgF,GAAKzD,EAAQ+iH,QAAU3xB,OAASA,OAAOrlB,EAAQttE,KAAKgF,IAAMsoE,EAAQttE,KAAKgF,GAEnFg/G,EAAOhkH,KAAKgF,GAAKzD,EAAQ+iH,QAAU3xB,OAAS8vB,EAAM55C,KAAKk+B,UAAU5vD,SAASvwC,KAAK0mE,EAAQttE,KAAKgF,IAAMzD,EAAQ+iH,QAAUtjH,OAAS,IAAIyhH,EAAMwB,SAAS32C,EAAQttE,KAAKgF,GAAG+jE,MAAQ,EAAGuE,EAAQttE,KAAKgF,GAAGgkE,OAAS,GAAGrE,WAAa2I,EAAQttE,KAAKgF,EAC7O,CAKA,GAJwB,MAApBsoE,EAAQ7rD,UAAoB6rD,EAAQ3mE,eAAe,cACnDq9G,EAAOviG,SAAW6rD,EAAQ7rD,UACP,MAAnB6rD,EAAQ+3C,SAAmB/3C,EAAQ3mE,eAAe,aAClDq9G,EAAOqB,QAAU1C,EAAMl4G,KAAK64D,YAAYiiD,QAAQrB,SAAS52C,EAAQ+3C,QAAS9jH,IAC1E+rE,EAAQnwC,WAAamwC,EAAQnwC,UAAUl/B,OAEvC,IADA+lH,EAAO7mF,UAAY,GACVn4B,EAAI,EAAGA,EAAIsoE,EAAQnwC,UAAUl/B,SAAU+G,EAC5Cg/G,EAAO7mF,UAAUn4B,GAAKzD,EAAQijH,OAASC,SAASn3C,EAAQnwC,UAAUn4B,IAAM2tF,OAAOrlB,EAAQnwC,UAAUn4B,IAAMsoE,EAAQnwC,UAAUn4B,GAEjI,GAAIsoE,EAAQxJ,WAAawJ,EAAQxJ,UAAU7lE,OAEvC,IADA+lH,EAAOlgD,UAAY,GACV9+D,EAAI,EAAGA,EAAIsoE,EAAQxJ,UAAU7lE,SAAU+G,EAC5Cg/G,EAAOlgD,UAAU9+D,GAAKsoE,EAAQxJ,UAAU9+D,GAEhD,GAAIsoE,EAAQhZ,YAAcgZ,EAAQhZ,WAAWr2D,OAEzC,IADA+lH,EAAO1vD,WAAa,GACXtvD,EAAI,EAAGA,EAAIsoE,EAAQhZ,WAAWr2D,SAAU+G,EAC7Cg/G,EAAO1vD,WAAWtvD,GAAKzD,EAAQ2uD,QAAUyiC,OAAS8vB,EAAM1L,OAAOx9F,OAAO+zD,EAAQhZ,WAAWtvD,GAAI,EAAGsoE,EAAQhZ,WAAWtvD,GAAG/G,QAAUsD,EAAQ2uD,QAAU1vD,MAAQA,MAAMumG,UAAU/wF,MAAMpP,KAAK0mE,EAAQhZ,WAAWtvD,IAAMsoE,EAAQhZ,WAAWtvD,GAEzO,GAAIsoE,EAAQtJ,WAAasJ,EAAQtJ,UAAU/lE,OAEvC,IADA+lH,EAAOhgD,UAAY,GACVh/D,EAAI,EAAGA,EAAIsoE,EAAQtJ,UAAU/lE,SAAU+G,EACR,iBAAzBsoE,EAAQtJ,UAAUh/D,GACzBg/G,EAAOhgD,UAAUh/D,GAAKzD,EAAQ+iH,QAAU3xB,OAASA,OAAOrlB,EAAQtJ,UAAUh/D,IAAMsoE,EAAQtJ,UAAUh/D,GAElGg/G,EAAOhgD,UAAUh/D,GAAKzD,EAAQ+iH,QAAU3xB,OAAS8vB,EAAM55C,KAAKk+B,UAAU5vD,SAASvwC,KAAK0mE,EAAQtJ,UAAUh/D,IAAMzD,EAAQ+iH,QAAUtjH,OAAS,IAAIyhH,EAAMwB,SAAS32C,EAAQtJ,UAAUh/D,GAAG+jE,MAAQ,EAAGuE,EAAQtJ,UAAUh/D,GAAGgkE,OAAS,GAAGrE,WAAa2I,EAAQtJ,UAAUh/D,GAMtQ,GAJoB,MAAhBsoE,EAAQjwE,MAAgBiwE,EAAQ3mE,eAAe,UAC/Cq9G,EAAO3mH,KAAOiwE,EAAQjwE,MACH,MAAnBiwE,EAAQnZ,SAAmBmZ,EAAQ3mE,eAAe,aAClDq9G,EAAO7vD,QAAU5yD,EAAQ2uD,QAAUyiC,OAAS8vB,EAAM1L,OAAOx9F,OAAO+zD,EAAQnZ,QAAS,EAAGmZ,EAAQnZ,QAAQl2D,QAAUsD,EAAQ2uD,QAAU1vD,MAAQA,MAAMumG,UAAU/wF,MAAMpP,KAAK0mE,EAAQnZ,SAAWmZ,EAAQnZ,SAC9LmZ,EAAQpJ,YAAcoJ,EAAQpJ,WAAWjmE,OAEzC,IADA+lH,EAAO9/C,WAAa,GACXl/D,EAAI,EAAGA,EAAIsoE,EAAQpJ,WAAWjmE,SAAU+G,EAC7Cg/G,EAAO9/C,WAAWl/D,GAAKzD,EAAQijH,OAASC,SAASn3C,EAAQpJ,WAAWl/D,IAAM2tF,OAAOrlB,EAAQpJ,WAAWl/D,IAAMsoE,EAAQpJ,WAAWl/D,GAErI,GAAIsoE,EAAQjJ,YAAciJ,EAAQjJ,WAAWpmE,OAEzC,IADA+lH,EAAO3/C,WAAa,GACXr/D,EAAI,EAAGA,EAAIsoE,EAAQjJ,WAAWpmE,SAAU+G,EACR,iBAA1BsoE,EAAQjJ,WAAWr/D,GAC1Bg/G,EAAO3/C,WAAWr/D,GAAKzD,EAAQ+iH,QAAU3xB,OAASA,OAAOrlB,EAAQjJ,WAAWr/D,IAAMsoE,EAAQjJ,WAAWr/D,GAErGg/G,EAAO3/C,WAAWr/D,GAAKzD,EAAQ+iH,QAAU3xB,OAAS8vB,EAAM55C,KAAKk+B,UAAU5vD,SAASvwC,KAAK0mE,EAAQjJ,WAAWr/D,IAAMzD,EAAQ+iH,QAAUtjH,OAAS,IAAIyhH,EAAMwB,SAAS32C,EAAQjJ,WAAWr/D,GAAG+jE,MAAQ,EAAGuE,EAAQjJ,WAAWr/D,GAAGgkE,OAAS,GAAGrE,UAAS,GAAQ2I,EAAQjJ,WAAWr/D,GAI/Q,GAFyB,MAArBsoE,EAAQ3d,WAAqB2d,EAAQ3mE,eAAe,eACpDq9G,EAAOr0D,UAAY2d,EAAQ3d,WAC3B2d,EAAQ83C,cAAgB93C,EAAQ83C,aAAannH,OAE7C,IADA+lH,EAAOoB,aAAe,GACbpgH,EAAI,EAAGA,EAAIsoE,EAAQ83C,aAAannH,SAAU+G,EAC/Cg/G,EAAOoB,aAAapgH,GAAK29G,EAAMl4G,KAAKs6G,uBAAuBb,SAAS52C,EAAQ83C,aAAapgH,GAAIzD,GAIrG,OAF4B,MAAxB+rE,EAAQg4C,cAAwBh4C,EAAQ3mE,eAAe,kBACvDq9G,EAAOsB,aAAe/jH,EAAQgjH,QAAU5xB,OAASgwB,EAAMl4G,KAAK64D,YAAYoiD,aAAap4C,EAAQg4C,cAAgBh4C,EAAQg4C,cAClHtB,CACX,EASA1gD,EAAYyjC,UAAU4U,OAAS,WAC3B,OAAOv6G,KAAK1B,YAAYwkH,SAAS9iH,KAAMghH,EAAUM,KAAKgC,cAC1D,EAwBAphD,EAAYC,SAAW,WACnB,IAAI4+C,EAAa,CAAC,EAAGtsD,EAASn3D,OAAOumD,OAAOk9D,GAkB5C,OAjBAtsD,EAAOssD,EAAW,GAAK,aAAe,EACtCtsD,EAAOssD,EAAW,GAAK,SAAW,EAClCtsD,EAAOssD,EAAW,GAAK,SAAW,EAClCtsD,EAAOssD,EAAW,GAAK,QAAU,EACjCtsD,EAAOssD,EAAW,GAAK,UAAY,EACnCtsD,EAAOssD,EAAW,GAAK,SAAW,EAClCtsD,EAAOssD,EAAW,GAAK,SAAW,EAClCtsD,EAAOssD,EAAW,GAAK,SAAW,EAClCtsD,EAAOssD,EAAW,GAAK,UAAY,EACnCtsD,EAAOssD,EAAW,GAAK,QAAU,EACjCtsD,EAAOssD,EAAW,IAAM,WAAa,GACrCtsD,EAAOssD,EAAW,IAAM,UAAY,GACpCtsD,EAAOssD,EAAW,IAAM,UAAY,GACpCtsD,EAAOssD,EAAW,IAAM,UAAY,GACpCtsD,EAAOssD,EAAW,IAAM,aAAe,GACvCtsD,EAAOssD,EAAW,IAAM,cAAgB,GACxCtsD,EAAOssD,EAAW,IAAM,YAAc,GAC/BtsD,CACV,CApBsB,GAsBvByN,EAAYiiD,QAAU,WAkBlB,SAASA,EAAQzC,GACb,GAAIA,EACA,IAAK,IAAIvnG,EAAO7c,OAAO6c,KAAKunG,GAAahlH,EAAI,EAAGA,EAAIyd,EAAKtd,SAAUH,EACpC,MAAvBglH,EAAWvnG,EAAKzd,MAChBsD,KAAKma,EAAKzd,IAAMglH,EAAWvnG,EAAKzd,IAChD,CAoNA,OA5MAynH,EAAQxe,UAAUxhD,MAAQk9D,EAAM55C,KAAO45C,EAAM55C,KAAKzD,SAAS,EAAE,GAAE,GAAS,EAQxEmgD,EAAQxe,UAAUzjE,IAAMm/E,EAAM55C,KAAO45C,EAAM55C,KAAKzD,SAAS,EAAE,GAAE,GAAS,EAUtEmgD,EAAQtgE,OAAS,SAAgB69D,GAC7B,OAAO,IAAIyC,EAAQzC,EACvB,EAWAyC,EAAQhsG,OAAS,SAAgB+zD,EAAS41C,GAOtC,OANKA,IACDA,EAASX,EAAQt9D,UACA,MAAjBqoB,EAAQ/nB,OAAiB+nB,EAAQ3mE,eAAe,UAChDu8G,EAAOC,OAA8B,GAAGE,MAAM/1C,EAAQ/nB,OACvC,MAAf+nB,EAAQhqC,KAAegqC,EAAQ3mE,eAAe,QAC9Cu8G,EAAOC,OAA8B,IAAIE,MAAM/1C,EAAQhqC,KACpD4/E,CACX,EAWAqC,EAAQ9B,gBAAkB,SAAyBn2C,EAAS41C,GACxD,OAAO9hH,KAAKmY,OAAO+zD,EAAS41C,GAAQK,QACxC,EAaAgC,EAAQ/rG,OAAS,SAAgBkqG,EAAQzlH,GAC/BylH,aAAkBrB,IACpBqB,EAASrB,EAAQp9D,OAAOy+D,IAE5B,IADA,IAAIpgF,OAAiB1lC,IAAXK,EAAuBylH,EAAOhyE,IAAMgyE,EAAO14C,IAAM/sE,EAAQqvE,EAAU,IAAIq1C,EAAMl4G,KAAK64D,YAAYiiD,QACjG7B,EAAO14C,IAAM1nC,GAAK,CACrB,IAAIghD,EAAMo/B,EAAOP,SACjB,OAAQ7+B,IAAQ,GAChB,KAAK,EACDhX,EAAQ/nB,MAAQm+D,EAAOL,QACvB,MACJ,KAAK,EACD/1C,EAAQhqC,IAAMogF,EAAOL,QACrB,MACJ,QACIK,EAAOE,SAAe,EAANt/B,GAGxB,CACA,OAAOhX,CACX,EAYAi4C,EAAQ1B,gBAAkB,SAAyBH,GAG/C,OAFMA,aAAkBrB,IACpBqB,EAAS,IAAIrB,EAAQqB,IAClBtiH,KAAKoY,OAAOkqG,EAAQA,EAAOP,SACtC,EAUAoC,EAAQzB,OAAS,SAAgBx2C,GAC7B,MAAuB,iBAAZA,GAAoC,OAAZA,EACxB,kBACU,MAAjBA,EAAQ/nB,OAAiB+nB,EAAQ3mE,eAAe,YAC3C87G,EAAMz5G,UAAUskE,EAAQ/nB,QAAY+nB,EAAQ/nB,OAASk9D,EAAMz5G,UAAUskE,EAAQ/nB,MAAMwjB,MAAQ05C,EAAMz5G,UAAUskE,EAAQ/nB,MAAMyjB,OACnH,+BACI,MAAfsE,EAAQhqC,KAAegqC,EAAQ3mE,eAAe,UACzC87G,EAAMz5G,UAAUskE,EAAQhqC,MAAUgqC,EAAQhqC,KAAOm/E,EAAMz5G,UAAUskE,EAAQhqC,IAAIylC,MAAQ05C,EAAMz5G,UAAUskE,EAAQhqC,IAAI0lC,OAC3G,6BACR,IACX,EAUAu8C,EAAQxB,WAAa,SAAoBC,GACrC,GAAIA,aAAkBrB,EAAMl4G,KAAK64D,YAAYiiD,QACzC,OAAOvB,EACX,IAAI12C,EAAU,IAAIq1C,EAAMl4G,KAAK64D,YAAYiiD,QAmBzC,OAlBoB,MAAhBvB,EAAOz+D,QACHk9D,EAAM55C,MACLyE,EAAQ/nB,MAAQk9D,EAAM55C,KAAKC,UAAUk7C,EAAOz+D,QAAQqjB,UAAW,EACnC,iBAAjBo7C,EAAOz+D,MACnB+nB,EAAQ/nB,MAAQsC,SAASm8D,EAAOz+D,MAAO,IACV,iBAAjBy+D,EAAOz+D,MACnB+nB,EAAQ/nB,MAAQy+D,EAAOz+D,MACM,iBAAjBy+D,EAAOz+D,QACnB+nB,EAAQ/nB,MAAQ,IAAIk9D,EAAMwB,SAASD,EAAOz+D,MAAMwjB,MAAQ,EAAGi7C,EAAOz+D,MAAMyjB,OAAS,GAAGrE,aAC1E,MAAdq/C,EAAO1gF,MACHm/E,EAAM55C,MACLyE,EAAQhqC,IAAMm/E,EAAM55C,KAAKC,UAAUk7C,EAAO1gF,MAAMslC,UAAW,EACjC,iBAAfo7C,EAAO1gF,IACnBgqC,EAAQhqC,IAAMukB,SAASm8D,EAAO1gF,IAAK,IACR,iBAAf0gF,EAAO1gF,IACnBgqC,EAAQhqC,IAAM0gF,EAAO1gF,IACM,iBAAf0gF,EAAO1gF,MACnBgqC,EAAQhqC,IAAM,IAAIm/E,EAAMwB,SAASD,EAAO1gF,IAAIylC,MAAQ,EAAGi7C,EAAO1gF,IAAI0lC,OAAS,GAAGrE,aAC/E2I,CACX,EAWAi4C,EAAQrB,SAAW,SAAkB52C,EAAS/rE,GACrCA,IACDA,EAAU,CAAC,GACf,IAAIyiH,EAAS,CAAC,EACd,GAAIziH,EAAQ6iH,SAAU,CAClB,GAAI3B,EAAM55C,KAAM,CACZ,IAAIw7C,EAAO,IAAI5B,EAAM55C,KAAK,EAAG,GAAG,GAChCm7C,EAAOz+D,MAAQhkD,EAAQ+iH,QAAU3xB,OAAS0xB,EAAKltE,WAAa51C,EAAQ+iH,QAAUtjH,OAASqjH,EAAK1/C,WAAa0/C,CAC7G,MACIL,EAAOz+D,MAAQhkD,EAAQ+iH,QAAU3xB,OAAS,IAAM,EAChD8vB,EAAM55C,MACFw7C,EAAO,IAAI5B,EAAM55C,KAAK,EAAG,GAAG,GAChCm7C,EAAO1gF,IAAM/hC,EAAQ+iH,QAAU3xB,OAAS0xB,EAAKltE,WAAa51C,EAAQ+iH,QAAUtjH,OAASqjH,EAAK1/C,WAAa0/C,GAEvGL,EAAO1gF,IAAM/hC,EAAQ+iH,QAAU3xB,OAAS,IAAM,CACtD,CAWA,OAVqB,MAAjBrlB,EAAQ/nB,OAAiB+nB,EAAQ3mE,eAAe,WACnB,iBAAlB2mE,EAAQ/nB,MACfy+D,EAAOz+D,MAAQhkD,EAAQ+iH,QAAU3xB,OAASA,OAAOrlB,EAAQ/nB,OAAS+nB,EAAQ/nB,MAE1Ey+D,EAAOz+D,MAAQhkD,EAAQ+iH,QAAU3xB,OAAS8vB,EAAM55C,KAAKk+B,UAAU5vD,SAASvwC,KAAK0mE,EAAQ/nB,OAAShkD,EAAQ+iH,QAAUtjH,OAAS,IAAIyhH,EAAMwB,SAAS32C,EAAQ/nB,MAAMwjB,MAAQ,EAAGuE,EAAQ/nB,MAAMyjB,OAAS,GAAGrE,WAAa2I,EAAQ/nB,OACzM,MAAf+nB,EAAQhqC,KAAegqC,EAAQ3mE,eAAe,SACnB,iBAAhB2mE,EAAQhqC,IACf0gF,EAAO1gF,IAAM/hC,EAAQ+iH,QAAU3xB,OAASA,OAAOrlB,EAAQhqC,KAAOgqC,EAAQhqC,IAEtE0gF,EAAO1gF,IAAM/hC,EAAQ+iH,QAAU3xB,OAAS8vB,EAAM55C,KAAKk+B,UAAU5vD,SAASvwC,KAAK0mE,EAAQhqC,KAAO/hC,EAAQ+iH,QAAUtjH,OAAS,IAAIyhH,EAAMwB,SAAS32C,EAAQhqC,IAAIylC,MAAQ,EAAGuE,EAAQhqC,IAAI0lC,OAAS,GAAGrE,WAAa2I,EAAQhqC,KAC7M0gF,CACX,EASAuB,EAAQxe,UAAU4U,OAAS,WACvB,OAAOv6G,KAAK1B,YAAYwkH,SAAS9iH,KAAMghH,EAAUM,KAAKgC,cAC1D,EAEOa,CACV,CA5OqB,GAqPtBjiD,EAAYoiD,aAAe,WACvB,IAAIvD,EAAa,CAAC,EAAGtsD,EAASn3D,OAAOumD,OAAOk9D,GAG5C,OAFAtsD,EAAOssD,EAAW,GAAK,WAAa,EACpCtsD,EAAOssD,EAAW,GAAK,YAAc,EAC9BtsD,CACV,CAL0B,GAOpByN,CACV,CAn/BkB,GAq/BnB74D,EAAKk7G,iBAAmB,WAiBpB,SAASA,EAAiB7C,GAEtB,GADA1hH,KAAKL,IAAM,GACP+hH,EACA,IAAK,IAAIvnG,EAAO7c,OAAO6c,KAAKunG,GAAahlH,EAAI,EAAGA,EAAIyd,EAAKtd,SAAUH,EACpC,MAAvBglH,EAAWvnG,EAAKzd,MAChBsD,KAAKma,EAAKzd,IAAMglH,EAAWvnG,EAAKzd,IAChD,CAgcA,OAxbA6nH,EAAiB5e,UAAUhmG,IAAM0hH,EAAMQ,WAUvC0C,EAAiB1gE,OAAS,SAAgB69D,GACtC,OAAO,IAAI6C,EAAiB7C,EAChC,EAWA6C,EAAiBpsG,OAAS,SAAgB+zD,EAAS41C,GAG/C,GAFKA,IACDA,EAASX,EAAQt9D,UACF,MAAfqoB,EAAQvsE,KAAeusE,EAAQvsE,IAAI9C,OACnC,IAAK,IAAIH,EAAI,EAAGA,EAAIwvE,EAAQvsE,IAAI9C,SAAUH,EACtC6kH,EAAMl4G,KAAKk7G,iBAAiBz8D,UAAU3vC,OAAO+zD,EAAQvsE,IAAIjD,GAAIolH,EAAOC,OAA8B,IAAIG,QAAQC,SACtH,OAAOL,CACX,EAWAyC,EAAiBlC,gBAAkB,SAAyBn2C,EAAS41C,GACjE,OAAO9hH,KAAKmY,OAAO+zD,EAAS41C,GAAQK,QACxC,EAaAoC,EAAiBnsG,OAAS,SAAgBkqG,EAAQzlH,GACxCylH,aAAkBrB,IACpBqB,EAASrB,EAAQp9D,OAAOy+D,IAE5B,IADA,IAAIpgF,OAAiB1lC,IAAXK,EAAuBylH,EAAOhyE,IAAMgyE,EAAO14C,IAAM/sE,EAAQqvE,EAAU,IAAIq1C,EAAMl4G,KAAKk7G,iBACrFjC,EAAO14C,IAAM1nC,GAAK,CACrB,IAAIghD,EAAMo/B,EAAOP,SACT7+B,IAAQ,GACX,GACKhX,EAAQvsE,KAAOusE,EAAQvsE,IAAI9C,SAC7BqvE,EAAQvsE,IAAM,IAClBusE,EAAQvsE,IAAI7C,KAAKykH,EAAMl4G,KAAKk7G,iBAAiBz8D,UAAU1vC,OAAOkqG,EAAQA,EAAOP,YAG7EO,EAAOE,SAAe,EAANt/B,EAGxB,CACA,OAAOhX,CACX,EAYAq4C,EAAiB9B,gBAAkB,SAAyBH,GAGxD,OAFMA,aAAkBrB,IACpBqB,EAAS,IAAIrB,EAAQqB,IAClBtiH,KAAKoY,OAAOkqG,EAAQA,EAAOP,SACtC,EAUAwC,EAAiB7B,OAAS,SAAgBx2C,GACtC,GAAuB,iBAAZA,GAAoC,OAAZA,EAC/B,MAAO,kBACX,GAAmB,MAAfA,EAAQvsE,KAAeusE,EAAQ3mE,eAAe,OAAQ,CACtD,IAAKnG,MAAMC,QAAQ6sE,EAAQvsE,KACvB,MAAO,sBACX,IAAK,IAAIjD,EAAI,EAAGA,EAAIwvE,EAAQvsE,IAAI9C,SAAUH,EAAG,CACzC,IAAI2sC,EAAQk4E,EAAMl4G,KAAKk7G,iBAAiBz8D,UAAU46D,OAAOx2C,EAAQvsE,IAAIjD,IACrE,GAAI2sC,EACA,MAAO,OAASA,CACxB,CACJ,CACA,OAAO,IACX,EAUAk7E,EAAiB5B,WAAa,SAAoBC,GAC9C,GAAIA,aAAkBrB,EAAMl4G,KAAKk7G,iBAC7B,OAAO3B,EACX,IAAI12C,EAAU,IAAIq1C,EAAMl4G,KAAKk7G,iBAC7B,GAAI3B,EAAOjjH,IAAK,CACZ,IAAKP,MAAMC,QAAQujH,EAAOjjH,KACtB,MAAMrD,UAAU,8CACpB4vE,EAAQvsE,IAAM,GACd,IAAK,IAAIjD,EAAI,EAAGA,EAAIkmH,EAAOjjH,IAAI9C,SAAUH,EAAG,CACxC,GAA6B,iBAAlBkmH,EAAOjjH,IAAIjD,GAClB,MAAMJ,UAAU,+CACpB4vE,EAAQvsE,IAAIjD,GAAK6kH,EAAMl4G,KAAKk7G,iBAAiBz8D,UAAU66D,WAAWC,EAAOjjH,IAAIjD,GACjF,CACJ,CACA,OAAOwvE,CACX,EAWAq4C,EAAiBzB,SAAW,SAAkB52C,EAAS/rE,GAC9CA,IACDA,EAAU,CAAC,GACf,IAAIyiH,EAAS,CAAC,EAGd,IAFIziH,EAAQ4iH,QAAU5iH,EAAQ6iH,YAC1BJ,EAAOjjH,IAAM,IACbusE,EAAQvsE,KAAOusE,EAAQvsE,IAAI9C,OAAQ,CACnC+lH,EAAOjjH,IAAM,GACb,IAAK,IAAIiE,EAAI,EAAGA,EAAIsoE,EAAQvsE,IAAI9C,SAAU+G,EACtCg/G,EAAOjjH,IAAIiE,GAAK29G,EAAMl4G,KAAKk7G,iBAAiBz8D,UAAUg7D,SAAS52C,EAAQvsE,IAAIiE,GAAIzD,EACvF,CACA,OAAOyiH,CACX,EASA2B,EAAiB5e,UAAU4U,OAAS,WAChC,OAAOv6G,KAAK1B,YAAYwkH,SAAS9iH,KAAMghH,EAAUM,KAAKgC,cAC1D,EAEAiB,EAAiBz8D,UAAY,WAmBzB,SAASA,EAAU45D,GACf,GAAIA,EACA,IAAK,IAAIvnG,EAAO7c,OAAO6c,KAAKunG,GAAahlH,EAAI,EAAGA,EAAIyd,EAAKtd,SAAUH,EACpC,MAAvBglH,EAAWvnG,EAAKzd,MAChBsD,KAAKma,EAAKzd,IAAMglH,EAAWvnG,EAAKzd,IAChD,CA2BA,IAAI8nH,EAoNJ,OAvOA18D,EAAU69C,UAAUpmD,SAAW8hE,EAAM55C,KAAO45C,EAAM55C,KAAKzD,SAAS,EAAE,GAAE,GAAS,EAQ7Elc,EAAU69C,UAAUv7C,SAAW,GAQ/BtC,EAAU69C,UAAUx8C,WAAa,GAWjC7rD,OAAOC,eAAeuqD,EAAU69C,UAAW,QAAS,CAChDpmG,IAAK8hH,EAAMoD,YAAYD,EAAe,CAAC,WAAY,aACnDtlH,IAAKmiH,EAAMqD,YAAYF,KAW3B18D,EAAUjE,OAAS,SAAgB69D,GAC/B,OAAO,IAAI55D,EAAU45D,EACzB,EAWA55D,EAAU3vC,OAAS,SAAgB+zD,EAAS41C,GASxC,OARKA,IACDA,EAASX,EAAQt9D,UACG,MAApBqoB,EAAQ3sB,UAAoB2sB,EAAQ3mE,eAAe,aACnDu8G,EAAOC,OAA8B,GAAGE,MAAM/1C,EAAQ3sB,UAClC,MAApB2sB,EAAQ9hB,UAAoB8hB,EAAQ3mE,eAAe,aACnDu8G,EAAOC,OAA8B,IAAIhP,OAAO7mC,EAAQ9hB,UAClC,MAAtB8hB,EAAQ/iB,YAAsB+iB,EAAQ3mE,eAAe,eACrDu8G,EAAOC,OAA8B,IAAIhP,OAAO7mC,EAAQ/iB,YACrD24D,CACX,EAWAh6D,EAAUu6D,gBAAkB,SAAyBn2C,EAAS41C,GAC1D,OAAO9hH,KAAKmY,OAAO+zD,EAAS41C,GAAQK,QACxC,EAaAr6D,EAAU1vC,OAAS,SAAgBkqG,EAAQzlH,GACjCylH,aAAkBrB,IACpBqB,EAASrB,EAAQp9D,OAAOy+D,IAE5B,IADA,IAAIpgF,OAAiB1lC,IAAXK,EAAuBylH,EAAOhyE,IAAMgyE,EAAO14C,IAAM/sE,EAAQqvE,EAAU,IAAIq1C,EAAMl4G,KAAKk7G,iBAAiBz8D,UACtGw6D,EAAO14C,IAAM1nC,GAAK,CACrB,IAAIghD,EAAMo/B,EAAOP,SACjB,OAAQ7+B,IAAQ,GAChB,KAAK,EACDhX,EAAQ3sB,SAAW+iE,EAAOL,QAC1B,MACJ,KAAK,EACD/1C,EAAQ9hB,SAAWk4D,EAAOvP,SAC1B,MACJ,KAAK,EACD7mC,EAAQ/iB,WAAam5D,EAAOvP,SAC5B,MACJ,QACIuP,EAAOE,SAAe,EAANt/B,GAGxB,CACA,OAAOhX,CACX,EAYApkB,EAAU26D,gBAAkB,SAAyBH,GAGjD,OAFMA,aAAkBrB,IACpBqB,EAAS,IAAIrB,EAAQqB,IAClBtiH,KAAKoY,OAAOkqG,EAAQA,EAAOP,SACtC,EAUAj6D,EAAU46D,OAAS,SAAgBx2C,GAC/B,GAAuB,iBAAZA,GAAoC,OAAZA,EAC/B,MAAO,kBACX,IAAIw1C,EAAa,CAAC,EAClB,GAAwB,MAApBx1C,EAAQ3sB,UAAoB2sB,EAAQ3mE,eAAe,cACnDm8G,EAAWrkH,MAAQ,IACdgkH,EAAMz5G,UAAUskE,EAAQ3sB,WAAe2sB,EAAQ3sB,UAAY8hE,EAAMz5G,UAAUskE,EAAQ3sB,SAASooB,MAAQ05C,EAAMz5G,UAAUskE,EAAQ3sB,SAASqoB,QACtI,MAAO,kCAEf,GAAwB,MAApBsE,EAAQ9hB,UAAoB8hB,EAAQ3mE,eAAe,YAAa,CAChE,GAAyB,IAArBm8G,EAAWrkH,MACX,MAAO,yBAEX,GADAqkH,EAAWrkH,MAAQ,GACdgkH,EAAMn/G,SAASgqE,EAAQ9hB,UACxB,MAAO,2BACf,CACA,OAA0B,MAAtB8hB,EAAQ/iB,YAAsB+iB,EAAQ3mE,eAAe,gBAChD87G,EAAMn/G,SAASgqE,EAAQ/iB,YACjB,8BACR,IACX,EAUArB,EAAU66D,WAAa,SAAoBC,GACvC,GAAIA,aAAkBrB,EAAMl4G,KAAKk7G,iBAAiBz8D,UAC9C,OAAO86D,EACX,IAAI12C,EAAU,IAAIq1C,EAAMl4G,KAAKk7G,iBAAiBz8D,UAc9C,OAbuB,MAAnB86D,EAAOrjE,WACH8hE,EAAM55C,MACLyE,EAAQ3sB,SAAW8hE,EAAM55C,KAAKC,UAAUk7C,EAAOrjE,WAAWioB,UAAW,EACtC,iBAApBo7C,EAAOrjE,SACnB2sB,EAAQ3sB,SAAWkH,SAASm8D,EAAOrjE,SAAU,IACb,iBAApBqjE,EAAOrjE,SACnB2sB,EAAQ3sB,SAAWqjE,EAAOrjE,SACM,iBAApBqjE,EAAOrjE,WACnB2sB,EAAQ3sB,SAAW,IAAI8hE,EAAMwB,SAASD,EAAOrjE,SAASooB,MAAQ,EAAGi7C,EAAOrjE,SAASqoB,OAAS,GAAGrE,aAC9E,MAAnBq/C,EAAOx4D,WACP8hB,EAAQ9hB,SAAWmnC,OAAOqxB,EAAOx4D,WACZ,MAArBw4D,EAAOz5D,aACP+iB,EAAQ/iB,WAAaooC,OAAOqxB,EAAOz5D,aAChC+iB,CACX,EAWApkB,EAAUg7D,SAAW,SAAkB52C,EAAS/rE,GACvCA,IACDA,EAAU,CAAC,GACf,IAAIyiH,EAAS,CAAC,EAkBd,OAjBIziH,EAAQ6iH,WACRJ,EAAOz5D,WAAa,IACA,MAApB+iB,EAAQ3sB,UAAoB2sB,EAAQ3mE,eAAe,cACnB,iBAArB2mE,EAAQ3sB,SACfqjE,EAAOrjE,SAAWp/C,EAAQ+iH,QAAU3xB,OAASA,OAAOrlB,EAAQ3sB,UAAY2sB,EAAQ3sB,SAEhFqjE,EAAOrjE,SAAWp/C,EAAQ+iH,QAAU3xB,OAAS8vB,EAAM55C,KAAKk+B,UAAU5vD,SAASvwC,KAAK0mE,EAAQ3sB,UAAYp/C,EAAQ+iH,QAAUtjH,OAAS,IAAIyhH,EAAMwB,SAAS32C,EAAQ3sB,SAASooB,MAAQ,EAAGuE,EAAQ3sB,SAASqoB,OAAS,GAAGrE,WAAa2I,EAAQ3sB,SAChOp/C,EAAQwkH,SACR/B,EAAOvlH,MAAQ,aAEC,MAApB6uE,EAAQ9hB,UAAoB8hB,EAAQ3mE,eAAe,cACnDq9G,EAAOx4D,SAAW8hB,EAAQ9hB,SACtBjqD,EAAQwkH,SACR/B,EAAOvlH,MAAQ,aAEG,MAAtB6uE,EAAQ/iB,YAAsB+iB,EAAQ3mE,eAAe,gBACrDq9G,EAAOz5D,WAAa+iB,EAAQ/iB,YACzBy5D,CACX,EASA96D,EAAU69C,UAAU4U,OAAS,WACzB,OAAOv6G,KAAK1B,YAAYwkH,SAAS9iH,KAAMghH,EAAUM,KAAKgC,cAC1D,EAEOx7D,CACV,CAxQ4B,GA0QtBy8D,CACV,CAxduB,GA0dxBl7G,EAAKm6G,UAAY,WAkBb,SAASA,EAAU9B,GACf,GAAIA,EACA,IAAK,IAAIvnG,EAAO7c,OAAO6c,KAAKunG,GAAahlH,EAAI,EAAGA,EAAIyd,EAAKtd,SAAUH,EACpC,MAAvBglH,EAAWvnG,EAAKzd,MAChBsD,KAAKma,EAAKzd,IAAMglH,EAAWvnG,EAAKzd,IAChD,CAmBA,IAAI8nH,EAoZJ,OA/ZAhB,EAAU7d,UAAU7oD,WAAa,KAQjC0mE,EAAU7d,UAAUx8C,WAAa,GAWjC7rD,OAAOC,eAAeimH,EAAU7d,UAAW,QAAS,CAChDpmG,IAAK8hH,EAAMoD,YAAYD,EAAe,CAAC,eACvCtlH,IAAKmiH,EAAMqD,YAAYF,KAW3BhB,EAAU3/D,OAAS,SAAgB69D,GAC/B,OAAO,IAAI8B,EAAU9B,EACzB,EAWA8B,EAAUrrG,OAAS,SAAgB+zD,EAAS41C,GAOxC,OANKA,IACDA,EAASX,EAAQt9D,UACK,MAAtBqoB,EAAQpvB,YAAsBovB,EAAQ3mE,eAAe,eACrDg8G,EAAMl4G,KAAKm6G,UAAUnlH,OAAO8Z,OAAO+zD,EAAQpvB,WAAYglE,EAAOC,OAA8B,IAAIG,QAAQC,SAClF,MAAtBj2C,EAAQ/iB,YAAsB+iB,EAAQ3mE,eAAe,eACrDu8G,EAAOC,OAA8B,IAAIhP,OAAO7mC,EAAQ/iB,YACrD24D,CACX,EAWA0B,EAAUnB,gBAAkB,SAAyBn2C,EAAS41C,GAC1D,OAAO9hH,KAAKmY,OAAO+zD,EAAS41C,GAAQK,QACxC,EAaAqB,EAAUprG,OAAS,SAAgBkqG,EAAQzlH,GACjCylH,aAAkBrB,IACpBqB,EAASrB,EAAQp9D,OAAOy+D,IAE5B,IADA,IAAIpgF,OAAiB1lC,IAAXK,EAAuBylH,EAAOhyE,IAAMgyE,EAAO14C,IAAM/sE,EAAQqvE,EAAU,IAAIq1C,EAAMl4G,KAAKm6G,UACrFlB,EAAO14C,IAAM1nC,GAAK,CACrB,IAAIghD,EAAMo/B,EAAOP,SACjB,OAAQ7+B,IAAQ,GAChB,KAAK,EACDhX,EAAQpvB,WAAaykE,EAAMl4G,KAAKm6G,UAAUnlH,OAAO+Z,OAAOkqG,EAAQA,EAAOP,UACvE,MACJ,KAAK,EACD71C,EAAQ/iB,WAAam5D,EAAOvP,SAC5B,MACJ,QACIuP,EAAOE,SAAe,EAANt/B,GAGxB,CACA,OAAOhX,CACX,EAYAs3C,EAAUf,gBAAkB,SAAyBH,GAGjD,OAFMA,aAAkBrB,IACpBqB,EAAS,IAAIrB,EAAQqB,IAClBtiH,KAAKoY,OAAOkqG,EAAQA,EAAOP,SACtC,EAUAyB,EAAUd,OAAS,SAAgBx2C,GAC/B,GAAuB,iBAAZA,GAAoC,OAAZA,EAC/B,MAAO,kBAEX,GAA0B,MAAtBA,EAAQpvB,YAAsBovB,EAAQ3mE,eAAe,cAAe,CAGhE,IAAI8jC,EAAQk4E,EAAMl4G,KAAKm6G,UAAUnlH,OAAOqkH,OAAOx2C,EAAQpvB,YACvD,GAAIzT,EACA,MAAO,cAAgBA,CAEnC,CACA,OAA0B,MAAtB6iC,EAAQ/iB,YAAsB+iB,EAAQ3mE,eAAe,gBAChD87G,EAAMn/G,SAASgqE,EAAQ/iB,YACjB,8BACR,IACX,EAUAq6D,EAAUb,WAAa,SAAoBC,GACvC,GAAIA,aAAkBrB,EAAMl4G,KAAKm6G,UAC7B,OAAOZ,EACX,IAAI12C,EAAU,IAAIq1C,EAAMl4G,KAAKm6G,UAC7B,GAAyB,MAArBZ,EAAO9lE,WAAoB,CAC3B,GAAiC,iBAAtB8lE,EAAO9lE,WACd,MAAMxgD,UAAU,+CACpB4vE,EAAQpvB,WAAaykE,EAAMl4G,KAAKm6G,UAAUnlH,OAAOskH,WAAWC,EAAO9lE,WACvE,CAGA,OAFyB,MAArB8lE,EAAOz5D,aACP+iB,EAAQ/iB,WAAaooC,OAAOqxB,EAAOz5D,aAChC+iB,CACX,EAWAs3C,EAAUV,SAAW,SAAkB52C,EAAS/rE,GACvCA,IACDA,EAAU,CAAC,GACf,IAAIyiH,EAAS,CAAC,EAUd,OATIziH,EAAQ6iH,WACRJ,EAAOz5D,WAAa,IACE,MAAtB+iB,EAAQpvB,YAAsBovB,EAAQ3mE,eAAe,gBACrDq9G,EAAO9lE,WAAaykE,EAAMl4G,KAAKm6G,UAAUnlH,OAAOykH,SAAS52C,EAAQpvB,WAAY38C,GACzEA,EAAQwkH,SACR/B,EAAOvlH,MAAQ,eAEG,MAAtB6uE,EAAQ/iB,YAAsB+iB,EAAQ3mE,eAAe,gBACrDq9G,EAAOz5D,WAAa+iB,EAAQ/iB,YACzBy5D,CACX,EASAY,EAAU7d,UAAU4U,OAAS,WACzB,OAAOv6G,KAAK1B,YAAYwkH,SAAS9iH,KAAMghH,EAAUM,KAAKgC,cAC1D,EAEAE,EAAUnlH,OAAS,WAkBf,SAASA,EAAOqjH,GACZ,GAAIA,EACA,IAAK,IAAIvnG,EAAO7c,OAAO6c,KAAKunG,GAAahlH,EAAI,EAAGA,EAAIyd,EAAKtd,SAAUH,EACpC,MAAvBglH,EAAWvnG,EAAKzd,MAChBsD,KAAKma,EAAKzd,IAAMglH,EAAWvnG,EAAKzd,IAChD,CA6LA,OArLA2B,EAAOsnG,UAAUtmD,SAAW,EAQ5BhhD,EAAOsnG,UAAUp1F,MAAQ,KAUzBlS,EAAOwlD,OAAS,SAAgB69D,GAC5B,OAAO,IAAIrjH,EAAOqjH,EACtB,EAWArjH,EAAO8Z,OAAS,SAAgB+zD,EAAS41C,GAOrC,OANKA,IACDA,EAASX,EAAQt9D,UACG,MAApBqoB,EAAQ7sB,UAAoB6sB,EAAQ3mE,eAAe,aACnDu8G,EAAOC,OAA8B,GAAGK,MAAMl2C,EAAQ7sB,UACrC,MAAjB6sB,EAAQ37D,OAAiB27D,EAAQ3mE,eAAe,UAChDg8G,EAAMl4G,KAAKk7G,iBAAiBpsG,OAAO+zD,EAAQ37D,MAAOuxG,EAAOC,OAA8B,IAAIG,QAAQC,SAChGL,CACX,EAWAzjH,EAAOgkH,gBAAkB,SAAyBn2C,EAAS41C,GACvD,OAAO9hH,KAAKmY,OAAO+zD,EAAS41C,GAAQK,QACxC,EAaA9jH,EAAO+Z,OAAS,SAAgBkqG,EAAQzlH,GAC9BylH,aAAkBrB,IACpBqB,EAASrB,EAAQp9D,OAAOy+D,IAE5B,IADA,IAAIpgF,OAAiB1lC,IAAXK,EAAuBylH,EAAOhyE,IAAMgyE,EAAO14C,IAAM/sE,EAAQqvE,EAAU,IAAIq1C,EAAMl4G,KAAKm6G,UAAUnlH,OAC/FikH,EAAO14C,IAAM1nC,GAAK,CACrB,IAAIghD,EAAMo/B,EAAOP,SACjB,OAAQ7+B,IAAQ,GAChB,KAAK,EACDhX,EAAQ7sB,SAAWijE,EAAOF,QAC1B,MACJ,KAAK,EACDl2C,EAAQ37D,MAAQgxG,EAAMl4G,KAAKk7G,iBAAiBnsG,OAAOkqG,EAAQA,EAAOP,UAClE,MACJ,QACIO,EAAOE,SAAe,EAANt/B,GAGxB,CACA,OAAOhX,CACX,EAYA7tE,EAAOokH,gBAAkB,SAAyBH,GAG9C,OAFMA,aAAkBrB,IACpBqB,EAAS,IAAIrB,EAAQqB,IAClBtiH,KAAKoY,OAAOkqG,EAAQA,EAAOP,SACtC,EAUA1jH,EAAOqkH,OAAS,SAAgBx2C,GAC5B,GAAuB,iBAAZA,GAAoC,OAAZA,EAC/B,MAAO,kBACX,GAAwB,MAApBA,EAAQ7sB,UAAoB6sB,EAAQ3mE,eAAe,cAC9C87G,EAAMz5G,UAAUskE,EAAQ7sB,UACzB,MAAO,6BACf,GAAqB,MAAjB6sB,EAAQ37D,OAAiB27D,EAAQ3mE,eAAe,SAAU,CAC1D,IAAI8jC,EAAQk4E,EAAMl4G,KAAKk7G,iBAAiB7B,OAAOx2C,EAAQ37D,OACvD,GAAI84B,EACA,MAAO,SAAWA,CAC1B,CACA,OAAO,IACX,EAUAhrC,EAAOskH,WAAa,SAAoBC,GACpC,GAAIA,aAAkBrB,EAAMl4G,KAAKm6G,UAAUnlH,OACvC,OAAOukH,EACX,IAAI12C,EAAU,IAAIq1C,EAAMl4G,KAAKm6G,UAAUnlH,OAGvC,GAFuB,MAAnBukH,EAAOvjE,WACP6sB,EAAQ7sB,SAA6B,EAAlBujE,EAAOvjE,UACV,MAAhBujE,EAAOryG,MAAe,CACtB,GAA4B,iBAAjBqyG,EAAOryG,MACd,MAAMjU,UAAU,iDACpB4vE,EAAQ37D,MAAQgxG,EAAMl4G,KAAKk7G,iBAAiB5B,WAAWC,EAAOryG,MAClE,CACA,OAAO27D,CACX,EAWA7tE,EAAOykH,SAAW,SAAkB52C,EAAS/rE,GACpCA,IACDA,EAAU,CAAC,GACf,IAAIyiH,EAAS,CAAC,EASd,OARIziH,EAAQ6iH,WACRJ,EAAOvjE,SAAW,EAClBujE,EAAOryG,MAAQ,MAEK,MAApB27D,EAAQ7sB,UAAoB6sB,EAAQ3mE,eAAe,cACnDq9G,EAAOvjE,SAAW6sB,EAAQ7sB,UACT,MAAjB6sB,EAAQ37D,OAAiB27D,EAAQ3mE,eAAe,WAChDq9G,EAAOryG,MAAQgxG,EAAMl4G,KAAKk7G,iBAAiBzB,SAAS52C,EAAQ37D,MAAOpQ,IAChEyiH,CACX,EASAvkH,EAAOsnG,UAAU4U,OAAS,WACtB,OAAOv6G,KAAK1B,YAAYwkH,SAAS9iH,KAAMghH,EAAUM,KAAKgC,cAC1D,EAEOjlH,CACV,CArNkB,GAuNZmlH,CACV,CA/bgB,GAicjBn6G,EAAKq6G,mBAAqB,WAkBtB,SAASA,EAAmBhC,GACxB,GAAIA,EACA,IAAK,IAAIvnG,EAAO7c,OAAO6c,KAAKunG,GAAahlH,EAAI,EAAGA,EAAIyd,EAAKtd,SAAUH,EACpC,MAAvBglH,EAAWvnG,EAAKzd,MAChBsD,KAAKma,EAAKzd,IAAMglH,EAAWvnG,EAAKzd,IAChD,CAsMA,OA9LAgnH,EAAmB/d,UAAUlgD,OAAS,GAQtCi+D,EAAmB/d,UAAU91F,QAAUwxG,EAAM55C,KAAO45C,EAAM55C,KAAKzD,SAAS,EAAE,GAAE,GAAS,EAUrF0/C,EAAmB7/D,OAAS,SAAgB69D,GACxC,OAAO,IAAIgC,EAAmBhC,EAClC,EAWAgC,EAAmBvrG,OAAS,SAAgB+zD,EAAS41C,GAOjD,OANKA,IACDA,EAASX,EAAQt9D,UACC,MAAlBqoB,EAAQzmB,QAAkBymB,EAAQ3mE,eAAe,WACjDu8G,EAAOC,OAA8B,IAAIhP,OAAO7mC,EAAQzmB,QACrC,MAAnBymB,EAAQr8D,SAAmBq8D,EAAQ3mE,eAAe,YAClDu8G,EAAOC,OAA8B,IAAIE,MAAM/1C,EAAQr8D,SACpDiyG,CACX,EAWA4B,EAAmBrB,gBAAkB,SAAyBn2C,EAAS41C,GACnE,OAAO9hH,KAAKmY,OAAO+zD,EAAS41C,GAAQK,QACxC,EAaAuB,EAAmBtrG,OAAS,SAAgBkqG,EAAQzlH,GAC1CylH,aAAkBrB,IACpBqB,EAASrB,EAAQp9D,OAAOy+D,IAE5B,IADA,IAAIpgF,OAAiB1lC,IAAXK,EAAuBylH,EAAOhyE,IAAMgyE,EAAO14C,IAAM/sE,EAAQqvE,EAAU,IAAIq1C,EAAMl4G,KAAKq6G,mBACrFpB,EAAO14C,IAAM1nC,GAAK,CACrB,IAAIghD,EAAMo/B,EAAOP,SACjB,OAAQ7+B,IAAQ,GAChB,KAAK,EACDhX,EAAQzmB,OAAS68D,EAAOvP,SACxB,MACJ,KAAK,EACD7mC,EAAQr8D,QAAUyyG,EAAOL,QACzB,MACJ,QACIK,EAAOE,SAAe,EAANt/B,GAGxB,CACA,OAAOhX,CACX,EAYAw3C,EAAmBjB,gBAAkB,SAAyBH,GAG1D,OAFMA,aAAkBrB,IACpBqB,EAAS,IAAIrB,EAAQqB,IAClBtiH,KAAKoY,OAAOkqG,EAAQA,EAAOP,SACtC,EAUA2B,EAAmBhB,OAAS,SAAgBx2C,GACxC,MAAuB,iBAAZA,GAAoC,OAAZA,EACxB,kBACW,MAAlBA,EAAQzmB,QAAkBymB,EAAQ3mE,eAAe,YAC5C87G,EAAMn/G,SAASgqE,EAAQzmB,QACjB,0BACQ,MAAnBymB,EAAQr8D,SAAmBq8D,EAAQ3mE,eAAe,cAC7C87G,EAAMz5G,UAAUskE,EAAQr8D,UAAcq8D,EAAQr8D,SAAWwxG,EAAMz5G,UAAUskE,EAAQr8D,QAAQ83D,MAAQ05C,EAAMz5G,UAAUskE,EAAQr8D,QAAQ+3D,OAC3H,iCACR,IACX,EAUA87C,EAAmBf,WAAa,SAAoBC,GAChD,GAAIA,aAAkBrB,EAAMl4G,KAAKq6G,mBAC7B,OAAOd,EACX,IAAI12C,EAAU,IAAIq1C,EAAMl4G,KAAKq6G,mBAY7B,OAXqB,MAAjBd,EAAOn9D,SACPymB,EAAQzmB,OAAS8rC,OAAOqxB,EAAOn9D,SACb,MAAlBm9D,EAAO/yG,UACHwxG,EAAM55C,MACLyE,EAAQr8D,QAAUwxG,EAAM55C,KAAKC,UAAUk7C,EAAO/yG,UAAU23D,UAAW,EACrC,iBAAnBo7C,EAAO/yG,QACnBq8D,EAAQr8D,QAAU42C,SAASm8D,EAAO/yG,QAAS,IACZ,iBAAnB+yG,EAAO/yG,QACnBq8D,EAAQr8D,QAAU+yG,EAAO/yG,QACM,iBAAnB+yG,EAAO/yG,UACnBq8D,EAAQr8D,QAAU,IAAIwxG,EAAMwB,SAASD,EAAO/yG,QAAQ83D,MAAQ,EAAGi7C,EAAO/yG,QAAQ+3D,OAAS,GAAGrE,aAC3F2I,CACX,EAWAw3C,EAAmBZ,SAAW,SAAkB52C,EAAS/rE,GAChDA,IACDA,EAAU,CAAC,GACf,IAAIyiH,EAAS,CAAC,EACd,GAAIziH,EAAQ6iH,SAER,GADAJ,EAAOn9D,OAAS,GACZ47D,EAAM55C,KAAM,CACZ,IAAIw7C,EAAO,IAAI5B,EAAM55C,KAAK,EAAG,GAAG,GAChCm7C,EAAO/yG,QAAU1P,EAAQ+iH,QAAU3xB,OAAS0xB,EAAKltE,WAAa51C,EAAQ+iH,QAAUtjH,OAASqjH,EAAK1/C,WAAa0/C,CAC/G,MACIL,EAAO/yG,QAAU1P,EAAQ+iH,QAAU3xB,OAAS,IAAM,EAS1D,OAPsB,MAAlBrlB,EAAQzmB,QAAkBymB,EAAQ3mE,eAAe,YACjDq9G,EAAOn9D,OAASymB,EAAQzmB,QACL,MAAnBymB,EAAQr8D,SAAmBq8D,EAAQ3mE,eAAe,aACnB,iBAApB2mE,EAAQr8D,QACf+yG,EAAO/yG,QAAU1P,EAAQ+iH,QAAU3xB,OAASA,OAAOrlB,EAAQr8D,SAAWq8D,EAAQr8D,QAE9E+yG,EAAO/yG,QAAU1P,EAAQ+iH,QAAU3xB,OAAS8vB,EAAM55C,KAAKk+B,UAAU5vD,SAASvwC,KAAK0mE,EAAQr8D,SAAW1P,EAAQ+iH,QAAUtjH,OAAS,IAAIyhH,EAAMwB,SAAS32C,EAAQr8D,QAAQ83D,MAAQ,EAAGuE,EAAQr8D,QAAQ+3D,OAAS,GAAGrE,WAAa2I,EAAQr8D,SAC7N+yG,CACX,EASAc,EAAmB/d,UAAU4U,OAAS,WAClC,OAAOv6G,KAAK1B,YAAYwkH,SAAS9iH,KAAMghH,EAAUM,KAAKgC,cAC1D,EAEOI,CACV,CA9NyB,GAgOnBr6G,GAGX3N,EAAOD,QAAU8lH,C,oCCpxJjB7lH,EAAOD,QAAU,EAAjB,K,oCCFA,IAAImpH,EAAWnpH,EA2Bf,SAASopH,IACLD,EAAStD,KAAKwD,aACdF,EAASxD,OAAO0D,WAAWF,EAASG,cACpCH,EAAS1D,OAAO4D,WAAWF,EAASI,aACxC,CAvBAJ,EAAShmG,MAAQ,UAGjBgmG,EAASxD,OAAe,EAAQ,MAChCwD,EAASG,aAAe,EAAQ,MAChCH,EAAS1D,OAAe,EAAQ,MAChC0D,EAASI,aAAe,EAAQ,KAGhCJ,EAAStD,KAAe,EAAQ,MAChCsD,EAASK,IAAe,EAAQ,MAChCL,EAASpD,MAAe,EAAQ,MAChCoD,EAASC,UAAeA,EAcxBA,G,oCClCAnpH,EAAOD,QAAUylH,EAEjB,IAEI8D,EAFA1D,EAAY,EAAQ,MAIpBuB,EAAYvB,EAAKuB,SACjBtJ,EAAY+H,EAAK/H,KAGrB,SAAS2L,EAAgB5C,EAAQ6C,GAC7B,OAAOrlH,WAAW,uBAAyBwiH,EAAO14C,IAAM,OAASu7C,GAAe,GAAK,MAAQ7C,EAAOhyE,IACxG,CAQA,SAAS4wE,EAAOhhH,GAMZF,KAAKglD,IAAM9kD,EAMXF,KAAK4pE,IAAM,EAMX5pE,KAAKswC,IAAMpwC,EAAOrD,MACtB,CAEA,IA4CQQ,EA5CJ+nH,EAAqC,oBAAfxnH,WACpB,SAA4BsC,GAC1B,GAAIA,aAAkBtC,YAAcwB,MAAMC,QAAQa,GAC9C,OAAO,IAAIghH,EAAOhhH,GACtB,MAAMzD,MAAM,iBAChB,EAEE,SAAsByD,GACpB,GAAId,MAAMC,QAAQa,GACd,OAAO,IAAIghH,EAAOhhH,GACtB,MAAMzD,MAAM,iBAChB,EAEAonD,EAAS,WACT,OAAOy9D,EAAK+D,OACN,SAA6BnlH,GAC3B,OAAQghH,EAAOr9D,OAAS,SAAuB3jD,GAC3C,OAAOohH,EAAK+D,OAAOC,SAASplH,GACtB,IAAI8kH,EAAa9kH,GAEjBklH,EAAallH,EACvB,GAAGA,EACP,EAEEklH,CACV,EAuDA,SAASG,IAEL,IAAIC,EAAO,IAAI3C,EAAS,EAAG,GACvBnmH,EAAI,EACR,KAAIsD,KAAKswC,IAAMtwC,KAAK4pE,IAAM,GAanB,CACH,KAAOltE,EAAI,IAAKA,EAAG,CAEf,GAAIsD,KAAK4pE,KAAO5pE,KAAKswC,IACjB,MAAM40E,EAAgBllH,MAG1B,GADAwlH,EAAK1M,IAAM0M,EAAK1M,IAA2B,IAArB94G,KAAKglD,IAAIhlD,KAAK4pE,OAAmB,EAAJltE,KAAW,EAC1DsD,KAAKglD,IAAIhlD,KAAK4pE,OAAS,IACvB,OAAO47C,CACf,CAGA,OADAA,EAAK1M,IAAM0M,EAAK1M,IAA6B,IAAvB94G,KAAKglD,IAAIhlD,KAAK4pE,SAAqB,EAAJltE,KAAW,EACzD8oH,CACX,CAzBI,KAAO9oH,EAAI,IAAKA,EAGZ,GADA8oH,EAAK1M,IAAM0M,EAAK1M,IAA2B,IAArB94G,KAAKglD,IAAIhlD,KAAK4pE,OAAmB,EAAJltE,KAAW,EAC1DsD,KAAKglD,IAAIhlD,KAAK4pE,OAAS,IACvB,OAAO47C,EAKf,GAFAA,EAAK1M,IAAM0M,EAAK1M,IAA2B,IAArB94G,KAAKglD,IAAIhlD,KAAK4pE,OAAe,MAAQ,EAC3D47C,EAAKzM,IAAMyM,EAAKzM,IAA2B,IAArB/4G,KAAKglD,IAAIhlD,KAAK4pE,OAAgB,KAAO,EACvD5pE,KAAKglD,IAAIhlD,KAAK4pE,OAAS,IACvB,OAAO47C,EAgBf,GAfI9oH,EAAI,EAeJsD,KAAKswC,IAAMtwC,KAAK4pE,IAAM,GACtB,KAAOltE,EAAI,IAAKA,EAGZ,GADA8oH,EAAKzM,IAAMyM,EAAKzM,IAA2B,IAArB/4G,KAAKglD,IAAIhlD,KAAK4pE,OAAmB,EAAJltE,EAAQ,KAAO,EAC9DsD,KAAKglD,IAAIhlD,KAAK4pE,OAAS,IACvB,OAAO47C,OAGf,KAAO9oH,EAAI,IAAKA,EAAG,CAEf,GAAIsD,KAAK4pE,KAAO5pE,KAAKswC,IACjB,MAAM40E,EAAgBllH,MAG1B,GADAwlH,EAAKzM,IAAMyM,EAAKzM,IAA2B,IAArB/4G,KAAKglD,IAAIhlD,KAAK4pE,OAAmB,EAAJltE,EAAQ,KAAO,EAC9DsD,KAAKglD,IAAIhlD,KAAK4pE,OAAS,IACvB,OAAO47C,CACf,CAGJ,MAAM/oH,MAAM,0BAChB,CAiCA,SAASgpH,EAAgBzgE,EAAK9iB,GAC1B,OAAQ8iB,EAAI9iB,EAAM,GACV8iB,EAAI9iB,EAAM,IAAM,EAChB8iB,EAAI9iB,EAAM,IAAM,GAChB8iB,EAAI9iB,EAAM,IAAM,MAAQ,CACpC,CA8BA,SAASwjF,IAGL,GAAI1lH,KAAK4pE,IAAM,EAAI5pE,KAAKswC,IACpB,MAAM40E,EAAgBllH,KAAM,GAEhC,OAAO,IAAI6iH,EAAS4C,EAAgBzlH,KAAKglD,IAAKhlD,KAAK4pE,KAAO,GAAI67C,EAAgBzlH,KAAKglD,IAAKhlD,KAAK4pE,KAAO,GACxG,CA5KAs3C,EAAOr9D,OAASA,IAEhBq9D,EAAOvb,UAAUggB,OAASrE,EAAKliH,MAAMumG,UAAU5lF,UAAuCuhG,EAAKliH,MAAMumG,UAAU/wF,MAO3GssG,EAAOvb,UAAUoc,QACT1kH,EAAQ,WACL,WACuD,GAA1DA,GAAuC,IAArB2C,KAAKglD,IAAIhlD,KAAK4pE,QAAuB,EAAO5pE,KAAKglD,IAAIhlD,KAAK4pE,OAAS,IAAK,OAAOvsE,EACvC,GAA1DA,GAASA,GAA8B,IAArB2C,KAAKglD,IAAIhlD,KAAK4pE,OAAgB,KAAO,EAAO5pE,KAAKglD,IAAIhlD,KAAK4pE,OAAS,IAAK,OAAOvsE,EACvC,GAA1DA,GAASA,GAA8B,IAArB2C,KAAKglD,IAAIhlD,KAAK4pE,OAAe,MAAQ,EAAO5pE,KAAKglD,IAAIhlD,KAAK4pE,OAAS,IAAK,OAAOvsE,EACvC,GAA1DA,GAASA,GAA8B,IAArB2C,KAAKglD,IAAIhlD,KAAK4pE,OAAe,MAAQ,EAAO5pE,KAAKglD,IAAIhlD,KAAK4pE,OAAS,IAAK,OAAOvsE,EACvC,GAA1DA,GAASA,GAA+B,GAAtB2C,KAAKglD,IAAIhlD,KAAK4pE,OAAe,MAAQ,EAAO5pE,KAAKglD,IAAIhlD,KAAK4pE,OAAS,IAAK,OAAOvsE,EAGjG,IAAK2C,KAAK4pE,KAAO,GAAK5pE,KAAKswC,IAEvB,MADAtwC,KAAK4pE,IAAM5pE,KAAKswC,IACV40E,EAAgBllH,KAAM,IAEhC,OAAO3C,CACX,GAOJ6jH,EAAOvb,UAAUyc,MAAQ,WACrB,OAAuB,EAAhBpiH,KAAK+hH,QAChB,EAMAb,EAAOvb,UAAUigB,OAAS,WACtB,IAAIvoH,EAAQ2C,KAAK+hH,SACjB,OAAO1kH,IAAU,IAAc,EAARA,GAAa,CACxC,EAoFA6jH,EAAOvb,UAAUkgB,KAAO,WACpB,OAAyB,IAAlB7lH,KAAK+hH,QAChB,EAaAb,EAAOvb,UAAUmgB,QAAU,WAGvB,GAAI9lH,KAAK4pE,IAAM,EAAI5pE,KAAKswC,IACpB,MAAM40E,EAAgBllH,KAAM,GAEhC,OAAOylH,EAAgBzlH,KAAKglD,IAAKhlD,KAAK4pE,KAAO,EACjD,EAMAs3C,EAAOvb,UAAUogB,SAAW,WAGxB,GAAI/lH,KAAK4pE,IAAM,EAAI5pE,KAAKswC,IACpB,MAAM40E,EAAgBllH,KAAM,GAEhC,OAAkD,EAA3CylH,EAAgBzlH,KAAKglD,IAAKhlD,KAAK4pE,KAAO,EACjD,EAkCAs3C,EAAOvb,UAAUqc,MAAQ,WAGrB,GAAIhiH,KAAK4pE,IAAM,EAAI5pE,KAAKswC,IACpB,MAAM40E,EAAgBllH,KAAM,GAEhC,IAAI3C,EAAQikH,EAAKU,MAAMjL,YAAY/2G,KAAKglD,IAAKhlD,KAAK4pE,KAElD,OADA5pE,KAAK4pE,KAAO,EACLvsE,CACX,EAOA6jH,EAAOvb,UAAUye,OAAS,WAGtB,GAAIpkH,KAAK4pE,IAAM,EAAI5pE,KAAKswC,IACpB,MAAM40E,EAAgBllH,KAAM,GAEhC,IAAI3C,EAAQikH,EAAKU,MAAMxJ,aAAax4G,KAAKglD,IAAKhlD,KAAK4pE,KAEnD,OADA5pE,KAAK4pE,KAAO,EACLvsE,CACX,EAMA6jH,EAAOvb,UAAU72C,MAAQ,WACrB,IAAIjyD,EAASmD,KAAK+hH,SACdxkF,EAASv9B,KAAK4pE,IACd1nC,EAASliC,KAAK4pE,IAAM/sE,EAGxB,GAAIqlC,EAAMliC,KAAKswC,IACX,MAAM40E,EAAgBllH,KAAMnD,GAGhC,OADAmD,KAAK4pE,KAAO/sE,EACRuC,MAAMC,QAAQW,KAAKglD,KACZhlD,KAAKglD,IAAIpwC,MAAM2oB,EAAO2E,GAC1B3E,IAAU2E,EACX,IAAIliC,KAAKglD,IAAI1mD,YAAY,GACzB0B,KAAK2lH,OAAOngH,KAAKxF,KAAKglD,IAAKznB,EAAO2E,EAC5C,EAMAg/E,EAAOvb,UAAUoN,OAAS,WACtB,IAAIjkD,EAAQ9uD,KAAK8uD,QACjB,OAAOyqD,EAAKC,KAAK1qD,EAAO,EAAGA,EAAMjyD,OACrC,EAOAqkH,EAAOvb,UAAUqgB,KAAO,SAAcnpH,GAClC,GAAsB,iBAAXA,EAAqB,CAE5B,GAAImD,KAAK4pE,IAAM/sE,EAASmD,KAAKswC,IACzB,MAAM40E,EAAgBllH,KAAMnD,GAChCmD,KAAK4pE,KAAO/sE,CAChB,MACI,GAEI,GAAImD,KAAK4pE,KAAO5pE,KAAKswC,IACjB,MAAM40E,EAAgBllH,YACE,IAAvBA,KAAKglD,IAAIhlD,KAAK4pE,QAE3B,OAAO5pE,IACX,EAOAkhH,EAAOvb,UAAU6c,SAAW,SAASyD,GACjC,OAAQA,GACJ,KAAK,EACDjmH,KAAKgmH,OACL,MACJ,KAAK,EACDhmH,KAAKgmH,KAAK,GACV,MACJ,KAAK,EACDhmH,KAAKgmH,KAAKhmH,KAAK+hH,UACf,MACJ,KAAK,EACD,KAA0C,IAAlCkE,EAA2B,EAAhBjmH,KAAK+hH,WACpB/hH,KAAKwiH,SAASyD,GAElB,MACJ,KAAK,EACDjmH,KAAKgmH,KAAK,GACV,MAGJ,QACI,MAAMvpH,MAAM,qBAAuBwpH,EAAW,cAAgBjmH,KAAK4pE,KAE3E,OAAO5pE,IACX,EAEAkhH,EAAO4D,WAAa,SAASoB,GACzBlB,EAAekB,EACfhF,EAAOr9D,OAASA,IAChBmhE,EAAaF,aAEb,IAAIxqB,EAAKgnB,EAAK75C,KAAO,SAAsC,WAC3D65C,EAAK6E,MAAMjF,EAAOvb,UAAW,CAEzBsc,MAAO,WACH,OAAOsD,EAAe//G,KAAKxF,MAAMs6F,IAAI,EACzC,EAEA+pB,OAAQ,WACJ,OAAOkB,EAAe//G,KAAKxF,MAAMs6F,IAAI,EACzC,EAEA8rB,OAAQ,WACJ,OAAOb,EAAe//G,KAAKxF,MAAMqmH,WAAW/rB,IAAI,EACpD,EAEAgsB,QAAS,WACL,OAAOZ,EAAYlgH,KAAKxF,MAAMs6F,IAAI,EACtC,EAEAisB,SAAU,WACN,OAAOb,EAAYlgH,KAAKxF,MAAMs6F,IAAI,EACtC,GAGR,C,mCCzZA5+F,EAAOD,QAAUupH,EAGjB,IAAI9D,EAAS,EAAQ,OACpB8D,EAAarf,UAAYroG,OAAOumD,OAAOq9D,EAAOvb,YAAYrnG,YAAc0mH,EAEzE,IAAI1D,EAAO,EAAQ,MASnB,SAAS0D,EAAa9kH,GAClBghH,EAAO17G,KAAKxF,KAAME,EAOtB,CAEA8kH,EAAaF,WAAa,WAElBxD,EAAK+D,SACLL,EAAarf,UAAUggB,OAASrE,EAAK+D,OAAO1f,UAAU/wF,MAC9D,EAMAowG,EAAarf,UAAUoN,OAAS,WAC5B,IAAIziE,EAAMtwC,KAAK+hH,SACf,OAAO/hH,KAAKglD,IAAIwhE,UACVxmH,KAAKglD,IAAIwhE,UAAUxmH,KAAK4pE,IAAK5pE,KAAK4pE,IAAM3hE,KAAKC,IAAIlI,KAAK4pE,IAAMt5B,EAAKtwC,KAAKswC,MACtEtwC,KAAKglD,IAAIjP,SAAS,QAAS/1C,KAAK4pE,IAAK5pE,KAAK4pE,IAAM3hE,KAAKC,IAAIlI,KAAK4pE,IAAMt5B,EAAKtwC,KAAKswC,KACxF,EASA00E,EAAaF,Y,gCCjDbppH,EAAOD,QAAU,CAAC,C,oCCKRA,EA6BNgrH,QAAU,EAAQ,K,oCClCtB/qH,EAAOD,QAAUgrH,EAEjB,IAAInF,EAAO,EAAQ,MAsCnB,SAASmF,EAAQC,EAASC,EAAkBC,GAExC,GAAuB,mBAAZF,EACP,MAAMpqH,UAAU,8BAEpBglH,EAAKpL,aAAa1wG,KAAKxF,MAMvBA,KAAK0mH,QAAUA,EAMf1mH,KAAK2mH,iBAAmBE,QAAQF,GAMhC3mH,KAAK4mH,kBAAoBC,QAAQD,EACrC,EA3DCH,EAAQ9gB,UAAYroG,OAAOumD,OAAOy9D,EAAKpL,aAAavQ,YAAYrnG,YAAcmoH,EAwE/EA,EAAQ9gB,UAAUmhB,QAAU,SAASA,EAAQC,EAAQC,EAAaC,EAAcC,EAAS9R,GAErF,IAAK8R,EACD,MAAM5qH,UAAU,6BAEpB,IAAIT,EAAOmE,KACX,IAAKo1G,EACD,OAAOkM,EAAK6F,UAAUL,EAASjrH,EAAMkrH,EAAQC,EAAaC,EAAcC,GAE5E,GAAKrrH,EAAK6qH,QAKV,IACI,OAAO7qH,EAAK6qH,QACRK,EACAC,EAAYnrH,EAAK8qH,iBAAmB,kBAAoB,UAAUO,GAAStwE,UAC3E,SAAqBjwC,EAAKknF,GAEtB,GAAIlnF,EAEA,OADA9K,EAAKy6G,KAAK,QAAS3vG,EAAKogH,GACjB3R,EAASzuG,GAGpB,GAAiB,OAAbknF,EAAJ,CAKA,KAAMA,aAAoBo5B,GACtB,IACIp5B,EAAWo5B,EAAaprH,EAAK+qH,kBAAoB,kBAAoB,UAAU/4B,EACnF,CAAE,MAAOlnF,GAEL,OADA9K,EAAKy6G,KAAK,QAAS3vG,EAAKogH,GACjB3R,EAASzuG,EACpB,CAIJ,OADA9K,EAAKy6G,KAAK,OAAQzoB,EAAUk5B,GACrB3R,EAAS,KAAMvnB,EAZtB,CAFIhyF,EAAKqmC,KAAqB,EAelC,GAER,CAAE,MAAOv7B,GAGL,OAFA9K,EAAKy6G,KAAK,QAAS3vG,EAAKogH,QACxBj2E,YAAW,WAAaskE,EAASzuG,EAAM,GAAG,EAE9C,MArCImqC,YAAW,WAAaskE,EAAS34G,MAAM,iBAAmB,GAAG,EAsCrE,EAOAgqH,EAAQ9gB,UAAUzjE,IAAM,SAAaklF,GAOjC,OANIpnH,KAAK0mH,UACAU,GACDpnH,KAAK0mH,QAAQ,KAAM,KAAM,MAC7B1mH,KAAK0mH,QAAU,KACf1mH,KAAKs2G,KAAK,OAAO/J,OAEdvsG,IACX,C,oCC5IAtE,EAAOD,QAAUonH,EAEjB,IAAIvB,EAAO,EAAQ,MAUnB,SAASuB,EAAS/J,EAAIC,GASlB/4G,KAAK84G,GAAKA,IAAO,EAMjB94G,KAAK+4G,GAAKA,IAAO,CACrB,CAOA,IAAIsO,EAAOxE,EAASwE,KAAO,IAAIxE,EAAS,EAAG,GAE3CwE,EAAK9jD,SAAW,WAAa,OAAO,CAAG,EACvC8jD,EAAKC,SAAWD,EAAKhB,SAAW,WAAa,OAAOrmH,IAAM,EAC1DqnH,EAAKxqH,OAAS,WAAa,OAAO,CAAG,EAOrC,IAAI0qH,EAAW1E,EAAS0E,SAAW,mBAOnC1E,EAAS/H,WAAa,SAAoBz9G,GACtC,GAAc,IAAVA,EACA,OAAOgqH,EACX,IAAIlQ,EAAO95G,EAAQ,EACf85G,IACA95G,GAASA,GACb,IAAIy7G,EAAKz7G,IAAU,EACf07G,GAAM17G,EAAQy7G,GAAM,aAAe,EAUvC,OATI3B,IACA4B,GAAMA,IAAO,EACbD,GAAMA,IAAO,IACPA,EAAK,aACPA,EAAK,IACCC,EAAK,aACPA,EAAK,KAGV,IAAI8J,EAAS/J,EAAIC,EAC5B,EAOA8J,EAAS9jH,KAAO,SAAc1B,GAC1B,GAAqB,iBAAVA,EACP,OAAOwlH,EAAS/H,WAAWz9G,GAC/B,GAAIikH,EAAKp/G,SAAS7E,GAAQ,CAEtB,IAAIikH,EAAK75C,KAGL,OAAOo7C,EAAS/H,WAAWr0D,SAASppD,EAAO,KAF3CA,EAAQikH,EAAK75C,KAAKi0C,WAAWr+G,EAGrC,CACA,OAAOA,EAAMsqE,KAAOtqE,EAAMuqE,KAAO,IAAIi7C,EAASxlH,EAAMsqE,MAAQ,EAAGtqE,EAAMuqE,OAAS,GAAKy/C,CACvF,EAOAxE,EAASld,UAAUpiC,SAAW,SAAkBiE,GAC5C,IAAKA,GAAYxnE,KAAK+4G,KAAO,GAAI,CAC7B,IAAID,EAAgB,GAAV94G,KAAK84G,KAAW,EACtBC,GAAM/4G,KAAK+4G,KAAW,EAG1B,OAFKD,IACDC,EAAKA,EAAK,IAAM,KACXD,EAAU,WAALC,EAClB,CACA,OAAO/4G,KAAK84G,GAAe,WAAV94G,KAAK+4G,EAC1B,EAOA8J,EAASld,UAAU6hB,OAAS,SAAgBhgD,GACxC,OAAO85C,EAAK75C,KACN,IAAI65C,EAAK75C,KAAe,EAAVznE,KAAK84G,GAAkB,EAAV94G,KAAK+4G,GAAQ8N,QAAQr/C,IAEhD,CAAEG,IAAe,EAAV3nE,KAAK84G,GAAQlxC,KAAgB,EAAV5nE,KAAK+4G,GAAQvxC,SAAUq/C,QAAQr/C,GACnE,EAEA,IAAIytB,EAAa1D,OAAOoU,UAAU1Q,WAOlC4tB,EAAS4E,SAAW,SAAkBC,GAClC,OAAIA,IAASH,EACFF,EACJ,IAAIxE,GACL5tB,EAAWzvF,KAAKkiH,EAAM,GACtBzyB,EAAWzvF,KAAKkiH,EAAM,IAAM,EAC5BzyB,EAAWzvF,KAAKkiH,EAAM,IAAM,GAC5BzyB,EAAWzvF,KAAKkiH,EAAM,IAAM,MAAQ,GAEpCzyB,EAAWzvF,KAAKkiH,EAAM,GACtBzyB,EAAWzvF,KAAKkiH,EAAM,IAAM,EAC5BzyB,EAAWzvF,KAAKkiH,EAAM,IAAM,GAC5BzyB,EAAWzvF,KAAKkiH,EAAM,IAAM,MAAQ,EAE9C,EAMA7E,EAASld,UAAUgiB,OAAS,WACxB,OAAOp2B,OAAOC,aACO,IAAjBxxF,KAAK84G,GACL94G,KAAK84G,KAAO,EAAK,IACjB94G,KAAK84G,KAAO,GAAK,IACjB94G,KAAK84G,KAAO,GACK,IAAjB94G,KAAK+4G,GACL/4G,KAAK+4G,KAAO,EAAK,IACjB/4G,KAAK+4G,KAAO,GAAK,IACjB/4G,KAAK+4G,KAAO,GAEpB,EAMA8J,EAASld,UAAU2hB,SAAW,WAC1B,IAAIM,EAAS5nH,KAAK+4G,IAAM,GAGxB,OAFA/4G,KAAK+4G,KAAQ/4G,KAAK+4G,IAAM,EAAI/4G,KAAK84G,KAAO,IAAM8O,KAAU,EACxD5nH,KAAK84G,IAAQ94G,KAAK84G,IAAM,EAAsB8O,KAAU,EACjD5nH,IACX,EAMA6iH,EAASld,UAAU0gB,SAAW,WAC1B,IAAIuB,IAAmB,EAAV5nH,KAAK84G,IAGlB,OAFA94G,KAAK84G,KAAQ94G,KAAK84G,KAAO,EAAI94G,KAAK+4G,IAAM,IAAM6O,KAAU,EACxD5nH,KAAK+4G,IAAQ/4G,KAAK+4G,KAAO,EAAqB6O,KAAU,EACjD5nH,IACX,EAMA6iH,EAASld,UAAU9oG,OAAS,WACxB,IAAIgrH,EAAS7nH,KAAK84G,GACdgP,GAAS9nH,KAAK84G,KAAO,GAAK94G,KAAK+4G,IAAM,KAAO,EAC5CgP,EAAS/nH,KAAK+4G,KAAO,GACzB,OAAiB,IAAVgP,EACU,IAAVD,EACED,EAAQ,MACNA,EAAQ,IAAM,EAAI,EAClBA,EAAQ,QAAU,EAAI,EACxBC,EAAQ,MACNA,EAAQ,IAAM,EAAI,EAClBA,EAAQ,QAAU,EAAI,EAC1BC,EAAQ,IAAM,EAAI,EAC7B,C,oCCtMA,IAAIzG,EAAO7lH,EA2OX,SAAS0qH,EAAM/3C,EAAK/qE,EAAK2kH,GACrB,IAAK,IAAI7tG,EAAO7c,OAAO6c,KAAK9W,GAAM3G,EAAI,EAAGA,EAAIyd,EAAKtd,SAAUH,OACnCF,IAAjB4xE,EAAIj0D,EAAKzd,KAAsBsrH,IAC/B55C,EAAIj0D,EAAKzd,IAAM2G,EAAI8W,EAAKzd,KAChC,OAAO0xE,CACX,CAmBA,SAAS65C,EAAShsH,GAEd,SAASisH,EAAYh8C,EAASw1C,GAE1B,KAAM1hH,gBAAgBkoH,GAClB,OAAO,IAAIA,EAAYh8C,EAASw1C,GAKpCpkH,OAAOC,eAAeyC,KAAM,UAAW,CAAET,IAAK,WAAa,OAAO2sE,CAAS,IAGvEzvE,MAAM0rH,kBACN1rH,MAAM0rH,kBAAkBnoH,KAAMkoH,GAE9B5qH,OAAOC,eAAeyC,KAAM,QAAS,CAAE3C,OAAO,IAAIZ,OAAQkmD,OAAS,KAEnE++D,GACAyE,EAAMnmH,KAAM0hH,EACpB,CAUA,OARCwG,EAAYviB,UAAYroG,OAAOumD,OAAOpnD,MAAMkpG,YAAYrnG,YAAc4pH,EAEvE5qH,OAAOC,eAAe2qH,EAAYviB,UAAW,OAAQ,CAAEpmG,IAAK,WAAa,OAAOtD,CAAM,IAEtFisH,EAAYviB,UAAU5vD,SAAW,WAC7B,OAAO/1C,KAAK/D,KAAO,KAAO+D,KAAKksE,OACnC,EAEOg8C,CACX,CA/RA5G,EAAK6F,UAAY,EAAQ,MAGzB7F,EAAK3L,OAAS,EAAQ,MAGtB2L,EAAKpL,aAAe,EAAQ,MAG5BoL,EAAKU,MAAQ,EAAQ,KAGrBV,EAAKtI,QAAU,EAAQ,MAGvBsI,EAAK/H,KAAO,EAAQ,MAGpB+H,EAAKztC,KAAO,EAAQ,MAGpBytC,EAAKuB,SAAW,EAAQ,MAOxBvB,EAAK8G,OAASvB,aAA0B,IAAX,EAAA56G,GACP,EAAAA,GACA,EAAAA,EAAOwgF,SACP,EAAAxgF,EAAOwgF,QAAQC,UACf,EAAAzgF,EAAOwgF,QAAQC,SAASt1E,MAO9CkqG,EAAK+G,OAAS/G,EAAK8G,QAAU,EAAAn8G,GACG,oBAAXi/E,QAA0BA,QACf,oBAAXrvF,MAA0BA,MACjCmE,KAQdshH,EAAKO,WAAavkH,OAAOgrH,OAAShrH,OAAOgrH,OAAO,IAAiC,GAOjFhH,EAAKiH,YAAcjrH,OAAOgrH,OAAShrH,OAAOgrH,OAAO,CAAC,GAAgC,CAAC,EAQnFhH,EAAK15G,UAAYhI,OAAOgI,WAAwC,SAAmBvK,GAC/E,MAAwB,iBAAVA,GAAsBgmH,SAAShmH,IAAU4K,KAAKyc,MAAMrnB,KAAWA,CACjF,EAOAikH,EAAKp/G,SAAW,SAAkB7E,GAC9B,MAAwB,iBAAVA,GAAsBA,aAAiBk0F,MACzD,EAOA+vB,EAAKkH,SAAW,SAAkBnrH,GAC9B,OAAOA,GAA0B,iBAAVA,CAC3B,EAUAikH,EAAKmH,MAQLnH,EAAKoH,MAAQ,SAAe37G,EAAK47G,GAC7B,IAAItrH,EAAQ0P,EAAI47G,GAChB,QAAa,MAATtrH,IAAiB0P,EAAIxH,eAAeojH,MACZ,iBAAVtrH,IAAuB+B,MAAMC,QAAQhC,GAASA,EAAMR,OAASS,OAAO6c,KAAK9c,GAAOR,QAAU,EAEhH,EAaAykH,EAAK+D,OAAS,WACV,IACI,IAAIA,EAAS/D,EAAKtI,QAAQ,UAAUqM,OAEpC,OAAOA,EAAO1f,UAAUijB,UAAYvD,EAAoC,IAC5E,CAAE,MAAO3+G,GAEL,OAAO,IACX,CACH,CATa,GAYd46G,EAAKuH,aAAe,KAGpBvH,EAAKwH,oBAAsB,KAO3BxH,EAAKM,UAAY,SAAmBmH,GAEhC,MAA8B,iBAAhBA,EACRzH,EAAK+D,OACD/D,EAAKwH,oBAAoBC,GACzB,IAAIzH,EAAKliH,MAAM2pH,GACnBzH,EAAK+D,OACD/D,EAAKuH,aAAaE,GACI,oBAAfnrH,WACHmrH,EACA,IAAInrH,WAAWmrH,EACjC,EAMAzH,EAAKliH,MAA8B,oBAAfxB,WAA6BA,WAAwCwB,MAezFkiH,EAAK75C,KAAkC65C,EAAK+G,OAAOW,SAAsC1H,EAAK+G,OAAOW,QAAQvhD,MACtE65C,EAAK+G,OAAO5gD,MACvC65C,EAAKtI,QAAQ,QAOzBsI,EAAK2H,OAAS,mBAOd3H,EAAK4H,QAAU,wBAOf5H,EAAK6H,QAAU,6CAOf7H,EAAK8H,WAAa,SAAoB/rH,GAClC,OAAOA,EACDikH,EAAKuB,SAAS9jH,KAAK1B,GAAOsqH,SAC1BrG,EAAKuB,SAAS0E,QACxB,EAQAjG,EAAK+H,aAAe,SAAsB3B,EAAMlgD,GAC5C,IAAIg+C,EAAOlE,EAAKuB,SAAS4E,SAASC,GAClC,OAAIpG,EAAK75C,KACE65C,EAAK75C,KAAKzD,SAASwhD,EAAK1M,GAAI0M,EAAKzM,GAAIvxC,GACzCg+C,EAAKjiD,SAASsjD,QAAQr/C,GACjC,EAiBA85C,EAAK6E,MAAQA,EAOb7E,EAAKgI,QAAU,SAAiB3nD,GAC5B,OAAOA,EAAI5wB,OAAO,GAAGw4E,cAAgB5nD,EAAIjb,UAAU,EACvD,EAyCA46D,EAAK2G,SAAWA,EAmBhB3G,EAAKkI,cAAgBvB,EAAS,iBAoB9B3G,EAAKmD,YAAc,SAAkBgF,GAEjC,IADA,IAAIC,EAAW,CAAC,EACPhtH,EAAI,EAAGA,EAAI+sH,EAAW5sH,SAAUH,EACrCgtH,EAASD,EAAW/sH,IAAM,EAO9B,OAAO,WACH,IAAK,IAAIyd,EAAO7c,OAAO6c,KAAKna,MAAOtD,EAAIyd,EAAKtd,OAAS,EAAGH,GAAK,IAAKA,EAC9D,GAA0B,IAAtBgtH,EAASvvG,EAAKzd,UAA+BF,IAAlBwD,KAAKma,EAAKzd,KAAuC,OAAlBsD,KAAKma,EAAKzd,IACpE,OAAOyd,EAAKzd,EACxB,CACJ,EAeA4kH,EAAKoD,YAAc,SAAkB+E,GAQjC,OAAO,SAASxtH,GACZ,IAAK,IAAIS,EAAI,EAAGA,EAAI+sH,EAAW5sH,SAAUH,EACjC+sH,EAAW/sH,KAAOT,UACX+D,KAAKypH,EAAW/sH,GACnC,CACJ,EAkBA4kH,EAAKgC,cAAgB,CACjBJ,MAAO3xB,OACP4xB,MAAO5xB,OACPziC,MAAOyiC,OACP6xB,MAAM,GAIV9B,EAAKwD,WAAa,WACd,IAAIO,EAAS/D,EAAK+D,OAEbA,GAML/D,EAAKuH,aAAexD,EAAOtmH,OAASnB,WAAWmB,MAAQsmH,EAAOtmH,MAE1D,SAAqB1B,EAAOssH,GACxB,OAAO,IAAItE,EAAOhoH,EAAOssH,EAC7B,EACJrI,EAAKwH,oBAAsBzD,EAAOuE,aAE9B,SAA4BlqH,GACxB,OAAO,IAAI2lH,EAAO3lH,EACtB,GAdA4hH,EAAKuH,aAAevH,EAAKwH,oBAAsB,IAevD,C,oCCnaAptH,EAAOD,QAAU2lH,EAEjB,IAEI2D,EAFAzD,EAAY,EAAQ,MAIpBuB,EAAYvB,EAAKuB,SACjBlN,EAAY2L,EAAK3L,OACjB4D,EAAY+H,EAAK/H,KAWrB,SAASsQ,EAAGvvB,EAAIhqD,EAAK/N,GAMjBviC,KAAKs6F,GAAKA,EAMVt6F,KAAKswC,IAAMA,EAMXtwC,KAAKmhD,UAAO3kD,EAMZwD,KAAKuiC,IAAMA,CACf,CAGA,SAASunF,IAAQ,CAUjB,SAASC,EAAMjI,GAMX9hH,KAAK0wB,KAAOoxF,EAAOpxF,KAMnB1wB,KAAK2wB,KAAOmxF,EAAOnxF,KAMnB3wB,KAAKswC,IAAMwxE,EAAOxxE,IAMlBtwC,KAAKmhD,KAAO2gE,EAAOkI,MACvB,CAOA,SAAS5I,IAMLphH,KAAKswC,IAAM,EAMXtwC,KAAK0wB,KAAO,IAAIm5F,EAAGC,EAAM,EAAG,GAM5B9pH,KAAK2wB,KAAO3wB,KAAK0wB,KAMjB1wB,KAAKgqH,OAAS,IAOlB,CAEA,IAAInmE,EAAS,WACT,OAAOy9D,EAAK+D,OACN,WACE,OAAQjE,EAAOv9D,OAAS,WACpB,OAAO,IAAIkhE,CACf,IACJ,EAEE,WACE,OAAO,IAAI3D,CACf,CACR,EAqCA,SAAS6I,EAAU1nF,EAAKyiB,EAAK4kB,GACzB5kB,EAAI4kB,GAAa,IAANrnC,CACf,CAmBA,SAAS2nF,EAAS55E,EAAK/N,GACnBviC,KAAKswC,IAAMA,EACXtwC,KAAKmhD,UAAO3kD,EACZwD,KAAKuiC,IAAMA,CACf,CA6CA,SAAS4nF,EAAc5nF,EAAKyiB,EAAK4kB,GAC7B,KAAOrnC,EAAIw2E,IACP/zD,EAAI4kB,KAAkB,IAATrnC,EAAIu2E,GAAW,IAC5Bv2E,EAAIu2E,IAAMv2E,EAAIu2E,KAAO,EAAIv2E,EAAIw2E,IAAM,MAAQ,EAC3Cx2E,EAAIw2E,MAAQ,EAEhB,KAAOx2E,EAAIu2E,GAAK,KACZ9zD,EAAI4kB,KAAkB,IAATrnC,EAAIu2E,GAAW,IAC5Bv2E,EAAIu2E,GAAKv2E,EAAIu2E,KAAO,EAExB9zD,EAAI4kB,KAASrnC,EAAIu2E,EACrB,CA0CA,SAASsR,EAAa7nF,EAAKyiB,EAAK4kB,GAC5B5kB,EAAI4kB,GAA0B,IAAdrnC,EAChByiB,EAAI4kB,EAAM,GAAMrnC,IAAQ,EAAM,IAC9ByiB,EAAI4kB,EAAM,GAAMrnC,IAAQ,GAAM,IAC9ByiB,EAAI4kB,EAAM,GAAMrnC,IAAQ,EAC5B,CA9JA6+E,EAAOv9D,OAASA,IAOhBu9D,EAAO7yC,MAAQ,SAAe7uE,GAC1B,OAAO,IAAI4hH,EAAKliH,MAAMM,EAC1B,EAII4hH,EAAKliH,QAAUA,QACfgiH,EAAO7yC,MAAQ+yC,EAAKztC,KAAKutC,EAAO7yC,MAAO+yC,EAAKliH,MAAMumG,UAAU5lF,WAUhEqhG,EAAOzb,UAAU0kB,MAAQ,SAAc/vB,EAAIhqD,EAAK/N,GAG5C,OAFAviC,KAAK2wB,KAAO3wB,KAAK2wB,KAAKwwB,KAAO,IAAI0oE,EAAGvvB,EAAIhqD,EAAK/N,GAC7CviC,KAAKswC,KAAOA,EACLtwC,IACX,EA6BAkqH,EAASvkB,UAAYroG,OAAOumD,OAAOgmE,EAAGlkB,WACtCukB,EAASvkB,UAAUrL,GAxBnB,SAAuB/3D,EAAKyiB,EAAK4kB,GAC7B,KAAOrnC,EAAM,KACTyiB,EAAI4kB,KAAe,IAANrnC,EAAY,IACzBA,KAAS,EAEbyiB,EAAI4kB,GAAOrnC,CACf,EAyBA6+E,EAAOzb,UAAUoc,OAAS,SAAsB1kH,GAW5C,OARA2C,KAAKswC,MAAQtwC,KAAK2wB,KAAO3wB,KAAK2wB,KAAKwwB,KAAO,IAAI+oE,GACzC7sH,KAAkB,GACT,IAAY,EACpBA,EAAQ,MAAY,EACpBA,EAAQ,QAAY,EACpBA,EAAQ,UAAY,EACA,EAC1BA,IAAQizC,IACDtwC,IACX,EAQAohH,EAAOzb,UAAUyc,MAAQ,SAAqB/kH,GAC1C,OAAOA,EAAQ,EACT2C,KAAKqqH,MAAMF,EAAe,GAAItH,EAAS/H,WAAWz9G,IAClD2C,KAAK+hH,OAAO1kH,EACtB,EAOA+jH,EAAOzb,UAAUigB,OAAS,SAAsBvoH,GAC5C,OAAO2C,KAAK+hH,QAAQ1kH,GAAS,EAAIA,GAAS,MAAQ,EACtD,EAqBA+jH,EAAOzb,UAAU0e,OAAS,SAAsBhnH,GAC5C,IAAImoH,EAAO3C,EAAS9jH,KAAK1B,GACzB,OAAO2C,KAAKqqH,MAAMF,EAAe3E,EAAK3oH,SAAU2oH,EACpD,EASApE,EAAOzb,UAAUsc,MAAQb,EAAOzb,UAAU0e,OAQ1CjD,EAAOzb,UAAUygB,OAAS,SAAsB/oH,GAC5C,IAAImoH,EAAO3C,EAAS9jH,KAAK1B,GAAOiqH,WAChC,OAAOtnH,KAAKqqH,MAAMF,EAAe3E,EAAK3oH,SAAU2oH,EACpD,EAOApE,EAAOzb,UAAUkgB,KAAO,SAAoBxoH,GACxC,OAAO2C,KAAKqqH,MAAMJ,EAAW,EAAG5sH,EAAQ,EAAI,EAChD,EAcA+jH,EAAOzb,UAAUmgB,QAAU,SAAuBzoH,GAC9C,OAAO2C,KAAKqqH,MAAMD,EAAc,EAAG/sH,IAAU,EACjD,EAQA+jH,EAAOzb,UAAUogB,SAAW3E,EAAOzb,UAAUmgB,QAQ7C1E,EAAOzb,UAAU2gB,QAAU,SAAuBjpH,GAC9C,IAAImoH,EAAO3C,EAAS9jH,KAAK1B,GACzB,OAAO2C,KAAKqqH,MAAMD,EAAc,EAAG5E,EAAK1M,IAAIuR,MAAMD,EAAc,EAAG5E,EAAKzM,GAC5E,EASAqI,EAAOzb,UAAU4gB,SAAWnF,EAAOzb,UAAU2gB,QAQ7ClF,EAAOzb,UAAUqc,MAAQ,SAAqB3kH,GAC1C,OAAO2C,KAAKqqH,MAAM/I,EAAKU,MAAMnL,aAAc,EAAGx5G,EAClD,EAQA+jH,EAAOzb,UAAUye,OAAS,SAAsB/mH,GAC5C,OAAO2C,KAAKqqH,MAAM/I,EAAKU,MAAM1J,cAAe,EAAGj7G,EACnD,EAEA,IAAIitH,EAAahJ,EAAKliH,MAAMumG,UAAUzmG,IAChC,SAAwBqjC,EAAKyiB,EAAK4kB,GAChC5kB,EAAI9lD,IAAIqjC,EAAKqnC,EACjB,EAEE,SAAwBrnC,EAAKyiB,EAAK4kB,GAChC,IAAK,IAAIltE,EAAI,EAAGA,EAAI6lC,EAAI1lC,SAAUH,EAC9BsoD,EAAI4kB,EAAMltE,GAAK6lC,EAAI7lC,EAC3B,EAOJ0kH,EAAOzb,UAAU72C,MAAQ,SAAqBzxD,GAC1C,IAAIizC,EAAMjzC,EAAMR,SAAW,EAC3B,IAAKyzC,EACD,OAAOtwC,KAAKqqH,MAAMJ,EAAW,EAAG,GACpC,GAAI3I,EAAKp/G,SAAS7E,GAAQ,CACtB,IAAI2nD,EAAMo8D,EAAO7yC,MAAMj+B,EAAMqlE,EAAO94G,OAAOQ,IAC3Cs4G,EAAOv9F,OAAO/a,EAAO2nD,EAAK,GAC1B3nD,EAAQ2nD,CACZ,CACA,OAAOhlD,KAAK+hH,OAAOzxE,GAAK+5E,MAAMC,EAAYh6E,EAAKjzC,EACnD,EAOA+jH,EAAOzb,UAAUoN,OAAS,SAAsB11G,GAC5C,IAAIizC,EAAMipE,EAAK18G,OAAOQ,GACtB,OAAOizC,EACDtwC,KAAK+hH,OAAOzxE,GAAK+5E,MAAM9Q,EAAKE,MAAOnpE,EAAKjzC,GACxC2C,KAAKqqH,MAAMJ,EAAW,EAAG,EACnC,EAOA7I,EAAOzb,UAAUuc,KAAO,WAIpB,OAHAliH,KAAKgqH,OAAS,IAAID,EAAM/pH,MACxBA,KAAK0wB,KAAO1wB,KAAK2wB,KAAO,IAAIk5F,EAAGC,EAAM,EAAG,GACxC9pH,KAAKswC,IAAM,EACJtwC,IACX,EAMAohH,EAAOzb,UAAU9qD,MAAQ,WAUrB,OATI76C,KAAKgqH,QACLhqH,KAAK0wB,KAAS1wB,KAAKgqH,OAAOt5F,KAC1B1wB,KAAK2wB,KAAS3wB,KAAKgqH,OAAOr5F,KAC1B3wB,KAAKswC,IAAStwC,KAAKgqH,OAAO15E,IAC1BtwC,KAAKgqH,OAAShqH,KAAKgqH,OAAO7oE,OAE1BnhD,KAAK0wB,KAAO1wB,KAAK2wB,KAAO,IAAIk5F,EAAGC,EAAM,EAAG,GACxC9pH,KAAKswC,IAAO,GAETtwC,IACX,EAMAohH,EAAOzb,UAAUwc,OAAS,WACtB,IAAIzxF,EAAO1wB,KAAK0wB,KACZC,EAAO3wB,KAAK2wB,KACZ2f,EAAOtwC,KAAKswC,IAOhB,OANAtwC,KAAK66C,QAAQknE,OAAOzxE,GAChBA,IACAtwC,KAAK2wB,KAAKwwB,KAAOzwB,EAAKywB,KACtBnhD,KAAK2wB,KAAOA,EACZ3wB,KAAKswC,KAAOA,GAETtwC,IACX,EAMAohH,EAAOzb,UAAU/uD,OAAS,WAItB,IAHA,IAAIlmB,EAAO1wB,KAAK0wB,KAAKywB,KACjB6D,EAAOhlD,KAAK1B,YAAYiwE,MAAMvuE,KAAKswC,KACnCs5B,EAAO,EACJl5C,GACHA,EAAK4pE,GAAG5pE,EAAK6R,IAAKyiB,EAAK4kB,GACvBA,GAAOl5C,EAAK4f,IACZ5f,EAAOA,EAAKywB,KAGhB,OAAO6D,CACX,EAEAo8D,EAAO0D,WAAa,SAASyF,GACzBxF,EAAewF,EACfnJ,EAAOv9D,OAASA,IAChBkhE,EAAaD,YACjB,C,oCC/cAppH,EAAOD,QAAUspH,EAGjB,IAAI3D,EAAS,EAAQ,OACpB2D,EAAapf,UAAYroG,OAAOumD,OAAOu9D,EAAOzb,YAAYrnG,YAAcymH,EAEzE,IAAIzD,EAAO,EAAQ,MAQnB,SAASyD,IACL3D,EAAO57G,KAAKxF,KAChB,CAuCA,SAASwqH,EAAkBjoF,EAAKyiB,EAAK4kB,GAC7BrnC,EAAI1lC,OAAS,GACbykH,EAAK/H,KAAKE,MAAMl3E,EAAKyiB,EAAK4kB,GACrB5kB,EAAI4jE,UACT5jE,EAAI4jE,UAAUrmF,EAAKqnC,GAEnB5kB,EAAIy0D,MAAMl3E,EAAKqnC,EACvB,CA5CAm7C,EAAaD,WAAa,WAOtBC,EAAax2C,MAAQ+yC,EAAKwH,oBAE1B/D,EAAa0F,iBAAmBnJ,EAAK+D,QAAU/D,EAAK+D,OAAO1f,qBAAqB/nG,YAAiD,QAAnC0jH,EAAK+D,OAAO1f,UAAUzmG,IAAIjD,KAClH,SAA8BsmC,EAAKyiB,EAAK4kB,GACxC5kB,EAAI9lD,IAAIqjC,EAAKqnC,EAEf,EAEE,SAA+BrnC,EAAKyiB,EAAK4kB,GACzC,GAAIrnC,EAAImoF,KACNnoF,EAAImoF,KAAK1lE,EAAK4kB,EAAK,EAAGrnC,EAAI1lC,aACvB,IAAK,IAAIH,EAAI,EAAGA,EAAI6lC,EAAI1lC,QAC3BmoD,EAAI4kB,KAASrnC,EAAI7lC,IACrB,CACR,EAMAqoH,EAAapf,UAAU72C,MAAQ,SAA4BzxD,GACnDikH,EAAKp/G,SAAS7E,KACdA,EAAQikH,EAAKuH,aAAaxrH,EAAO,WACrC,IAAIizC,EAAMjzC,EAAMR,SAAW,EAI3B,OAHAmD,KAAK+hH,OAAOzxE,GACRA,GACAtwC,KAAKqqH,MAAMtF,EAAa0F,iBAAkBn6E,EAAKjzC,GAC5C2C,IACX,EAcA+kH,EAAapf,UAAUoN,OAAS,SAA6B11G,GACzD,IAAIizC,EAAMgxE,EAAK+D,OAAOv/G,WAAWzI,GAIjC,OAHA2C,KAAK+hH,OAAOzxE,GACRA,GACAtwC,KAAKqqH,MAAMG,EAAmBl6E,EAAKjzC,GAChC2C,IACX,EAUA+kH,EAAaD,Y,09ECnEb,IAAIn/D,EAAc,CAAC,EAKnBA,EAAYglE,OAQZhlE,EAAYilE,MAMZjlE,EAAYklE,aAAe,EAM3BllE,EAAYmlE,WAAa,EAMzBnlE,EAAYolE,uBAAyB,EAMrCplE,EAAYiC,mBAAqB,EAKjCjC,EAAYqlE,SAAW,CACrBC,WAAY,EACZC,aAAc,GAOhBvlE,EAAYy8D,MAAQ,IAAIpkH,WAAW,GAMnC2nD,EAAYwlE,QAAU,IAAIxtH,aAAagoD,EAAYy8D,MAAMliH,QAMzDylD,EAAYylE,QAAU,IAAIntH,aAAa0nD,EAAYy8D,MAAMliH,QAMzDylD,EAAYntC,eAAuE,IAAtD,IAAI1a,YAAY,IAAIF,WAAW,CAAC,EAAG,IAAIsC,QAAQ,GAS5EylD,EAAY8hB,KAAO,SAASE,EAAKC,GAK/B5nE,KAAK2nE,IAAY,EAANA,EAMX3nE,KAAK4nE,KAAc,EAAPA,CACd,EAOAjiB,EAAY8hB,KAAK5jB,OAAS,SAAS8jB,EAAKC,GAEtC,OAAc,GAAPD,GAAoB,GAARC,EAAYjiB,EAAY8hB,KAAKuzC,KAAO,IAAIr1D,EAAY8hB,KAAKE,EAAKC,EACnF,EAKAjiB,EAAY8hB,KAAKk+B,UAAU0lB,UAAY,WACrC,OAAQrrH,KAAK2nE,MAAQ,GAAiB,WAAZ3nE,KAAK4nE,IACjC,EAMAjiB,EAAY8hB,KAAKk+B,UAAUyU,OAAS,SAASC,GAC3C,OAAOr6G,KAAK2nE,KAAO0yC,EAAM1yC,KAAO3nE,KAAK4nE,MAAQyyC,EAAMzyC,IACrD,EAMAjiB,EAAY8hB,KAAKuzC,KAAO,IAAIr1D,EAAY8hB,KAAK,EAAG,GAUhD9hB,EAAY2lE,QAAU,SAASC,GAC7B,GAAKA,EAGCC,EAAeD,OAFnB,IAAIC,EAAe,KASrBxrH,KAAKonD,GAAKzB,EAAYC,WAAWvY,SAASm+E,GAQ1CxrH,KAAKyrH,MAAQD,EAQbxrH,KAAK0rH,SAAW,EAQhB1rH,KAAK2rH,OAAS,KAQd3rH,KAAK4rH,cAAgB,EAQrB5rH,KAAK6rH,UAAW,EAQhB7rH,KAAK8rH,aAAe,EAQpB9rH,KAAK+rH,QAAU,GAQf/rH,KAAKgsH,iBAAmB,EAQxBhsH,KAAKisH,gBAAiB,CACxB,EAEAtmE,EAAY2lE,QAAQ3lB,UAAUumB,MAAQ,WACpClsH,KAAKonD,GAAG8kE,QACRlsH,KAAKyrH,MAAQzrH,KAAKonD,GAAG+kE,WACrBnsH,KAAK0rH,SAAW,EAChB1rH,KAAK2rH,OAAS,KACd3rH,KAAK4rH,cAAgB,EACrB5rH,KAAK6rH,UAAW,EAChB7rH,KAAK8rH,aAAe,EACpB9rH,KAAK+rH,QAAU,GACf/rH,KAAKgsH,iBAAmB,EACxBhsH,KAAKisH,gBAAiB,CACxB,EASAtmE,EAAY2lE,QAAQ3lB,UAAUymB,cAAgB,SAASA,GACrDpsH,KAAKisH,eAAiBG,CACxB,EASAzmE,EAAY2lE,QAAQ3lB,UAAUpkC,WAAa,WACzC,OAAOvhE,KAAKonD,EACd,EAQAzB,EAAY2lE,QAAQ3lB,UAAU0mB,aAAe,WAC3C,OAAOrsH,KAAKonD,GAAG0H,QAAQ/uC,SAAS/f,KAAKonD,GAAG1c,WAAY1qC,KAAKonD,GAAG1c,WAAa1qC,KAAK4kC,SAChF,EAYA+gB,EAAY2lE,QAAQ3lB,UAAU14C,KAAO,SAASvtD,EAAM4sH,GAE9C5sH,EAAOM,KAAK0rH,WACd1rH,KAAK0rH,SAAWhsH,GAQlB,IAHA,IAAI6sH,EAAwE,IAAvDvsH,KAAKonD,GAAG+kE,WAAansH,KAAKyrH,MAAQa,GAA2B5sH,EAAO,EAGlFM,KAAKyrH,MAAQc,EAAa7sH,EAAO4sH,GAAkB,CACxD,IAAIE,EAAexsH,KAAKonD,GAAG+kE,WAC3BnsH,KAAKonD,GAAKzB,EAAY2lE,QAAQmB,eAAezsH,KAAKonD,IAClDpnD,KAAKyrH,OAASzrH,KAAKonD,GAAG+kE,WAAaK,CACrC,CAEAxsH,KAAKsoE,IAAIikD,EACX,EAKA5mE,EAAY2lE,QAAQ3lB,UAAUr9B,IAAM,SAASokD,GAC3C,IAAK,IAAIhwH,EAAI,EAAGA,EAAIgwH,EAAWhwH,IAC7BsD,KAAKonD,GAAGulE,YAAY3sH,KAAKyrH,MAAO,EAEpC,EAKA9lE,EAAY2lE,QAAQ3lB,UAAUgnB,UAAY,SAAStvH,GACjD2C,KAAKonD,GAAGulE,UAAU3sH,KAAKyrH,OAAS,EAAGpuH,EACrC,EAKAsoD,EAAY2lE,QAAQ3lB,UAAUinB,WAAa,SAASvvH,GAClD2C,KAAKonD,GAAGwlE,WAAW5sH,KAAKyrH,OAAS,EAAGpuH,EACtC,EAKAsoD,EAAY2lE,QAAQ3lB,UAAUz4C,WAAa,SAAS7vD,GAClD2C,KAAKonD,GAAG8F,WAAWltD,KAAKyrH,OAAS,EAAGpuH,EACtC,EAKAsoD,EAAY2lE,QAAQ3lB,UAAUknB,WAAa,SAASxvH,GAClD2C,KAAKonD,GAAGylE,WAAW7sH,KAAKyrH,OAAS,EAAGpuH,EACtC,EAKAsoD,EAAY2lE,QAAQ3lB,UAAUmnB,aAAe,SAASzvH,GACpD2C,KAAKonD,GAAG0lE,aAAa9sH,KAAKyrH,OAAS,EAAGpuH,EACxC,EAKAsoD,EAAY2lE,QAAQ3lB,UAAUonB,aAAe,SAAS1vH,GACpD2C,KAAKonD,GAAG2lE,aAAa/sH,KAAKyrH,OAAS,EAAGpuH,EACxC,EAOAsoD,EAAY2lE,QAAQ3lB,UAAU7xC,QAAU,SAASz2D,GAC/C2C,KAAKitD,KAAK,EAAG,GACbjtD,KAAK2sH,UAAUtvH,EACjB,EAMAsoD,EAAY2lE,QAAQ3lB,UAAUqnB,SAAW,SAAS3vH,GAChD2C,KAAKitD,KAAK,EAAG,GACbjtD,KAAK4sH,WAAWvvH,EAClB,EAMAsoD,EAAY2lE,QAAQ3lB,UAAU70C,SAAW,SAASzzD,GAChD2C,KAAKitD,KAAK,EAAG,GACbjtD,KAAKktD,WAAW7vD,EAClB,EAMAsoD,EAAY2lE,QAAQ3lB,UAAUnyC,SAAW,SAASn2D,GAChD2C,KAAKitD,KAAK,EAAG,GACbjtD,KAAK6sH,WAAWxvH,EAClB,EAMAsoD,EAAY2lE,QAAQ3lB,UAAUvvC,WAAa,SAAS/4D,GAClD2C,KAAKitD,KAAK,EAAG,GACbjtD,KAAK8sH,aAAazvH,EACpB,EAMAsoD,EAAY2lE,QAAQ3lB,UAAUsnB,WAAa,SAAS5vH,GAClD2C,KAAKitD,KAAK,EAAG,GACbjtD,KAAK+sH,aAAa1vH,EACpB,EAQAsoD,EAAY2lE,QAAQ3lB,UAAUp7C,aAAe,SAAS2iE,EAAS7vH,EAAOuM,IAChE5J,KAAKisH,gBAAkB5uH,GAASuM,KAClC5J,KAAK8zD,QAAQz2D,GACb2C,KAAKmtH,KAAKD,GAEd,EAOAvnE,EAAY2lE,QAAQ3lB,UAAUynB,cAAgB,SAASF,EAAS7vH,EAAOuM,IACjE5J,KAAKisH,gBAAkB5uH,GAASuM,KAClC5J,KAAKgtH,SAAS3vH,GACd2C,KAAKmtH,KAAKD,GAEd,EAOAvnE,EAAY2lE,QAAQ3lB,UAAUx6C,cAAgB,SAAS+hE,EAAS7vH,EAAOuM,IACjE5J,KAAKisH,gBAAkB5uH,GAASuM,KAClC5J,KAAK8wD,SAASzzD,GACd2C,KAAKmtH,KAAKD,GAEd,EAOAvnE,EAAY2lE,QAAQ3lB,UAAUl7C,cAAgB,SAASyiE,EAAS7vH,EAAOuM,IACjE5J,KAAKisH,gBAAmB5uH,EAAM+8G,OAAOxwG,KACvC5J,KAAKwzD,SAASn2D,GACd2C,KAAKmtH,KAAKD,GAEd,EAOAvnE,EAAY2lE,QAAQ3lB,UAAUlwC,gBAAkB,SAASy3D,EAAS7vH,EAAOuM,IACnE5J,KAAKisH,gBAAkB5uH,GAASuM,KAClC5J,KAAKo2D,WAAW/4D,GAChB2C,KAAKmtH,KAAKD,GAEd,EAOAvnE,EAAY2lE,QAAQ3lB,UAAU0nB,gBAAkB,SAASH,EAAS7vH,EAAOuM,IACnE5J,KAAKisH,gBAAkB5uH,GAASuM,KAClC5J,KAAKitH,WAAW5vH,GAChB2C,KAAKmtH,KAAKD,GAEd,EAOAvnE,EAAY2lE,QAAQ3lB,UAAUr9C,eAAiB,SAAS4kE,EAAS7vH,EAAOuM,IAClE5J,KAAKisH,gBAAkB5uH,GAASuM,KAClC5J,KAAKyoD,UAAUprD,GACf2C,KAAKmtH,KAAKD,GAEd,EASAvnE,EAAY2lE,QAAQ3lB,UAAU2nB,eAAiB,SAASJ,EAAS7vH,EAAOuM,GAClEvM,GAASuM,IACX5J,KAAKutH,OAAOlwH,GACZ2C,KAAKmtH,KAAKD,GAEd,EASAvnE,EAAY2lE,QAAQ3lB,UAAU4nB,OAAS,SAASxgH,GAC9C,GAAIA,GAAO/M,KAAK4kC,SACd,MAAM,IAAInoC,MAAM,iDAEpB,EAMAkpD,EAAY2lE,QAAQ3lB,UAAU6nB,UAAY,WACxC,GAAIxtH,KAAK6rH,SACP,MAAM,IAAIpvH,MAAM,wDAEpB,EAOAkpD,EAAY2lE,QAAQ3lB,UAAUwnB,KAAO,SAASD,GAC5CltH,KAAK2rH,OAAOuB,GAAWltH,KAAK4kC,QAC9B,EAKA+gB,EAAY2lE,QAAQ3lB,UAAU/gE,OAAS,WACrC,OAAO5kC,KAAKonD,GAAG+kE,WAAansH,KAAKyrH,KACnC,EAcA9lE,EAAY2lE,QAAQmB,eAAiB,SAASrlE,GAC5C,IAAIolE,EAAeplE,EAAG+kE,WAGtB,GAAmB,WAAfK,EACF,MAAM,IAAI/vH,MAAM,uDAGlB,IAAIgxH,EAAejB,GAAgB,EAC/BkB,EAAM/nE,EAAYC,WAAWvY,SAASogF,GAG1C,OAFAC,EAAI/lE,YAAY8lE,EAAejB,GAC/BkB,EAAI5+D,QAAQ5vD,IAAIkoD,EAAG0H,QAAS2+D,EAAejB,GACpCkB,CACT,EAQA/nE,EAAY2lE,QAAQ3lB,UAAUl9C,UAAY,SAAS7jB,GACjD5kC,KAAKitD,KAAKtH,EAAYmlE,WAAY,GAClC9qH,KAAKktD,WAAWltD,KAAK4kC,SAAWA,EAAS+gB,EAAYmlE,WACvD,EAUAnlE,EAAY2lE,QAAQ3lB,UAAUv9C,YAAc,SAASulE,GACnD3tH,KAAKwtH,YACc,MAAfxtH,KAAK2rH,SACP3rH,KAAK2rH,OAAS,IAEhB3rH,KAAK4rH,cAAgB+B,EACrB,IAAK,IAAIjxH,EAAI,EAAGA,EAAIixH,EAAWjxH,IAC7BsD,KAAK2rH,OAAOjvH,GAAK,EAEnBsD,KAAK6rH,UAAW,EAChB7rH,KAAK8rH,aAAe9rH,KAAK4kC,QAC3B,EAOA+gB,EAAY2lE,QAAQ3lB,UAAU78C,UAAY,WACxC,GAAmB,MAAf9oD,KAAK2rH,SAAmB3rH,KAAK6rH,SAC/B,MAAM,IAAIpvH,MAAM,qDAGlBuD,KAAK8wD,SAAS,GAKd,IAJA,IAAI88D,EAAY5tH,KAAK4kC,SAGjBloC,EAAIsD,KAAK4rH,cAAgB,EACtBlvH,GAAK,GAAuB,GAAlBsD,KAAK2rH,OAAOjvH,GAASA,KAItC,IAHA,IAAImxH,EAAenxH,EAAI,EAGhBA,GAAK,EAAGA,IAEbsD,KAAKgtH,SAA2B,GAAlBhtH,KAAK2rH,OAAOjvH,GAAUkxH,EAAY5tH,KAAK2rH,OAAOjvH,GAAK,GAInEsD,KAAKgtH,SAASY,EAAY5tH,KAAK8rH,cAC/B,IAAIx7E,GAAOu9E,EAFW,GAEuBloE,EAAYklE,aACzD7qH,KAAKgtH,SAAS18E,GAGd,IAAIw9E,EAAkB,EAClBC,EAAM/tH,KAAKyrH,MACjBuC,EACE,IAAKtxH,EAAI,EAAGA,EAAIsD,KAAK+rH,QAAQlvH,OAAQH,IAAK,CACxC,IAAIuxH,EAAMjuH,KAAKonD,GAAG+kE,WAAansH,KAAK+rH,QAAQrvH,GAC5C,GAAI4zC,GAAOtwC,KAAKonD,GAAG8mE,UAAUD,GAAM,CACjC,IAAK,IAAIrqH,EAAI+hD,EAAYklE,aAAcjnH,EAAI0sC,EAAK1sC,GAAK+hD,EAAYklE,aAC/D,GAAI7qH,KAAKonD,GAAG8mE,UAAUH,EAAMnqH,IAAM5D,KAAKonD,GAAG8mE,UAAUD,EAAMrqH,GACxD,SAASoqH,EAGbF,EAAkB9tH,KAAK+rH,QAAQrvH,GAC/B,KACF,CACF,CAmBA,OAjBIoxH,GAGF9tH,KAAKyrH,MAAQzrH,KAAKonD,GAAG+kE,WAAayB,EAGlC5tH,KAAKonD,GAAG8F,WAAWltD,KAAKyrH,MAAOqC,EAAkBF,KAIjD5tH,KAAK+rH,QAAQjvH,KAAKkD,KAAK4kC,UAGvB5kC,KAAKonD,GAAG8F,WAAWltD,KAAKonD,GAAG+kE,WAAayB,EAAW5tH,KAAK4kC,SAAWgpF,IAGrE5tH,KAAK6rH,UAAW,EACT+B,CACT,EAUAjoE,EAAY2lE,QAAQ3lB,UAAU/uD,OAAS,SAASu3E,EAAYC,EAAqBC,GAC/E,IAAIC,EAAcD,EAAkB1oE,EAAYiC,mBAAqB,EACrE,GAAIwmE,EAAqB,CACvB,IAAIG,EAAkBH,EAGtB,GAFApuH,KAAKitD,KAAKjtD,KAAK0rH,SAAU/lE,EAAYmlE,WACnCnlE,EAAYolE,uBAAyBuD,GACnCC,EAAgB1xH,QAAU8oD,EAAYolE,uBACxC,MAAM,IAAItuH,MAAM,+CACdkpD,EAAYolE,wBAEhB,IAAK,IAAIruH,EAAIipD,EAAYolE,uBAAyB,EAAGruH,GAAK,EAAGA,IAC3DsD,KAAK2sH,UAAU4B,EAAgBt5B,WAAWv4F,GAE9C,CACAsD,KAAKitD,KAAKjtD,KAAK0rH,SAAU/lE,EAAYmlE,WAAawD,GAClDtuH,KAAKyoD,UAAU0lE,GACXG,GACFtuH,KAAK8wD,SAAS9wD,KAAKonD,GAAG+kE,WAAansH,KAAKyrH,OAE1CzrH,KAAKonD,GAAGO,YAAY3nD,KAAKyrH,MAC3B,EAQA9lE,EAAY2lE,QAAQ3lB,UAAU6oB,mBAAqB,SAAUL,EAAYC,GACvEpuH,KAAK42C,OAAOu3E,EAAYC,GAAqB,EAC/C,EAUAzoE,EAAY2lE,QAAQ3lB,UAAU7oC,cAAgB,SAAS2xD,EAAOC,GAC5D,IAAIC,EAAc3uH,KAAKonD,GAAG+kE,WAAasC,EACnCG,EAAeD,EAAc3uH,KAAKonD,GAAGK,UAAUknE,GAInD,GAHoD,GAA3C3uH,KAAKonD,GAAG8mE,UAAUU,EAAeF,GAIxC,MAAM,IAAIjyH,MAAM,sBAAwBiyH,EAAQ,eAEpD,EAWA/oE,EAAY2lE,QAAQ3lB,UAAUn9C,YAAc,SAASqmE,EAAWC,EAAWC,GACzE/uH,KAAKwtH,YACLxtH,KAAKgsH,iBAAmB8C,EACxB9uH,KAAKitD,KAAKtH,EAAYmlE,WAAY+D,EAAYC,GAC9C9uH,KAAKitD,KAAK8hE,EAAWF,EAAYC,EACnC,EASAnpE,EAAY2lE,QAAQ3lB,UAAUj9C,UAAY,WAExC,OADA1oD,KAAKktD,WAAWltD,KAAKgsH,kBACdhsH,KAAK4kC,QACd,EAUA+gB,EAAY2lE,QAAQ3lB,UAAUqpB,aAAe,SAASjjH,GACpD,GAAIA,aAAanO,WACf,IAAI27G,EAAOxtG,MAEX,CAAIwtG,EAAO,GAGX,IAHA,IACI78G,EAAI,EAEDA,EAAIqP,EAAElP,QAAQ,CACnB,IAAIoyH,EAGAv2G,EAAI3M,EAAEkpF,WAAWv4F,MAEnBuyH,EADEv2G,EAAI,OAAUA,GAAK,MACTA,GAGCA,GAAK,IADV3M,EAAEkpF,WAAWv4F,MACO,UAId,IACd68G,EAAKz8G,KAAKmyH,IAENA,EAAY,KACd1V,EAAKz8G,KAAOmyH,GAAa,EAAK,GAAQ,MAElCA,EAAY,MACd1V,EAAKz8G,KAAOmyH,GAAa,GAAM,GAAQ,KAEvC1V,EAAKz8G,KACDmyH,GAAa,GAAM,EAAQ,IAC3BA,GAAa,GAAM,GAAQ,KAEjC1V,EAAKz8G,KAAOmyH,GAAa,EAAK,GAAQ,MAExC1V,EAAKz8G,KAAkB,GAAZmyH,EAAoB,KAEnC,CAjCa,CAoCfjvH,KAAK8zD,QAAQ,GACb9zD,KAAKwoD,YAAY,EAAG+wD,EAAK18G,OAAQ,GACjCmD,KAAKonD,GAAGO,YAAY3nD,KAAKyrH,OAASlS,EAAK18G,QAC9BH,EAAI,EAAb,IAAK,IAAWkoC,EAAS5kC,KAAKyrH,MAAO38D,EAAQ9uD,KAAKonD,GAAG0H,QAASpyD,EAAI68G,EAAK18G,OAAQH,IAC7EoyD,EAAMlqB,KAAY20E,EAAK78G,GAEzB,OAAOsD,KAAK0oD,WACd,EASA/C,EAAY2lE,QAAQ3lB,UAAUx7C,WAAa,SAASwd,EAAKC,GACvD,OAAOjiB,EAAY8hB,KAAK5jB,OAAO8jB,EAAKC,EACtC,EASAjiB,EAAYC,WAAa,SAASkJ,GAKhC9uD,KAAKkvH,OAASpgE,EAMd9uD,KAAKmvH,UAAY,CACnB,EAQAxpE,EAAYC,WAAWvY,SAAW,SAASq/E,GACzC,OAAO,IAAI/mE,EAAYC,WAAW,IAAIhoD,WAAW8uH,GACnD,EAEA/mE,EAAYC,WAAW+/C,UAAUumB,MAAQ,WACvClsH,KAAKmvH,UAAY,CACnB,EAOAxpE,EAAYC,WAAW+/C,UAAU72C,MAAQ,WACvC,OAAO9uD,KAAKkvH,MACd,EAOAvpE,EAAYC,WAAW+/C,UAAUj7D,SAAW,WAC1C,OAAO1qC,KAAKmvH,SACd,EAOAxpE,EAAYC,WAAW+/C,UAAUh+C,YAAc,SAASjd,GACtD1qC,KAAKmvH,UAAYzkF,CACnB,EAOAib,EAAYC,WAAW+/C,UAAUwmB,SAAW,WAC1C,OAAOnsH,KAAKkvH,OAAOryH,MACrB,EAMA8oD,EAAYC,WAAW+/C,UAAU37C,SAAW,SAASplB,GACnD,OAAO5kC,KAAK+xD,UAAUntB,IAAW,IAAM,EACzC,EAMA+gB,EAAYC,WAAW+/C,UAAU5zC,UAAY,SAASntB,GACpD,OAAO5kC,KAAKkvH,OAAOtqF,EACrB,EAMA+gB,EAAYC,WAAW+/C,UAAUuoB,UAAY,SAAStpF,GACpD,OAAO5kC,KAAKovH,WAAWxqF,IAAW,IAAM,EAC1C,EAMA+gB,EAAYC,WAAW+/C,UAAUypB,WAAa,SAASxqF,GACrD,OAAO5kC,KAAKkvH,OAAOtqF,GAAU5kC,KAAKkvH,OAAOtqF,EAAS,IAAM,CAC1D,EAMA+gB,EAAYC,WAAW+/C,UAAUl+C,UAAY,SAAS7iB,GACpD,OAAO5kC,KAAKkvH,OAAOtqF,GAAU5kC,KAAKkvH,OAAOtqF,EAAS,IAAM,EAAI5kC,KAAKkvH,OAAOtqF,EAAS,IAAM,GAAK5kC,KAAKkvH,OAAOtqF,EAAS,IAAM,EACzH,EAMA+gB,EAAYC,WAAW+/C,UAAUj5C,WAAa,SAAS9nB,GACrD,OAAO5kC,KAAKynD,UAAU7iB,KAAY,CACpC,EAMA+gB,EAAYC,WAAW+/C,UAAUz7C,UAAY,SAAStlB,GACpD,OAAO,IAAI+gB,EAAY8hB,KAAKznE,KAAKynD,UAAU7iB,GAAS5kC,KAAKynD,UAAU7iB,EAAS,GAC9E,EAMA+gB,EAAYC,WAAW+/C,UAAUtqC,WAAa,SAASz2B,GACrD,OAAO,IAAI+gB,EAAY8hB,KAAKznE,KAAK0sD,WAAW9nB,GAAS5kC,KAAK0sD,WAAW9nB,EAAS,GAChF,EAMA+gB,EAAYC,WAAW+/C,UAAUvwC,YAAc,SAASxwB,GAEtD,OADA+gB,EAAYy8D,MAAM,GAAKpiH,KAAKynD,UAAU7iB,GAC/B+gB,EAAYwlE,QAAQ,EAC7B,EAMAxlE,EAAYC,WAAW+/C,UAAU0pB,YAAc,SAASzqF,GAGtD,OAFA+gB,EAAYy8D,MAAMz8D,EAAYntC,eAAiB,EAAI,GAAKxY,KAAKynD,UAAU7iB,GACvE+gB,EAAYy8D,MAAMz8D,EAAYntC,eAAiB,EAAI,GAAKxY,KAAKynD,UAAU7iB,EAAS,GACzE+gB,EAAYylE,QAAQ,EAC7B,EAMAzlE,EAAYC,WAAW+/C,UAAUgnB,UAAY,SAAS/nF,EAAQvnC,GAC5D2C,KAAKkvH,OAAOtqF,GAA+B,CAC7C,EAMA+gB,EAAYC,WAAW+/C,UAAU2pB,WAAa,SAAS1qF,EAAQvnC,GAC7D2C,KAAKkvH,OAAOtqF,GAAUvnC,CACxB,EAMAsoD,EAAYC,WAAW+/C,UAAUinB,WAAa,SAAShoF,EAAQvnC,GAC7D2C,KAAKkvH,OAAOtqF,GAAUvnC,EACtB2C,KAAKkvH,OAAOtqF,EAAS,GAAKvnC,GAAS,CACrC,EAMAsoD,EAAYC,WAAW+/C,UAAU4pB,YAAc,SAAS3qF,EAAQvnC,GAC5D2C,KAAKkvH,OAAOtqF,GAAUvnC,EACtB2C,KAAKkvH,OAAOtqF,EAAS,GAAKvnC,GAAS,CACvC,EAMAsoD,EAAYC,WAAW+/C,UAAUz4C,WAAa,SAAStoB,EAAQvnC,GAC7D2C,KAAKkvH,OAAOtqF,GAAUvnC,EACtB2C,KAAKkvH,OAAOtqF,EAAS,GAAKvnC,GAAS,EACnC2C,KAAKkvH,OAAOtqF,EAAS,GAAKvnC,GAAS,GACnC2C,KAAKkvH,OAAOtqF,EAAS,GAAKvnC,GAAS,EACrC,EAMAsoD,EAAYC,WAAW+/C,UAAU6pB,YAAc,SAAS5qF,EAAQvnC,GAC5D2C,KAAKkvH,OAAOtqF,GAAUvnC,EACtB2C,KAAKkvH,OAAOtqF,EAAS,GAAKvnC,GAAS,EACnC2C,KAAKkvH,OAAOtqF,EAAS,GAAKvnC,GAAS,GACnC2C,KAAKkvH,OAAOtqF,EAAS,GAAKvnC,GAAS,EACvC,EAMAsoD,EAAYC,WAAW+/C,UAAUknB,WAAa,SAASjoF,EAAQvnC,GAC7D2C,KAAKktD,WAAWtoB,EAAQvnC,EAAMsqE,KAC9B3nE,KAAKktD,WAAWtoB,EAAS,EAAGvnC,EAAMuqE,KACpC,EAMAjiB,EAAYC,WAAW+/C,UAAU8pB,YAAc,SAAS7qF,EAAQvnC,GAC5D2C,KAAKwvH,YAAY5qF,EAAQvnC,EAAMsqE,KAC/B3nE,KAAKwvH,YAAY5qF,EAAS,EAAGvnC,EAAMuqE,KACvC,EAMAjiB,EAAYC,WAAW+/C,UAAUmnB,aAAe,SAASloF,EAAQvnC,GAC/DsoD,EAAYwlE,QAAQ,GAAK9tH,EACzB2C,KAAKktD,WAAWtoB,EAAQ+gB,EAAYy8D,MAAM,GAC5C,EAMAz8D,EAAYC,WAAW+/C,UAAUonB,aAAe,SAASnoF,EAAQvnC,GAC/DsoD,EAAYylE,QAAQ,GAAK/tH,EACzB2C,KAAKktD,WAAWtoB,EAAQ+gB,EAAYy8D,MAAMz8D,EAAYntC,eAAiB,EAAI,IAC3ExY,KAAKktD,WAAWtoB,EAAS,EAAG+gB,EAAYy8D,MAAMz8D,EAAYntC,eAAiB,EAAI,GACjF,EAQAmtC,EAAYC,WAAW+/C,UAAU+pB,oBAAsB,WACrD,GAAI1vH,KAAKkvH,OAAOryH,OAASmD,KAAKmvH,UAAYxpE,EAAYmlE,WAClDnlE,EAAYolE,uBACd,MAAM,IAAItuH,MACN,kEAGN,IADA,IAAI2S,EAAS,GACJ1S,EAAI,EAAGA,EAAIipD,EAAYolE,uBAAwBruH,IACtD0S,GAAUmiF,OAAOC,aACbxxF,KAAKgqD,SAAShqD,KAAKmvH,UAAYxpE,EAAYmlE,WAAapuH,IAE9D,OAAO0S,CACT,EAUAu2C,EAAYC,WAAW+/C,UAAU99C,SAAW,SAASR,EAAQsoE,GAC3D,IAAIhE,EAAStkE,EAASrnD,KAAKynD,UAAUJ,GACrC,OAAOsoE,EAAgB3vH,KAAKkuH,UAAUvC,GAAU3rH,KAAKkuH,UAAUvC,EAASgE,GAAiB,CAC3F,EASAhqE,EAAYC,WAAW+/C,UAAU1zC,QAAU,SAASjmD,EAAG44B,GAGrD,OAFA54B,EAAEq7C,OAASziB,EAAS5kC,KAAKynD,UAAU7iB,GACnC54B,EAAEo7C,GAAKpnD,KACAgM,CACT,EAeA25C,EAAYC,WAAW+/C,UAAUt8C,SAAW,SAASzkB,EAAQgrF,GAC3DhrF,GAAU5kC,KAAKynD,UAAU7iB,GAEzB,IAAI/nC,EAASmD,KAAKynD,UAAU7iB,GACxBx1B,EAAS,GACT1S,EAAI,EAIR,GAFAkoC,GAAU+gB,EAAYmlE,WAElB8E,IAAiBjqE,EAAYqlE,SAASC,WACxC,OAAOjrH,KAAKkvH,OAAOnvG,SAAS6kB,EAAQA,EAAS/nC,GAG/C,KAAOH,EAAIG,GAAQ,CACjB,IAAIoyH,EAGAv2G,EAAI1Y,KAAK+xD,UAAUntB,EAASloC,KAChC,GAAIgc,EAAI,IACNu2G,EAAYv2G,MACP,CACL,IAAIxH,EAAIlR,KAAK+xD,UAAUntB,EAASloC,KAChC,GAAIgc,EAAI,IACNu2G,GACQ,GAAJv2G,IAAa,EACV,GAAJxH,MACE,CACL,IAAIyH,EAAI3Y,KAAK+xD,UAAUntB,EAASloC,KAE9BuyH,EADEv2G,EAAI,KAEE,GAAJA,IAAa,IACT,GAAJxH,IAAa,EACV,GAAJyH,GAIK,EAAJD,IAAa,IACT,GAAJxH,IAAa,IACT,GAAJyH,IAAa,EACV,GALC3Y,KAAK+xD,UAAUntB,EAASloC,IAOpC,CACF,CAGIuyH,EAAY,MACd7/G,GAAUmiF,OAAOC,aAAay9B,IAE9BA,GAAa,MACb7/G,GAAUmiF,OAAOC,aACK,OAAnBy9B,GAAa,IACkB,OAAnB,KAAZA,IAEP,CAEA,OAAO7/G,CACT,EAOAu2C,EAAYC,WAAW+/C,UAAU59C,WAAa,SAASnjB,GACrD,OAAOA,EAAS5kC,KAAKynD,UAAU7iB,EACjC,EAQA+gB,EAAYC,WAAW+/C,UAAU39C,SAAW,SAASpjB,GACnD,OAAOA,EAAS5kC,KAAKynD,UAAU7iB,GAAU+gB,EAAYmlE,UACvD,EAQAnlE,EAAYC,WAAW+/C,UAAU19C,aAAe,SAASrjB,GACvD,OAAO5kC,KAAKynD,UAAU7iB,EAAS5kC,KAAKynD,UAAU7iB,GAChD,EAMA+gB,EAAYC,WAAW+/C,UAAU3nC,iBAAmB,SAAS6xD,GAC3D,GAAIA,EAAMhzH,QAAU8oD,EAAYolE,uBAC9B,MAAM,IAAItuH,MAAM,+CACAkpD,EAAYolE,wBAE9B,IAAK,IAAIruH,EAAI,EAAGA,EAAIipD,EAAYolE,uBAAwBruH,IACtD,GAAImzH,EAAM56B,WAAWv4F,IAAMsD,KAAKgqD,SAAShqD,KAAKmvH,UAAYxpE,EAAYmlE,WAAapuH,GACjF,OAAO,EAGX,OAAO,CACT,EASAipD,EAAYC,WAAW+/C,UAAUx7C,WAAa,SAASwd,EAAKC,GAC1D,OAAOjiB,EAAY8hB,KAAK5jB,OAAO8jB,EAAKC,EACtC,C,GCnuCIkoD,yBAA2B,CAAC,EAGhC,SAASC,oBAAoBC,GAE5B,IAAIC,EAAeH,yBAAyBE,GAC5C,QAAqBxzH,IAAjByzH,EACH,OAAOA,EAAax0H,QAGrB,IAAIC,EAASo0H,yBAAyBE,GAAY,CAGjDv0H,QAAS,CAAC,GAOX,OAHAy0H,oBAAoBF,GAAUxqH,KAAK9J,EAAOD,QAASC,EAAQA,EAAOD,QAASs0H,qBAGpEr0H,EAAOD,OACf,CCrBAs0H,oBAAoBv7E,EAAI,SAAS94C,GAChC,IAAIy0H,EAASz0H,GAAUA,EAAOk+G,WAC7B,WAAa,OAAOl+G,EAAgB,OAAG,EACvC,WAAa,OAAOA,CAAQ,EAE7B,OADAq0H,oBAAoB58G,EAAEg9G,EAAQ,CAAEz3G,EAAGy3G,IAC5BA,CACR,ECNAJ,oBAAoB58G,EAAI,SAAS1X,EAAS20H,GACzC,IAAI,IAAI9qH,KAAO8qH,EACXL,oBAAoB/iH,EAAEojH,EAAY9qH,KAASyqH,oBAAoB/iH,EAAEvR,EAAS6J,IAC5EhI,OAAOC,eAAe9B,EAAS6J,EAAK,CAAE9H,YAAY,EAAM+B,IAAK6wH,EAAW9qH,IAG3E,ECPAyqH,oBAAoB9jH,EAAI,WACvB,GAA0B,iBAAfq8F,WAAyB,OAAOA,WAC3C,IACC,OAAOtoG,MAAQ,IAAIuoG,SAAS,cAAb,EAChB,CAAE,MAAO7hG,GACR,GAAsB,iBAAXwkF,OAAqB,OAAOA,MACxC,CACA,CAPuB,GCAxB6kC,oBAAoB/iH,EAAI,SAASD,EAAK47G,GAAQ,OAAOrrH,OAAOqoG,UAAUpgG,eAAeC,KAAKuH,EAAK47G,EAAO,ECCtGoH,oBAAoBv7F,EAAI,SAAS/4B,GACX,oBAAX40H,QAA0BA,OAAOC,aAC1ChzH,OAAOC,eAAe9B,EAAS40H,OAAOC,YAAa,CAAEjzH,MAAO,WAE7DC,OAAOC,eAAe9B,EAAS,aAAc,CAAE4B,OAAO,GACvD,ECHA,IAAIkzH,oBAAsBR,oBAAoB,M","sources":["webpack://ort/webpack/universalModuleDefinition","webpack://ort/../common/dist/lib/backend-impl.js","webpack://ort/../common/dist/lib/env-impl.js","webpack://ort/../common/dist/lib/env.js","webpack://ort/../common/dist/lib/tensor-impl.js","webpack://ort/../common/dist/lib/tensor.js","webpack://ort/../common/dist/lib/inference-session-impl.js","webpack://ort/../common/dist/lib/inference-session.js","webpack://ort/./lib/backend-onnxjs.ts","webpack://ort/./lib/backend-wasm.ts","webpack://ort/./lib/index.ts","webpack://ort/./lib/onnxjs/attribute-with-cache-key.ts","webpack://ort/./lib/onnxjs/attribute.ts","webpack://ort/./lib/onnxjs/backend.ts","webpack://ort/./lib/onnxjs/backends/backend-webgl.ts","webpack://ort/./lib/onnxjs/backends/webgl/glsl-coordinate-lib.ts","webpack://ort/./lib/onnxjs/backends/webgl/glsl-definitions.ts","webpack://ort/./lib/onnxjs/backends/webgl/glsl-encoding-lib.ts","webpack://ort/./lib/onnxjs/backends/webgl/glsl-fragcolor-lib.ts","webpack://ort/./lib/onnxjs/backends/webgl/glsl-function-inliner.ts","webpack://ort/./lib/onnxjs/backends/webgl/glsl-preprocessor.ts","webpack://ort/./lib/onnxjs/backends/webgl/glsl-registered-libs.ts","webpack://ort/./lib/onnxjs/backends/webgl/glsl-shape-utils-lib.ts","webpack://ort/./lib/onnxjs/backends/webgl/glsl-source.ts","webpack://ort/./lib/onnxjs/backends/webgl/glsl-vec-lib.ts","webpack://ort/./lib/onnxjs/backends/webgl/inference-handler.ts","webpack://ort/./lib/onnxjs/backends/webgl/op-resolve-rules.ts","webpack://ort/./lib/onnxjs/backends/webgl/ops/batch-normalization.ts","webpack://ort/./lib/onnxjs/backends/webgl/ops/binary-op.ts","webpack://ort/./lib/onnxjs/backends/webgl/ops/cast.ts","webpack://ort/./lib/onnxjs/backends/webgl/ops/concat-packed.ts","webpack://ort/./lib/onnxjs/backends/webgl/ops/concat.ts","webpack://ort/./lib/onnxjs/backends/webgl/ops/conv-grouped.ts","webpack://ort/./lib/onnxjs/backends/webgl/ops/conv-pack.ts","webpack://ort/./lib/onnxjs/backends/webgl/ops/conv-transpose.ts","webpack://ort/./lib/onnxjs/backends/webgl/ops/conv.ts","webpack://ort/./lib/onnxjs/backends/webgl/ops/depth-to-space.ts","webpack://ort/./lib/onnxjs/backends/webgl/ops/dot-product.ts","webpack://ort/./lib/onnxjs/backends/webgl/ops/flatten.ts","webpack://ort/./lib/onnxjs/backends/webgl/ops/fuse-utils.ts","webpack://ort/./lib/onnxjs/backends/webgl/ops/gather.ts","webpack://ort/./lib/onnxjs/backends/webgl/ops/gemm.ts","webpack://ort/./lib/onnxjs/backends/webgl/ops/im2col-pack.ts","webpack://ort/./lib/onnxjs/backends/webgl/ops/im2col.ts","webpack://ort/./lib/onnxjs/backends/webgl/ops/image-scaler.ts","webpack://ort/./lib/onnxjs/backends/webgl/ops/instance-normalization.ts","webpack://ort/./lib/onnxjs/backends/webgl/ops/lrn.ts","webpack://ort/./lib/onnxjs/backends/webgl/ops/matmul-pack.ts","webpack://ort/./lib/onnxjs/backends/webgl/ops/matmul.ts","webpack://ort/./lib/onnxjs/backends/webgl/ops/pack.ts","webpack://ort/./lib/onnxjs/backends/webgl/ops/packing-utils.ts","webpack://ort/./lib/onnxjs/backends/webgl/ops/pad.ts","webpack://ort/./lib/onnxjs/backends/webgl/ops/pool.ts","webpack://ort/./lib/onnxjs/backends/webgl/ops/reduce.ts","webpack://ort/./lib/onnxjs/backends/webgl/ops/reshape-packed.ts","webpack://ort/./lib/onnxjs/backends/webgl/ops/reshape.ts","webpack://ort/./lib/onnxjs/backends/webgl/ops/resize-packed.ts","webpack://ort/./lib/onnxjs/backends/webgl/ops/shape.ts","webpack://ort/./lib/onnxjs/backends/webgl/ops/slice.ts","webpack://ort/./lib/onnxjs/backends/webgl/ops/softmax.ts","webpack://ort/./lib/onnxjs/backends/webgl/ops/split.ts","webpack://ort/./lib/onnxjs/backends/webgl/ops/squeeze.ts","webpack://ort/./lib/onnxjs/backends/webgl/ops/sum.ts","webpack://ort/./lib/onnxjs/backends/webgl/ops/tile.ts","webpack://ort/./lib/onnxjs/backends/webgl/ops/transpose.ts","webpack://ort/./lib/onnxjs/backends/webgl/ops/uint8-encode.ts","webpack://ort/./lib/onnxjs/backends/webgl/ops/unary-op.ts","webpack://ort/./lib/onnxjs/backends/webgl/ops/unpack.ts","webpack://ort/./lib/onnxjs/backends/webgl/ops/unsqueeze.ts","webpack://ort/./lib/onnxjs/backends/webgl/ops/upsample.ts","webpack://ort/./lib/onnxjs/backends/webgl/program-manager.ts","webpack://ort/./lib/onnxjs/backends/webgl/session-handler.ts","webpack://ort/./lib/onnxjs/backends/webgl/texture-data-encoder.ts","webpack://ort/./lib/onnxjs/backends/webgl/texture-layout-strategy.ts","webpack://ort/./lib/onnxjs/backends/webgl/texture-layout.ts","webpack://ort/./lib/onnxjs/backends/webgl/texture-manager.ts","webpack://ort/./lib/onnxjs/backends/webgl/types.ts","webpack://ort/./lib/onnxjs/backends/webgl/utils.ts","webpack://ort/./lib/onnxjs/backends/webgl/webgl-context-factory.ts","webpack://ort/./lib/onnxjs/backends/webgl/webgl-context.ts","webpack://ort/./lib/onnxjs/execution-plan.ts","webpack://ort/./lib/onnxjs/graph.ts","webpack://ort/./lib/onnxjs/instrument.ts","webpack://ort/./lib/onnxjs/model.ts","webpack://ort/./lib/onnxjs/operators.ts","webpack://ort/./lib/onnxjs/opset.ts","webpack://ort/./lib/onnxjs/ort-schema/ort-generated.ts","webpack://ort/./lib/onnxjs/session-handler.ts","webpack://ort/./lib/onnxjs/session.ts","webpack://ort/./lib/onnxjs/tensor.ts","webpack://ort/./lib/onnxjs/util.ts","webpack://ort/./lib/wasm/jsep/backend-webgpu.ts","webpack://ort/./lib/wasm/jsep/init.ts","webpack://ort/./lib/wasm/jsep/log.ts","webpack://ort/./lib/wasm/jsep/util.ts","webpack://ort/./lib/wasm/jsep/webgpu/attribute-with-cache-key.ts","webpack://ort/./lib/wasm/jsep/webgpu/gpu-data-manager.ts","webpack://ort/./lib/wasm/jsep/webgpu/op-resolve-rules.ts","webpack://ort/./lib/wasm/jsep/webgpu/ops/3rd-party/activation_util.ts","webpack://ort/./lib/wasm/jsep/webgpu/ops/3rd-party/conv2d_mm_webgpu.ts","webpack://ort/./lib/wasm/jsep/webgpu/ops/3rd-party/conv_util.ts","webpack://ort/./lib/wasm/jsep/webgpu/ops/3rd-party/matmul_packed_webgpu.ts","webpack://ort/./lib/wasm/jsep/webgpu/ops/binary-op.ts","webpack://ort/./lib/wasm/jsep/webgpu/ops/common.ts","webpack://ort/./lib/wasm/jsep/webgpu/ops/conv-grouped.ts","webpack://ort/./lib/wasm/jsep/webgpu/ops/conv.ts","webpack://ort/./lib/wasm/jsep/webgpu/ops/conv2d-mm.ts","webpack://ort/./lib/wasm/jsep/webgpu/ops/fuse-utils.ts","webpack://ort/./lib/wasm/jsep/webgpu/ops/gemm.ts","webpack://ort/./lib/wasm/jsep/webgpu/ops/matmul.ts","webpack://ort/./lib/wasm/jsep/webgpu/ops/pool.ts","webpack://ort/./lib/wasm/jsep/webgpu/ops/transpose.ts","webpack://ort/./lib/wasm/jsep/webgpu/ops/unary-op.ts","webpack://ort/./lib/wasm/jsep/webgpu/program-manager.ts","webpack://ort/./lib/wasm/jsep/webgpu/types.ts","webpack://ort/./lib/wasm/options-utils.ts","webpack://ort/./lib/wasm/proxy-wrapper.ts","webpack://ort/./lib/wasm/run-options.ts","webpack://ort/./lib/wasm/session-handler.ts","webpack://ort/./lib/wasm/session-options.ts","webpack://ort/./lib/wasm/string-utils.ts","webpack://ort/./lib/wasm/wasm-common.ts","webpack://ort/./lib/wasm/wasm-core-impl.ts","webpack://ort/./lib/wasm/wasm-factory.ts","webpack://ort/./lib/wasm/proxy-worker/main.ts","webpack://ort/../node_modules/worker-loader/dist/runtime/inline.js","webpack://ort/./lib/wasm/binding/ort-wasm-threaded.min.js","webpack://ort/./lib/wasm/binding/ort-wasm.js","webpack://ort/./node_modules/@protobufjs/aspromise/index.js","webpack://ort/./node_modules/@protobufjs/base64/index.js","webpack://ort/./node_modules/@protobufjs/eventemitter/index.js","webpack://ort/./node_modules/@protobufjs/float/index.js","webpack://ort/./node_modules/@protobufjs/inquire/index.js","webpack://ort/./node_modules/@protobufjs/pool/index.js","webpack://ort/./node_modules/@protobufjs/utf8/index.js","webpack://ort/./node_modules/guid-typescript/dist/guid.js","webpack://ort/./node_modules/long/src/long.js","webpack://ort/./node_modules/onnx-proto/dist/onnx.js","webpack://ort/./node_modules/protobufjs/minimal.js","webpack://ort/./node_modules/protobufjs/src/index-minimal.js","webpack://ort/./node_modules/protobufjs/src/reader.js","webpack://ort/./node_modules/protobufjs/src/reader_buffer.js","webpack://ort/./node_modules/protobufjs/src/roots.js","webpack://ort/./node_modules/protobufjs/src/rpc.js","webpack://ort/./node_modules/protobufjs/src/rpc/service.js","webpack://ort/./node_modules/protobufjs/src/util/longbits.js","webpack://ort/./node_modules/protobufjs/src/util/minimal.js","webpack://ort/./node_modules/protobufjs/src/writer.js","webpack://ort/./node_modules/protobufjs/src/writer_buffer.js","webpack://ort/./node_modules/flatbuffers/js/flatbuffers.mjs","webpack://ort/webpack/bootstrap","webpack://ort/webpack/runtime/compat get default export","webpack://ort/webpack/runtime/define property getters","webpack://ort/webpack/runtime/global","webpack://ort/webpack/runtime/hasOwnProperty shorthand","webpack://ort/webpack/runtime/make namespace object","webpack://ort/webpack/startup"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"ort\"] = factory();\n\telse\n\t\troot[\"ort\"] = factory();\n})(self, function() {\nreturn ","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\nconst backends = {};\nconst backendsSortedByPriority = [];\n/**\n * Register a backend.\n *\n * @param name - the name as a key to lookup as an execution provider.\n * @param backend - the backend object.\n * @param priority - an integer indicating the priority of the backend. Higher number means higher priority. if priority\n * < 0, it will be considered as a 'beta' version and will not be used as a fallback backend by default.\n *\n * @internal\n */\nexport const registerBackend = (name, backend, priority) => {\n    if (backend && typeof backend.init === 'function' && typeof backend.createSessionHandler === 'function') {\n        const currentBackend = backends[name];\n        if (currentBackend === undefined) {\n            backends[name] = { backend, priority };\n        }\n        else if (currentBackend.priority > priority) {\n            // same name is already registered with a higher priority. skip registeration.\n            return;\n        }\n        else if (currentBackend.priority === priority) {\n            if (currentBackend.backend !== backend) {\n                throw new Error(`cannot register backend \"${name}\" using priority ${priority}`);\n            }\n        }\n        if (priority >= 0) {\n            const i = backendsSortedByPriority.indexOf(name);\n            if (i !== -1) {\n                backendsSortedByPriority.splice(i, 1);\n            }\n            for (let i = 0; i < backendsSortedByPriority.length; i++) {\n                if (backends[backendsSortedByPriority[i]].priority <= priority) {\n                    backendsSortedByPriority.splice(i, 0, name);\n                    return;\n                }\n            }\n            backendsSortedByPriority.push(name);\n        }\n        return;\n    }\n    throw new TypeError('not a valid backend');\n};\n/**\n * Resolve backend by specified hints.\n *\n * @param backendHints - a list of execution provider names to lookup. If omitted use registered backends as list.\n * @returns a promise that resolves to the backend.\n *\n * @internal\n */\nexport const resolveBackend = async (backendHints) => {\n    const backendNames = backendHints.length === 0 ? backendsSortedByPriority : backendHints;\n    const errors = [];\n    for (const backendName of backendNames) {\n        const backendInfo = backends[backendName];\n        if (backendInfo) {\n            if (backendInfo.initialized) {\n                return backendInfo.backend;\n            }\n            else if (backendInfo.aborted) {\n                continue; // current backend is unavailable; try next\n            }\n            const isInitializing = !!backendInfo.initPromise;\n            try {\n                if (!isInitializing) {\n                    backendInfo.initPromise = backendInfo.backend.init();\n                }\n                await backendInfo.initPromise;\n                backendInfo.initialized = true;\n                return backendInfo.backend;\n            }\n            catch (e) {\n                if (!isInitializing) {\n                    errors.push({ name: backendName, err: e });\n                }\n                backendInfo.aborted = true;\n            }\n            finally {\n                delete backendInfo.initPromise;\n            }\n        }\n    }\n    throw new Error(`no available backend found. ERR: ${errors.map(e => `[${e.name}] ${e.err}`).join(', ')}`);\n};\n//# sourceMappingURL=backend-impl.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\nlet logLevelValue = 'warning';\nexport const env = {\n    wasm: {},\n    webgl: {},\n    webgpu: {},\n    set logLevel(value) {\n        if (value === undefined) {\n            return;\n        }\n        if (typeof value !== 'string' || ['verbose', 'info', 'warning', 'error', 'fatal'].indexOf(value) === -1) {\n            throw new Error(`Unsupported logging level: ${value}`);\n        }\n        logLevelValue = value;\n    },\n    get logLevel() {\n        return logLevelValue;\n    },\n};\n// set property 'logLevel' so that they can be correctly transferred to worker by `postMessage()`.\nObject.defineProperty(env, 'logLevel', { enumerable: true });\n//# sourceMappingURL=env-impl.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\nimport { env as envImpl } from './env-impl';\n/**\n * Represent a set of flags as a global singleton.\n */\nexport const env = envImpl;\n//# sourceMappingURL=env.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n// a runtime map that maps type string to TypedArray constructor. Should match Tensor.DataTypeMap.\nconst NUMERIC_TENSOR_TYPE_TO_TYPEDARRAY_MAP = new Map([\n    ['float32', Float32Array],\n    ['uint8', Uint8Array],\n    ['int8', Int8Array],\n    ['uint16', Uint16Array],\n    ['float16', Uint16Array],\n    ['int16', Int16Array],\n    ['int32', Int32Array],\n    ['bool', Uint8Array],\n    ['float64', Float64Array],\n    ['uint32', Uint32Array],\n]);\n// a runtime map that maps type string to TypedArray constructor. Should match Tensor.DataTypeMap.\nconst NUMERIC_TENSOR_TYPEDARRAY_TO_TYPE_MAP = new Map([\n    [Float32Array, 'float32'],\n    [Uint8Array, 'uint8'],\n    [Int8Array, 'int8'],\n    [Uint16Array, 'uint16'],\n    [Int16Array, 'int16'],\n    [Int32Array, 'int32'],\n    [Float64Array, 'float64'],\n    [Uint32Array, 'uint32'],\n]);\n// the following code allows delaying execution of BigInt checking. This allows lazy initialization for\n// NUMERIC_TENSOR_TYPE_TO_TYPEDARRAY_MAP and NUMERIC_TENSOR_TYPEDARRAY_TO_TYPE_MAP, which allows BigInt polyfill\n// if available.\nlet isBigIntChecked = false;\nconst checkBigInt = () => {\n    if (!isBigIntChecked) {\n        isBigIntChecked = true;\n        const isBigInt64ArrayAvailable = typeof BigInt64Array !== 'undefined' && typeof BigInt64Array.from === 'function';\n        const isBigUint64ArrayAvailable = typeof BigUint64Array !== 'undefined' && typeof BigUint64Array.from === 'function';\n        if (isBigInt64ArrayAvailable) {\n            NUMERIC_TENSOR_TYPE_TO_TYPEDARRAY_MAP.set('int64', BigInt64Array);\n            NUMERIC_TENSOR_TYPEDARRAY_TO_TYPE_MAP.set(BigInt64Array, 'int64');\n        }\n        if (isBigUint64ArrayAvailable) {\n            NUMERIC_TENSOR_TYPE_TO_TYPEDARRAY_MAP.set('uint64', BigUint64Array);\n            NUMERIC_TENSOR_TYPEDARRAY_TO_TYPE_MAP.set(BigUint64Array, 'uint64');\n        }\n    }\n};\n/**\n * calculate size from dims.\n *\n * @param dims the dims array. May be an illegal input.\n */\nconst calculateSize = (dims) => {\n    let size = 1;\n    for (let i = 0; i < dims.length; i++) {\n        const dim = dims[i];\n        if (typeof dim !== 'number' || !Number.isSafeInteger(dim)) {\n            throw new TypeError(`dims[${i}] must be an integer, got: ${dim}`);\n        }\n        if (dim < 0) {\n            throw new RangeError(`dims[${i}] must be a non-negative integer, got: ${dim}`);\n        }\n        size *= dim;\n    }\n    return size;\n};\nexport class Tensor {\n    constructor(arg0, arg1, arg2) {\n        checkBigInt();\n        let type;\n        let data;\n        let dims;\n        // check whether arg0 is type or data\n        if (typeof arg0 === 'string') {\n            //\n            // Override: constructor(type, data, ...)\n            //\n            type = arg0;\n            dims = arg2;\n            if (arg0 === 'string') {\n                // string tensor\n                if (!Array.isArray(arg1)) {\n                    throw new TypeError('A string tensor\\'s data must be a string array.');\n                }\n                // we don't check whether every element in the array is string; this is too slow. we assume it's correct and\n                // error will be populated at inference\n                data = arg1;\n            }\n            else {\n                // numeric tensor\n                const typedArrayConstructor = NUMERIC_TENSOR_TYPE_TO_TYPEDARRAY_MAP.get(arg0);\n                if (typedArrayConstructor === undefined) {\n                    throw new TypeError(`Unsupported tensor type: ${arg0}.`);\n                }\n                if (Array.isArray(arg1)) {\n                    // use 'as any' here because TypeScript's check on type of 'SupportedTypedArrayConstructors.from()' produces\n                    // incorrect results.\n                    // 'typedArrayConstructor' should be one of the typed array prototype objects.\n                    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                    data = typedArrayConstructor.from(arg1);\n                }\n                else if (arg1 instanceof typedArrayConstructor) {\n                    data = arg1;\n                }\n                else {\n                    throw new TypeError(`A ${type} tensor's data must be type of ${typedArrayConstructor}`);\n                }\n            }\n        }\n        else {\n            //\n            // Override: constructor(data, ...)\n            //\n            dims = arg1;\n            if (Array.isArray(arg0)) {\n                // only boolean[] and string[] is supported\n                if (arg0.length === 0) {\n                    throw new TypeError('Tensor type cannot be inferred from an empty array.');\n                }\n                const firstElementType = typeof arg0[0];\n                if (firstElementType === 'string') {\n                    type = 'string';\n                    data = arg0;\n                }\n                else if (firstElementType === 'boolean') {\n                    type = 'bool';\n                    // 'arg0' is of type 'boolean[]'. Uint8Array.from(boolean[]) actually works, but typescript thinks this is\n                    // wrong type. We use 'as any' to make it happy.\n                    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                    data = Uint8Array.from(arg0);\n                }\n                else {\n                    throw new TypeError(`Invalid element type of data array: ${firstElementType}.`);\n                }\n            }\n            else {\n                // get tensor type from TypedArray\n                const mappedType = NUMERIC_TENSOR_TYPEDARRAY_TO_TYPE_MAP.get(arg0.constructor);\n                if (mappedType === undefined) {\n                    throw new TypeError(`Unsupported type for tensor data: ${arg0.constructor}.`);\n                }\n                type = mappedType;\n                data = arg0;\n            }\n        }\n        // type and data is processed, now processing dims\n        if (dims === undefined) {\n            // assume 1-D tensor if dims omitted\n            dims = [data.length];\n        }\n        else if (!Array.isArray(dims)) {\n            throw new TypeError('A tensor\\'s dims must be a number array');\n        }\n        // perform check\n        const size = calculateSize(dims);\n        if (size !== data.length) {\n            throw new Error(`Tensor's size(${size}) does not match data length(${data.length}).`);\n        }\n        this.dims = dims;\n        this.type = type;\n        this.data = data;\n        this.size = size;\n    }\n    // #endregion\n    /**\n     * Create a new tensor object from image object\n     *\n     * @param buffer - Extracted image buffer data - assuming RGBA format\n     * @param imageFormat - input image configuration - required configurations height, width, format\n     * @param tensorFormat - output tensor configuration - Default is RGB format\n     */\n    static bufferToTensor(buffer, options) {\n        if (buffer === undefined) {\n            throw new Error('Image buffer must be defined');\n        }\n        if (options.height === undefined || options.width === undefined) {\n            throw new Error('Image height and width must be defined');\n        }\n        if (options.tensorLayout === 'NHWC') {\n            throw new Error('NHWC Tensor layout is not supported yet');\n        }\n        const { height, width } = options;\n        const norm = options.norm ?? { mean: 255, bias: 0 };\n        let normMean;\n        let normBias;\n        if (typeof (norm.mean) === 'number') {\n            normMean = [norm.mean, norm.mean, norm.mean, norm.mean];\n        }\n        else {\n            normMean = [norm.mean[0], norm.mean[1], norm.mean[2], norm.mean[3] ?? 255];\n        }\n        if (typeof (norm.bias) === 'number') {\n            normBias = [norm.bias, norm.bias, norm.bias, norm.bias];\n        }\n        else {\n            normBias = [norm.bias[0], norm.bias[1], norm.bias[2], norm.bias[3] ?? 0];\n        }\n        const inputformat = options.bitmapFormat !== undefined ? options.bitmapFormat : 'RGBA';\n        // default value is RGBA since imagedata and HTMLImageElement uses it\n        const outputformat = options.tensorFormat !== undefined ?\n            (options.tensorFormat !== undefined ? options.tensorFormat : 'RGB') :\n            'RGB';\n        const stride = height * width;\n        const float32Data = outputformat === 'RGBA' ? new Float32Array(stride * 4) : new Float32Array(stride * 3);\n        // Default pointer assignments\n        let step = 4, rImagePointer = 0, gImagePointer = 1, bImagePointer = 2, aImagePointer = 3;\n        let rTensorPointer = 0, gTensorPointer = stride, bTensorPointer = stride * 2, aTensorPointer = -1;\n        // Updating the pointer assignments based on the input image format\n        if (inputformat === 'RGB') {\n            step = 3;\n            rImagePointer = 0;\n            gImagePointer = 1;\n            bImagePointer = 2;\n            aImagePointer = -1;\n        }\n        // Updating the pointer assignments based on the output tensor format\n        if (outputformat === 'RGBA') {\n            aTensorPointer = stride * 3;\n        }\n        else if (outputformat === 'RBG') {\n            rTensorPointer = 0;\n            bTensorPointer = stride;\n            gTensorPointer = stride * 2;\n        }\n        else if (outputformat === 'BGR') {\n            bTensorPointer = 0;\n            gTensorPointer = stride;\n            rTensorPointer = stride * 2;\n        }\n        for (let i = 0; i < stride; i++, rImagePointer += step, bImagePointer += step, gImagePointer += step, aImagePointer += step) {\n            float32Data[rTensorPointer++] = (buffer[rImagePointer] + normBias[0]) / normMean[0];\n            float32Data[gTensorPointer++] = (buffer[gImagePointer] + normBias[1]) / normMean[1];\n            float32Data[bTensorPointer++] = (buffer[bImagePointer] + normBias[2]) / normMean[2];\n            if (aTensorPointer !== -1 && aImagePointer !== -1) {\n                float32Data[aTensorPointer++] = (buffer[aImagePointer] + normBias[3]) / normMean[3];\n            }\n        }\n        // Float32Array -> ort.Tensor\n        const outputTensor = outputformat === 'RGBA' ? new Tensor('float32', float32Data, [1, 4, height, width]) :\n            new Tensor('float32', float32Data, [1, 3, height, width]);\n        return outputTensor;\n    }\n    static async fromImage(image, options) {\n        // checking the type of image object\n        const isHTMLImageEle = typeof (HTMLImageElement) !== 'undefined' && image instanceof HTMLImageElement;\n        const isImageDataEle = typeof (ImageData) !== 'undefined' && image instanceof ImageData;\n        const isImageBitmap = typeof (ImageBitmap) !== 'undefined' && image instanceof ImageBitmap;\n        const isString = typeof image === 'string';\n        let data;\n        let tensorConfig = options ?? {};\n        // filling and checking image configuration options\n        if (isHTMLImageEle) {\n            // HTMLImageElement - image object - format is RGBA by default\n            const canvas = document.createElement('canvas');\n            canvas.width = image.width;\n            canvas.height = image.height;\n            const pixels2DContext = canvas.getContext('2d');\n            if (pixels2DContext != null) {\n                let height = image.height;\n                let width = image.width;\n                if (options !== undefined && options.resizedHeight !== undefined && options.resizedWidth !== undefined) {\n                    height = options.resizedHeight;\n                    width = options.resizedWidth;\n                }\n                if (options !== undefined) {\n                    tensorConfig = options;\n                    if (options.tensorFormat !== undefined) {\n                        throw new Error('Image input config format must be RGBA for HTMLImageElement');\n                    }\n                    else {\n                        tensorConfig.tensorFormat = 'RGBA';\n                    }\n                    if (options.height !== undefined && options.height !== height) {\n                        throw new Error('Image input config height doesn\\'t match HTMLImageElement height');\n                    }\n                    else {\n                        tensorConfig.height = height;\n                    }\n                    if (options.width !== undefined && options.width !== width) {\n                        throw new Error('Image input config width doesn\\'t match HTMLImageElement width');\n                    }\n                    else {\n                        tensorConfig.width = width;\n                    }\n                }\n                else {\n                    tensorConfig.tensorFormat = 'RGBA';\n                    tensorConfig.height = height;\n                    tensorConfig.width = width;\n                }\n                pixels2DContext.drawImage(image, 0, 0);\n                data = pixels2DContext.getImageData(0, 0, width, height).data;\n            }\n            else {\n                throw new Error('Can not access image data');\n            }\n        }\n        else if (isImageDataEle) {\n            // ImageData - image object - format is RGBA by default\n            const format = 'RGBA';\n            let height;\n            let width;\n            if (options !== undefined && options.resizedWidth !== undefined && options.resizedHeight !== undefined) {\n                height = options.resizedHeight;\n                width = options.resizedWidth;\n            }\n            else {\n                height = image.height;\n                width = image.width;\n            }\n            if (options !== undefined) {\n                tensorConfig = options;\n                if (options.bitmapFormat !== undefined && options.bitmapFormat !== format) {\n                    throw new Error('Image input config format must be RGBA for ImageData');\n                }\n                else {\n                    tensorConfig.bitmapFormat = 'RGBA';\n                }\n            }\n            else {\n                tensorConfig.bitmapFormat = 'RGBA';\n            }\n            tensorConfig.height = height;\n            tensorConfig.width = width;\n            if (options !== undefined) {\n                const tempCanvas = document.createElement('canvas');\n                tempCanvas.width = width;\n                tempCanvas.height = height;\n                const pixels2DContext = tempCanvas.getContext('2d');\n                if (pixels2DContext != null) {\n                    pixels2DContext.putImageData(image, 0, 0);\n                    data = pixels2DContext.getImageData(0, 0, width, height).data;\n                }\n                else {\n                    throw new Error('Can not access image data');\n                }\n            }\n            else {\n                data = image.data;\n            }\n        }\n        else if (isImageBitmap) {\n            // ImageBitmap - image object - format must be provided by user\n            if (options === undefined) {\n                throw new Error('Please provide image config with format for Imagebitmap');\n            }\n            if (options.bitmapFormat !== undefined) {\n                throw new Error('Image input config format must be defined for ImageBitmap');\n            }\n            const pixels2DContext = document.createElement('canvas').getContext('2d');\n            if (pixels2DContext != null) {\n                const height = image.height;\n                const width = image.width;\n                pixels2DContext.drawImage(image, 0, 0, width, height);\n                data = pixels2DContext.getImageData(0, 0, width, height).data;\n                if (options !== undefined) {\n                    // using square brackets to avoid TS error - type 'never'\n                    if (options.height !== undefined && options.height !== height) {\n                        throw new Error('Image input config height doesn\\'t match ImageBitmap height');\n                    }\n                    else {\n                        tensorConfig.height = height;\n                    }\n                    // using square brackets to avoid TS error - type 'never'\n                    if (options.width !== undefined && options.width !== width) {\n                        throw new Error('Image input config width doesn\\'t match ImageBitmap width');\n                    }\n                    else {\n                        tensorConfig.width = width;\n                    }\n                }\n                else {\n                    tensorConfig.height = height;\n                    tensorConfig.width = width;\n                }\n                return Tensor.bufferToTensor(data, tensorConfig);\n            }\n            else {\n                throw new Error('Can not access image data');\n            }\n        }\n        else if (isString) {\n            return new Promise((resolve, reject) => {\n                const canvas = document.createElement('canvas');\n                const context = canvas.getContext('2d');\n                if (!image || !context) {\n                    return reject();\n                }\n                const newImage = new Image();\n                newImage.crossOrigin = 'Anonymous';\n                newImage.src = image;\n                newImage.onload = () => {\n                    canvas.width = newImage.width;\n                    canvas.height = newImage.height;\n                    context.drawImage(newImage, 0, 0, canvas.width, canvas.height);\n                    const img = context.getImageData(0, 0, canvas.width, canvas.height);\n                    if (options !== undefined) {\n                        if (options.height !== undefined && options.height !== canvas.height) {\n                            throw new Error('Image input config height doesn\\'t match height');\n                        }\n                        else {\n                            tensorConfig.height = canvas.height;\n                        }\n                        if (options.width !== undefined && options.width !== canvas.width) {\n                            throw new Error('Image input config width doesn\\'t match width');\n                        }\n                        else {\n                            tensorConfig.width = canvas.width;\n                        }\n                    }\n                    else {\n                        tensorConfig.height = canvas.height;\n                        tensorConfig.width = canvas.width;\n                    }\n                    resolve(Tensor.bufferToTensor(img.data, tensorConfig));\n                };\n            });\n        }\n        else {\n            throw new Error('Input data provided is not supported - aborted tensor creation');\n        }\n        if (data !== undefined) {\n            return Tensor.bufferToTensor(data, tensorConfig);\n        }\n        else {\n            throw new Error('Input data provided is not supported - aborted tensor creation');\n        }\n    }\n    toDataURL(options) {\n        const canvas = document.createElement('canvas');\n        canvas.width = this.dims[3];\n        canvas.height = this.dims[2];\n        const pixels2DContext = canvas.getContext('2d');\n        if (pixels2DContext != null) {\n            // Default values for height and width & format\n            let width;\n            let height;\n            if (options?.tensorLayout !== undefined && options.tensorLayout === 'NHWC') {\n                width = this.dims[2];\n                height = this.dims[3];\n            }\n            else { // Default layout is NCWH\n                width = this.dims[3];\n                height = this.dims[2];\n            }\n            const inputformat = options?.format !== undefined ? options.format : 'RGB';\n            const norm = options?.norm;\n            let normMean;\n            let normBias;\n            if (norm === undefined || norm.mean === undefined) {\n                normMean = [255, 255, 255, 255];\n            }\n            else {\n                if (typeof (norm.mean) === 'number') {\n                    normMean = [norm.mean, norm.mean, norm.mean, norm.mean];\n                }\n                else {\n                    normMean = [norm.mean[0], norm.mean[1], norm.mean[2], 0];\n                    if (norm.mean[3] !== undefined) {\n                        normMean[3] = norm.mean[3];\n                    }\n                }\n            }\n            if (norm === undefined || norm.bias === undefined) {\n                normBias = [0, 0, 0, 0];\n            }\n            else {\n                if (typeof (norm.bias) === 'number') {\n                    normBias = [norm.bias, norm.bias, norm.bias, norm.bias];\n                }\n                else {\n                    normBias = [norm.bias[0], norm.bias[1], norm.bias[2], 0];\n                    if (norm.bias[3] !== undefined) {\n                        normBias[3] = norm.bias[3];\n                    }\n                }\n            }\n            const stride = height * width;\n            // Default pointer assignments\n            let rTensorPointer = 0, gTensorPointer = stride, bTensorPointer = stride * 2, aTensorPointer = -1;\n            // Updating the pointer assignments based on the input image format\n            if (inputformat === 'RGBA') {\n                rTensorPointer = 0;\n                gTensorPointer = stride;\n                bTensorPointer = stride * 2;\n                aTensorPointer = stride * 3;\n            }\n            else if (inputformat === 'RGB') {\n                rTensorPointer = 0;\n                gTensorPointer = stride;\n                bTensorPointer = stride * 2;\n            }\n            else if (inputformat === 'RBG') {\n                rTensorPointer = 0;\n                bTensorPointer = stride;\n                gTensorPointer = stride * 2;\n            }\n            for (let i = 0; i < height; i++) {\n                for (let j = 0; j < width; j++) {\n                    const R = (this.data[rTensorPointer++] - normBias[0]) * normMean[0]; // R value\n                    const G = (this.data[gTensorPointer++] - normBias[1]) * normMean[1]; // G value\n                    const B = (this.data[bTensorPointer++] - normBias[2]) * normMean[2]; // B value\n                    const A = aTensorPointer === -1 ?\n                        255 :\n                        (this.data[aTensorPointer++] - normBias[3]) * normMean[3]; // A value\n                    // eslint-disable-next-line @typescript-eslint/restrict-plus-operands\n                    pixels2DContext.fillStyle = 'rgba(' + R + ',' + G + ',' + B + ',' + A + ')';\n                    pixels2DContext.fillRect(j, i, 1, 1);\n                }\n            }\n            return canvas.toDataURL();\n        }\n        else {\n            throw new Error('Can not access image data');\n        }\n    }\n    toImageData(options) {\n        const pixels2DContext = document.createElement('canvas').getContext('2d');\n        let image;\n        if (pixels2DContext != null) {\n            // Default values for height and width & format\n            let width;\n            let height;\n            let channels;\n            if (options?.tensorLayout !== undefined && options.tensorLayout === 'NHWC') {\n                width = this.dims[2];\n                height = this.dims[1];\n                channels = this.dims[3];\n            }\n            else { // Default layout is NCWH\n                width = this.dims[3];\n                height = this.dims[2];\n                channels = this.dims[1];\n            }\n            const inputformat = options !== undefined ? (options.format !== undefined ? options.format : 'RGB') : 'RGB';\n            const norm = options?.norm;\n            let normMean;\n            let normBias;\n            if (norm === undefined || norm.mean === undefined) {\n                normMean = [255, 255, 255, 255];\n            }\n            else {\n                if (typeof (norm.mean) === 'number') {\n                    normMean = [norm.mean, norm.mean, norm.mean, norm.mean];\n                }\n                else {\n                    normMean = [norm.mean[0], norm.mean[1], norm.mean[2], 255];\n                    if (norm.mean[3] !== undefined) {\n                        normMean[3] = norm.mean[3];\n                    }\n                }\n            }\n            if (norm === undefined || norm.bias === undefined) {\n                normBias = [0, 0, 0, 0];\n            }\n            else {\n                if (typeof (norm.bias) === 'number') {\n                    normBias = [norm.bias, norm.bias, norm.bias, norm.bias];\n                }\n                else {\n                    normBias = [norm.bias[0], norm.bias[1], norm.bias[2], 0];\n                    if (norm.bias[3] !== undefined) {\n                        normBias[3] = norm.bias[3];\n                    }\n                }\n            }\n            const stride = height * width;\n            if (options !== undefined) {\n                if (options.height !== undefined && options.height !== height) {\n                    throw new Error('Image output config height doesn\\'t match tensor height');\n                }\n                if (options.width !== undefined && options.width !== width) {\n                    throw new Error('Image output config width doesn\\'t match tensor width');\n                }\n                if (options.format !== undefined && (channels === 4 && options.format !== 'RGBA') ||\n                    (channels === 3 && (options.format !== 'RGB' && options.format !== 'BGR'))) {\n                    throw new Error('Tensor format doesn\\'t match input tensor dims');\n                }\n            }\n            // Default pointer assignments\n            const step = 4;\n            let rImagePointer = 0, gImagePointer = 1, bImagePointer = 2, aImagePointer = 3;\n            let rTensorPointer = 0, gTensorPointer = stride, bTensorPointer = stride * 2, aTensorPointer = -1;\n            // Updating the pointer assignments based on the input image format\n            if (inputformat === 'RGBA') {\n                rTensorPointer = 0;\n                gTensorPointer = stride;\n                bTensorPointer = stride * 2;\n                aTensorPointer = stride * 3;\n            }\n            else if (inputformat === 'RGB') {\n                rTensorPointer = 0;\n                gTensorPointer = stride;\n                bTensorPointer = stride * 2;\n            }\n            else if (inputformat === 'RBG') {\n                rTensorPointer = 0;\n                bTensorPointer = stride;\n                gTensorPointer = stride * 2;\n            }\n            image = pixels2DContext.createImageData(width, height);\n            for (let i = 0; i < height * width; rImagePointer += step, gImagePointer += step, bImagePointer += step, aImagePointer += step, i++) {\n                image.data[rImagePointer] = (this.data[rTensorPointer++] - normBias[0]) * normMean[0]; // R value\n                image.data[gImagePointer] = (this.data[gTensorPointer++] - normBias[1]) * normMean[1]; // G value\n                image.data[bImagePointer] = (this.data[bTensorPointer++] - normBias[2]) * normMean[2]; // B value\n                image.data[aImagePointer] = aTensorPointer === -1 ?\n                    255 :\n                    (this.data[aTensorPointer++] - normBias[3]) * normMean[3]; // A value\n            }\n        }\n        else {\n            throw new Error('Can not access image data');\n        }\n        return image;\n    }\n    // #endregion\n    // #region tensor utilities\n    reshape(dims) {\n        return new Tensor(this.type, this.data, dims);\n    }\n}\n//# sourceMappingURL=tensor-impl.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\nimport { Tensor as TensorImpl } from './tensor-impl';\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport const Tensor = TensorImpl;\n//# sourceMappingURL=tensor.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\nimport { resolveBackend } from './backend-impl';\nimport { Tensor } from './tensor';\nexport class InferenceSession {\n    constructor(handler) {\n        this.handler = handler;\n    }\n    async run(feeds, arg1, arg2) {\n        const fetches = {};\n        let options = {};\n        // check inputs\n        if (typeof feeds !== 'object' || feeds === null || feeds instanceof Tensor || Array.isArray(feeds)) {\n            throw new TypeError('\\'feeds\\' must be an object that use input names as keys and OnnxValue as corresponding values.');\n        }\n        let isFetchesEmpty = true;\n        // determine which override is being used\n        if (typeof arg1 === 'object') {\n            if (arg1 === null) {\n                throw new TypeError('Unexpected argument[1]: cannot be null.');\n            }\n            if (arg1 instanceof Tensor) {\n                throw new TypeError('\\'fetches\\' cannot be a Tensor');\n            }\n            if (Array.isArray(arg1)) {\n                if (arg1.length === 0) {\n                    throw new TypeError('\\'fetches\\' cannot be an empty array.');\n                }\n                isFetchesEmpty = false;\n                // output names\n                for (const name of arg1) {\n                    if (typeof name !== 'string') {\n                        throw new TypeError('\\'fetches\\' must be a string array or an object.');\n                    }\n                    if (this.outputNames.indexOf(name) === -1) {\n                        throw new RangeError(`'fetches' contains invalid output name: ${name}.`);\n                    }\n                    fetches[name] = null;\n                }\n                if (typeof arg2 === 'object' && arg2 !== null) {\n                    options = arg2;\n                }\n                else if (typeof arg2 !== 'undefined') {\n                    throw new TypeError('\\'options\\' must be an object.');\n                }\n            }\n            else {\n                // decide whether arg1 is fetches or options\n                // if any output name is present and its value is valid OnnxValue, we consider it fetches\n                let isFetches = false;\n                const arg1Keys = Object.getOwnPropertyNames(arg1);\n                for (const name of this.outputNames) {\n                    if (arg1Keys.indexOf(name) !== -1) {\n                        const v = arg1[name];\n                        if (v === null || v instanceof Tensor) {\n                            isFetches = true;\n                            isFetchesEmpty = false;\n                            fetches[name] = v;\n                        }\n                    }\n                }\n                if (isFetches) {\n                    if (typeof arg2 === 'object' && arg2 !== null) {\n                        options = arg2;\n                    }\n                    else if (typeof arg2 !== 'undefined') {\n                        throw new TypeError('\\'options\\' must be an object.');\n                    }\n                }\n                else {\n                    options = arg1;\n                }\n            }\n        }\n        else if (typeof arg1 !== 'undefined') {\n            throw new TypeError('Unexpected argument[1]: must be \\'fetches\\' or \\'options\\'.');\n        }\n        // check if all inputs are in feed\n        for (const name of this.inputNames) {\n            if (typeof feeds[name] === 'undefined') {\n                throw new Error(`input '${name}' is missing in 'feeds'.`);\n            }\n        }\n        // if no fetches is specified, we use the full output names list\n        if (isFetchesEmpty) {\n            for (const name of this.outputNames) {\n                fetches[name] = null;\n            }\n        }\n        // feeds, fetches and options are prepared\n        const results = await this.handler.run(feeds, fetches, options);\n        const returnValue = {};\n        for (const key in results) {\n            if (Object.hasOwnProperty.call(results, key)) {\n                returnValue[key] = new Tensor(results[key].type, results[key].data, results[key].dims);\n            }\n        }\n        return returnValue;\n    }\n    static async create(arg0, arg1, arg2, arg3) {\n        // either load from a file or buffer\n        let filePathOrUint8Array;\n        let options = {};\n        if (typeof arg0 === 'string') {\n            filePathOrUint8Array = arg0;\n            if (typeof arg1 === 'object' && arg1 !== null) {\n                options = arg1;\n            }\n            else if (typeof arg1 !== 'undefined') {\n                throw new TypeError('\\'options\\' must be an object.');\n            }\n        }\n        else if (arg0 instanceof Uint8Array) {\n            filePathOrUint8Array = arg0;\n            if (typeof arg1 === 'object' && arg1 !== null) {\n                options = arg1;\n            }\n            else if (typeof arg1 !== 'undefined') {\n                throw new TypeError('\\'options\\' must be an object.');\n            }\n        }\n        else if (arg0 instanceof ArrayBuffer ||\n            (typeof SharedArrayBuffer !== 'undefined' && arg0 instanceof SharedArrayBuffer)) {\n            const buffer = arg0;\n            let byteOffset = 0;\n            let byteLength = arg0.byteLength;\n            if (typeof arg1 === 'object' && arg1 !== null) {\n                options = arg1;\n            }\n            else if (typeof arg1 === 'number') {\n                byteOffset = arg1;\n                if (!Number.isSafeInteger(byteOffset)) {\n                    throw new RangeError('\\'byteOffset\\' must be an integer.');\n                }\n                if (byteOffset < 0 || byteOffset >= buffer.byteLength) {\n                    throw new RangeError(`'byteOffset' is out of range [0, ${buffer.byteLength}).`);\n                }\n                byteLength = arg0.byteLength - byteOffset;\n                if (typeof arg2 === 'number') {\n                    byteLength = arg2;\n                    if (!Number.isSafeInteger(byteLength)) {\n                        throw new RangeError('\\'byteLength\\' must be an integer.');\n                    }\n                    if (byteLength <= 0 || byteOffset + byteLength > buffer.byteLength) {\n                        throw new RangeError(`'byteLength' is out of range (0, ${buffer.byteLength - byteOffset}].`);\n                    }\n                    if (typeof arg3 === 'object' && arg3 !== null) {\n                        options = arg3;\n                    }\n                    else if (typeof arg3 !== 'undefined') {\n                        throw new TypeError('\\'options\\' must be an object.');\n                    }\n                }\n                else if (typeof arg2 !== 'undefined') {\n                    throw new TypeError('\\'byteLength\\' must be a number.');\n                }\n            }\n            else if (typeof arg1 !== 'undefined') {\n                throw new TypeError('\\'options\\' must be an object.');\n            }\n            filePathOrUint8Array = new Uint8Array(buffer, byteOffset, byteLength);\n        }\n        else {\n            throw new TypeError('Unexpected argument[0]: must be \\'path\\' or \\'buffer\\'.');\n        }\n        // get backend hints\n        const eps = options.executionProviders || [];\n        const backendHints = eps.map(i => typeof i === 'string' ? i : i.name);\n        const backend = await resolveBackend(backendHints);\n        const handler = await backend.createSessionHandler(filePathOrUint8Array, options);\n        return new InferenceSession(handler);\n    }\n    startProfiling() {\n        this.handler.startProfiling();\n    }\n    endProfiling() {\n        this.handler.endProfiling();\n    }\n    get inputNames() {\n        return this.handler.inputNames;\n    }\n    get outputNames() {\n        return this.handler.outputNames;\n    }\n}\n//# sourceMappingURL=inference-session-impl.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\nimport { InferenceSession as InferenceSessionImpl } from './inference-session-impl';\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport const InferenceSession = InferenceSessionImpl;\n//# sourceMappingURL=inference-session.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\n/* eslint-disable import/no-internal-modules */\nimport {Backend, InferenceSession, SessionHandler} from 'onnxruntime-common';\n\nimport {Session} from './onnxjs/session';\nimport {OnnxjsSessionHandler} from './onnxjs/session-handler';\n\nclass OnnxjsBackend implements Backend {\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  async init(): Promise<void> {}\n\n  async createSessionHandler(pathOrBuffer: string|Uint8Array, options?: InferenceSession.SessionOptions):\n      Promise<SessionHandler> {\n    // NOTE: Session.Config(from onnx.js) is not compatible with InferenceSession.SessionOptions(from\n    // onnxruntime-common).\n    //       In future we should remove Session.Config and use InferenceSession.SessionOptions.\n    //       Currently we allow this to happen to make test runner work.\n    const session = new Session(options as unknown as Session.Config);\n\n    // typescript cannot merge method override correctly (so far in 4.2.3). need if-else to call the method.\n    if (typeof pathOrBuffer === 'string') {\n      await session.loadModel(pathOrBuffer);\n    } else {\n      await session.loadModel(pathOrBuffer);\n    }\n\n    return new OnnxjsSessionHandler(session);\n  }\n}\n\nexport const onnxjsBackend = new OnnxjsBackend();\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Backend, env, InferenceSession, SessionHandler} from 'onnxruntime-common';\nimport {cpus} from 'os';\n\nimport {initializeWebAssemblyInstance} from './wasm/proxy-wrapper';\nimport {OnnxruntimeWebAssemblySessionHandler} from './wasm/session-handler';\n\n/**\n * This function initializes all flags for WebAssembly.\n *\n * Those flags are accessible from `ort.env.wasm`. Users are allow to set those flags before the first inference session\n * being created, to override default value.\n */\nexport const initializeFlags = (): void => {\n  if (typeof env.wasm.initTimeout !== 'number' || env.wasm.initTimeout < 0) {\n    env.wasm.initTimeout = 0;\n  }\n\n  if (typeof env.wasm.simd !== 'boolean') {\n    env.wasm.simd = true;\n  }\n\n  if (typeof env.wasm.proxy !== 'boolean') {\n    env.wasm.proxy = false;\n  }\n\n  if (typeof env.wasm.numThreads !== 'number' || !Number.isInteger(env.wasm.numThreads) || env.wasm.numThreads <= 0) {\n    const numCpuLogicalCores = typeof navigator === 'undefined' ? cpus().length : navigator.hardwareConcurrency;\n    env.wasm.numThreads = Math.min(4, Math.ceil((numCpuLogicalCores || 1) / 2));\n  }\n};\n\nclass OnnxruntimeWebAssemblyBackend implements Backend {\n  async init(): Promise<void> {\n    // populate wasm flags\n    initializeFlags();\n\n    // init wasm\n    await initializeWebAssemblyInstance();\n  }\n  createSessionHandler(path: string, options?: InferenceSession.SessionOptions): Promise<SessionHandler>;\n  createSessionHandler(buffer: Uint8Array, options?: InferenceSession.SessionOptions): Promise<SessionHandler>;\n  async createSessionHandler(pathOrBuffer: string|Uint8Array, options?: InferenceSession.SessionOptions):\n      Promise<SessionHandler> {\n    const handler = new OnnxruntimeWebAssemblySessionHandler();\n    await handler.loadModel(pathOrBuffer, options);\n    return Promise.resolve(handler);\n  }\n}\n\nexport const wasmBackend = new OnnxruntimeWebAssemblyBackend();\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\n/* eslint-disable @typescript-eslint/no-var-requires, @typescript-eslint/no-require-imports */\n// We use \"require\" instead of \"import\" here because import statement must be put in top level. Our current code does\n// not allow terser to tree-shaking code as expected because some codes are treated as having side effects.\n// So we import code inside the if-clause to allow terser remove the code safely.\n\nexport * from 'onnxruntime-common';\nimport {registerBackend} from 'onnxruntime-common';\n\nif (!BUILD_DEFS.DISABLE_WEBGL) {\n  const onnxjsBackend = require('./backend-onnxjs').onnxjsBackend;\n  registerBackend('webgl', onnxjsBackend, -10);\n}\n\nif (!BUILD_DEFS.DISABLE_WASM) {\n  const wasmBackend = require('./backend-wasm').wasmBackend;\n  if (!BUILD_DEFS.DISABLE_WEBGPU && typeof navigator !== 'undefined' && navigator.gpu) {\n    registerBackend('webgpu', wasmBackend, 5);\n  }\n  registerBackend('cpu', wasmBackend, 10);\n  registerBackend('wasm', wasmBackend, 10);\n  registerBackend('xnnpack', wasmBackend, 9);\n  registerBackend('webnn', wasmBackend, 9);\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nclass AttributeWithCacheKeyImpl {\n  constructor(attribute: Record<string, unknown>) {\n    Object.assign(this, attribute);\n  }\n\n  private _cacheKey: string;\n  public get cacheKey(): string {\n    if (!this._cacheKey) {\n      this._cacheKey =\n          Object.getOwnPropertyNames(this).sort().map(name => `${(this as Record<string, unknown>)[name]}`).join(';');\n    }\n    return this._cacheKey;\n  }\n}\n\nexport interface AttributeWithCacheKey {\n  readonly cacheKey: string;\n}\n\nexport const createAttributeWithCacheKey = <T extends Record<string, unknown>>(attribute: T): T&AttributeWithCacheKey =>\n    new AttributeWithCacheKeyImpl(attribute) as unknown as T & AttributeWithCacheKey;\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport Long from 'long';\nimport {onnx} from 'onnx-proto';\n\nimport {onnxruntime} from './ort-schema/ort-generated';\nimport {Tensor} from './tensor';\nimport {decodeUtf8String, LongUtil} from './util';\n\nimport ortFbs = onnxruntime.experimental.fbs;\n\nexport declare namespace Attribute {\n  export interface DataTypeMap {\n    float: number;\n    int: number;\n    string: string;\n    tensor: Tensor;\n    floats: number[];\n    ints: number[];\n    strings: string[];\n    tensors: Tensor[];\n  }\n\n  export type DataType = keyof DataTypeMap;\n}\n\ntype ValueTypes = Attribute.DataTypeMap[Attribute.DataType];\n\ntype Value = [ValueTypes, Attribute.DataType];\n\nexport class Attribute {\n  constructor(attributes: onnx.IAttributeProto[]|ortFbs.Attribute[]|null|undefined) {\n    this._attributes = new Map();\n    if (attributes !== null && attributes !== undefined) {\n      for (const attr of attributes) {\n        if (attr instanceof onnx.AttributeProto) {\n          this._attributes.set(attr.name, [Attribute.getValue(attr), Attribute.getType(attr)]);\n        } else if (attr instanceof ortFbs.Attribute) {\n          this._attributes.set(attr.name()!, [Attribute.getValue(attr), Attribute.getType(attr)]);\n        }\n      }\n      if (this._attributes.size < attributes.length) {\n        throw new Error('duplicated attribute names');\n      }\n    }\n  }\n\n  set(key: string, type: Attribute.DataType, value: ValueTypes): void {\n    this._attributes.set(key, [value, type]);\n  }\n  delete(key: string): void {\n    this._attributes.delete(key);\n  }\n  getFloat(key: string, defaultValue?: Attribute.DataTypeMap['float']) {\n    return this.get(key, 'float', defaultValue);\n  }\n\n  getInt(key: string, defaultValue?: Attribute.DataTypeMap['int']) {\n    return this.get(key, 'int', defaultValue);\n  }\n\n  getString(key: string, defaultValue?: Attribute.DataTypeMap['string']) {\n    return this.get(key, 'string', defaultValue);\n  }\n\n  getTensor(key: string, defaultValue?: Attribute.DataTypeMap['tensor']) {\n    return this.get(key, 'tensor', defaultValue);\n  }\n\n  getFloats(key: string, defaultValue?: Attribute.DataTypeMap['floats']) {\n    return this.get(key, 'floats', defaultValue);\n  }\n\n  getInts(key: string, defaultValue?: Attribute.DataTypeMap['ints']) {\n    return this.get(key, 'ints', defaultValue);\n  }\n\n  getStrings(key: string, defaultValue?: Attribute.DataTypeMap['strings']) {\n    return this.get(key, 'strings', defaultValue);\n  }\n\n  getTensors(key: string, defaultValue?: Attribute.DataTypeMap['tensors']) {\n    return this.get(key, 'tensors', defaultValue);\n  }\n\n  private get<V extends Attribute.DataTypeMap[Attribute.DataType]>(\n      key: string, type: Attribute.DataType, defaultValue?: V): V {\n    const valueAndType = this._attributes.get(key);\n    if (valueAndType === undefined) {\n      if (defaultValue !== undefined) {\n        return defaultValue;\n      }\n      throw new Error(`required attribute not found: ${key}`);\n    }\n    if (valueAndType[1] !== type) {\n      throw new Error(`type mismatch: expected ${type} but got ${valueAndType[1]}`);\n    }\n    return valueAndType[0] as V;\n  }\n\n  private static getType(attr: onnx.IAttributeProto|ortFbs.Attribute): Attribute.DataType {\n    const type = attr instanceof onnx.AttributeProto ? (attr).type : (attr as ortFbs.Attribute).type();\n    switch (type) {\n      case onnx.AttributeProto.AttributeType.FLOAT:\n        return 'float';\n      case onnx.AttributeProto.AttributeType.INT:\n        return 'int';\n      case onnx.AttributeProto.AttributeType.STRING:\n        return 'string';\n      case onnx.AttributeProto.AttributeType.TENSOR:\n        return 'tensor';\n      case onnx.AttributeProto.AttributeType.FLOATS:\n        return 'floats';\n      case onnx.AttributeProto.AttributeType.INTS:\n        return 'ints';\n      case onnx.AttributeProto.AttributeType.STRINGS:\n        return 'strings';\n      case onnx.AttributeProto.AttributeType.TENSORS:\n        return 'tensors';\n      default:\n        throw new Error(`attribute type is not supported yet: ${onnx.AttributeProto.AttributeType[type]}`);\n    }\n  }\n\n  private static getValue(attr: onnx.IAttributeProto|ortFbs.Attribute) {\n    const attrType = attr instanceof onnx.AttributeProto ? attr.type : (attr as ortFbs.Attribute).type();\n    if (attrType === onnx.AttributeProto.AttributeType.GRAPH || attrType === onnx.AttributeProto.AttributeType.GRAPHS) {\n      throw new Error('graph attribute is not supported yet');\n    }\n\n    const value = this.getValueNoCheck(attr);\n\n    // cast LONG to number\n    if (attrType === onnx.AttributeProto.AttributeType.INT && LongUtil.isLong(value)) {\n      return LongUtil.longToNumber(value as Long | flatbuffers.Long);\n    }\n\n    // cast LONG[] to number[]\n    if (attrType === onnx.AttributeProto.AttributeType.INTS) {\n      const arr = (value as Array<number|Long|flatbuffers.Long>);\n      const numberValue: number[] = new Array<number>(arr.length);\n\n      for (let i = 0; i < arr.length; i++) {\n        const maybeLong = arr[i];\n        numberValue[i] = LongUtil.longToNumber(maybeLong);\n      }\n\n      return numberValue;\n    }\n\n    // cast onnx.TensorProto to onnxjs.Tensor\n    if (attrType === onnx.AttributeProto.AttributeType.TENSOR) {\n      return attr instanceof onnx.AttributeProto ? Tensor.fromProto(value as onnx.ITensorProto) :\n                                                   Tensor.fromOrtTensor(value as ortFbs.Tensor);\n    }\n\n    // cast onnx.TensorProto[] to onnxjs.Tensor[]\n    if (attrType === onnx.AttributeProto.AttributeType.TENSORS) {\n      if (attr instanceof onnx.AttributeProto) {\n        const tensorProtos = value as onnx.ITensorProto[];\n        return tensorProtos.map(value => Tensor.fromProto(value));\n      } else if (attr instanceof ortFbs.Attribute) {\n        const tensorProtos = value as ortFbs.Tensor[];\n        return tensorProtos.map(value => Tensor.fromOrtTensor(value));\n      }\n    }\n\n    // cast Uint8Array to string\n    if (attrType === onnx.AttributeProto.AttributeType.STRING) {\n      // string in onnx attribute is of uint8array type, so we need to convert it to string below. While in ort format,\n      // string attributes are returned as string, so no conversion is needed.\n      if (attr instanceof onnx.AttributeProto) {\n        const utf8String = value as Uint8Array;\n        return decodeUtf8String(utf8String);\n      }\n    }\n\n    // cast Uint8Array[] to string[]\n    if (attrType === onnx.AttributeProto.AttributeType.STRINGS) {\n      // strings in onnx attribute is returned as uint8array[], so we need to convert it to string[] below. While in ort\n      // format strings attributes are returned as string[], so no conversion is needed.\n      if (attr instanceof onnx.AttributeProto) {\n        const utf8Strings = value as Uint8Array[];\n        return utf8Strings.map(decodeUtf8String);\n      }\n    }\n\n    return value as ValueTypes;\n  }\n\n  private static getValueNoCheck(attr: onnx.IAttributeProto|ortFbs.Attribute) {\n    return attr instanceof (onnx.AttributeProto) ? this.getValueNoCheckFromOnnxFormat(attr) :\n                                                   this.getValueNoCheckFromOrtFormat(attr as ortFbs.Attribute);\n  }\n\n  private static getValueNoCheckFromOnnxFormat(attr: onnx.IAttributeProto) {\n    switch (attr.type!) {\n      case onnx.AttributeProto.AttributeType.FLOAT:\n        return attr.f;\n      case onnx.AttributeProto.AttributeType.INT:\n        return attr.i;\n      case onnx.AttributeProto.AttributeType.STRING:\n        return attr.s;\n      case onnx.AttributeProto.AttributeType.TENSOR:\n        return attr.t;\n      case onnx.AttributeProto.AttributeType.GRAPH:\n        return attr.g;\n      case onnx.AttributeProto.AttributeType.FLOATS:\n        return attr.floats;\n      case onnx.AttributeProto.AttributeType.INTS:\n        return attr.ints;\n      case onnx.AttributeProto.AttributeType.STRINGS:\n        return attr.strings;\n      case onnx.AttributeProto.AttributeType.TENSORS:\n        return attr.tensors;\n      case onnx.AttributeProto.AttributeType.GRAPHS:\n        return attr.graphs;\n      default:\n        throw new Error(`unsupported attribute type: ${onnx.AttributeProto.AttributeType[attr.type!]}`);\n    }\n  }\n\n  private static getValueNoCheckFromOrtFormat(attr: ortFbs.Attribute) {\n    switch (attr.type()) {\n      case ortFbs.AttributeType.FLOAT:\n        return attr.f();\n      case ortFbs.AttributeType.INT:\n        return attr.i();\n      case ortFbs.AttributeType.STRING:\n        return attr.s();\n      case ortFbs.AttributeType.TENSOR:\n        return attr.t();\n      case ortFbs.AttributeType.GRAPH:\n        return attr.g();\n      case ortFbs.AttributeType.FLOATS:\n        return attr.floatsArray();\n      case ortFbs.AttributeType.INTS: {\n        const ints = [];\n        for (let i = 0; i < attr.intsLength(); i++) {\n          ints.push(attr.ints(i)!);\n        }\n        return ints;\n      }\n      case ortFbs.AttributeType.STRINGS: {\n        const strings = [];\n        for (let i = 0; i < attr.stringsLength(); i++) {\n          strings.push(attr.strings(i));\n        }\n        return strings;\n      }\n      case ortFbs.AttributeType.TENSORS: {\n        const tensors = [];\n        for (let i = 0; i < attr.tensorsLength(); i++) {\n          tensors.push(attr.tensors(i)!);\n        }\n        return tensors;\n      }\n      // case ortFbs.AttributeType.GRAPHS:\n      // TODO: Subgraph not supported yet.\n      // const graphs = [];\n      // for (let i = 0; i < attr.graphsLength(); i++) {\n      //   graphs.push(attr.graphs(i)!);\n      // }\n      // return graphs;\n      default:\n        throw new Error(`unsupported attribute type: ${ortFbs.AttributeType[attr.type()]}`);\n    }\n  }\n\n  protected _attributes: Map<string, Value>;\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {WebGLBackend} from './backends/backend-webgl';\nimport {Graph} from './graph';\nimport {Operator} from './operators';\nimport {OpSet} from './opset';\nimport {Session} from './session';\n\nexport interface InferenceHandler {\n  /**\n   * dispose the inference handler. it will be called as the last step in Session.run()\n   */\n  dispose(): void;\n}\n\nexport interface SessionHandler {\n  /**\n   * transform the graph at initialization time\n   * @param graphTransformer the graph transformer to manipulate the model graph\n   */\n  transformGraph?(graphTransformer: Graph.Transformer): void;\n\n  /**\n   * create an instance of InferenceHandler to use in a Session.run() call\n   */\n  createInferenceHandler(): InferenceHandler;\n\n  /**\n   * dispose the session handler. it will be called when a session is being disposed explicitly\n   */\n  dispose(): void;\n\n  /**\n   * Resolves the operator from the name and opset version; backend specific\n   * @param node the node to resolve\n   * @param opsets a list of opsets that exported from the model\n   * @param graph the completely initialized graph\n   */\n  resolve(node: Graph.Node, opsets: readonly OpSet[], graph: Graph): Operator;\n\n  /**\n   * This method let's the sessionHandler know that the graph initialization is complete\n   * @param graph the completely initialized graph\n   */\n  onGraphInitialized?(graph: Graph): void;\n\n  /**\n   * a reference to the corresponding backend\n   */\n  readonly backend: Backend;\n\n  /**\n   * a reference to the session context\n   */\n  readonly context: Session.Context;\n}\n\nexport interface Backend {\n  /**\n   * initialize the backend. will be called only once, when the first time the\n   * backend it to be used\n   */\n  initialize(): boolean|Promise<boolean>;\n\n  /**\n   * create an instance of SessionHandler to use in a Session object's lifecycle\n   */\n  createSessionHandler(context: Session.Context): SessionHandler;\n\n  /**\n   * dispose the backend. currently this will not be called\n   */\n  dispose(): void;\n}\n\n// caches all initialized backend instances\nconst backendsCache: Map<string, Backend> = new Map();\n\nexport const backend: {[name: string]: Backend} = {\n  webgl: new WebGLBackend()\n};\n\n/**\n * Resolve a reference to the backend. If a hint is specified, the corresponding\n * backend will be used.\n */\nexport async function resolveBackend(hint?: string|readonly string[]): Promise<Backend> {\n  if (!hint) {\n    return resolveBackend(['webgl']);\n  } else {\n    const hints = typeof hint === 'string' ? [hint] : hint;\n\n    for (const backendHint of hints) {\n      const cache = backendsCache.get(backendHint);\n      if (cache) {\n        return cache;\n      }\n\n      const backend = await tryLoadBackend(backendHint);\n      if (backend) {\n        return backend;\n      }\n    }\n  }\n\n  throw new Error('no available backend to use');\n}\n\nasync function tryLoadBackend(backendHint: string): Promise<Backend|undefined> {\n  const backendObj = backend;\n\n  if (typeof backendObj[backendHint] !== 'undefined' && isBackend(backendObj[backendHint])) {\n    const backend = backendObj[backendHint];\n    let init = backend.initialize();\n    if (typeof init === 'object' && 'then' in init) {\n      init = await init;\n    }\n    if (init) {\n      backendsCache.set(backendHint, backend);\n      return backend;\n    }\n  }\n\n  return undefined;\n}\n\nfunction isBackend(obj: unknown) {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  const o = obj as any;\n\n  // check if an object is a Backend instance\n  if (\n      'initialize' in o && typeof o.initialize === 'function' &&                      // initialize()\n      'createSessionHandler' in o && typeof o.createSessionHandler === 'function' &&  // createSessionHandler()\n      'dispose' in o && typeof o.dispose === 'function'                               // dispose()\n  ) {\n    return true;\n  }\n\n  return false;\n}\n\nexport type BackendType = Backend;\nexport type SessionHandlerType = ReturnType<BackendType['createSessionHandler']>;\nexport type InferenceHandlerType = ReturnType<SessionHandlerType['createInferenceHandler']>;\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {env} from 'onnxruntime-common';\n\nimport {Backend, SessionHandler} from '../backend';\nimport {Logger} from '../instrument';\nimport {Session} from '../session';\n\nimport {WebGLSessionHandler} from './webgl/session-handler';\nimport {WebGLContext} from './webgl/webgl-context';\nimport {createWebGLContext} from './webgl/webgl-context-factory';\n\n/**\n * WebGLBackend is the entry point for all WebGL opeartions\n * When it starts it created the WebGLRenderingContext\n * and other main framework components such as Program and Texture Managers\n */\nexport class WebGLBackend implements Backend {\n  glContext: WebGLContext;\n\n  get contextId(): 'webgl'|'webgl2'|undefined {\n    return env.webgl.contextId;\n  }\n  set contextId(value: 'webgl'|'webgl2'|undefined) {\n    env.webgl.contextId = value;\n  }\n\n  get matmulMaxBatchSize(): number|undefined {\n    return env.webgl.matmulMaxBatchSize;\n  }\n  set matmulMaxBatchSize(value: number|undefined) {\n    env.webgl.matmulMaxBatchSize = value;\n  }\n\n  get textureCacheMode(): 'initializerOnly'|'full'|undefined {\n    return env.webgl.textureCacheMode;\n  }\n  set textureCacheMode(value: 'initializerOnly'|'full'|undefined) {\n    env.webgl.textureCacheMode = value;\n  }\n\n  get pack(): boolean|undefined {\n    return env.webgl.pack;\n  }\n  set pack(value: boolean|undefined) {\n    env.webgl.pack = value;\n  }\n\n  get async(): boolean|undefined {\n    return env.webgl.async;\n  }\n  set async(value: boolean|undefined) {\n    env.webgl.async = value;\n  }\n\n  initialize(): boolean {\n    try {\n      this.glContext = createWebGLContext(this.contextId);\n      if (typeof this.matmulMaxBatchSize !== 'number') {\n        this.matmulMaxBatchSize = 16;\n      }\n      if (typeof this.textureCacheMode !== 'string') {\n        this.textureCacheMode = 'full';\n      }\n      if (typeof this.pack !== 'boolean') {\n        this.pack = false;\n      }\n      if (typeof this.async !== 'boolean') {\n        this.async = false;\n      }\n\n      Logger.setWithEnv(env);\n\n      Logger.verbose(\n          'WebGLBackend',\n          `Created WebGLContext: ${typeof this.glContext} with matmulMaxBatchSize: ${\n              this.matmulMaxBatchSize}; textureCacheMode: ${this.textureCacheMode}; pack: ${this.pack}; async: ${\n              this.async}.`);\n      return true;\n    } catch (e) {\n      Logger.warning('WebGLBackend', `Unable to initialize WebGLBackend. ${e}`);\n      return false;\n    }\n  }\n  createSessionHandler(context: Session.Context): SessionHandler {\n    return new WebGLSessionHandler(this, context);\n  }\n  dispose(): void {\n    this.glContext.dispose();\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {ArrayUtil, BroadcastUtil, ShapeUtil} from '../../util';\n\nimport {GlslContext, GlslLib, GlslLibRoutine} from './glsl-definitions';\nimport {getGlsl} from './glsl-source';\nimport {squeezeShape} from './texture-layout-strategy';\nimport {TextureLayout} from './types';\nimport {generateShaderFuncNameFromInputSamplerName, generateShaderFuncNameFromInputSamplerNameAtOutCoords, getCoordsDataType, getGlChannels, getSqueezedParams, squeezeInputShape} from './utils';\n\n/**\n * GLSL Library responsible for data types and routines for manipulating\n * coordinates and mapping to/from tensor indices\n */\nexport class CoordsGlslLib extends GlslLib {\n  returnType: string;\n\n  constructor(context: GlslContext) {\n    super(context);\n  }\n  getFunctions(): {[name: string]: GlslLibRoutine} {\n    return {\n      ...this.offsetToCoords(),\n      ...this.coordsToOffset(),\n      ...this.toVec(),\n      ...this.valueFrom(),\n      // TODO return these only when packing is enabled.\n      ...this.getCommonUtilFuncs(),\n      ...this.getInputsSamplingSnippets(),\n      ...this.getOutputSamplingSnippet()\n    };\n  }\n  getCustomTypes() {\n    return {};\n  }\n  /**\n   * Produces a function that can map from\n   * 2D normalzied coordinates (s,t) to a flat offset\n   */\n  protected offsetToCoords(): {[name: string]: GlslLibRoutine} {\n    const funcName = 'offsetToCoords';\n    return {\n      offsetToCoords: new GlslLibRoutine(`\n      vec2 ${funcName}(int offset, int width, int height) {\n        int t = offset / width;\n        int s = offset - t*width;\n        vec2 coords = (vec2(s,t) + vec2(0.5,0.5)) / vec2(width, height);\n        return coords;\n      }\n      `)\n    };\n  }\n\n  /**\n   * Produces a function that can map from\n   * 2D normalzied coordinates (s,t) to a flat offset\n   */\n  protected coordsToOffset(): {[name: string]: GlslLibRoutine} {\n    const funcName = 'coordsToOffset';\n    return {\n      coordsToOffset: new GlslLibRoutine(`\n      int ${funcName}(vec2 coords, int width, int height) {\n        float s = coords.s * float(width);\n        float t = coords.t * float(height);\n        int offset = int(t) * width + int(s);\n        return offset;\n      }\n      `)\n    };\n  }\n\n  /**\n   * Generates code for output sampler.\n   */\n\n  protected getOutputSamplingSnippet(): {[name: string]: GlslLibRoutine} {\n    const outputLayout = this.context.outputTextureLayout;\n    if (outputLayout.isPacked) {\n      return this.getPackedOutputSamplingSnippet(outputLayout);\n    } else {\n      return this.getUnpackedOutputSamplingSnippet(outputLayout);\n    }\n  }\n\n  /**\n   * Generates code for packed output sampler.\n   */\n  protected getPackedOutputSamplingSnippet(outputLayout: TextureLayout): {[name: string]: GlslLibRoutine} {\n    const outShape = outputLayout.unpackedShape;\n    const outTexShape = [outputLayout.width, outputLayout.height];\n    const result: {[name: string]: GlslLibRoutine} = {};\n    const funcName = 'getOutputCoords';\n    switch (outShape.length) {\n      case 0:\n        result[funcName] = this.getOutputScalarCoords();\n        break;\n      case 1:\n        result[funcName] = this.getOutputPacked1DCoords(outShape as [number], outTexShape as [number, number]);\n        break;\n      case 2:\n        result[funcName] = this.getOutputPacked2DCoords(outShape as [number, number], outTexShape as [number, number]);\n        break;\n      case 3:\n        result[funcName] =\n            this.getOutputPacked3DCoords(outShape as [number, number, number], outTexShape as [number, number]);\n        break;\n      default:\n        result[funcName] = this.getOutputPackedNDCoords(outShape, outTexShape as [number, number]);\n    }\n    const glsl = getGlsl(this.context.glContext.version);\n    // TODO we need this to properly return a packed vec4 from kernels.\n    // Replace all '{glsl.output} = result' with 'setOutput(result)' in all kernels.\n    const floatTextureSetRGBASource = `\n      void setOutput(vec4 val) {\n        ${glsl.output} = val;\n      }\n    `;\n    const floatTextureSetRGBAFuncName = 'floatTextureSetRGBA';\n    result[floatTextureSetRGBAFuncName] = new GlslLibRoutine(floatTextureSetRGBASource);\n    return result;\n  }\n\n  /**\n   * Generates code for unpacked output sampler.\n   */\n  protected getUnpackedOutputSamplingSnippet(outputLayout: TextureLayout): {[name: string]: GlslLibRoutine} {\n    const outShape = outputLayout.unpackedShape;\n    const outTexShape = [outputLayout.width, outputLayout.height];\n    const result: {[name: string]: GlslLibRoutine} = {};\n    const funcName = 'getOutputCoords';\n    switch (outShape.length) {\n      case 0:\n        result[funcName] = this.getOutputScalarCoords();\n        break;\n      case 1:\n        result[funcName] = this.getOutputUnpacked1DCoords(outShape as [number], outTexShape as [number, number]);\n        break;\n      case 2:\n        result[funcName] =\n            this.getOutputUnpacked2DCoords(outShape as [number, number], outTexShape as [number, number]);\n        break;\n      case 3:\n        result[funcName] =\n            this.getOutputUnpacked3DCoords(outShape as [number, number, number], outTexShape as [number, number]);\n        break;\n      case 4:\n        result[funcName] = this.getOutputUnpacked4DCoords(\n            outShape as [number, number, number, number], outTexShape as [number, number]);\n        break;\n      case 5:\n        result[funcName] = this.getOutputUnpacked5DCoords(\n            outShape as [number, number, number, number, number], outTexShape as [number, number]);\n        break;\n      case 6:\n        result[funcName] = this.getOutputUnpacked6DCoords(\n            outShape as [number, number, number, number, number, number], outTexShape as [number, number]);\n        break;\n      default:\n        throw new Error(`Unsupported output dimensionality: ${outShape.length}`);\n    }\n    const glsl = getGlsl(this.context.glContext.version);\n    // TODO we need this to properly return a packed vec4 from kernels.\n    // Replace all '{glsl.output} = result' with 'setOutput(result)' in all kernels.\n    const floatTextureSetRSource = `\n        void setOutput(float val) {\n          ${glsl.output} = vec4(val, 0, 0, 0);\n        }\n    `;\n    const floatTextureSetRFuncName = 'floatTextureSetR';\n    result[floatTextureSetRFuncName] = new GlslLibRoutine(floatTextureSetRSource);\n    return result;\n  }\n\n  /**\n   * Scalar output coordinates.\n   */\n  protected getOutputScalarCoords(): GlslLibRoutine {\n    return new GlslLibRoutine(`\n      int getOutputCoords() {\n        return 0;\n      }\n    `);\n  }\n\n  /**\n   * 1D packed output coordinates.\n   */\n  protected getOutputPacked1DCoords(shape: [number], texShape: [number, number]): GlslLibRoutine {\n    const packedTexShape = texShape;\n    let source = '';\n    if (packedTexShape[0] === 1) {\n      source = `\n          int getOutputCoords() {\n            return 2 * int(TexCoords.y * ${packedTexShape[1]}.0);\n          }\n        `;\n      return new GlslLibRoutine(source);\n    }\n\n    if (packedTexShape[1] === 1) {\n      source = `\n          int getOutputCoords() {\n            return 2 * int(TexCoords.x * ${packedTexShape[0]}.0);\n          }\n        `;\n      return new GlslLibRoutine(source);\n    }\n\n    source = `\n        int getOutputCoords() {\n          ivec2 resTexRC = ivec2(TexCoords.xy *\n                                 vec2(${packedTexShape[0]}, ${packedTexShape[1]}));\n          return 2 * (resTexRC.y * ${packedTexShape[0]} + resTexRC.x);\n        }\n      `;\n    return new GlslLibRoutine(source);\n  }\n\n  /**\n   * 2D packed output coordinates.\n   */\n  protected getOutputPacked2DCoords(shape: [number, number], texShape: [number, number]): GlslLibRoutine {\n    let source = '';\n    if (ArrayUtil.arraysEqual(shape, texShape)) {\n      source = `\n        ivec2 getOutputCoords() {\n          return 2 * ivec2(TexCoords.xy * vec2(${texShape[0]}, ${texShape[1]}));\n        }\n      `;\n      return new GlslLibRoutine(source);\n    }\n\n    const packedTexShape = texShape;\n    // texels needed to accommodate a logical row\n    const texelsInLogicalRow = Math.ceil(shape[1] / 2);\n\n    /**\n     * getOutputCoords\n     *\n     * resTexRC: The rows and columns of the texels. If you move over one\n     * texel to the right in the packed texture, you are moving over one column\n     * (not two).\n     *\n     * index: The texel index\n     */\n    source = `\n        ivec2 getOutputCoords() {\n          ivec2 resTexRC = ivec2(TexCoords.xy *\n                                vec2(${packedTexShape[0]}, ${packedTexShape[1]}));\n\n          int index = resTexRC.y * ${packedTexShape[0]} + resTexRC.x;\n\n          // reverse r and c order for packed texture\n          int r = imod(index, ${texelsInLogicalRow}) * 2;\n          int c = 2 * (index / ${texelsInLogicalRow});\n\n          return ivec2(r, c);\n        }\n      `;\n    return new GlslLibRoutine(source);\n  }\n\n  /**\n   * 3D packed output coordinates.\n   */\n  protected getOutputPacked3DCoords(shape: [number, number, number], texShape: [number, number]): GlslLibRoutine {\n    const packedTexShape = [texShape[0], texShape[1]];\n    const texelsInLogicalRow = Math.ceil(shape[2] / 2);\n    const texelsInBatch = texelsInLogicalRow * Math.ceil(shape[1] / 2);\n    const source = `\n        ivec3 getOutputCoords() {\n          ivec2 resTexRC = ivec2(TexCoords.xy *\n                                vec2(${packedTexShape[0]}, ${packedTexShape[1]}));\n          int index = resTexRC.y * ${packedTexShape[0]} + resTexRC.x;\n\n          int b = index / ${texelsInBatch};\n          index -= b * ${texelsInBatch};\n\n          // reverse r and c order for packed texture\n          int r = imod(index, ${texelsInLogicalRow}) * 2;\n          int c = 2 * (index / ${texelsInLogicalRow});\n\n          return ivec3(b, r, c);\n        }\n      `;\n    return new GlslLibRoutine(source);\n  }\n\n  /**\n   * ND packed output coordinates.\n   */\n  protected getOutputPackedNDCoords(shape: readonly number[], texShape: [number, number]): GlslLibRoutine {\n    const packedTexShape = [texShape[0], texShape[1]];\n\n    const texelsInLogicalRow = Math.ceil(shape[shape.length - 1] / 2);\n    const texelsInBatch = texelsInLogicalRow * Math.ceil(shape[shape.length - 2] / 2);\n    let texelsInBatchN = texelsInBatch;\n    let batches = '';\n    let coords = 'b, r, c';\n\n    for (let b = 2; b < shape.length - 1; b++) {\n      texelsInBatchN *= shape[shape.length - b - 1];\n      batches = `\n      int b${b} = index / ${texelsInBatchN};\n      index -= b${b} * ${texelsInBatchN};\n    ` + batches;\n      coords = `b${b}, ` + coords;\n    }\n    const source = `\n      ivec${shape.length} getOutputCoords() {\n        ivec2 resTexRC = ivec2(TexCoords.xy *\n                              vec2(${packedTexShape[0]}, ${packedTexShape[1]}));\n        int index = resTexRC.y * ${packedTexShape[0]} + resTexRC.x;\n\n        ${batches}\n\n        int b = index / ${texelsInBatch};\n        index -= b * ${texelsInBatch};\n\n        // reverse r and c order for packed texture\n        int r = imod(index, ${texelsInLogicalRow}) * 2;\n        int c = 2 * (index / ${texelsInLogicalRow});\n\n        return ivec${shape.length}(${coords});\n      }\n    `;\n    return new GlslLibRoutine(source);\n  }\n\n  /**\n   * Unpacked 1D output coordinates.\n   */\n  protected getOutputUnpacked1DCoords(shape: [number], texShape: [number, number]): GlslLibRoutine {\n    const source = `\n        int getOutputCoords() {\n          ivec2 resTexRC = ivec2(TexCoords.xy *\n                                vec2(${texShape[0]}, ${texShape[1]}));\n          return resTexRC.y * ${texShape[0]} + resTexRC.x;\n        }\n      `;\n    return new GlslLibRoutine(source);\n  }\n\n  /**\n   * Unpacked 2D output coordinates.\n   */\n  protected getOutputUnpacked2DCoords(shape: [number, number], texShape: [number, number]): GlslLibRoutine {\n    const source = `\n        ivec2 getOutputCoords() {\n          ivec2 resTexRC = ivec2(TexCoords.xy *\n                                vec2(${texShape[0]}, ${texShape[1]}));\n          int index = resTexRC.y * ${texShape[0]} + resTexRC.x;\n          int r = index / ${shape[1]};\n          int c = index - r * ${shape[1]};\n          return ivec2(r, c);\n        }\n      `;\n    return new GlslLibRoutine(source);\n  }\n\n  /**\n   * Unpacked 3D output coordinates.\n   */\n  protected getOutputUnpacked3DCoords(shape: [number, number, number], texShape: [number, number]): GlslLibRoutine {\n    let source = '';\n    const rank = shape.length;\n\n    let strides = null;\n    if (rank < 2) {\n      strides = [];\n    }\n\n    strides = new Array(rank - 1);\n    strides[rank - 2] = shape[rank - 1];\n    for (let i = rank - 3; i >= 0; --i) {\n      strides[i] = strides[i + 1] * shape[i + 1];\n    }\n    const coordsToCompute = ['r', 'c', 'd'];\n    const coordsFromIndexSnippet =\n        strides\n            .map((stride, i) => {\n              const line1 = `int ${coordsToCompute[i]} = index / ${stride}`;\n              const line2 = i === strides.length - 1 ?\n                  `int ${coordsToCompute[i + 1]} = index - ${coordsToCompute[i]} * ${stride}` :\n                  `index -= ${coordsToCompute[i]} * ${stride}`;\n              return `${line1}; ${line2};`;\n            })\n            .join('');\n\n    source = `\n        ivec3 getOutputCoords() {\n          ivec2 resTexRC = ivec2(TexCoords.xy *\n                                vec2(${texShape[0]}, ${texShape[1]}));\n          int index = resTexRC.y * ${texShape[0]} + resTexRC.x;\n          ${coordsFromIndexSnippet}\n          return ivec3(r, c, d);\n        }\n      `;\n    return new GlslLibRoutine(source);\n  }\n\n  /**\n   * Unpacked 4D output coordinates.\n   */\n  protected getOutputUnpacked4DCoords(shape: [number, number, number, number], texShape: [number, number]):\n      GlslLibRoutine {\n    let source = '';\n    const rank = shape.length;\n\n    let strides = null;\n    if (rank < 2) {\n      strides = [];\n    }\n\n    strides = new Array(rank - 1);\n    strides[rank - 2] = shape[rank - 1];\n    for (let i = rank - 3; i >= 0; --i) {\n      strides[i] = strides[i + 1] * shape[i + 1];\n    }\n    const coordsToCompute = ['r', 'c', 'd', 'd2'];\n    const coordsFromIndexSnippet =\n        strides\n            .map((stride, i) => {\n              const line1 = `int ${coordsToCompute[i]} = index / ${stride}`;\n              const line2 = i === strides.length - 1 ?\n                  `int ${coordsToCompute[i + 1]} = index - ${coordsToCompute[i]} * ${stride}` :\n                  `index -= ${coordsToCompute[i]} * ${stride}`;\n              return `${line1}; ${line2};`;\n            })\n            .join('');\n\n    source = `\n      ivec4 getOutputCoords() {\n          ivec2 resTexRC = ivec2(TexCoords.xy *\n                                vec2(${texShape[0]}, ${texShape[1]}));\n          int index = resTexRC.y * ${texShape[0]} + resTexRC.x;\n          ${coordsFromIndexSnippet}\n          return ivec4(r, c, d, d2);\n        }\n      `;\n    return new GlslLibRoutine(source);\n  }\n\n  /**\n   * Unpacked 5D output coordinates.\n   */\n  protected getOutputUnpacked5DCoords(shape: [number, number, number, number, number], texShape: [number, number]):\n      GlslLibRoutine {\n    let source = '';\n    const rank = shape.length;\n\n    let strides = null;\n    if (rank < 2) {\n      strides = [];\n    }\n\n    strides = new Array(rank - 1);\n    strides[rank - 2] = shape[rank - 1];\n    for (let i = rank - 3; i >= 0; --i) {\n      strides[i] = strides[i + 1] * shape[i + 1];\n    }\n    const coordsToCompute = ['r', 'c', 'd', 'd2', 'd3'];\n    const coordsFromIndexSnippet =\n        strides\n            .map((stride, i) => {\n              const line1 = `int ${coordsToCompute[i]} = index / ${stride}`;\n              const line2 = i === strides.length - 1 ?\n                  `int ${coordsToCompute[i + 1]} = index - ${coordsToCompute[i]} * ${stride}` :\n                  `index -= ${coordsToCompute[i]} * ${stride}`;\n              return `${line1}; ${line2};`;\n            })\n            .join('');\n\n    source = `\n      ivec5 getOutputCoords() {\n          ivec2 resTexRC = ivec2(TexCoords.xy *\n                                vec2(${texShape[0]}, ${texShape[1]}));\n          int index = resTexRC.y * ${texShape[0]} + resTexRC.x;\n          ${coordsFromIndexSnippet}\n          return ivec5(r, c, d, d2, d3);\n        }\n      `;\n    return new GlslLibRoutine(source);\n  }\n\n  /**\n   * Unpacked 6D output coordinates.\n   */\n  protected getOutputUnpacked6DCoords(shape: [number, number, number, number, number, number], texShape: [\n    number, number\n  ]): GlslLibRoutine {\n    let source = '';\n    const rank = shape.length;\n\n    let strides = null;\n    if (rank < 2) {\n      strides = [];\n    }\n\n    strides = new Array(rank - 1);\n    strides[rank - 2] = shape[rank - 1];\n    for (let i = rank - 3; i >= 0; --i) {\n      strides[i] = strides[i + 1] * shape[i + 1];\n    }\n    const coordsToCompute = ['r', 'c', 'd', 'd2', 'd3', 'd4'];\n    const coordsFromIndexSnippet =\n        strides\n            .map((stride, i) => {\n              const line1 = `int ${coordsToCompute[i]} = index / ${stride}`;\n              const line2 = i === strides.length - 1 ?\n                  `int ${coordsToCompute[i + 1]} = index - ${coordsToCompute[i]} * ${stride}` :\n                  `index -= ${coordsToCompute[i]} * ${stride}`;\n              return `${line1}; ${line2};`;\n            })\n            .join('');\n\n    source = `\n     ivec6 getOutputCoords() {\n         ivec2 resTexRC = ivec2(TexCoords.xy *\n                               vec2(${texShape[0]}, ${texShape[1]}));\n         int index = resTexRC.y * ${texShape[0]} + resTexRC.x;\n         ${coordsFromIndexSnippet}\n         return ivec6(r, c, d, d2, d3, d4);\n       }\n     `;\n    return new GlslLibRoutine(source);\n  }\n\n  /**\n   * Generates code for common UV coords computation utility functions.\n   */\n  protected getCommonUtilFuncs(): {[name: string]: GlslLibRoutine} {\n    const result: {[name: string]: GlslLibRoutine} = {};\n    let funcName = 'uvFromFlat';\n    result[funcName] = new GlslLibRoutine(`\n    vec2 uvFromFlat(int texNumR, int texNumC, int index) {\n      int texC = index / texNumR;\n      int texR = index - texC * texNumR;\n      // TODO: swap texR, texC order in following function so row is corresponding to u and column is corresponding to\n      //       v.\n      return (vec2(texR, texC) + halfCR) / vec2(texNumR, texNumC);\n    }\n    `);\n    funcName = 'packedUVfrom1D';\n    result[funcName] = new GlslLibRoutine(`\n      vec2 packedUVfrom1D(int texNumR, int texNumC, int index) {\n        int texelIndex = index / 2;\n        int texR = texelIndex / texNumC;\n        int texC = texelIndex - texR * texNumC;\n        return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n      }\n      `);\n    funcName = 'packedUVfrom2D';\n    result[funcName] = new GlslLibRoutine(`\n      vec2 packedUVfrom2D(int texNumR, int texNumC, int texelsInLogicalRow, int row, int col) {\n        int texelIndex = (row / 2) * texelsInLogicalRow + (col / 2);\n        int texR = texelIndex / texNumC;\n        int texC = texelIndex - texR * texNumC;\n        return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n      }\n      `);\n    funcName = 'packedUVfrom3D';\n    result[funcName] = new GlslLibRoutine(`\n      vec2 packedUVfrom3D(int texNumR, int texNumC,\n          int texelsInBatch, int texelsInLogicalRow, int b,\n          int row, int col) {\n        int index = b * texelsInBatch + (row / 2) * texelsInLogicalRow + (col / 2);\n        int texR = index / texNumC;\n        int texC = index - texR * texNumC;\n        return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n      }\n      `);\n    funcName = 'sampleTexture';\n    const glsl = getGlsl(this.context.glContext.version);\n    result[funcName] = new GlslLibRoutine(`\n        float sampleTexture(sampler2D textureSampler, vec2 uv) {\n            return ${glsl.texture2D}(textureSampler, uv).r;\n        }`);\n    return result;\n  }\n\n  /**\n   * Constructing snippets for inputs\n   */\n  protected getInputsSamplingSnippets(): {[name: string]: GlslLibRoutine} {\n    const result: {[name: string]: GlslLibRoutine} = {};\n    const outputLayout = this.context.outputTextureLayout;\n    this.context.programInfo.inputNames.forEach((samplerName, i) => {\n      const inputLayout = this.context.inputTextureLayouts[i];\n      const funcName = generateShaderFuncNameFromInputSamplerName(samplerName);\n      if (inputLayout.isPacked) {\n        result[funcName] = this.getPackedSamplerFromInput(funcName, samplerName, inputLayout);\n      } else {\n        result[funcName] = this.getUnpackedSamplerFromInput(funcName, samplerName, inputLayout);\n      }\n\n      const outCoordFuncName = generateShaderFuncNameFromInputSamplerNameAtOutCoords(samplerName);\n      if (inputLayout.unpackedShape.length <= outputLayout.unpackedShape.length) {\n        if (inputLayout.isPacked) {\n          result[outCoordFuncName] =\n              this.getPackedSamplerAtOutputCoords(outCoordFuncName, inputLayout, outputLayout, samplerName);\n        } else {\n          result[outCoordFuncName] =\n              this.getUnpackedSamplerAtOutputCoords(outCoordFuncName, inputLayout, outputLayout, samplerName);\n        }\n      }\n    });\n\n    return result;\n  }\n\n  /**\n   * Constructing snippets for output coordinates of samplers\n   */\n  protected getPackedSamplerAtOutputCoords(\n      funcName: string, inputLayout: TextureLayout, outputLayout: TextureLayout, name: string): GlslLibRoutine {\n    const inShape = inputLayout.unpackedShape;\n    const outShape = outputLayout.unpackedShape;\n    const texName = name;\n    const texFuncSnippet = generateShaderFuncNameFromInputSamplerName(texName);\n\n    const inRank = inShape.length;\n    const outRank = outShape.length;\n\n    const broadcastDims = BroadcastUtil.getBroadcastDims(inShape, outShape);\n\n    const type = getCoordsDataType(outRank);\n    const rankDiff = outRank - inRank;\n    let coordsSnippet: string;\n    const fields = getGlChannels();\n\n    if (inRank === 0) {\n      coordsSnippet = '';\n    } else if (outRank < 2 && broadcastDims.length >= 1) {\n      coordsSnippet = 'coords = 0;';\n    } else {\n      coordsSnippet = broadcastDims.map(d => `coords.${fields[d + rankDiff]} = 0;`).join('\\n');\n    }\n    let unpackedCoordsSnippet = '';\n    if (outRank < 2 && inRank > 0) {\n      unpackedCoordsSnippet = 'coords';\n    } else {\n      unpackedCoordsSnippet = inShape.map((s, i) => `coords.${fields[i + rankDiff]}`).join(', ');\n    }\n\n    let output = 'return outputValue;';\n    const inSize = ShapeUtil.size(inShape);\n    const isInputScalar = inSize === 1;\n    const outSize = ShapeUtil.size(outShape);\n    const isOutputScalar = outSize === 1;\n\n    if (inRank === 1 && !isInputScalar && !isOutputScalar) {\n      output = `\n        return vec4(outputValue.xy, outputValue.xy);\n      `;\n    } else if (isInputScalar && !isOutputScalar) {\n      if (outRank === 1) {\n        output = `\n          return vec4(outputValue.x, outputValue.x, 0., 0.);\n        `;\n      } else {\n        output = `\n          return vec4(outputValue.x);\n        `;\n      }\n    } else if (broadcastDims.length) {\n      const rows = inRank - 2;\n      const cols = inRank - 1;\n\n      if (broadcastDims.indexOf(rows) > -1 && broadcastDims.indexOf(cols) > -1) {\n        output = 'return vec4(outputValue.x);';\n      } else if (broadcastDims.indexOf(rows) > -1) {\n        output = 'return vec4(outputValue.x, outputValue.y, ' +\n            'outputValue.x, outputValue.y);';\n      } else if (broadcastDims.indexOf(cols) > -1) {\n        output = 'return vec4(outputValue.xx, outputValue.zz);';\n      }\n    }\n\n    const swapLastDimsSnippet = `\n        int lastDim = coords.${fields[outRank - 1]};\n        coords.${fields[outRank - 1]} = coords.${fields[outRank - 2]};\n        coords.${fields[outRank - 2]} = lastDim;\n      `;\n    const source = `\n      vec4 ${funcName}() {\n        ${type} coords = getOutputCoords();\n        ${swapLastDimsSnippet}\n        ${coordsSnippet}\n        vec4 outputValue = ${texFuncSnippet}(${unpackedCoordsSnippet});\n        ${output}\n      }\n    `;\n    return new GlslLibRoutine(source, ['coordinates.getOutputCoords']);\n  }\n\n  /**\n   * Constructing snippets for unpacked output coordinates of samplers\n   */\n  protected getUnpackedSamplerAtOutputCoords(\n      funcName: string, inputLayout: TextureLayout, outputLayout: TextureLayout, name: string): GlslLibRoutine {\n    const outTexShape = [outputLayout.width, outputLayout.height];\n    const inTexShape = [inputLayout.width, inputLayout.height];\n    const inRank = inputLayout.unpackedShape.length;\n    const outRank = outputLayout.unpackedShape.length;\n    const inShape = inputLayout.unpackedShape;\n    const outShape = outputLayout.unpackedShape;\n    const texFuncSnippet = generateShaderFuncNameFromInputSamplerName(name);\n\n    if (inRank === outRank && ArrayUtil.arraysEqual(inTexShape, outTexShape)) {\n      const source = `\n          float ${funcName}() {\n            return sampleTexture(${name}, TexCoords);\n          }\n        `;\n      return new GlslLibRoutine(source, ['coordinates.sampleTexture']);\n    }\n\n    const type = getCoordsDataType(outRank);\n    const broadcastDims = BroadcastUtil.getBroadcastDims(inShape, outShape);\n    const rankDiff = outRank - inRank;\n    let coordsSnippet: string;\n    const fields = getGlChannels();\n\n    if (inRank === 0) {\n      coordsSnippet = '';\n    } else if (outRank < 2 && broadcastDims.length >= 1) {\n      coordsSnippet = 'coords = 0;';\n    } else {\n      coordsSnippet = broadcastDims.map(d => `coords.${fields[d + rankDiff]} = 0;`).join('\\n');\n    }\n    let unpackedCoordsSnippet = '';\n    if (outRank < 2 && inRank > 0) {\n      unpackedCoordsSnippet = 'coords';\n    } else {\n      unpackedCoordsSnippet = inputLayout.unpackedShape.map((s, i) => `coords.${fields[i + rankDiff]}`).join(', ');\n    }\n    const source = `\n        float ${funcName}() {\n          ${type} coords = getOutputCoords();\n          ${coordsSnippet}\n          return ${texFuncSnippet}(${unpackedCoordsSnippet});\n        }\n      `;\n    return new GlslLibRoutine(source, ['coordinates.getOutputCoords']);\n  }\n\n  /**\n   * Constructing snippets for packed operations.\n   */\n  protected getPackedSamplerFromInput(funcName: string, name: string, inputLayout: TextureLayout): GlslLibRoutine {\n    switch (inputLayout.unpackedShape.length) {\n      case 0:\n        return this.getPackedSamplerScalar(funcName, name);\n      case 1:\n        return this.getPackedSampler1D(funcName, name, inputLayout);\n      case 2:\n        return this.getPackedSampler2D(funcName, name, inputLayout);\n      case 3:\n        return this.getPackedSampler3D(funcName, name, inputLayout);\n      default:\n        return this.getPackedSamplerND(funcName, name, inputLayout);\n    }\n  }\n\n  /**\n   * Constructing snippets for unpacked operations.\n   */\n  protected getUnpackedSamplerFromInput(funcName: string, name: string, inputLayout: TextureLayout): GlslLibRoutine {\n    const shape = inputLayout.unpackedShape;\n    switch (shape.length) {\n      case 0:\n        return this.getUnpackedSamplerScalar(funcName, name, inputLayout);\n      case 1:\n        return this.getUnpackedSampler1D(funcName, name, inputLayout);\n      case 2:\n        return this.getUnpackedSampler2D(funcName, name, inputLayout);\n      case 3:\n        return this.getUnpackedSampler3D(funcName, name, inputLayout);\n      case 4:\n        return this.getUnpackedSampler4D(funcName, name, inputLayout);\n      case 5:\n        return this.getUnpackedSampler5D(funcName, name, inputLayout);\n      case 6:\n        return this.getUnpackedSampler6D(funcName, name, inputLayout);\n      default:\n        // TODO support more dimensionalities\n        throw new Error(`Unsupported dimension ${shape.length}-D`);\n    }\n  }\n\n  /**\n   * Packed scalar snippet.\n   */\n  protected getPackedSamplerScalar(funcName: string, name: string): GlslLibRoutine {\n    const glsl = getGlsl(this.context.glContext.version);\n    const source = `\n          vec4 ${funcName}() {\n            return ${glsl.texture2D}(${name}, halfCR);\n          }\n        `;\n    return new GlslLibRoutine(source);\n  }\n\n  /**\n   * Packed 1D snippet.\n   */\n  protected getPackedSampler1D(funcName: string, name: string, inputLayout: TextureLayout): GlslLibRoutine {\n    const texShape = [inputLayout.width, inputLayout.height];\n    const packedTexShape = [texShape[1], texShape[0]];\n    const glsl = getGlsl(this.context.glContext.version);\n\n    const packedSampler = `vec4 ${funcName}(int index) {\n      vec2 uv = packedUVfrom1D(\n      ${packedTexShape[0]}, ${packedTexShape[1]}, index);\n      return ${glsl.texture2D}(${name}, uv);\n    }`;\n    const source = packedSampler;\n    return new GlslLibRoutine(source, ['coordinates.packedUVfrom1D']);\n  }\n\n  /**\n   * Packed 2D snippet.\n   */\n  protected getPackedSampler2D(funcName: string, name: string, inputLayout: TextureLayout): GlslLibRoutine {\n    const shape = inputLayout.unpackedShape;\n    const texShape = [inputLayout.width, inputLayout.height];\n    const glsl = getGlsl(this.context.glContext.version);\n    const texNumR = texShape[0];\n    const texNumC = texShape[1];\n\n    if (texShape != null && ArrayUtil.arraysEqual(shape, texShape)) {\n      const packedSampler = `vec4 ${funcName}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${texNumC}.0, ${texNumR}.0);\n        return ${glsl.texture2D}(${name}, uv);\n      }`;\n\n      return new GlslLibRoutine(packedSampler);\n    }\n    const packedTexShape = texShape;\n    const valuesPerRow = Math.ceil(shape[1] / 2);\n    const packedSampler = `vec4 ${funcName}(int row, int col) {\n      vec2 uv = packedUVfrom2D(${packedTexShape[1]}, ${packedTexShape[0]}, ${valuesPerRow}, row, col);\n      return ${glsl.texture2D}(${name}, uv);\n    }`;\n    const source = packedSampler;\n    return new GlslLibRoutine(source, ['coordinates.packedUVfrom2D']);\n  }\n\n  /**\n   * Packed 3D snippet.\n   */\n  protected getPackedSampler3D(funcName: string, name: string, inputLayout: TextureLayout): GlslLibRoutine {\n    const shape = inputLayout.unpackedShape;\n    const texShape = [inputLayout.width, inputLayout.height];\n    const packedTexShape = [texShape[0], texShape[1]];\n    const glsl = getGlsl(this.context.glContext.version);\n\n    if (shape[0] === 1) {\n      const squeezedShape = shape.slice(1);\n      const keptDims = [1, 2];\n      const newInputShape = squeezeInputShape(shape, squeezedShape);\n      const params = ['b', 'row', 'col'];\n      // Deep copy of input texture layout.\n      const newInputLayout: TextureLayout = JSON.parse(JSON.stringify(inputLayout));\n      newInputLayout.unpackedShape = newInputShape;\n      const samplerRoutine = this.getPackedSamplerFromInput(funcName, name, newInputLayout);\n      const packedSampler = `${samplerRoutine.routineBody}\n      vec4 ${funcName}(int b, int row, int col) {\n        return ${funcName}(${getSqueezedParams(params, keptDims)});\n      } `;\n      const source = packedSampler;\n      return new GlslLibRoutine(source, samplerRoutine.dependencies);\n    }\n    const texNumR = packedTexShape[0];\n    const texNumC = packedTexShape[1];\n\n    const valuesPerRow = Math.ceil(shape[2] / 2);\n    const texelsInBatch = valuesPerRow * Math.ceil(shape[1] / 2);\n\n    const packedSampler = `vec4 ${funcName}(int b, int row, int col) {\n      vec2 uv = packedUVfrom3D(\n        ${texNumC}, ${texNumR}, ${texelsInBatch}, ${valuesPerRow}, b, row, col);\n      return ${glsl.texture2D}(${name}, uv);}`;\n    const source = packedSampler;\n    return new GlslLibRoutine(source, ['coordinates.packedUVfrom3D']);\n  }\n  /*\n   * Packed ND snippet.\n   */\n  protected getPackedSamplerND(funcName: string, name: string, inputLayout: TextureLayout): GlslLibRoutine {\n    const shape = inputLayout.unpackedShape;\n    const rank = shape.length;\n    const texShape = [inputLayout.width, inputLayout.height];\n    const glsl = getGlsl(this.context.glContext.version);\n\n    const packedTexShape = [texShape[0], texShape[1]];\n    const texNumR = packedTexShape[1];\n    const texNumC = packedTexShape[0];\n    const valuesPerRow = Math.ceil(shape[rank - 1] / 2);\n    let texelsInBatch = valuesPerRow * Math.ceil(shape[rank - 2] / 2);\n    let params = 'int b, int row, int col';\n    let index = `b * ${texelsInBatch} + (row / 2) * ${valuesPerRow} + (col / 2)`;\n    for (let b = 2; b < rank - 1; b++) {\n      params = `int b${b}, ` + params;\n      texelsInBatch *= shape[rank - b - 1];\n      index = `b${b} * ${texelsInBatch} + ` + index;\n    }\n    const packedSampler = `vec4 ${funcName}(${params}) {\n      int index = ${index};\n      int texR = index / ${texNumC};\n      int texC = index - texR * ${texNumC};\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${texNumC}, ${texNumR});\n      return ${glsl.texture2D}(${name}, uv);\n    }`;\n    const source = packedSampler;\n    return new GlslLibRoutine(source);\n  }\n\n  /**\n   * Unpacked scalar snippet.\n   */\n  protected getUnpackedSamplerScalar(funcName: string, name: string, inputLayout: TextureLayout): GlslLibRoutine {\n    const [texNumR, texNumC] = [inputLayout.width, inputLayout.height];\n    if (texNumR === 1 && texNumC === 1) {\n      const source = `\n          float ${funcName}() {\n            return sampleTexture(${name}, halfCR);\n          }\n        `;\n      return new GlslLibRoutine(source, ['coordinates.sampleTexture']);\n    }\n\n    const source = `\n        float ${funcName}() {\n          int offset_${name} = coordsToOffset(TexCoords, ${texNumR}, ${texNumC});\n          vec2 uv = uvFromFlat(${texNumR}, ${texNumC}, offset_${name});\n          return sampleTexture(${name}, uv);\n        }\n      `;\n    return new GlslLibRoutine(\n        source, ['coordinates.uvFromFlat', 'coordinates.sampleTexture', 'coordinates.coordsToOffset']);\n  }\n\n  /**\n   * Unpacked 1D snippet.\n   */\n  protected getUnpackedSampler1D(funcName: string, name: string, inputLayout: TextureLayout): GlslLibRoutine {\n    const tNumR = inputLayout.width;\n    const tNumC = inputLayout.height;\n\n    if (tNumC === 1 && tNumR === 1) {\n      const source = `\n        float ${funcName}(int index) {\n          return sampleTexture(${name}, halfCR);\n        }\n      `;\n      return new GlslLibRoutine(source, ['coordinates.sampleTexture']);\n    }\n\n    if (tNumC === 1) {\n      const source = `\n          float ${funcName}(int index) {\n            vec2 uv = vec2((float(index) + 0.5) / ${tNumR}.0, 0.5);\n            return sampleTexture(${name}, uv);\n          }\n        `;\n      return new GlslLibRoutine(source, ['coordinates.sampleTexture']);\n    }\n    if (tNumR === 1) {\n      const source = `\n          float ${funcName}(int index) {\n            vec2 uv = vec2(0.5, (float(index) + 0.5) / ${tNumC}.0);\n            return sampleTexture(${name}, uv);\n          }\n        `;\n      return new GlslLibRoutine(source, ['coordinates.sampleTexture']);\n    }\n    const source = `\n        float ${funcName}(int index) {\n          vec2 uv = uvFromFlat(${tNumR}, ${tNumC}, index);\n          return sampleTexture(${name}, uv);\n        }\n      `;\n    return new GlslLibRoutine(source, ['coordinates.uvFromFlat', 'coordinates.sampleTexture']);\n  }\n\n  /**\n   * Unpacked 2D snippet.\n   */\n\n  protected getUnpackedSampler2D(funcName: string, name: string, inputLayout: TextureLayout): GlslLibRoutine {\n    const shape = inputLayout.unpackedShape;\n\n    // TODO: modify row/col order for other dimensions.\n    const texShape = [inputLayout.height, inputLayout.width];\n\n    if (texShape != null && ArrayUtil.arraysEqual(shape, texShape)) {\n      const texNumR = texShape[1];\n      const texNumC = texShape[0];\n      const source = `\n          float ${funcName}(int row, int col) {\n            vec2 uv = (vec2(row, col) + halfCR) / vec2(${texNumR}.0, ${texNumC}.0);\n            return sampleTexture(${name}, uv);\n          }\n        `;\n      return new GlslLibRoutine(source, ['coordinates.sampleTexture']);\n    }\n\n    const {newShape, keptDims} = squeezeShape(shape as number[]);\n    const squeezedShape = newShape;\n    if (squeezedShape.length < shape.length) {\n      const newInputShape = squeezeInputShape(shape, squeezedShape);\n      // Deep copy of input texture layout.\n      const newInputLayout: TextureLayout = JSON.parse(JSON.stringify(inputLayout));\n      newInputLayout.unpackedShape = newInputShape;\n\n      const params = ['col', 'row'];\n      const source = `\n          ${this.getUnpackedSamplerFromInput(funcName, name, newInputLayout).routineBody}\n          float ${funcName}(int row, int col) {\n            return ${funcName}(${getSqueezedParams(params, keptDims)});\n          }\n        `;\n      return new GlslLibRoutine(source, ['coordinates.sampleTexture']);\n    }\n\n    const texNumR = texShape[1];\n    const texNumC = texShape[0];\n    if (texNumC === 1) {\n      const source = `\n          float ${funcName}(int row, int col) {\n            int offset_${name} = coordsToOffset(TexCoords, ${texNumR}, ${texNumC});\n            float index = dot(vec3(row, col, offset_${name}), vec3(${shape[1]}, 1, 1));\n            vec2 uv = vec2(0.5, (index + 0.5) / ${texNumR}.0);\n            return sampleTexture(${name}, uv);\n          }\n        `;\n      return new GlslLibRoutine(source, ['coordinates.sampleTexture', 'coordinates.coordsToOffset']);\n    }\n\n    if (texNumR === 1) {\n      const source = `\n          float ${funcName}(int row, int col) {\n            int offset_${name} = coordsToOffset(TexCoords, ${texNumR}, ${texNumC});\n            float index = dot(vec3(row, col, offset_${name}), vec3(${shape[1]}, 1, 1));\n            vec2 uv = vec2((index + 0.5) / ${texNumC}.0, 0.5);\n            return sampleTexture(${name}, uv);\n          }\n        `;\n      return new GlslLibRoutine(source, ['coordinates.sampleTexture', 'coordinates.coordsToOffset']);\n    }\n\n    const source = `\n        float ${funcName}(int row, int col) {\n          int index = col * ${shape[1]} + row;\n          vec2 uv = uvFromFlat(${texNumR}, ${texNumC}, index);\n          return sampleTexture(${name}, uv);\n        }\n      `;\n    return new GlslLibRoutine(\n        source, ['coordinates.uvFromFlat', 'coordinates.sampleTexture', 'coordinates.coordsToOffset']);\n  }\n\n  /**\n   * Unpacked 3D snippet.\n   */\n\n  protected getUnpackedSampler3D(funcName: string, name: string, inputLayout: TextureLayout): GlslLibRoutine {\n    const shape = inputLayout.unpackedShape;\n    const stride0 = shape[1] * shape[2];\n    const stride1 = shape[2];\n\n    const {newShape, keptDims} = squeezeShape(shape as number[]);\n    const squeezedShape = newShape;\n    if (squeezedShape.length < shape.length) {\n      const newInputShape = squeezeInputShape(shape, squeezedShape);\n      const params = ['batch', 'col', 'row'];\n      // Deep copy of input texture layout.\n      const newInputLayout: TextureLayout = JSON.parse(JSON.stringify(inputLayout));\n      newInputLayout.unpackedShape = newInputShape;\n      const routine = this.getUnpackedSamplerFromInput(funcName, name, newInputLayout);\n      // TODO: revisit the logic here to make it simpler\n      const revDims = keptDims.reverse();\n      const source = `\n          ${routine.routineBody}\n          float ${funcName}(int batch, int row, int col) {\n            return ${funcName}(${getSqueezedParams(params, revDims)});\n          }\n        `;\n      return new GlslLibRoutine(source, routine.dependencies);\n    }\n\n    const texNumR = inputLayout.width;\n    const texNumC = inputLayout.height;\n    const source = `\n          float ${funcName}(int depth, int row, int col) {\n            // Explicitly use integer operations as dot() only works on floats.\n            int index = depth * ${stride0} + col * ${stride1} + row;\n            vec2 uv = uvFromFlat(${texNumR}, ${texNumC}, index);\n            return sampleTexture(${name}, uv);\n          }\n      `;\n    return new GlslLibRoutine(\n        source, ['coordinates.uvFromFlat', 'coordinates.sampleTexture', 'coordinates.coordsToOffset']);\n  }\n\n  /**\n   * Unpacked 4D snippet.\n   */\n\n  protected getUnpackedSampler4D(funcName: string, name: string, inputLayout: TextureLayout): GlslLibRoutine {\n    const shape = inputLayout.unpackedShape;\n    const stride2 = shape[3];\n    const stride1 = shape[2] * stride2;\n    const stride0 = shape[1] * stride1;\n\n    //\n    // TODO: re-enable this shortcut once the index calculation bug is fixed.\n    //\n    // const {newShape, keptDims} = squeezeShape(shape as number[]);\n    // if (newShape.length < shape.length) {\n    //   const newInputShape = squeezeInputShape(shape, newShape);\n    //   const params = ['row', 'col', 'depth', 'depth2'];\n    //   // Deep copy of input texture layout.\n    //   const newInputLayout: TextureLayout = JSON.parse(JSON.stringify(inputLayout));\n    //   newInputLayout.unpackedShape = newInputShape;\n    //   const source = `\n    //       ${this.getUnpackedSamplerFromInput(funcName, name, newInputLayout).routineBody}\n    //       float ${funcName}(int row, int col, int depth, int depth2) {\n    //         return ${funcName}(${getSqueezedParams(params, keptDims)});\n    //       }\n    //     `;\n    //   return new GlslLibRoutine(\n    //       source, ['coordinates.uvFromFlat', 'coordinates.sampleTexture', 'coordinates.coordsToOffset']);\n    // }\n\n    const texNumR = inputLayout.width;\n    const texNumC = inputLayout.height;\n    const source = `\n        float ${funcName}(int row, int col, int depth, int depth2) {\n          int index = row * ${stride0} + col * ${stride1} +\n              depth2 * ${stride2} + depth;\n          vec2 uv = uvFromFlat(${texNumR}, ${texNumC}, index);\n          return sampleTexture(${name}, uv);\n        }\n      `;\n    return new GlslLibRoutine(source, ['coordinates.uvFromFlat', 'coordinates.sampleTexture']);\n  }\n\n  /**\n   * Unpacked 5D snippet.\n   */\n  protected getUnpackedSampler5D(funcName: string, name: string, inputLayout: TextureLayout): GlslLibRoutine {\n    const shape = inputLayout.unpackedShape;\n    const stride3 = shape[4];\n    const stride2 = shape[3] * stride3;\n    const stride1 = shape[2] * stride2;\n    const stride0 = shape[1] * stride1;\n\n    const {newShape, keptDims} = squeezeShape(shape as number[]);\n    if (newShape.length < shape.length) {\n      const newInputShape = squeezeInputShape(shape, newShape);\n      const params = ['row', 'col', 'depth', 'depth2', 'depth3'];\n      // Deep copy of input texture layout.\n      const newInputLayout: TextureLayout = JSON.parse(JSON.stringify(inputLayout));\n      newInputLayout.unpackedShape = newInputShape;\n\n      const source = `\n          ${this.getUnpackedSamplerFromInput(funcName, name, newInputLayout).routineBody}\n          float ${funcName}(int row, int col, int depth, int depth2, int depth3) {\n            return ${funcName}(${getSqueezedParams(params, keptDims)});\n          }\n        `;\n      return new GlslLibRoutine(source, ['coordinates.sampleTexture', 'coordinates.uvFromFlat']);\n    }\n\n    const texNumR = inputLayout.width;\n    const texNumC = inputLayout.height;\n    const source = `\n        float ${funcName}(int row, int col, int depth, int depth2, int depth3) {\n          int index = row * ${stride0} + col * ${stride1} + depth * ${stride2} +\n          depth3 * ${stride3} + depth2;\n          vec2 uv = uvFromFlat(${texNumR}, ${texNumC}, index);\n          return sampleTexture(${name}, uv);\n        }\n      `;\n    return new GlslLibRoutine(source, ['coordinates.sampleTexture', 'coordinates.uvFromFlat']);\n  }\n\n  /**\n   * Unpacked 6D snippet.\n   */\n  protected getUnpackedSampler6D(funcName: string, name: string, inputLayout: TextureLayout): GlslLibRoutine {\n    const shape = inputLayout.unpackedShape;\n    const stride4 = shape[5];\n    const stride3 = shape[4] * stride4;\n    const stride2 = shape[3] * stride3;\n    const stride1 = shape[2] * stride2;\n    const stride0 = shape[1] * stride1;\n\n    const {newShape, keptDims} = squeezeShape(shape as number[]);\n    if (newShape.length < shape.length) {\n      const newInputShape = squeezeInputShape(shape, newShape);\n      const params = ['row', 'col', 'depth', 'depth2', 'depth3', 'depth4'];\n      // Deep copy of input texture layout.\n      const newInputLayout: TextureLayout = JSON.parse(JSON.stringify(inputLayout));\n      newInputLayout.unpackedShape = newInputShape;\n\n      const source = `\n            ${this.getUnpackedSamplerFromInput(funcName, name, newInputLayout).routineBody}\n            float ${funcName}(int row, int col, int depth,\n              int depth2, int depth3, int depth4) {\n              return ${funcName}(${getSqueezedParams(params, keptDims)});\n            }\n          `;\n      return new GlslLibRoutine(source, ['coordinates.sampleTexture', 'coordinates.uvFromFlat']);\n    }\n\n    const texNumR = inputLayout.width;\n    const texNumC = inputLayout.height;\n    const source = `\n          float ${funcName}(int row, int col, int depth,\n            int depth2, int depth3, int depth4) {\n            int index = row * ${stride0} + col * ${stride1} + depth * ${stride2} +\n            depth2 * ${stride3} + depth3 * ${stride4} + depth4;\n            vec2 uv = uvFromFlat(${texNumR}, ${texNumC}, index);\n            return sampleTexture(${name}, uv);\n          }\n        `;\n    return new GlslLibRoutine(\n        source, ['coordinates.uvFromFlat', 'coordinates.sampleTexture', 'coordinates.coordsToOffset']);\n  }\n\n  /**\n   * This is the main function to map from the given texture coordiantes (s,t)\n   * to logical indices for the output\n   * There will only be one single variation of this\n   * Also see coordsToOffset and offsetToIndices for input-specific versions\n   */\n  protected toVec(): {[name: string]: GlslLibRoutine} {\n    const output = this.context.outputTextureLayout;\n    const rank = output.shape.length;\n    const strides = output.strides;\n    const xScale = output.width;\n    const yScale = output.height;\n\n    const stridesBlock = [];\n    for (let i = 0; i < rank - 1; ++i) {\n      stridesBlock.push(`\n        c[${i}] = offset / ${strides[i]};`);\n      stridesBlock.push(`\n        offset -= c[${i}] * ${strides[i]};`);\n    }\n    stridesBlock.push(`\n        c[${rank - 1}] = offset;`);\n    const body = `\n      void toVec(vec2 texCoords, out int c[${rank}]) {\n        int offset = coordsToOffset(texCoords, ${xScale}, ${yScale});\n        ${stridesBlock.join('')}\n      }\n      void toVec(int offset, out int c[${rank}]) {\n        ${stridesBlock.join('')}\n      }\n    `;\n    return {toVec: new GlslLibRoutine(body, ['coordinates.coordsToOffset'])};\n  }\n  /**\n   * These are value getter functions generated for each input\n   * Each function is hardwired to the name and dimensions of the input\n   * An '_T' variation is also produced which accesses values as if the\n   * input was transposed\n   */\n  protected valueFrom(): {[name: string]: GlslLibRoutine} {\n    const result: {[name: string]: GlslLibRoutine} = {};\n    this.context.programInfo.inputNames.forEach((name, i) => {\n      const layout = this.context.inputTextureLayouts[i];\n      const shape = layout.unpackedShape.length > 0 ? layout.unpackedShape : layout.shape;\n      const rank = shape.length;\n      let funcName = `_${name}`;\n      result[funcName] = new GlslLibRoutine(\n          this.getValueFromSingle(name, rank, layout.width, layout.height, false),\n          [`shapeUtils.indicesToOffset${funcName}`, 'coordinates.offsetToCoords', 'fragcolor.getColorAsFloat']);\n      funcName = funcName + '_T';\n      result[funcName] = new GlslLibRoutine(\n          this.getValueFromSingle(name, rank, layout.width, layout.height, true),\n          [`shapeUtils.indicesToOffset${funcName}`, 'coordinates.offsetToCoords', 'fragcolor.getColorAsFloat']);\n    });\n    return result;\n  }\n  /**\n   * Produces one value getter function for the name and rank given\n   * If a transpose is set proper offsetToCoords mapping will be used\n   * @param name name of the function\n   * @param rank rank of the input\n   * @param transpose whether or not should generate a transpose variation\n   */\n  protected getValueFromSingle(varName: string, rank: number, width: number, height: number, transpose: boolean):\n      string {\n    let name = `_${varName}`;\n    if (transpose) {\n      name = name + '_T';\n    }\n    const glsl = getGlsl(this.context.glContext.version);\n    return `\n        float ${name}(int m[${rank}]) {\n          int offset = indicesToOffset${name}(m);\n          vec2 coords = offsetToCoords(offset, ${width}, ${height});\n          float value = getColorAsFloat(${glsl.texture2D}(${varName}, coords));\n          return value;\n        }\n        `;\n  }\n\n  /**\n   * Produces a packed value getter function for the name and rank given\n   * If a transpose is set proper offsetToCoords mapping will be used\n   * @param name name of the function\n   * @param rank rank of the input\n   * @param transpose whether or not should generate a transpose variation\n   */\n  protected getPackedValueFrom(varName: string, rank: number, width: number, height: number, transpose: boolean):\n      string {\n    let name = `_${varName}_Pack`;\n    if (transpose) {\n      name = name + '_T';\n    }\n    const glsl = getGlsl(this.context.glContext.version);\n    return `\n        vec4 ${name}(int m[${rank}]) {\n          int offset = indicesToOffset_${varName}(m);\n          vec2 coords = offsetToCoords(offset, ${width}, ${height});\n          return ${glsl.texture2D}(${varName}, coords);\n        }\n        `;\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {ProgramInfo, TextureLayout} from './types';\nimport {WebGLContext} from './webgl-context';\n\n/* eslint-disable @typescript-eslint/naming-convention */\nexport enum FunctionType {\n  ValueBased,\n  Positional\n}\nexport interface GlslFunction<T extends FunctionType> {\n  body: string;\n  name: string;\n  type: T;\n}\nexport type GlslValueFunction = GlslFunction<FunctionType.ValueBased>;\nexport interface GlslPositionalFunction extends GlslFunction<FunctionType.Positional> {\n  inputShape: readonly number[];\n  outputShape: readonly number[];\n}\n\nexport class GlslContext {\n  constructor(\n      public glContext: WebGLContext, public programInfo: ProgramInfo, public inputTextureLayouts: TextureLayout[],\n      public outputTextureLayout: TextureLayout) {}\n}\nexport abstract class GlslLib {\n  constructor(public context: GlslContext) {}\n  abstract getFunctions(): {[name: string]: GlslLibRoutine};\n  abstract getCustomTypes(): {[name: string]: string};\n}\n\n// abstraction to represent a GLSL library routine and it's dependencies\nexport class GlslLibRoutine {\n  constructor(public routineBody: string, public dependencies?: string[]) {}\n}\n\n// abstraction to represent a GLSL library routine and it's dependencies AS GRAPH Nodes\n// this level of abstraction is used to topologically sort routines before fragment shade inclusion\nexport class GlslLibRoutineNode {\n  dependencies: GlslLibRoutineNode[];\n  routineBody: string;\n  constructor(public name: string, routineBody?: string, dependencies?: GlslLibRoutineNode[]) {\n    if (dependencies) {\n      this.dependencies = dependencies;\n    } else {\n      this.dependencies = [];\n    }\n\n    if (routineBody) {\n      this.routineBody = routineBody;\n    }\n  }\n  addDependency(node: GlslLibRoutineNode) {\n    if (node) {\n      this.dependencies.push(node);\n    }\n  }\n}\n\n// topologically sort GLSL library routines (graph nodes abstraction) before shader script inclusion\nexport class TopologicalSortGlslRoutines {\n  static returnOrderedNodes(nodes: GlslLibRoutineNode[]): GlslLibRoutineNode[] {\n    if (!nodes || nodes.length === 0) {\n      return [];\n    }\n\n    if (nodes.length === 1) {\n      return nodes;\n    }\n\n    const cycleCheck = new Set<string>();\n    const alreadyTraversed = new Set<string>();\n    const result = new Array<GlslLibRoutineNode>();\n\n    this.createOrderedNodes(nodes, cycleCheck, alreadyTraversed, result);\n    return result;\n  }\n\n  private static createOrderedNodes(\n      graphNodes: GlslLibRoutineNode[], cycleCheck: Set<string>, alreadyTraversed: Set<string>,\n      result: GlslLibRoutineNode[]) {\n    for (let i = 0; i < graphNodes.length; ++i) {\n      this.dfsTraverse(graphNodes[i], cycleCheck, alreadyTraversed, result);\n    }\n  }\n\n  private static dfsTraverse(\n      root: GlslLibRoutineNode, cycleCheck: Set<string>, alreadyTraversed: Set<string>, result: GlslLibRoutineNode[]) {\n    // if this root has already been traversed return\n    if (!root || alreadyTraversed.has(root.name)) {\n      return;\n    }\n\n    // cyclic dependency has been detected\n    if (cycleCheck.has(root.name)) {\n      throw new Error('Cyclic dependency detected. Can\\'t topologically sort routines needed for shader.');\n    }\n\n    // hold this node to detect cycles if any\n    cycleCheck.add(root.name);\n\n    // traverse children in a dfs fashion\n    const dependencies = root.dependencies;\n    if (dependencies && dependencies.length > 0) {\n      for (let i = 0; i < dependencies.length; ++i) {\n        this.dfsTraverse(dependencies[i], cycleCheck, alreadyTraversed, result);\n      }\n    }\n\n    // add to result holder\n    result.push(root);\n\n    // mark this node as traversed so that we don't traverse from this again\n    alreadyTraversed.add(root.name);\n\n    // release the hold\n    cycleCheck.delete(root.name);\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {GlslContext, GlslLib, GlslLibRoutine} from './glsl-definitions';\n\n/**\n * This GLSL library handles routines converting\n * float32 to/from Unsigned byte or float 16\n */\nexport class EncodingGlslLib extends GlslLib {\n  constructor(context: GlslContext) {\n    super(context);\n  }\n  getFunctions(): {[name: string]: GlslLibRoutine} {\n    return {...this.encodeFloat32(), ...this.decodeFloat32()};\n  }\n  getCustomTypes(): {[name: string]: string} {\n    return {};\n  }\n  protected encodeFloat32(): {[name: string]: GlslLibRoutine} {\n    return {\n      encode: new GlslLibRoutine(`highp vec4 encode(highp float f) {\n        return vec4(f, 0.0, 0.0, 0.0);\n      }\n        `)\n    };\n  }\n  protected decodeFloat32(): {[name: string]: GlslLibRoutine} {\n    return {\n      decode: new GlslLibRoutine(`highp float decode(highp vec4 rgba) {\n        return rgba.r;\n      }\n        `)\n    };\n  }\n  /**\n   * returns the routine to encode encode a 32bit float to a vec4 (of unsigned bytes)\n   * @credit: https://stackoverflow.com/questions/7059962/how-do-i-convert-a-vec4-rgba-value-to-a-float\n   */\n  protected encodeUint8(): {[name: string]: GlslLibRoutine} {\n    const endianness = EncodingGlslLib.isLittleEndian() ? 'rgba.rgba=rgba.abgr;' : '';\n    return {\n      encode: new GlslLibRoutine(`\n      highp vec4 encode(highp float f) {\n        highp float F = abs(f);\n        highp float Sign = step(0.0,-f);\n        highp float Exponent = floor(log2(F));\n        highp float Mantissa = (exp2(- Exponent) * F);\n        Exponent = floor(log2(F) + 127.0) + floor(log2(Mantissa));\n        highp vec4 rgba;\n        rgba[0] = 128.0 * Sign  + floor(Exponent*exp2(-1.0));\n        rgba[1] = 128.0 * mod(Exponent,2.0) + mod(floor(Mantissa*128.0),128.0);\n        rgba[2] = floor(mod(floor(Mantissa*exp2(23.0 -8.0)),exp2(8.0)));\n        rgba[3] = floor(exp2(23.0)*mod(Mantissa,exp2(-15.0)));\n        ${endianness}\n        rgba = rgba / 255.0; // values need to be normalized to [0,1]\n        return rgba;\n    }\n        `)\n    };\n  }\n  /**\n   * returns the routine to encode a vec4 of unsigned bytes to float32\n   * @credit: https://stackoverflow.com/questions/7059962/how-do-i-convert-a-vec4-rgba-value-to-a-float\n   */\n  protected decodeUint8(): {[name: string]: GlslLibRoutine} {\n    const endianness = EncodingGlslLib.isLittleEndian() ? 'rgba.rgba=rgba.abgr;' : '';\n    return {\n      decode: new GlslLibRoutine(`\n        highp float decode(highp vec4 rgba) {\n          rgba = rgba * 255.0; // values need to be de-normalized from [0,1] to [0,255]\n          ${endianness}\n          highp float Sign = 1.0 - step(128.0,rgba[0])*2.0;\n          highp float Exponent = 2.0 * mod(rgba[0],128.0) + step(128.0,rgba[1]) - 127.0;\n          highp float Mantissa = mod(rgba[1],128.0)*65536.0 + rgba[2]*256.0 +rgba[3] + float(0x800000);\n          highp float Result =  Sign * exp2(Exponent) * (Mantissa * exp2(-23.0 ));\n          return Result;\n      }\n        `)\n    };\n  }\n  /**\n   * Determines if the machine is little endian or not\n   * @credit: https://gist.github.com/TooTallNate/4750953\n   */\n  static isLittleEndian(): boolean {\n    const b = new ArrayBuffer(4);\n    const a = new Uint32Array(b);\n    const c = new Uint8Array(b);\n    a[0] = 0xdeadbeef;\n    if (c[0] === 0xef) {\n      return true;\n    }\n    if (c[0] === 0xde) {\n      return false;\n    }\n    throw new Error('unknown endianness');\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {GlslContext, GlslLib, GlslLibRoutine} from './glsl-definitions';\nimport {getGlsl} from './glsl-source';\n\n/**\n * This GLSL library handles routines around reading a texlet and writing to it\n * Reading and writing could be more than just dealing with one channel\n * It may require encoding/decoding to/from 4 channels into one\n */\nexport class FragColorGlslLib extends GlslLib {\n  constructor(context: GlslContext) {\n    super(context);\n  }\n  getFunctions(): {[name: string]: GlslLibRoutine} {\n    return {...this.setFragColor(), ...this.getColorAsFloat()};\n  }\n  getCustomTypes(): {[name: string]: string} {\n    return {};\n  }\n  protected setFragColor(): {[name: string]: GlslLibRoutine} {\n    const glsl = getGlsl(this.context.glContext.version);\n    return {\n      setFragColor: new GlslLibRoutine(\n          `\n        void setFragColor(float value) {\n            ${glsl.output} = encode(value);\n        }\n        `,\n          ['encoding.encode'])\n    };\n  }\n  protected getColorAsFloat(): {[name: string]: GlslLibRoutine} {\n    return {\n      getColorAsFloat: new GlslLibRoutine(\n          `\n        float getColorAsFloat(vec4 color) {\n            return decode(color);\n        }\n        `,\n          ['encoding.decode'])\n    };\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nconst INLINE_FUNC_DEF_REGEX = /@inline[\\s\\n\\r]+(\\w+)[\\s\\n\\r]+([0-9a-zA-Z_]+)\\s*\\(([^)]*)\\)\\s*{(([^}]|[\\n\\r])*)}/gm;\nconst FUNC_CALL_REGEX = '(\\\\w+)?\\\\s+([_0-9a-zA-Z]+)\\\\s+=\\\\s+__FUNC__\\\\((.*)\\\\)\\\\s*;';\n/**\n * GLSL preprocessor responsible for resolving @inline directives\n */\nexport function replaceInlines(script: string): string {\n  const inlineDefs: {[name: string]: {params: Array<{type: string; name: string}|null>; body: string}} = {};\n  let match;\n  while ((match = INLINE_FUNC_DEF_REGEX.exec(script)) !== null) {\n    const params = match[3]\n                       .split(',')\n                       .map(s => {\n                         const tokens = s.trim().split(' ');\n                         if (tokens && tokens.length === 2) {\n                           return {type: tokens[0], name: tokens[1]};\n                         }\n                         return null;\n                       })\n                       .filter(v => v !== null);\n    inlineDefs[match[2]] = {params, body: match[4]};\n  }\n  for (const name in inlineDefs) {\n    const regexString = FUNC_CALL_REGEX.replace('__FUNC__', name);\n    const regex = new RegExp(regexString, 'gm');\n    while ((match = regex.exec(script)) !== null) {\n      const type = match[1];\n      const variable = match[2];\n      const params = match[3].split(',');\n      const declLine = (type) ? `${type} ${variable};` : '';\n      let newBody: string = inlineDefs[name].body;\n      let paramRedecLine = '';\n      inlineDefs[name].params.forEach((v, i) => {\n        if (v) {\n          paramRedecLine += `${v.type} ${v.name} = ${params[i]};\\n`;\n        }\n      });\n      newBody = `${paramRedecLine}\\n ${newBody}`;\n      newBody = newBody.replace('return', `${variable} = `);\n      const replacement = `\n      ${declLine}\n      {\n        ${newBody}\n      }\n      `;\n      script = script.replace(match[0], replacement);\n    }\n  }\n  script = script.replace(INLINE_FUNC_DEF_REGEX, '');\n  return script;\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {GlslContext, GlslLib, GlslLibRoutineNode, TopologicalSortGlslRoutines} from './glsl-definitions';\nimport {replaceInlines} from './glsl-function-inliner';\nimport {glslRegistry} from './glsl-registered-libs';\nimport {getDefaultFragShaderMain, getFragShaderPreamble} from './glsl-source';\nimport {ProgramInfo, TextureLayout, VariableInfo} from './types';\nimport {WebGLContext} from './webgl-context';\n\n/**\n * Preprocessor for the additions to the GLSL language\n * It deals with:\n *  @include directives\n *  @inline\n *  Loop unrolling (not implemented)\n *  Macro resolution (not implemented)\n */\nexport class GlslPreprocessor {\n  readonly context: GlslContext;\n  readonly libs: {[name: string]: GlslLib} = {};\n  readonly glslLibRoutineDependencyGraph: {[routineName: string]: GlslLibRoutineNode} = {};\n\n  constructor(\n      glContext: WebGLContext, programInfo: ProgramInfo, inputTextureLayouts: TextureLayout[],\n      outputTextureLayout: TextureLayout) {\n    this.context = new GlslContext(glContext, programInfo, inputTextureLayouts, outputTextureLayout);\n\n    // construct GlslLibs\n    Object.keys(glslRegistry).forEach((name: string) => {\n      const lib = new glslRegistry[name](this.context);\n      this.libs[name] = lib;\n    });\n\n    // construct GlslRoutineDependencyGraph\n    const map = this.glslLibRoutineDependencyGraph;\n    for (const libName in this.libs) {\n      const lib = this.libs[libName];\n      const routinesInLib = lib.getFunctions();\n      for (const routine in routinesInLib) {\n        const key = libName + '.' + routine;\n        let currentNode: GlslLibRoutineNode;\n        if (map[key]) {\n          currentNode = map[key];\n          currentNode.routineBody = routinesInLib[routine].routineBody;\n        } else {\n          currentNode = new GlslLibRoutineNode(key, routinesInLib[routine].routineBody);\n          map[key] = currentNode;\n        }\n        const dependencies = routinesInLib[routine].dependencies;\n        if (dependencies) {\n          for (let i = 0; i < dependencies.length; ++i) {\n            if (!map[dependencies[i]]) {\n              const node = new GlslLibRoutineNode(dependencies[i]);\n              map[dependencies[i]] = node;\n              currentNode.addDependency(node);\n            } else {\n              currentNode.addDependency(map[dependencies[i]]);\n            }\n          }\n        }\n      }\n    }\n  }\n\n  preprocess(): string {\n    const programInfo = this.context.programInfo;\n    let source = programInfo.shaderSource;\n\n    // append main() function\n    if (!this.context.programInfo.hasMain) {\n      source = `${source}\n      ${getDefaultFragShaderMain(this.context.glContext.version, this.context.outputTextureLayout.shape.length)}`;\n    }\n    // replace inlines\n    source = replaceInlines(source);\n\n    // concat final source string\n    return `${getFragShaderPreamble(this.context.glContext.version)}\n    ${this.getUniforms(programInfo.inputNames, programInfo.variables)}\n    ${this.getImports(source)}\n    ${source}`;\n  }\n\n  protected getImports(script: string): string {\n    const routinesIncluded = this.selectGlslLibRoutinesToBeIncluded(script);\n\n    if (routinesIncluded.length === 0) {\n      return '';\n    }\n\n    let routines = '';\n    for (let i = 0; i < routinesIncluded.length; ++i) {\n      if (routinesIncluded[i].routineBody) {\n        routines += routinesIncluded[i].routineBody + '\\n';\n      } else {\n        throw new Error(`Missing body for the Glsl Library routine: ${routinesIncluded[i].name}`);\n      }\n    }\n\n    return routines;\n  }\n  private selectGlslLibRoutinesToBeIncluded(script: string): GlslLibRoutineNode[] {\n    const nodes: GlslLibRoutineNode[] = [];\n\n    Object.keys(this.glslLibRoutineDependencyGraph).forEach(classAndRoutine => {\n      const routine = classAndRoutine.split('.')[1];\n      if (script.indexOf(routine) !== -1) {\n        nodes.push(this.glslLibRoutineDependencyGraph[classAndRoutine]);\n      }\n    });\n\n    return TopologicalSortGlslRoutines.returnOrderedNodes(nodes);\n  }\n\n  protected getUniforms(samplers?: string[], variables?: VariableInfo[]): string {\n    const uniformLines: string[] = [];\n    if (samplers) {\n      for (const sampler of samplers) {\n        uniformLines.push(`uniform sampler2D ${sampler};`);\n      }\n    }\n    if (variables) {\n      for (const variable of variables) {\n        uniformLines.push(\n            `uniform ${variable.type} ${variable.name}${variable.arrayLength ? `[${variable.arrayLength}]` : ''};`);\n      }\n    }\n    return uniformLines.join('\\n');\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {CoordsGlslLib} from './glsl-coordinate-lib';\nimport {GlslContext, GlslLib} from './glsl-definitions';\nimport {EncodingGlslLib} from './glsl-encoding-lib';\nimport {FragColorGlslLib} from './glsl-fragcolor-lib';\nimport {ShapeUtilsGlslLib} from './glsl-shape-utils-lib';\nimport {VecGlslLib} from './glsl-vec-lib';\n\nexport const glslRegistry: {[name: string]: new (context: GlslContext) => GlslLib} = {\n  'encoding': EncodingGlslLib,\n  'fragcolor': FragColorGlslLib,\n  'vec': VecGlslLib,\n  'shapeUtils': ShapeUtilsGlslLib,\n  'coordinates': CoordsGlslLib,\n  //  'arrays': ArrayGlslSLib\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {GlslContext, GlslLib, GlslLibRoutine} from './glsl-definitions';\n\n/**\n * GLSL Library responsible for data types and routines for manipulating\n * coordinates and mapping to/from tensor indices\n */\nexport class ShapeUtilsGlslLib extends GlslLib {\n  constructor(context: GlslContext) {\n    super(context);\n  }\n  getFunctions(): {[name: string]: GlslLibRoutine} {\n    return {\n      ...this.bcastIndex(),\n      ...this.bcastMatmulIndex(),\n      ...this.offsetToIndices(),\n      ...this.indicesToOffset(),\n      ...this.incrementIndices()\n    };\n  }\n  getCustomTypes() {\n    return {};\n  }\n  protected bcastIndex(): {[name: string]: GlslLibRoutine} {\n    const outputRank = this.context.outputTextureLayout.shape.length;\n    const result: {[name: string]: GlslLibRoutine} = {};\n    this.context.programInfo.inputNames.forEach((name, i) => {\n      const shape = this.context.inputTextureLayouts[i].unpackedShape;\n      if (shape.length <= outputRank) {\n        const rank = shape.length;\n        const dimOffset = outputRank - rank;\n        const funcName = `bcastIndices_${name}`;\n        let block = '';\n        for (let i = 0; i < rank; ++i) {\n          block += `\n          realIndices[${i}] = int( mod(float(bcastedIndices[${dimOffset + i}]), ${shape[i]}.0) );\n          `;\n        }\n        const body = `\n        void ${funcName} (int bcastedIndices[${outputRank}], out int realIndices[${rank}]) {\n          ${block}\n        }\n        `;\n        result[funcName] = new GlslLibRoutine(body);\n      }\n    });\n    return result;\n  }\n  protected bcastMatmulIndex(): {[name: string]: GlslLibRoutine} {\n    const outputRank = this.context.outputTextureLayout.shape.length;\n    const result: {[name: string]: GlslLibRoutine} = {};\n    this.context.programInfo.inputNames.forEach((name, i) => {\n      const shape = this.context.inputTextureLayouts[i].shape;\n      if (!(shape.length < 2 || shape.length > outputRank)) {\n        const rank = shape.length;\n        const dimOffset = outputRank - rank;\n        const funcName = `bcastMatmulIndices_${name}`;\n        let block = '';\n        for (let i = 0; i < rank - 2; ++i) {\n          block += `\n          realIndices[${i}] = int( mod(float(bcastedIndices[${dimOffset + i}]), ${shape[i]}.0) );\n          `;\n        }\n        const body = `\n        void ${funcName}(int bcastedIndices[${outputRank}], out int realIndices[${rank}]) {\n          ${block}\n          realIndices[${rank - 1}] = bcastedIndices[${outputRank - 1}];\n          realIndices[${rank - 2}] = bcastedIndices[${outputRank - 2}];\n        }\n        `;\n        result[funcName] = new GlslLibRoutine(body);\n      }\n    });\n    return result;\n  }\n  protected indicesToOffset(): {[name: string]: GlslLibRoutine} {\n    const result: {[name: string]: GlslLibRoutine} = {};\n    this.context.programInfo.inputNames.forEach((name, i) => {\n      const shape = this.context.inputTextureLayouts[i].shape;\n      const strides = this.context.inputTextureLayouts[i].strides;\n      const rank = shape.length;\n      let funcName = `indicesToOffset_${name}`;\n      result[funcName] = new GlslLibRoutine(ShapeUtilsGlslLib.indexToOffsetSingle(funcName, rank, strides));\n      funcName = `indicesToOffset_${name}_T`;\n      result[funcName] =\n          new GlslLibRoutine(ShapeUtilsGlslLib.indexToOffsetSingle(funcName, rank, strides.slice().reverse()));\n    });\n    return result;\n  }\n  static indexToOffsetSingle(name: string, rank: number, strides: readonly number[]): string {\n    let block = '';\n    for (let i = rank - 1; i >= 0; --i) {\n      block += `\n        offset += indices[${i}] * ${strides[i]};\n        `;\n    }\n    return `\n      int ${name}(int indices[${rank}]) {\n        int offset = 0;\n        ${block}\n        return offset;\n      }\n      `;\n  }\n  protected offsetToIndices(): {[name: string]: GlslLibRoutine} {\n    const result: {[name: string]: GlslLibRoutine} = {};\n    this.context.programInfo.inputNames.forEach((name, i) => {\n      const shape = this.context.inputTextureLayouts[i].shape;\n      const strides = this.context.inputTextureLayouts[i].strides;\n      const rank = shape.length;\n      let funcName = `offsetToIndices_${name}`;\n      result[funcName] = new GlslLibRoutine(ShapeUtilsGlslLib.offsetToIndicesSingle(funcName, rank, strides));\n      funcName = `offsetToIndices_${name}_T`;\n      result[funcName] =\n          new GlslLibRoutine(ShapeUtilsGlslLib.offsetToIndicesSingle(funcName, rank, strides.slice().reverse()));\n    });\n    return result;\n  }\n  static offsetToIndicesSingle(name: string, rank: number, strides: readonly number[]): string {\n    const stridesBlock = [];\n    for (let i = 0; i < rank - 1; ++i) {\n      stridesBlock.push(`\n      indices[${i}] = offset / ${strides[i]};`);\n      stridesBlock.push(`\n        offset -= indices[${i}] * ${strides[i]};`);\n    }\n    stridesBlock.push(`\n      indices[${rank - 1}] = offset;`);\n    return `\n      void ${name}(int offset, out int indices[${rank}]) {\n        ${stridesBlock.join('')}\n      }\n      `;\n  }\n  protected incrementIndices(): {[name: string]: GlslLibRoutine} {\n    const result: {[name: string]: GlslLibRoutine} = {};\n    this.context.programInfo.inputNames.forEach((name, i) => {\n      const shape = this.context.inputTextureLayouts[i].shape;\n      const rank = shape.length;\n      const funcName = `incrementIndices_${name}`;\n      let shapeInit = '';\n      for (let i = 0; i < rank; ++i) {\n        shapeInit += `\n        shape[${i}] = ${shape[i]};`;\n      }\n      const body = `\n        void ${funcName}(int axis, out int indices[${rank}]) {\n          int shape[${rank}];\n          ${shapeInit};\n          for(int i = ${rank} -1 ; i >= 0; --i) {\n            if(i > axis) continue;\n            indices[i] += 1;\n            if(indices[i] < shape[i]) {\n              break;\n            }\n            indices[i] = 0;\n          }\n        }\n        `;\n      result[funcName] = new GlslLibRoutine(body);\n    });\n    return result;\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\n/**\n * represent a version irrelevant abstraction of for GLSL source code\n */\nexport interface Glsl {\n  readonly version: string;\n  readonly attribute: string;\n  readonly varyingVertex: string;\n  readonly varyingFrag: string;\n  readonly texture2D: string;\n  readonly output: string;\n  readonly outputDeclaration: string;\n}\n\nconst GLSL_ES_2_0: Glsl = {\n  version: '',\n  attribute: 'attribute',\n  varyingVertex: 'varying',\n  varyingFrag: 'varying',\n  texture2D: 'texture2D',\n  output: 'gl_FragColor',\n  outputDeclaration: '',\n};\nconst GLSL_ES_3_0: Glsl = {\n  version: '#version 300 es',\n  attribute: 'in',\n  varyingVertex: 'out',\n  varyingFrag: 'in',\n  texture2D: 'texture',\n  output: 'outputColor',\n  outputDeclaration: 'out vec4 outputColor;',\n};\n\nexport function getGlsl(version: 1|2) {\n  return version === 1 ? GLSL_ES_2_0 : GLSL_ES_3_0;\n}\n\nexport function getVertexShaderSource(version: 1|2): string {\n  const glsl = getGlsl(version);\n  return `${glsl.version}\n      precision highp float;\n      ${glsl.attribute} vec3 position;\n      ${glsl.attribute} vec2 textureCoord;\n\n      ${glsl.varyingVertex} vec2 TexCoords;\n\n      void main()\n      {\n          gl_Position = vec4(position, 1.0);\n          TexCoords = textureCoord;\n      }`;\n}\n\nexport function getFragShaderPreamble(version: 1|2): string {\n  const glsl = getGlsl(version);\n  return `${glsl.version}\n    precision highp float;\n    precision highp int;\n    precision highp sampler2D;\n    ${glsl.varyingFrag} vec2 TexCoords;\n    ${glsl.outputDeclaration}\n    const vec2 halfCR = vec2(0.5, 0.5);\n\n    // Custom vector types to handle higher dimenalities.\n    struct ivec5\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n    };\n\n    struct ivec6\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n      int v;\n    };\n\n    int imod(int x, int y) {\n      return x - y * (x / y);\n    }\n\n    `;\n}\n\nexport function getDefaultFragShaderMain(version: 1|2, outputShapeLength: number): string {\n  const glsl = getGlsl(version);\n  return `\n  void main() {\n    int indices[${outputShapeLength}];\n    toVec(TexCoords, indices);\n    vec4 result = vec4(process(indices));\n    ${glsl.output} = result;\n  }\n  `;\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {GlslContext, GlslLib, GlslLibRoutine} from './glsl-definitions';\n\n/**\n * GLSL Library responsible for vec routines\n * Vec is an varible length int array. The length is fixed at the time of\n * generating the library functions from the dimensions of the output.\n */\nexport class VecGlslLib extends GlslLib {\n  constructor(context: GlslContext) {\n    super(context);\n  }\n  getCustomTypes(): {[name: string]: string} {\n    return {};\n  }\n  getFunctions(): {[name: string]: GlslLibRoutine} {\n    return {...this.binaryVecFunctions(), ...this.copyVec(), ...this.setVecItem(), ...this.getVecItem()};\n  }\n  protected binaryVecFunctions(): {[name: string]: GlslLibRoutine} {\n    const outputLayout = this.context.outputTextureLayout;\n    const rank = outputLayout.shape.length;\n    const nameOp: {[name: string]: string} = {add: '+=', sub: '-=', mul: '*=', div: '/='};\n    const result: {[name: string]: GlslLibRoutine} = {};\n    for (const name in nameOp) {\n      const fname = `${name}Vec`;\n      let assignmentBlock = '';\n      for (let i = 0; i < rank; ++i) {\n        assignmentBlock += `\n          dest[${i}] ${nameOp[name]} src[${i}];\n          `;\n      }\n      const body = `\n        void ${fname}(int src[${rank}], out int dest[${rank}]) {\n          ${assignmentBlock}\n        }\n        `;\n      result[fname] = new GlslLibRoutine(body);\n    }\n\n    return result;\n  }\n  protected copyVec(): {[name: string]: GlslLibRoutine} {\n    const outputLayout = this.context.outputTextureLayout;\n    const rank = outputLayout.shape.length;\n    let assignmentBlock = '';\n    for (let i = 0; i < rank; ++i) {\n      assignmentBlock += `\n        dest[${i}] = src[${i}];\n        `;\n    }\n    const body = `\n      void copyVec(int src[${rank}], out int dest[${rank}]) {\n        ${assignmentBlock}\n      }\n      `;\n    return {copyVec: new GlslLibRoutine(body)};\n  }\n\n  protected setVecItem(): {[name: string]: GlslLibRoutine} {\n    const outputLayout = this.context.outputTextureLayout;\n    const rank = outputLayout.shape.length;\n    let block = `\n        if(index < 0)\n            index =${rank} + index;\n        if (index == 0)\n            m[0] = value;\n        `;\n    for (let i = 1; i < rank - 1; ++i) {\n      block += `\n        else if (index == ${i})\n            m[${i}] = value;\n            `;\n    }\n    block += `\n        else\n            m[${rank - 1}] = value;\n        `;\n    const body = `\n      void setVecItem(out int m[${rank}], int index, int value) {\n        ${block}\n      }\n        `;\n    return {setVecItem: new GlslLibRoutine(body)};\n  }\n  protected getVecItem(): {[name: string]: GlslLibRoutine} {\n    const outputLayout = this.context.outputTextureLayout;\n    const rank = outputLayout.shape.length;\n    let block = `\n        if(index < 0)\n            index = ${rank} + index;\n        if (index == 0)\n            return m[0];\n      `;\n    for (let i = 1; i < rank - 1; ++i) {\n      block += `\n        else if (index == ${i})\n            return m[${i}];\n      `;\n    }\n    block += `\n        else\n            return m[${rank - 1}];\n        `;\n    const body = `\n      int getVecItem(int m[${rank}], int index) {\n        ${block}\n      }\n    `;\n    return {getVecItem: new GlslLibRoutine(body)};\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {InferenceHandler} from '../../backend';\nimport {Logger} from '../../instrument';\nimport {Tensor} from '../../tensor';\nimport {ShapeUtil} from '../../util';\n\nimport {createPackProgramInfoLoader} from './ops/pack';\nimport {createPackedReshape3DProgramInfoLoader, isReshapeCheap, processDims3D} from './ops/reshape-packed';\nimport {encodeAsUint8} from './ops/uint8-encode';\nimport {createUnpackProgramInfoLoader} from './ops/unpack';\nimport {WebGLSessionHandler} from './session-handler';\nimport {Encoder} from './texture-data-encoder';\nimport {calculateTextureWidthAndHeight, createTextureLayoutFromShape, createTextureLayoutFromTextureType} from './texture-layout';\nimport {Artifact, ProgramInfo, ProgramInfoLoader, TextureData, TextureLayout, TextureType} from './types';\n\nconst getProgramInfoUniqueKey =\n    (programInfo: ProgramInfo|ProgramInfoLoader, inputTextureDatas: TextureData[]): string => {\n      const inputs =\n          inputTextureDatas.map(texture => `${texture.unpackedShape.join(',')};${texture.width}x${texture.height}`)\n              .join('_');\n      let key = programInfo.name;\n      if (programInfo.cacheHint) {\n        key += '[' + programInfo.cacheHint + ']';\n      }\n      key += ':' + inputs;\n      return key;\n    };\n\nexport class WebGLInferenceHandler implements InferenceHandler {\n  private packedTextureDataCache: Map<Tensor.Id, TextureData>;\n  private unpackedTextureDataCache: Map<Tensor.Id, TextureData>;\n  constructor(public session: WebGLSessionHandler) {\n    this.packedTextureDataCache = new Map();\n    this.unpackedTextureDataCache = new Map();\n  }\n\n  /**\n   * @returns [width, height]\n   */\n  calculateTextureWidthAndHeight(shape: readonly number[], textureType: TextureType): [number, number] {\n    return calculateTextureWidthAndHeight(this.session.layoutStrategy, shape, textureType);\n  }\n\n  executeProgram(program: ProgramInfo|ProgramInfoLoader, inputs: readonly Tensor[]): TextureData {\n    if (inputs.length < program.inputNames.length) {\n      throw new Error(`Input size mustn't be less than ${program.inputNames.length}.`);\n    }\n    if (program.inputNames.length !== program.inputTypes.length) {\n      throw new Error('input names size does not match input types');\n    }\n\n    // create texture info for input\n    const inputTextureDatas: TextureData[] = [];\n    for (let i = 0; i < program.inputNames.length; ++i) {\n      inputTextureDatas[i] = this.getOrCreateTextureData(inputs[i], program.inputTypes[i]);\n    }\n\n    const key = getProgramInfoUniqueKey(program, inputTextureDatas);\n    let artifact = this.session.programManager.getArtifact(key);\n    const programInfo = artifact ?\n        artifact.programInfo :\n        (typeof (program as ProgramInfoLoader).get === 'function' ? (program as ProgramInfoLoader).get() :\n                                                                    (program as ProgramInfo));\n\n    // create texture info for output\n    const outputTextureLayout = createTextureLayoutFromTextureType(\n        this.session.layoutStrategy, programInfo.output.dims, programInfo.output.textureType);\n    const outputTextureData = this.createTextureData(outputTextureLayout, programInfo.output.type);\n\n    if (!artifact) {\n      artifact = this.session.programManager.build(programInfo, inputTextureDatas, outputTextureData);\n      this.session.programManager.setArtifact(key, artifact);\n    }\n\n    this.runProgram(artifact, inputTextureDatas, outputTextureData);\n    return outputTextureData;\n  }\n\n  run(program: ProgramInfoLoader, inputs: readonly Tensor[]): Tensor {\n    const outputTextureData = this.executeProgram(program, inputs);\n    return outputTextureData.tensor;\n  }\n\n  private runProgram(artifact: Artifact, inputs: TextureData[], output: TextureData): void {\n    // input should match\n    for (let i = 0; i < inputs.length; ++i) {\n      if (!!inputs[i].isPacked !== (artifact.programInfo.inputTypes[i] === TextureType.packed)) {\n        throw new Error(`input[${i}] property packed inconsistent`);\n      }\n    }\n\n    // output should match\n    if (!!output.isPacked !== (artifact.programInfo.output.textureType === TextureType.packed)) {\n      throw new Error('output property packed inconsistent');\n    }\n\n    this.session.programManager.run(artifact, inputs, output);\n  }\n\n  /**\n   * Create a TextureData object from a tensor.\n   * Usage = Encoder.Usage.UploadOnly.\n   * If a related texture data is found in cache, returns it;\n   * Otherwise:\n   *   Creates a new texture layout if not provided;\n   *   Creates WebGLTexture with the layout;\n   *   Upload tensor data to the texture;\n   *   Creates a texture data object associated with the given tensor.\n   * @param tensor the tensor with data to upload\n   */\n  private getOrCreateTextureData(tensor: Tensor, textureType: TextureType) {\n    let td = this.getTextureData(tensor.dataId, textureType === TextureType.packed);\n\n    if (!td) {\n      // check if we have texture data in different type\n      td = this.getTextureData(tensor.dataId, textureType !== TextureType.packed);\n      if (td) {\n        if (textureType === TextureType.packed) {\n          return this.pack(td);\n        } else {\n          return this.unpack(td);\n        }\n      }\n    }\n\n    if (!td) {\n      const layout = createTextureLayoutFromTextureType(this.session.layoutStrategy, tensor.dims, textureType);\n\n      if (textureType === TextureType.packedLastDimension) {\n        const group = 1;\n        const channels = 4;\n        const shape = tensor.dims;\n        if (shape.length === 4) {\n          // pre-processing for kernel data of Conv.\n          //\n          // TODO: currently this is a hacking to overwrite Conv's weight. The correct way to do this should be:\n          // 1. implement texture based const-folding\n          // 2. create a WebGL program \"preprocessConvWeight\" to do the same work as below\n          // 3. run the program before dotProduct.\n          //\n          const adjustedKernelShape = [shape[0], Math.ceil((shape[1] * shape[2] * shape[3]) / channels)];\n          const adjustedLayout =\n              createTextureLayoutFromTextureType(this.session.layoutStrategy, adjustedKernelShape, textureType);\n          let buffer = tensor.numberData;\n          if (shape[1] * shape[2] * shape[3] % channels !== 0) {\n            const numFeatureMaps = shape[0];\n            const oldRowSize = shape[1] * shape[2] * shape[3];\n            const newRowSize = Math.ceil(oldRowSize * group / channels) * channels;\n            const newSize = numFeatureMaps * newRowSize;\n            buffer = new Float32Array(newSize);\n            for (let f = 0; f < numFeatureMaps; ++f) {\n              const oldOffset = f * oldRowSize;\n              const newOffset = f * newRowSize + f % group * oldRowSize;\n              buffer.set(tensor.numberData.subarray(oldOffset, oldOffset + oldRowSize), newOffset);\n            }\n          }\n          return this.createTextureData(adjustedLayout, tensor.type, buffer, tensor, Encoder.Usage.UploadOnly);\n        }\n      }\n\n      if (textureType === TextureType.packed) {\n        const unpackedTextureLayout =\n            createTextureLayoutFromShape(this.session.layoutStrategy, tensor.dims, 1, [], {reverseWH: true});\n        const unpackedTextureData = this.createTextureData(\n            unpackedTextureLayout, tensor.type, tensor.numberData, tensor, Encoder.Usage.UploadOnly);\n        td = this.pack(unpackedTextureData);\n      } else {\n        td = this.createTextureData(layout, tensor.type, tensor.numberData, tensor, Encoder.Usage.UploadOnly);\n      }\n    }\n    return td;\n  }\n\n  /**\n   * Create a TextureData object using the given data and bind to the given tensor.\n   * Usage = Encoder.Usage.UploadOnly.\n   * NOTE: this function is a hack for Conv implementation. should remove this function, after rewriting Conv\n   * implementation by Graph.Transformer\n   * @param dataType the tensor data type\n   * @param data the actual data to upload\n   * @param tensor the tensor to bind. tensor's data is ignored.\n   */\n  createTextureDataFromLayoutBindTensor(\n      layout: TextureLayout, dataType: Tensor.DataType, data: Tensor.NumberType, tensor: Tensor): TextureData {\n    return this.createTextureData(layout, dataType, data, tensor, Encoder.Usage.UploadOnly);\n  }\n\n  private createTextureData(\n      layout: TextureLayout, dataType: Tensor.DataType, data?: Tensor.NumberType, tensor?: Tensor,\n      usage?: Encoder.Usage): TextureData {\n    Logger.verbose('InferenceHandler', `Creating TextureData: layout:[${JSON.stringify(layout)}]`);\n    const texture = this.session.textureManager.createTextureFromLayout(dataType, layout, data, usage);\n    return this.createTextureDataFromTexture(layout, dataType, texture, tensor);\n  }\n\n  reshapeUnpacked(input: Tensor, reshapedDims: readonly number[]): Tensor {\n    const inputTD = this.getOrCreateTextureData(input, TextureType.unpacked);\n    const newTextureLayout: TextureLayout = {\n      channels: inputTD.channels,\n      height: inputTD.height,\n      width: inputTD.width,\n      // handle reshaping into scalar Tensors\n      shape: reshapedDims.length !== 0 ? reshapedDims : [1],\n      strides: ShapeUtil.computeStrides(reshapedDims),\n      unpackedShape: reshapedDims,\n    };\n    const newTextureData = this.createTextureDataFromTexture(newTextureLayout, input.type, inputTD.texture);\n    return newTextureData.tensor;\n  }\n\n  reshapePacked(input: Tensor, reshapedDims: readonly number[]): Tensor {\n    const inputTD = this.getOrCreateTextureData(input, TextureType.packed);\n\n    // check if the reshape is 'cheap'\n    if (isReshapeCheap(input.dims, reshapedDims)) {\n      const newTextureLayout: TextureLayout = {\n        channels: inputTD.channels,\n        height: inputTD.height,\n        width: inputTD.width,\n        // handle reshaping into scalar Tensors\n        shape: reshapedDims.length !== 0 ? reshapedDims : [1],\n        strides: ShapeUtil.computeStrides(reshapedDims),\n        unpackedShape: reshapedDims,\n        isPacked: true\n      };\n      const newTextureData = this.createTextureDataFromTexture(newTextureLayout, input.type, inputTD.texture);\n      return newTextureData.tensor;\n    }\n\n    const squeezedInputShape = processDims3D(input.dims);\n    const squeezedOutputShape = processDims3D(reshapedDims);\n\n    const squeezedInputTensor = this.reshapePacked(input, squeezedInputShape);\n    const squeezedOutputTensor = this.run(\n        createPackedReshape3DProgramInfoLoader(this, squeezedInputTensor, squeezedOutputShape), [squeezedInputTensor]);\n    const outputTensor = this.reshapePacked(squeezedOutputTensor, reshapedDims);\n    return outputTensor;\n  }\n\n  cast(input: Tensor, type: Tensor.DataType): Tensor {\n    const inputTD = this.getOrCreateTextureData(input, TextureType.unpacked);\n    const newTextureData = this.createTextureDataFromTexture(inputTD as TextureLayout, type, inputTD.texture);\n    return newTextureData.tensor;\n  }\n\n  private createTextureDataFromTexture(\n      layout: TextureLayout, dataType: Tensor.DataType, texture: WebGLTexture, tensor?: Tensor, tensorId?: Tensor.Id) {\n    const textureData: TextureData = {\n      ...layout,\n      tensor: tensor ||\n          new Tensor(\n                  layout.unpackedShape, dataType, (_id: Tensor.Id) => this.readTexture(textureData),\n                  async (_id: Tensor.Id) => this.readTextureAsync(textureData), undefined, tensorId),\n      texture\n    };\n    this.setTextureData(textureData.tensor.dataId, textureData, layout.isPacked);\n    return textureData;\n  }\n\n  private getTextureData(tensorId: Tensor.Id, isPacked = false): TextureData|undefined {\n    return this.session.isInitializer(tensorId) ? this.session.getTextureData(tensorId, isPacked) :\n        isPacked                                ? this.packedTextureDataCache.get(tensorId) :\n                                                  this.unpackedTextureDataCache.get(tensorId);\n  }\n  setTextureData(tensorId: Tensor.Id, td: TextureData, isPacked = false): void {\n    if (this.session.isInitializer(tensorId)) {\n      this.session.setTextureData(tensorId, td, isPacked);\n    } else {\n      (isPacked ? this.packedTextureDataCache : this.unpackedTextureDataCache).set(tensorId, td);\n    }\n  }\n  isTextureLayoutCached(tensor: Tensor, isPacked = false): boolean {\n    return !!this.getTextureData(tensor.dataId, isPacked);\n  }\n\n  dispose(): void {\n    this.session.textureManager.clearActiveTextures();\n    this.packedTextureDataCache.forEach(td => this.session.textureManager.releaseTexture(td));\n    this.packedTextureDataCache = new Map();\n    this.unpackedTextureDataCache.forEach(td => this.session.textureManager.releaseTexture(td));\n    this.unpackedTextureDataCache = new Map();\n  }\n\n  readTexture(textureData: TextureData): Tensor.NumberType {\n    if (textureData.isPacked) {\n      return this.readTexture(this.unpack(textureData));\n    }\n    if (!this.session.backend.glContext.isFloat32DownloadSupported) {\n      return this.session.textureManager.readUint8TextureAsFloat(encodeAsUint8(this, textureData));\n    }\n    return this.session.textureManager.readTexture(textureData, textureData.tensor.type, textureData.channels);\n  }\n\n  async readTextureAsync(textureData: TextureData): Promise<Tensor.NumberType> {\n    if (textureData.isPacked) {\n      return this.readTextureAsync(this.unpack(textureData));\n    }\n    if (!this.session.backend.glContext.isFloat32DownloadSupported) {\n      return this.session.textureManager.readUint8TextureAsFloat(encodeAsUint8(this, textureData));\n    }\n    return this.session.textureManager.readTextureAsync(textureData, textureData.tensor.type, textureData.channels);\n  }\n\n  pack(input: TextureData): TextureData {\n    const outputTextureData = this.executeProgram(createPackProgramInfoLoader(this, input.tensor), [input.tensor]);\n    return outputTextureData;\n  }\n\n  unpack(input: TextureData): TextureData {\n    const outputTextureData = this.executeProgram(createUnpackProgramInfoLoader(this, input.tensor), [input.tensor]);\n    return outputTextureData;\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {OpSet} from '../../opset';\n\nimport {batchNormalization, parseBatchNormalizationAttributes} from './ops/batch-normalization';\nimport * as binaryOps from './ops/binary-op';\nimport {cast, parseCastAttributes} from './ops/cast';\nimport {concat, parseConcatAttributes} from './ops/concat';\nimport {conv, parseConvAttributes} from './ops/conv';\nimport {convTranspose, parseConvTransposeAttributes} from './ops/conv-transpose';\nimport {depthToSpace, parseDepthToSpaceAttributes} from './ops/depth-to-space';\nimport {flatten, parseFlattenAttributes} from './ops/flatten';\nimport {gather, parseGatherAttributes} from './ops/gather';\nimport {gemm, parseGemmAttributesV11, parseGemmAttributesV7} from './ops/gemm';\nimport {imageScaler, parseImageScalerAttributes} from './ops/image-scaler';\nimport {instanceNormalization, parseInstanceNormalizationAttributes} from './ops/instance-normalization';\nimport {lrn, parseLrnAttributes} from './ops/lrn';\nimport {matMul, parseMatMulAttributes} from './ops/matmul';\nimport {padV11, padV2, parsePadAttributesV11, parsePadAttributesV2} from './ops/pad';\nimport {averagePool, globalAveragePool, globalMaxPool, maxPool, parseAveragePoolAttributes, parseGlobalAveragePoolAttributes, parseMaxPoolAttributes} from './ops/pool';\nimport {parseReduceAttributes, reduceLogSum, reduceLogSumSquare, reduceMax, reduceMean, reduceMin, reduceProd, reduceSum} from './ops/reduce';\nimport {reshape} from './ops/reshape';\nimport {parseResizeAttributesV10, parseResizeAttributesV11, resize} from './ops/resize-packed';\nimport {shape} from './ops/shape';\nimport {parseSliceAttributes, slice, sliceV10} from './ops/slice';\nimport {parseSoftmaxAttributes, parseSoftmaxAttributesV13, softmax, softmaxV13} from './ops/softmax';\nimport {parseSplitAttributes, split} from './ops/split';\nimport {parseSqueezeAttributes, squeeze, squeezeV13} from './ops/squeeze';\nimport {sum} from './ops/sum';\nimport {tile} from './ops/tile';\nimport {parseTransposeAttributes, transpose} from './ops/transpose';\nimport * as unaryOps from './ops/unary-op';\nimport {parseUnsqueezeAttributes, unsqueeze, unsqueezeV13} from './ops/unsqueeze';\nimport {parseUpsampleAttributesV7, parseUpsampleAttributesV9, upsample} from './ops/upsample';\n\nexport const WEBGL_OP_RESOLVE_RULES: readonly OpSet.ResolveRule[] = [\n  ['Abs', '', '6+', unaryOps.abs],\n  ['Acos', '', '7+', unaryOps.acos],\n  ['Add', '', '7+', binaryOps.add],\n  ['And', '', '7+', binaryOps.and],\n  ['Asin', '', '7+', unaryOps.asin],\n  ['Atan', '', '7+', unaryOps.atan],\n  // TODO: support new attributes for AveragePool-10\n  ['AveragePool', '', '7+', averagePool, parseAveragePoolAttributes],\n  ['BatchNormalization', '', '7+', batchNormalization, parseBatchNormalizationAttributes],\n  ['Cast', '', '6+', cast, parseCastAttributes],\n  ['Ceil', '', '6+', unaryOps.ceil],\n  ['Clip', '', '6-10', unaryOps.clip, unaryOps.parseClipAttributes],\n  ['Clip', '', '11+', unaryOps.clipV11],\n  ['Concat', '', '4+', concat, parseConcatAttributes],\n  ['Conv', '', '1+', conv, parseConvAttributes],\n  ['ConvTranspose', '', '1+', convTranspose, parseConvTransposeAttributes],\n  ['Cos', '', '7+', unaryOps.cos],\n  ['Div', '', '7+', binaryOps.div],\n  ['Dropout', '', '7+', unaryOps.identity],\n  ['DepthToSpace', '', '1+', depthToSpace, parseDepthToSpaceAttributes],\n  ['Equal', '', '7+', binaryOps.equal],\n  ['Elu', '', '6+', unaryOps.elu, unaryOps.parseEluAttributes],\n  ['Exp', '', '6+', unaryOps.exp],\n  ['Flatten', '', '1+', flatten, parseFlattenAttributes],\n  ['Floor', '', '6+', unaryOps.floor],\n  ['FusedConv', 'com.microsoft', '1+', conv, parseConvAttributes],\n  ['Gather', '', '1+', gather, parseGatherAttributes],\n  ['Gemm', '', '7-10', gemm, parseGemmAttributesV7],\n  ['Gemm', '', '11+', gemm, parseGemmAttributesV11],\n  ['GlobalAveragePool', '', '1+', globalAveragePool, parseGlobalAveragePoolAttributes],\n  ['GlobalMaxPool', '', '1+', globalMaxPool],\n  ['Greater', '', '7+', binaryOps.greater],\n  ['Identity', '', '1+', unaryOps.identity],\n  ['ImageScaler', '', '1+', imageScaler, parseImageScalerAttributes],\n  ['InstanceNormalization', '', '6+', instanceNormalization, parseInstanceNormalizationAttributes],\n  ['LeakyRelu', '', '6+', unaryOps.leakyRelu, unaryOps.parseLeakyReluAttributes],\n  ['Less', '', '7+', binaryOps.less],\n  ['LRN', '', '1+', lrn, parseLrnAttributes],\n  ['Log', '', '6+', unaryOps.log],\n  ['MatMul', '', '1+', matMul, parseMatMulAttributes],\n  // TODO: support new attributes for MaxPool-8 and MaxPool-10\n  ['MaxPool', '', '1+', maxPool, parseMaxPoolAttributes],\n  ['Mul', '', '7+', binaryOps.mul],\n  ['Neg', '', '6+', unaryOps.neg],\n  ['Not', '', '1+', unaryOps.not],\n  ['Or', '', '7+', binaryOps.or],\n  ['Pad', '', '2-10', padV2, parsePadAttributesV2],\n  ['Pad', '', '11+', padV11, parsePadAttributesV11],\n  ['Pow', '', '7+', binaryOps.pow],\n  ['PRelu', '', '7+', binaryOps.pRelu],\n  ['ReduceLogSum', '', '1+', reduceLogSum, parseReduceAttributes],\n  ['ReduceMax', '', '1+', reduceMax, parseReduceAttributes],\n  ['ReduceMean', '', '1+', reduceMean, parseReduceAttributes],\n  ['ReduceMin', '', '1+', reduceMin, parseReduceAttributes],\n  ['ReduceProd', '', '1+', reduceProd, parseReduceAttributes],\n  ['ReduceSum', '', '1-12', reduceSum, parseReduceAttributes],\n  ['ReduceSumSquare', '', '1+', reduceLogSumSquare, parseReduceAttributes],\n  ['Relu', '', '6+', unaryOps.relu],\n  ['Reshape', '', '5+', reshape],\n  ['Resize', '', '10', resize, parseResizeAttributesV10],\n  ['Resize', '', '11+', resize, parseResizeAttributesV11],\n  ['Shape', '', '1+', shape],\n  ['Sigmoid', '', '6+', unaryOps.sigmoid],\n  ['Sin', '', '7+', unaryOps.sin],\n  ['Slice', '', '10+', sliceV10],  // TODO: support 'steps' for Slice-10\n  ['Slice', '', '1-9', slice, parseSliceAttributes],\n  // The \"semantic\" meaning of axis has changed in opset-13.\n  ['Softmax', '', '1-12', softmax, parseSoftmaxAttributes],\n  ['Softmax', '', '13+', softmaxV13, parseSoftmaxAttributesV13],\n  // 'Split' operator has an optional attribute 'split'\n  // this attribute determines how the specified axis of input data is split.\n  // When the attribute is missing, we need the count of number of outputs\n  // so that we can determine the 'split' attribute from the runtime input to the Operator\n  ['Split', '', '2-12', split, parseSplitAttributes],\n  ['Sqrt', '', '6+', unaryOps.sqrt],\n  ['Squeeze', '', '1-12', squeeze, parseSqueezeAttributes],\n  ['Squeeze', '', '13+', squeezeV13],\n  ['Sub', '', '7+', binaryOps.sub],\n  ['Sum', '', '6+', sum],\n  ['Tan', '', '7+', unaryOps.tan],\n  ['Tanh', '', '6+', unaryOps.tanh],\n  ['Tile', '', '6+', tile],\n  ['Transpose', '', '1+', transpose, parseTransposeAttributes],\n  ['Upsample', '', '7-8', upsample, parseUpsampleAttributesV7],\n  ['Upsample', '', '9', upsample, parseUpsampleAttributesV9],\n  ['Unsqueeze', '', '1-12', unsqueeze, parseUnsqueezeAttributes],\n  ['Unsqueeze', '', '13+', unsqueezeV13],\n  ['Xor', '', '7+', binaryOps.xor],\n];\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {AttributeWithCacheKey, createAttributeWithCacheKey} from '../../../attribute-with-cache-key';\nimport {Graph} from '../../../graph';\nimport {OperatorImplementation, OperatorInitialization} from '../../../operators';\nimport {Tensor} from '../../../tensor';\nimport {getGlsl} from '../glsl-source';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, TextureType} from '../types';\n\nexport interface BatchNormalizationAttributes extends AttributeWithCacheKey {\n  epsilon: number;\n  momentum: number;\n  spatial: number;\n}\n\nconst batchNormalizationProgramMetadata = {\n  name: 'BatchNormalization',\n  inputNames: ['A', 'Scale', 'B', 'Mean', 'Variance'],\n  inputTypes:\n      [TextureType.unpacked, TextureType.unpacked, TextureType.unpacked, TextureType.unpacked, TextureType.unpacked]\n};\n\nexport const batchNormalization: OperatorImplementation<BatchNormalizationAttributes> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: BatchNormalizationAttributes): Tensor[] => {\n      validateInputs(inputs);\n      const output = inferenceHandler.run(\n          {\n            ...batchNormalizationProgramMetadata,\n            cacheHint: attributes.cacheKey,\n            get: () => createBatchNormalizationProgramInfo(inferenceHandler, inputs, attributes)\n          },\n          inputs);\n      return [output];\n    };\n\nexport const parseBatchNormalizationAttributes: OperatorInitialization<BatchNormalizationAttributes> =\n    (node: Graph.Node): BatchNormalizationAttributes => {\n      const epsilon = node.attributes.getFloat('epsilon', 1e-5);\n      const momentum = node.attributes.getFloat('momentum', 0.9);\n      const spatial = node.attributes.getInt('spatial', 1);\n      return createAttributeWithCacheKey({epsilon, momentum, spatial});\n    };\n\nconst createBatchNormalizationProgramInfo =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: BatchNormalizationAttributes):\n        ProgramInfo => {\n          const glsl = getGlsl(inferenceHandler.session.backend.glContext.version);\n          const rank = inputs[0].dims.length;\n          const [scaleWidth, scaleHeight] =\n              inferenceHandler.calculateTextureWidthAndHeight(inputs[1].dims, TextureType.unpacked);\n          const shaderSource = `\n  float process(int[${rank}] indices) {\n    vec2 position = offsetToCoords(indices[1], ${scaleWidth}, ${scaleHeight});\n    float scale = getColorAsFloat(${glsl.texture2D}(Scale, position));\n    float mean = getColorAsFloat(${glsl.texture2D}(Mean, position));\n    float variance = getColorAsFloat(${glsl.texture2D}(Variance, position));\n    float b = getColorAsFloat(${glsl.texture2D}(B, position));\n\n    return scale * ( (_A(indices) - mean) / sqrt(variance + float(${attributes.epsilon})) ) + b;\n  }`;\n          return {\n            ...batchNormalizationProgramMetadata,\n            output: {dims: inputs[0].dims, type: inputs[0].type, textureType: TextureType.unpacked},\n            shaderSource\n          };\n        };\n\nconst validateInputs = (inputs: Tensor[]): void => {\n  if (!inputs || inputs.length !== 5) {\n    throw new Error('BatchNormalization requires 5 inputs.');\n  }\n\n  const X = inputs[0];\n  const scale = inputs[1];\n  const B = inputs[2];\n  const mean = inputs[3];\n  const var_ = inputs[4];\n\n  // input should atleast have three dimensions - N,C,dim1,...,dimn\n  // other inputs can have only one dimensions\n  if (X.dims.length < 3 || scale.dims.length !== 1 || B.dims.length !== 1 || mean.dims.length !== 1 ||\n      var_.dims.length !== 1) {\n    throw new Error('invalid input shape.');\n  }\n  if (scale.dims[0] !== X.dims[1] || B.dims[0] !== X.dims[1] || mean.dims[0] !== X.dims[1] ||\n      var_.dims[0] !== X.dims[1]) {\n    throw new Error('invalid input shape.');\n  }\n  if ((X.type !== 'float32' && X.type !== 'float64') || (scale.type !== 'float32' && scale.type !== 'float64') ||\n      (B.type !== 'float32' && B.type !== 'float64') || (mean.type !== 'float32' && mean.type !== 'float64') ||\n      (var_.type !== 'float32' && var_.type !== 'float64')) {\n    throw new Error('invalid input tensor types.');\n  }\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Tensor} from '../../../tensor';\nimport {BroadcastUtil, ShapeUtil} from '../../../util';\nimport {FunctionType, GlslValueFunction} from '../glsl-definitions';\nimport {getGlsl} from '../glsl-source';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, ProgramInfoLoader, TextureType} from '../types';\n\nexport function glslAdd(): GlslValueFunction {\n  const name = 'add_';\n  const body = `\n  float ${name}(float a, float b) {\n    return a + b;\n  }\n  vec4 ${name}(vec4 v1, vec4 v2) {\n    return v1 + v2;\n  }\n  `;\n  return {body, name, type: FunctionType.ValueBased};\n}\nexport function glslDiv(): GlslValueFunction {\n  const name = 'div_';\n  const body = `\n  float ${name}(float a, float b) {\n    return a / b;\n  }\n  vec4 ${name}(vec4 v1, vec4 v2) {\n    return v1 / v2;\n  }\n  `;\n  return {body, name, type: FunctionType.ValueBased};\n}\nexport function glslMul(): GlslValueFunction {\n  const name = 'mul_';\n  const body = `\n  float ${name}(float a, float b) {\n    return a * b;\n  }\n  vec4 ${name}(vec4 v1, vec4 v2) {\n    return v1 * v2;\n  }\n  `;\n  return {body, name, type: FunctionType.ValueBased};\n}\nexport function glslSub(): GlslValueFunction {\n  const name = 'sub_';\n  const body = `\n  float ${name}(float a, float b) {\n    return a - b;\n  }\n  vec4 ${name}(vec4 v1, vec4 v2) {\n    return v1 - v2;\n  }\n  `;\n  return {body, name, type: FunctionType.ValueBased};\n}\nexport function glslEqual(): GlslValueFunction {\n  const name = 'equal_';\n  const body = `\n  float ${name}(float a, float b) {\n    return float(a == b);\n  }\n  vec4 ${name}(vec4 v1, vec4 v2) {\n    return vec4(equal(v1, v2));\n  }\n  `;\n  return {body, name, type: FunctionType.ValueBased};\n}\nexport function glslGreater(): GlslValueFunction {\n  const name = 'greater_';\n  const body = `\n  float ${name}(float a, float b) {\n    return float(a > b);\n  }\n  vec4 ${name}(vec4 v1, vec4 v2) {\n    return vec4( v1.r > v2.r ,\n      v1.g > v2.g,\n      v1.b > v2.b,\n      v1.a > v2.a );\n  }\n  `;\n  return {body, name, type: FunctionType.ValueBased};\n}\nexport function glslLess(): GlslValueFunction {\n  const name = 'less_';\n  const body = `\n  float ${name}(float a, float b) {\n    return float(a < b);\n  }\n  vec4 ${name}(vec4 v1, vec4 v2) {\n    return vec4( v1.r < v2.r ,\n                v1.g < v2.g,\n                v1.b < v2.b,\n                v1.a < v2.a );\n  }\n  `;\n  return {body, name, type: FunctionType.ValueBased};\n}\nexport function glslAnd(): GlslValueFunction {\n  const name = 'and_';\n  const body = `\n  float ${name}(float a, float b) {\n    return float( bool(a) && bool(b) );\n  }\n  vec4 ${name}(vec4 v1, vec4 v2) {\n    bvec4 b1 = bvec4(v1);\n    bvec4 b2 = bvec4(v2);\n    return vec4( b1.r && b2.r ,\n                b1.g && b2.g,\n                b1.b && b2.b,\n                b1.a && b2.a );\n  }\n  `;\n  return {body, name, type: FunctionType.ValueBased};\n}\nexport function glslOr(): GlslValueFunction {\n  const name = 'or_';\n  const body = `\n  float ${name}(float a, float b) {\n    return float( bool(a) || bool(b) );\n  }\n  vec4 ${name}(vec4 v1, vec4 v2) {\n    bvec4 b1 = bvec4(v1);\n    bvec4 b2 = bvec4(v2);\n    return vec4( b1.r || b2.r ,\n                b1.g || b2.g,\n                b1.b || b2.b,\n                b1.a || b2.a );\n  }\n  `;\n  return {body, name, type: FunctionType.ValueBased};\n}\nexport function glslXor(): GlslValueFunction {\n  const name = 'xor_';\n  const body = `\n  float ${name}(float a, float b) {\n    return float( bool(a) ^^ bool(b) );\n  }\n  vec4 ${name}(vec4 v1, vec4 v2) {\n    bvec4 b1 = bvec4(v1);\n    bvec4 b2 = bvec4(v2);\n    return vec4( b1.r ^^ b2.r ,\n                b1.g ^^ b2.g,\n                b1.b ^^ b2.b,\n                b1.a ^^ b2.a );\n  }\n  `;\n  return {body, name, type: FunctionType.ValueBased};\n}\nexport function glslPow(): GlslValueFunction {\n  return glslBuiltinBinary('pow');\n}\nexport function glslPRelu(): GlslValueFunction {\n  const name = 'prelu_';\n  const body = `\n  float ${name}(float a, float b) {\n    return a < 0.0 ? a * b: a;\n  }\n  vec4 ${name}(vec4 v1, vec4 v2) {\n    return vec4(\n      v1.r < 0.0 ? v1.r * v2.r: v1.r,\n      v1.g < 0.0 ? v1.g * v2.g: v1.g,\n      v1.b < 0.0 ? v1.b * v2.b: v1.b,\n      v1.a < 0.0 ? v1.a * v2.a: v1.a\n      );\n  }\n  `;\n  return {body, name, type: FunctionType.ValueBased};\n}\n\nfunction glslBuiltinBinary(fname: string): GlslValueFunction {\n  const name = `${fname}_`;\n  const body = `\n  float ${name}(float a, float b) {\n    return ${fname}(a, b);\n  }\n  vec4 ${name}(vec4 v1, vec4 v2) {\n    return ${fname}(v1, v2);\n  }\n  `;\n  return {body, name, type: FunctionType.ValueBased};\n}\n\nconst createBinaryProgramInfoLoader =\n    (handler: WebGLInferenceHandler, inputs: Tensor[], glslFunc: GlslValueFunction,\n     outputTensorType: Tensor.DataType = inputs[0].type, cacheKey?: string): ProgramInfoLoader => {\n      const textureType = handler.session.pack ? TextureType.packed : TextureType.unpacked;\n      return {\n        name: glslFunc.name,\n        inputNames: ['A', 'B'],\n        inputTypes: [textureType, textureType],\n        cacheHint: cacheKey,\n        get: () => createBinaryProgramInfo(handler, inputs, glslFunc, outputTensorType)\n      };\n    };\n\nconst createBinaryProgramInfo =\n    (handler: WebGLInferenceHandler, inputs: Tensor[], glslFunc: GlslValueFunction,\n     outputTensorType: Tensor.DataType = inputs[0].type): ProgramInfo => {\n      const textureType = handler.session.pack ? TextureType.packed : TextureType.unpacked;\n      const isBroadcast = !ShapeUtil.areEqual(inputs[0].dims, inputs[1].dims);\n      let outputShape = inputs[0].dims;\n\n      const usePackedTexture = handler.session.pack;\n\n      if (isBroadcast) {\n        const calculatedShape = BroadcastUtil.calcShape(inputs[0].dims, inputs[1].dims, false);\n        if (!calculatedShape) {\n          throw new Error('Can\\'t perform binary op on the given tensors');\n        }\n        outputShape = calculatedShape;\n        const outputRank = outputShape.length;\n        const aRank = inputs[0].dims.length !== 0 ? inputs[0].dims.length : 1;\n        const bRank = inputs[1].dims.length !== 0 ? inputs[1].dims.length : 1;\n        const aBcast = inputs[0].dims.length !== 0 ? 'bcastIndices_A(indices, aindices);' : 'aindices[0] = 0;';\n        const bBcast = inputs[1].dims.length !== 0 ? 'bcastIndices_B(indices, bindices);' : 'bindices[0] = 0;';\n\n        const glsl = getGlsl(handler.session.backend.glContext.version);\n        const shaderSource = usePackedTexture ? `\n      ${glslFunc.body}\n      void main() {\n        vec4 a = getAAtOutCoords();\n        vec4 b = getBAtOutCoords();\n        vec4 result = ${glslFunc.name}(a, b);\n        ${glsl.output} = result;\n      }` :\n                                                `\n      ${glslFunc.body}\n      float process(int indices[${outputRank}]) {\n        int aindices[${aRank}];\n        int bindices[${bRank}];\n        ${aBcast}\n        ${bBcast}\n        return ${glslFunc.name}(_A(aindices), _B(bindices));\n      }`;\n\n        return {\n          name: glslFunc.name,\n          inputNames: ['A', 'B'],\n          inputTypes: [textureType, textureType],\n          output: {dims: outputShape, type: outputTensorType, textureType},\n          shaderSource,\n          hasMain: usePackedTexture\n        };\n      }\n      const glsl = getGlsl(handler.session.backend.glContext.version);\n      const shaderSource = `\n    ${glslFunc.body}\n    void main() {\n      vec4 v1 = ${glsl.texture2D}(A, TexCoords);\n      vec4 v2 = ${glsl.texture2D}(B, TexCoords);\n      vec4 result = ${glslFunc.name}(v1, v2);\n      ${glsl.output} = result;\n    }\n    `;\n\n      return {\n        name: glslFunc.name,\n        inputNames: ['A', 'B'],\n        inputTypes: [textureType, textureType],\n        output: {dims: inputs[0].dims, type: outputTensorType, textureType},\n        shaderSource,\n        hasMain: true\n      };\n    };\n\nexport const add = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createBinaryProgramInfoLoader(handler, inputs, glslAdd()), inputs)];\n\nexport const and = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createBinaryProgramInfoLoader(handler, inputs, glslAnd(), 'bool'), inputs)];\n\nexport const div = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createBinaryProgramInfoLoader(handler, inputs, glslDiv()), inputs)];\n\nexport const equal = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createBinaryProgramInfoLoader(handler, inputs, glslEqual(), 'bool'), inputs)];\n\nexport const greater = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createBinaryProgramInfoLoader(handler, inputs, glslGreater(), 'bool'), inputs)];\n\nexport const less = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createBinaryProgramInfoLoader(handler, inputs, glslLess(), 'bool'), inputs)];\n\nexport const mul = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createBinaryProgramInfoLoader(handler, inputs, glslMul()), inputs)];\n\nexport const or = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createBinaryProgramInfoLoader(handler, inputs, glslOr(), 'bool'), inputs)];\n\nexport const pow = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createBinaryProgramInfoLoader(handler, inputs, glslPow()), inputs)];\n\nexport const pRelu = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createBinaryProgramInfoLoader(handler, inputs, glslPRelu()), inputs)];\n\nexport const sub = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createBinaryProgramInfoLoader(handler, inputs, glslSub()), inputs)];\n\nexport const xor = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createBinaryProgramInfoLoader(handler, inputs, glslXor(), 'bool'), inputs)];\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Graph} from '../../../graph';\nimport {OperatorImplementation, OperatorInitialization} from '../../../operators';\nimport {Tensor} from '../../../tensor';\nimport {ProtoUtil} from '../../../util';\nimport {WebGLInferenceHandler} from '../inference-handler';\n\nexport const cast: OperatorImplementation<Tensor.DataType> =\n    (handler: WebGLInferenceHandler, inputs: Tensor[], to: Tensor.DataType): Tensor[] => {\n      validateInputs(inputs);\n      return [handler.cast(inputs[0], to)];\n    };\n\nexport const parseCastAttributes: OperatorInitialization<Tensor.DataType> = (node: Graph.Node): Tensor.DataType =>\n    ProtoUtil.tensorDataTypeFromProto(node.attributes.getInt('to'));\n\nconst validateInputs = (inputs: Tensor[]): void => {\n  if (!inputs || inputs.length !== 1) {\n    throw new Error('Cast requires 1 input.');\n  }\n\n  if (inputs[0].type === 'string') {\n    throw new Error('Invalid input type.');\n  }\n};","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Tensor} from '../../../tensor';\nimport {getGlsl} from '../glsl-source';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, ProgramInfoLoader, ProgramMetadata, TextureType} from '../types';\nimport {getCoordsDataType, getGlChannels} from '../utils';\n\nimport {ConcatAttributes} from './concat';\nimport {getChannels, unpackFromChannel} from './packing-utils';\n\nconst createPackedConcatProgramMetadata = (inputCount: number, cacheHint: string) => ({\n  name: 'Concat (packed)',\n  inputNames: Array.from({length: inputCount}, (v, i) => `X${i}`),\n  inputTypes: Array(inputCount).fill(TextureType.packed),\n  cacheHint\n});\n\nconst createPackedConcatProgramInfo =\n    (handler: WebGLInferenceHandler, metadata: ProgramMetadata, inputs: Tensor[], axis: number): ProgramInfo => {\n      const inputShape = inputs[0].dims.slice();\n      if (axis >= inputShape.length || axis < (-1 * inputShape.length)) {\n        throw new Error('axis specified for concat doesn\\'t match input dimensionality');\n      }\n      if (axis < 0) {\n        axis = inputShape.length + axis;\n      }\n      // ensure all of the non-concatenated axes match each other\n      // calculate the shape of the output tensor while we do that\n      const outputShape = inputShape.slice(0);\n      for (let i = 1; i < inputs.length; i++) {\n        const dataNShape = inputs[i].dims.slice();\n        for (let axisIndex = 0; axisIndex < inputShape.length; axisIndex++) {\n          // add to the placeholder for computing output shape\n          if (axisIndex === axis) {\n            outputShape[axis] += dataNShape[axisIndex];\n          }\n          // ensure all non-cancatenated axes match each other\n          else if (inputShape[axisIndex] !== dataNShape[axisIndex]) {\n            throw new Error('non concat dimensions must match');\n          }\n        }\n      }\n\n      const rank = outputShape.length;\n      const coords = getChannels('coords', rank);\n      const dtype = getCoordsDataType(rank);\n      const unpackChannel = unpackFromChannel();\n\n      const shapes = inputs.map(i => i.dims);\n      const channels = getGlChannels(rank);\n      const offsets: number[] = new Array(shapes.length - 1);\n\n      offsets[0] = shapes[0][axis];\n      for (let i = 1; i < offsets.length; i++) {\n        offsets[i] = offsets[i - 1] + shapes[i][axis];\n      }\n\n      const channel = channels[axis];\n      const lastChannels = channels.slice(-2);\n      const allChannels = channels.join();\n\n      let getValueSnippet = `if (${channel} < ${offsets[0]}) {\n        return getChannel(\n            getX0(${allChannels}), vec2(${lastChannels.join()}));\n        }`;\n      for (let i = 1; i < offsets.length; i++) {\n        const shift = offsets[i - 1];\n        getValueSnippet += `\n            if (${channel} < ${offsets[i]}  && ${channel} >= ${offsets[i - 1]}) {\n              return getChannel(\n                getX${i}(${getShiftedChannelsSnippet(channels, channel, shift)}),\n                vec2(${getShiftedChannelsSnippet(lastChannels, channel, shift)}));\n            }`;\n      }\n      const lastIndex = offsets.length;\n      const shift = offsets[offsets.length - 1];\n      getValueSnippet += `\n            return getChannel(\n              getX${lastIndex}(${getShiftedChannelsSnippet(channels, channel, shift)}),\n              vec2(${getShiftedChannelsSnippet(lastChannels, channel, shift)}));`;\n\n      const glsl = getGlsl(handler.session.backend.glContext.version);\n\n      const shaderSource = `\n          ${unpackChannel}\n          float getValue(${channels.map(x => 'int ' + x)}) {\n            ${getValueSnippet}\n          }\n\n          void main() {\n            ${dtype} coords = getOutputCoords();\n            int lastDim = coords.${channels[rank - 1]};\n            coords.${channels[rank - 1]} = coords.${channels[rank - 2]};\n            coords.${channels[rank - 2]} = lastDim;\n\n            vec4 result = vec4(getValue(${coords}), 0., 0., 0.);\n\n            ${coords[rank - 1]} = ${coords[rank - 1]} + 1;\n            if (${coords[rank - 1]} < ${outputShape[rank - 1]}) {\n              result.g = getValue(${coords});\n            }\n\n            ${coords[rank - 2]} = ${coords[rank - 2]} + 1;\n            if (${coords[rank - 2]} < ${outputShape[rank - 2]}) {\n              result.a = getValue(${coords});\n            }\n\n            ${coords[rank - 1]} = ${coords[rank - 1]} - 1;\n            if (${coords[rank - 2]} < ${outputShape[rank - 2]} &&\n                ${coords[rank - 1]} < ${outputShape[rank - 1]}) {\n              result.b = getValue(${coords});\n            }\n            ${glsl.output} = result;\n          }\n        `;\n\n      return {\n        ...metadata,\n        output: {dims: outputShape, type: inputs[0].type, textureType: TextureType.packed},\n        shaderSource,\n        hasMain: true,\n      };\n    };\n\nexport const createPackedConcatProgramInfoLoader =\n    (handler: WebGLInferenceHandler, inputs: Tensor[], attributes: ConcatAttributes): ProgramInfoLoader => {\n      const metadata = createPackedConcatProgramMetadata(inputs.length, attributes.cacheKey);\n      return {...metadata, get: () => createPackedConcatProgramInfo(handler, metadata, inputs, attributes.axis)};\n    };\n\nconst getShiftedChannelsSnippet = (channels: string[], channel: string, shift: number): string => {\n  const channelIdx = channels.indexOf(channel);\n  const res = channels.map((c, idx) => {\n    if (idx === channelIdx) {\n      return `${c} - ${shift}`;\n    } else {\n      return c;\n    }\n  });\n  return res.join();\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {AttributeWithCacheKey, createAttributeWithCacheKey} from '../../../attribute-with-cache-key';\nimport {Graph} from '../../../graph';\nimport {OperatorImplementation, OperatorInitialization} from '../../../operators';\nimport {Tensor} from '../../../tensor';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, ProgramInfoLoader, ProgramMetadata, TextureType} from '../types';\n\nimport {createPackedConcatProgramInfoLoader} from './concat-packed';\n\nexport interface ConcatAttributes extends AttributeWithCacheKey {\n  readonly axis: number;\n}\n\nexport const concat: OperatorImplementation<ConcatAttributes> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: ConcatAttributes): Tensor[] => {\n      validateInputs(inputs);\n      if (inferenceHandler.session.pack && inputs[0].dims.length > 1) {\n        const output =\n            inferenceHandler.run(createPackedConcatProgramInfoLoader(inferenceHandler, inputs, attributes), inputs);\n        return [output];\n      } else {\n        const output =\n            inferenceHandler.run(createUnpackedConcatProgramInfoLoader(inferenceHandler, inputs, attributes), inputs);\n        return [output];\n      }\n    };\n\nconst createUnpackedConcatProgramMetadata = (inputCount: number, cacheHint: string) => ({\n  name: 'Concat',\n  inputNames: Array.from({length: inputCount}, (v, i) => `X${i}`),\n  inputTypes: Array(inputCount).fill(TextureType.unpacked),\n  cacheHint\n});\n\nconst createUnpackedConcatProgramInfo =\n    (handler: WebGLInferenceHandler, metadata: ProgramMetadata, inputs: Tensor[], axis: number): ProgramInfo => {\n      const inputShape = inputs[0].dims.slice();\n      if (axis >= inputShape.length || axis < (-1 * inputShape.length)) {\n        throw new Error('axis specified for concat doesn\\'t match input dimensionality');\n      }\n      if (axis < 0) {\n        axis = inputShape.length + axis;\n      }\n      // ensure all of the non-concatenated axes match each other\n      // calculate the shape of the output tensor while we do that\n      const outputShape = inputShape.slice(0);\n      for (let i = 1; i < inputs.length; i++) {\n        const dataNShape = inputs[i].dims.slice();\n        for (let axisIndex = 0; axisIndex < inputShape.length; axisIndex++) {\n          // add to the placeholder for computing output shape\n          if (axisIndex === axis) {\n            outputShape[axis] += dataNShape[axisIndex];\n          }\n          // ensure all non-cancatenated axes match each other\n          else if (inputShape[axisIndex] !== dataNShape[axisIndex]) {\n            throw new Error('non concat dimensions must match');\n          }\n        }\n      }\n\n      const rank = outputShape.length;\n\n      const sizeInConcatAxis = new Array<number>(inputs.length);\n      let previousSum = 0;\n      for (let i = 0; i < sizeInConcatAxis.length; ++i) {\n        previousSum += inputs[i].dims[axis];\n        sizeInConcatAxis[i] = previousSum;\n      }\n\n      let getTextureIndexWhereDataResidesMethod = '';\n      // in most cases linear search is sufficient, as in most scenarios, only 2 tensors are concatenated\n      if (inputs.length < 5) {\n        getTextureIndexWhereDataResidesMethod = getTextureIndexWhereDataResidesLinearSearch(sizeInConcatAxis);\n      } else {\n        getTextureIndexWhereDataResidesMethod = getTextureIndexWhereDataResidesBinarySearch(sizeInConcatAxis);\n      }\n\n      const fetchDataFromCorrectTextureMethod = getFetchDataFromCorrectTextureMethod(inputs.length, rank);\n      const getSizeInConcatAxisValueFromIndexMethod = getGetSizeInConcatAxisValueFromIndexMethod(sizeInConcatAxis);\n      const shaderSource = `\n        ${fetchDataFromCorrectTextureMethod}\n        ${getSizeInConcatAxisValueFromIndexMethod}\n        ${getTextureIndexWhereDataResidesMethod}\n        float process(int indices[${rank}]) {\n          int textureIndex = getTextureWhereDataResides (indices[${axis}]);\n\n          if(textureIndex != 0) {\n            indices[${axis}] = indices[${axis}] - int(getSizeInConcatAxisValueFromIndex(textureIndex-int(1)));\n          }\n\n          return fetchDataFromCorrectTexture(textureIndex, indices);\n        }`;\n      return {\n        ...metadata,\n        output: {dims: outputShape, type: inputs[0].type, textureType: TextureType.unpacked},\n        shaderSource,\n      };\n    };\n\nconst createUnpackedConcatProgramInfoLoader =\n    (handler: WebGLInferenceHandler, inputs: Tensor[], attributes: ConcatAttributes): ProgramInfoLoader => {\n      const metadata = createUnpackedConcatProgramMetadata(inputs.length, attributes.cacheKey);\n      return {...metadata, get: () => createUnpackedConcatProgramInfo(handler, metadata, inputs, attributes.axis)};\n    };\n\nconst getTextureIndexWhereDataResidesLinearSearch = (sizeInConcatAxis: number[]): string => {\n  const searchAxis = sizeInConcatAxis.map((size, i) => `if(index<${size}) {return ${i};}\n`);\n  return `int getTextureWhereDataResides(int index) {\n      ${searchAxis.join('')}\n    }`;\n};\n\n// TODO: Implement BinarySearch in GLSL\nconst getTextureIndexWhereDataResidesBinarySearch = (sizeInConcatAxis: number[]): string =>\n    getTextureIndexWhereDataResidesLinearSearch(sizeInConcatAxis);\n\nconst getFetchDataFromCorrectTextureMethod = (numberOfTensors: number, tensorRank: number) => {\n  const codeLines: string[] = [`float fetchDataFromCorrectTexture(int textureIndex, int indices[${tensorRank}]) {`];\n  for (let i = 0; i < numberOfTensors; ++i) {\n    if (i === 0) {\n      codeLines.push(\n          '\\t' +\n          `if (textureIndex == ${i}) { return _X${i}(indices); }`);\n    } else if (i === numberOfTensors - 1) {\n      codeLines.push(\n          '\\t' +\n          `else { return _X${i}(indices); }`);\n    } else {\n      codeLines.push(\n          '\\t' +\n          `else if (textureIndex == ${i}) { return _X${i}(indices); }`);\n    }\n  }\n  codeLines.push(\n      '\\t' +\n      '}');\n  return codeLines.join('\\n');\n};\n\nconst getGetSizeInConcatAxisValueFromIndexMethod = (sizeInConcatAxis: number[]): string => {\n  const codeLines: string[] = ['int getSizeInConcatAxisValueFromIndex(int index) {'];\n  for (let i = 0; i < sizeInConcatAxis.length; ++i) {\n    if (i === 0) {\n      codeLines.push(\n          '\\t' +\n          `if (index == ${i}) { return ${sizeInConcatAxis[i]}; }`);\n    } else if (i === sizeInConcatAxis.length - 1) {\n      codeLines.push(\n          '\\t' +\n          `else { return ${sizeInConcatAxis[i]}; }`);\n    } else {\n      codeLines.push(\n          '\\t' +\n          `else if (index == ${i}) { return ${sizeInConcatAxis[i]}; }`);\n    }\n  }\n  codeLines.push(\n      '\\t' +\n      '}');\n\n  return codeLines.join('\\n');\n};\n\nexport const parseConcatAttributes: OperatorInitialization<ConcatAttributes> = (node: Graph.Node): ConcatAttributes =>\n    createAttributeWithCacheKey({axis: node.attributes.getInt('axis')});\n\nconst validateInputs = (inputs: Tensor[]): void => {\n  if (!inputs || inputs.length < 1) {\n    throw new Error('too few inputs');\n  }\n\n  const inputType = inputs[0].type;\n  const inputDimensionality = inputs[0].dims.length;\n\n  // TODO: Support string concat\n  if (inputType === 'string') {\n    throw new Error('string tensor is not supported yet');\n  }\n\n  for (const input of inputs) {\n    // make sure types of all inputs match\n    if (input.type !== inputType) {\n      throw new Error('input tensors should be one type');\n    }\n\n    // make sure the dimensionality of all inputs are the same\n    if (input.dims.length !== inputDimensionality) {\n      throw new Error('input tensors should have the same shape');\n    }\n  }\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Logger} from '../../../instrument';\nimport {Tensor} from '../../../tensor';\nimport {getGlsl} from '../glsl-source';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, ProgramInfoLoader, ProgramMetadata, TextureType} from '../types';\n\nimport {calculateOutputShape, ConvAttributes} from './conv';\nimport {getActivationSnippet} from './fuse-utils';\n\nconst createUnpackedGroupedConvProgramMetadata = (hasBias: boolean, cacheHint: string): ProgramMetadata => ({\n  name: 'GroupedConv',\n  inputNames: hasBias ? ['X', 'W', 'Bias'] : ['X', 'W'],\n  inputTypes: hasBias ? [TextureType.unpacked, TextureType.unpacked, TextureType.unpacked] :\n                        [TextureType.unpacked, TextureType.unpacked],\n  cacheHint\n});\n\nconst createUnpackedGroupedConvProgramInfo =\n    (inferenceHandler: WebGLInferenceHandler, inputs: readonly Tensor[], metadata: ProgramMetadata,\n     attributes: ConvAttributes): ProgramInfo => {\n      const hasBias = inputs.length > 2;\n      const processBias = hasBias ? 'value += getBias(output_channel);' : '';\n      const xShape = inputs[0].dims.slice();\n      const wShape = inputs[1].dims.slice();\n      const outputChannelsPerGroup = wShape[0] / attributes.group;\n      Logger.verbose(\n          'GroupedConv',\n          `autpPad:${attributes.autoPad}, dilations:${attributes.dilations}, group:${attributes.group}, kernelShape:${\n              attributes.kernelShape}, pads:${attributes.pads}, strides:${attributes.strides}`);\n      const outputShape =\n          calculateOutputShape(xShape, wShape, attributes.dilations, attributes.pads, attributes.strides);\n      const glsl = getGlsl(inferenceHandler.session.backend.glContext.version);\n      const {activationFunction, applyActivation} = getActivationSnippet(attributes);\n\n      const shaderSource = `\n  const ivec2 strides = ivec2(${attributes.strides[0]}, ${attributes.strides[1]});\n  const ivec2 pads = ivec2(${attributes.pads[0]}, ${attributes.pads[1]});\n  ${activationFunction}\n  void main() {\n    ivec4 coords = getOutputCoords();\n    int batch = coords.x;\n    int output_channel = coords.y;\n    ivec2 xRCCorner = coords.zw * strides - pads;\n    int group_id = output_channel / ${outputChannelsPerGroup};\n\n    float value = 0.0;\n    for (int wInChannel = 0; wInChannel < ${wShape[1]}; wInChannel++) {\n      int input_channel = group_id * ${wShape[1]} + wInChannel;\n      for (int wHeight = 0; wHeight < ${wShape[2]}; wHeight++) {\n        int xHeight = xRCCorner.x + wHeight * ${attributes.dilations[0]};\n\n        if (xHeight < 0 || xHeight >= ${xShape[2]}) {\n          continue;\n        }\n\n        for (int wWidth = 0; wWidth < ${wShape[3]}; wWidth++) {\n          int xWidth = xRCCorner.y + wWidth * ${attributes.dilations[1]};\n          if (xWidth < 0 || xWidth >= ${xShape[3]}) {\n            continue;\n          }\n\n          float xVal = getX(batch, input_channel, xWidth, xHeight);\n          float wVal = getW(output_channel, wInChannel, wWidth, wHeight);\n          value += xVal*wVal;\n        }\n      }\n    }\n    ${processBias}\n    ${applyActivation}\n    ${glsl.output} = vec4(value, .0, .0, .0);\n  }\n`;\n      return {\n        ...metadata,\n        output: {dims: outputShape, type: inputs[0].type, textureType: TextureType.unpacked},\n        shaderSource,\n        hasMain: true,\n      };\n    };\n\nexport const createUnpackedGroupedConvProgramInfoLoader =\n    (inferenceHandler: WebGLInferenceHandler, inputs: readonly Tensor[], attributes: ConvAttributes):\n        ProgramInfoLoader => {\n          const metadata = createUnpackedGroupedConvProgramMetadata(inputs.length > 2, attributes.cacheKey);\n          return {\n            ...metadata,\n            get: () => createUnpackedGroupedConvProgramInfo(inferenceHandler, inputs, metadata, attributes)\n          };\n        };\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Tensor} from '../../../tensor';\nimport {WebGLInferenceHandler} from '../inference-handler';\n\nimport {calculateOutputShape, ConvAttributes} from './conv';\nimport {createPackedIm2ColProgramInfoLoader} from './im2col-pack';\nimport {createPackedMatmulProgramInfoLoader} from './matmul-pack';\n\nexport const conv2DPackedPointwise =\n    (inferenceHandler: WebGLInferenceHandler, inputs: readonly Tensor[], attributes: ConvAttributes): Tensor => {\n      const xshape = inputs[0].dims;\n      const kshape = inputs[1].dims;\n      const outputShape =\n          calculateOutputShape(xshape, kshape, attributes.dilations, attributes.pads, attributes.strides);\n      const reshapedX = inferenceHandler.reshapePacked(inputs[0], [xshape[1], xshape[2] * xshape[3]]);\n      const reshapedK = inferenceHandler.reshapePacked(inputs[1], [kshape[0], kshape[1]]);\n\n      const matmulInputs = inputs.length > 2 ? [reshapedK, reshapedX, inputs[2]] : [reshapedK, reshapedX];\n      const matmulOutput = inferenceHandler.run(\n          createPackedMatmulProgramInfoLoader(inferenceHandler, matmulInputs, attributes), matmulInputs);\n      return inferenceHandler.reshapePacked(matmulOutput, outputShape);\n    };\n\nexport const conv2DPacked =\n    (inferenceHandler: WebGLInferenceHandler, inputs: readonly Tensor[], attributes: ConvAttributes): Tensor => {\n      const xshape = inputs[0].dims;\n      const kshape = inputs[1].dims;\n      const outputShape =\n          calculateOutputShape(xshape, kshape, attributes.dilations, attributes.pads, attributes.strides);\n\n      // run im2col\n      const im2colOutput = inferenceHandler.run(\n          createPackedIm2ColProgramInfoLoader(inferenceHandler, inputs[0], inputs[1], outputShape, attributes),\n          [inputs[0]]);\n\n      // reshape kernel\n      const kernelReshaped = inferenceHandler.reshapePacked(inputs[1], [kshape[0], kshape[1] * kshape[2] * kshape[3]]);\n\n      // run matmul\n      const matmulInputs =\n          (inputs.length === 3) ? [kernelReshaped, im2colOutput, inputs[2]] : [kernelReshaped, im2colOutput];\n      const matmulOutput = inferenceHandler.run(\n          createPackedMatmulProgramInfoLoader(inferenceHandler, matmulInputs, attributes), matmulInputs);\n\n      // reshape output\n      const outputReshaped = inferenceHandler.reshapePacked(matmulOutput, outputShape);\n      return outputReshaped;\n    };\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {createAttributeWithCacheKey} from '../../../attribute-with-cache-key';\nimport {InferenceHandler} from '../../../backend';\nimport {Graph} from '../../../graph';\nimport {OperatorImplementation, OperatorInitialization} from '../../../operators';\nimport {Tensor} from '../../../tensor';\nimport {getGlsl} from '../glsl-source';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, ProgramInfoLoader, ProgramMetadata, TextureType} from '../types';\n\nimport {ConvAttributes} from './conv';\nimport {getActivationSnippet, parseInternalActivationAttributes} from './fuse-utils';\n\nconst computeTotalPad =\n    (inDim: number, stride: number, adj: number, kernel: number, dilation: number, outSize: number) =>\n        (inDim - 1) * stride + adj + (kernel - 1) * dilation + 1 - outSize;\n\nconst distributePadding = (totalPad: number, autoPad: string, pads: number[], head: number, tail: number) => {\n  const smallPad = Math.floor(totalPad / 2);\n  if (autoPad === 'SAME_UPPER') {\n    pads[head] = smallPad;\n    pads[tail] = totalPad - smallPad;\n  } else if (autoPad === 'SAME_LOWER') {\n    pads[head] = totalPad - smallPad;\n    pads[tail] = smallPad;\n  }\n};\n\nconst calculateOutputShapeAndPads =\n    (inputShape: readonly number[], kernelShape: readonly number[], dilations: readonly number[], autoPad: string,\n     pads: number[], strides: readonly number[], outputPadding: readonly number[], outputShape: number[]) => {\n      const spatialRank = inputShape.length - 2;\n      const updateShape = outputShape.length === 0;\n      for (let i = 0; i < spatialRank; ++i) {\n        const outSize = updateShape ? inputShape[i + 2] * strides[i] : outputShape[i];\n        const totalPad = computeTotalPad(inputShape[i + 2], strides[i], pads[i], kernelShape[i], dilations[i], outSize);\n        distributePadding(totalPad, autoPad, pads, i, i + spatialRank);\n        if (updateShape) {\n          outputShape.push(\n              strides[i] * (inputShape[i + 2] - 1) + outputPadding[i] + (kernelShape[i] - 1) * dilations[i] + 1 -\n              pads[i] - pads[i + spatialRank]);\n        }\n      }\n    };\n\nexport interface ConvTransposeAttributes extends ConvAttributes {\n  readonly outputPadding: readonly number[];\n  readonly outputShape: readonly number[];\n}\n\nexport const convTranspose: OperatorImplementation<ConvTransposeAttributes> =\n    (inferenceHandler: InferenceHandler, inputs: Tensor[], attributes: ConvTransposeAttributes): Tensor[] => {\n      validateInputs(inputs, attributes);  // currently will fail if not convTranspose2D\n      return convTranspose2d(inferenceHandler, inputs, attributes);\n    };\n\nconst convTranspose2d: OperatorImplementation<ConvTransposeAttributes> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: ConvTransposeAttributes): Tensor[] => {\n      const adjustedAttributes = getAdjustedConvTransposeAttributes(attributes, inputs);\n      return [convTranspose2DUnpacked(inferenceHandler, inputs, adjustedAttributes)];\n    };\n\nconst createConvTransposeProgramMetadata = (hasBias: boolean, cacheHint: string) => ({\n  name: 'ConvTranspose',\n  inputNames: hasBias ? ['X', 'W', 'B'] : ['X', 'W'],\n  inputTypes: hasBias ? [TextureType.unpacked, TextureType.unpacked, TextureType.unpacked] :\n                        [TextureType.unpacked, TextureType.unpacked],\n  cacheHint\n});\n\nconst createUnpackedConvTransposeProgramInfo =\n    (inferenceHandler: WebGLInferenceHandler, inputs: readonly Tensor[], metadata: ProgramMetadata,\n     attributes: ConvTransposeAttributes): ProgramInfo => {\n      const hasBias = inputs.length > 2;\n      const valueInit = hasBias ? 'getB(output_channel)' : '0.0';\n      const xShape = inputs[0].dims;\n      const wShape = inputs[1].dims;\n      const outputChannelsPerGroup = wShape[1];\n      const inputChannelsPerGroup = wShape[0] / attributes.group;\n      const outputShape = [inputs[0].dims[0], inputs[1].dims[1] * attributes.group, ...attributes.outputShape];\n      const glsl = getGlsl(inferenceHandler.session.backend.glContext.version);\n      const {activationFunction, applyActivation} = getActivationSnippet(attributes);\n\n      const shaderSource = `\n  const ivec2 strides = ivec2(${attributes.strides[0]}, ${attributes.strides[1]});\n  const ivec2 pads = ivec2(${attributes.pads[0]}, ${attributes.pads[1]});\n  ${activationFunction}\n  void main() {\n    ivec4 coords = getOutputCoords();\n    int batch = coords.x;\n    int output_channel = coords.y;\n\n    ivec2 loc = coords.zw + pads;\n\n    int group_id = output_channel / ${outputChannelsPerGroup};\n    int wOutChannel = output_channel - group_id * ${outputChannelsPerGroup};\n\n    float value = ${valueInit};\n    for (int inChannelOffset = 0; inChannelOffset < ${inputChannelsPerGroup}; inChannelOffset++) {\n      int input_channel = group_id * ${inputChannelsPerGroup} + inChannelOffset;\n      for (int wWOff = 0; wWOff < ${wShape[2]}; wWOff++) {\n        for (int wHOff = 0; wHOff < ${wShape[3]}; wHOff++) {\n          ivec2 wOff = ivec2(wWOff * ${attributes.dilations[0]}, wHOff * ${attributes.dilations[1]});\n          ivec2 wLoc = loc - wOff;\n          ivec2 wLocIn = wLoc / strides;\n          if (\n            wLocIn * strides == wLoc &&\n            wLocIn.x >= 0 && wLocIn.x < ${xShape[2]} &&\n            wLocIn.y >= 0 && wLocIn.y < ${xShape[3]}\n          ) {\n            float xVal = getX(batch, input_channel, wLocIn.y, wLocIn.x);\n            float wVal = getW(input_channel, wOutChannel, wHOff, wWOff);\n            value += xVal * wVal;\n          }\n        }\n      }\n    }\n    ${applyActivation}\n    ${glsl.output} = vec4(value, .0, .0, .0);\n  }\n`;\n      return {\n        ...metadata,\n        output: {dims: outputShape, type: inputs[0].type, textureType: TextureType.unpacked},\n        shaderSource,\n        hasMain: true,\n      };\n    };\n\nconst createUnpackedConvTransposeProgramInfoLoader =\n    (inferenceHandler: WebGLInferenceHandler, inputs: readonly Tensor[], attributes: ConvTransposeAttributes):\n        ProgramInfoLoader => {\n          const metadata = createConvTransposeProgramMetadata(inputs.length > 2, attributes.cacheKey);\n          return {\n            ...metadata,\n            get: () => createUnpackedConvTransposeProgramInfo(inferenceHandler, inputs, metadata, attributes)\n          };\n        };\n\n\nconst convTranspose2DUnpacked =\n    (inferenceHandler: WebGLInferenceHandler, inputs: readonly Tensor[], attributes: ConvTransposeAttributes):\n        Tensor => {\n          const result = inferenceHandler.run(\n              createUnpackedConvTransposeProgramInfoLoader(inferenceHandler, inputs, attributes), inputs);\n          return result;\n        };\n\nconst getAdjustedConvTransposeAttributes = <T extends ConvTransposeAttributes>(attributes: T, inputs: Tensor[]): T => {\n  const kernelShape = attributes.kernelShape.slice();\n  // if kernelShape is not specified in the attributes of this op, infer it from the weight tensor dims\n  if (attributes.kernelShape.length === 0) {\n    for (let i = 2; i < inputs[1].dims.length; ++i) {\n      kernelShape.push(inputs[1].dims[i]);\n    }\n  }\n\n  const pads = attributes.pads.slice();\n  const outputShape = attributes.outputShape.slice();\n  const inputShape = inputs[0].dims;\n  // If outputShape is not specified in the attributes of this op, infer it from the parameters\n  // Similarly, automatically infer pads if not specified\n  calculateOutputShapeAndPads(\n      inputShape, kernelShape, attributes.dilations, attributes.autoPad, pads, attributes.strides,\n      attributes.outputPadding, outputShape);\n\n  // always return a new object so does not modify the original attributes\n  const newAttributes: T = Object.assign({}, attributes);\n  Object.assign(newAttributes, {kernelShape, pads, outputShape, cacheKey: attributes.cacheKey});\n  return newAttributes;\n};\n\nexport const parseConvTransposeAttributes: OperatorInitialization<ConvTransposeAttributes> =\n    (node: Graph.Node): ConvTransposeAttributes => {\n      const attributes = node.attributes;\n      const activationAttributes = parseInternalActivationAttributes(attributes);\n      // TODO : Make this generic enough to compute default attributes for multi-dimensional conv\n      const autoPad = attributes.getString('auto_pad', 'NOTSET');\n      const dilations = attributes.getInts('dilations', [1, 1]);\n      const group = attributes.getInt('group', 1);\n      const kernelShape = attributes.getInts('kernel_shape', []);\n      const outputPadding = attributes.getInts('output_padding', [0, 0]);\n      const outputShape = attributes.getInts('output_shape', []);\n      const pads = attributes.getInts('pads', [0, 0, 0, 0]);\n      const strides = attributes.getInts('strides', [1, 1]);\n\n      return createAttributeWithCacheKey(\n          {autoPad, dilations, group, kernelShape, outputPadding, outputShape, pads, strides, ...activationAttributes});\n    };\n\nconst validateInputs = (inputs: Tensor[], attributes: ConvTransposeAttributes): void => {\n  // Refer to the below link for all input checks\n  // https://github.com/onnx/onnx/blob/main/docs/Operators.md#Conv\n  if (!inputs || (inputs.length !== 2 && inputs.length !== 3)) {\n    throw new Error('Conv requires 2 or 3 inputs');\n  }\n\n  // TODO : Need to add support for multi-dimensional conv\n  if (inputs[0].dims.length !== 4 || inputs[1].dims.length !== 4) {\n    throw new Error('currently only support 2-dimensional conv');\n  }\n\n  // FILTER_IN_CHANNEL should be equal to DATA_CHANNEL\n  const dataChannel = inputs[0].dims[1];\n  const filterInChannel = inputs[1].dims[0];\n  if (dataChannel !== filterInChannel) {\n    throw new Error('FILTER_IN_CHANNEL should be equal to DATA_CHANNEL');\n  }\n\n  const featureMaps = inputs[1].dims[1] * attributes.group;\n\n  // if bias is provided it should be 1D and the number of elements should be equal to the number of feature maps\n  if (inputs.length === 3 && (inputs[2].dims.length !== 1 || inputs[2].dims[0] !== featureMaps)) {\n    throw new Error('invalid bias');\n  }\n\n  const spatialRank = inputs[0].dims.length - 2;\n  // wrong dilations dimension\n  if (attributes.dilations.length !== spatialRank) {\n    throw new Error(`dilations should be ${spatialRank}D`);\n  }\n\n  // Wrong strides dimension\n  if (attributes.strides.length !== spatialRank) {\n    throw new Error(`strides should be ${spatialRank}D`);\n  }\n\n  // Wrong pads dimension\n  if (attributes.pads.length !== spatialRank * 2) {\n    throw new Error(`pads should be ${spatialRank * 2}D`);\n  }\n\n  // Wrong output padding dimension\n  if (attributes.outputPadding.length !== spatialRank) {\n    throw new Error(`output_padding should be ${spatialRank}D`);\n  }\n\n  // if kernelShape is specified, it's data length must be 2 less than dims length of the weights tensor\n  // (the first 2 dims are batch_size and channels)\n  if (attributes.kernelShape.length !== 0 && attributes.kernelShape.length !== inputs[1].dims.length - 2) {\n    throw new Error('invalid kernel shape');\n  }\n\n  // as with kernelShape, must have same number of spatial dims as input\n  if (attributes.outputShape.length !== 0 && attributes.outputShape.length !== inputs[0].dims.length - 2) {\n    throw new Error('invalid output shape');\n  }\n\n  // TODO : Need to add support for float64\n  if (inputs[0].type !== 'float32' || inputs[1].type !== 'float32') {\n    throw new Error('ConvTranspose input(X,W) should be float tensor');\n  }\n\n  if (inputs.length === 3 && inputs[2].type !== 'float32') {\n    throw new Error('ConvTranspose input(bias) should be float tensor');\n  }\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {AttributeWithCacheKey, createAttributeWithCacheKey} from '../../../attribute-with-cache-key';\nimport {InferenceHandler} from '../../../backend';\nimport {Graph} from '../../../graph';\nimport {OperatorImplementation, OperatorInitialization} from '../../../operators';\nimport {Tensor} from '../../../tensor';\nimport {PoolConvUtil} from '../../../util';\nimport {WebGLInferenceHandler} from '../inference-handler';\n\nimport {createUnpackedGroupedConvProgramInfoLoader} from './conv-grouped';\nimport {conv2DPacked} from './conv-pack';\nimport {createDotProductProgramInfoLoader} from './dot-product';\nimport {InternalActivationAttributes, parseInternalActivationAttributes} from './fuse-utils';\nimport {createIm2ColProgramInfoLoader} from './im2col';\nimport {createMatmulProgramInfoLoader} from './matmul';\n\n\nexport const calculateOutputShape =\n    (inputShape: readonly number[], kernelShape: readonly number[], dilations: readonly number[],\n     adjustPads: readonly number[], strides: readonly number[]): number[] => {\n      const batchSize = inputShape[0];\n      const inputSpatialShape = inputShape.slice(2);\n      const spatialRank = inputSpatialShape.length;\n      const outChannels = kernelShape[0];\n      const kernelSpatialShape = kernelShape.slice(2);\n      const dilatedKernelShape = kernelSpatialShape.map((v, i) => v + (v - 1) * (dilations[i] - 1));\n      const inputSpatialShapeWithPad = inputSpatialShape.map((v, i) => v + adjustPads[i] + adjustPads[i + spatialRank]);\n      const outputSpatialShape =\n          inputSpatialShapeWithPad.map((v, i) => Math.floor((v - dilatedKernelShape[i] + strides[i]) / strides[i]));\n      const outputShape = [batchSize, outChannels].concat(...outputSpatialShape);\n      return outputShape;\n    };\n\nexport interface ConvAttributes extends InternalActivationAttributes, AttributeWithCacheKey {\n  readonly autoPad: string;\n  readonly dilations: readonly number[];\n  readonly group: number;\n  readonly kernelShape: readonly number[];\n  readonly pads: readonly number[];\n  readonly strides: readonly number[];\n}\n\nexport const conv: OperatorImplementation<ConvAttributes> =\n    (inferenceHandler: InferenceHandler, inputs: Tensor[], attributes: ConvAttributes): Tensor[] => {\n      validateInputs(inputs, attributes);  // currently will fail if not conv2D\n      return conv2d(inferenceHandler, inputs, attributes);\n    };\n\nconst conv2d: OperatorImplementation<ConvAttributes> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: ConvAttributes): Tensor[] => {\n      const adjustedAttributes = getAdjustedConvAttributes(attributes, inputs);\n      const packMode = inferenceHandler.session.pack;\n      const isPointwise = adjustedAttributes.kernelShape[0] === 1 && adjustedAttributes.kernelShape[1] === 1;\n      if (adjustedAttributes.group > 1) {\n        const result = inferenceHandler.run(\n            createUnpackedGroupedConvProgramInfoLoader(inferenceHandler, inputs, adjustedAttributes), inputs);\n        return [result];\n      } else if (isPointwise && packMode) {\n        return [conv2DUnpackedPointwise(inferenceHandler, inputs, adjustedAttributes)];\n      } else if (packMode && inputs[0].dims.length === 4 && inputs[0].dims[0] === 1 && !isPointwise) {\n        return [conv2DPacked(inferenceHandler, inputs, adjustedAttributes)];\n      } else {\n        return [conv2DUnpacked(inferenceHandler, inputs, adjustedAttributes)];\n      }\n    };\n\nconst conv2DUnpackedPointwise =\n    (inferenceHandler: WebGLInferenceHandler, inputs: readonly Tensor[], attributes: ConvAttributes): Tensor => {\n      const xshape = inputs[0].dims;\n      const kshape = inputs[1].dims;\n      const outputShape =\n          calculateOutputShape(xshape, kshape, attributes.dilations, attributes.pads, attributes.strides);\n      const reshapedX = inferenceHandler.reshapeUnpacked(inputs[0], [xshape[1], xshape[2] * xshape[3]]);\n      const reshapedK = inferenceHandler.reshapeUnpacked(inputs[1], [kshape[0], kshape[1]]);\n\n      const matmulInputs = inputs.length > 2 ? [reshapedK, reshapedX, inputs[2]] : [reshapedK, reshapedX];\n      const matmulOutput = inferenceHandler.run(createMatmulProgramInfoLoader(matmulInputs, attributes), matmulInputs);\n      return inferenceHandler.reshapeUnpacked(matmulOutput, outputShape);\n    };\n\nconst conv2DUnpacked =\n    (inferenceHandler: WebGLInferenceHandler, inputs: readonly Tensor[], attributes: ConvAttributes): Tensor => {\n      const xshape = inputs[0].dims;\n      const kshape = inputs[1].dims;\n      const outputShape =\n          calculateOutputShape(xshape, kshape, attributes.dilations, attributes.pads, attributes.strides);\n      const xIm2Col = inferenceHandler.run(\n          createIm2ColProgramInfoLoader(inferenceHandler, inputs[0], inputs[1], outputShape, attributes), [inputs[0]]);\n\n      const dotProductInputs = inputs.length === 3 ? [xIm2Col, inputs[1], inputs[2]] : [xIm2Col, inputs[1]];\n      const output = inferenceHandler.run(\n          createDotProductProgramInfoLoader(inferenceHandler, inputs, outputShape, attributes), dotProductInputs);\n      return output;\n    };\n\nconst getAdjustedConvAttributes = <T extends ConvAttributes>(attributes: T, inputs: Tensor[]): T => {\n  const kernelShape = attributes.kernelShape.slice();\n  // if kernelShape is not specified in the attributes of this op, infer it from the weight tensor dims\n  if (attributes.kernelShape.length === 0) {\n    for (let i = 2; i < inputs[1].dims.length; ++i) {\n      kernelShape.push(inputs[1].dims[i]);\n    }\n  }\n  const pads = attributes.pads.slice();\n  PoolConvUtil.adjustPadsBasedOnAutoPad(\n      inputs[0].dims, attributes.strides, attributes.dilations, kernelShape, pads, attributes.autoPad);\n\n  // always return a new object so does not modify the original attributes\n  const newAttributes: T = Object.assign({}, attributes);\n  Object.assign(newAttributes, {kernelShape, pads, cacheKey: attributes.cacheKey});\n  return newAttributes;\n};\n\nexport const parseConvAttributes: OperatorInitialization<ConvAttributes> = (node: Graph.Node): ConvAttributes => {\n  const attributes = node.attributes;\n  const activationAttributes = parseInternalActivationAttributes(attributes);\n  // TODO : Make this generic enough to compute default attributes for multi-dimensional conv\n  const autoPad = attributes.getString('auto_pad', 'NOTSET');\n  const dilations = attributes.getInts('dilations', [1, 1]);\n  const group = attributes.getInt('group', 1);\n  const kernelShape = attributes.getInts('kernel_shape', []);\n  const pads = attributes.getInts('pads', [0, 0, 0, 0]);\n  const strides = attributes.getInts('strides', [1, 1]);\n\n  return createAttributeWithCacheKey({autoPad, dilations, group, kernelShape, pads, strides, ...activationAttributes});\n};\n\nconst validateInputs = (inputs: Tensor[], attributes: ConvAttributes): void => {\n  // Refer to the below link for all input checks\n  // https://github.com/onnx/onnx/blob/main/docs/Operators.md#Conv\n  if (!inputs || (inputs.length !== 2 && inputs.length !== 3)) {\n    throw new Error('Conv requires 2 or 3 inputs');\n  }\n\n  // TODO : Need to add support for multi-dimensional conv\n  if (inputs[0].dims.length !== 4 || inputs[1].dims.length !== 4) {\n    throw new Error('currently only support 2-dimensional conv');\n  }\n\n  // FILTER_IN_CHANNEL should be equal to DATA_CHANNEL\n  const dataChannel = inputs[0].dims[1];\n  const filterInChannel = inputs[1].dims[1] * attributes.group;\n  if (dataChannel !== filterInChannel) {\n    throw new Error('FILTER_IN_CHANNEL should be equal to DATA_CHANNEL');\n  }\n\n  // if bias is provided it should be 1D and the number of elements should be equal to the number of feature maps\n  if (inputs.length === 3 && (inputs[2].dims.length !== 1 || inputs[1].dims[0] !== inputs[2].dims[0])) {\n    throw new Error('invalid bias');\n  }\n\n  const spatialRank = inputs[0].dims.length - 2;\n  // wrong dilations dimension\n  if (attributes.dilations.length !== spatialRank) {\n    throw new Error(`dilations should be ${spatialRank}D`);\n  }\n\n  // Wrong strides dimension\n  if (attributes.strides.length !== spatialRank) {\n    throw new Error(`strides should be ${spatialRank}D`);\n  }\n\n  // Wrong pads dimension\n  if (attributes.pads.length !== spatialRank * 2) {\n    throw new Error(`pads should be ${spatialRank * 2}D`);\n  }\n\n  // if kernelShape is specified, it's data length must be 2 less than dims length of the weights tensor\n  // (the first 2 dims are batch_size and channels)\n  if (attributes.kernelShape.length !== 0 && attributes.kernelShape.length !== inputs[1].dims.length - 2) {\n    throw new Error('invalid kernel shape');\n  }\n\n  // TODO : Need to add support for float64\n  if (inputs[0].type !== 'float32' || inputs[1].type !== 'float32') {\n    throw new Error('Conv input(X,W) should be float tensor');\n  }\n\n  if (inputs.length === 3 && inputs[2].type !== 'float32') {\n    throw new Error('Conv input(bias) should be float tensor');\n  }\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Graph} from '../../../graph';\nimport {OperatorImplementation, OperatorInitialization} from '../../../operators';\nimport {Tensor} from '../../../tensor';\nimport {WebGLInferenceHandler} from '../inference-handler';\n\nimport {transpose, TransposeAttributes} from './transpose';\n\nexport interface DepthToSpaceAttributes {\n  mode: 'DCR'|'CRD';\n  blocksize: number;\n}\n\nexport const depthToSpace: OperatorImplementation<DepthToSpaceAttributes> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: DepthToSpaceAttributes): Tensor[] => {\n      validateInputs(inputs);\n      const blocksize = attributes.blocksize;\n      const blocksizeSqr = blocksize * blocksize;\n      const transposePerm = attributes.mode === 'DCR' ? [0, 3, 4, 1, 5, 2] : [0, 1, 4, 2, 5, 3];\n      const firstReshapeShape = attributes.mode === 'DCR' ?\n          [\n            inputs[0].dims[0], blocksize, blocksize, inputs[0].dims[1] / blocksizeSqr, inputs[0].dims[2],\n            inputs[0].dims[3]\n          ] :\n          [\n            inputs[0].dims[0], inputs[0].dims[1] / blocksizeSqr, blocksize, blocksize, inputs[0].dims[2],\n            inputs[0].dims[3]\n          ];\n\n      // const transpose = new WebGLTranspose();\n      // const attributes = new Attribute(undefined);\n      // attributes.set('perm', 'ints', transposePerm);\n      // transpose.initialize(attributes);\n\n      // First reshape\n      const firstReshapedTensor = inferenceHandler.reshapeUnpacked(inputs[0], firstReshapeShape);\n\n      // transpose\n      const transposeAttributes: TransposeAttributes = {perm: transposePerm, cacheKey: `${transposePerm}`};\n      const [transposeOutput] = transpose(inferenceHandler, [firstReshapedTensor], transposeAttributes);\n\n      // Second reshape\n      const secondReshapeShape = [\n        inputs[0].dims[0], inputs[0].dims[1] / blocksizeSqr, inputs[0].dims[2] * blocksize,\n        inputs[0].dims[3] * blocksize\n      ];\n      const result = inferenceHandler.reshapeUnpacked(transposeOutput, secondReshapeShape);\n      return [result];\n    };\n\nexport const parseDepthToSpaceAttributes: OperatorInitialization<DepthToSpaceAttributes> =\n    (node: Graph.Node): DepthToSpaceAttributes => {\n      // processing node attributes\n      const blocksize = node.attributes.getInt('blocksize');\n      if (blocksize < 1) {\n        throw new Error(`blocksize must be >= 1, but got : ${blocksize} for DepthToSpace`);\n      }\n      const mode = node.attributes.getString('mode', 'DCR');\n      if (mode !== 'DCR' && mode !== 'CRD') {\n        throw new Error(`unrecognized mode: ${mode} for DepthToSpace`);\n      }\n      return {mode, blocksize};\n    };\n\nconst validateInputs = (inputs: Tensor[]): void => {\n  if (inputs.length !== 1) {\n    throw new Error(`DepthToSpace expect 1 inputs, but got ${inputs.length}`);\n  }\n\n  // Input has to be a 4-D tensor\n  // TODO: Support string depth-to-space.\n  if (inputs[0].type === 'string' || inputs[0].dims.length !== 4) {\n    throw new TypeError('DepthToSpace input should be a 4-D numeric tensor');\n  }\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Tensor} from '../../../tensor';\nimport {ShapeUtil} from '../../../util';\nimport {getGlsl} from '../glsl-source';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, ProgramInfoLoader, ProgramMetadata, TextureType} from '../types';\n\nimport {getActivationSnippet, InternalActivationAttributes} from './fuse-utils';\nimport {calculateIm2ColDims} from './im2col';\n\nconst createDotProductProgramMetadata = (hasBias: boolean, attributes: InternalActivationAttributes) => ({\n  name: 'ConvDotProduct',\n  inputNames: hasBias ? ['Im2Col', 'K', 'B'] : ['Im2Col', 'K'],\n  inputTypes: hasBias ? [TextureType.unpacked, TextureType.packedLastDimension, TextureType.unpacked] :\n                        [TextureType.unpacked, TextureType.packedLastDimension],\n  cacheKey: attributes.activationCacheKey\n});\n\nconst createDotProductProgramInfo =\n    (inferenceHandler: WebGLInferenceHandler, metadata: ProgramMetadata, inputs: readonly Tensor[],\n     outputShape: number[], attributes: InternalActivationAttributes): ProgramInfo => {\n      const xshape = inputs[0].dims;\n      const kshape = inputs[1].dims;\n      const adjustedKernelShape = [kshape[0], Math.ceil((xshape[1] * kshape[2] * kshape[3]) / 4)];\n      const im2colShape = calculateIm2ColDims(xshape, kshape, outputShape);\n      const [kWidth, kHeight] =\n          inferenceHandler.calculateTextureWidthAndHeight(adjustedKernelShape, TextureType.packedLastDimension);\n\n      const im2colStrides = ShapeUtil.computeStrides(im2colShape);\n      const [im2colWidth, im2colHeight] =\n          inferenceHandler.calculateTextureWidthAndHeight(im2colShape, TextureType.packedLastDimension);\n      const rank = outputShape.length;\n\n      const initValue = (inputs.length < 3) ? '0.0' : '_B(b)';\n      const sharedDim = Math.ceil(xshape[1] * kshape[2] * kshape[3] / 4);\n      const {activationFunction, applyActivation} = getActivationSnippet(attributes);\n      const glsl = getGlsl(inferenceHandler.session.backend.glContext.version);\n      const shaderSource = `\n${activationFunction}\nfloat process(int indices[${rank}]) {\n  int b[1];\n  b[0] = indices[1];\n  int im2col[4];\n  im2col[0] = indices[0];\n  im2col[1] = indices[2];\n  im2col[2] = indices[3];\n  int im2colOffset = im2col[0] * ${im2colStrides[0]} + im2col[1] * ${im2colStrides[1]} + im2col[2] * ${\n          im2colStrides[2]};\n  int kernelOffset = indices[1] * ${adjustedKernelShape[1]};\n  float value = ${initValue};\n  for (int i = 0; i < ${sharedDim}; ++i) {\n    vec2 im2colCoords = offsetToCoords(im2colOffset, ${im2colWidth}, ${im2colHeight});\n    vec2 kernelCoords = offsetToCoords(kernelOffset, ${kWidth}, ${kHeight});\n    value += dot(${glsl.texture2D}(Im2Col, im2colCoords), ${glsl.texture2D}(K, kernelCoords));\n    ++im2colOffset;\n    ++kernelOffset;\n  }\n  ${applyActivation}\n  return value;\n}`;\n      return {\n        ...metadata,\n        output: {dims: outputShape, type: inputs[0].type, textureType: TextureType.unpacked},\n        shaderSource\n      };\n    };\n\nexport const createDotProductProgramInfoLoader =\n    (inferenceHandler: WebGLInferenceHandler, inputs: readonly Tensor[], outputShape: number[],\n     attributes: InternalActivationAttributes): ProgramInfoLoader => {\n      const metadata = createDotProductProgramMetadata(inputs.length > 2, attributes);\n      return {\n        ...metadata,\n        get: () => createDotProductProgramInfo(inferenceHandler, metadata, inputs, outputShape, attributes)\n      };\n    };\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Graph} from '../../../graph';\nimport {OperatorImplementation, OperatorInitialization} from '../../../operators';\nimport {Tensor} from '../../../tensor';\nimport {ShapeUtil} from '../../../util';\nimport {WebGLInferenceHandler} from '../inference-handler';\n\nexport const flatten: OperatorImplementation<number> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], axis: number): Tensor[] => {\n      validateInputs(inputs, axis);\n\n      const outputDims = ShapeUtil.flattenShape(inputs[0].dims, axis);\n      return [inferenceHandler.reshapeUnpacked(inputs[0], outputDims)];\n    };\n\nexport const parseFlattenAttributes: OperatorInitialization<number> = (node: Graph.Node): number =>\n    node.attributes.getInt('axis', 1);  // default axis is 1\n\nconst validateInputs = (inputs: Tensor[], axis: number): void => {\n  if (!inputs || inputs.length !== 1) {\n    throw new Error('Flatten requires 1 input.');\n  }\n\n  const r = inputs[0].dims.length;\n  if (r === 0) {\n    throw new Error('scalar tensor is not supported.');\n  }\n\n  if (axis < -r || axis > r) {\n    throw new Error('Invalid axis');\n  }\n\n  // TODO: Support string type\n  if (inputs[0].type === 'string') {\n    throw new Error('string tensor is not supported.');\n  }\n};","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Attribute} from '../../../attribute';\nimport {MAX_CLIP, MIN_CLIP} from '../../../util';\nimport {GlslValueFunction} from '../glsl-definitions';\n\nimport {glslClip, glslRelu, glslSigmoid} from './unary-op';\n\nexport interface InternalActivationAttributes {\n  readonly activation: string;\n  readonly clipMin?: number;\n  readonly clipMax?: number;\n  readonly activationCacheKey: string;\n}\n\nexport function getActivationSnippet(attributes: InternalActivationAttributes) {\n  let func: GlslValueFunction;\n  switch (attributes.activation) {\n    case 'Relu':\n      func = glslRelu();\n      break;\n    case 'Sigmoid':\n      func = glslSigmoid();\n      break;\n    case 'Clip':\n      func = glslClip(attributes.clipMin!, attributes.clipMax!);\n      break;\n    // TODO: adding other activations that can be fused.\n    default:\n      return {activationFunction: '', applyActivation: ''};\n  }\n\n  const activationName = func.name;\n  const activationFunction = func.body;\n  const applyActivation = `value = ${activationName}_(value);`;\n  return {activationFunction, applyActivation};\n}\n\nexport const parseInternalActivationAttributes = (attributes: Attribute): InternalActivationAttributes => {\n  const activation = attributes.getString('activation', '');\n\n  if (activation === 'Clip') {\n    const [clipMin, clipMax] = attributes.getFloats('activation_params', [MIN_CLIP, MAX_CLIP]);\n    return {activation, clipMax, clipMin, activationCacheKey: `${activation}:${clipMin},${clipMax}`};\n  }\n  return {activation, activationCacheKey: activation};\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {AttributeWithCacheKey, createAttributeWithCacheKey} from '../../../attribute-with-cache-key';\nimport {Graph} from '../../../graph';\nimport {NUMBER_TYPES, OperatorImplementation, OperatorInitialization} from '../../../operators';\nimport {Tensor} from '../../../tensor';\nimport {ShapeUtil} from '../../../util';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, ProgramInfoLoader, ProgramMetadata, TextureType} from '../types';\n\ninterface GatherAttributes extends AttributeWithCacheKey {\n  readonly axis: number;\n}\n\nexport const gather: OperatorImplementation<GatherAttributes> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: GatherAttributes): Tensor[] => {\n      validateInputs(inputs, attributes.axis);\n      const output = inferenceHandler.run(createGatherProgramInfoLoader(inferenceHandler, inputs, attributes), inputs);\n      return [output];\n    };\n\nexport const parseGatherAttributes: OperatorInitialization<GatherAttributes> = (node: Graph.Node): GatherAttributes =>\n    createAttributeWithCacheKey({axis: node.attributes.getInt('axis', 0)});\n\nconst gatherProgramMetadata = {\n  name: 'Gather',\n  inputNames: ['A', 'B'],\n  inputTypes: [TextureType.unpacked, TextureType.unpacked],\n};\n\nconst createGatherProgramInfo =\n    (handler: WebGLInferenceHandler, metadata: ProgramMetadata, inputs: Tensor[], axis: number): ProgramInfo => {\n      const inputShape = inputs[0].dims.slice();\n      const indexDataShape = inputs[1].dims.slice();\n      const outputShape = new Array(inputShape.length + indexDataShape.length - 1);\n\n      axis = ShapeUtil.normalizeAxis(axis, inputShape.length);\n      const indexCopyOps: string[] = [];\n      for (let i = 0; i < outputShape.length; i++) {\n        // outputShape is divided into three parts: A, B, C\n        // |0        axis|  axis + indexDataShape.length |          end|\n        // |     A       |             B                 |      C      |\n        //\n        // inputIdx: [A, inputs[1][B], C]\n        if (i < axis) {  // A\n          outputShape[i] = inputShape[i];\n          indexCopyOps.push(`inputIdx[${i}] = outputIdx[${i}];`);\n        } else {\n          if (i < axis + indexDataShape.length) {  // B\n            outputShape[i] = indexDataShape[i - axis];\n            indexCopyOps.push(`indexDataIdx[${i - axis}] = outputIdx[${i}];`);\n          } else {                                                       // C\n            outputShape[i] = inputShape[i - indexDataShape.length + 1];  // skip 1 for axis\n            indexCopyOps.push(`inputIdx[${i - indexDataShape.length + 1}] = outputIdx[${i}];`);\n          }\n        }\n      }\n\n      const orank = outputShape.length || 1;\n      const irank = inputShape.length;\n      const iDrank = indexDataShape.length || 1;\n      const shaderSource = `\n      float process(int outputIdx[${orank}]) {\n        int inputIdx[${irank}];\n        int indexDataIdx[${iDrank}];\n        indexDataIdx[0] = 0;\n        ${indexCopyOps.join('\\n        ')}\n        int idx = int(_B(indexDataIdx));\n        inputIdx[${axis}] = idx < 0 ? idx + ${inputShape[axis]} : idx;\n        return _A(inputIdx);\n      }`;\n      return {\n        ...metadata,\n        output: {dims: outputShape, type: inputs[0].type, textureType: TextureType.unpacked},\n        shaderSource\n      };\n    };\n\nconst createGatherProgramInfoLoader =\n    (handler: WebGLInferenceHandler, inputs: Tensor[], attributes: GatherAttributes): ProgramInfoLoader => {\n      const metadata = {...gatherProgramMetadata, cacheHint: attributes.cacheKey};\n      return {...metadata, get: () => createGatherProgramInfo(handler, metadata, inputs, attributes.axis)};\n    };\n\nconst validateInputs = (inputs: Tensor[], axis: number): void => {\n  if (!inputs || inputs.length !== 2) {\n    throw new Error('Gather requires 2 inputs.');\n  }\n  const tensorRank = inputs[0].dims.length;\n  if (tensorRank < 1) {\n    throw new Error('Invalid input shape.');\n  }\n  if (axis < -tensorRank || axis > tensorRank - 1) {\n    throw new Error('Invalid axis.');\n  }\n  if (NUMBER_TYPES.indexOf(inputs[0].type) === -1) {\n    throw new Error('Invaid input type.');\n  }\n  if (inputs[1].type !== 'int32' && inputs[1].type !== 'int16') {\n    throw new Error('Invaid input type.');\n  }\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {AttributeWithCacheKey, createAttributeWithCacheKey} from '../../../attribute-with-cache-key';\nimport {Graph} from '../../../graph';\nimport {OperatorImplementation, OperatorInitialization} from '../../../operators';\nimport {Tensor} from '../../../tensor';\nimport {GemmUtil} from '../../../util';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, ProgramInfoLoader, ProgramMetadata, TextureType} from '../types';\n\nexport interface GemmAttributes extends AttributeWithCacheKey {\n  transA: boolean;\n  transB: boolean;\n  alpha: number;\n  beta: number;\n  isOptionalC: boolean;  // in opset 11, C becomes optional\n}\n\nexport const gemm: OperatorImplementation<GemmAttributes> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: GemmAttributes): Tensor[] => {\n      validateInputs(inputs, attributes);\n      const output = inferenceHandler.run(createGemmProgramInfoLoader(inputs, attributes), inputs);\n      return [output];\n    };\n\nconst parseGemmAttributes = (node: Graph.Node, isOptionalC: boolean): GemmAttributes => {\n  const transA = node.attributes.getInt('transA', 0) !== 0;\n  const transB = node.attributes.getInt('transB', 0) !== 0;\n  const alpha = node.attributes.getFloat('alpha', 1.0);\n  const beta = node.attributes.getFloat('beta', 1.0);\n  return createAttributeWithCacheKey({transA, transB, alpha, beta, isOptionalC});\n};\n\nexport const parseGemmAttributesV7: OperatorInitialization<GemmAttributes> = (node: Graph.Node): GemmAttributes =>\n    parseGemmAttributes(node, false);\n\nexport const parseGemmAttributesV11: OperatorInitialization<GemmAttributes> = (node: Graph.Node): GemmAttributes =>\n    parseGemmAttributes(node, true);\n\nconst createGemmProgramInfoLoader = (inputs: Tensor[], attributes: GemmAttributes): ProgramInfoLoader => {\n  const metadata = {\n    name: 'Gemm',\n    inputNames: inputs.length === 3 ? ['A', 'B', 'C'] : ['A', 'B'],\n    inputTypes: inputs.length === 3 ? [TextureType.unpacked, TextureType.unpacked, TextureType.unpacked] :\n                                      [TextureType.unpacked, TextureType.unpacked],\n    key: attributes.cacheKey\n  };\n\n  return {...metadata, get: () => createGemmProgramInfo(metadata, inputs, attributes)};\n};\n\nconst createGemmProgramInfo =\n    (metadata: ProgramMetadata, inputs: Tensor[], attributes: GemmAttributes): ProgramInfo => {\n      const aShape = inputs[0].dims.slice();\n      const bShape = inputs[1].dims.slice();\n      const [M, N] = GemmUtil.getShapeOfGemmResult(\n          aShape, attributes.transA, bShape, attributes.transB, inputs.length === 3 ? inputs[2].dims : undefined);\n      const outputShape = [M, N];\n      if (!outputShape) {\n        throw new Error('Can\\'t use gemm on the given tensors');\n      }\n      let sharedDim = aShape[aShape.length - 1];\n      let line = '';\n      if (attributes.transA) {\n        sharedDim = aShape[0];\n      }\n      if (attributes.transA && attributes.transB) {\n        line = 'value += _A_T(a) * _B_T(b);';\n      } else if (attributes.transA && !attributes.transB) {\n        line = 'value += _A_T(a) * _B(b);';\n      } else if (!attributes.transA && attributes.transB) {\n        line = 'value += _A(a) * _B_T(b);';\n      } else if (!attributes.transA && !attributes.transB) {\n        line = 'value += _A(a) * _B(b);';\n      }\n      const rank = outputShape.length;\n      const declareC = inputs.length === 3 ? `int c[${inputs[2].dims.length}];` : '';\n      const broadcastC = inputs.length === 3 ? 'bcastIndices_C(indices, c);' : '';\n      const calculateC = inputs.length === 3 ? 'value += beta * _C(c);' : '';\n      const shaderSource = `\n      float process(int indices[${rank}]) {\n          int a[${rank}];\n          int b[${rank}];\n          ${declareC}\n\n          copyVec(indices, a);\n          copyVec(indices, b);\n          ${broadcastC}\n\n          float value = 0.0;\n          for (int k=0; k<${sharedDim}; ++k) {\n              a[${rank - 1}] = k;\n              b[${rank - 2}] = k;\n              ${line}\n          }\n\n          value = value * alpha;\n          ${calculateC}\n          return value;\n      }`;\n      return {\n        ...metadata,\n        output: {dims: outputShape, type: inputs[0].type, textureType: TextureType.unpacked},\n        variables: [\n          {name: 'alpha', type: 'float', data: attributes.alpha}, {name: 'beta', type: 'float', data: attributes.beta}\n        ],\n        shaderSource\n      };\n    };\n\nconst validateInputs = (inputs: Tensor[], attributes: GemmAttributes): void => {\n  if (!inputs) {\n    throw new Error('Input is missing');\n  }\n  if (attributes.isOptionalC && (inputs.length < 2 || inputs.length > 3)) {\n    throw new Error('Invaid input shape.');\n  }\n  if (!attributes.isOptionalC && inputs.length !== 3) {\n    throw new Error('Gemm requires 3 inputs');\n  }\n\n  // 'C' can be of dimensionality 1 or 2 only\n  if (inputs.length === 3 && inputs[2].dims.length !== 1 && inputs[2].dims.length !== 2) {\n    throw new Error('Invalid input shape of C');\n  }\n\n  if ((inputs[0].type !== 'float32' && inputs[0].type !== 'float64') ||\n      (inputs[1].type !== 'float32' && inputs[1].type !== 'float64') ||\n      (inputs.length === 3 && inputs[2].type !== 'float32' && inputs[2].type !== 'float64')) {\n    throw new Error('Invalid input type.');\n  }\n\n  if ((inputs[0].type !== inputs[1].type) || (inputs.length === 3 && inputs[0].type !== inputs[2].type)) {\n    throw new Error('Input types are mismatched');\n  }\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Tensor} from '../../../tensor';\nimport {getGlsl} from '../glsl-source';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, ProgramInfoLoader, ProgramMetadata, TextureType} from '../types';\n\nimport {ConvAttributes} from './conv';\nimport {unpackFromChannel} from './packing-utils';\n\nconst createPackedIm2ColProgramMetadata = (cacheHint: string) => ({\n  name: 'Im2Col (packed)',\n  inputNames: ['A'],\n  inputTypes: [TextureType.packed],\n  cacheHint,\n});\n\nconst createPackedIm2ColProgramInfo =\n    (inferenceHandler: WebGLInferenceHandler, metadata: ProgramMetadata, x: Tensor, w: Tensor,\n     outputShape: readonly number[], attributes: ConvAttributes): ProgramInfo => {\n      const xshape = x.dims;\n      const wshape = w.dims;\n      const rowDim = 2;\n      const colDim = 3;\n      const rank = outputShape.length;\n      const im2colShape = [wshape[1] * wshape[2] * wshape[3], outputShape[2] * outputShape[3]];\n      const kernelSize = wshape[2] * wshape[3];\n      const unpackChannel = unpackFromChannel();\n      const glsl = getGlsl(inferenceHandler.session.backend.glContext.version);\n      let unrolled = '';\n\n      for (let row = 0; row <= 1; row++) {\n        for (let col = 0; col <= 1; col++) {\n          unrolled += `\n            blockIndex = rc.x + ${col};\n            pos = rc.y + ${row};\n\n            if(blockIndex < ${im2colShape[1]} && pos < ${im2colShape[0]}) {\n              offsetY = int(blockIndex / (${outputShape[rank - 1]})) * ${attributes.strides[0]} -\n                ${attributes.pads[0]};\n              d0 = offsetY + ${attributes.dilations[0]} * (imod(pos, ${kernelSize}) / ${wshape[2]});\n\n              if(d0 < ${xshape[rowDim]} && d0 >= 0) {\n                offsetX = imod(blockIndex, ${outputShape[rank - 1]}) * ${attributes.strides[1]} -\n                  ${attributes.pads[1]};\n                d1 = offsetX + ${attributes.dilations[1]} * imod(imod(pos, ${kernelSize}), ${wshape[2]});\n\n                if(d1 < ${xshape[colDim]} && d1 >= 0) {\n\n                  ch = int(float(pos)/ ${kernelSize}.);\n                    innerDims = vec2(d0, d1);\n                    result[${row * 2 + col}] = getChannel(\n                      getA(0, ch, int(innerDims.x),\n                      int(innerDims.y)), innerDims);\n                }\n              }\n            }\n\n          `;\n        }\n      }\n\n      const shaderSource = `\n      ${unpackChannel}\n\n      void main() {\n        ivec2 rc = getOutputCoords();\n          vec4 result = vec4(0.0);\n          int blockIndex, pos, offsetY, d0, offsetX, d1, ch;\n          vec2 innerDims;\n          ${unrolled}\n          ${glsl.output} = result;\n      }\n            `;\n      return {\n        ...metadata,\n        output: {dims: im2colShape, type: x.type, textureType: TextureType.packed},\n        shaderSource,\n        hasMain: true\n      };\n    };\n\nexport const createPackedIm2ColProgramInfoLoader =\n    (inferenceHandler: WebGLInferenceHandler, x: Tensor, w: Tensor, outputShape: readonly number[],\n     attributes: ConvAttributes): ProgramInfoLoader => {\n      const metadata = createPackedIm2ColProgramMetadata(attributes.cacheKey);\n      return {\n        ...metadata,\n        get: () => createPackedIm2ColProgramInfo(inferenceHandler, metadata, x, w, outputShape, attributes)\n      };\n    };\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Tensor} from '../../../tensor';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, ProgramInfoLoader, ProgramMetadata, TextureType} from '../types';\n\nimport {ConvAttributes} from './conv';\n\nconst createIm2ColProgramMetadata = (cacheHint: string) => ({\n  name: 'Im2Col',\n  inputNames: ['X'],\n  inputTypes: [TextureType.unpacked],\n  cacheHint,\n});\n\nconst createIm2ColProgramInfo =\n    (inferenceHandler: WebGLInferenceHandler, metadata: ProgramMetadata, x: Tensor, w: Tensor,\n     outputShape: readonly number[], attributes: ConvAttributes): ProgramInfo => {\n      const xshape = x.dims;\n      const wshape = w.dims;\n\n      const rank = outputShape.length;\n      const im2colDims = calculateIm2ColDims(xshape, wshape, outputShape, 4);\n\n      const shaderSource = `\n        const int XC = ${xshape[1]};\n        const int XH = ${xshape[2]};\n        const int XW = ${xshape[3]};\n        const int KH = ${attributes.kernelShape[0]};\n        const int KW = ${attributes.kernelShape[1]};\n        const int dilationH = ${attributes.dilations[0]};\n        const int dilationW = ${attributes.dilations[1]};\n        const int strideH = ${attributes.strides[0]};\n        const int strideW = ${attributes.strides[1]};\n        const int padH = ${attributes.pads[0]};\n        const int padW = ${attributes.pads[1]};\n        const int KHKW = KH*KW;\n        const int XCKHKW = XC * KHKW;\n        const int outputChannels = 4;\n        vec4 process(int indices[${rank}]) {\n          int b  = indices[0]; // batch size\n          int oh = indices[1] * strideH - padH; //output height\n          int ow = indices[2] * strideW - padW; //output width\n          int p = indices[3] * outputChannels; //patch\n          vec4 value = vec4(0.0);\n          for(int i=0; i < outputChannels; ++i) {\n            if(p < XCKHKW) {\n              int patchC = p / KHKW;\n              int patchH = (p - patchC*KHKW) / KW;\n              int patchW = (p - patchC*KHKW) - patchH * KW;\n              int xh2 = oh + patchH * dilationH;\n              int xw2 = ow + patchW * dilationW;\n              int x[${xshape.length}];\n              x[0] = b;\n              x[1] = patchC;\n              x[2] = xh2;\n              x[3] = xw2;\n              if(xh2 >= 0 &&\n                  xh2 < XH &&\n                  xw2 >= 0 &&\n                  xw2 < XW) {\n                value[i] = _X(x);\n              }\n            }\n            ++p;\n          }\n          return value;\n        }\n        `;\n      return {\n        ...metadata,\n        output: {dims: im2colDims, type: x.type, textureType: TextureType.packedLastDimension},\n        shaderSource\n      };\n    };\n\nexport const createIm2ColProgramInfoLoader =\n    (inferenceHandler: WebGLInferenceHandler, x: Tensor, w: Tensor, outputShape: readonly number[],\n     attributes: ConvAttributes): ProgramInfoLoader => {\n      const metadata = createIm2ColProgramMetadata(attributes.cacheKey);\n      return {\n        ...metadata,\n        get: () => createIm2ColProgramInfo(inferenceHandler, metadata, x, w, outputShape, attributes)\n      };\n    };\n\n\nexport const calculateIm2ColDims =\n    (inputShape: readonly number[], kernelShape: readonly number[], outputShape: readonly number[], channels = 4):\n        number[] =>\n            [outputShape[0], outputShape[2], outputShape[3],\n             Math.ceil(inputShape[1] * kernelShape[2] * kernelShape[3] / channels)];\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {AttributeWithCacheKey, createAttributeWithCacheKey} from '../../../attribute-with-cache-key';\nimport {Graph} from '../../../graph';\nimport {OperatorImplementation, OperatorInitialization} from '../../../operators';\nimport {Tensor} from '../../../tensor';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, ProgramInfoLoader, ProgramMetadata, TextureType} from '../types';\n\nexport interface ImageScalerAttributes extends AttributeWithCacheKey {\n  scale: number;\n  bias: number[];\n}\n\nexport const imageScaler: OperatorImplementation<ImageScalerAttributes> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: ImageScalerAttributes): Tensor[] => {\n      validateInputs(inputs);\n      const output =\n          inferenceHandler.run(createImageScalerProgramInfoLoader(inferenceHandler, inputs, attributes), inputs);\n      return [output];\n    };\n\nexport const parseImageScalerAttributes: OperatorInitialization<ImageScalerAttributes> =\n    (node: Graph.Node): ImageScalerAttributes => {\n      const scale = node.attributes.getFloat('scale');\n      const bias = node.attributes.getFloats('bias');\n      return createAttributeWithCacheKey({scale, bias});\n    };\n\nconst imageScalerProgramMetadata = {\n  name: 'ImageScaler',\n  inputNames: ['X'],\n  inputTypes: [TextureType.unpacked],\n};\n\nconst createImageScalerProgramInfo =\n    (handler: WebGLInferenceHandler, metadata: ProgramMetadata, inputs: Tensor[], attributes: ImageScalerAttributes):\n        ProgramInfo => {\n          const outputShape = inputs[0].dims.slice();\n          const rank = outputShape.length;\n          const getBiasMethod = createGetBiasMethod(attributes.bias.length);\n          const shaderSource = `\n      ${getBiasMethod}\n      float process(int indices[${rank}]) {\n        return _X(indices) * scale + getBias(bias, indices[1]);\n      }`;\n          return {\n            ...metadata,\n            output: {dims: outputShape, type: inputs[0].type, textureType: TextureType.unpacked},\n            variables: [\n              {name: 'bias', type: 'float', arrayLength: attributes.bias.length, data: attributes.bias},\n              {name: 'scale', type: 'float', data: attributes.scale}\n            ],\n            shaderSource\n          };\n        };\n\nconst createImageScalerProgramInfoLoader =\n    (handler: WebGLInferenceHandler, inputs: Tensor[], attributes: ImageScalerAttributes): ProgramInfoLoader => {\n      const metadata = {...imageScalerProgramMetadata, cacheHint: attributes.cacheKey};\n      return {...metadata, get: () => createImageScalerProgramInfo(handler, metadata, inputs, attributes)};\n    };\n\nconst createGetBiasMethod = (numChannels: number): string => {\n  const codeLines: string[] = [`float getBias(float bias[${numChannels}], int channel) {`];\n  for (let i = 0; i < numChannels; ++i) {\n    if (i === 0) {\n      codeLines.push(\n          '\\t' +\n          `if (channel == ${i}) { return bias[${i}]; }`);\n    } else if (i === numChannels - 1) {\n      codeLines.push(\n          '\\t' +\n          `else { return bias[${i}]; }`);\n    } else {\n      codeLines.push(\n          '\\t' +\n          `else if (channel == ${i}) { return bias[${i}]; }`);\n    }\n  }\n  codeLines.push(\n      '\\t' +\n      '}');\n  return codeLines.join('\\n');\n};\n\nconst validateInputs = (inputs: Tensor[]): void => {\n  if (!inputs || inputs.length !== 1) {\n    throw new Error('ImageScaler requires 1 input.');\n  }\n  if (inputs[0].dims.length !== 4) {\n    throw new Error('Invalid input shape.');\n  }\n  if (inputs[0].type !== 'float32' && inputs[0].type !== 'float64') {\n    throw new Error('Invalid input type.');\n  }\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Graph} from '../../../graph';\nimport {OperatorImplementation, OperatorInitialization} from '../../../operators';\nimport {Tensor} from '../../../tensor';\nimport {getGlsl} from '../glsl-source';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, ProgramInfoLoader, ProgramMetadata, TextureType} from '../types';\n\nexport const instanceNormalization: OperatorImplementation<number> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], epsilon: number): Tensor[] => {\n      validateInputs(inputs);\n\n      const meanAndVariance = inferenceHandler.run(createMeanAndVarianceProgramInfoLoader(inputs[0]), inputs);\n      const output = inferenceHandler.run(\n          createComputeOutputProgramInfoLoader(inferenceHandler, inputs[0], epsilon, meanAndVariance.dims),\n          [inputs[0], meanAndVariance, inputs[1], inputs[2]]);\n      return [output];\n    };\n\nexport const parseInstanceNormalizationAttributes: OperatorInitialization<number> = (node: Graph.Node): number =>\n    node.attributes.getFloat('epsilon', 1e-5);\n\nconst meanAndVarianceProgramMetadata = {\n  name: 'InstanceNormalization_MeanAndVariance',\n  inputNames: ['X'],\n  inputTypes: [TextureType.unpacked],\n};\n\nconst createMeanAndVarianceProgramInfo = (metadata: ProgramMetadata, input: Tensor): ProgramInfo => {\n  const xDims = input.dims.slice();\n  const channel = xDims[1];\n  const channelSize = xDims[2] * xDims[3];\n  const outputShape = [xDims[0], channel];\n\n  const shaderSource = `\n      vec4 process(int[2] indices) {\n        vec4 v = vec4(0.0);\n        int a[4];\n        a[0] = indices[0];\n        a[1] = indices[1];\n        float temp = 0.0;\n        for(int a2=0; a2<${xDims[2]}; a2++) {\n          a[2] = a2;\n          for(int a3=0; a3<${xDims[3]}; a3++) {\n            a[3] = a3;\n            float x = _X(a);\n            temp += x;\n          }\n        }\n        float mean = temp / float(${channelSize});\n        temp = 0.0;\n        for(int a2=0; a2<${xDims[2]}; a2++) {\n          a[2] = a2;\n          for(int a3=0; a3<${xDims[3]}; a3++) {\n            a[3] = a3;\n            float x = _X(a);\n            temp += (x - mean) * (x - mean);\n          }\n        }\n        v.r = mean;\n        v.g = temp / float(${channelSize});\n\n        return v;\n      }`;\n  return {\n    ...metadata,\n    output: {dims: outputShape, type: input.type, textureType: TextureType.packedLastDimension},\n    shaderSource\n  };\n};\n\nconst createMeanAndVarianceProgramInfoLoader = (input: Tensor): ProgramInfoLoader => ({\n  ...meanAndVarianceProgramMetadata,\n  get: () => createMeanAndVarianceProgramInfo(meanAndVarianceProgramMetadata, input)\n});\n\nconst computeOutputProgramMetadata = {\n  name: 'InstanceNormalization_ComputeOutput',\n  inputNames: ['X', 'MeanAndVariance', 'Scale', 'B'],\n  inputTypes: [TextureType.unpacked, TextureType.packedLastDimension, TextureType.unpacked, TextureType.unpacked],\n};\n\nconst createComputeOutputProgramInfo =\n    (inferenceHandler: WebGLInferenceHandler, metadata: ProgramMetadata, input: Tensor, epsilon: number,\n     meanAndVarianceShape: readonly number[]): ProgramInfo => {\n      const glsl = getGlsl(inferenceHandler.session.backend.glContext.version);\n      const [textureWidth, textureHeight] =\n          inferenceHandler.calculateTextureWidthAndHeight(meanAndVarianceShape, TextureType.packedLastDimension);\n      const [meanAndVarianceWidth, meanAndVarianceHeight] = [textureWidth / 4, textureHeight];\n      const shaderSource = `\n      vec4 get_MeanAndVariance(int[2] mv) {\n        int offset = indicesToOffset_MeanAndVariance(mv);\n        vec2 coords = offsetToCoords(offset, ${meanAndVarianceWidth}, ${meanAndVarianceHeight});\n        return ${glsl.texture2D}(MeanAndVariance, coords);\n      }\n\n      float process(int[4] indices) {\n        int mv[2];\n        mv[0] = indices[0];\n        mv[1] = indices[1];\n        vec4 mean_and_variance = get_MeanAndVariance(mv);\n        float mean = mean_and_variance.r;\n        float variance = mean_and_variance.g;\n\n        int sb[1];\n        sb[0] = indices[1];\n        float scale = _Scale(sb);\n        float b = _B(sb);\n\n        return scale * (_X(indices) - mean) / sqrt(variance + epsilon) + b;\n      }`;\n      return {\n        ...metadata,\n        output: {dims: input.dims, type: input.type, textureType: TextureType.unpacked},\n        variables: [{name: 'epsilon', type: 'float', data: epsilon}],\n        shaderSource\n      };\n    };\n\nconst createComputeOutputProgramInfoLoader =\n    (inferenceHandler: WebGLInferenceHandler, input: Tensor, epsilon: number, meanAndVarianceShape: readonly number[]):\n        ProgramInfoLoader => {\n          const metadata = {...computeOutputProgramMetadata, cacheHint: `${epsilon}`};\n          return {\n            ...metadata,\n            get: () => createComputeOutputProgramInfo(inferenceHandler, metadata, input, epsilon, meanAndVarianceShape)\n          };\n        };\n\nconst validateInputs = (inputs: Tensor[]): void => {\n  if (!inputs || inputs.length !== 3) {\n    throw new Error('InstanceNormalization requires 3 inputs.');\n  }\n\n  const X = inputs[0];\n  const scale = inputs[1];\n  const B = inputs[2];\n\n  // input should at least have three dimensions - N,C,dim1,...,dimn\n  // other inputs can have only one dimensions\n  if (X.dims.length < 3 || scale.dims.length !== 1 || B.dims.length !== 1) {\n    throw new Error('Invalid input shape.');\n  }\n  if (scale.dims[0] !== X.dims[1] || B.dims[0] !== X.dims[1]) {\n    throw new Error('Input shapes are mismatched.');\n  }\n  if ((X.type !== 'float32' && X.type !== 'float64') || (scale.type !== 'float32' && scale.type !== 'float64') ||\n      (B.type !== 'float32' && B.type !== 'float64')) {\n    throw new Error('Invalid input type.');\n  }\n  if (inputs[0].dims.length !== 4) {\n    throw new Error('Only support 4-D input shape.');\n  }\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {AttributeWithCacheKey, createAttributeWithCacheKey} from '../../../attribute-with-cache-key';\nimport {Graph} from '../../../graph';\nimport {OperatorImplementation, OperatorInitialization} from '../../../operators';\nimport {Tensor} from '../../../tensor';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, ProgramInfoLoader, TextureType} from '../types';\n\nexport interface LrnAttributes extends AttributeWithCacheKey {\n  alpha: number;\n  beta: number;\n  bias: number;\n  size: number;\n}\n\nexport const lrn: OperatorImplementation<LrnAttributes> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: LrnAttributes): Tensor[] => {\n      validateInputs(inputs);\n\n      // if (inferenceHandler.session.pack) {\n      //   return [inferenceHandler.run(createPackedLrnProgramInfoLoader(inferenceHandler, inputs, attributes),\n      //   inputs)];\n      // } else {\n      return [inferenceHandler.run(createLrnProgramInfoLoader(inputs, attributes), inputs)];\n      //}\n    };\n\nexport const parseLrnAttributes: OperatorInitialization<LrnAttributes> = (node: Graph.Node): LrnAttributes => {\n  const alpha = node.attributes.getFloat('alpha', 0.0001);\n  const beta = node.attributes.getFloat('beta', 0.75);\n  const bias = node.attributes.getFloat('bias', 1.0);\n  const size = node.attributes.getInt('size');\n\n  return createAttributeWithCacheKey({alpha, beta, bias, size});\n};\n\nconst lrnProgramMetadata = {\n  name: 'LRN',\n  inputNames: ['X'],\n  inputTypes: [TextureType.unpacked]\n};\n\nfunction createLrnProgramInfo(inputs: Tensor[], attributes: LrnAttributes): ProgramInfo {\n  const C = inputs[0].dims[1];\n  const rank = inputs[0].dims.length;\n  const from = -Math.floor((attributes.size - 1) / 2);\n  const to = Math.ceil((attributes.size - 1) / 2);\n  const alpha = `float(${attributes.alpha}) / float(${attributes.size})`;\n  const bias = `float(${attributes.bias})`;\n  const beta = `float(${attributes.beta})`;\n\n  const shaderSource = `\n    float process(int indices[${rank}]) {\n        int c = indices[1];\n        float x = _X(indices);\n        float square_sum = 0.0;\n\n        for (int i = ${from}; i <= ${to}; i++) {\n          int idx = c + i;\n          if (c >= 0 && c < ${C}) {\n            indices[1] = idx;\n            float j = _X(indices);\n            square_sum += j * j;\n          }\n        }\n        return x / pow(${bias} + ${alpha} * square_sum, ${beta});\n    }`;\n  return {\n    ...lrnProgramMetadata,\n    cacheHint: attributes.cacheKey,\n    output: {dims: inputs[0].dims, type: inputs[0].type, textureType: TextureType.unpacked},\n    shaderSource,\n  };\n}\n\nexport function createLrnProgramInfoLoader(inputs: Tensor[], attributes: LrnAttributes): ProgramInfoLoader {\n  return {...lrnProgramMetadata, cacheHint: attributes.cacheKey, get: () => createLrnProgramInfo(inputs, attributes)};\n}\n\nconst validateInputs = (inputs: Tensor[]): void => {\n  if (!inputs || inputs.length !== 1) {\n    throw new Error('LRN requires 1 input.');\n  }\n  if (inputs[0].dims.length !== 4) {\n    throw new Error('currently only support LRN for input with \"NCHW\" format');\n  }\n  if (inputs[0].type !== 'float32') {\n    throw new Error('input should be float type');\n  }\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Tensor} from '../../../tensor';\nimport {BroadcastUtil, ShapeUtil} from '../../../util';\nimport {getGlsl} from '../glsl-source';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, ProgramInfoLoader, ProgramMetadata, TextureType} from '../types';\nimport {getCoordsDataType, getGlChannels} from '../utils';\n\nimport {getActivationSnippet, InternalActivationAttributes} from './fuse-utils';\nimport {getBiasForMatmul} from './matmul';\n\nconst createPackedMatmulProgramMetadata = (hasBias: boolean, cacheHint: string) => ({\n  name: 'MatMul (packed)',\n  inputNames: hasBias ? ['A', 'B', 'Bias'] : ['A', 'B'],\n  inputTypes: hasBias ? [TextureType.packed, TextureType.packed, TextureType.packed] :\n                        [TextureType.packed, TextureType.packed],\n  cacheHint\n});\n\nconst createPackedMatmulProgramInfo =\n    (inferenceHandler: WebGLInferenceHandler, metadata: ProgramMetadata, inputs: Tensor[],\n     activationAttributes: InternalActivationAttributes): ProgramInfo => {\n      const hasBias = inputs.length > 2;\n      const processBias = hasBias ? 'value += getBiasForMatmul();' : '';\n      const aShape = inputs[0].dims;\n      const bShape = inputs[1].dims;\n      const outputShape = BroadcastUtil.calcShape(aShape, bShape, true);\n      const isBroadcast = !ShapeUtil.areEqual(inputs[0].dims, inputs[1].dims);\n\n      if (!outputShape) {\n        throw new Error('Can\\'t use matmul on the given tensors');\n      }\n      const sharedDim = aShape[aShape.length - 1];\n      const sharedDimIndex = Math.ceil(sharedDim / 2);\n      const aRank = aShape.length;\n      const bRank = bShape.length;\n\n      const glsl = getGlsl(inferenceHandler.session.backend.glContext.version);\n      const coordsDataType = getCoordsDataType(outputShape.length);\n      const outRank = outputShape.length;\n      const allGlChannels = getGlChannels();\n      const {activationFunction, applyActivation} = getActivationSnippet(activationAttributes);\n\n      const getBiasForMatmulSnippet =\n          hasBias ? `${getBiasForMatmul(coordsDataType, allGlChannels, inputs[2].dims, outputShape, true)}` : '';\n\n      const getBcastedSamplerForMatmulSnippet =\n          isBroadcast ? `${getBcastSamplerForMatmul(coordsDataType, allGlChannels, inputs, outputShape)}` : '';\n\n      const getSamplerAInLoopSnippet = isBroadcast ? 'getAAtOutCoordsMatmul(i)' : `getA(${getA(allGlChannels, aRank)})`;\n      const getSamplerBInLoopSnippet = isBroadcast ? 'getBAtOutCoordsMatmul(i)' : `getB(${getB(allGlChannels, bRank)})`;\n      const getOutputCoordsSnippet = isBroadcast ? '' : `${coordsDataType} rc =\n          getOutputCoords(); int lastDim = rc.${allGlChannels[outRank - 1]}; rc.${allGlChannels[outRank - 1]} =\n          rc.${allGlChannels[outRank - 2]}; rc.${allGlChannels[outRank - 2]} = lastDim;\n      `;\n      const shaderSource = `\n            ${getBcastedSamplerForMatmulSnippet}\n            ${getBiasForMatmulSnippet}\n            ${activationFunction}\n            void main() {\n              ${getOutputCoordsSnippet}\n\n              vec4 value = vec4(0);\n              for (int i = 0; i < ${sharedDimIndex}; i++) {\n                vec4 a = ${getSamplerAInLoopSnippet};\n                vec4 b = ${getSamplerBInLoopSnippet};\n\n                value += (a.rrbb * b.rgrg);\n                value += (a.ggaa * b.baba);\n              }\n              ${processBias}\n              ${applyActivation}\n              ${glsl.output} = value;\n            }`;\n      return {\n        ...metadata,\n        output: {dims: outputShape, type: inputs[0].type, textureType: TextureType.packed},\n        shaderSource,\n        hasMain: true\n      };\n    };\n\nexport const createPackedMatmulProgramInfoLoader =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[],\n     activationAttributes: InternalActivationAttributes): ProgramInfoLoader => {\n      const metadata = createPackedMatmulProgramMetadata(inputs.length > 2, activationAttributes.activationCacheKey);\n      return {\n        ...metadata,\n        get: () => createPackedMatmulProgramInfo(inferenceHandler, metadata, inputs, activationAttributes)\n      };\n    };\n\nfunction getBcastSamplerForMatmul(\n    coordsDataType: string, allGlChannels: readonly string[], inputs: Tensor[], outShape: readonly number[]): string {\n  let unpackedACoordsSnippet = [];\n  let unpackedBCoordsSnippet = [];\n\n  const inAShape = inputs[0].dims;\n  const inBShape = inputs[1].dims;\n\n  const inARank = inAShape.length;\n  const inBRank = inBShape.length;\n\n  const outRank = outShape.length;\n  const rankADiff = outRank - inARank;\n  const rankBDiff = outRank - inBRank;\n\n  unpackedACoordsSnippet = inAShape.map((s, i) => `coords.${allGlChannels[i + rankADiff]}`);\n  unpackedACoordsSnippet[inARank - 1] = 'i*2';\n  unpackedACoordsSnippet.join(', ');\n  unpackedBCoordsSnippet = inBShape.map((s, i) => `coords.${allGlChannels[i + rankBDiff]}`);\n  unpackedBCoordsSnippet[inBRank - 2] = 'i*2';\n  unpackedBCoordsSnippet.join(', ');\n\n  const broadcastADims = BroadcastUtil.getBroadcastDims(inAShape, outShape);\n  const broadcastBDims = BroadcastUtil.getBroadcastDims(inBShape, outShape);\n\n  const coordsASnippet = broadcastADims.map(d => `coords.${allGlChannels[d + rankADiff]} = 0;`).join('\\n');\n  const coordsBSnippet = broadcastBDims.map(d => `coords.${allGlChannels[d + rankBDiff]} = 0;`).join('\\n');\n  const swapDimSnippet = `int lastDim = coords.${allGlChannels[outRank - 1]};\n  coords.${allGlChannels[outRank - 1]} = coords.${allGlChannels[outRank - 2]};\n  coords.${allGlChannels[outRank - 2]} = lastDim;`;\n\n  const getBcastSamplerMatmulSource = `\nvec4 getAAtOutCoordsMatmul(int i) {\n  ${coordsDataType} coords = getOutputCoords();\n  ${swapDimSnippet}\n  ${coordsASnippet}\n  vec4 outputValue = getA(${unpackedACoordsSnippet});\n  return outputValue;\n}\n\nvec4 getBAtOutCoordsMatmul(int i) {\n  ${coordsDataType} coords = getOutputCoords();\n  ${swapDimSnippet}\n  ${coordsBSnippet}\n  vec4 outputValue = getB(${unpackedBCoordsSnippet});\n  return outputValue;\n}`;\n\n  return getBcastSamplerMatmulSource;\n}\n\nfunction getA(allGlChannels: string[], rank: number): string {\n  let res = '';\n  for (let i = 0; i < rank - 2; i++) {\n    res += `rc.${allGlChannels[i]}, `;\n  }\n  res += `rc.${allGlChannels[rank - 2]}, ` +\n      'i*2';\n  return res;\n}\n\nfunction getB(allGlChannels: string[], rank: number): string {\n  let res = '';\n  for (let i = 0; i < rank - 2; i++) {\n    res += `rc.${allGlChannels[i]}, `;\n  }\n  res += 'i*2, ' +\n      `rc.${allGlChannels[rank - 1]}`;\n  return res;\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Graph} from '../../../graph';\nimport {OperatorImplementation, OperatorInitialization} from '../../../operators';\nimport {Tensor} from '../../../tensor';\nimport {BroadcastUtil, ShapeUtil} from '../../../util';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, ProgramInfoLoader, ProgramMetadata, TextureType} from '../types';\nimport {getCoordsDataType, getGlChannels} from '../utils';\n\nimport {getActivationSnippet, InternalActivationAttributes, parseInternalActivationAttributes} from './fuse-utils';\nimport {createPackedMatmulProgramInfoLoader} from './matmul-pack';\n\nexport const matMul: OperatorImplementation<InternalActivationAttributes> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: InternalActivationAttributes): Tensor[] => {\n      validateInputs(inputs);\n\n      if (inferenceHandler.session.pack) {\n        return [inferenceHandler.run(\n            createPackedMatmulProgramInfoLoader(inferenceHandler, inputs, attributes), inputs)];\n      } else {\n        return [inferenceHandler.run(createMatmulProgramInfoLoader(inputs, attributes), inputs)];\n      }\n    };\n\nexport const parseMatMulAttributes: OperatorInitialization<InternalActivationAttributes> =\n    (node: Graph.Node): InternalActivationAttributes => parseInternalActivationAttributes(node.attributes);\n\nconst createMatmulProgramMetadata = (hasBias: boolean, cacheHint: string) => ({\n  name: 'MatMul',\n  inputNames: hasBias ? ['A', 'B', 'Bias'] : ['A', 'B'],\n  inputTypes: hasBias ? [TextureType.unpacked, TextureType.unpacked, TextureType.unpacked] :\n                        [TextureType.unpacked, TextureType.unpacked],\n  cacheHint\n});\n\nfunction createMatmulProgramInfo(\n    metadata: ProgramMetadata, inputs: Tensor[], activationAttributes: InternalActivationAttributes): ProgramInfo {\n  const aShape = inputs[0].dims;\n  const bShape = inputs[1].dims;\n  const outputShape = BroadcastUtil.calcShape(aShape, bShape, true);\n  if (!outputShape) {\n    throw new Error('Can\\'t use matmul on the given tensors');\n  }\n  const coordsDataType = getCoordsDataType(outputShape.length);\n  const allGlChannels = getGlChannels();\n  const {activationFunction, applyActivation} = getActivationSnippet(activationAttributes);\n\n  const hasBias = inputs.length > 2;\n  const processBias = hasBias ? 'value += getBiasForMatmul();' : '';\n  const getBiasForMatmulSnippet =\n      hasBias ? `${getBiasForMatmul(coordsDataType, allGlChannels, inputs[2].dims, outputShape, false)}` : '';\n\n  const rank = outputShape.length;\n  const arank = aShape.length;\n  const brank = bShape.length;\n  const sharedDim = aShape[aShape.length - 1];\n  const shaderSource = `\n    ${activationFunction}\n    ${getBiasForMatmulSnippet}\n    float process(int indices[${rank}]) {\n        int a[${arank}];\n        int b[${brank}];\n        bcastMatmulIndices_A(indices, a);\n        bcastMatmulIndices_B(indices, b);\n\n        float value;\n        for (int k=0; k<${sharedDim}; ++k) {\n            a[${arank - 1}] = k;\n            b[${brank - 2}] = k;\n            value += _A(a) * _B(b);\n        }\n        ${processBias}\n        ${applyActivation}\n        return value;\n    }`;\n  return {\n    ...metadata,\n    output: {dims: outputShape, type: inputs[0].type, textureType: TextureType.unpacked},\n    shaderSource,\n  };\n}\n\nexport function createMatmulProgramInfoLoader(\n    inputs: Tensor[], activationAttributes: InternalActivationAttributes): ProgramInfoLoader {\n  const metadata = createMatmulProgramMetadata(inputs.length > 2, activationAttributes.activationCacheKey);\n  return {...metadata, get: () => createMatmulProgramInfo(metadata, inputs, activationAttributes)};\n}\n\nconst validateInputs = (inputs: Tensor[]): void => {\n  if (!inputs || inputs.length !== 2) {\n    throw new Error('MatMul requires 2 inputs.');\n  }\n\n  if (inputs[0].dims[inputs[0].dims.length - 1] !== inputs[1].dims[inputs[1].dims.length - 2]) {\n    throw new Error('shared dimension does not match.');\n  }\n\n  if ((inputs[0].type !== 'float32' && inputs[0].type !== 'float64') ||\n      (inputs[1].type !== 'float32' && inputs[1].type !== 'float64')) {\n    throw new Error('inputs should be float type');\n  }\n\n  if (inputs[0].type !== inputs[1].type) {\n    throw new Error('inputs types should match');\n  }\n};\n\nexport function getBiasForMatmul(\n    coordsDataType: string, allGlChannels: readonly string[], inShape: readonly number[], outShape: readonly number[],\n    isPacked: boolean): string {\n  let unpackedCoordsSnippet = '';\n  const inRank = inShape.length;\n  const outRank = outShape.length;\n  const rankDiff = outRank - inRank;\n  if (outRank < 2 && inRank > 0) {\n    unpackedCoordsSnippet = 'coords';\n  } else {\n    unpackedCoordsSnippet = inShape.map((s, i) => `coords.${allGlChannels[i + rankDiff]}`).join(', ');\n  }\n  const broadcastDims = BroadcastUtil.getBroadcastDims(inShape, outShape);\n  const coordsSnippet = broadcastDims.map(d => `coords.${allGlChannels[d + rankDiff]} = 0;`).join('\\n');\n  const inSize = ShapeUtil.size(inShape);\n  const isInputScalar = inSize === 1;\n  let output = 'vec4(outputValue.xx, outputValue.yy)';\n  if (isInputScalar) {\n    output = 'vec4(outputValue.x)';\n  }\n  const getBiasForMatmulSource = isPacked ? `\nvec4 getBiasForMatmul() {\n  ${coordsDataType} coords = getOutputCoords();\n  ${coordsSnippet}\n  vec4 outputValue = getBias(${unpackedCoordsSnippet});\n  return ${output};\n}` :\n                                            `\nfloat getBiasForMatmul() {\n  ${coordsDataType} coords = getOutputCoords();\n  ${coordsSnippet}\n  return getBias(coords.x);\n}`;\n\n  return getBiasForMatmulSource;\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Tensor} from '../../../tensor';\nimport {getGlsl} from '../glsl-source';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, ProgramInfoLoader, TextureType} from '../types';\nimport {getCoordsDataType} from '../utils';\n\nimport {getChannels} from './packing-utils';\n\nconst packProgramMetadata = {\n  name: 'pack',\n  inputNames: ['A'],\n  inputTypes: [TextureType.unpackedReversed]\n};\n\nconst createPackProgramInfo = (handler: WebGLInferenceHandler, input: Tensor): ProgramInfo => {\n  const glsl = getGlsl(handler.session.backend.glContext.version);\n  const inputShape = input.dims;\n\n  const inputRank = inputShape.length;\n  // createTextureLayoutFromShape won't change output rank. Need to verify by running tests\n  const outputRank = input.dims.length;\n\n  const coordsDataType = getCoordsDataType(outputRank);\n  const channels = getChannels('rc', outputRank);\n  const setup = getSetup(outputRank, channels, inputShape[inputShape.length - 2], inputShape[inputShape.length - 1]);\n\n  let reversedInputWH;\n  if (inputRank === 0) {\n    reversedInputWH = [1, 1];\n  } else if (inputRank === 1) {\n    reversedInputWH = [inputShape[0], 1];\n  } else {\n    reversedInputWH = [inputShape[outputRank - 1], inputShape[outputRank - 2]];\n  }\n  const outOfBoundsCondition = getOutOfBoundsCondition(outputRank, reversedInputWH, channels);\n  const output = getOutput(inputShape, channels);\n\n  const shaderSource = `\n        void main() {\n          ${coordsDataType} rc = getOutputCoords();\n\n          if(${outOfBoundsCondition}) {\n            ${glsl.output} = vec4(0);\n          } else {\n            ${setup}\n\n            ${glsl.output} = vec4(${output});\n          }\n        }\n      `;\n  return {\n    ...packProgramMetadata,\n    hasMain: true,\n    output: {dims: input.dims, type: input.type, textureType: TextureType.packed},\n    shaderSource\n  };\n};\n\nexport const createPackProgramInfoLoader = (handler: WebGLInferenceHandler, input: Tensor): ProgramInfoLoader =>\n    ({...packProgramMetadata, get: () => createPackProgramInfo(handler, input)});\n\n/**\n * check output coordinate location and return false if it is outside input's width/height boundary\n */\nfunction getOutOfBoundsCondition(rank: number, shape: readonly number[], dims: string[]): string {\n  if (rank === 0) {\n    return 'false';\n  }\n  if (rank === 1) {\n    return `rc > ${shape[0]}`;\n  }\n\n  let cond = '';\n  for (let i = rank - 2; i < rank; i++) {\n    cond += `${dims[i]} >= ${shape[i - rank + 2]}`;\n    if (i < rank - 1) {\n      cond += '||';\n    }\n  }\n\n  return cond;\n}\n\n/**\n * code snippet to sample input texture with output coordiantes\n */\nfunction getOutput(shape: readonly number[], dims: string[]): string {\n  const rank = shape.length;\n\n  if (rank === 0) {\n    return 'getA(), 0, 0, 0';\n  }\n\n  if (rank === 1) {\n    return `getA(rc),\n            rc + 1 >= ${shape[0]} ? 0. : getA(rc + 1),\n            0, 0`;\n  }\n\n  const coord00 = 'r, c';\n  const coord01 = 'r, cp1';\n  const coord10 = 'rp1, c';\n  const coord11 = 'rp1, cp1';\n  let D = '';\n  if (rank > 2) {\n    for (let i = 0; i < rank - 2; ++i) {\n      D = D + `${dims[i]},`;\n    }\n  }\n  return `getA(${D}${coord00}),\n          rEdge ? 0. : getA(${D}${coord10}),\n          cEdge ? 0. : getA(${D}${coord01}),\n          rEdge || cEdge ? 0. : getA(${D}${coord11})`;\n}\n\n/**\n * code snippet to setup 4 coordinates and edge conditions\n */\nfunction getSetup(rank: number, dims: string[], rows: number, cols: number): string {\n  if (rank === 0 || rank === 1) {\n    return '';\n  }\n  // rank >= 2 for width+height pack.\n  else {\n    const setup = `\n    int r = ${dims[rank - 2]};\n    int c = ${dims[rank - 1]};\n    int rp1 = ${dims[rank - 2]} + 1;\n    int cp1 = ${dims[rank - 1]} + 1;\n    bool rEdge = rp1 >= ${cols};\n    bool cEdge = cp1 >= ${rows};\n    `;\n    return setup;\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {getGlChannels} from '../utils';\n\nexport function getVecChannels(name: string, rank: number): string[] {\n  return getGlChannels(rank).map(d => `${name}.${d}`);\n}\n\nexport function getChannels(name: string, rank: number): string[] {\n  if (rank === 1) {\n    return [name];\n  }\n  return getVecChannels(name, rank);\n}\n\nexport function unpackFromChannel(): string {\n  return `\n    float getChannel(vec4 frag, int dim) {\n      int modCoord = imod(dim, 2);\n      return modCoord == 0 ? frag.r : frag.g;\n    }\n\n    float getChannel(vec4 frag, vec2 innerDims) {\n      vec2 modCoord = mod(innerDims, 2.);\n      return modCoord.x == 0. ?\n        (modCoord.y == 0. ? frag.r : frag.g) :\n        (modCoord.y == 0. ? frag.b : frag.a);\n    }\n  `;\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {AttributeWithCacheKey, createAttributeWithCacheKey} from '../../../attribute-with-cache-key';\nimport {Graph} from '../../../graph';\nimport {OperatorImplementation, OperatorInitialization} from '../../../operators';\nimport {Tensor} from '../../../tensor';\nimport {ShapeUtil} from '../../../util';\nimport {getGlsl, Glsl} from '../glsl-source';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, TextureType} from '../types';\n\nexport interface PadAttributes extends AttributeWithCacheKey {\n  readonly mode: string;\n  readonly pads: number[];\n  readonly value: number;\n}\n\nconst padProgramMetadata = {\n  name: 'Pad',\n  inputNames: ['A'],\n  inputTypes: [TextureType.unpacked],\n};\n\nexport const padV2: OperatorImplementation<PadAttributes> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: PadAttributes): Tensor[] => {\n      validateInputsV2(inputs);\n      const output = inferenceHandler.run(\n          {\n            ...padProgramMetadata,\n            cacheHint: attributes.cacheKey,\n            get: () => createPadProgramInfo(inferenceHandler, inputs[0], attributes)\n          },\n          inputs);\n      return [output];\n    };\n\nexport const parsePadAttributesV2: OperatorInitialization<PadAttributes> = (node: Graph.Node): PadAttributes => {\n  const mode = node.attributes.getString('mode', 'constant');\n  const value = node.attributes.getFloat('value', 0.0);\n  const pads = node.attributes.getInts('pads');\n  return createAttributeWithCacheKey({mode, value, pads});\n};\n\nexport const padV11: OperatorImplementation<string> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], mode: string): Tensor[] => {\n      validateInputsV11(inputs);\n      const attrubutes = generatePadAttributesFromInputs(inferenceHandler, inputs, mode);\n      return padV2(inferenceHandler, [inputs[0]], attrubutes);\n    };\n\nexport const parsePadAttributesV11: OperatorInitialization<string> = (node: Graph.Node): string =>\n    node.attributes.getString('mode', 'constant');\n\nconst generatePadAttributesFromInputs =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], mode: string): PadAttributes => {\n      if (!inferenceHandler.session.isInitializer(inputs[1].dataId) ||\n          (inputs.length >= 3 && !inferenceHandler.session.isInitializer(inputs[2].dataId))) {\n        throw new Error('dynamic pad attributes are not allowed');\n      }\n\n      const pads = Array.from(inputs[1].integerData);\n      const value = (inputs.length >= 3) ? inputs[2].floatData[0] : 0.0;\n\n      return createAttributeWithCacheKey({mode, pads, value});\n    };\n\nconst createPadProgramInfo =\n    (inferenceHandler: WebGLInferenceHandler, input: Tensor, attributes: PadAttributes): ProgramInfo => {\n      const outputShape = ShapeUtil.padShape(input.dims.slice(), attributes.pads);\n      const rank = outputShape.length;\n      const padFunction = getPadFunction(inferenceHandler, input, attributes);\n      const shaderSource = `\n      ${padFunction}\n      float process(int[${rank}] indices) {\n          return padA(indices);\n      }`;\n      return {\n        name: 'Pad',\n        inputNames: ['A'],\n        inputTypes: [TextureType.unpacked],\n        output: {dims: outputShape, type: input.type, textureType: TextureType.unpacked},\n        shaderSource\n      };\n    };\n\nconst validateInputsV2 = (inputs: Tensor[]): void => {\n  if (!inputs || inputs.length !== 1) {\n    throw new Error('Pad requires 1 input');\n  }\n  if (inputs[0].type !== 'float32' && inputs[0].type !== 'float64') {\n    throw new Error('Invalid input type.');\n  }\n};\n\nconst validateInputsV11 = (inputs: Tensor[]): void => {\n  if (!inputs || (inputs.length !== 2 && inputs.length !== 3)) {\n    throw new Error('Pad requires 2 or 3 inputs');\n  }\n  if (inputs[1].type !== 'int32') {\n    throw new Error('Invalid input type.');\n  }\n  if (inputs.length >= 3 && inputs[2].type === 'string') {\n    throw new Error('Invalid input type.');\n  }\n};\n\nconst getPadFunction = (inferenceHandler: WebGLInferenceHandler, input: Tensor, attributes: PadAttributes): string => {\n  const glsl = getGlsl(inferenceHandler.session.backend.glContext.version);\n  const [width, height] = inferenceHandler.calculateTextureWidthAndHeight(input.dims, TextureType.unpacked);\n  const strides = ShapeUtil.computeStrides(input.dims);\n\n  switch (attributes.mode) {\n    case 'constant':\n      return getPadConstant(glsl, input.dims, strides, width, height, attributes.pads, attributes.value);\n    case 'reflect':\n      return getPadReflect(glsl, input.dims, strides, width, height, attributes.pads);\n    case 'edge':\n      return getPadEdge(glsl, input.dims, strides, width, height, attributes.pads);\n    default:\n      throw new Error('Invalid mode');\n  }\n};\n\nconst getPadConstant =\n    (glsl: Glsl, shape: readonly number[], strides: readonly number[], width: number, height: number, pads: number[],\n     value: number): string => {\n      const rank = shape.length;\n      let block = '';\n      for (let i = rank - 1; i >= 0; --i) {\n        block += `\n        k = m[${i}] - ${pads[i]};\n        if (k < 0)  return constant;\n        if (k >= ${shape[i]}) return constant;\n        offset += k * ${strides[i]};\n        `;\n      }\n      return `\n      float padA(int m[${rank}]) {\n        const float constant = float(${value});\n        int offset = 0;\n        int k = 0;\n        ${block}\n        vec2 coords = offsetToCoords(offset, ${width}, ${height});\n        float value = getColorAsFloat(${glsl.texture2D}(A, coords));\n        return value;\n      }\n      `;\n    };\n\nconst getPadReflect =\n    (glsl: Glsl, shape: readonly number[], strides: readonly number[], width: number, height: number, pads: number[]):\n        string => {\n          const rank = shape.length;\n\n          let block = '';\n          for (let i = rank - 1; i >= 0; --i) {\n            block += `\n        k = m[${i}] - ${pads[i]};\n        if (k < 0) { k = -k; }\n        {\n          const int _2n_1 = ${2 * (shape[i] - 1)};\n          k = int( mod( float(k), float(_2n_1) ) ) ;\n          if(k >= ${shape[i]}) { k = _2n_1 - k; }\n        }\n        offset += k * ${strides[i]};\n        `;\n          }\n          return `\n      float padA(int m[${rank}]) {\n        int offset = 0;\n        int k = 0;\n        ${block}\n        vec2 coords = offsetToCoords(offset, ${width}, ${height});\n        float value = getColorAsFloat(${glsl.texture2D}(A, coords));\n        return value;\n      }\n      `;\n        };\n\nconst getPadEdge =\n    (glsl: Glsl, shape: readonly number[], strides: readonly number[], width: number, height: number, pads: number[]):\n        string => {\n          const rank = shape.length;\n\n          let block = '';\n          for (let i = rank - 1; i >= 0; --i) {\n            block += `\n        k = m[${i}] - ${pads[i]};\n        if (k < 0)  k = 0;\n        if (k >= ${shape[i]}) k = ${shape[i] - 1};\n        offset += k * ${strides[i]};\n      `;\n          }\n          return `\n      float padA(int m[${rank}]) {\n        int offset = 0;\n        int k = 0;\n        ${block}\n        vec2 coords = offsetToCoords(offset, ${width}, ${height});\n        float value = getColorAsFloat(${glsl.texture2D}(A, coords));\n        return value;\n      }\n      `;\n        };\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {AttributeWithCacheKey, createAttributeWithCacheKey} from '../../../attribute-with-cache-key';\nimport {Graph} from '../../../graph';\nimport {OperatorImplementation, OperatorInitialization} from '../../../operators';\nimport {Tensor} from '../../../tensor';\nimport {PoolConvUtil, ShapeUtil} from '../../../util';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, ProgramMetadata, TextureType} from '../types';\n\nexport interface AveragePoolAttributes extends AttributeWithCacheKey {\n  readonly autoPad: string;\n  readonly ceilMode: number;\n  readonly countIncludePad: boolean;\n  readonly kernelShape: readonly number[];\n  readonly strides: readonly number[];\n  readonly pads: readonly number[];\n}\n\nexport const averagePool: OperatorImplementation<AveragePoolAttributes> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: AveragePoolAttributes): Tensor[] => {\n      validateInputs(inputs);\n      const metadata =\n          {name: 'AveragePool', inputNames: ['X'], inputTypes: [TextureType.unpacked], cacheHint: attributes.cacheKey};\n      const output = inferenceHandler.run(\n          {...metadata, get: () => createAveragePoolProgramInfo(inputs, metadata, false, attributes)}, inputs);\n      return [output];\n    };\n\nexport const parseAveragePoolAttributes: OperatorInitialization<AveragePoolAttributes> =\n    (node: Graph.Node): AveragePoolAttributes => {\n      const autoPad = node.attributes.getString('auto_pad', 'NOTSET');\n      const ceilMode = node.attributes.getInt('ceil_mode', 0);\n      const countIncludePad = (node.attributes.getInt('count_include_pad', 0) === 0 ? false : true);\n      const kernelShape = node.attributes.getInts('kernel_shape');\n      const strides = node.attributes.getInts('strides', []);\n      const pads = node.attributes.getInts('pads', []);\n\n      // TODO: support attribute 'ceil_mode'\n      if (ceilMode !== 0) {\n        throw new Error('using ceil() in shape computation is not yet supported for AveragePool');\n      }\n\n      return createAttributeWithCacheKey({autoPad, ceilMode, countIncludePad, kernelShape, strides, pads});\n    };\n\nconst createAveragePoolProgramInfo =\n    (inputs: Tensor[], metadata: ProgramMetadata, isGlobalOperator: boolean, attributes: AveragePoolAttributes):\n        ProgramInfo => {\n          const [adjustedAttributes, outputShape] =\n              getAdjustedPoolAttributesAndOutputShape(inputs, attributes, isGlobalOperator);\n          const kernelSize = ShapeUtil.size(adjustedAttributes.kernelShape);\n          const op1 = 'value += _X(x);';\n          let op2 = '';\n          if (adjustedAttributes.countIncludePad) {\n            op2 += `value /= float(${kernelSize});`;\n          } else {\n            op2 += `value /= float(${kernelSize} - pad);`;\n          }\n          const poolingCode = generatePoolingCode(inputs[0].dims, adjustedAttributes, op1, op2, '0.0');\n          const shaderSource = `\n        ${poolingCode}\n      `;\n          return {\n            ...metadata,\n            output: {dims: outputShape, type: inputs[0].type, textureType: TextureType.unpacked},\n            shaderSource\n          };\n        };\n\nexport const globalAveragePool: OperatorImplementation<AveragePoolAttributes> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: AveragePoolAttributes): Tensor[] => {\n      validateInputs(inputs);\n      const metadata = {\n        name: 'GlobalAveragePool',\n        inputNames: ['X'],\n        inputTypes: [TextureType.unpacked],\n        cacheHint: `${attributes.countIncludePad}`\n      };\n      const output = inferenceHandler.run(\n          {...metadata, get: () => createAveragePoolProgramInfo(inputs, metadata, true, attributes)}, inputs);\n      return [output];\n    };\n\nexport const parseGlobalAveragePoolAttributes: OperatorInitialization<AveragePoolAttributes> =\n    (node: Graph.Node): AveragePoolAttributes => {\n      const countIncludePad = (node.attributes.getInt('count_include_pad', 0) === 0 ? false : true);\n      return createAttributeWithCacheKey(\n          {autoPad: '', ceilMode: 0, countIncludePad, kernelShape: [], strides: [], pads: []});\n    };\n\nexport interface MaxPoolAttributes extends AveragePoolAttributes {\n  readonly storageOrder: number;\n  readonly dilations: number[];\n}\n\nexport const maxPool: OperatorImplementation<MaxPoolAttributes> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: MaxPoolAttributes): Tensor[] => {\n      validateInputs(inputs);\n      const metadata =\n          {name: 'MaxPool', inputNames: ['X'], inputTypes: [TextureType.unpacked], cacheHint: attributes.cacheKey};\n      const output = inferenceHandler.run(\n          {...metadata, get: () => createMaxPoolProgramInfo(inputs, metadata, false, attributes)}, inputs);\n      return [output];\n    };\n\nexport const parseMaxPoolAttributes: OperatorInitialization<MaxPoolAttributes> =\n    (node: Graph.Node): MaxPoolAttributes => {\n      const autoPad = node.attributes.getString('auto_pad', 'NOTSET');\n      const ceilMode = node.attributes.getInt('ceil_mode', 0);\n      const kernelShape = node.attributes.getInts('kernel_shape');\n      const strides = node.attributes.getInts('strides', []);\n      const pads = node.attributes.getInts('pads', []);\n      const storageOrder = node.attributes.getInt('storage_order', 0);\n      const dilations = node.attributes.getInts('dilations', []);\n\n      // TODO: support attribute 'ceil_mode' and 'storage_order'\n      if (storageOrder !== 0) {\n        throw new Error('column major storage order is not yet supported for MaxPool');\n      }\n      if (ceilMode !== 0) {\n        throw new Error('using ceil() in shape computation is not yet supported for MaxPool');\n      }\n\n      return createAttributeWithCacheKey(\n          {autoPad, ceilMode, countIncludePad: false, kernelShape, strides, pads, storageOrder, dilations});\n    };\n\nconst createMaxPoolProgramInfo =\n    (inputs: Tensor[], metadata: ProgramMetadata, isGlobalOperator: boolean, attributes: MaxPoolAttributes):\n        ProgramInfo => {\n          const [adjustedAttributes, outputShape] =\n              getAdjustedPoolAttributesAndOutputShape(inputs, attributes, isGlobalOperator);\n          const op1 = `\n      value = max(_X(x), value);\n    `;\n          const op2 = '';\n          const poolingCode = generatePoolingCode(inputs[0].dims, adjustedAttributes, op1, op2, '-1e5');\n          const shaderSource = `\n      ${poolingCode}\n    `;\n          return {\n            ...metadata,\n            output: {dims: outputShape, type: inputs[0].type, textureType: TextureType.unpacked},\n            shaderSource\n          };\n        };\n\nconst getAdjustedPoolAttributesAndOutputShape =\n    (inputs: Tensor[], attributes: AveragePoolAttributes|MaxPoolAttributes, isGlobalOperator: boolean):\n        [AveragePoolAttributes|MaxPoolAttributes, number[]] => {\n          const inputShape = inputs[0].dims.slice();\n          const hasDilations = Object.hasOwnProperty.call(attributes, 'dilations');\n          const kernelShape = attributes.kernelShape.slice();\n          const strides = attributes.strides.slice();\n          const dilations: number[] = hasDilations ? (attributes as MaxPoolAttributes).dilations.slice() : [];\n          const pads = attributes.pads.slice();\n          PoolConvUtil.adjustPoolAttributes(isGlobalOperator, inputShape, kernelShape, strides, dilations, pads);\n\n          const outputShape = PoolConvUtil.computePoolOutputShape(\n              isGlobalOperator, inputShape, strides, dilations, kernelShape, pads, attributes.autoPad);\n\n          const newAttributes = Object.assign({}, attributes);\n          if (hasDilations) {\n            Object.assign(newAttributes, {kernelShape, strides, pads, dilations, cacheKey: attributes.cacheKey});\n          } else {\n            Object.assign(newAttributes, {kernelShape, strides, pads, cacheKey: attributes.cacheKey});\n          }\n          return [newAttributes, outputShape];\n        };\n\nconst globalMaxPoolAttributes = {\n  autoPad: '',\n  ceilMode: 0,\n  countIncludePad: false,\n  kernelShape: [],\n  strides: [],\n  pads: [],\n  storageOrder: 0,\n  dilations: [],\n  cacheKey: ''\n};\n\nconst globalMaxPoolMetadata = {\n  name: 'GlobalMaxPool',\n  inputNames: ['X'],\n  inputTypes: [TextureType.unpacked]\n};\n\nexport const globalMaxPool = (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[]): Tensor[] => {\n  validateInputs(inputs);\n  const output = inferenceHandler.run(\n      {\n        ...globalMaxPoolMetadata,\n        get: () => createMaxPoolProgramInfo(inputs, globalMaxPoolMetadata, true, globalMaxPoolAttributes)\n      },\n      inputs);\n  return [output];\n};\n\nconst validateInputs = (inputs: Tensor[]): void => {\n  if (!inputs || inputs.length !== 1) {\n    throw new Error('Pool ops requires 1 input.');\n  }\n  if (inputs[0].type !== 'float32' && inputs[0].type !== 'float64') {\n    throw new Error('Invalid input type.');\n  }\n};\n\nconst generatePoolingCode =\n    (inputDims: readonly number[], attributes: AveragePoolAttributes, op1: string, op2: string, start: string):\n        string => {\n          const rank = inputDims.length;\n          if (attributes.kernelShape.length <= 2) {\n            const kw = attributes.kernelShape[attributes.kernelShape.length - 1];\n            const sw = attributes.strides[attributes.strides.length - 1];\n            const pwStart = attributes.pads[attributes.pads.length / 2 - 1];\n            const pwEnd = attributes.pads[attributes.pads.length - 1];\n            const dimW = inputDims[rank - 1];\n            let codeW = '';\n            let codeH = '';\n            let codeHEnd = '';\n            if (pwStart + pwEnd !== 0) {\n              codeW = `\n          for (int i = 0; i < ${kw}; i++) {\n            x[${rank} - 1] = indices[${rank} - 1] * ${sw} - ${pwStart} + i;\n            if (x[${rank} - 1] < 0 || x[${rank} - 1] >= ${dimW}) {\n              pad++;\n              continue;\n            }\n            ${op1}\n          }`;\n            } else {\n              codeW = `\n          for (int i = 0; i < ${kw}; i++) {\n            x[${rank} - 1] = indices[${rank} - 1] * ${sw} - ${pwStart} + i;\n            ${op1}\n          }`;\n            }\n\n            if (attributes.kernelShape.length === 2) {\n              const kh = attributes.kernelShape[attributes.kernelShape.length - 2];\n              const sh = attributes.strides[attributes.strides.length - 2];\n              const phStart = attributes.pads[attributes.pads.length / 2 - 2];\n              const phEnd = attributes.pads[attributes.pads.length - 2];\n              const dimH = inputDims[rank - 2];\n              if (phStart + phEnd !== 0) {\n                codeH = `\n            for (int j = 0; j < ${kh}; j++) {\n              x[${rank} - 2] = indices[${rank} - 2] * ${sh} - ${phStart} + j;\n              if (x[${rank} - 2] < 0 || x[${rank} - 2] >= ${dimH}) {\n                pad+= ${kw};\n                continue;\n              }\n          `;\n              } else {\n                codeH = `\n            for (int j = 0; j < ${kh}; j++) {\n              x[${rank} - 2] = indices[${rank} - 2] * ${sh} - ${phStart} + j;\n            `;\n              }\n              codeHEnd = `\n          }\n        `;\n            }\n\n            const poolingCode = `\n        float process(int indices[${rank}]) {\n          int x[${rank}];\n          copyVec(indices, x);\n\n          float value = ${start};\n          int pad = 0;\n          ${codeH}\n          ${codeW}\n          ${codeHEnd}\n          ${op2}\n          return value;\n        }\n      `;\n            return poolingCode;\n          } else {\n            const kernelSize = ShapeUtil.size(attributes.kernelShape);\n            const kernelStrides = ShapeUtil.computeStrides(attributes.kernelShape);\n            const stridesRank = kernelStrides.length;\n            const padsRank = attributes.pads.length;\n            const offsetToIndicesFunction = offsetToIndices(stridesRank);\n            const copyInputDims = copyArray(inputDims, 'inputDims');\n            const copyPads = copyArray(attributes.pads, 'pads');\n            const copyKernelStrides = copyArray(kernelStrides, 'kernelStrides');\n            const copyStrides = copyArray(attributes.strides, 'strides');\n            const hasPads = attributes.pads.reduce((sum, cur) => sum + cur);\n            let padCode = '';\n            if (hasPads) {\n              padCode = `\n            if (x[j] >= inputDims[j] || x[j] < 0) {\n              pad++;\n              isPad = true;\n              break;\n            }\n          }\n          if (!isPad) {\n            ${op1}\n          }`;\n            } else {\n              padCode = `\n          }\n          ${op1}\n        `;\n            }\n            const poolingCode = `\n        ${offsetToIndicesFunction}\n        float process(int indices[${rank}]) {\n          int x[${rank}];\n          copyVec(indices, x);\n          int offset[${stridesRank}];\n          int pads[${padsRank}];\n          int inputDims[${rank}];\n          int kernelStrides[${stridesRank}];\n          int strides[${stridesRank}];\n          ${copyPads}\n          ${copyInputDims}\n          ${copyStrides}\n          ${copyKernelStrides}\n\n          float value = ${start};\n          int pad = 0;\n          bool isPad = false;\n          for (int i = 0; i < ${kernelSize}; i++) {\n            offsetToIndices(i, kernelStrides, offset);\n            isPad = false;\n            for (int j = ${rank} - ${stridesRank}; j < ${rank}; j++) {\n              x[j] = indices[j] * strides[j - ${rank} + ${stridesRank}]\n                + offset[j - ${rank} + ${stridesRank}] - pads[j - 2];\n              ${padCode}\n          }\n          ${op2}\n\n          return value;\n        }\n      `;\n            return poolingCode;\n          }\n        };\n\nconst copyArray = (array: readonly number[], arrayName: string): string => {\n  let block = '';\n  for (let i = 0; i < array.length; i++) {\n    block += `\n      ${arrayName}[${i}] = ${array[i]};\n    `;\n  }\n  return block;\n};\n\nconst offsetToIndices = (rank: number): string => `\n  void offsetToIndices(int offset, int[${rank}] strides, out int[${rank}] indices) {\n    if (${rank} == 0) {\n      return;\n    }\n    for (int i = 0; i < ${rank} - 1; ++i) {\n      indices[i] = offset / strides[i];\n      offset -= indices[i] * strides[i];\n    }\n    indices[${rank} - 1] = offset;\n  }`;\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {AttributeWithCacheKey, createAttributeWithCacheKey} from '../../../attribute-with-cache-key';\nimport {Graph} from '../../../graph';\nimport {NUMBER_TYPES, OperatorImplementation, OperatorInitialization} from '../../../operators';\nimport {Tensor} from '../../../tensor';\nimport {ShapeUtil} from '../../../util';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, ProgramMetadata, TextureType} from '../types';\n\nexport interface ReduceAttributes extends AttributeWithCacheKey {\n  readonly axes: number[];\n  readonly keepDims: boolean;\n}\n\n// return [init ops, reduce ops, final ops]\ntype ReduceOp = (inputs: Tensor[], axes: number[]) => string[];\n\nconst reduce =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: ReduceAttributes, name: string,\n     reduceOp: ReduceOp): Tensor[] => {\n      validateInputs(inputs);\n\n      const reduceProgramMetadata = {\n        name,\n        inputNames: ['A'],\n        inputTypes: [TextureType.unpacked],\n      };\n\n      const output = inferenceHandler.run(\n          {\n            ...reduceProgramMetadata,\n            cacheHint: attributes.cacheKey,\n            get: () =>\n                createReduceProgramInfo(inferenceHandler, inputs, attributes, name, reduceOp, reduceProgramMetadata)\n          },\n          inputs);\n      return [output];\n    };\n\nexport const parseReduceAttributes: OperatorInitialization<ReduceAttributes> = (node: Graph.Node): ReduceAttributes => {\n  const axes = node.attributes.getInts('axes', []);\n  const keepDims = node.attributes.getInt('keepdims', 1) === 1;\n  return createAttributeWithCacheKey({axes, keepDims});\n};\n\nconst createReduceProgramInfo =\n    (handler: WebGLInferenceHandler, inputs: Tensor[], attributes: ReduceAttributes, name: string, reduceOp: ReduceOp,\n     reduceProgramMetadata: ProgramMetadata): ProgramInfo => {\n      const outputShape: number[] = [];\n      const iRank = inputs[0].dims.length || 1;\n\n      const idxCopy = [];  // copy output indexes to input indexes\n\n      const axes = ShapeUtil.normalizeAxes(attributes.axes, inputs[0].dims.length);\n      const ops = reduceOp(inputs, axes);\n      let reduceOps = ops[1];\n\n      for (let k = 0; k < inputs[0].dims.length; k++) {\n        // if this axis is reduced\n        if (axes.indexOf(k) >= 0 || axes.length === 0) {\n          if (attributes.keepDims) {\n            outputShape.push(1);\n          }  // else { remove the axis from outputShape; }\n\n          // loop over the d-th axis\n          reduceOps = `\n          for(int j${k} = 0; j${k} < ${inputs[0].dims[k]}; j${k}++) {\n            inputIdx[${k}] = j${k};\n            ${reduceOps}\n          }`;\n        } else {\n          idxCopy.push(`inputIdx[${k}] = outputIdx[${outputShape.length}];`);\n\n          outputShape.push(inputs[0].dims[k]);\n        }\n      }\n\n      const oRank = outputShape.length || 1;\n\n      const shaderSource = `\n      float process(int outputIdx[${oRank}]) {\n        float value;                 // final result\n        int inputIdx[${iRank}];      // addressing input data\n        ${idxCopy.join('\\n')}\n        ${ops[0]}       // init ops for reduce max/min\n        ${reduceOps}\n        ${ops[2]}       // final computation for reduce mean\n        return value;\n      }`;\n\n      return {\n        ...reduceProgramMetadata,\n        output: {dims: outputShape, type: inputs[0].type, textureType: TextureType.unpacked},\n        shaderSource\n      };\n    };\n\nconst validateInputs = (inputs: Tensor[]): void => {\n  // TODO: support Reduce* operators with 2 inputs.\n  if (!inputs || inputs.length !== 1) {\n    throw new Error('Reduce op requires 1 input.');\n  }\n\n  if (NUMBER_TYPES.indexOf(inputs[0].type) === -1) {\n    throw new Error('Invalid input type.');\n  }\n};\n\nexport const reduceSum: OperatorImplementation<ReduceAttributes> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: ReduceAttributes): Tensor[] => {\n      const reduceOp: ReduceOp = (): string[] => ['value = 0.0;', 'value += _A(inputIdx);', ''];\n      return reduce(inferenceHandler, inputs, attributes, 'ReduceSum', reduceOp);\n    };\n\nexport const reduceMean: OperatorImplementation<ReduceAttributes> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: ReduceAttributes): Tensor[] => {\n      const reduceOp: ReduceOp = (inputs: Tensor[], axes: number[]): string[] => {\n        let size = 1.0;\n        for (let k = 0; k < inputs[0].dims.length; k++) {\n          if (axes.indexOf(k) >= 0 || axes.length === 0) {\n            size *= inputs[0].dims[k];\n          }\n        }\n\n        return ['value = 0.0;', 'value += _A(inputIdx);', `value /= ${size}.;`];  // ensure real number with `.`\n      };\n      return reduce(inferenceHandler, inputs, attributes, 'ReduceMean', reduceOp);\n    };\n\nexport const reduceMax: OperatorImplementation<ReduceAttributes> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: ReduceAttributes): Tensor[] => {\n      const reduceOp: ReduceOp = (inputs: Tensor[], axes: number[]): string[] => {\n        const idxZero = [];\n        for (let k = 0; k < inputs[0].dims.length; k++) {\n          if (axes.indexOf(k) >= 0 || axes.length === 0) {\n            idxZero.push(`inputIdx[${k}] = 0;`);  // first element\n          }\n        }\n\n        return [`${idxZero.join('\\n')}\\nvalue = _A(inputIdx);`, 'value = max(value, _A(inputIdx));', ''];\n      };\n      return reduce(inferenceHandler, inputs, attributes, 'ReduceMax', reduceOp);\n    };\n\nexport const reduceMin: OperatorImplementation<ReduceAttributes> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: ReduceAttributes): Tensor[] => {\n      const reduceOp: ReduceOp = (inputs: Tensor[], axes: number[]): string[] => {\n        const idxZero = [];\n        for (let k = 0; k < inputs[0].dims.length; k++) {\n          if (axes.indexOf(k) >= 0 || axes.length === 0) {\n            idxZero.push(`inputIdx[${k}] = 0;`);  // first element\n          }\n        }\n\n        return [`${idxZero.join('\\n')}\\nvalue = _A(inputIdx);`, 'value = min(value, _A(inputIdx));', ''];\n      };\n      return reduce(inferenceHandler, inputs, attributes, 'ReduceMin', reduceOp);\n    };\n\nexport const reduceProd: OperatorImplementation<ReduceAttributes> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: ReduceAttributes): Tensor[] => {\n      const reduceOp: ReduceOp = (): string[] => ['value = 1.0;', 'value *= _A(inputIdx);', ''];\n      return reduce(inferenceHandler, inputs, attributes, 'ReduceProd', reduceOp);\n    };\n\nexport const reduceLogSum: OperatorImplementation<ReduceAttributes> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: ReduceAttributes): Tensor[] => {\n      const reduceOp: ReduceOp = (): string[] => ['value = 0.0;', 'value += _A(inputIdx);', 'value = log(value);'];\n      return reduce(inferenceHandler, inputs, attributes, 'ReduceLogSum', reduceOp);\n    };\n\nexport const reduceLogSumSquare: OperatorImplementation<ReduceAttributes> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: ReduceAttributes): Tensor[] => {\n      const reduceOp: ReduceOp = (): string[] => ['float t; value = 0.0;', 't = _A(inputIdx); value += t * t;', ''];\n      return reduce(inferenceHandler, inputs, attributes, 'ReduceLogSumSquare', reduceOp);\n    };\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Tensor} from '../../../tensor';\nimport {ShapeUtil} from '../../../util';\nimport {getGlsl} from '../glsl-source';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, ProgramInfoLoader, ProgramMetadata, TextureType} from '../types';\n\nimport {unpackFromChannel} from './packing-utils';\n\nconst createPackedReshape3DProgramMetadata = (outputShape3D: readonly number[]) =>\n    ({name: 'Reshape (packed)', inputTypes: [TextureType.packed], inputNames: ['A'], cacheHint: `${outputShape3D}`});\n\nconst createPackedReshape3DProgramInfo =\n    (handler: WebGLInferenceHandler, input3D: Tensor, metadata: ProgramMetadata, outputShape3D: readonly number[]):\n        ProgramInfo => {\n          const inputShape3D = input3D.dims as [number, number, number];\n          const squeezedOutputShape = outputShape3D as [number, number, number];\n\n          let mainLoop = '';\n          for (let i = 0; i < 4; i++) {\n            let outputCoords = '';\n            switch (i) {\n              case 0:\n                outputCoords = 'outputCoords = rc;';\n                break;\n              case 1:\n                outputCoords = 'outputCoords = ivec3(rc.x, rc.y+1, rc.z);';\n                break;\n              case 2:\n                outputCoords = 'outputCoords = ivec3(rc.x, rc.y, rc.z+1);';\n                break;\n              case 3:\n                outputCoords = 'outputCoords = ivec3(rc.x, rc.y+1, rc.z+1);';\n                break;\n              default:\n                throw new Error();\n            }\n\n            mainLoop += `\n        ${outputCoords}\n        ${i > 0 ? 'if(outputCoords.y < rows && outputCoords.z < cols){' : ''}\n          int flattenedIndex = getFlattenedIndex(outputCoords);\n\n          ivec3 inputRC = inputCoordsFromReshapedOutCoords(flattenedIndex);\n          vec2 innerDims = vec2(float(inputRC.y),float(inputRC.z));\n\n          result[${i}] = getChannel(getA(inputRC.x, inputRC.y, inputRC.z), innerDims);\n\n        ${i > 0 ? '}' : ''}\n      `;\n          }\n          const glsl = getGlsl(handler.session.backend.glContext.version);\n\n          const shaderSource = `\n      ${getReshapedInputCoords(inputShape3D)}\n      ${getFlattenedIndexFrom3D(squeezedOutputShape)}\n      ${unpackFromChannel()}\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n\n        vec4 result = vec4(0.0);\n\n        ivec3 outputCoords;\n        int rows = ${squeezedOutputShape[2]};\n        int cols = ${squeezedOutputShape[1]};\n\n        ${mainLoop}\n        ${glsl.output} = result;\n      }\n    `;\n\n          return {\n            ...metadata,\n            output: {dims: squeezedOutputShape, type: input3D.type, textureType: TextureType.packed},\n            shaderSource,\n            hasMain: true\n          };\n        };\n\nexport const createPackedReshape3DProgramInfoLoader =\n    (handler: WebGLInferenceHandler, input3D: Tensor, outputShape3D: readonly number[]): ProgramInfoLoader => {\n      const metadata = createPackedReshape3DProgramMetadata(outputShape3D);\n      return {...metadata, get: () => createPackedReshape3DProgramInfo(handler, input3D, metadata, outputShape3D)};\n    };\n\nexport function processDims3D(shape: ArrayLike<number>): [number, number, number] {\n  if (shape.length === 0) {\n    return [1, 1, 1];\n  }\n  // TODO: squeeze other shapes to 2D case\n  let batch = 1;\n  for (let i = 0; i < shape.length - 2; ++i) {\n    batch *= shape[i];\n  }\n  return [batch, shape.length > 1 ? shape[shape.length - 2] : 1, shape[shape.length - 1]];\n}\n\n// For packed reshape, we need to re-arrange texel data for output shape.\n// Our pack is designed to pack a 2x2 tile in last h and w dimension, so\n// for the reshaped new tensor, we just need to re-arrange the last h and\n// w dimension. For any shape that is not in 3D, i.e. [batch, W, H], we\n// first convert it to 3D by collapsing other dimension to batch dim, then\n// process with the last two dimensions.\n// Note: we only need the shape tensor to calculate output shape, so the\n// content in shape tensor is never uploaded to GPU. It is always kept in CPU.\n// TODO: optimize the algorithm -- in some cases, if the last two dims are\n// the same between input shape and output shape, the packed reshape can be\n// treated as no-op.\nexport function isReshapeCheap(dims: readonly number[], reshapedDims: readonly number[]) {\n  let isCheapReshape = false;\n  if (dims.length === 0 || reshapedDims.length === 0) {  // scalar\n    isCheapReshape = true;\n  } else if (dims.length < 2 || reshapedDims.length < 2) {  // 1D\n    isCheapReshape = dims[dims.length - 1] === reshapedDims[reshapedDims.length - 1];\n  } else {  // 2D +\n    isCheapReshape = dims[dims.length - 1] === reshapedDims[reshapedDims.length - 1] &&\n        dims[dims.length - 2] === reshapedDims[reshapedDims.length - 2];\n  }\n\n  return isCheapReshape;\n}\n\nfunction getReshapedInputCoords(shape: [number, number, number]): string {\n  const strides = ShapeUtil.computeStrides(shape);\n  const coords = ['b', 'r', 'c'];\n  const index = 'index';\n  const coordsFromIndexSnippet = strides\n                                     .map((stride, i) => {\n                                       const line1 = `int ${coords[i]} = ${index} / ${stride}`;\n                                       const line2 = i === strides.length - 1 ?\n                                           `int ${coords[i + 1]} = ${index} - ${coords[i]} * ${stride}` :\n                                           `index -= ${coords[i]} * ${stride}`;\n                                       return `${line1}; ${line2};`;\n                                     })\n                                     .join('');\n\n  return `\n    ivec3 inputCoordsFromReshapedOutCoords(int index) {\n      ${coordsFromIndexSnippet}\n      return ivec3(b, r, c);\n    }\n  `;\n}\n\nfunction getFlattenedIndexFrom3D(shape: [number, number, number]): string {\n  const strides = ShapeUtil.computeStrides(shape);\n\n  return `\n  int getFlattenedIndex(ivec3 coords) {\n    // reverse y, z order\n    return coords.x * ${strides[0]} + coords.z * ${strides[1]} + coords.y;\n  }\n`;\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Tensor} from '../../../tensor';\nimport {ShapeUtil} from '../../../util';\nimport {WebGLInferenceHandler} from '../inference-handler';\n\nexport const reshape = (handler: WebGLInferenceHandler, inputs: Tensor[]): Tensor[] => {\n  const reshapedDims = ShapeUtil.calculateReshapedDims(inputs[0].dims, inputs[1].integerData);\n  if (handler.session.pack) {\n    return [handler.reshapePacked(inputs[0], reshapedDims)];\n  } else {\n    return [handler.reshapeUnpacked(inputs[0], reshapedDims)];\n  }\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Graph} from '../../../graph';\nimport {OperatorImplementation, OperatorInitialization} from '../../../operators';\nimport {Tensor} from '../../../tensor';\nimport {getGlsl} from '../glsl-source';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, TextureType} from '../types';\nimport {getCoordsDataType} from '../utils';\n\nimport {unpackFromChannel} from './packing-utils';\nimport {parseUpsampleAttributes, scalesValidation, UpsampleAttributes, validateInputs} from './upsample';\n\nconst resizeProgramMetadata = {\n  name: 'Resize',\n  inputNames: ['A'],\n  inputTypes: [TextureType.packed]\n};\n\nexport const resize: OperatorImplementation<UpsampleAttributes> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: UpsampleAttributes): Tensor[] => {\n      validateInputs(inputs, attributes);\n      const output = inferenceHandler.run(\n          {\n            ...resizeProgramMetadata,\n            cacheHint: attributes.cacheKey,\n            get: () => createPackedResizeProgramInfo(inferenceHandler, inputs, attributes)\n          },\n          inputs);\n      return [output];\n    };\n\nexport const parseResizeAttributesV10: OperatorInitialization<UpsampleAttributes> =\n    (node: Graph.Node): UpsampleAttributes => parseUpsampleAttributes(node, 10);\n\nexport const parseResizeAttributesV11: OperatorInitialization<UpsampleAttributes> =\n    (node: Graph.Node): UpsampleAttributes => parseUpsampleAttributes(node, 11);\n\nconst createPackedResizeProgramInfo =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: UpsampleAttributes): ProgramInfo => {\n      const glsl = getGlsl(inferenceHandler.session.backend.glContext.version);\n      const [scales, outputShape] = prepareInputs(inputs, attributes);\n\n      const isSame =\n          scales.every((s: number) => s === 1) && attributes.coordinateTransformMode !== 'tf_crop_and_resize';\n      if (isSame) {\n        return {\n          ...resizeProgramMetadata,\n          output: {dims: outputShape, type: inputs[0].type, textureType: TextureType.packed},\n          hasMain: true,\n          shaderSource: `void main() {\n                    vec4 v = ${glsl.texture2D}(X, TexCoords);\n                    ${glsl.output} = v;\n                }`\n        };\n      }\n\n      const dim = outputShape.length;\n      if (dim < 2) {\n        throw new Error(`output dimension should be at least 2, but got ${dim}`);\n      }\n\n      const outputHeight = outputShape[dim - 2];\n      const outputWidth = outputShape[dim - 1];\n\n      const inputShape = inputs[0].dims;\n      if (dim !== inputShape.length) {\n        throw new Error(`output dimension should match input ${inputShape.length}, but got ${dim}`);\n      }\n      const inputHeight = inputShape[dim - 2];\n      const inputWidth = inputShape[dim - 1];\n\n      const scalesHeight = scales[dim - 2];\n      const scalesWidth = scales[dim - 1];\n\n      let getSourceFracIndex = '';\n\n      if (attributes.mode !== 'linear') {\n        // TODO: support other modes\n        throw new Error(`resize (packed) does not support mode: '${attributes.mode}'`);\n      }\n      switch (attributes.coordinateTransformMode) {\n        case 'asymmetric':\n          getSourceFracIndex = `\n                    vec4 getSourceFracIndex(ivec4 coords) {\n                        return vec4(coords) / scaleWHWH;\n                    }\n                `;\n          break;\n        case 'half_pixel':\n          getSourceFracIndex = `\n                    vec4 getSourceFracIndex(ivec4 coords) {\n                        return (vec4(coords) + 0.5) / scaleWHWH - 0.5;\n                    }\n                `;\n          break;\n        case 'pytorch_half_pixel':\n          getSourceFracIndex = `\n                    vec4 getSourceFracIndex(ivec4 coords) {\n                        vec4 fcoords = vec4(coords);\n                        return vec4(\n                            ${outputWidth}.0 > 1.0 ? (fcoords.x + 0.5) / scaleWHWH.x - 0.5 : 0.0,\n                            ${outputHeight}.0 > 1.0 ? (fcoords.y + 0.5) / scaleWHWH.y - 0.5 : 0.0,\n                            ${outputWidth}.0 > 1.0 ? (fcoords.z + 0.5) / scaleWHWH.z - 0.5 : 0.0,\n                            ${outputHeight}.0 > 1.0 ? (fcoords.w + 0.5) / scaleWHWH.w - 0.5 : 0.0\n                          );\n                    }\n                `;\n          break;\n        case 'align_corners':\n          getSourceFracIndex = `\n                    vec4 getSourceFracIndex(ivec4 coords) {\n                        vec4 resized = vec4(${outputWidth}.0 - 1.0, ${outputHeight}.0 - 1.0, ${outputWidth}.0 - 1.0,\n                            ${outputHeight}.0 - 1.0);\n                        vec4 original = vec4(${inputWidth}.0 - 1.0, ${inputHeight}.0 - 1.0, ${inputWidth}.0 - 1.0,\n                            ${inputHeight}.0 - 1.0);\n                        vec4 new_scale = original / resized;\n                        return vec4(coords) * new_scale;\n                    }\n                `;\n          break;\n        default:\n          // TODO:supporting other coordinateTransformModes\n          throw new Error(`resize (packed) does not support coordinateTransformMode: \\\n                                '${attributes.coordinateTransformMode}'`);\n      }\n\n      const coordsDataType = getCoordsDataType(dim);\n      const unpackChannel = unpackFromChannel();\n      const shaderSource = `\n            const vec2 inputWH = vec2(${inputHeight}.0, ${inputWidth}.0);\n            const vec4 scaleWHWH = vec4(float(${scalesHeight}), float(${scalesWidth}), float(${scalesHeight}), float(${\n          scalesWidth}));\n            ${unpackChannel}\n            ${getSourceFracIndex}\n            float getAValue(int x10, int r, int c, int d) {\n                return getChannel(getA(x10, r, c, d), vec2(c, d));\n            }\n            void main() {\n                ${coordsDataType} rc = getOutputCoords();\n\n                int batch = rc[0];\n                int depth = rc[1];\n\n                // retrieve the 4 coordinates that is used in the 4 packed output values.\n                ivec4 coords = ivec4(rc.wz, rc.w + 1, rc.z + 1);\n\n                // calculate the source index in fraction\n                vec4 sourceFrac = getSourceFracIndex(coords);\n\n                // get the lower and upper bound of the 4 values that will be packed into one texel.\n                ivec4 x00 = ivec4(max(sourceFrac.xy, vec2(0.0)), min(inputWH - 1.0, ceil(sourceFrac.xy)));\n                ivec4 x01 = ivec4(max(sourceFrac.xw, vec2(0.0)), min(inputWH - 1.0, ceil(sourceFrac.xw)));\n                ivec4 x10 = ivec4(max(sourceFrac.zy, vec2(0.0)), min(inputWH - 1.0, ceil(sourceFrac.zy)));\n                ivec4 x11 = ivec4(max(sourceFrac.zw, vec2(0.0)), min(inputWH - 1.0, ceil(sourceFrac.zw)));\n\n                bool hasNextRow = rc.w < ${outputHeight - 1};\n                bool hasNextCol = rc.z < ${outputWidth - 1};\n\n                // pack x00, x01, x10, x11's top-left corner into one vec4 structure\n                vec4 topLeft = vec4(\n                    getAValue(batch, depth, x00.x, x00.y),\n                    hasNextCol ? getAValue(batch, depth, x01.x, x01.y) : 0.0,\n                    hasNextRow ? getAValue(batch, depth, x10.x, x10.y) : 0.0,\n                    (hasNextRow && hasNextCol) ? getAValue(batch, depth, x11.x, x11.y) : 0.0);\n\n                // pack x00, x01, x10, x11's top-right corner into one vec4 structure\n                vec4 topRight = vec4(\n                    getAValue(batch, depth, x00.x, x00.w),\n                    hasNextCol ? getAValue(batch, depth, x01.x, x01.w) : 0.0,\n                    hasNextRow ? getAValue(batch, depth, x10.x, x10.w) : 0.0,\n                    (hasNextRow && hasNextCol) ? getAValue(batch, depth, x11.x, x11.w) : 0.0);\n\n                // pack x00, x01, x10, x11's bottom-left corner into one vec4 structure\n                vec4 bottomLeft = vec4(\n                    getAValue(batch, depth, x00.z, x00.y),\n                    hasNextCol ? getAValue(batch, depth, x01.z, x01.y) : 0.0,\n                    hasNextRow ? getAValue(batch, depth, x10.z, x10.y) : 0.0,\n                    (hasNextRow && hasNextCol) ? getAValue(batch, depth, x11.z, x11.y) : 0.0);\n\n                // pack x00, x01, x10, x11's bottom-right corner into one vec4 structure\n                vec4 bottomRight = vec4(\n                    getAValue(batch, depth, x00.z, x00.w),\n                    hasNextCol ? getAValue(batch, depth, x01.z, x01.w) : 0.0,\n                    hasNextRow ? getAValue(batch, depth, x10.z, x10.w) : 0.0,\n                    (hasNextRow && hasNextCol) ? getAValue(batch, depth, x11.z, x11.w) : 0.0);\n\n                // calculate the interpolation fraction on u and v direction\n                vec4 frac = vec4(sourceFrac) - floor(sourceFrac);\n                vec4 clampFrac = clamp(frac, vec4(0.0), vec4(1.0));\n\n                vec4 top = mix(topLeft, topRight, clampFrac.ywyw);\n                vec4 bottom = mix(bottomLeft, bottomRight, clampFrac.ywyw);\n                vec4 newValue = mix(top, bottom, clampFrac.xxzz);\n\n                ${glsl.output} = vec4(newValue);\n            }\n        `;\n      return {\n        ...resizeProgramMetadata,\n        output: {dims: outputShape, type: inputs[0].type, textureType: TextureType.packed},\n        hasMain: true,\n        shaderSource\n      };\n    };\n\n\nconst prepareInputs = (inputs: Tensor[], attributes: UpsampleAttributes): [readonly number[], readonly number[]] => {\n  const x = inputs[0];\n  const xDims = x.dims;\n\n  let scales = attributes.scales;\n  let outputSizes: number[]|undefined;\n  if (scales.length === 0) {\n    const scalesTensor = inputs[attributes.scalesInputIdx];\n    if (scalesTensor && scalesTensor.size !== 0) {\n      if (inputs[attributes.sizesInputIdx]) {\n        throw new Error('Only one of scales or sizes must be provided as input.');\n      }\n      scales = parseScalesData(scalesTensor, attributes.mode, attributes.isResize);\n    } else {\n      const sizesTensor = inputs[attributes.sizesInputIdx];\n      if (!sizesTensor || sizesTensor.size === 0) {\n        throw new Error('Either scales or sizes MUST be provided as input.');\n      }\n\n      outputSizes = Array.from(sizesTensor.integerData);\n      scales = parseScalesDataFromOutputSize(outputSizes, xDims, attributes.mode, attributes.isResize);\n    }\n  } else {\n    if (inputs[attributes.sizesInputIdx]) {\n      throw new Error('Only one of scales or sizes must be provided as input.');\n    }\n  }\n\n  const yDims = outputSizes || (xDims.map((dim, i) => Math.floor(dim * scales[i])));\n\n  return [scales, yDims];\n};\n\nconst parseScalesData = (scale: Tensor, mode: string, isResize: boolean): number[] => {\n  const scales = Array.from(scale.floatData);\n  scalesValidation(scales, mode, isResize);\n  return scales;\n};\n\nconst parseScalesDataFromOutputSize =\n    (yDims: readonly number[], xDims: readonly number[], mode: string, isResize: boolean): number[] => {\n      const length = xDims.length;\n      const scales = new Array<number>(length);\n\n      for (let i = 0, end = length; i < end; i++) {\n        if (xDims[i] === 0) {\n          if (yDims[i] !== 0) {\n            throw new Error('Input dim is zero but required output dim is non-zero.');\n          }\n          scales[i] = 1;\n        } else {\n          scales[i] = yDims[i] / xDims[i];\n        }\n      }\n      scalesValidation(scales, mode, isResize);\n      return scales;\n    };\n\n// roi data is not used yet. but leave here for future usage.\n// const getRoi = (inputs: Tensor[], attributes: UpsampleAttributes) : number[] => {\n//     let roi: number[] = [];\n//     if (attributes.needRoiInput) {\n//         if (attributes.roiInputIdx <= 0) {\n//             throw new Error('Invalid roi input index.');\n//         }\n//         const roiTensor = inputs[attributes.roiInputIdx];\n//         roi = roiTensor.size > 0 ? Array.from(roiTensor.floatData) : [];\n//     } else {\n//         roi = new Array(inputs[0].dims.length * 2).fill(0);\n//     }\n//     return roi;\n// };\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Tensor} from '../../../tensor';\nimport {WebGLInferenceHandler} from '../inference-handler';\n\nexport const shape = (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[]): Tensor[] => {\n  validateInputs(inputs);\n  return [new Tensor([inputs[0].dims.length], 'int32', undefined, undefined, new Int32Array(inputs[0].dims))];\n};\n\nconst validateInputs = (inputs: Tensor[]): void => {\n  if (!inputs || inputs.length !== 1) {\n    throw new Error('Shape requires 1 input.');\n  }\n};","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {AttributeWithCacheKey, createAttributeWithCacheKey} from '../../../attribute-with-cache-key';\nimport {Graph} from '../../../graph';\nimport {NUMBER_TYPES, OperatorImplementation, OperatorInitialization} from '../../../operators';\nimport {Tensor} from '../../../tensor';\nimport {ShapeUtil} from '../../../util';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, TextureType} from '../types';\n\nexport interface SliceAttributes extends AttributeWithCacheKey {\n  readonly axes: number[];\n  readonly ends: number[];\n  readonly starts: number[];\n}\n\nconst sliceProgramMetadata = {\n  name: 'Slice',\n  inputNames: ['A'],\n  inputTypes: [TextureType.unpacked]\n};\n\nexport const slice: OperatorImplementation<SliceAttributes> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: SliceAttributes): Tensor[] => {\n      validateInputs(inputs);\n      const output = inferenceHandler.run(\n          {\n            ...sliceProgramMetadata,\n            cacheHint: attributes.cacheKey,\n            get: () => createSliceProgramInfo(inferenceHandler, inputs[0], attributes)\n          },\n          inputs);\n      return [output];\n    };\n\nexport const parseSliceAttributes: OperatorInitialization<SliceAttributes> = (node: Graph.Node): SliceAttributes => {\n  const starts = node.attributes.getInts('starts');\n  const ends = node.attributes.getInts('ends');\n  const axes = node.attributes.getInts('axes', []);\n  return createAttributeWithCacheKey({starts, ends, axes});\n};\n\nconst createSliceProgramInfo =\n    (inferenceHandler: WebGLInferenceHandler, input: Tensor, attributes: SliceAttributes): ProgramInfo => {\n      const axes = (attributes.axes.length === 0) ? input.dims.slice(0).map((val, i) => i) : attributes.axes;\n      const normalizedAxes = ShapeUtil.normalizeAxes(axes, input.dims.length);\n      const starts = attributes.starts.map((start, i) => {\n        if (start > input.dims[normalizedAxes[i]] - 1) {\n          return input.dims[normalizedAxes[i]];\n        }\n        return ShapeUtil.normalizeAxis(start, input.dims[normalizedAxes[i]]);\n      });\n      const ends = attributes.ends.map((end, i) => {\n        if (end > input.dims[normalizedAxes[i]] - 1) {\n          return input.dims[normalizedAxes[i]];\n        }\n        return ShapeUtil.normalizeAxis(end, input.dims[normalizedAxes[i]]);\n      });\n\n      const outputShape = input.dims.slice();\n\n      const sliceOps: string[] = [];\n      for (let i = 0; i < normalizedAxes.length; i++) {\n        outputShape[normalizedAxes[i]] = ends[i] - starts[i];\n        if (starts[i] > 0) {\n          sliceOps.push(`outputIdx[${normalizedAxes[i]}] += ${starts[i]};`);\n        }  // else { sliceOps.push(`outputIdx[${normalizedAxes[i]}] += 0;`); }\n      }\n\n      const rank = outputShape.length;\n      const shaderSource = `\n      float process(int outputIdx[${rank}]) {\n        ${sliceOps.join('\\n      ')}\n        return _A(outputIdx);\n      }`;\n      return {\n        ...sliceProgramMetadata,\n        output: {dims: outputShape, type: input.type, textureType: TextureType.unpacked},\n        shaderSource\n      };\n    };\n\nconst validateInputs = (inputs: Tensor[]): void => {\n  if (!inputs || inputs.length !== 1) {\n    throw new Error('Slice requires 1 input.');\n  }\n  if (NUMBER_TYPES.indexOf(inputs[0].type) === -1) {\n    throw new Error('Invalid input type.');\n  }\n};\n\nexport const sliceV10 = (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[]): Tensor[] => {\n  validateInputsV10(inputs);\n  const attributes = generateSliceAttributesFromInputs(inferenceHandler, inputs);\n  const output = inferenceHandler.run(\n      {\n        ...sliceProgramMetadata,\n        cacheHint: attributes.cacheKey,\n        get: () => createSliceProgramInfo(inferenceHandler, inputs[0], attributes)\n      },\n      [inputs[0]]);\n  return [output];\n};\n\nconst generateSliceAttributesFromInputs =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[]): SliceAttributes => {\n      if (!inferenceHandler.session.isInitializer(inputs[1].dataId) ||\n          !inferenceHandler.session.isInitializer(inputs[2].dataId) ||\n          (inputs.length >= 4 && !inferenceHandler.session.isInitializer(inputs[3].dataId)) ||\n          (inputs.length >= 5 && !inferenceHandler.session.isInitializer(inputs[4].dataId))) {\n        throw new Error('dynamic slice attributes are not allowed');\n      }\n\n      if (inputs.length >= 5 && inputs[4].integerData.some((i: number) => i !== 1)) {\n        throw new Error('currently non-1 steps is not supported for Slice');\n      }\n\n      const starts = Array.from(inputs[1].integerData);\n      const ends = Array.from(inputs[2].integerData);\n      const axes = inputs.length >= 4 ? Array.from(inputs[3].integerData) : [];\n      const cacheKey = `${axes};${starts};${ends}`;\n      return {starts, ends, axes, cacheKey};\n    };\n\nconst validateInputsV10 = (inputs: Tensor[]): void => {\n  if (!inputs || inputs.length < 3 || inputs.length > 5) {\n    throw new Error('Invalid input number.');\n  }\n  if (inputs[1].type !== 'int32' || inputs[1].dims.length !== 1) {\n    throw new Error('Invalid input type.');\n  }\n  if (inputs[2].type !== 'int32' || inputs[2].dims.length !== 1) {\n    throw new Error('Invalid input type.');\n  }\n  if (inputs.length >= 4 && (inputs[3].type !== 'int32' || inputs[3].dims.length !== 1)) {\n    throw new Error('Invalid input type.');\n  }\n  if (inputs.length >= 5 && (inputs[4].type !== 'int32' || inputs[4].dims.length !== 1)) {\n    throw new Error('Invalid input type.');\n  }\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {AttributeWithCacheKey, createAttributeWithCacheKey} from '../../../attribute-with-cache-key';\nimport {Graph} from '../../../graph';\nimport {OperatorImplementation, OperatorInitialization} from '../../../operators';\nimport {Tensor} from '../../../tensor';\nimport {ShapeUtil} from '../../../util';\nimport {getGlsl} from '../glsl-source';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, TextureType} from '../types';\n\nimport {transpose, TransposeAttributes} from './transpose';\n\nexport interface SoftmaxAttributes extends AttributeWithCacheKey {\n  readonly axis: number;\n}\n\nconst softmaxComputeMaxProgramMetadata = {\n  name: 'SoftmaxComputeMax',\n  inputNames: ['A'],\n  inputTypes: [TextureType.unpacked],\n};\n\nconst softmaxComputeScaleProgramMetadata = {\n  name: 'SoftmaxComputeScale',\n  inputNames: ['A', 'Max'],\n  inputTypes: [TextureType.unpacked, TextureType.unpacked],\n};\n\nconst softmaxProgramMetadata = {\n  name: 'SoftMax',\n  inputNames: ['A', 'Max', 'Norm'],\n  inputTypes: [TextureType.unpacked, TextureType.unpacked, TextureType.unpacked],\n};\n\nexport const softmax: OperatorImplementation<SoftmaxAttributes> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: SoftmaxAttributes): Tensor[] => {\n      validateInputs(inputs);\n\n      const inputShape = inputs[0].dims.slice();\n      const axis = ShapeUtil.normalizeAxis(attributes.axis, inputShape.length);\n      const logicalRowCount = ShapeUtil.sizeToDimension(inputShape, axis);\n      const featureCount = ShapeUtil.sizeFromDimension(inputShape, axis);\n\n      const output = computeSoftmax(inferenceHandler, inputs, attributes, logicalRowCount, featureCount);\n      return output;\n    };\n\nexport const parseSoftmaxAttributes: OperatorInitialization<SoftmaxAttributes> =\n    (node: Graph.Node): SoftmaxAttributes => createAttributeWithCacheKey({axis: node.attributes.getInt('axis', 1)});\n\nexport const parseSoftmaxAttributesV13: OperatorInitialization<SoftmaxAttributes> =\n    (node: Graph.Node): SoftmaxAttributes => createAttributeWithCacheKey({axis: node.attributes.getInt('axis', -1)});\n\n// The \"semantic\" meaning of axis has changed in opset-13.\n// Please compare: https://github.com/onnx/onnx/blob/main/docs/Operators.md#Softmax\n// with https://github.com/onnx/onnx/blob/main/docs/Changelog.md#Softmax-11 for detailed explanations\n// To account for the opset-13 behavior, our plan will be to transpose the \"axis\" dim to the innermost dim\n// and perform softmax and then reverse the transpose. We can skip the transposing aspect if the axis is already\n// the innermost dim\nexport const softmaxV13: OperatorImplementation<SoftmaxAttributes> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: SoftmaxAttributes): Tensor[] => {\n      validateInputs(inputs);\n\n      const inputShape = inputs[0].dims.slice();\n      const axis = ShapeUtil.normalizeAxis(attributes.axis, inputShape.length);\n      const rank = inputShape.length;\n\n      const isTransposeRequired = (axis !== rank - 1) ? true : false;\n      const transposedInputShape: number[] = [];\n      let perm: number[] = [];\n      let transposedInputs: Tensor[] = [];\n      let transposeAttribute: TransposeAttributes;\n\n      if (isTransposeRequired) {\n        perm = Array.from({length: rank}).map((_, i) => i);\n\n        // swap the innermost dim with the dim corresponding to axis\n        perm[axis] = rank - 1;\n        perm[rank - 1] = axis;\n\n        perm.map(p => transposedInputShape.push(inputShape[p]));\n\n        transposeAttribute = createAttributeWithCacheKey({perm});\n        transposedInputs = transpose(inferenceHandler, inputs, transposeAttribute);\n      }\n\n      const logicalRowCount = isTransposeRequired ? ShapeUtil.sizeToDimension(transposedInputShape, rank - 1) :\n                                                    ShapeUtil.sizeToDimension(inputShape, rank - 1);\n      const featureCount = isTransposeRequired ? ShapeUtil.sizeFromDimension(transposedInputShape, rank - 1) :\n                                                 ShapeUtil.sizeFromDimension(inputShape, rank - 1);\n\n      const output = computeSoftmax(\n          inferenceHandler, isTransposeRequired ? transposedInputs : inputs, attributes, logicalRowCount, featureCount);\n\n      if (isTransposeRequired) {\n        const reversedOutput = transpose(inferenceHandler, output, transposeAttribute!);\n        return reversedOutput;\n      } else {\n        return output;\n      }\n    };\n\nconst computeSoftmax =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: SoftmaxAttributes, logicalRowCount: number,\n     featureCount: number): Tensor[] => {\n      const computeMaxProgramInfo =\n          createComputeMaxProgramInfo(inferenceHandler, inputs[0], logicalRowCount, featureCount, [logicalRowCount]);\n      const max = inferenceHandler.run(\n          {...softmaxComputeMaxProgramMetadata, cacheHint: attributes.cacheKey, get: () => computeMaxProgramInfo},\n          inputs);\n\n      const computeScaleProgramInfo = createComputScaleProgramInfo(\n          inferenceHandler, inputs[0], logicalRowCount, featureCount, computeMaxProgramInfo.output.dims,\n          [logicalRowCount]);\n      const scale = inferenceHandler.run(\n          {...softmaxComputeScaleProgramMetadata, cacheHint: attributes.cacheKey, get: () => computeScaleProgramInfo},\n          [inputs[0], max]);\n\n      const softMaxProgramInfo = createSoftMaxProgramInfo(\n          inferenceHandler, inputs[0], logicalRowCount, featureCount, computeMaxProgramInfo.output.dims,\n          computeScaleProgramInfo.output.dims);\n      const output = inferenceHandler.run(\n          {...softmaxProgramMetadata, cacheHint: attributes.cacheKey, get: () => softMaxProgramInfo},\n          [inputs[0], max, scale]);\n      return [output];\n    };\n\n/**\n * Create a texture that contains the maximum value of each of the 'N' rows\n */\nconst createComputeMaxProgramInfo =\n    (inferenceHandler: WebGLInferenceHandler, input: Tensor, logicalRowCount: number, featureCount: number,\n     outputShape: number[]): ProgramInfo => {\n      const [textureWidth, textureHeight] =\n          inferenceHandler.calculateTextureWidthAndHeight(input.dims, TextureType.unpacked);\n      const rank = outputShape.length;\n\n      if (logicalRowCount < 1 || featureCount < 1) {\n        throw new Error('Logical row count N and feature count D must be greater than or equal to 1');\n      }\n\n      if (outputShape.length !== 1) {\n        throw new Error('Dimensionality of the output should be 1');\n      }\n\n      if (outputShape[0] !== logicalRowCount) {\n        throw new Error('Shape of the output should be equal to logical row count');\n      }\n\n      const glsl = getGlsl(inferenceHandler.session.backend.glContext.version);\n      const shaderSource = `\n      float process(int[${rank}] indices) {\n        int logical_row_start_offset = indices[0] * ${featureCount};\n\n        float max = getColorAsFloat(${glsl.texture2D}(A, offsetToCoords(logical_row_start_offset, ${textureWidth},\n        ${textureHeight} )));\n        for(int i=1; i<${featureCount}; ++i)\n        {\n          float current = getColorAsFloat(${glsl.texture2D}(A, offsetToCoords(logical_row_start_offset + i,\n            ${textureWidth}, ${textureHeight})));\n          if(current > max)\n          max = current;\n        }\n\n        return max;\n      }`;\n      return {\n        ...softmaxComputeMaxProgramMetadata,\n        output: {dims: outputShape, type: input.type, textureType: TextureType.unpacked},\n        shaderSource\n      };\n    };\n\n/**\n * Create a texture that contains the normalization factor for each of the 'N' rows\n */\nconst createComputScaleProgramInfo =\n    (inferenceHandler: WebGLInferenceHandler, input: Tensor, logicalRowCount: number, featureCount: number,\n     maxElementPerLogicalRow: readonly number[], outputShape: number[]): ProgramInfo => {\n      const [textureWidth, textureHeight] =\n          inferenceHandler.calculateTextureWidthAndHeight(input.dims, TextureType.unpacked);\n      const rank = outputShape.length;\n\n      if (logicalRowCount < 1 || featureCount < 1) {\n        throw new Error('Logical row count N and feature count D must be greater than or equal to 1');\n      }\n\n      if (outputShape.length !== 1) {\n        throw new Error('Dimensionality of the output should be 1');\n      }\n\n      if (outputShape[0] !== logicalRowCount) {\n        throw new Error('Shape of the output should be equal to logical row count');\n      }\n\n      if (maxElementPerLogicalRow.length !== 1) {\n        throw new Error('Dimensionality of the intermediate results should be 1');\n      }\n\n      if (maxElementPerLogicalRow[0] !== logicalRowCount) {\n        throw new Error('Shape of the intermediate results should be equal to logical row count');\n      }\n\n      const glsl = getGlsl(inferenceHandler.session.backend.glContext.version);\n      const shaderSource = `\n      float process(int[${rank}] indices) {\n        int logical_row_start_offset = indices[0] * ${featureCount};\n\n        float norm_factor = 0.0;\n        float max = _Max(indices);\n        for(int i=0; i<${featureCount}; ++i)\n        {\n          norm_factor += exp(getColorAsFloat(${glsl.texture2D}(A, offsetToCoords(logical_row_start_offset + i,\n            ${textureWidth}, ${textureHeight}))) - max);\n        }\n\n        return norm_factor;\n      }`;\n      return {\n        ...softmaxComputeScaleProgramMetadata,\n        output: {dims: outputShape, type: input.type, textureType: TextureType.unpacked},\n        shaderSource\n      };\n    };\n\nconst createSoftMaxProgramInfo =\n    (inferenceHandler: WebGLInferenceHandler, input: Tensor, logicalRowCount: number, featureCount: number,\n     maxElementPerLogicalRow: readonly number[], normalizationPerLogicalRow: readonly number[]): ProgramInfo => {\n      const [textureWidth, textureHeight] =\n          inferenceHandler.calculateTextureWidthAndHeight(input.dims, TextureType.unpacked);\n      const rank = input.dims.length;\n\n      if (logicalRowCount < 1 || featureCount < 1) {\n        throw new Error('Logical row count N and feature count D must be greater than or equal to 1');\n      }\n\n      if (maxElementPerLogicalRow.length !== 1 || normalizationPerLogicalRow.length !== 1) {\n        throw new Error('Dimensionality of the intermediate results should be 1');\n      }\n\n      if (maxElementPerLogicalRow[0] !== logicalRowCount || normalizationPerLogicalRow[0] !== logicalRowCount) {\n        throw new Error('Shape of the intermediate results should be equal to logical row count');\n      }\n\n      const shaderSource = `\n      float process(int[${rank}] indices) {\n\n      // get offset of current logical tensor index from the 2-D texture coordinates (TexCoords)\n      int offset = coordsToOffset(TexCoords, ${textureWidth}, ${textureHeight});\n\n      //determine the logical row for this index\n      int logical_row_index[1];\n      logical_row_index[0] = offset / ${featureCount};\n\n      float norm_factor = _Norm(logical_row_index);\n\n      // avoid possible division by 0\n      // if norm_facor is 0, all elements are zero\n      // if so, return 0\n      if(norm_factor == 0.0)\n        return 0.0;\n\n      return exp(_A(indices) - _Max(logical_row_index)) / norm_factor;\n    }`;\n      return {\n        ...softmaxProgramMetadata,\n        output: {dims: input.dims, type: input.type, textureType: TextureType.unpacked},\n        shaderSource\n      };\n    };\n\nconst validateInputs = (inputs: Tensor[]): void => {\n  if (!inputs || inputs.length !== 1) {\n    throw new Error('Softmax requires 1 input.');\n  }\n\n  if (inputs[0].type !== 'float32' && inputs[0].type !== 'float64') {\n    throw new Error('Invalid input type');\n  }\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {AttributeWithCacheKey, createAttributeWithCacheKey} from '../../../attribute-with-cache-key';\nimport {Graph} from '../../../graph';\nimport {OperatorImplementation, OperatorInitialization} from '../../../operators';\nimport {Tensor} from '../../../tensor';\nimport {ShapeUtil, SplitUtil} from '../../../util';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, TextureType} from '../types';\n\nexport interface SplitAttributes extends AttributeWithCacheKey {\n  readonly axis: number;\n  readonly split: number[];\n  readonly numOutputs: number;\n}\n\nconst splitProgramMetadata = {\n  name: 'Split',\n  inputNames: ['A'],\n  inputTypes: [TextureType.unpacked],\n};\n\nexport const split: OperatorImplementation<SplitAttributes> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: SplitAttributes): Tensor[] => {\n      validateInputs(inputs);\n\n      const axis = ShapeUtil.normalizeAxis(attributes.axis, inputs[0].dims.length);\n      const count = getProgramCount(inferenceHandler, inputs, axis, attributes);\n      const output: Tensor[] = [];\n      for (let i = 0; i < count; ++i) {\n        output.push(inferenceHandler.run(\n            {\n              ...splitProgramMetadata,\n              cacheHint: `${attributes.cacheKey};${i}`,\n              get: () => createSplitProgramInfo(inferenceHandler, inputs[0], attributes, axis, i)\n            },\n            inputs));\n      }\n\n      return output;\n    };\n\nexport const parseSplitAttributes: OperatorInitialization<SplitAttributes> = (node: Graph.Node): SplitAttributes => {\n  const axis = node.attributes.getInt('axis', 0);\n  const split = node.attributes.getInts('split', []);\n  const numOutputs = node.outputs.length;\n  return createAttributeWithCacheKey({axis, split, numOutputs});\n};\n\nconst getProgramCount =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], axis: number, attributes: SplitAttributes): number => {\n      const [, offsets] = SplitUtil.splitShape(inputs[0].dims, axis, attributes.split, attributes.numOutputs);\n      return offsets.length;\n    };\n\nconst createSplitProgramInfo =\n    (inferenceHandler: WebGLInferenceHandler, input: Tensor, attributes: SplitAttributes, axis: number, index: number):\n        ProgramInfo => {\n          const [shapes, offsets] = SplitUtil.splitShape(input.dims, axis, attributes.split, attributes.numOutputs);\n          const offset = offsets[index];\n          const outputShape = shapes[index];\n          const rank = outputShape.length;\n          const shaderSource = `\n      float process(int indices[${rank}]) {\n        indices[${axis}] += ${offset};\n        return _A(indices);\n      }\n    `;\n          return {\n            ...splitProgramMetadata,\n            cacheHint: `${attributes.cacheKey}:${index}`,\n            output: {dims: outputShape, type: input.type, textureType: TextureType.unpacked},\n            shaderSource\n          };\n        };\n\nconst validateInputs = (inputs: Tensor[]): void => {\n  if (!inputs || inputs.length !== 1) {\n    throw new Error('Split requires one input.');\n  }\n\n  if (inputs[0].type !== 'int8' && inputs[0].type !== 'uint8' && inputs[0].type !== 'int16' &&\n      inputs[0].type !== 'uint16' && inputs[0].type !== 'int32' && inputs[0].type !== 'uint32' &&\n      inputs[0].type !== 'float32' && inputs[0].type !== 'float64' && inputs[0].type !== 'bool') {\n    throw new Error('Invalid input type.');\n  }\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Graph} from '../../../graph';\nimport {OperatorImplementation, OperatorInitialization} from '../../../operators';\nimport {Tensor} from '../../../tensor';\nimport {ShapeUtil} from '../../../util';\nimport {WebGLInferenceHandler} from '../inference-handler';\n\nexport const squeeze: OperatorImplementation<number[]> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], axes: number[]): Tensor[] => {\n      validateInputs(inputs);\n      const outputShape = ShapeUtil.squeezeShape(inputs[0].dims, axes);\n      const output = inferenceHandler.reshapeUnpacked(inputs[0], outputShape);\n      return [output];\n    };\n\nexport const squeezeV13 = (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[]): Tensor[] => {\n  validateInputsV13(inputs);\n  return squeeze(inferenceHandler, [inputs[0]], Array.from(inputs[1].integerData));\n};\n\nexport const parseSqueezeAttributes: OperatorInitialization<number[]> = (node: Graph.Node): number[] =>\n    node.attributes.getInts('axes');\n\nconst validateInputs = (inputs: Tensor[]): void => {\n  if (!inputs || inputs.length !== 1) {\n    throw new Error('Squeeze requires 1 input.');\n  }\n\n  if (inputs[0].type === 'string') {\n    throw new Error('invalid input tensor types.');\n  }\n};\n\nconst validateInputsV13 = (inputs: Tensor[]): void => {\n  if (!inputs || inputs.length !== 2) {\n    throw new Error('Squeeze requires 2 inputs.');\n  }\n\n  if (inputs[1].type !== 'int32') {\n    throw new Error('Invalid input type.');\n  }\n};","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Tensor} from '../../../tensor';\nimport {getGlsl} from '../glsl-source';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, ProgramMetadata, TextureType} from '../types';\n\nexport const sum = (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[]): Tensor[] => {\n  validateInputs(inputs);\n\n  const sumProgramMetadata = {\n    name: 'Sum',\n    inputNames: inputs.map((v, i) => `X${i}`),\n    inputTypes: new Array(inputs.length).fill(TextureType.unpacked)\n  };\n\n  const output = inferenceHandler.run(\n      {...sumProgramMetadata, get: () => createSumProgramInfo(inferenceHandler, inputs, sumProgramMetadata)}, inputs);\n  return [output];\n};\n\nconst createSumProgramInfo =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], sumProgramMetadata: ProgramMetadata): ProgramInfo => {\n      const glsl = getGlsl(inferenceHandler.session.backend.glContext.version);\n      const outputShape = inputs[0].dims.slice();\n      const sumLine = inputs.map((v, i) => `${glsl.texture2D}(X${i},TexCoords)`).join(' + ');\n      const shaderSource = `\n      void main() {\n        vec4 result = ${sumLine};\n        ${glsl.output} = result;\n      }\n    `;\n      return {\n        ...sumProgramMetadata,\n        output: {dims: outputShape, type: inputs[0].type, textureType: TextureType.unpacked},\n        hasMain: true,\n        shaderSource\n      };\n    };\n\nconst validateInputs = (inputs: Tensor[]): void => {\n  if (!inputs || inputs.length === 0) {\n    throw new Error('Sum requires inputs.');\n  }\n\n  const length = inputs[0].dims.length;\n  for (let i = 1; i < inputs.length; i++) {\n    if (length !== inputs[i].dims.length) {\n      throw new Error('Input shapes are mismatched.');\n    }\n\n    for (let j = 0; j < length; j++) {\n      if (inputs[0].dims[j] !== inputs[i].dims[j]) {\n        throw new Error('Input shapes are not matched.');\n      }\n    }\n  }\n\n  if (inputs[0].type !== 'float32' && inputs[0].type !== 'float64') {\n    throw new Error('Invalid input type.');\n  }\n  for (let i = 1; i < inputs.length; i++) {\n    if (inputs[0].type !== inputs[i].type) {\n      throw new Error('Input types are not matched.');\n    }\n  }\n};","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {NUMBER_TYPES} from '../../../operators';\nimport {Tensor} from '../../../tensor';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, ProgramMetadata, TextureType} from '../types';\n\nexport const tile = (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[]): Tensor[] => {\n  validateInputs(inputs);\n\n  const tileProgramMetadata = {\n    name: 'Tile',\n    inputNames: ['A'],\n    inputTypes: [TextureType.unpacked],\n  };\n\n  const output = inferenceHandler.run(\n      {...tileProgramMetadata, get: () => createTileProgramInfo(inferenceHandler, inputs, tileProgramMetadata)},\n      inputs);\n  return [output];\n};\n\nconst createTileProgramInfo =\n    (handler: WebGLInferenceHandler, inputs: Tensor[], tileProgramMetadata: ProgramMetadata): ProgramInfo => {\n      const inputShape = inputs[0].dims.slice();\n      const outputShape = new Array(inputShape.length);\n\n      const tileOps: string[] = [];\n      for (let i = 0; i < inputShape.length; i++) {\n        outputShape[i] = inputShape[i] * inputs[1].numberData[i];\n        tileOps.push(`inputIdx[${i}] = int(mod(float(outputIdx[${i}]), ${inputShape[i]}.));`);\n      }\n\n      const rank = outputShape.length;\n      const shaderSource = `\n      float process(int outputIdx[${rank}]) {\n        int inputIdx[${rank}];\n        ${tileOps.join('\\n')}\n        return _A(inputIdx);\n      }\n    `;\n      return {\n        ...tileProgramMetadata,\n        output: {dims: outputShape, type: inputs[0].type, textureType: TextureType.unpacked},\n        shaderSource\n      };\n    };\n\nconst validateInputs = (inputs: Tensor[]): void => {\n  if (!inputs || inputs.length !== 2) {\n    throw new Error('Tile requires 2 input.');\n  }\n  if (inputs[1].dims.length !== 1) {\n    throw new Error('The second input shape must 1 dimension.');\n  }\n  if (inputs[1].dims[0] !== inputs[0].dims.length) {\n    throw new Error('Invalid input shape.');\n  }\n  if (NUMBER_TYPES.indexOf(inputs[0].type) === -1) {\n    throw new Error('Invalid input type.');\n  }\n  if (inputs[1].type !== 'int32' && inputs[1].type !== 'int16') {\n    throw new Error('Invalid repeat type.');\n  }\n};","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {AttributeWithCacheKey, createAttributeWithCacheKey} from '../../../attribute-with-cache-key';\nimport {Graph} from '../../../graph';\nimport {OperatorImplementation, OperatorInitialization} from '../../../operators';\nimport {Tensor} from '../../../tensor';\nimport {ShapeUtil} from '../../../util';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, TextureType} from '../types';\n\nexport interface TransposeAttributes extends AttributeWithCacheKey {\n  readonly perm: number[];\n}\n\nconst transposeProgramMetadata = {\n  name: 'Transpose',\n  inputNames: ['A'],\n  inputTypes: [TextureType.unpacked]\n};\n\nexport const transpose: OperatorImplementation<TransposeAttributes> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: TransposeAttributes): Tensor[] => {\n      validateInputs(inputs);\n      const output = inferenceHandler.run(\n          {\n            ...transposeProgramMetadata,\n            cacheHint: attributes.cacheKey,\n            get: () => createTransposeProgramInfo(inferenceHandler, inputs[0], attributes.perm)\n          },\n          inputs);\n      return [output];\n    };\n\nexport const parseTransposeAttributes: OperatorInitialization<TransposeAttributes> =\n    (node: Graph.Node): TransposeAttributes => createAttributeWithCacheKey({perm: node.attributes.getInts('perm', [])});\n\nconst createTransposeProgramInfo =\n    (inferenceHandler: WebGLInferenceHandler, input: Tensor, perm: number[]): ProgramInfo => {\n      const inputShape = input.dims;\n      perm = getAdjustedPerm(inputShape, perm);\n      const unpackedOutputShape = getOutputShape(inputShape, perm);\n      const rank = inputShape.length;\n      // A dims=[${inputs[0].dims.toString()}]\n      // out Dims=[${unpackedOutputShape.toString()}]\n      // based on perm=[${perm.toString()}]\n      const shaderSource = `\n      ${getPermFunctionBody('perm', perm, rank)}\n      float process(int indices[${rank}]) {\n        int a[${rank}];\n        perm(a, indices);\n        return _A(a);\n      }`;\n      return {\n        ...transposeProgramMetadata,\n        output: {dims: unpackedOutputShape, type: input.type, textureType: TextureType.unpacked},\n        shaderSource\n      };\n    };\n\nconst getAdjustedPerm = (inputShape: readonly number[], perm: number[]): number[] => {\n  if (perm && perm.length !== inputShape.length) {\n    perm = [...(inputShape.keys())].reverse();\n  }\n  return perm;\n};\n\nconst getOutputShape = (inputShape: readonly number[], perm: number[]): readonly number[] => {\n  perm = getAdjustedPerm(inputShape, perm);\n  return ShapeUtil.sortBasedOnPerm(inputShape, perm);\n};\n\nconst getPermFunctionBody = (name: string, perm: number[], rank: number): string => {\n  const reverseFunc = [];\n  reverseFunc.push(`void ${name}(out int a[${rank}], int src[${rank}]) {`);\n  for (let i = 0; i < rank; ++i) {\n    reverseFunc.push(`\\ta[${perm[i]}]=src[${i}];`);\n  }\n  reverseFunc.push('\\t}');\n  return reverseFunc.join('\\n');\n};\n\nconst validateInputs = (inputs: Tensor[]): void => {\n  if (!inputs || inputs.length !== 1) {\n    throw new Error('Transpose requires 1 input.');\n  }\n\n  if (inputs[0].type !== 'float32' && inputs[0].type !== 'float64') {\n    throw new Error('input should be float tensor');\n  }\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {getGlsl} from '../glsl-source';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {TextureData, TextureType} from '../types';\n\nexport const encodeAsUint8 = (inferenceHandler: WebGLInferenceHandler, input: TextureData): TextureData => {\n  const outputShape = input.shape;\n  const glsl = getGlsl(inferenceHandler.session.backend.glContext.version);\n  /**\n   * https://github.com/tensorflow/tfjs-core/blob/master/src/kernels/webgl/encode_float_gpu.ts\n   */\n  const shaderSource = `\n    const float FLOAT_MAX = 1.70141184e38;\n    const float FLOAT_MIN = 1.17549435e-38;\n\n    bool isNaN(float val) {\n      return (val < 1.0 || 0.0 < val || val == 0.0) ? false : true;\n    }\n\n    highp vec4 encodeAsUint8(highp float v) {\n      if (isNaN(v)) {\n        return vec4(255, 255, 255, 255);\n      }\n\n      highp float av = abs(v);\n\n      if(av < FLOAT_MIN) {\n        return vec4(0.0, 0.0, 0.0, 0.0);\n      } else if(v > FLOAT_MAX) {\n        return vec4(0.0, 0.0, 128.0, 127.0) / 255.0;\n      } else if(v < -FLOAT_MAX) {\n        return vec4(0.0, 0.0,  128.0, 255.0) / 255.0;\n      }\n\n      highp vec4 c = vec4(0,0,0,0);\n\n      highp float e = floor(log2(av));\n      highp float m = exp2(fract(log2(av))) - 1.0;\n\n      c[2] = floor(128.0 * m);\n      m -= c[2] / 128.0;\n      c[1] = floor(32768.0 * m);\n      m -= c[1] / 32768.0;\n      c[0] = floor(8388608.0 * m);\n\n      highp float ebias = e + 127.0;\n      c[3] = floor(ebias / 2.0);\n      ebias -= c[3] * 2.0;\n      c[2] += floor(ebias) * 128.0;\n\n      c[3] += 128.0 * step(0.0, -v);\n\n      return c / 255.0;\n    }\n\n    void main() {\n      float value = ${glsl.texture2D}(X,TexCoords).r;\n      ${glsl.output} = encodeAsUint8(value);\n    }`;\n  const programInfo = {\n    name: 'Uint8Encode',\n    inputTypes: [TextureType.unpacked],\n    inputNames: ['X'],\n    output: {dims: outputShape, type: input.tensor.type, textureType: TextureType.downloadUint8AsFloat},\n    shaderSource,\n    hasMain: true\n  };\n  return inferenceHandler.executeProgram(programInfo, [input.tensor]);\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {AttributeWithCacheKey, createAttributeWithCacheKey} from '../../../attribute-with-cache-key';\nimport {Graph} from '../../../graph';\nimport {Tensor} from '../../../tensor';\nimport {MAX_CLIP, MIN_CLIP} from '../../../util';\nimport {FunctionType, GlslValueFunction} from '../glsl-definitions';\nimport {getGlsl} from '../glsl-source';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, ProgramInfoLoader, ProgramMetadata, TextureType} from '../types';\n\nexport function glslAbs(): GlslValueFunction {\n  return glslBuiltinUnary('abs');\n}\nexport function glslAcos(): GlslValueFunction {\n  return glslBuiltinUnary('acos');\n}\nexport function glslAsin(): GlslValueFunction {\n  return glslBuiltinUnary('asin');\n}\nexport function glslAtan(): GlslValueFunction {\n  return glslBuiltinUnary('atan');\n}\nexport function glslCeil(): GlslValueFunction {\n  return glslBuiltinUnary('ceil');\n}\nexport function glslCos(): GlslValueFunction {\n  return glslBuiltinUnary('cos');\n}\nexport function glslElu(alpha: number): GlslValueFunction {\n  const name = 'elu';\n  const body = `\n  const float alpha = float(${alpha});\n\n  float ${name}_(float a) {\n    return a >= 0.0 ? a: (exp(a) - 1.0) * alpha;\n  }\n  vec4 ${name}_(vec4 v) {\n    return vec4(${name}_(v.x), ${name}_(v.y), ${name}_(v.z), ${name}_(v.w));\n  }\n  `;\n  return {body, name, type: FunctionType.ValueBased};\n}\nexport function glslExp(): GlslValueFunction {\n  return glslBuiltinUnary('exp');\n}\nexport function glslFloor(): GlslValueFunction {\n  return glslBuiltinUnary('floor');\n}\nexport function glslClip(min: number, max: number): GlslValueFunction {\n  const name = 'clip';\n  const body = `\n  const float min = float(${min});\n  const float max = float(${max});\n\n  float ${name}_(float a) {\n    return clamp(a, min, max);\n  }\n  vec4 ${name}_(vec4 v) {\n    return clamp(v, min, max);\n  }\n  `;\n  return {body, name, type: FunctionType.ValueBased};\n}\nexport function glslIdentity(): GlslValueFunction {\n  const name = 'indentity';\n  const body = `\n  float ${name}_(float a) {\n    return a;\n  }\n  vec4 ${name}_(vec4 v) {\n    return v;\n  }\n  `;\n  return {body, name, type: FunctionType.ValueBased};\n}\nexport function glslLeakyRelu(alpha: number): GlslValueFunction {\n  const name = 'leakyRelu';\n  const body = `\n  const float alpha = float(${alpha});\n\n  float ${name}_(float a) {\n    return a < 0.0 ? a * alpha : a;\n  }\n  vec4 ${name}_(vec4 v) {\n    return vec4(${name}_(v.x), ${name}_(v.y), ${name}_(v.z), ${name}_(v.w));\n  }\n  `;\n  return {body, name, type: FunctionType.ValueBased};\n}\nexport function glslLog(): GlslValueFunction {\n  return glslBuiltinUnary('log');\n}\nexport function glslNeg(): GlslValueFunction {\n  const name = 'neg';\n  const body = `\n  float ${name}_(float a) {\n    return -a;\n  }\n  vec4 ${name}_(vec4 v) {\n    return -v;\n  }\n  `;\n  return {body, name, type: FunctionType.ValueBased};\n}\nexport function glslNot(): GlslValueFunction {\n  const name = 'not';\n  const body = `\n  float ${name}_(float a) {\n    return float( ! bool(a) );\n  }\n  bool ${name}_(bool a) {\n    return !a;\n  }\n  vec4 ${name}_(vec4 v) {\n    return vec4(!bool(v.x), !bool(v.y), !bool(v.z), !bool(v.w));\n  }\n  bvec4 ${name}_(bvec4 v) {\n    return bvec4(!v.x, !v.y, !v.z, !v.w);\n  }\n  `;\n  return {body, name, type: FunctionType.ValueBased};\n}\nexport function glslSin(): GlslValueFunction {\n  return glslBuiltinUnary('sin');\n}\nexport function glslRelu(): GlslValueFunction {\n  const name = 'relu';\n  const body = `\n  float ${name}_(float a) {\n    return max( a, 0.0 );\n  }\n  vec4 ${name}_(vec4 v) {\n    return max( v, 0.0 );\n  }\n  `;\n  return {body, name, type: FunctionType.ValueBased};\n}\nexport function glslSigmoid(): GlslValueFunction {\n  const name = 'sigmoid';\n  const body = `\n  float ${name}_(float a) {\n    return 1.0 / (1.0 + exp(-a));\n  }\n  vec4 ${name}_(vec4 v) {\n    return 1.0 / (1.0 + exp(-v));\n  }\n  `;\n  return {body, name, type: FunctionType.ValueBased};\n}\nexport function glslSqrt(): GlslValueFunction {\n  return glslBuiltinUnary('sqrt');\n}\nexport function glslTan(): GlslValueFunction {\n  return glslBuiltinUnary('tan');\n}\nexport function glslTanh(): GlslValueFunction {\n  const name = 'tanh';\n  const body = `\n  float ${name}_(float a) {\n    a = clamp(a, -10., 10.);\n    a = exp(2.*a);\n    return (a - 1.) / (a + 1.);\n  }\n  vec4 ${name}_(vec4 v) {\n    v = clamp(v, -10., 10.);\n    v = exp(2.*v);\n    return (v - 1.) / (v + 1.);\n  }\n  `;\n  return {body, name, type: FunctionType.ValueBased};\n}\nfunction glslBuiltinUnary(name: string): GlslValueFunction {\n  const body = `\n  float ${name}_(float a) {\n    return ${name}(a);\n  }\n  vec4 ${name}_(vec4 v) {\n    return ${name}(v);\n  }\n  `;\n  return {body, name, type: FunctionType.ValueBased};\n}\n\n/////\n/////\n/////\n\nconst createElementwiseProgramInfo =\n    (handler: WebGLInferenceHandler, metadata: ProgramMetadata, input: Tensor, glslFunc: GlslValueFunction):\n        ProgramInfo => {\n          const textureType = handler.session.pack ? TextureType.packed : TextureType.unpacked;\n          const glsl = getGlsl(handler.session.backend.glContext.version);\n          return {\n            ...metadata,\n            output: {dims: input.dims, type: input.type, textureType},\n            shaderSource: `\n     ${glslFunc.body}\n     void main() {\n       vec4 v = ${glsl.texture2D}(A, TexCoords);\n       v = ${glslFunc.name}_(v);\n       ${glsl.output} = v;\n     }\n     `,\n            hasMain: true\n          };\n        };\n\nconst createElementwiseProgramInfoLoader =\n    (handler: WebGLInferenceHandler, input: Tensor, glslFunc: GlslValueFunction, cacheKey?: string):\n        ProgramInfoLoader => {\n          const textureType = handler.session.pack ? TextureType.packed : TextureType.unpacked;\n          const metadata = {name: glslFunc.name, inputTypes: [textureType], inputNames: ['A'], cacheHint: cacheKey};\n          return {...metadata, get: () => createElementwiseProgramInfo(handler, metadata, input, glslFunc)};\n        };\n\nexport const abs = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createElementwiseProgramInfoLoader(handler, inputs[0], glslAbs()), inputs)];\n\nexport const acos = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createElementwiseProgramInfoLoader(handler, inputs[0], glslAcos()), inputs)];\n\nexport const asin = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createElementwiseProgramInfoLoader(handler, inputs[0], glslAsin()), inputs)];\n\nexport const atan = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createElementwiseProgramInfoLoader(handler, inputs[0], glslAtan()), inputs)];\n\nexport interface ClipAttributes extends AttributeWithCacheKey {\n  readonly min: number;\n  readonly max: number;\n}\n\nexport const clip =\n    (handler: WebGLInferenceHandler, inputs: Tensor[], attributes: ClipAttributes): Tensor[] => [handler.run(\n        createElementwiseProgramInfoLoader(\n            handler, inputs[0], glslClip(attributes.min, attributes.max), attributes.cacheKey),\n        inputs)];\n\nexport const parseClipAttributes = (node: Graph.Node): ClipAttributes => createAttributeWithCacheKey(\n    {min: node.attributes.getFloat('min', MIN_CLIP), max: node.attributes.getFloat('max', MAX_CLIP)});\n\nexport const clipV11 = (handler: WebGLInferenceHandler, inputs: Tensor[]): Tensor[] => {\n  const attributes = generateClipAttributesFromInputs(handler, inputs);\n  return clip(handler, [inputs[0]], attributes);\n};\n\nconst generateClipAttributesFromInputs = (handler: WebGLInferenceHandler, inputs: Tensor[]): ClipAttributes => {\n  if (inputs.length >= 3 &&\n      (!handler.session.isInitializer(inputs[1].dataId) || !handler.session.isInitializer(inputs[2].dataId))) {\n    throw new Error('dynamic clip attributes are not allowed');\n  }\n\n  const min = (inputs.length >= 3) ? inputs[1].numberData[0] : MIN_CLIP;\n  const max = (inputs.length >= 3) ? inputs[2].numberData[0] : MAX_CLIP;\n  return createAttributeWithCacheKey({min, max});\n};\n\nexport const ceil = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createElementwiseProgramInfoLoader(handler, inputs[0], glslCeil()), inputs)];\n\nexport const cos = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createElementwiseProgramInfoLoader(handler, inputs[0], glslCos()), inputs)];\n\nexport interface EluAttributes extends AttributeWithCacheKey {\n  readonly alpha: number;\n}\n\nexport const elu =\n    (handler: WebGLInferenceHandler, inputs: Tensor[], attributes: EluAttributes): Tensor[] => [handler.run(\n        createElementwiseProgramInfoLoader(handler, inputs[0], glslElu(attributes.alpha), attributes.cacheKey),\n        inputs)];\n\nexport const parseEluAttributes = (node: Graph.Node): EluAttributes =>\n    createAttributeWithCacheKey({alpha: node.attributes.getFloat('alpha', 1.0)});\n\nexport const exp = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createElementwiseProgramInfoLoader(handler, inputs[0], glslExp()), inputs)];\n\nexport const floor = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createElementwiseProgramInfoLoader(handler, inputs[0], glslFloor()), inputs)];\n\nexport const identity = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createElementwiseProgramInfoLoader(handler, inputs[0], glslIdentity()), inputs)];\n\nexport interface LeakyReluAttributes extends AttributeWithCacheKey {\n  readonly alpha: number;\n}\n\nexport const leakyRelu =\n    (handler: WebGLInferenceHandler, inputs: Tensor[], attributes: LeakyReluAttributes): Tensor[] => [handler.run(\n        createElementwiseProgramInfoLoader(handler, inputs[0], glslLeakyRelu(attributes.alpha), attributes.cacheKey),\n        inputs)];\n\nexport const parseLeakyReluAttributes = (node: Graph.Node): LeakyReluAttributes =>\n    createAttributeWithCacheKey({alpha: node.attributes.getFloat('alpha', 0.01)});\n\nexport const log = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createElementwiseProgramInfoLoader(handler, inputs[0], glslLog()), inputs)];\n\nexport const neg = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createElementwiseProgramInfoLoader(handler, inputs[0], glslNeg()), inputs)];\n\nexport const not = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createElementwiseProgramInfoLoader(handler, inputs[0], glslNot()), inputs)];\n\nexport const relu = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createElementwiseProgramInfoLoader(handler, inputs[0], glslRelu()), inputs)];\n\nexport const sigmoid = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createElementwiseProgramInfoLoader(handler, inputs[0], glslSigmoid()), inputs)];\n\nexport const sin = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createElementwiseProgramInfoLoader(handler, inputs[0], glslSin()), inputs)];\n\nexport const sqrt = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createElementwiseProgramInfoLoader(handler, inputs[0], glslSqrt()), inputs)];\n\nexport const tan = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createElementwiseProgramInfoLoader(handler, inputs[0], glslTan()), inputs)];\n\nexport const tanh = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createElementwiseProgramInfoLoader(handler, inputs[0], glslTanh()), inputs)];\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Tensor} from '../../../tensor';\nimport {getGlsl} from '../glsl-source';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, ProgramInfoLoader, TextureType} from '../types';\nimport {getCoordsDataType} from '../utils';\n\nimport {getChannels, unpackFromChannel} from './packing-utils';\n\nconst unpackProgramMetadata = {\n  name: 'unpack',\n  inputNames: ['A'],\n  inputTypes: [TextureType.packed]\n};\n\nexport const createUnpackProgramInfo = (handler: WebGLInferenceHandler, input: Tensor): ProgramInfo => {\n  const rank = input.dims.length;\n\n  const channels = getChannels('rc', rank);\n  const innerDims = channels.slice(-2);\n  const coordsDataType = getCoordsDataType(rank);\n  const unpackChannel = unpackFromChannel();\n  const isScalar = (input.dims.length === 0);\n  const sourceCoords = isScalar ? '' : getSourceCoords(rank, channels);\n  const coords = rank <= 1 ? 'rc' : `vec2(${innerDims.join(',')})`;\n  const glsl = getGlsl(handler.session.backend.glContext.version);\n  const shaderSource = `\n    ${unpackChannel}\n    void main() {\n      ${coordsDataType} rc = getOutputCoords();\n\n       // Sample the texture with the coords to get the rgba channel value.\n       vec4 packedInput = getA(${sourceCoords});\n\n       ${glsl.output} = vec4(getChannel(packedInput, ${coords}), 0, 0, 0);\n     }\n   `;\n\n  return {\n    ...unpackProgramMetadata,\n    hasMain: true,\n    output: {dims: input.dims, type: input.type, textureType: TextureType.unpacked},\n    shaderSource\n  };\n};\n\nexport const createUnpackProgramInfoLoader = (handler: WebGLInferenceHandler, input: Tensor): ProgramInfoLoader =>\n    ({...unpackProgramMetadata, get: () => createUnpackProgramInfo(handler, input)});\n\nfunction getSourceCoords(rank: number, dims: string[]): string {\n  if (rank === 1) {\n    return 'rc';\n  }\n\n  let coords = '';\n  for (let i = 0; i < rank; i++) {\n    coords += dims[i];\n    if (i < rank - 1) {\n      coords += ',';\n    }\n  }\n  return coords;\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Graph} from '../../../graph';\nimport {OperatorImplementation, OperatorInitialization} from '../../../operators';\nimport {Tensor} from '../../../tensor';\nimport {ShapeUtil} from '../../../util';\nimport {WebGLInferenceHandler} from '../inference-handler';\n\nexport const unsqueeze: OperatorImplementation<number[]> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], axes: number[]): Tensor[] => {\n      validateInputs(inputs);\n      const outputShape = ShapeUtil.unsqueezeShape(inputs[0].dims, axes);\n      const output = inferenceHandler.reshapeUnpacked(inputs[0], outputShape);\n      return [output];\n    };\n\nexport const unsqueezeV13 = (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[]): Tensor[] => {\n  validateInputsV13(inputs);\n  return unsqueeze(inferenceHandler, [inputs[0]], Array.from(inputs[1].integerData));\n};\n\nexport const parseUnsqueezeAttributes: OperatorInitialization<number[]> = (node: Graph.Node): number[] =>\n    node.attributes.getInts('axes');\n\nconst validateInputs = (inputs: Tensor[]): void => {\n  if (!inputs || inputs.length !== 1) {\n    throw new Error('Unsqueeze requires 1 input.');\n  }\n\n  if (inputs[0].type === 'string') {\n    throw new Error('invalid input tensor types.');\n  }\n};\n\nconst validateInputsV13 = (inputs: Tensor[]): void => {\n  if (!inputs || inputs.length !== 2) {\n    throw new Error('Unsqueeze requires 2 inputs.');\n  }\n\n  if (inputs[1].type !== 'int32') {\n    throw new Error('Invalid input type.');\n  }\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {AttributeWithCacheKey, createAttributeWithCacheKey} from '../../../attribute-with-cache-key';\nimport {Graph} from '../../../graph';\nimport {OperatorImplementation, OperatorInitialization} from '../../../operators';\nimport {Tensor} from '../../../tensor';\nimport {getGlsl} from '../glsl-source';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, TextureType} from '../types';\n\nexport interface UpsampleAttributes extends AttributeWithCacheKey {\n  readonly opset: number;\n  readonly isResize: boolean;\n  readonly mode: string;\n  readonly scales: number[];\n  readonly extrapolationValue: number;\n  readonly coordinateTransformMode: string;\n  readonly useExtrapolation: boolean;\n  readonly needRoiInput: boolean;\n  readonly nearestMode: string;\n  readonly cubicCoefficientA: number;\n  readonly excludeOutside: boolean;\n  readonly useNearest2xOptimization: boolean;\n  readonly roiInputIdx: number;\n  readonly scalesInputIdx: number;\n  readonly sizesInputIdx: number;\n}\n\nconst upsampleProgramMetadata = {\n  name: 'Upsample',\n  inputNames: ['X'],\n  inputTypes: [TextureType.unpacked],\n};\n\nexport const upsample: OperatorImplementation<UpsampleAttributes> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: UpsampleAttributes): Tensor[] => {\n      validateInputs(inputs, attributes);\n      const output = inferenceHandler.run(\n          {\n            ...upsampleProgramMetadata,\n            cacheHint: attributes.cacheKey,\n            get: () => createUpsampleProgramInfo(inferenceHandler, inputs, attributes)\n          },\n          inputs);\n      return [output];\n    };\n\nexport const parseUpsampleAttributesV7: OperatorInitialization<UpsampleAttributes> =\n    (node: Graph.Node): UpsampleAttributes => parseUpsampleAttributes(node, 7);\n\nexport const parseUpsampleAttributesV9: OperatorInitialization<UpsampleAttributes> =\n    (node: Graph.Node): UpsampleAttributes => parseUpsampleAttributes(node, 9);\n\nexport const parseUpsampleAttributes = (node: Graph.Node, opset: number): UpsampleAttributes => {\n  const isResize = (opset >= 10);\n\n  // processing node attributes\n  const mode = node.attributes.getString('mode', 'nearest');\n  if (mode !== 'nearest' && mode !== 'linear' && (opset < 11 || mode !== 'cubic')) {\n    throw new Error(`unrecognized mode: ${mode}`);\n  }\n\n  let scales: number[] = [];\n  if (opset < 9) {\n    scales = node.attributes.getFloats('scales');\n    scalesValidation(scales, mode, isResize);\n  }\n\n  const extrapolationValue = node.attributes.getFloat('extrapolation_value', 0.0);\n\n  const coordinateTransformMode =\n      opset > 10 ? node.attributes.getString('coordinate_transformation_mode', 'half_pixel') : 'asymmetric';\n  if ([\n        'asymmetric', 'pytorch_half_pixel', 'tf_half_pixel_for_nn', 'align_corners', 'tf_crop_and_resize', 'half_pixel'\n      ].indexOf(coordinateTransformMode) === -1) {\n    throw new Error(`coordinate_transform_mode '${coordinateTransformMode}' is not supported`);\n  }\n  const needRoiInput = (coordinateTransformMode === 'tf_crop_and_resize');\n  const useExtrapolation = needRoiInput;\n\n  const nearestMode =\n      (mode === 'nearest' && opset >= 11) ? node.attributes.getString('nearest_mode', 'round_prefer_floor') : '';\n  if (['round_prefer_floor', 'round_prefer_ceil', 'floor', 'ceil', ''].indexOf(nearestMode) === -1) {\n    throw new Error(`nearest_mode '${nearestMode}' is not supported`);\n  }\n\n  const cubicCoefficientA = node.attributes.getFloat('cubic_coeff_a', -0.75);\n  const excludeOutside = node.attributes.getInt('exclude_outside', 0) !== 0;\n  if (excludeOutside && mode !== 'cubic') {\n    throw new Error('exclude_outside can be set to 1 only when mode is CUBIC.');\n  }\n\n  const useNearest2xOptimization =\n      (opset < 11) ? true : (mode === 'nearest' && coordinateTransformMode === 'asymmetric' && nearestMode === 'floor');\n\n  let roiInputIdx = 0;\n  let scalesInputIdx = 0;\n  let sizesInputIdx = 0;\n\n  if (opset > 10) {\n    // handle when roiInput is not given\n    if (node.inputs.length > 2) {\n      roiInputIdx = 1;\n      scalesInputIdx = 2;\n      sizesInputIdx = 3;\n    } else {\n      scalesInputIdx = 1;\n      sizesInputIdx = 2;\n    }\n  } else if (opset === 9) {\n    scalesInputIdx = 1;\n  }\n\n  return createAttributeWithCacheKey({\n    opset,\n    isResize,\n    mode,\n    scales,\n    extrapolationValue,\n    coordinateTransformMode,\n    useExtrapolation,\n    needRoiInput,\n    nearestMode,\n    cubicCoefficientA,\n    excludeOutside,\n    useNearest2xOptimization,\n    roiInputIdx,\n    scalesInputIdx,\n    sizesInputIdx\n  });\n};\n\nconst createUpsampleProgramInfo =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: UpsampleAttributes): ProgramInfo => {\n      const glsl = getGlsl(inferenceHandler.session.backend.glContext.version);\n      const [inputWidth, inputHeight] =\n          inferenceHandler.calculateTextureWidthAndHeight(inputs[0].dims, TextureType.unpacked);\n\n      const outputShape = inputs[0].dims.map((dim, i) => Math.floor(dim * attributes.scales[i]));\n      const [outputWidth, outputHeight] =\n          inferenceHandler.calculateTextureWidthAndHeight(outputShape, TextureType.unpacked);\n      const dim = outputShape.length;\n\n      const outputPitches = new Array<number>(dim);\n      const inputPitches = new Array<number>(dim);\n      let precalculatedPitches = `\n      int output_pitches[${dim}];\n      int input_pitches[${dim}];\n      `;\n      for (let d = dim - 1; d >= 0; d--) {\n        outputPitches[d] = (d === dim - 1) ? 1 : outputPitches[d + 1] * outputShape[d + 1];\n        inputPitches[d] = (d === dim - 1) ? 1 : inputPitches[d + 1] * inputs[0].dims[d + 1];\n\n        precalculatedPitches += `\n        output_pitches[${d}] = ${outputPitches[d]};\n        input_pitches[${d}] = ${inputPitches[d]};\n        `;\n      }\n      const getInputFloatFunction = `\n      float getInputFloat(int index) {\n        vec2 coords = offsetToCoords(index, ${inputWidth}, ${inputHeight});\n        float value = getColorAsFloat(${glsl.texture2D}(X, coords));\n        return value;\n      }\n      `;\n\n      const shaderSource = attributes.mode === 'nearest' ?\n          // nearest\n          `\n    ${getInputFloatFunction}\n    float process(int indices[${dim}]) {\n      int input_index = 0;\n      int output_index = coordsToOffset(TexCoords, ${outputWidth}, ${outputHeight});\n\n      ${precalculatedPitches}\n\n      int d, m;\n      for (int dim = 0; dim < ${dim}; ++dim) {\n        d = output_index / output_pitches[dim];\n        m = output_index - d * output_pitches[dim];\n        output_index = m;\n\n        if (scales[dim] != 1 && d > 0) {\n          int d2 = d / scales[dim];\n          m = d - d2 * scales[dim];\n          d = d2;\n        }\n        input_index += input_pitches[dim] * d;\n      }\n\n      return getInputFloat(input_index);\n    }` :\n          dim === 4 ?\n          // bilinear 4D\n              `\n    ${getInputFloatFunction}\n    float process(int indices[4]) {\n      int input_index = 0;\n      int output_index = coordsToOffset(TexCoords, ${outputWidth}, ${outputHeight});\n\n      ${precalculatedPitches}\n\n      int m;\n      int index_of_dim0, index_of_dim1, index_of_dim2, index_of_dim3;\n      index_of_dim0 = output_index / output_pitches[0];\n      m = output_index - index_of_dim0 * output_pitches[0];\n      index_of_dim1 = m / output_pitches[1];\n      m = m - index_of_dim1 * output_pitches[1];\n      index_of_dim2 = m / output_pitches[2];\n      m = m - index_of_dim2 * output_pitches[2];\n      index_of_dim3 = m;\n\n      int index_of_input_dim2, index_of_input_dim3, x_offset, y_offset;\n      index_of_input_dim2 = index_of_dim2 / scales[2];\n      y_offset = index_of_dim2 - index_of_input_dim2 * scales[2];\n      index_of_input_dim3 = index_of_dim3 / scales[3];\n      x_offset = index_of_dim3 - index_of_input_dim3 * scales[3];\n\n      input_index = index_of_dim0 * input_pitches[0] +\n            index_of_dim1 * input_pitches[1] +\n            index_of_input_dim2 * input_pitches[2] +\n            index_of_input_dim3;\n\n      float x00 = getInputFloat(input_index);\n      float x10, x01, x11;\n\n      bool end_of_dim2 = false;\n      if (index_of_input_dim2 == (${inputs[0].dims[2]} - 1)) {\n        // It's the end in dimension 2\n        x01 = x00;\n        end_of_dim2 = true;\n      } else {\n        x01 = getInputFloat(input_index + input_pitches[2]);\n      }\n\n      if (index_of_input_dim3 == (input_pitches[2] - 1)) {\n        // It's the end in dimension 3\n        x10 = x00;\n        x11 = x01;\n      }\n      else {\n        x10 = getInputFloat(input_index + 1);\n        x11 = end_of_dim2 ? x10 : getInputFloat(input_index + input_pitches[2] + 1);\n      }\n\n      float y0 = x00 + float(y_offset) * (x01 - x00) / float(scales[2]);\n      float y1 = x10 + float(y_offset) * (x11 - x10) / float(scales[2]);\n      return y0 + float(x_offset) * (y1 - y0) / float(scales[3]);\n    }` :\n              // bilinear 2D\n              `\n    ${getInputFloatFunction}\n    float process(int indices[2]) {\n      int input_index = 0;\n      int output_index = coordsToOffset(TexCoords, ${outputWidth}, ${outputHeight});\n\n      ${precalculatedPitches}\n\n      int m;\n      int index_of_dim0, index_of_dim1;\n      index_of_dim0 = output_index / output_pitches[0];\n      m = output_index - index_of_dim0 * output_pitches[0];\n      index_of_dim1 = m;\n\n      int index_of_input_dim0, index_of_input_dim1, x_offset, y_offset;\n      index_of_input_dim0 = index_of_dim0 / scales[0];\n      y_offset = index_of_dim0 - index_of_input_dim0 * scales[0];\n      index_of_input_dim1 = index_of_dim1 / scales[1];\n      x_offset = index_of_dim1 - index_of_input_dim1 * scales[1];\n\n      input_index = index_of_input_dim0 * input_pitches[0] + index_of_input_dim1;\n\n      float x00 = getInputFloat(input_index);\n      float x10, x01, x11;\n\n      bool end_of_dim0 = false;\n      if (index_of_input_dim0 == (${inputs[0].dims[0]} - 1)) {\n        // It's the end in dimension 0\n        x01 = x00;\n        end_of_dim0 = true;\n      } else {\n        x01 = getInputFloat(input_index + input_pitches[0]);\n      }\n\n      if (index_of_input_dim1 == (input_pitches[0] - 1)) {\n        // It's the end in dimension 1\n        x10 = x00;\n        x11 = x01;\n      }\n      else {\n        x10 = getInputFloat(input_index + 1);\n        x11 = end_of_dim0 ? x10 : getInputFloat(input_index + input_pitches[0] + 1);\n      }\n\n      float y0 = x00 + float(y_offset) * (x01 - x00) / float(scales[0]);\n      float y1 = x10 + float(y_offset) * (x11 - x10) / float(scales[0]);\n      return y0 + float(x_offset) * (y1 - y0) / float(scales[1]);\n    }`;\n      return {\n        ...upsampleProgramMetadata,\n        output: {dims: outputShape, type: inputs[0].type, textureType: TextureType.unpacked},\n        shaderSource,\n        variables: [{\n          name: 'scales',\n          type: 'int',\n          arrayLength: attributes.scales.length,\n          data: attributes.scales.map(x => Math.ceil(x))\n        }]\n      };\n    };\n\nexport const validateInputs = (inputs: Tensor[], attribute: UpsampleAttributes): void => {\n  if (!inputs || (attribute.opset < 9 && inputs.length !== 1) ||\n      (attribute.opset >= 9 && attribute.opset < 11 && inputs.length !== 2) ||\n      (attribute.opset >= 11 && inputs.length < 2)) {\n    throw new Error('invalid inputs.');\n  }\n\n  if (attribute.scales.length > 0 && inputs[0].dims.length !== attribute.scales.length) {\n    throw new Error('Invalid input shape.');\n  }\n\n  if (inputs[0].type === 'string') {\n    throw new Error('Invalid input tensor types.');\n  }\n};\n\nexport const scalesValidation = (scales: number[], mode: string, isResize: boolean): void => {\n  if (!isResize) {\n    for (const scale of scales) {\n      if (scale < 1) {\n        throw new Error('Scale value should be greater than or equal to 1.');\n      }\n    }\n  } else {\n    for (const scale of scales) {\n      if (scale <= 0) {\n        throw new Error('Scale value should be greater than 0.');\n      }\n    }\n  }\n  if (mode === 'linear' || mode === 'cubic') {\n    if (scales.length !== 2 && (scales.length !== 4 || scales[0] !== 1 || scales[1] !== 1)) {\n      throw new Error(`'Linear' mode and 'Cubic' mode only support 2-D inputs ('Bilinear', 'Bicubic') \\\n        or 4-D inputs with the corresponding outermost 2 scale values being 1 \\\n        in the ${isResize ? 'Resize' : 'Upsample'} opeartor.`);\n    }\n  }\n};","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {env} from 'onnxruntime-common';\n\nimport {Logger, Profiler} from '../../instrument';\n\nimport {GlslPreprocessor} from './glsl-preprocessor';\nimport {getVertexShaderSource} from './glsl-source';\nimport {TextureLayoutStrategy} from './texture-layout-strategy';\nimport {Artifact, ProgramInfo, ProgramVariable, TextureData, TextureLayout, VariableInfo} from './types';\nimport {WebGLContext} from './webgl-context';\n\n/**\n * ProgramManager is the main class behind running computations\n * It builds ProgramInfo's into Artifacts\n * It compiles given ProgramInfo's into WebGL Prorams (cached as Artifacts)\n * Uses the artifact to run the computation by calling Draw on\n * the WebGL drawing buffer\n * ProgramManager automatically maps (binds) input variables to their\n * corresponding Location's in the binary program\n */\nexport class ProgramManager {\n  repo: Map<unknown, Artifact>;  // this should be per-session object\n  vertexShader: WebGLShader;\n  attributesBound: boolean;\n\n  constructor(\n      public profiler: Readonly<Profiler>, public glContext: WebGLContext,\n      public textureLayoutStrategy: TextureLayoutStrategy) {\n    this.repo = new Map();\n    this.attributesBound = false;\n  }\n  getArtifact(key: unknown): Artifact|undefined {\n    return this.repo.get(key);\n  }\n  setArtifact(key: unknown, artifact: Artifact): void {\n    this.repo.set(key, artifact);\n  }\n  run(buildArtifact: Artifact, inputs: TextureData[], output: TextureData): void {\n    this.profiler.event('op', `ProgramManager.run ${buildArtifact.programInfo.name ?? 'unknown kernel'}`, () => {\n      const gl = this.glContext.gl;\n      const program = buildArtifact.program;\n      gl.useProgram(program);\n      try {\n        this.bindOutput(output);\n        if (!this.attributesBound) {\n          this.bindAttributes(buildArtifact.attribLocations);\n        }\n        this.bindUniforms(buildArtifact.uniformLocations, buildArtifact.programInfo.variables ?? [], inputs);\n      } catch (err) {\n        Logger.error('ProgramManager', buildArtifact.programInfo.shaderSource);\n        throw err;\n      }\n      this.profiler.event('backend', 'GlContext.draw()', () => {\n        this.glContext.draw();\n      });\n    }, this.glContext);\n  }\n  dispose(): void {\n    if (this.vertexShader) {\n      this.glContext.deleteShader(this.vertexShader);\n    }\n    this.repo.forEach(a => this.glContext.deleteProgram(a.program));\n  }\n  build(programInfo: ProgramInfo, inputTextureLayouts: TextureLayout[], outputTextureLayout: TextureLayout): Artifact {\n    return this.profiler.event('backend', 'ProgramManager.build', () => {\n      const preprocessor = new GlslPreprocessor(this.glContext, programInfo, inputTextureLayouts, outputTextureLayout);\n      const fragScript = preprocessor.preprocess();\n      const program = this.compile(fragScript);\n      const artifact = {\n        programInfo,\n        program,\n        uniformLocations: this.getUniformLocations(\n            program, preprocessor.context.programInfo.inputNames, preprocessor.context.programInfo.variables),\n        attribLocations: this.getAttribLocations(program)\n      };\n      return artifact;\n    });\n  }\n  protected compile(fragShaderScript: string): WebGLProgram {\n    if (!this.vertexShader) {\n      Logger.verbose('ProrgramManager', 'Compiling and caching Vertex shader for the first time');\n      const vertexShaderScript = getVertexShaderSource(this.glContext.version);\n      this.vertexShader = this.glContext.compileShader(vertexShaderScript, this.glContext.gl.VERTEX_SHADER);\n    }\n    if (env.debug) {\n      Logger.verbose('ProrgramManager', `FragShader:\n${fragShaderScript}\n`);\n    }\n    const fragShader = this.glContext.compileShader(fragShaderScript, this.glContext.gl.FRAGMENT_SHADER);\n    const program = this.glContext.createProgram(this.vertexShader, fragShader);\n    this.glContext.deleteShader(fragShader);\n    return program;\n  }\n  bindOutput(td: TextureData): void {\n    const width = td.width;\n    const height = td.height;\n    Logger.verbose(\n        'ProrgramManager',\n        `Binding output texture to Framebuffer: w/h=${width}/${height}, shape=${td.shape}, type=${td.tensor.type}`);\n    this.glContext.attachFramebuffer(td.texture, width, height);\n  }\n  bindAttributes(attribLocations: Artifact.AttribLocations): void {\n    const positionHandle = attribLocations.position;\n    const textureCoordHandle = attribLocations.textureCoord;\n    this.glContext.setVertexAttributes(positionHandle, textureCoordHandle);\n    this.attributesBound = true;\n  }\n  bindUniforms(uniformLocations: Artifact.UniformLocations, variables: ProgramVariable[], textures: TextureData[]):\n      void {\n    const gl = this.glContext.gl;\n    let texturePosition = 0;\n    for (const {name, type, location, arrayLength} of uniformLocations) {\n      const value = variables.find(v => v.name === name)?.data;\n      if (type !== 'sampler2D' && !value) {\n        throw new Error(`variable '${name}' does not have data defined in program info`);\n      }\n      switch (type) {\n        case 'sampler2D':\n          this.bindTexture(textures[texturePosition], location, texturePosition);\n          texturePosition++;\n          break;\n        case 'float':\n          if (arrayLength) {\n            gl.uniform1fv(location, value as number[]);\n          } else {\n            gl.uniform1f(location, value as number);\n          }\n          break;\n        case 'int':\n          if (arrayLength) {\n            gl.uniform1iv(location, value as number[]);\n          } else {\n            gl.uniform1i(location, value as number);\n          }\n          break;\n        default:\n          throw new Error(`Uniform not implemented: ${type}`);\n      }\n    }\n  }\n  bindTexture(td: TextureData, uniformHandle: WebGLUniformLocation, position: number): void {\n    this.glContext.bindTextureToUniform(td.texture, position, uniformHandle);\n  }\n  getAttribLocations(program: WebGLProgram): Artifact.AttribLocations {\n    return {\n      position: this.getAttribLocation(program, 'position'),\n      textureCoord: this.getAttribLocation(program, 'textureCoord')\n    };\n  }\n  getUniformLocations(program: WebGLProgram, samplers?: string[], variables?: VariableInfo[]):\n      Artifact.UniformLocations {\n    const uniformLocations: Artifact.UniformLocations = [];\n    if (samplers) {\n      for (const sampler of samplers) {\n        uniformLocations.push({name: sampler, type: 'sampler2D', location: this.getUniformLocation(program, sampler)});\n      }\n    }\n    if (variables) {\n      for (const variable of variables) {\n        uniformLocations.push({...variable, location: this.getUniformLocation(program, variable.name)});\n      }\n    }\n    return uniformLocations;\n  }\n  getUniformLocation(program: WebGLProgram, name: string): WebGLUniformLocation {\n    const gl = this.glContext.gl;\n    const reference = gl.getUniformLocation(program, name);\n    if (reference === null) {\n      throw new Error(`Uniform ${name} not found.`);\n    }\n    return reference;\n  }\n  getAttribLocation(program: WebGLProgram, name: string): number {\n    const gl = this.glContext.gl;\n    const attributeLocation: number = gl.getAttribLocation(program, name);\n    return attributeLocation;\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {SessionHandler} from '../../backend';\nimport {Graph} from '../../graph';\nimport {Logger} from '../../instrument';\nimport {Operator} from '../../operators';\nimport {OpSet, resolveOperator} from '../../opset';\nimport {Session} from '../../session';\nimport {Tensor} from '../../tensor';\nimport {WebGLBackend} from '../backend-webgl';\n\nimport {WebGLInferenceHandler} from './inference-handler';\nimport {WEBGL_OP_RESOLVE_RULES} from './op-resolve-rules';\nimport {ProgramManager} from './program-manager';\nimport {PreferLogicalStrategy, TextureLayoutStrategy} from './texture-layout-strategy';\nimport {TextureManager} from './texture-manager';\nimport {TextureData} from './types';\n\nexport class WebGLSessionHandler implements SessionHandler {\n  programManager: ProgramManager;\n  textureManager: TextureManager;\n  layoutStrategy: TextureLayoutStrategy;\n  packedTextureDataCache: Map<Tensor.Id, TextureData>;\n  unpackedTextureDataCache: Map<Tensor.Id, TextureData>;\n  pack2unpackMap: Map<Tensor.Id, Tensor.Id>;\n  unpack2packMap: Map<Tensor.Id, Tensor.Id>;\n  initializers: Set<Tensor.Id>;\n  pack?: boolean;\n\n  constructor(public readonly backend: WebGLBackend, public readonly context: Session.Context) {\n    this.layoutStrategy = new PreferLogicalStrategy(backend.glContext.maxTextureSize);\n    this.programManager = new ProgramManager(this.context.profiler, backend.glContext, this.layoutStrategy);\n    this.textureManager = new TextureManager(\n        backend.glContext, this.layoutStrategy, this.context.profiler,\n        {reuseTextures: backend.textureCacheMode === 'full'});\n    this.packedTextureDataCache = new Map();\n    this.unpackedTextureDataCache = new Map();\n    this.pack = backend.pack;\n    this.pack2unpackMap = new Map();\n    this.unpack2packMap = new Map();\n  }\n\n  createInferenceHandler() {\n    return new WebGLInferenceHandler(this);\n  }\n  onGraphInitialized(graph: Graph): void {\n    const initializers = graph.getValues().filter(v => v.from === -1 && v.tensor).map(v => v.tensor!.dataId);\n    this.initializers = new Set(initializers);\n  }\n  isInitializer(tensorId: Tensor.Id): boolean {\n    return this.initializers ? this.initializers.has(tensorId) : false;\n  }\n  addInitializer(tensorId: Tensor.Id): void {\n    this.initializers.add(tensorId);\n  }\n  getTextureData(tensorId: Tensor.Id, isPacked: boolean): TextureData|undefined {\n    if (isPacked) {\n      return this.packedTextureDataCache.get(tensorId);\n    } else {\n      return this.unpackedTextureDataCache.get(tensorId);\n    }\n  }\n  setTextureData(tensorId: Tensor.Id, textureData: TextureData, isPacked = false): void {\n    Logger.verbose('WebGLSessionHandler', 'Storing Texture data in cache');\n    if (isPacked) {\n      this.packedTextureDataCache.set(tensorId, textureData);\n    } else {\n      this.unpackedTextureDataCache.set(tensorId, textureData);\n    }\n  }\n  dispose(): void {\n    this.programManager.dispose();\n    this.textureManager.clearActiveTextures();\n    this.packedTextureDataCache.forEach(td => this.textureManager.releaseTexture(td, true));\n    this.packedTextureDataCache = new Map();\n    this.unpackedTextureDataCache.forEach(td => this.textureManager.releaseTexture(td, true));\n    this.unpackedTextureDataCache = new Map();\n  }\n  resolve(node: Graph.Node, opsets: readonly OpSet[], graph: Graph): Operator {\n    const op = resolveOperator(node, opsets, WEBGL_OP_RESOLVE_RULES);\n    return {impl: op.opImpl, context: op.opInit ? op.opInit(node, graph) : node};\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Logger} from '../../instrument';\n\nexport declare namespace Encoder {\n  export interface DataTypeMap {\n    float: Float32Array;\n    byte: Uint8Array;\n    int: Uint32Array;\n  }\n  export type DataType = keyof DataTypeMap;\n  type DataArrayType = DataTypeMap[DataType];\n\n  /* eslint-disable @typescript-eslint/naming-convention */\n  export const enum Usage {\n    Default = 0,\n    UploadOnly,\n    Download4BytesAsFloat32,\n  }\n}\n\n/**\n * Abstraction for mapping data types to texture texlets\n * Encoding means how a Float32 is mapped to 1 or 4 channels for each texlet\n * Decoding means how a texlet's channels are mapped to a resulting Float32\n */\nexport interface DataEncoder {\n  internalFormat: number;\n  format: number;\n  textureType: number;\n  channelSize: number;\n  encode(src: Encoder.DataArrayType, textureSize: number): Encoder.DataArrayType;\n  allocate(size: number): Encoder.DataArrayType;\n  decode(buffer: Encoder.DataArrayType, dataSize: number): Encoder.DataArrayType;\n}\n/**\n * WebGL2 data encoder\n * Uses R32F as the format for texlet\n */\nexport class RedFloat32DataEncoder implements DataEncoder {\n  internalFormat: number;\n  format: number;\n  textureType: number;\n  channelSize: number;\n  constructor(gl: WebGL2RenderingContext, channels = 1) {\n    if (channels === 1) {\n      this.internalFormat = gl.R32F;\n      this.format = gl.RED;\n      this.textureType = gl.FLOAT;\n      this.channelSize = channels;\n    } else if (channels === 4) {\n      this.internalFormat = gl.RGBA32F;\n      this.format = gl.RGBA;\n      this.textureType = gl.FLOAT;\n      this.channelSize = channels;\n    } else {\n      throw new Error(`Invalid number of channels: ${channels}`);\n    }\n  }\n  encode(src: Encoder.DataArrayType, textureSize: number): Encoder.DataArrayType {\n    let result: Float32Array;\n    let source: Float32Array;\n    if (src.constructor !== Float32Array) {\n      Logger.warning('Encoder', 'data was not of type Float32; creating new Float32Array');\n      source = new Float32Array(src);\n    }\n    if (textureSize * this.channelSize > src.length) {\n      Logger.warning('Encoder', 'Source data too small. Allocating larger array');\n      source = src as Float32Array;\n      result = this.allocate(textureSize * this.channelSize) as Float32Array;\n      source.forEach((v, i) => result[i] = v);\n    } else {\n      source = src as Float32Array;\n      result = source;\n    }\n    return result;\n  }\n  allocate(size: number): Encoder.DataArrayType {\n    return new Float32Array(size * 4);\n  }\n  decode(buffer: Encoder.DataArrayType, dataSize: number): Float32Array {\n    if (this.channelSize === 1) {\n      const filteredData = (buffer as Float32Array).filter((value, index) => index % 4 === 0).subarray(0, dataSize);\n      return filteredData;\n    }\n    return buffer.subarray(0, dataSize) as Float32Array;\n  }\n}\n/**\n * Data encoder for WebGL 1 with support for floating point texture\n */\nexport class RGBAFloatDataEncoder implements DataEncoder {\n  internalFormat: number;\n  format: number;\n  textureType: number;\n  channelSize: number;\n  constructor(gl: WebGLRenderingContext, channels = 1, textureType?: number) {\n    if (channels !== 1 && channels !== 4) {\n      throw new Error(`Invalid number of channels: ${channels}`);\n    }\n    this.internalFormat = gl.RGBA;\n    this.format = gl.RGBA;\n    this.channelSize = channels;\n    this.textureType = textureType || gl.FLOAT;\n  }\n  encode(src: Float32Array, textureSize: number): Encoder.DataArrayType {\n    let dest = src;\n    if (this.channelSize === 1) {\n      Logger.verbose('Encoder', 'Exploding into a larger array');\n      dest = this.allocate(textureSize) as Float32Array;\n      src.forEach((v, i) => dest[i * 4] = v);\n    }\n    return dest;\n  }\n  allocate(size: number): Encoder.DataArrayType {\n    return new Float32Array(size * 4);\n  }\n  decode(buffer: Encoder.DataArrayType, dataSize: number): Float32Array {\n    if (this.channelSize === 1) {\n      const filteredData = (buffer as Float32Array).filter((value, index) => index % 4 === 0).subarray(0, dataSize);\n      return filteredData;\n    }\n    return buffer.subarray(0, dataSize) as Float32Array;\n  }\n}\n\nexport class Uint8DataEncoder implements DataEncoder {\n  internalFormat: number;\n  format: number;\n  textureType: number;\n  channelSize = 4;\n  constructor(gl: WebGLRenderingContext, channels = 1) {\n    if (channels === 1) {\n      this.internalFormat = gl.ALPHA;\n      this.format = gl.ALPHA;  // not tested\n      this.textureType = gl.UNSIGNED_BYTE;\n      this.channelSize = channels;\n    } else if (channels === 4) {\n      this.internalFormat = gl.RGBA;\n      this.format = gl.RGBA;\n      this.textureType = gl.UNSIGNED_BYTE;\n      this.channelSize = channels;\n    } else {\n      throw new Error(`Invalid number of channels: ${channels}`);\n    }\n  }\n  encode(src: Uint8Array, _textureSize: number): Encoder.DataArrayType {\n    return new Uint8Array(src.buffer, src.byteOffset, src.byteLength);\n  }\n  allocate(size: number): Encoder.DataArrayType {\n    return new Uint8Array(size * this.channelSize);\n  }\n  decode(buffer: Encoder.DataArrayType, dataSize: number): Uint8Array {\n    if (buffer instanceof Uint8Array) {\n      return buffer.subarray(0, dataSize);\n    }\n    throw new Error(`Invalid array type: ${buffer.constructor}`);\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Logger} from '../../instrument';\nimport {assert} from '../../util';\n\n/** Layout preferences */\nexport interface WidthHeightPrefs {\n  breakAxis?: number;\n  isPacked?: boolean;\n  reverseWH?: boolean;\n}\n/**\n * TextureLayoutStrategy is an abstraction for different plans\n * for mapping n-dimensional arrays to 2D textures (and back)\n */\nexport interface TextureLayoutStrategy {\n  computeTextureWH(shape: readonly number[], prefs?: WidthHeightPrefs): [number, number];\n}\n\n/**\n * This strategy try to find the minimal max(W,H) that fulfills (W * H == totalSize)\n */\nexport class AlwaysKeepOriginalSizeStrategy implements TextureLayoutStrategy {\n  constructor(public maxTextureSize: number) {}\n  computeTextureWH(shape: readonly number[], prefs?: WidthHeightPrefs): [number, number] {\n    // scalar tensor\n    if (shape.length === 0) {\n      return [1, 1];\n    }\n    const maxTextureSize = this.maxTextureSize;\n    if (prefs && prefs.breakAxis !== undefined) {\n      // check to see if dims fit\n      const wsize = prefs.breakAxis >= shape.length ? 1 : shape.slice(prefs.breakAxis).reduce((a, b) => a * b);\n      const hsize = prefs.breakAxis <= 0 ? 1 : shape.slice(0, prefs.breakAxis).reduce((a, b) => a * b);\n      if (wsize > maxTextureSize || hsize > maxTextureSize) {\n        // ignore preferences\n        // continue with default layout\n        Logger.verbose(\n            'TextureLayout',\n            `Given width/height preferences were unattainable: shape:${shape}, breakAxis:${prefs.breakAxis}`);\n      } else {\n        return [wsize, hsize];\n      }\n    }\n    const totalSize = shape.reduce((a, b) => a * b);\n\n    let width = Math.floor(Math.sqrt(totalSize));\n\n    for (; width < maxTextureSize && width < totalSize; width++) {\n      if (totalSize % width === 0) {\n        break;\n      }\n    }\n\n    if (width >= maxTextureSize || totalSize % width !== 0) {\n      throw new Error(`The given dimensions are outside this GPU's boundaries: ${shape}`);\n    }\n    return [width, totalSize / width];\n  }\n}\n\nexport class PreferLogicalStrategy implements TextureLayoutStrategy {\n  constructor(public maxTextureSize: number) {}\n  computeTextureWH(shape: readonly number[], prefs?: WidthHeightPrefs): [number, number] {\n    const wh = this.computeTexture(shape, prefs);\n    if (prefs && prefs.isPacked) {\n      wh[0] /= 2;\n      wh[1] /= 2;\n    }\n    if (prefs && prefs.reverseWH) {\n      return [wh[1], wh[0]];\n    }\n    return wh;\n  }\n\n  computeTexture(shape: readonly number[], prefs?: WidthHeightPrefs): [number, number] {\n    const isPacked = prefs && prefs.isPacked;\n    // scalar tensor\n    if (shape.length === 0) {\n      return isPacked ? [2, 2] : [1, 1];\n    }\n    let maxTextureSize = this.maxTextureSize;\n    if (prefs && prefs.breakAxis !== undefined) {\n      // check to see if dims fit\n      const wsize = prefs.breakAxis >= shape.length ? 1 : shape.slice(prefs.breakAxis).reduce((a, b) => a * b);\n      const hsize = prefs.breakAxis <= 0 ? 1 : shape.slice(0, prefs.breakAxis).reduce((a, b) => a * b);\n      if (wsize > maxTextureSize || hsize > maxTextureSize) {\n        // ignore preferences\n        // continue with default layout\n        Logger.verbose(\n            'TextureLayout',\n            `Given width/height preferences were unattainable: shape:${shape}, breakAxis:${prefs.breakAxis}`);\n      } else {\n        return [wsize, hsize];\n      }\n    }\n    let logShape = shape.slice(0);\n    if (isPacked) {\n      maxTextureSize = maxTextureSize * 2;\n\n      // This logic ensures we accurately count the number of packed texels needed\n      // to accommodate the tensor. We can only pack values in the same texel if\n      // they are from adjacent pairs of rows/cols within the same batch. So if a\n      // tensor has 3 rows, we pretend it has 4 rows in order to account for the\n      // fact that the texels containing the third row are half empty.\n      logShape = logShape.map(\n          (d, i) => i >= logShape.length - 2 ? (logShape[i] % 2 === 0 ? logShape[i] : logShape[i] + 1) : logShape[i]);\n\n      // Packed texture height is at least 2 (the channel height of a single\n      // texel).\n      if (logShape.length === 1) {\n        logShape = [2, logShape[0]];\n      }\n    }\n\n    // If logical shape is 2, we don't squeeze, since we want to match physical.\n    if (logShape.length !== 2) {\n      const squeezeResult = squeezeShape(logShape);\n      logShape = squeezeResult.newShape;\n    }\n\n    const size = sizeFromShape(logShape);\n    if (logShape.length <= 1 && size <= maxTextureSize) {\n      return [1, size];\n    } else if (logShape.length === 2 && logShape[0] <= maxTextureSize && logShape[1] <= maxTextureSize) {\n      return logShape as [number, number];\n    } else if (logShape.length === 3 && logShape[0] * logShape[1] <= maxTextureSize && logShape[2] <= maxTextureSize) {\n      return [logShape[0] * logShape[1], logShape[2]];\n    } else if (logShape.length === 3 && logShape[0] <= maxTextureSize && logShape[1] * logShape[2] <= maxTextureSize) {\n      return [logShape[0], logShape[1] * logShape[2]];\n    } else if (\n        logShape.length === 4 && logShape[0] * logShape[1] * logShape[2] <= maxTextureSize &&\n        logShape[3] <= maxTextureSize) {\n      return [logShape[0] * logShape[1] * logShape[2], logShape[3]];\n    } else if (\n        logShape.length === 4 && logShape[0] <= maxTextureSize &&\n        logShape[1] * logShape[2] * logShape[3] <= maxTextureSize) {\n      return [logShape[0], logShape[1] * logShape[2] * logShape[3]];\n    } else {\n      if (isPacked) {\n        // For packed textures size equals the number of channels required to\n        // accommodate the texture data. However in order to squarify such that\n        // inner dimensions stay even, we rewrite size to equal the number of\n        // texels. Then in the return statement we rehydrate the squarified\n        // dimensions to channel units.\n        return sizeToSquarishShape(size / 4).map(d => d * 2) as [number, number];\n      }\n      return sizeToSquarishShape(size);\n    }\n  }\n}\n\nexport function squeezeShape(shape: number[], axis?: number[]): {newShape: number[]; keptDims: number[]} {\n  const newShape: number[] = [];\n  const keptDims: number[] = [];\n  const isEmptyArray = axis != null && Array.isArray(axis) && axis.length === 0;\n  const axes = (axis == null || isEmptyArray) ? null : parseAxisParam(axis, shape).sort();\n  let j = 0;\n  for (let i = 0; i < shape.length; ++i) {\n    if (axes != null) {\n      if (axes[j] === i && shape[i] !== 1) {\n        throw new Error(`Can't squeeze axis ${i} since its dim '${shape[i]}' is not 1`);\n      }\n      if ((axes[j] == null || axes[j] > i) && shape[i] === 1) {\n        newShape.push(shape[i]);\n        keptDims.push(i);\n      }\n      if (axes[j] <= i) {\n        j++;\n      }\n    }\n    if (shape[i] !== 1) {\n      newShape.push(shape[i]);\n      keptDims.push(i);\n    }\n  }\n  return {newShape, keptDims};\n}\n\nexport function parseAxisParam(axis: number|number[], shape: number[]): number[] {\n  const rank = shape.length;\n\n  // Normalize input\n  axis = axis == null ? shape.map((s, i) => i) : ([] as number[]).concat(axis);\n\n  // Check for valid range\n  assert(\n      axis.every(ax => ax >= -rank && ax < rank),\n      () => `All values in axis param must be in range [-${rank}, ${rank}) but ` +\n          `got axis ${axis}`);\n\n  // Check for only integers\n  assert(\n      axis.every(isInt),\n      () => 'All values in axis param must be integers but ' +\n          `got axis ${axis}`);\n\n  // Handle negative axis.\n  return axis.map(a => a < 0 ? rank + a : a);\n}\nexport function isInt(a: number): boolean {\n  return a % 1 === 0;\n}\nexport function sizeFromShape(shape: number[]): number {\n  if (shape.length === 0) {\n    // Scalar.\n    return 1;\n  }\n  let size = shape[0];\n  for (let i = 1; i < shape.length; i++) {\n    size *= shape[i];\n  }\n  return size;\n}\nexport function getRowsCols(shape: number[]): [number, number] {\n  if (shape.length === 0) {\n    throw Error('Cannot get rows and columns of an empty shape array.');\n  }\n\n  return [shape.length > 1 ? shape[shape.length - 2] : 1, shape[shape.length - 1]];\n}\nexport function sizeToSquarishShape(size: number): [number, number] {\n  const width = Math.ceil(Math.sqrt(size));\n  return [width, Math.ceil(size / width)];\n}\nexport function getBatchDim(shape: number[], dimsToSkip = 2): number {\n  return sizeFromShape(shape.slice(0, shape.length - dimsToSkip));\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {ShapeUtil} from '../../util';\n\nimport {TextureLayoutStrategy, WidthHeightPrefs} from './texture-layout-strategy';\nimport {TextureLayout, TextureType} from './types';\n\nexport const createTextureLayoutFromTextureType =\n    (textureLayoutStrategy: TextureLayoutStrategy, shape: readonly number[],\n     textureType: TextureType): TextureLayout => {\n      const channel = (textureType === TextureType.unpacked || textureType === TextureType.unpackedReversed) ? 1 : 4;\n      const isPacked = textureType === TextureType.packed;\n      const reverseWH = (textureType === TextureType.unpackedReversed || textureType === TextureType.packed);\n      const breakAxis = textureType === TextureType.packedLastDimension ? shape.length - 1 : undefined;\n      const unpackedShape = textureType === TextureType.packedLastDimension ?\n          shape.map((d, i) => i === shape.length - 1 ? d * 4 : d) :\n          undefined;\n      return createTextureLayoutFromShape(\n          textureLayoutStrategy, shape, channel, unpackedShape, {isPacked, reverseWH, breakAxis});\n    };\n\nexport const calculateTextureWidthAndHeight =\n    (textureLayoutStrategy: TextureLayoutStrategy, shape: readonly number[], textureType: TextureType):\n        [number, number] => {\n          const layout = createTextureLayoutFromTextureType(textureLayoutStrategy, shape, textureType);\n          return [layout.width, layout.height];\n        };\n\n/**\n * Create a TextureLayout object from shape.\n */\nexport const createTextureLayoutFromShape =\n    (textureLayoutStrategy: TextureLayoutStrategy, shape: readonly number[], channels: 1|4 = 1,\n     unpackedShape?: readonly number[], prefs?: WidthHeightPrefs): TextureLayout => {\n      const isPacked = !!(prefs && prefs.isPacked);\n      const [width, height] = textureLayoutStrategy.computeTextureWH(isPacked ? unpackedShape || shape : shape, prefs);\n      const rank = shape.length;\n      let inferredDims = shape.slice(0);\n      if (rank === 0) {\n        inferredDims = [1];\n      }\n      if (channels === 1) {\n        // unpackedShape will take `shape` and not `inferredDims` so as to create a scalar Tensor if need be\n        unpackedShape = shape;\n      } else if (isPacked) {\n        if (channels !== 4) {\n          throw new Error('a packed texture must be 4-channel');\n        }\n        unpackedShape = shape;\n        if (rank > 0) {\n          inferredDims[rank - 1] = Math.ceil(inferredDims[rank - 1] / 2);\n        }\n        if (rank > 1) {\n          inferredDims[rank - 2] = Math.ceil(inferredDims[rank - 2] / 2);\n        }\n      } else if (!unpackedShape) {\n        throw new Error('Unpacked shape is needed when using channels > 1');\n      }\n      return {\n        width,\n        height,\n        channels,\n        isPacked,\n        shape: inferredDims,\n        strides: ShapeUtil.computeStrides(inferredDims),\n        unpackedShape,\n        reversedWH: (prefs && prefs.reverseWH)\n      };\n    };\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Logger, Profiler} from '../../instrument';\nimport {Tensor} from '../../tensor';\n\nimport {Encoder} from './texture-data-encoder';\nimport {TextureLayoutStrategy} from './texture-layout-strategy';\nimport {TextureData, TextureLayout} from './types';\nimport {WebGLContext} from './webgl-context';\n\nexport interface TextureManagerConfig {\n  reuseTextures?: boolean;\n}\n\n/**\n * TextureManager is the mainly responsible for caching Textures\n * Textures are cached in 2 levels:\n *   1. the texures which are associated with a dataId (from Tensor)\n *    Caching these is crucial to performance. These are In-use Textures\n *   2. textures which are not in use by any current ProgramInfo/Tensor\n *     These are called Free Textures\n * TextureManager is also used to help creating textures. For this it\n * uses WebGLContext and TextureLayoutStrategy\n */\nexport class TextureManager {\n  private readonly inUseTextures: Map<string, WebGLTexture[]>;\n  private readonly idleTextures: Map<string, WebGLTexture[]>;\n  private readonly textureLookup: Map<WebGLTexture, string>;\n  private readonly pendingRead: Map<Tensor.Id, Array<(arr: Tensor.NumberType) => void>> = new Map();\n\n  constructor(\n      public glContext: WebGLContext, public layoutStrategy: TextureLayoutStrategy, public profiler: Readonly<Profiler>,\n      private config: TextureManagerConfig) {\n    if (config.reuseTextures) {\n      this.inUseTextures = new Map();\n      this.idleTextures = new Map();\n      this.textureLookup = new Map();\n    }\n  }\n  createTextureFromLayout(\n      dataType: Tensor.DataType, layout: TextureLayout, data?: Tensor.NumberType, usage?: Encoder.Usage) {\n    const textureDataType = this.toEncoderType(dataType);\n\n    const encoder = this.glContext.getEncoder(textureDataType, layout.channels || 1, usage);\n    if (layout.isPacked && usage === Encoder.Usage.UploadOnly) {\n      throw new Error('not implemented');\n    }\n    const width = layout.width;\n    const height = layout.height;\n\n    let key: string|undefined;\n    let inUseTextures: WebGLTexture[]|undefined;\n    if (this.config.reuseTextures) {\n      key = `${width}x${height}_${encoder.format}_${encoder.internalFormat}_${encoder.textureType}`;\n      inUseTextures = this.inUseTextures.get(key);\n      if (!inUseTextures) {\n        inUseTextures = [];\n        this.inUseTextures.set(key, inUseTextures);\n      }\n\n      const idleTextures = this.idleTextures.get(key);\n      if (idleTextures && idleTextures.length > 0) {\n        const texture = idleTextures.pop()!;\n        inUseTextures.push(texture);\n        if (usage === Encoder.Usage.UploadOnly) {\n          this.glContext.updateTexture(texture, width, height, encoder, this.toTextureData(dataType, data)!);\n        }\n        return texture;\n      }\n    }\n\n    Logger.verbose('TextureManager', `Creating new texture of size ${layout.width}x${layout.height}`);\n    const texture = this.glContext.allocateTexture(width, height, encoder, this.toTextureData(dataType, data));\n\n    if (this.config.reuseTextures) {\n      inUseTextures!.push(texture);\n      this.textureLookup.set(texture, key!);\n    }\n    return texture;\n  }\n  readTexture(td: TextureData, dataType: Tensor.DataType, channels?: number): Tensor.NumberType {\n    if (!channels) {\n      channels = 1;\n    }\n    return this.profiler.event('backend', 'TextureManager.readTexture', () => {\n      const dataSize = td.shape.reduce((a, b) => a * b) * channels!;\n      const data = this.glContext.readTexture(\n          td.texture, td.width, td.height, dataSize, this.toEncoderType(dataType), channels!);\n      return this.toTensorData(dataType, data);\n    });\n  }\n  async readTextureAsync(td: TextureData, dataType: Tensor.DataType, channels?: number): Promise<Tensor.NumberType> {\n    const dataId = td.tensor.dataId;\n    if (!channels) {\n      channels = 1;\n    }\n    if (this.pendingRead.has(dataId)) {\n      const subscribers = this.pendingRead.get(dataId);\n      return new Promise<Tensor.NumberType>(resolve => subscribers?.push(resolve));\n    }\n    return this.profiler.event('backend', 'TextureManager.readTextureAsync', async () => {\n      this.pendingRead.set(dataId, []);\n      const dataSize = td.shape.reduce((a, b) => a * b) * channels!;\n      // add a fence waiting for the data to be ready\n      await this.glContext.createAndWaitForFence();\n      const data = this.glContext.readTexture(\n          td.texture, td.width, td.height, dataSize, this.toEncoderType(dataType), channels!);\n      const tensorData = this.toTensorData(dataType, data);\n      const subscribers = this.pendingRead.get(dataId);\n      this.pendingRead.delete(dataId);\n      subscribers?.forEach(resolve => resolve(tensorData));\n      return tensorData;\n    });\n  }\n  readUint8TextureAsFloat(td: TextureData): Float32Array {\n    return this.profiler.event('backend', 'TextureManager.readUint8TextureAsFloat', () => {\n      const dataSize = td.shape.reduce((a, b) => a * b);\n      const data = this.glContext.readTexture(td.texture, td.width, td.height, dataSize * 4, 'byte', 4);\n      return new Float32Array(data.buffer, data.byteOffset, dataSize);\n    });\n  }\n  releaseTexture(textureData: TextureData, deleteTexture?: boolean): void {\n    let key: string|undefined;\n    if (this.config.reuseTextures) {\n      key = this.textureLookup.get(textureData.texture);\n      if (key) {\n        if (deleteTexture) {\n          this.textureLookup.delete(key);\n        }\n        const inUseTextures = this.inUseTextures.get(key);\n        if (inUseTextures) {\n          const index = inUseTextures.indexOf(textureData.texture);\n          if (index !== -1) {\n            inUseTextures.splice(index, 1);\n            let idleTextures = this.idleTextures.get(key);\n            if (!idleTextures) {\n              idleTextures = [];\n              this.idleTextures.set(key, idleTextures);\n            }\n            idleTextures.push(textureData.texture);\n          }\n        }\n      }\n    }\n\n    if (!key || deleteTexture) {\n      Logger.verbose('TextureManager', `Deleting texture of size ${textureData.width}x${textureData.height}`);\n      this.glContext.deleteTexture(textureData.texture);\n    }\n  }\n  toTensorData(dataType: Tensor.DataType, data: Encoder.DataArrayType): Tensor.NumberType {\n    switch (dataType) {\n      case 'int16':\n        return data instanceof Int16Array ? data : Int16Array.from(data);\n      case 'int32':\n        return data instanceof Int32Array ? data : Int32Array.from(data);\n      case 'int8':\n        return data instanceof Int8Array ? data : Int8Array.from(data);\n      case 'uint16':\n        return data instanceof Uint16Array ? data : Uint16Array.from(data);\n      case 'uint32':\n        return data instanceof Uint32Array ? data : Uint32Array.from(data);\n      case 'uint8':\n      case 'bool':\n        return data instanceof Uint8Array ? data : Uint8Array.from(data);\n      case 'float32':\n        return data instanceof Float32Array ? data : Float32Array.from(data);\n      case 'float64':\n        return data instanceof Float64Array ? data : Float64Array.from(data);\n      default:\n        throw new Error(`TensorData type ${dataType} is not supported`);\n    }\n  }\n  toTextureData(dataType: Tensor.DataType, data: Tensor.NumberType|undefined): Encoder.DataArrayType|undefined {\n    if (!data) {\n      return undefined;\n    }\n    return (data instanceof Float32Array) ? data : new Float32Array(data);\n    /*\n    switch (dataType) {\n      case 'int16':\n      case 'int32':\n      case 'uint16':\n      case 'uint32':\n        return (data.constructor === Uint32Array) ? data as Uint32Array : new Uint32Array(data);\n      case 'int8':\n      case 'uint8':\n      case 'bool':\n        return (data.constructor === Uint8Array) ? data as Uint8Array : new Uint8Array(data);\n      case 'float32':\n      case 'float64':\n        return (data.constructor === Float32Array) ? data as Float32Array : new Float32Array(data);\n      default:\n        throw new Error(`TensorData type ${dataType} is not supported`);\n    }\n    */\n  }\n  toEncoderType(_dataType: Tensor.DataType): Encoder.DataType {\n    return 'float';\n    // switch (dataType) {\n    //   case 'int16':\n    //   case 'int32':\n    //   case 'uint16':\n    //   case 'uint32':\n    //     return 'int';\n    //   case 'uint8':\n    //   case 'bool':\n    //     return 'byte';\n    //   case 'float32':\n    //   case 'float64':\n    //     return 'float';\n    //   default:\n    //     throw new Error(`TensorData type ${dataType} is not supported`);\n    // }\n  }\n  clearActiveTextures(): void {\n    this.glContext.clearActiveTextures();\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Tensor} from '../../tensor';\n\n/**\n * Layout info is used for mapping n-dimensional array to 2D textures\n * The layout is created by the TextureLayoutStrategy based on\n * the Tensor's dimensions and strides\n */\nexport interface TextureLayout {\n  width: number;\n  height: number;\n  /**\n   * specify the number of value that encoded in a single pixel\n   */\n  channels: 1|2|3|4;\n  /**\n   * whether in packed mode or not\n   */\n  isPacked?: boolean;\n  /**\n   * the normalized shape\n   */\n  shape: readonly number[];\n  /**\n   * the stride of each dimensions, calculated according to shape\n   */\n  strides: readonly number[];\n  /**\n   * the original shape(dims) of the corresponding tensor\n   */\n  unpackedShape: readonly number[];\n\n  reversedWH?: boolean;\n}\nexport interface TextureData extends TextureLayout {\n  tensor: Tensor;\n  texture: WebGLTexture;\n}\n\nexport enum TextureType {\n  unpacked,              // <-- normal unpacked texture\n  unpackedReversed,      // <-- unpacked texture used in old ONNX.js implementation (deprecated)\n  packed,                // <-- normal packed texture\n  downloadUint8AsFloat,  // <-- ONLY used in texture downloading for iOS devices\n  packedLastDimension    // <-- ONLY used in old ONNX.js Conv implementation for input W (deprecated)\n}\n\nexport interface TensorInfo {\n  id?: Tensor.Id;\n  dims: readonly number[];\n  type: Tensor.DataType;\n  textureType: TextureType;\n}\n\nexport interface ProgramVariable {\n  type: 'float'|'int';\n  name: string;\n  arrayLength?: number;\n  data: number|number[];\n}\n\n/**\n * A set of metadata of a shader program.\n */\nexport interface ProgramMetadata {\n  /**\n   * the name of the program. used for debugging and profiling\n   */\n  name: string;\n  /**\n   * texture types for each input\n   */\n  inputTypes: TextureType[];\n  /**\n   * names of each input\n   */\n  inputNames: string[];\n  /**\n   * an optional string as a cache hint in the artifact cache\n   */\n  cacheHint?: string;\n}\n\n/**\n * A ProgramInfoLoader allows\n */\nexport interface ProgramInfoLoader extends ProgramMetadata {\n  /**\n   * a function to get the program info\n   */\n  get(): ProgramInfo;\n}\n\n/**\n * A set of data that represent a shader program\n */\nexport interface ProgramInfo extends ProgramMetadata {\n  /**\n   * information of uniform variables\n   */\n  variables?: ProgramVariable[];\n  /**\n   * tensor info for output\n   */\n  output: TensorInfo;\n  /**\n   * the shader's processing source code\n   */\n  shaderSource: string;\n  /**\n   * whether the shader source contains a customized main function implementation\n   */\n  hasMain?: boolean;\n}\n\nexport interface VariableInfo {\n  type: 'float'|'int';\n  name: string;\n  arrayLength?: number;\n}\n\nexport interface ProgramVariable {\n  type: 'float'|'int';\n  name: string;\n  arrayLength?: number;\n  data: number|number[];\n}\n\n/**\n * Information of uniforms that shader uses\n */\nexport interface UniformInfo {\n  type: 'sampler2D'|VariableInfo['type'];\n  name: string;\n  arrayLength?: number;\n}\n\nexport interface UniformLocation extends UniformInfo {\n  location: WebGLUniformLocation;\n}\n\n/**\n * Artifact is the result of compilation\n * It does not contain input of output data\n * However anything that could be run as a \"program\"\n */\nexport interface Artifact {\n  programInfo: ProgramInfo;\n  program: WebGLProgram;\n  uniformLocations: UniformLocation[];\n  attribLocations: {position: number; textureCoord: number};\n}\nexport declare namespace Artifact {\n  type UniformLocations = Artifact['uniformLocations'];\n  type AttribLocations = Artifact['attribLocations'];\n}\n\nexport interface UniformData {\n  [name: string]: number|number[];\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {assert} from '../../util';\n/**\n * Given a non RGBA shape calculate the R version\n * It is assumed that the dimensions are multiples of given channels\n * NOTE: it is always the last dim that gets packed.\n * @param unpackedShape original shape to create a packed version from\n */\nexport function getPackedShape(unpackedShape: readonly number[]): readonly number[] {\n  const len = unpackedShape.length;\n  return unpackedShape.slice(0, len - 1).concat(unpackedShape[len - 1] / 4);\n}\n\nexport async function repeatedTry(\n    checkFn: () => boolean, delayFn = (_counter: number) => 0, maxCounter?: number): Promise<void> {\n  return new Promise<void>((resolve, reject) => {\n    let tryCount = 0;\n\n    const tryFn = () => {\n      if (checkFn()) {\n        resolve();\n        return;\n      }\n\n      tryCount++;\n\n      const nextBackoff = delayFn(tryCount);\n\n      if (maxCounter != null && tryCount >= maxCounter) {\n        reject();\n        return;\n      }\n      setTimeout(tryFn, nextBackoff);\n    };\n\n    tryFn();\n  });\n}\n\n/**\n * Generates the function name from an input sampler name.\n * @param samplerName Name of the sampler.\n */\nexport function generateShaderFuncNameFromInputSamplerName(samplerName: string): string {\n  assert(typeof samplerName !== 'undefined' && samplerName.length !== 0, () => 'empty string found for sampler name');\n  return 'get' + samplerName.charAt(0).toUpperCase() + samplerName.slice(1);\n}\n\n/**\n * Generates the function name from an input sampler name at output coordinates.\n * @param samplerName Name of the sampler.\n */\nexport function generateShaderFuncNameFromInputSamplerNameAtOutCoords(samplerName: string): string {\n  assert(typeof samplerName !== 'undefined' && samplerName.length !== 0, () => 'empty string found for sampler name');\n  return 'get' + samplerName.charAt(0).toUpperCase() + samplerName.slice(1) + 'AtOutCoords';\n}\n\n/** Returns a new input shape (a copy) that has a squeezed logical shape. */\nexport function squeezeInputShape(inputShape: readonly number[], squeezedShape: number[]): number[] {\n  // Deep copy.\n  let newInputShape: number[] = JSON.parse(JSON.stringify(inputShape));\n  newInputShape = squeezedShape;\n  return newInputShape;\n}\n\n/** Returns a list of squeezed parameters for shader functions */\nexport function getSqueezedParams(params: string[], keptDims: number[]): string {\n  return keptDims.map(d => params[d]).join(', ');\n}\n\n/** Returns the data type for different ranks. */\nexport function getCoordsDataType(rank: number): string {\n  if (rank <= 1) {\n    return 'int';\n  } else if (rank === 2) {\n    return 'ivec2';\n  } else if (rank === 3) {\n    return 'ivec3';\n  } else if (rank === 4) {\n    return 'ivec4';\n  } else if (rank === 5) {\n    return 'ivec5';\n  } else if (rank === 6) {\n    return 'ivec6';\n  } else {\n    throw Error(`GPU for rank ${rank} is not yet supported`);\n  }\n}\n\nexport function getGlChannels(rank = 6): string[] {\n  return ['x', 'y', 'z', 'w', 'u', 'v'].slice(0, rank);\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Logger} from '../../instrument';\n\nimport {WebGLContext} from './webgl-context';\n\nconst cache: {[contextId: string]: WebGLContext} = {};\n\n/**\n * This factory function creates proper WebGLRenderingContext based on\n * the current browsers capabilities\n * The order is from higher/most recent versions to most basic\n */\nexport function createWebGLContext(contextId?: 'webgl'|'webgl2'): WebGLContext {\n  let context: WebGLContext|undefined;\n  if ((!contextId || contextId === 'webgl2') && 'webgl2' in cache) {\n    context = cache.webgl2;\n  } else if ((!contextId || contextId === 'webgl') && 'webgl' in cache) {\n    context = cache.webgl;\n  }\n\n  context = context || createNewWebGLContext(contextId);\n  contextId = contextId || context.version === 1 ? 'webgl' : 'webgl2';\n  const gl = context.gl;\n\n  cache[contextId] = context;\n\n  if (gl.isContextLost()) {\n    delete cache[contextId];\n    return createWebGLContext(contextId);\n  }\n\n  gl.disable(gl.DEPTH_TEST);\n  gl.disable(gl.STENCIL_TEST);\n  gl.disable(gl.BLEND);\n  gl.disable(gl.DITHER);\n  gl.disable(gl.POLYGON_OFFSET_FILL);\n  gl.disable(gl.SAMPLE_COVERAGE);\n  gl.enable(gl.SCISSOR_TEST);\n  gl.enable(gl.CULL_FACE);\n  gl.cullFace(gl.BACK);\n\n  return context;\n}\n\nexport function createNewWebGLContext(contextId?: 'webgl'|'webgl2'): WebGLContext {\n  const canvas = createCanvas();\n  const contextAttributes: WebGLContextAttributes = {\n    alpha: false,\n    depth: false,\n    antialias: false,\n    stencil: false,\n    preserveDrawingBuffer: false,\n    premultipliedAlpha: false,\n    failIfMajorPerformanceCaveat: false\n  };\n  let gl: WebGLRenderingContext|null;\n  const ca = contextAttributes;\n  if (!contextId || contextId === 'webgl2') {\n    gl = canvas.getContext('webgl2', ca);\n    if (gl) {\n      try {\n        return new WebGLContext(gl, 2);\n      } catch (err) {\n        Logger.warning('GlContextFactory', `failed to create WebGLContext using contextId 'webgl2'. Error: ${err}`);\n      }\n    }\n  }\n  if (!contextId || contextId === 'webgl') {\n    gl = canvas.getContext('webgl', ca) || canvas.getContext('experimental-webgl', ca) as WebGLRenderingContext;\n    if (gl) {\n      try {\n        return new WebGLContext(gl, 1);\n      } catch (err) {\n        Logger.warning(\n            'GlContextFactory',\n            `failed to create WebGLContext using contextId 'webgl' or 'experimental-webgl'. Error: ${err}`);\n      }\n    }\n  }\n\n  throw new Error('WebGL is not supported');\n}\n\n// eslint-disable-next-line @typescript-eslint/naming-convention\ndeclare let OffscreenCanvas: {new (width: number, height: number): HTMLCanvasElement};\n\nfunction createCanvas(): HTMLCanvasElement {\n  if (typeof document === 'undefined') {\n    if (typeof OffscreenCanvas === 'undefined') {\n      throw new TypeError('failed to create canvas: OffscreenCanvas is not supported');\n    }\n    return new OffscreenCanvas(1, 1);\n  }\n  const canvas: HTMLCanvasElement = document.createElement('canvas');\n  canvas.width = 1;\n  canvas.height = 1;\n  return canvas;\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {env} from 'onnxruntime-common';\n\nimport * as DataEncoders from './texture-data-encoder';\nimport {DataEncoder, Encoder} from './texture-data-encoder';\nimport {repeatedTry} from './utils';\n\nexport interface FenceContext {\n  query: WebGLSync|null;\n  isFencePassed(): boolean;\n}\n\ntype PollItem = {\n  isDoneFn: () => boolean; resolveFn: () => void;\n};\n\nexport function linearSearchLastTrue(arr: Array<() => boolean>): number {\n  let i = 0;\n  for (; i < arr.length; ++i) {\n    const isDone = arr[i]();\n    if (!isDone) {\n      break;\n    }\n  }\n  return i - 1;\n}\n\n/**\n * Abstraction and wrapper around WebGLRenderingContext and its operations\n */\nexport class WebGLContext {\n  gl: WebGLRenderingContext;\n  version: 1|2;\n\n  private vertexbuffer: WebGLBuffer;\n  private framebuffer: WebGLFramebuffer;\n\n  // WebGL flags and vital parameters\n  private isFloatTextureAttachableToFrameBuffer: boolean;\n  isFloat32DownloadSupported: boolean;\n  isRenderFloat32Supported: boolean;\n  isBlendSupported: boolean;\n  maxTextureSize: number;\n  // private maxCombinedTextureImageUnits: number;\n  private maxTextureImageUnits: number;\n  // private maxCubeMapTextureSize: number;\n  // private shadingLanguageVersion: string;\n  // private webglVendor: string;\n  // private webglVersion: string;\n\n  // WebGL2 flags and vital parameters\n  // private max3DTextureSize: number;\n  // private maxArrayTextureLayers: number;\n  // private maxColorAttachments: number;\n  // private maxDrawBuffers: number;\n\n  // WebGL extensions\n  // eslint-disable-next-line camelcase\n  textureFloatExtension: OES_texture_float|null;\n  // eslint-disable-next-line camelcase\n  textureHalfFloatExtension: OES_texture_half_float|null;\n\n  // WebGL2 extensions\n  colorBufferFloatExtension: unknown|null;\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  disjointTimerQueryWebgl2Extension: {TIME_ELAPSED_EXT: GLenum; GPU_DISJOINT_EXT: GLenum}|null;\n\n  private disposed: boolean;\n  private frameBufferBound = false;\n\n  constructor(gl: WebGLRenderingContext, version: 1|2) {\n    this.gl = gl;\n    this.version = version;\n\n    this.getExtensions();\n    this.vertexbuffer = this.createVertexbuffer();\n    this.framebuffer = this.createFramebuffer();\n    this.queryVitalParameters();\n  }\n\n  allocateTexture(width: number, height: number, encoder: DataEncoder, data?: Encoder.DataArrayType): WebGLTexture {\n    const gl = this.gl;\n    // create the texture\n    const texture = gl.createTexture();\n    // bind the texture so the following methods effect this texture.\n    gl.bindTexture(gl.TEXTURE_2D, texture);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n    const buffer = data ? encoder.encode(data, width * height) : null;\n    gl.texImage2D(\n        gl.TEXTURE_2D,\n        0,  // Level of detail.\n        encoder.internalFormat, width, height,\n        0,  // Always 0 in OpenGL ES.\n        encoder.format, encoder.textureType, buffer);\n    this.checkError();\n    return texture as WebGLTexture;\n  }\n  updateTexture(\n      texture: WebGLTexture, width: number, height: number, encoder: DataEncoder, data: Encoder.DataArrayType): void {\n    const gl = this.gl;\n    gl.bindTexture(gl.TEXTURE_2D, texture);\n    const buffer = encoder.encode(data, width * height);\n    gl.texSubImage2D(\n        gl.TEXTURE_2D,\n        0,  // level\n        0,  // xoffset\n        0,  // yoffset\n        width, height, encoder.format, encoder.textureType, buffer);\n    this.checkError();\n  }\n  attachFramebuffer(texture: WebGLTexture, width: number, height: number): void {\n    const gl = this.gl;\n    // Make it the target for framebuffer operations - including rendering.\n    gl.bindTexture(gl.TEXTURE_2D, texture);\n    gl.bindFramebuffer(gl.FRAMEBUFFER, this.framebuffer);\n    gl.framebufferTexture2D(\n        gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, texture,\n        0);  // 0, we aren't using MIPMAPs\n    this.checkError();\n    gl.viewport(0, 0, width, height);\n    gl.scissor(0, 0, width, height);\n  }\n  readTexture(\n      texture: WebGLTexture, width: number, height: number, dataSize: number, dataType: Encoder.DataType,\n      channels: number): Encoder.DataArrayType {\n    const gl = this.gl;\n    if (!channels) {\n      channels = 1;\n    }\n    if (!this.frameBufferBound) {\n      this.attachFramebuffer(texture, width, height);\n    }\n    const encoder = this.getEncoder(dataType, channels);\n    const buffer = encoder.allocate(width * height);\n    // bind texture to framebuffer\n    gl.bindTexture(gl.TEXTURE_2D, texture);\n    gl.framebufferTexture2D(\n        gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, texture,\n        0);  // 0, we aren't using MIPMAPs\n    // TODO: Check if framebuffer is ready\n    gl.readPixels(0, 0, width, height, gl.RGBA, encoder.textureType, buffer);\n    this.checkError();\n    // unbind FB\n    return encoder.decode(buffer, dataSize);\n  }\n\n  isFramebufferReady(): boolean {\n    // TODO: Implement logic to check if the framebuffer is ready\n    return true;\n  }\n  getActiveTexture(): string {\n    const gl = this.gl;\n    const n = gl.getParameter(this.gl.ACTIVE_TEXTURE);\n    return `TEXTURE${(n - gl.TEXTURE0)}`;\n  }\n  getTextureBinding(): WebGLTexture {\n    return this.gl.getParameter(this.gl.TEXTURE_BINDING_2D);\n  }\n  getFramebufferBinding(): WebGLFramebuffer {\n    return this.gl.getParameter(this.gl.FRAMEBUFFER_BINDING);\n  }\n  setVertexAttributes(positionHandle: number, textureCoordHandle: number): void {\n    const gl = this.gl;\n    gl.vertexAttribPointer(positionHandle, 3, gl.FLOAT, false, 20, 0);\n    gl.enableVertexAttribArray(positionHandle);\n    if (textureCoordHandle !== -1) {\n      gl.vertexAttribPointer(textureCoordHandle, 2, gl.FLOAT, false, 20, 12);\n      gl.enableVertexAttribArray(textureCoordHandle);\n    }\n    this.checkError();\n  }\n  createProgram(\n      vertexShader: WebGLShader,\n      fragShader: WebGLShader,\n      ): WebGLProgram {\n    const gl = this.gl;\n    const program = gl.createProgram()!;\n\n    // the program consists of our shaders\n    gl.attachShader(program, vertexShader);\n    gl.attachShader(program, fragShader);\n    gl.linkProgram(program);\n    return program;\n  }\n  compileShader(shaderSource: string, shaderType: number): WebGLShader {\n    const gl = this.gl;\n    const shader = gl.createShader(shaderType);\n    if (!shader) {\n      throw new Error(`createShader() returned null with type ${shaderType}`);\n    }\n\n    gl.shaderSource(shader, shaderSource);\n    gl.compileShader(shader);\n    if (gl.getShaderParameter(shader, gl.COMPILE_STATUS) === false) {\n      throw new Error(`Failed to compile shader: ${gl.getShaderInfoLog(shader)}\nShader source:\n${shaderSource}`);\n    }\n    return shader;\n  }\n  deleteShader(shader: WebGLShader): void {\n    this.gl.deleteShader(shader);\n  }\n  bindTextureToUniform(texture: WebGLTexture, position: number, uniformHandle: WebGLUniformLocation): void {\n    const gl = this.gl;\n    gl.activeTexture(gl.TEXTURE0 + position);\n    this.checkError();\n    gl.bindTexture(gl.TEXTURE_2D, texture);\n    this.checkError();\n    gl.uniform1i(uniformHandle, position);\n    this.checkError();\n  }\n  draw(): void {\n    this.gl.drawArrays(this.gl.TRIANGLE_STRIP, 0, 4);\n    this.checkError();\n  }\n  checkError(): void {\n    if (env.debug) {\n      const gl = this.gl;\n      const error = gl.getError();\n      let label = '';\n      switch (error) {\n        case (gl.NO_ERROR):\n          return;\n        case (gl.INVALID_ENUM):\n          label = 'INVALID_ENUM';\n          break;\n        case (gl.INVALID_VALUE):\n          label = 'INVALID_VALUE';\n          break;\n        case (gl.INVALID_OPERATION):\n          label = 'INVALID_OPERATION';\n          break;\n        case (gl.INVALID_FRAMEBUFFER_OPERATION):\n          label = 'INVALID_FRAMEBUFFER_OPERATION';\n          break;\n        case (gl.OUT_OF_MEMORY):\n          label = 'OUT_OF_MEMORY';\n          break;\n        case (gl.CONTEXT_LOST_WEBGL):\n          label = 'CONTEXT_LOST_WEBGL';\n          break;\n        default:\n          label = `Unknown WebGL Error: ${error.toString(16)}`;\n      }\n      throw new Error(label);\n    }\n  }\n  deleteTexture(texture: WebGLTexture): void {\n    this.gl.deleteTexture(texture);\n  }\n  deleteProgram(program: WebGLProgram): void {\n    this.gl.deleteProgram(program);\n  }\n  getEncoder(dataType: Encoder.DataType, channels: number, usage: Encoder.Usage = Encoder.Usage.Default): DataEncoder {\n    if (this.version === 2) {\n      return new DataEncoders.RedFloat32DataEncoder(this.gl as WebGL2RenderingContext, channels);\n    }\n\n    switch (dataType) {\n      case 'float':\n        if (usage === Encoder.Usage.UploadOnly || this.isRenderFloat32Supported) {\n          return new DataEncoders.RGBAFloatDataEncoder(this.gl, channels);\n        } else {\n          return new DataEncoders.RGBAFloatDataEncoder(\n              this.gl, channels, this.textureHalfFloatExtension!.HALF_FLOAT_OES);\n        }\n      case 'int':\n        throw new Error('not implemented');\n      case 'byte':\n        return new DataEncoders.Uint8DataEncoder(this.gl, channels);\n      default:\n        throw new Error(`Invalid dataType: ${dataType}`);\n    }\n  }\n  clearActiveTextures(): void {\n    const gl = this.gl;\n    for (let unit = 0; unit < this.maxTextureImageUnits; ++unit) {\n      gl.activeTexture(gl.TEXTURE0 + unit);\n      gl.bindTexture(gl.TEXTURE_2D, null);\n    }\n  }\n  dispose(): void {\n    if (this.disposed) {\n      return;\n    }\n    const gl = this.gl;\n    gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n    gl.deleteFramebuffer(this.framebuffer);\n    gl.bindBuffer(gl.ARRAY_BUFFER, null);\n    gl.deleteBuffer(this.vertexbuffer);\n    gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, null);\n    gl.finish();\n    this.disposed = true;\n  }\n\n  private createDefaultGeometry(): Float32Array {\n    // Sets of x,y,z(=0),s,t coordinates.\n    return new Float32Array([\n      -1.0, 1.0,  0.0, 0.0, 1.0,  // upper left\n      -1.0, -1.0, 0.0, 0.0, 0.0,  // lower left\n      1.0,  1.0,  0.0, 1.0, 1.0,  // upper right\n      1.0,  -1.0, 0.0, 1.0, 0.0   // lower right\n    ]);\n  }\n  private createVertexbuffer(): WebGLBuffer {\n    const gl = this.gl;\n    const buffer = gl.createBuffer();\n    if (!buffer) {\n      throw new Error('createBuffer() returned null');\n    }\n    const geometry = this.createDefaultGeometry();\n    gl.bindBuffer(gl.ARRAY_BUFFER, buffer);\n    gl.bufferData(gl.ARRAY_BUFFER, geometry, gl.STATIC_DRAW);\n    this.checkError();\n    return buffer;\n  }\n  private createFramebuffer(): WebGLFramebuffer {\n    const fb = this.gl.createFramebuffer();\n    if (!fb) {\n      throw new Error('createFramebuffer returned null');\n    }\n    return fb;\n  }\n\n  private queryVitalParameters(): void {\n    const gl = this.gl;\n\n    this.isFloatTextureAttachableToFrameBuffer = this.checkFloatTextureAttachableToFrameBuffer();\n    this.isRenderFloat32Supported = this.checkRenderFloat32();\n    this.isFloat32DownloadSupported = this.checkFloat32Download();\n\n    if (this.version === 1 && !this.textureHalfFloatExtension && !this.isRenderFloat32Supported) {\n      throw new Error('both float32 and float16 TextureType are not supported');\n    }\n\n    this.isBlendSupported = !this.isRenderFloat32Supported || this.checkFloat32Blend();\n\n    // this.maxCombinedTextureImageUnits = gl.getParameter(gl.MAX_COMBINED_TEXTURE_IMAGE_UNITS);\n    this.maxTextureSize = gl.getParameter(gl.MAX_TEXTURE_SIZE);\n    this.maxTextureImageUnits = gl.getParameter(gl.MAX_TEXTURE_IMAGE_UNITS);\n    // this.maxCubeMapTextureSize = gl.getParameter(gl.MAX_CUBE_MAP_TEXTURE_SIZE);\n    // this.shadingLanguageVersion = gl.getParameter(gl.SHADING_LANGUAGE_VERSION);\n    // this.webglVendor = gl.getParameter(gl.VENDOR);\n    // this.webglVersion = gl.getParameter(gl.VERSION);\n\n    if (this.version === 2) {\n      // this.max3DTextureSize = gl.getParameter(WebGL2RenderingContext.MAX_3D_TEXTURE_SIZE);\n      // this.maxArrayTextureLayers = gl.getParameter(WebGL2RenderingContext.MAX_ARRAY_TEXTURE_LAYERS);\n      // this.maxColorAttachments = gl.getParameter(WebGL2RenderingContext.MAX_COLOR_ATTACHMENTS);\n      // this.maxDrawBuffers = gl.getParameter(WebGL2RenderingContext.MAX_DRAW_BUFFERS);\n    }\n  }\n  private getExtensions(): void {\n    if (this.version === 2) {\n      this.colorBufferFloatExtension = this.gl.getExtension('EXT_color_buffer_float');\n      this.disjointTimerQueryWebgl2Extension = this.gl.getExtension('EXT_disjoint_timer_query_webgl2');\n    } else {\n      this.textureFloatExtension = this.gl.getExtension('OES_texture_float');\n      this.textureHalfFloatExtension = this.gl.getExtension('OES_texture_half_float');\n    }\n  }\n\n  private checkFloatTextureAttachableToFrameBuffer(): boolean {\n    // test whether Float32 texture is supported:\n    // STEP.1 create a float texture\n    const gl = this.gl;\n    const texture = gl.createTexture();\n    gl.bindTexture(gl.TEXTURE_2D, texture);\n    // eslint-disable-next-line @typescript-eslint/naming-convention\n    const internalFormat = this.version === 2 ? (gl as unknown as {RGBA32F: number}).RGBA32F : gl.RGBA;\n    gl.texImage2D(gl.TEXTURE_2D, 0, internalFormat, 1, 1, 0, gl.RGBA, gl.FLOAT, null);\n    // STEP.2 bind a frame buffer\n    const frameBuffer = gl.createFramebuffer();\n    gl.bindFramebuffer(gl.FRAMEBUFFER, frameBuffer);\n    // STEP.3 attach texture to framebuffer\n    gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, texture, 0);\n    // STEP.4 test whether framebuffer is complete\n    const isComplete = gl.checkFramebufferStatus(gl.FRAMEBUFFER) === gl.FRAMEBUFFER_COMPLETE;\n    gl.bindTexture(gl.TEXTURE_2D, null);\n    gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n    gl.deleteTexture(texture);\n    gl.deleteFramebuffer(frameBuffer);\n    return isComplete;\n  }\n\n  private checkRenderFloat32(): boolean {\n    if (this.version === 2) {\n      if (!this.colorBufferFloatExtension) {\n        return false;\n      }\n    } else {\n      if (!this.textureFloatExtension) {\n        return false;\n      }\n    }\n    return this.isFloatTextureAttachableToFrameBuffer;\n  }\n\n  private checkFloat32Download(): boolean {\n    if (this.version === 2) {\n      if (!this.colorBufferFloatExtension) {\n        return false;\n      }\n    } else {\n      if (!this.textureFloatExtension) {\n        return false;\n      }\n      if (!this.gl.getExtension('WEBGL_color_buffer_float')) {\n        return false;\n      }\n    }\n    return this.isFloatTextureAttachableToFrameBuffer;\n  }\n\n  /**\n   * Check whether GL_BLEND is supported\n   */\n  private checkFloat32Blend(): boolean {\n    // it looks like currently (2019-05-08) there is no easy way to detect whether BLEND is supported\n    // https://github.com/microsoft/onnxjs/issues/145\n\n    const gl = this.gl;\n\n    let texture: WebGLTexture|null|undefined;\n    let frameBuffer: WebGLFramebuffer|null|undefined;\n    let vertexShader: WebGLShader|null|undefined;\n    let fragmentShader: WebGLShader|null|undefined;\n    let program: WebGLProgram|null|undefined;\n\n    try {\n      texture = gl.createTexture();\n      frameBuffer = gl.createFramebuffer();\n      gl.bindTexture(gl.TEXTURE_2D, texture);\n\n      // eslint-disable-next-line @typescript-eslint/naming-convention\n      const internalFormat = this.version === 2 ? (gl as unknown as {RGBA32F: number}).RGBA32F : gl.RGBA;\n      gl.texImage2D(gl.TEXTURE_2D, 0, internalFormat, 1, 1, 0, gl.RGBA, gl.FLOAT, null);\n\n      gl.bindFramebuffer(gl.FRAMEBUFFER, frameBuffer);\n      gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, texture, 0);\n\n      gl.enable(gl.BLEND);\n\n      vertexShader = gl.createShader(gl.VERTEX_SHADER);\n      if (!vertexShader) {\n        return false;\n      }\n      gl.shaderSource(vertexShader, 'void main(){}');\n      gl.compileShader(vertexShader);\n\n      fragmentShader = gl.createShader(gl.FRAGMENT_SHADER);\n      if (!fragmentShader) {\n        return false;\n      }\n      gl.shaderSource(fragmentShader, 'precision highp float;void main(){gl_FragColor=vec4(0.5);}');\n      gl.compileShader(fragmentShader);\n\n      program = gl.createProgram();\n      if (!program) {\n        return false;\n      }\n      gl.attachShader(program, vertexShader);\n      gl.attachShader(program, fragmentShader);\n      gl.linkProgram(program);\n      gl.useProgram(program);\n\n      gl.drawArrays(gl.POINTS, 0, 1);\n      return gl.getError() === gl.NO_ERROR;\n\n    } finally {\n      gl.disable(gl.BLEND);\n\n      if (program) {\n        gl.deleteProgram(program);\n      }\n      if (vertexShader) {\n        gl.deleteShader(vertexShader);\n      }\n      if (fragmentShader) {\n        gl.deleteShader(fragmentShader);\n      }\n      if (frameBuffer) {\n        gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n        gl.deleteFramebuffer(frameBuffer);\n      }\n      if (texture) {\n        gl.bindTexture(gl.TEXTURE_2D, null);\n        gl.deleteTexture(texture);\n      }\n    }\n  }\n\n  beginTimer(): WebGLQuery {\n    if (this.version === 2 && this.disjointTimerQueryWebgl2Extension) {\n      const gl2 = this.gl as WebGL2RenderingContext;\n      const ext = this.disjointTimerQueryWebgl2Extension;\n\n      const query = gl2.createQuery() as WebGLQuery;\n      gl2.beginQuery(ext.TIME_ELAPSED_EXT, query);\n      return query;\n    } else {\n      // TODO: add webgl 1 handling.\n      throw new Error('WebGL1 profiling currently not supported.');\n    }\n  }\n\n  endTimer() {\n    if (this.version === 2 && this.disjointTimerQueryWebgl2Extension) {\n      const gl2 = this.gl as WebGL2RenderingContext;\n      const ext = this.disjointTimerQueryWebgl2Extension;\n      gl2.endQuery(ext.TIME_ELAPSED_EXT);\n      return;\n    } else {\n      // TODO: add webgl 1 handling.\n      throw new Error('WebGL1 profiling currently not supported');\n    }\n  }\n\n  isTimerResultAvailable(query: WebGLQuery): boolean {\n    let available = false, disjoint = false;\n    if (this.version === 2 && this.disjointTimerQueryWebgl2Extension) {\n      const gl2 = this.gl as WebGL2RenderingContext;\n      const ext = this.disjointTimerQueryWebgl2Extension;\n\n      available = gl2.getQueryParameter(query, gl2.QUERY_RESULT_AVAILABLE);\n      disjoint = gl2.getParameter(ext.GPU_DISJOINT_EXT);\n    } else {\n      // TODO: add webgl 1 handling.\n      throw new Error('WebGL1 profiling currently not supported');\n    }\n\n    return available && !disjoint;\n  }\n\n  getTimerResult(query: WebGLQuery): number {\n    let timeElapsed = 0;\n    if (this.version === 2) {\n      const gl2 = this.gl as WebGL2RenderingContext;\n      timeElapsed = gl2.getQueryParameter(query, gl2.QUERY_RESULT);\n      gl2.deleteQuery(query);\n    } else {\n      // TODO: add webgl 1 handling.\n      throw new Error('WebGL1 profiling currently not supported');\n    }\n    // return miliseconds\n    return timeElapsed / 1000000;\n  }\n\n  async waitForQueryAndGetTime(query: WebGLQuery): Promise<number> {\n    await repeatedTry(() => this.isTimerResultAvailable(query));\n    return this.getTimerResult(query);\n  }\n\n  public async createAndWaitForFence(): Promise<void> {\n    const fenceContext = this.createFence(this.gl);\n    return this.pollFence(fenceContext);\n  }\n\n  private createFence(gl: WebGLRenderingContext): FenceContext {\n    let isFencePassed: () => boolean;\n    const gl2 = gl as WebGL2RenderingContext;\n    const query = gl2.fenceSync(gl2.SYNC_GPU_COMMANDS_COMPLETE, 0);\n    gl.flush();\n    if (query === null) {\n      isFencePassed = () => true;\n    } else {\n      isFencePassed = () => {\n        const status = gl2.clientWaitSync(query, 0, 0);\n        return status === gl2.ALREADY_SIGNALED || status === gl2.CONDITION_SATISFIED;\n      };\n    }\n    return {query, isFencePassed};\n  }\n\n  async pollFence(fenceContext: FenceContext) {\n    return new Promise<void>(resolve => {\n      void this.addItemToPoll(() => fenceContext.isFencePassed(), () => resolve());\n    });\n  }\n\n  private itemsToPoll: PollItem[] = [];\n\n  pollItems(): void {\n    // Find the last query that has finished.\n    const index = linearSearchLastTrue(this.itemsToPoll.map(x => x.isDoneFn));\n    for (let i = 0; i <= index; ++i) {\n      const {resolveFn} = this.itemsToPoll[i];\n      resolveFn();\n    }\n    this.itemsToPoll = this.itemsToPoll.slice(index + 1);\n  }\n\n  private async addItemToPoll(isDoneFn: () => boolean, resolveFn: () => void) {\n    this.itemsToPoll.push({isDoneFn, resolveFn});\n    if (this.itemsToPoll.length > 1) {\n      // We already have a running loop that polls.\n      return;\n    }\n    // Start a new loop that polls.\n    await repeatedTry(() => {\n      this.pollItems();\n      // End the loop if no more items to poll.\n      return this.itemsToPoll.length === 0;\n    });\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {SessionHandler} from './backend';\nimport {Graph} from './graph';\nimport {Logger, Profiler} from './instrument';\nimport {Operator} from './operators';\nimport {Tensor} from './tensor';\n\nclass KernelOp {\n  constructor(public op: Operator, public node: Graph.Node) {}\n}\n\nexport class ExecutionPlan {\n  constructor(private graph: Graph, ops: Operator[], private profiler: Readonly<Profiler>) {\n    this.initialize(ops);\n  }\n\n  initialize(ops: Operator[]) {\n    this.profiler.event('session', 'ExecutionPlan.initialize', () => {\n      const graphNodes = this.graph.getNodes();\n      if (graphNodes.length !== ops.length) {\n        throw new Error('The size of nodes and OPs do not match.');\n      }\n\n      this._ops = ops.map((op, i) => new KernelOp(op, graphNodes[i]));\n      this.reset();\n\n      // look for starter node(s)\n      this._starter = [];\n      this._ops.forEach((op, i) => {\n        let resolved = true;\n        for (const input of op.node.inputs) {\n          if (\n              !this._values[input]                                   // not an initialized input\n              && this.graph.getInputIndices().indexOf(input) === -1  // not model input\n          ) {\n            resolved = false;\n            break;\n          }\n        }\n        if (resolved) {\n          this._starter.push(i);\n        }\n      });\n    });\n  }\n\n  reset() {\n    this._values = this.graph.getValues().map(i => i.tensor);\n  }\n\n  async execute(sessionHandler: SessionHandler, modelInputs: Tensor[]): Promise<Tensor[]> {\n    return this.profiler.event('session', 'ExecutionPlan.execute', async () => {\n      // reset mediem result\n      this.reset();\n\n      // create inference handler\n      const inferenceHandler = sessionHandler.createInferenceHandler();\n\n      // populate inputs value\n      const graphInputs = this.graph.getInputIndices();\n      if (modelInputs.length !== graphInputs.length) {\n        throw new Error(`number of input tensors don't match the number of inputs to the model: actual: ${\n            modelInputs.length} expected: ${graphInputs.length}`);\n      }\n\n      modelInputs.forEach((input, i) => {\n        const index = graphInputs[i];\n        this._values[index] = input;\n      });\n\n      // prepare running sequence\n      const sequence: number[] = this._starter.slice(0);\n\n      // execution iterations\n      const graphValues = this.graph.getValues();\n      const graphNodes = this.graph.getNodes();\n\n      let rear = 0;\n      while (rear < sequence.length) {\n        const thisOpIndex = sequence[rear++];\n        const thisOp = this._ops[thisOpIndex];\n\n        // check input\n        const inputList = thisOp.node.inputs.map(i => this._values[i]);\n        if (inputList.indexOf(undefined) !== -1) {\n          throw new Error(`unresolved input detected: op: ${thisOp.node}`);\n        }\n\n        // run\n        const inputTensors = inputList as Tensor[];\n        Logger.verbose(\n            'ExecPlan',\n            `Runing op:${thisOp.node.name} (${\n                inputTensors.map((t, i) => `'${thisOp.node.inputs[i]}': ${t.type}[${t.dims.join(',')}]`).join(', ')})`);\n\n        const outputList = await this.profiler.event(\n            'node', thisOp.node.name, async () => thisOp.op.impl(inferenceHandler, inputTensors, thisOp.op.context));\n\n        // check output\n        if (outputList.length !== thisOp.node.outputs.length) {\n          throw new Error('the size of output does not match model definition.');\n        }\n\n        // fill value\n        outputList.forEach((output, i) => {\n          const j = thisOp.node.outputs[i];\n          if (this._values[j]) {\n            throw new Error(`output [${j}] already has value: op:${thisOp.node.name}`);\n          }\n          this._values[j] = output;\n        });\n\n        // resolve downstream nodes\n        const downstreamNodes = new Set<number>();\n        outputList.forEach((output, i) => {\n          const j = thisOp.node.outputs[i];\n          for (const currentDownstreamNodeIndex of graphValues[j].to) {\n            const currentDownstreamNode = graphNodes[currentDownstreamNodeIndex];\n            let resolved = true;\n            for (const k of currentDownstreamNode.inputs) {\n              if (!this._values[k]) {\n                resolved = false;\n                break;\n              }\n            }\n            if (resolved) {\n              downstreamNodes.add(currentDownstreamNodeIndex);\n            }\n          }\n        });\n        sequence.push(...downstreamNodes);\n      }\n\n      const output: Tensor[] = [];\n      for (let i = 0; i < this.graph.getOutputIndices().length; i++) {\n        const outputIndex = this.graph.getOutputIndices()[i];\n        const outputTensor = this._values[outputIndex];\n        if (outputTensor === undefined) {\n          throw new Error(`required output [${outputIndex}] does not have value`);\n        }\n        if (outputIndex === 0) {\n          await outputTensor.getData();\n        } else {\n          // eslint-disable-next-line no-unused-expressions\n          outputTensor.data;\n        }\n        output.push(outputTensor);\n      }\n      Logger.verbose('ExecPlan', 'disposing of inferenceHandler');\n      inferenceHandler.dispose();\n      return output;\n    });\n  }\n\n  _values: Array<Tensor|undefined>;\n  _ops: KernelOp[];\n  _starter: number[];\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {onnx} from 'onnx-proto';\n\nimport {Attribute} from './attribute';\nimport {onnxruntime} from './ort-schema/ort-generated';\nimport {Tensor} from './tensor';\nimport {LongUtil, MAX_CLIP, MIN_CLIP, ProtoUtil} from './util';\n\nimport ortFbs = onnxruntime.experimental.fbs;\n\nexport declare namespace Graph {\n  export interface Shape {\n    readonly dims: readonly number[];\n  }\n  export interface ValueType {\n    readonly tensorType: Tensor.DataType;\n    readonly shape: Shape;\n  }\n  export interface Value {\n    // the tensor data. empty for non-initialized inputs\n    readonly tensor?: Tensor;\n\n    // index to the Node where the value comes from. -1 for initializer.\n    readonly from: number;\n\n    // indices to the Nodes where the values go to.\n    readonly to: readonly number[];\n\n    // value type specification. empty for non-input values.\n    readonly type?: ValueType;\n  }\n  export interface Node {\n    // name of the node\n    readonly name: string;\n\n    // the operator type\n    readonly opType: string;\n\n    // indices to the Values where the inputs come from.\n    readonly inputs: readonly number[];\n\n    // indices to the Values where the outpus go to.\n    readonly outputs: readonly number[];\n\n    // the attributes that used by the operator\n    readonly attributes: Attribute;\n  }\n\n  /**\n   * a Transformer is an instance that allows all possible transformation operations that applied to a graph\n   */\n  export interface Transformer {\n    removeAllIdentityNodes(): void;\n    removeAllDropoutNodes(): void;\n    fuseConvActivationNodes(): void;\n    // TODO: add generic functions to manipulate the graph\n  }\n\n  // an initializer can use transformer to transform the graph\n  export interface Initializer {\n    transformGraph(transformer: Transformer): void;\n  }\n}\n\n// eslint-disable-next-line @typescript-eslint/no-redeclare\nexport interface Graph {\n  getInputIndices(): readonly number[];\n  getInputNames(): readonly string[];\n  getOutputIndices(): readonly number[];\n  getOutputNames(): readonly string[];\n  getValues(): readonly Graph.Value[];\n  getNodes(): readonly Graph.Node[];\n}\n\n// eslint-disable-next-line @typescript-eslint/naming-convention, @typescript-eslint/no-redeclare\nexport const Graph = {\n  /**\n   * construct a graph from a graph protobuf type\n   */\n  from: (graphProto: onnx.IGraphProto|ortFbs.Graph, initializer?: Graph.Initializer) =>\n      new GraphImpl(graphProto, initializer),\n};\n\nclass Value implements Graph.Value {\n  constructor(valueInfo?: onnx.IValueInfoProto) {\n    this._from = undefined;\n    this._to = [];\n    this.tensor = undefined;\n    this.type = undefined;\n\n    if (valueInfo) {\n      this.type = ProtoUtil.tensorValueTypeFromProto(valueInfo.type!.tensorType!);\n    }\n  }\n\n  _from?: number;  // -1 represent from initializer\n  get from() {\n    return this._from!;\n  }\n  _to: number[];\n  get to() {\n    return this._to;\n  }\n  type?: Graph.ValueType;\n  tensor?: Tensor;\n}\n\nclass Node implements Graph.Node {\n  constructor(_nodeProto: onnx.INodeProto|ortFbs.Node, name?: string) {\n    if (_nodeProto instanceof onnx.NodeProto) {\n      this.name = _nodeProto.name;\n      this.opType = _nodeProto.opType;\n      this.attributes = new Attribute(_nodeProto.attribute);\n    } else if (_nodeProto instanceof ortFbs.Node) {\n      this.name = name ?? _nodeProto.name()!;\n      this.opType = _nodeProto.opType()!;\n      this.attributes = new Attribute(ProtoUtil.tensorAttributesFromORTFormat(_nodeProto));\n    }\n\n    this.inputs = [];\n    this.outputs = [];\n    this.executeNode = true;\n  }\n\n  name: string;\n  opType: string;\n  inputs: number[];\n  outputs: number[];\n  attributes: Attribute;\n  executeNode: boolean;\n}\n\nclass GraphImpl implements Graph, Graph.Transformer {\n  private _allData: Value[];\n\n  private _allInputIndices: number[];\n  private _allInputNames: string[];\n\n  private _allOutputIndices: number[];\n  private _allOutputNames: string[];\n\n  private _nodes: Node[];\n\n  constructor(graph: onnx.IGraphProto|ortFbs.Graph, graphInitializer?: Graph.Initializer) {\n    if (!graph) {\n      throw new TypeError('graph is empty');\n    }\n\n    // build the graph - will throw exceptions if something fatal is detected\n    this.buildGraph(graph);\n\n    // execute any transformation logic for the graph (if applicable)\n    this.transformGraph(graphInitializer);\n\n    // check for cycles and other inconsistencies - will throw exceptions if something fatal is detected\n    this.checkIsAcyclic();\n  }\n\n  getInputIndices(): readonly number[] {\n    return this._allInputIndices;\n  }\n\n  getInputNames(): readonly string[] {\n    return this._allInputNames;\n  }\n\n  getOutputIndices(): readonly number[] {\n    return this._allOutputIndices;\n  }\n\n  getOutputNames(): readonly string[] {\n    return this._allOutputNames;\n  }\n\n  getValues(): readonly Graph.Value[] {\n    return this._allData;\n  }\n\n  getNodes(): readonly Graph.Node[] {\n    return this._nodes;\n  }\n\n  private buildGraph(graph: onnx.IGraphProto|ortFbs.Graph) {\n    // build the graph - will throw exceptions if something fatal is detected\n    if (graph instanceof onnx.GraphProto) {\n      this.buildGraphFromOnnxFormat(graph);\n    } else if (graph instanceof ortFbs.Graph) {\n      this.buildGraphFromOrtFormat(graph);\n    } else {\n      throw new TypeError('Graph type is not supported.');\n    }\n  }\n  private buildGraphFromOnnxFormat(graph: onnx.IGraphProto) {\n    const dataIndices = new Map<string, number>();\n    this._allData = [];\n\n    this._allInputIndices = [];\n    this._allInputNames = [];\n\n    this._allOutputIndices = [];\n    this._allOutputNames = [];\n\n    this._nodes = [];\n\n    const nodesIndices = new Map<string, number>();\n\n    // scan all inputs\n    if (!graph.input) {\n      throw new Error('missing information in graph: input');\n    }\n    const inputValueNames = [];\n    for (const i of graph.input) {\n      if (dataIndices.has(i.name!)) {\n        throw new Error(`duplicated input name: ${i.name}`);\n      }\n      const currentIndex = this._allData.push(new Value(i)) - 1;\n      dataIndices.set(i.name!, currentIndex);\n      inputValueNames.push(i.name!);\n    }\n\n    // scan all initializers\n    if (!graph.initializer) {\n      throw new Error('missing information in graph: initializer');\n    }\n    for (const i of graph.initializer) {\n      let index = dataIndices.get(i.name!);\n      if (index === undefined) {\n        const value = new Value();\n        value.type = {\n          shape: {dims: ProtoUtil.tensorDimsFromProto(i.dims!)},\n          tensorType: ProtoUtil.tensorDataTypeFromProto(i.dataType!)\n        };\n        index = this._allData.push(value) - 1;\n        dataIndices.set(i.name!, index);\n      }\n      this._allData[index]._from = -1;\n      this._allData[index].tensor = Tensor.fromProto(i);\n    }\n\n    // filter out input indices\n    for (let i = 0; i < this._allData.length; i++) {\n      if (!this._allData[i].tensor) {\n        this._allInputIndices.push(i);\n        this._allInputNames.push(inputValueNames[i]);\n      }\n    }\n\n    // scan all outputs\n    if (!graph.output) {\n      throw new Error('missing information in graph: output');\n    }\n    for (const i of graph.output) {\n      if (dataIndices.has(i.name!)) {\n        throw new Error(`duplicated output name: ${i.name}`);\n      }\n      const currentIndex = this._allData.push(new Value(i)) - 1;\n      dataIndices.set(i.name!, currentIndex);\n      this._allOutputIndices.push(currentIndex);\n      this._allOutputNames.push(i.name!);\n    }\n\n    // scan all nodes\n    if (!graph.node) {\n      throw new Error('missing information in graph: node');\n    }\n    for (const nodeProto of graph.node) {\n      if (!nodeProto.name) {\n        // assign a name to the node if it doesn't have one\n        for (let pick = 0;; pick++) {\n          const name = `unnamed_${nodeProto.opType}_${pick}`;\n          if (!nodesIndices.has(name)) {\n            nodeProto.name = name;\n            break;\n          }\n        }\n      }\n\n      if (nodesIndices.has(nodeProto.name)) {\n        throw new Error(`duplicated node name: ${nodeProto.name}`);\n      }\n      const currentIndex = this._nodes.push(new Node(nodeProto)) - 1;\n      nodesIndices.set(nodeProto.name, currentIndex);\n    }\n\n    // scan node's outputs\n    for (let i = 0; i < this._nodes.length; i++) {\n      const node = this._nodes[i];\n      const nodeProto = graph.node[i];\n      if (!nodeProto.output) {\n        throw new Error(`missing output for node: ${nodeProto.name}`);\n      }\n      for (const output of nodeProto.output) {\n        let dataIndex = dataIndices.get(output);\n        if (typeof dataIndex === 'undefined') {\n          dataIndex = this._allData.push(new Value()) - 1;\n          dataIndices.set(output, dataIndex);\n        }\n        node.outputs.push(dataIndex);\n\n        if (this._allData[dataIndex]._from !== undefined) {\n          throw new Error(`multiple nodes output to one data value: ${dataIndex}`);\n        }\n        this._allData[dataIndex]._from = i;\n\n        // for the 'Constant' operator, just create a new edge in the graph corresponding to the 'output' of the\n        // operator and ignore the node from the graph\n        if (nodeProto.opType === 'Constant') {\n          if (!nodeProto.attribute || nodeProto.attribute.length !== 1 || !nodeProto.attribute[0].t) {\n            throw new Error('missing attributes or missing tensor value in attributes for this Constant operator');\n          }\n          if (!nodeProto.output || nodeProto.output.length !== 1) {\n            throw new Error('missing output or incorrect number of outputs for this Constant operator');\n          }\n          node.outputs.pop();\n          node.executeNode = false;\n\n          this._allData[dataIndex]._from = -1;\n          this._allData[dataIndex].tensor = Tensor.fromProto(nodeProto.attribute[0].t);\n        }\n      }\n    }\n\n    // scan node's inputs\n    for (let i = 0; i < this._nodes.length; i++) {\n      const node = this._nodes[i];\n      const nodeProto = graph.node[i];\n\n      if (!nodeProto.input) {\n        throw new Error(`missing input for node: ${nodeProto.name}`);\n      }\n      for (const input of nodeProto.input) {\n        const dataIndex = dataIndices.get(input);\n        if (typeof dataIndex === 'undefined') {\n          // handle exception when opset > 9 and roi not given\n          if (input === '' && nodeProto.input.length === 3 && nodeProto.opType === 'Resize') {\n            continue;\n          }\n          throw new Error(`unrecognized input '${input}' for node: ${nodeProto.name}`);\n        }\n        node.inputs.push(dataIndex);\n\n        this._allData[dataIndex]._to.push(i);\n      }\n    }\n\n    return true;\n  }\n\n  private buildGraphFromOrtFormat(graph: ortFbs.Graph) {\n    const dataIndices = new Map<string, number>();\n    this._allData = [];\n\n    this._allInputIndices = [];\n    this._allInputNames = [];\n\n    this._allOutputIndices = [];\n    this._allOutputNames = [];\n\n    this._nodes = [];\n\n    const nodesIndices = new Map<string, number>();\n\n    // scan all inputs\n    const inputValueNames = [];\n    for (let i = 0; i < graph.inputsLength(); i++) {\n      const inputName = graph.inputs(i);\n      if (dataIndices.has(inputName)) {\n        throw new Error(`duplicated input name: ${inputName}`);\n      }\n      // Find the input typeInfo from nodeargs\n      for (let j = 0; j < graph.nodeArgsLength(); j++) {\n        if (graph.nodeArgs(j)?.name() === inputName) {\n          const value = new Value();\n          const valueType = graph.nodeArgs(j)?.type()?.valueType();\n          if (valueType !== ortFbs.TypeInfoValue.tensor_type) {\n            throw new Error('Unexpected value type for the nodeArg.');\n          }\n          const valueInfo = graph.nodeArgs(j)!.type()!.value(new ortFbs.TensorTypeAndShape())!;\n          const type = ProtoUtil.tensorDataTypeFromProto(valueInfo.elemType());\n          const shape = valueInfo.shape()!;\n          const dims = [];\n          for (let k = 0; k < shape.dimLength()!; k++) {\n            dims.push(LongUtil.longToNumber(shape.dim(k)!.value()!.dimValue()!));\n          }\n          value.type = {shape: {dims}, tensorType: type};\n          const currentIndex = this._allData.push(value) - 1;\n          dataIndices.set(inputName, currentIndex);\n          inputValueNames.push(inputName);\n        }\n      }\n    }\n    // check initializers\n    for (let i = 0; i < graph.initializersLength(); i++) {\n      const initializer = graph.initializers(i)!;\n      let index = dataIndices.get(initializer.name()!);\n      if (index === undefined) {\n        const value = new Value();\n        const dims = ProtoUtil.tensorDimsFromORTFormat(initializer);\n        const type = ProtoUtil.tensorDataTypeFromProto(initializer.dataType());\n        value.type = {shape: {dims}, tensorType: type};\n        index = this._allData.push(value) - 1;\n        dataIndices.set(initializer.name()!, index);\n      }\n      this._allData[index]._from = -1;\n      this._allData[index].tensor = Tensor.fromOrtTensor(initializer);\n    }\n\n    // filter out input indices\n    for (let i = 0; i < this._allData.length; i++) {\n      if (!this._allData[i].tensor) {\n        this._allInputIndices.push(i);\n        this._allInputNames.push(inputValueNames[i]);\n      }\n    }\n\n    // scan all outputs\n    for (let i = 0; i < graph.outputsLength(); i++) {\n      const outputName = graph.outputs(i);\n      if (dataIndices.has(outputName)) {\n        throw new Error(`duplicated output name: ${outputName}`);\n      }\n      const currentIndex = this._allData.push(new Value()) - 1;\n      dataIndices.set(outputName, currentIndex);\n      this._allOutputIndices.push(currentIndex);\n      this._allOutputNames.push(outputName);\n    }\n\n    // scan all nodes\n    if (!graph.nodes) {\n      throw new Error('missing information in graph: node');\n    }\n    for (let i = 0; i < graph.nodesLength(); i++) {\n      const nodeProto = graph.nodes(i);\n      let name = nodeProto!.name();\n      if (!name) {\n        // assign a name to the node if it doesn't have one\n        for (let pick = 0;; pick++) {\n          name = `unnamed_${nodeProto!.opType()}_${pick}`;\n          if (!nodesIndices.has(name)) {\n            // an unique name is found. break.\n            break;\n          }\n        }\n      }\n\n      if (nodesIndices.has(name)) {\n        throw new Error(`duplicated node name: ${name}`);\n      }\n      const currentIndex = this._nodes.push(new Node(nodeProto!, name)) - 1;\n      nodesIndices.set(name, currentIndex);\n    }\n\n    // scan node's outputs\n    for (let i = 0; i < this._nodes.length; i++) {\n      const node = this._nodes[i];\n      const nodeProto = graph.nodes(i);\n      if (nodeProto == null) {\n        throw new Error(`No node exists at index ${i}`);\n      }\n      if (nodeProto?.outputsLength() === 0) {\n        throw new Error(`missing output for node: ${nodeProto.name}`);\n      }\n      for (let j = 0; j < nodeProto?.outputsLength(); j++) {\n        const output = nodeProto?.outputs(j);\n        let dataIndex = dataIndices.get(output);\n        if (typeof dataIndex === 'undefined') {\n          dataIndex = this._allData.push(new Value()) - 1;\n          dataIndices.set(output, dataIndex);\n        }\n        node.outputs.push(dataIndex);\n\n        if (this._allData[dataIndex]._from !== undefined) {\n          throw new Error(`multiple nodes output to one data value: ${dataIndex}`);\n        }\n        this._allData[dataIndex]._from = i;\n\n        // for the 'Constant' operator, just create a new edge in the graph corresponding to the 'output' of the\n        // operator and ignore the node from the graph\n        if (nodeProto.opType() === 'Constant') {\n          if (nodeProto.attributesLength() !== 1 || !nodeProto.attributes(0)!.t()) {\n            throw new Error('missing attributes or missing tensor value in attributes for this Constant operator');\n          }\n          if (nodeProto.outputsLength() !== 1) {\n            throw new Error('missing output or incorrect number of outputs for this Constant operator');\n          }\n          node.outputs.pop();\n          node.executeNode = false;\n\n          this._allData[dataIndex]._from = -1;\n          this._allData[dataIndex].tensor = Tensor.fromOrtTensor(nodeProto.attributes(0)!.t()!);\n        }\n      }\n    }\n\n    // scan node's inputs\n    for (let i = 0; i < this._nodes.length; i++) {\n      const node = this._nodes[i];\n      const nodeProto = graph.nodes(i)!;\n\n      if (nodeProto.inputsLength() === 0) {\n        throw new Error(`missing input for node: ${nodeProto.name}`);\n      }\n      for (let j = 0; j < nodeProto.inputsLength()!; j++) {\n        const input = nodeProto.inputs(j)!;\n        const dataIndex = dataIndices.get(input);\n        if (typeof dataIndex === 'undefined') {\n          throw new Error(`unrecognized input '${input}' for node: ${nodeProto!.name()}`);\n        }\n        node.inputs.push(dataIndex);\n\n        this._allData[dataIndex]._to.push(i);\n      }\n    }\n  }\n\n  private checkIsAcyclic() {\n    // go through the graph and check for cycles or other fatal inconsistencies\n    const starters: Set<number> = new Set<number>();\n    this._allInputIndices.forEach(i => {\n      const data = this._allData[i];\n      data._to.forEach(j => {\n        starters.add(j);\n      });\n    });\n\n    // Iterative DFS to check for cycles\n    const nodesStack = Array.from(starters);\n    const nodesState = new Array<string>(this._nodes.length).fill('white');\n\n    while (nodesStack.length > 0) {\n      const nodeIndex = nodesStack.pop()!;\n      // this node has now been processed completely. Mark this node 'black' to denote this.\n      if (nodesState[nodeIndex] === 'gray') {\n        nodesState[nodeIndex] = 'black';\n      } else {\n        // this node is under processing stage. mark this node 'gray' to denote this.\n        nodesStack.push(nodeIndex);\n        nodesState[nodeIndex] = 'gray';\n\n        this._nodes[nodeIndex].outputs.forEach((outgoingEdgeIndex) => {\n          const data = this._allData[outgoingEdgeIndex];\n          if (typeof data.tensor !== 'undefined') {\n            throw new Error('node outputs should not be initialized');\n          }\n          if (data._from !== nodeIndex) {\n            throw new Error('from property of the Value object doesn\\'t match index of Node being processed');\n          }\n          data._to.forEach((downstreamNodeIndex) => {\n            // back edge found - cyclic\n            if (nodesState[downstreamNodeIndex] === 'gray') {\n              throw new Error('model graph is cyclic');\n            }\n            // tree edge found - continue processing by adding it to stack\n            else if (nodesState[downstreamNodeIndex] === 'white') {\n              nodesStack.push(downstreamNodeIndex);\n            }\n          });\n        });\n      }\n    }\n  }\n\n  private transformGraph(graphInitializer?: Graph.Initializer): void {\n    // apply common transform\n    this.removeAllIdentityNodes();\n    this.removeAllDropoutNodes();\n    this.fuseConvActivationNodes();\n    // apply initializer specific transform\n    if (graphInitializer) {\n      graphInitializer.transformGraph(this);\n    }\n\n    // finalize graph\n    this.finalizeGraph();\n  }\n\n  /**\n   * finalize the graph.\n   *\n   * this function should be called after all the transformation completed.\n   * this function removes all unnecessary nodes and values from the graph\n   */\n  finalizeGraph() {\n    let offset = 0;\n    // delete all nodes that are not being executed\n    // The graph is represented using these two arrays\n    // this._nodes - Array holding the kernels to execute - each entry is a kernel pointing to this._allData\n    // this._allData - hold 2 fields - to [] & from - these feileds hold the graph map for inputs and outputs per node\n    // newIndices - remapping the graph after reading the flag 'executeNode'\n    const newIndices = new Array<number>(this._nodes.length, 0);\n    let nodePossition = 0;\n\n    for (let i = 0; i < this._nodes.length; i++) {\n      // giving new indexes to the nodes based on execution flag\n      newIndices[i] = nodePossition;\n      if (this._nodes[i].executeNode) {\n        if (nodePossition !== i) {\n          this._nodes[nodePossition] = this._nodes[i];\n        }\n        nodePossition++;\n\n      } else {\n        // delete all output values\n        this._nodes[i].outputs.forEach(ind => {\n          this._allData[ind]._from = -2;\n        });\n      }\n    }\n\n    // removing the unused nodes\n    this._nodes.splice(nodePossition, this._nodes.length - nodePossition);\n\n    // Updating this._allData according to the new this._nodes\n    for (let i = 0; i < this._allData.length; i++) {\n      const currentData = this._allData[i];\n      if (currentData._from !== undefined && currentData._from !== -1 && currentData._from !== -2) {\n        currentData._from = newIndices[currentData._from];\n      }\n\n      for (let j = 0; j < currentData._to.length; j++) {\n        if (currentData._to[j] >= 0) {\n          currentData._to[j] = newIndices[currentData._to[j]];\n        } else {\n          throw new Error('Trying to update a removed node');\n        }\n      }\n    }\n\n    offset = 0;\n    // delete all values that are not being referenced\n    for (let i = 0; i < this._allData.length; i++) {\n      // if current value is neither linked to next node, nor an output value, remove it.\n      if (this._allData[i].from === -2 && this._allOutputIndices.indexOf(i + offset) === -1) {\n        offset++;\n        this._allData.splice(i, 1);\n        i--;\n        continue;\n      }\n      if (offset > 0) {\n        let ind = -1;\n        // if current value is neither an input value nor an initializer, find the node it's\n        // coming from and update the corresponding node output\n        if (this._allData[i].from !== undefined && this._allData[i].from !== -1) {\n          ind = this._nodes[this._allData[i].from].outputs.indexOf(i + offset);\n          if (ind !== -1) {\n            this._nodes[this._allData[i].from].outputs[ind] = i;\n          }\n        } else {\n          // if current value is an input value, update its reference in inputIndices\n          ind = this._allInputIndices.indexOf(i + offset);\n          if (ind !== -1) {\n            this._allInputIndices[ind] = i;\n          }\n        }\n\n        // find the node that the current value is linking to and update its input reference\n        this._allData[i].to.forEach(node => {\n          ind = this._nodes[node].inputs.indexOf(i + offset);\n          if (ind !== -1) {\n            this._nodes[node].inputs[ind] = i;\n          }\n        });\n        if (this._allData[i].to.length === 0) {\n          // if current value is a graph output, update its reference in outputIndices\n          ind = this._allOutputIndices.indexOf(i + offset);\n          if (ind !== -1) {\n            this._allOutputIndices[ind] = i;\n          }\n        }\n      }\n    }\n  }\n\n  /**\n   * Delete the specifed node. Assume the node has one incoming input and the first output connected to other nodes.\n   * An input validation must be done before calling this function.\n   * @param nodeIndex The index of node to be deleted\n   */\n  private deleteNode(nodeIndex: number) {\n    const node = this._nodes[nodeIndex];\n    if (node.outputs.length > 1) {\n      for (let i = 1; i < node.outputs.length; i++) {\n        if (this._allData[node.outputs[i]].to.length > 0) {\n          throw new Error('Node deletion with more than one output connected to other nodes is not supported. ');\n        }\n      }\n    }\n\n    // this node wil not be executed\n    node.executeNode = false;\n    const inputValueIndex = node.inputs[0];\n    const outputValueIndex = node.outputs[0];\n    const nodesConsumingOutput = this._allData[outputValueIndex].to;\n\n    // remove this node from the to property of the input Value\n    for (let i = 0; i < node.inputs.length; i++) {\n      const delIndex = this._allData[node.inputs[i]].to.indexOf(nodeIndex);\n      // should not happen\n      if (delIndex === -1) {\n        throw new Error('The Value object doesn\\'t have the current Node in it\\'s \\'to\\' property ');\n      }\n      this._allData[node.inputs[i]].to.splice(delIndex, 1);\n    }\n\n    // clear node indices consuming this output Value\n    this._allData[outputValueIndex]._to = [];\n\n    // if the output of this node is a graph output, adjust the index appropriately\n    const index = this._allOutputIndices.indexOf(outputValueIndex);\n    if (index !== -1) {\n      this._allOutputIndices[index] = inputValueIndex;\n    }\n\n    // override the inputs for nodes consuming this node's output with the input to this node\n    if (nodesConsumingOutput && nodesConsumingOutput.length > 0) {\n      for (const nodeIndex of nodesConsumingOutput) {\n        const replaceIndex = this._nodes[nodeIndex].inputs.indexOf(outputValueIndex);\n        // should not happen\n        if (replaceIndex === -1) {\n          throw new Error('The Node object doesn\\'t have the output Value in it\\'s \\'inputs\\' property ');\n        }\n        this._nodes[nodeIndex].inputs[replaceIndex] = inputValueIndex;\n        this._allData[inputValueIndex].to.push(nodeIndex);\n      }\n    }\n  }\n\n  removeAllDropoutNodes() {\n    let nodeIndex = 0;\n    for (const node of this._nodes) {\n      // weed out 'Dropout' nodes so that no time is wasted in execution\n      if (node.opType === 'Dropout') {\n        // the node should have exactly 1 input and 1 or 2 outputs\n        if (node.inputs.length !== 1) {\n          throw new Error('Dropout nodes should only contain one input. ');\n        }\n        if (node.outputs.length !== 1 && node.outputs.length !== 2) {\n          throw new Error('Dropout nodes should contain either 1 or 2 output(s)');\n        }\n        // the second output should not be referenced by any other node\n        if (node.outputs.length === 2 && this._allData[node.outputs[1]]._to.length !== 0) {\n          throw new Error('Dropout nodes\\'s second output should not be referenced by other nodes');\n        }\n        this.deleteNode(nodeIndex);\n      }\n      nodeIndex++;\n    }\n  }\n\n  removeAllIdentityNodes() {\n    let nodeIndex = 0;\n    for (const node of this._nodes) {\n      // weed out 'Identity' nodes so that no time is wasted in execution\n      if (node.opType === 'Identity') {\n        this.deleteNode(nodeIndex);\n      }\n      nodeIndex++;\n    }\n  }\n\n  isActivation(n: Node): boolean {\n    switch (n.opType) {\n      // TODO: add other activation methods\n      case 'Relu':\n      case 'Sigmoid':\n      case 'Clip':\n        return true;\n      default:\n        return false;\n    }\n  }\n\n  fuseConvActivationNodes() {\n    for (const node of this._nodes) {\n      if (node.opType === 'Conv') {\n        const next = this._allData[node.outputs[0]]._to;\n        if (next.length === 1 && this.isActivation(this._nodes[next[0]])) {\n          const child = this._nodes[next[0]];\n          if (child.opType === 'Clip') {\n            if (child.inputs.length === 1) {\n              try {\n                node.attributes.set(\n                    'activation_params', 'floats',\n                    [child.attributes.getFloat('min'), child.attributes.getFloat('max')]);\n              } catch (e) {\n                node.attributes.set('activation_params', 'floats', [MIN_CLIP, MAX_CLIP]);\n              }\n            } else if (\n                child.inputs.length >= 3 && this._allData[child.inputs[1]].tensor !== undefined &&\n                this._allData[child.inputs[2]].tensor !== undefined) {\n              node.attributes.set('activation_params', 'floats', [\n                this._allData[child.inputs[1]].tensor!.floatData[0], this._allData[child.inputs[2]].tensor!.floatData[0]\n              ]);\n            } else {\n              // Skip fusion with clip node since clip min and clip max are not coming from initializer\n              continue;\n            }\n          }\n          node.attributes.set('activation', 'string', (child.opType));\n          this.deleteNode(next[0]);\n        }\n      }\n    }\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Env} from 'onnxruntime-common';\n\nimport {WebGLContext} from './backends/webgl/webgl-context';\n\nexport declare namespace Logger {\n  export interface SeverityTypeMap {\n    verbose: 'v';\n    info: 'i';\n    warning: 'w';\n    error: 'e';\n    fatal: 'f';\n  }\n\n  export type Severity = keyof SeverityTypeMap;\n\n  export type Provider = 'none'|'console';\n\n  /**\n   * Logging config that used to control the behavior of logger\n   */\n  export interface Config {\n    /**\n     * Specify the logging provider. 'console' by default\n     */\n    provider?: Provider;\n    /**\n     * Specify the minimal logger serverity. 'warning' by default\n     */\n    minimalSeverity?: Logger.Severity;\n    /**\n     * Whether to output date time in log. true by default\n     */\n    logDateTime?: boolean;\n    /**\n     * Whether to output source information (Not yet supported). false by default\n     */\n    logSourceLocation?: boolean;\n  }\n\n  export interface CategorizedLogger {\n    verbose(content: string): void;\n    info(content: string): void;\n    warning(content: string): void;\n    error(content: string): void;\n    fatal(content: string): void;\n  }\n}\n\n// eslint-disable-next-line @typescript-eslint/no-redeclare\nexport interface Logger {\n  (category: string): Logger.CategorizedLogger;\n\n  verbose(content: string): void;\n  verbose(category: string, content: string): void;\n  info(content: string): void;\n  info(category: string, content: string): void;\n  warning(content: string): void;\n  warning(category: string, content: string): void;\n  error(content: string): void;\n  error(category: string, content: string): void;\n  fatal(content: string): void;\n  fatal(category: string, content: string): void;\n\n  /**\n   * Reset the logger configuration.\n   * @param config specify an optional default config\n   */\n  reset(config?: Logger.Config): void;\n  /**\n   * Set the logger's behavior on the given category\n   * @param category specify a category string. If '*' is specified, all previous configuration will be overwritten. If\n   * '' is specified, the default behavior will be updated.\n   * @param config the config object to indicate the logger's behavior\n   */\n  set(category: string, config: Logger.Config): void;\n\n  /**\n   * Set the logger's behavior from ort-common env\n   * @param env the env used to set logger. Currently only setting loglevel is supported through Env.\n   */\n  setWithEnv(env: Env): void;\n}\n\ninterface LoggerProvider {\n  log(severity: Logger.Severity, content: string, category?: string): void;\n}\nclass NoOpLoggerProvider implements LoggerProvider {\n  log(_severity: Logger.Severity, _content: string, _category?: string) {\n    // do nothing\n  }\n}\nclass ConsoleLoggerProvider implements LoggerProvider {\n  log(severity: Logger.Severity, content: string, category?: string) {\n    // eslint-disable-next-line no-console\n    console.log(`${this.color(severity)} ${category ? '\\x1b[35m' + category + '\\x1b[0m ' : ''}${content}`);\n  }\n\n  private color(severity: Logger.Severity) {\n    switch (severity) {\n      case 'verbose':\n        return '\\x1b[34;40mv\\x1b[0m';\n      case 'info':\n        return '\\x1b[32mi\\x1b[0m';\n      case 'warning':\n        return '\\x1b[30;43mw\\x1b[0m';\n      case 'error':\n        return '\\x1b[31;40me\\x1b[0m';\n      case 'fatal':\n        return '\\x1b[101mf\\x1b[0m';\n      default:\n        throw new Error(`unsupported severity: ${severity}`);\n    }\n  }\n}\n\nconst SEVERITY_VALUE = {\n  verbose: 1000,\n  info: 2000,\n  warning: 4000,\n  error: 5000,\n  fatal: 6000\n};\n\nconst LOGGER_PROVIDER_MAP: {readonly [provider: string]: Readonly<LoggerProvider>} = {\n  ['none']: new NoOpLoggerProvider(),\n  ['console']: new ConsoleLoggerProvider()\n};\nconst LOGGER_DEFAULT_CONFIG = {\n  provider: 'console',\n  minimalSeverity: 'warning',\n  logDateTime: true,\n  logSourceLocation: false\n};\nlet LOGGER_CONFIG_MAP:\n    {[category: string]: Readonly<Required<Logger.Config>>} = {['']: LOGGER_DEFAULT_CONFIG as Required<Logger.Config>};\n\nfunction log(category: string): Logger.CategorizedLogger;\nfunction log(severity: Logger.Severity, content: string): void;\nfunction log(severity: Logger.Severity, category: string, content: string): void;\nfunction log(severity: Logger.Severity, arg1: string, arg2?: string): void;\nfunction log(\n    arg0: string|Logger.Severity, arg1?: string, arg2?: string|number, arg3?: number): Logger.CategorizedLogger|void {\n  if (arg1 === undefined) {\n    // log(category: string): Logger.CategorizedLogger;\n    return createCategorizedLogger(arg0);\n  } else if (arg2 === undefined) {\n    // log(severity, content);\n    logInternal(arg0 as Logger.Severity, arg1, 1);\n  } else if (typeof arg2 === 'number' && arg3 === undefined) {\n    // log(severity, content, stack)\n    logInternal(arg0 as Logger.Severity, arg1, arg2);\n  } else if (typeof arg2 === 'string' && arg3 === undefined) {\n    // log(severity, category, content)\n    logInternal(arg0 as Logger.Severity, arg2, 1, arg1);\n  } else if (typeof arg2 === 'string' && typeof arg3 === 'number') {\n    // log(severity, category, content, stack)\n    logInternal(arg0 as Logger.Severity, arg2, arg3, arg1);\n  } else {\n    throw new TypeError('input is valid');\n  }\n}\n\nfunction createCategorizedLogger(category: string): Logger.CategorizedLogger {\n  return {\n    verbose: log.verbose.bind(null, category),\n    info: log.info.bind(null, category),\n    warning: log.warning.bind(null, category),\n    error: log.error.bind(null, category),\n    fatal: log.fatal.bind(null, category)\n  };\n}\n\n// NOTE: argument 'category' is put the last parameter beacause typescript\n// doesn't allow optional argument put in front of required argument. This\n// order is different from a usual logging API.\nfunction logInternal(severity: Logger.Severity, content: string, stack: number, category?: string) {\n  const config = LOGGER_CONFIG_MAP[category || ''] || LOGGER_CONFIG_MAP[''];\n  if (SEVERITY_VALUE[severity] < SEVERITY_VALUE[config.minimalSeverity]) {\n    return;\n  }\n\n  if (config.logDateTime) {\n    content = `${new Date().toISOString()}|${content}`;\n  }\n\n  if (config.logSourceLocation) {\n    // TODO: calculate source location from 'stack'\n  }\n\n  LOGGER_PROVIDER_MAP[config.provider].log(severity, content, category);\n}\n\n// eslint-disable-next-line @typescript-eslint/no-namespace\nnamespace log {\n  export function verbose(content: string): void;\n  export function verbose(category: string, content: string): void;\n  export function verbose(arg0: string, arg1?: string) {\n    log('verbose', arg0, arg1);\n  }\n  export function info(content: string): void;\n  export function info(category: string, content: string): void;\n  export function info(arg0: string, arg1?: string) {\n    log('info', arg0, arg1);\n  }\n  export function warning(content: string): void;\n  export function warning(category: string, content: string): void;\n  export function warning(arg0: string, arg1?: string) {\n    log('warning', arg0, arg1);\n  }\n  export function error(content: string): void;\n  export function error(category: string, content: string): void;\n  export function error(arg0: string, arg1?: string) {\n    log('error', arg0, arg1);\n  }\n  export function fatal(content: string): void;\n  export function fatal(category: string, content: string): void;\n  export function fatal(arg0: string, arg1?: string) {\n    log('fatal', arg0, arg1);\n  }\n\n  export function reset(config?: Logger.Config): void {\n    LOGGER_CONFIG_MAP = {};\n    set('', config || {});\n  }\n  export function set(category: string, config: Logger.Config): void {\n    if (category === '*') {\n      reset(config);\n    } else {\n      const previousConfig = LOGGER_CONFIG_MAP[category] || LOGGER_DEFAULT_CONFIG;\n      LOGGER_CONFIG_MAP[category] = {\n        provider: config.provider || previousConfig.provider,\n        minimalSeverity: config.minimalSeverity || previousConfig.minimalSeverity,\n        logDateTime: (config.logDateTime === undefined) ? previousConfig.logDateTime : config.logDateTime,\n        logSourceLocation: (config.logSourceLocation === undefined) ? previousConfig.logSourceLocation :\n                                                                      config.logSourceLocation\n      };\n    }\n\n    // TODO: we want to support wildcard or regex?\n  }\n\n  export function setWithEnv(env: Env): void {\n    const config: Logger.Config = {};\n    if (env.logLevel) {\n      config.minimalSeverity = env.logLevel as Logger.Severity;\n    }\n    set('', config);\n  }\n}\n\n// eslint-disable-next-line @typescript-eslint/no-redeclare, @typescript-eslint/naming-convention\nexport const Logger: Logger = log;\n\nexport declare namespace Profiler {\n  export interface Config {\n    maxNumberEvents?: number;\n    flushBatchSize?: number;\n    flushIntervalInMilliseconds?: number;\n  }\n\n  export type EventCategory = 'session'|'node'|'op'|'backend';\n\n  export interface Event {\n    end(): void|Promise<void>;\n  }\n}\n// TODO\n// class WebGLEvent implements Profiler.Event {}\n\nclass Event implements Profiler.Event {\n  constructor(\n      public category: Profiler.EventCategory, public name: string, public startTime: number,\n      private endCallback: (e: Event) => void|Promise<void>, public timer?: WebGLQuery, public ctx?: WebGLContext) {}\n\n  async end() {\n    return this.endCallback(this);\n  }\n\n  async checkTimer(): Promise<number> {\n    if (this.ctx === undefined || this.timer === undefined) {\n      throw new Error('No webgl timer found');\n    } else {\n      this.ctx.endTimer();\n      return this.ctx.waitForQueryAndGetTime(this.timer);\n    }\n  }\n}\n\nclass EventRecord {\n  constructor(\n      public category: Profiler.EventCategory, public name: string, public startTime: number, public endTime: number) {}\n}\n\nexport class Profiler {\n  static create(config?: Profiler.Config): Profiler {\n    if (config === undefined) {\n      return new this();\n    }\n    return new this(config.maxNumberEvents, config.flushBatchSize, config.flushIntervalInMilliseconds);\n  }\n\n  private constructor(maxNumberEvents?: number, flushBatchSize?: number, flushIntervalInMilliseconds?: number) {\n    this._started = false;\n    this._maxNumberEvents = maxNumberEvents === undefined ? 10000 : maxNumberEvents;\n    this._flushBatchSize = flushBatchSize === undefined ? 10 : flushBatchSize;\n    this._flushIntervalInMilliseconds = flushIntervalInMilliseconds === undefined ? 5000 : flushIntervalInMilliseconds;\n  }\n\n  // start profiling\n  start() {\n    this._started = true;\n    this._timingEvents = [];\n    this._flushTime = now();\n    this._flushPointer = 0;\n  }\n\n  // stop profiling\n  stop() {\n    this._started = false;\n    for (; this._flushPointer < this._timingEvents.length; this._flushPointer++) {\n      this.logOneEvent(this._timingEvents[this._flushPointer]);\n    }\n  }\n\n  // create an event scope for the specific function\n  event<T>(category: Profiler.EventCategory, name: string, func: () => T, ctx?: WebGLContext): T;\n  event<T>(category: Profiler.EventCategory, name: string, func: () => Promise<T>, ctx?: WebGLContext): Promise<T>;\n\n  event<T>(category: Profiler.EventCategory, name: string, func: () => T | Promise<T>, ctx?: WebGLContext): T\n      |Promise<T> {\n    const event = this._started ? this.begin(category, name, ctx) : undefined;\n    let isPromise = false;\n\n    const res = func();\n\n    // we consider a then-able object is a promise\n    if (res && typeof (res as Promise<T>).then === 'function') {\n      isPromise = true;\n      return new Promise<T>((resolve, reject) => {\n        (res as Promise<T>)\n            .then(\n                async value => {  // fulfilled\n                  if (event) {\n                    await event.end();\n                  }\n                  resolve(value);\n                },\n                async reason => {  // rejected\n                  if (event) {\n                    await event.end();\n                  }\n                  reject(reason);\n                });\n      });\n    }\n    if (!isPromise && event) {\n      const eventRes = event.end();\n      if (eventRes && typeof eventRes.then === 'function') {\n        return new Promise<T>((resolve, reject) => {\n          (eventRes).then(\n              () => {  // fulfilled\n                resolve(res);\n              },\n              (reason) => {  // rejected\n                reject(reason);\n              });\n        });\n      }\n    }\n    return res;\n  }\n\n  // begin an event\n  begin(category: Profiler.EventCategory, name: string, ctx?: WebGLContext): Event {\n    if (!this._started) {\n      throw new Error('profiler is not started yet');\n    }\n    if (ctx === undefined) {\n      const startTime = now();\n      this.flush(startTime);\n      return new Event(category, name, startTime, e => this.endSync(e));\n    } else {\n      const timer: WebGLQuery = ctx.beginTimer();\n      return new Event(category, name, 0, async e => this.end(e), timer, ctx);\n    }\n  }\n\n  // end the specific event\n  private async end(event: Event): Promise<void> {\n    const endTime: number = await event.checkTimer();\n    if (this._timingEvents.length < this._maxNumberEvents) {\n      this._timingEvents.push(new EventRecord(event.category, event.name, event.startTime, endTime));\n      this.flush(endTime);\n    }\n  }\n\n  private endSync(event: Event): void {\n    const endTime: number = now();\n    if (this._timingEvents.length < this._maxNumberEvents) {\n      this._timingEvents.push(new EventRecord(event.category, event.name, event.startTime, endTime));\n      this.flush(endTime);\n    }\n  }\n\n  private logOneEvent(event: EventRecord) {\n    Logger.verbose(\n        `Profiler.${event.category}`,\n        `${(event.endTime - event.startTime).toFixed(2)}ms on event '${event.name}' at ${event.endTime.toFixed(2)}`);\n  }\n\n  private flush(currentTime: number) {\n    if (this._timingEvents.length - this._flushPointer >= this._flushBatchSize ||\n        currentTime - this._flushTime >= this._flushIntervalInMilliseconds) {\n      // should flush when either batch size accumlated or interval elepsed\n\n      for (const previousPointer = this._flushPointer; this._flushPointer < previousPointer + this._flushBatchSize &&\n           this._flushPointer < this._timingEvents.length;\n           this._flushPointer++) {\n        this.logOneEvent(this._timingEvents[this._flushPointer]);\n      }\n\n      this._flushTime = now();\n    }\n  }\n\n  get started() {\n    return this._started;\n  }\n  private _started = false;\n  private _timingEvents: EventRecord[];\n\n  private readonly _maxNumberEvents: number;\n\n  private readonly _flushBatchSize: number;\n  private readonly _flushIntervalInMilliseconds: number;\n\n  private _flushTime: number;\n  private _flushPointer = 0;\n}\n\n/**\n * returns a number to represent the current timestamp in a resolution as high as possible.\n */\nexport const now = (typeof performance !== 'undefined' && performance.now) ? () => performance.now() : Date.now;\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {flatbuffers} from 'flatbuffers';\nimport {onnx} from 'onnx-proto';\n\nimport {Graph} from './graph';\nimport {OpSet} from './opset';\nimport {onnxruntime} from './ort-schema/ort-generated';\nimport {LongUtil} from './util';\n\nimport ortFbs = onnxruntime.experimental.fbs;\n\nexport class Model {\n  // empty model\n  constructor() {}\n\n  load(buf: Uint8Array, graphInitializer?: Graph.Initializer, isOrtFormat?: boolean): void {\n    if (!isOrtFormat) {\n      // isOrtFormat === false || isOrtFormat === undefined\n      try {\n        this.loadFromOnnxFormat(buf, graphInitializer);\n        return;\n      } catch (e) {\n        if (isOrtFormat !== undefined) {\n          throw e;\n        }\n      }\n    }\n\n    this.loadFromOrtFormat(buf, graphInitializer);\n  }\n\n  private loadFromOnnxFormat(buf: Uint8Array, graphInitializer?: Graph.Initializer): void {\n    const modelProto = onnx.ModelProto.decode(buf);\n    const irVersion = LongUtil.longToNumber(modelProto.irVersion);\n    if (irVersion < 3) {\n      throw new Error('only support ONNX model with IR_VERSION>=3');\n    }\n\n    this._opsets =\n        modelProto.opsetImport.map(i => ({domain: i.domain as string, version: LongUtil.longToNumber(i.version!)}));\n\n    this._graph = Graph.from(modelProto.graph!, graphInitializer);\n  }\n\n  private loadFromOrtFormat(buf: Uint8Array, graphInitializer?: Graph.Initializer): void {\n    const fb = new flatbuffers.ByteBuffer(buf);\n    const ortModel = ortFbs.InferenceSession.getRootAsInferenceSession(fb).model()!;\n    const irVersion = LongUtil.longToNumber(ortModel.irVersion());\n    if (irVersion < 3) {\n      throw new Error('only support ONNX model with IR_VERSION>=3');\n    }\n    this._opsets = [];\n    for (let i = 0; i < ortModel.opsetImportLength(); i++) {\n      const opsetId = ortModel.opsetImport(i)!;\n      this._opsets.push({domain: opsetId?.domain() as string, version: LongUtil.longToNumber(opsetId.version()!)});\n    }\n\n    this._graph = Graph.from(ortModel.graph()!, graphInitializer);\n  }\n\n  private _graph: Graph;\n  get graph(): Graph {\n    return this._graph;\n  }\n\n  private _opsets: OpSet[];\n  get opsets(): readonly OpSet[] {\n    return this._opsets;\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {InferenceHandler} from './backend';\nimport {Graph} from './graph';\nimport {Tensor} from './tensor';\n\nexport type OperatorImplementation<T> = (inferenceHandler: InferenceHandler, inputs: Tensor[], context: T) => Tensor[];\nexport type OperatorInitialization<T> = (node: Graph.Node, graph: Graph) => T;\n\nexport interface Operator {\n  readonly impl: OperatorImplementation<unknown>;\n  readonly context: Graph.Node|unknown;\n}\n\nexport const NUMBER_TYPES: readonly Tensor.DataType[] =\n    ['float32', 'float64', 'int32', 'int16', 'int8', 'uint16', 'uint32', 'uint8'];\nexport const INT_TYPES: readonly Tensor.DataType[] = ['int32', 'int16', 'int8', 'uint16', 'uint32', 'uint8'];\nexport const FLOAT_TYPES: readonly Tensor.DataType[] = ['float32', 'float64'];\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Graph} from './graph';\nimport {OperatorImplementation, OperatorInitialization} from './operators';\n\nexport interface OpSet {\n  domain: string;\n  version: number;\n}\nexport declare namespace OpSet {\n  /**\n   * Domain of an opset, it can be an empty string(default value, represent for ai.onnx), or 'ai.onnx.ml'\n   */\n  type Domain = ''|'ai.onnx.ml'|'com.microsoft';\n  /**\n   * A resolve rule consists of 4 or 5 items: opType, opSetDomain, versionSelector, operatorImplementation and\n   * operatorInitialization (optional)\n   */\n  type ResolveRule = [\n    string, Domain, string, OperatorImplementation<Graph.Node>\n  ]|[string, Domain, string, OperatorImplementation<unknown>, OperatorInitialization<unknown>];\n}\n\nexport function resolveOperator(node: Graph.Node, opsets: readonly OpSet[], rules: readonly OpSet.ResolveRule[]) {\n  for (const rule of rules) {\n    const opType = rule[0];\n    const domain = rule[1];\n    const versionSelector = rule[2];\n    const opImpl = rule[3];\n    const opInit = rule[4];\n\n    if (node.opType === opType) {  // operator type matches\n      for (const opset of opsets) {\n        // opset '' and 'ai.onnx' are considered the same.\n        if (opset.domain === domain || (opset.domain === 'ai.onnx' && domain === '')) {  // opset domain found\n          if (matchSelector(opset.version, versionSelector)) {\n            return {opImpl, opInit};\n          }\n        }\n      }\n    }\n  }\n\n  throw new TypeError(`cannot resolve operator '${node.opType}' with opsets: ${\n      opsets.map(set => `${set.domain || 'ai.onnx'} v${set.version}`).join(', ')}`);\n}\n\nfunction matchSelector(version: number, selector: string): boolean {\n  if (selector.endsWith('+')) {\n    // minimum version match ('7+' expects version>=7)\n    const rangeStart = Number.parseInt(selector.substring(0, selector.length - 1), 10);\n    return !isNaN(rangeStart) && rangeStart <= version;\n  } else if (selector.split('-').length === 2) {\n    // range match ('6-8' expects 6<=version<=8)\n    const pair = selector.split('-');\n    const rangeStart = Number.parseInt(pair[0], 10);\n    const rangeEnd = Number.parseInt(pair[1], 10);\n    return !isNaN(rangeStart) && !isNaN(rangeEnd) && rangeStart <= version && version <= rangeEnd;\n  } else {\n    // exact match ('7' expects version===7)\n    return Number.parseInt(selector, 10) === version;\n  }\n}\n","// automatically generated by the FlatBuffers compiler, do not modify\n/* eslint-disable */\n\nimport {flatbuffers} from 'flatbuffers';\n\n/**\n * @enum {number}\n */\nexport namespace onnxruntime.experimental.fbs {\n  export enum AttributeType {\n    UNDEFINED = 0,\n    FLOAT = 1,\n    INT = 2,\n    STRING = 3,\n    TENSOR = 4,\n    GRAPH = 5,\n    FLOATS = 6,\n    INTS = 7,\n    STRINGS = 8,\n    TENSORS = 9,\n    GRAPHS = 10,\n    SPARSE_TENSOR = 11,\n    SPARSE_TENSORS = 12\n  }\n}\n\n/**\n * @enum {number}\n */\nexport namespace onnxruntime.experimental.fbs {\n  export enum DimensionValueType {UNKNOWN = 0, VALUE = 1, PARAM = 2}\n}\n\n/**\n * @enum {number}\n */\nexport namespace onnxruntime.experimental.fbs {\n  export enum TensorDataType {\n    UNDEFINED = 0,\n    FLOAT = 1,\n    UINT8 = 2,\n    INT8 = 3,\n    UINT16 = 4,\n    INT16 = 5,\n    INT32 = 6,\n    INT64 = 7,\n    STRING = 8,\n    BOOL = 9,\n    FLOAT16 = 10,\n    DOUBLE = 11,\n    UINT32 = 12,\n    UINT64 = 13,\n    COMPLEX64 = 14,\n    COMPLEX128 = 15,\n    BFLOAT16 = 16\n  }\n}\n\n/**\n * @enum {number}\n */\nexport namespace onnxruntime.experimental.fbs {\n  export enum NodeType {Primitive = 0, Fused = 1}\n}\n\n/**\n * @enum {number}\n */\nexport namespace onnxruntime.experimental.fbs {\n  export enum TypeInfoValue {NONE = 0, tensor_type = 1, sequence_type = 2, map_type = 3}\n}\n\n/**\n * @constructor\n */\nexport namespace onnxruntime.experimental.fbs {\n  export class Shape {\n    bb: flatbuffers.ByteBuffer|null = null;\n\n    bb_pos = 0;\n    /**\n     * @param number i\n     * @param flatbuffers.ByteBuffer bb\n     * @returns Shape\n     */\n    __init(i: number, bb: flatbuffers.ByteBuffer): Shape {\n      this.bb_pos = i;\n      this.bb = bb;\n      return this;\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param Shape= obj\n     * @returns Shape\n     */\n    static getRootAsShape(bb: flatbuffers.ByteBuffer, obj?: Shape): Shape {\n      return (obj || new Shape()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param Shape= obj\n     * @returns Shape\n     */\n    static getSizePrefixedRootAsShape(bb: flatbuffers.ByteBuffer, obj?: Shape): Shape {\n      bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n      return (obj || new Shape()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param number index\n     * @param onnxruntime.experimental.fbs.Dimension= obj\n     * @returns onnxruntime.experimental.fbs.Dimension\n     */\n    dim(index: number, obj?: onnxruntime.experimental.fbs.Dimension): onnxruntime.experimental.fbs.Dimension|null {\n      let offset = this.bb!.__offset(this.bb_pos, 4);\n      return offset ? (obj || new onnxruntime.experimental.fbs.Dimension())\n                          .__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) :\n                      null;\n    }\n\n    /**\n     * @returns number\n     */\n    dimLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 4);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     */\n    static startShape(builder: flatbuffers.Builder) {\n      builder.startObject(1);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset dimOffset\n     */\n    static addDim(builder: flatbuffers.Builder, dimOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(0, dimOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param Array.<flatbuffers.Offset> data\n     * @returns flatbuffers.Offset\n     */\n    static createDimVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]): flatbuffers.Offset {\n      builder.startVector(4, data.length, 4);\n      for (let i = data.length - 1; i >= 0; i--) {\n        builder.addOffset(data[i]);\n      }\n      return builder.endVector();\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startDimVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(4, numElems, 4);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @returns flatbuffers.Offset\n     */\n    static endShape(builder: flatbuffers.Builder): flatbuffers.Offset {\n      let offset = builder.endObject();\n      return offset;\n    }\n\n    static createShape(builder: flatbuffers.Builder, dimOffset: flatbuffers.Offset): flatbuffers.Offset {\n      Shape.startShape(builder);\n      Shape.addDim(builder, dimOffset);\n      return Shape.endShape(builder);\n    }\n  }\n}\n/**\n * @constructor\n */\nexport namespace onnxruntime.experimental.fbs {\n  export class Dimension {\n    bb: flatbuffers.ByteBuffer|null = null;\n\n    bb_pos = 0;\n    /**\n     * @param number i\n     * @param flatbuffers.ByteBuffer bb\n     * @returns Dimension\n     */\n    __init(i: number, bb: flatbuffers.ByteBuffer): Dimension {\n      this.bb_pos = i;\n      this.bb = bb;\n      return this;\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param Dimension= obj\n     * @returns Dimension\n     */\n    static getRootAsDimension(bb: flatbuffers.ByteBuffer, obj?: Dimension): Dimension {\n      return (obj || new Dimension()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param Dimension= obj\n     * @returns Dimension\n     */\n    static getSizePrefixedRootAsDimension(bb: flatbuffers.ByteBuffer, obj?: Dimension): Dimension {\n      bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n      return (obj || new Dimension()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param onnxruntime.experimental.fbs.DimensionValue= obj\n     * @returns onnxruntime.experimental.fbs.DimensionValue|null\n     */\n    value(obj?: onnxruntime.experimental.fbs.DimensionValue): onnxruntime.experimental.fbs.DimensionValue|null {\n      let offset = this.bb!.__offset(this.bb_pos, 4);\n      return offset ? (obj || new onnxruntime.experimental.fbs.DimensionValue())\n                          .__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) :\n                      null;\n    }\n\n    /**\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array|null\n     */\n    denotation(): string|null;\n    denotation(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\n    denotation(optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 6);\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     */\n    static startDimension(builder: flatbuffers.Builder) {\n      builder.startObject(2);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset valueOffset\n     */\n    static addValue(builder: flatbuffers.Builder, valueOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(0, valueOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset denotationOffset\n     */\n    static addDenotation(builder: flatbuffers.Builder, denotationOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(1, denotationOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @returns flatbuffers.Offset\n     */\n    static endDimension(builder: flatbuffers.Builder): flatbuffers.Offset {\n      let offset = builder.endObject();\n      return offset;\n    }\n\n    static createDimension(\n        builder: flatbuffers.Builder, valueOffset: flatbuffers.Offset,\n        denotationOffset: flatbuffers.Offset): flatbuffers.Offset {\n      Dimension.startDimension(builder);\n      Dimension.addValue(builder, valueOffset);\n      Dimension.addDenotation(builder, denotationOffset);\n      return Dimension.endDimension(builder);\n    }\n  }\n}\n/**\n * @constructor\n */\nexport namespace onnxruntime.experimental.fbs {\n  export class DimensionValue {\n    bb: flatbuffers.ByteBuffer|null = null;\n\n    bb_pos = 0;\n    /**\n     * @param number i\n     * @param flatbuffers.ByteBuffer bb\n     * @returns DimensionValue\n     */\n    __init(i: number, bb: flatbuffers.ByteBuffer): DimensionValue {\n      this.bb_pos = i;\n      this.bb = bb;\n      return this;\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param DimensionValue= obj\n     * @returns DimensionValue\n     */\n    static getRootAsDimensionValue(bb: flatbuffers.ByteBuffer, obj?: DimensionValue): DimensionValue {\n      return (obj || new DimensionValue()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param DimensionValue= obj\n     * @returns DimensionValue\n     */\n    static getSizePrefixedRootAsDimensionValue(bb: flatbuffers.ByteBuffer, obj?: DimensionValue): DimensionValue {\n      bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n      return (obj || new DimensionValue()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @returns onnxruntime.experimental.fbs.DimensionValueType\n     */\n    dimType(): onnxruntime.experimental.fbs.DimensionValueType {\n      let offset = this.bb!.__offset(this.bb_pos, 4);\n      return offset ? /**  */ (this.bb!.readInt8(this.bb_pos + offset)) :\n                      onnxruntime.experimental.fbs.DimensionValueType.UNKNOWN;\n    }\n\n    /**\n     * @returns flatbuffers.Long\n     */\n    dimValue(): flatbuffers.Long {\n      let offset = this.bb!.__offset(this.bb_pos, 6);\n      return offset ? this.bb!.readInt64(this.bb_pos + offset) : this.bb!.createLong(0, 0);\n    }\n\n    /**\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array|null\n     */\n    dimParam(): string|null;\n    dimParam(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\n    dimParam(optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 8);\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     */\n    static startDimensionValue(builder: flatbuffers.Builder) {\n      builder.startObject(3);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param onnxruntime.experimental.fbs.DimensionValueType dimType\n     */\n    static addDimType(builder: flatbuffers.Builder, dimType: onnxruntime.experimental.fbs.DimensionValueType) {\n      builder.addFieldInt8(0, dimType, onnxruntime.experimental.fbs.DimensionValueType.UNKNOWN);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Long dimValue\n     */\n    static addDimValue(builder: flatbuffers.Builder, dimValue: flatbuffers.Long) {\n      builder.addFieldInt64(1, dimValue, builder.createLong(0, 0));\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset dimParamOffset\n     */\n    static addDimParam(builder: flatbuffers.Builder, dimParamOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(2, dimParamOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @returns flatbuffers.Offset\n     */\n    static endDimensionValue(builder: flatbuffers.Builder): flatbuffers.Offset {\n      let offset = builder.endObject();\n      return offset;\n    }\n\n    static createDimensionValue(\n        builder: flatbuffers.Builder, dimType: onnxruntime.experimental.fbs.DimensionValueType,\n        dimValue: flatbuffers.Long, dimParamOffset: flatbuffers.Offset): flatbuffers.Offset {\n      DimensionValue.startDimensionValue(builder);\n      DimensionValue.addDimType(builder, dimType);\n      DimensionValue.addDimValue(builder, dimValue);\n      DimensionValue.addDimParam(builder, dimParamOffset);\n      return DimensionValue.endDimensionValue(builder);\n    }\n  }\n}\n/**\n * @constructor\n */\nexport namespace onnxruntime.experimental.fbs {\n  export class TensorTypeAndShape {\n    bb: flatbuffers.ByteBuffer|null = null;\n\n    bb_pos = 0;\n    /**\n     * @param number i\n     * @param flatbuffers.ByteBuffer bb\n     * @returns TensorTypeAndShape\n     */\n    __init(i: number, bb: flatbuffers.ByteBuffer): TensorTypeAndShape {\n      this.bb_pos = i;\n      this.bb = bb;\n      return this;\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param TensorTypeAndShape= obj\n     * @returns TensorTypeAndShape\n     */\n    static getRootAsTensorTypeAndShape(bb: flatbuffers.ByteBuffer, obj?: TensorTypeAndShape): TensorTypeAndShape {\n      return (obj || new TensorTypeAndShape()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param TensorTypeAndShape= obj\n     * @returns TensorTypeAndShape\n     */\n    static getSizePrefixedRootAsTensorTypeAndShape(bb: flatbuffers.ByteBuffer, obj?: TensorTypeAndShape):\n        TensorTypeAndShape {\n      bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n      return (obj || new TensorTypeAndShape()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @returns onnxruntime.experimental.fbs.TensorDataType\n     */\n    elemType(): onnxruntime.experimental.fbs.TensorDataType {\n      let offset = this.bb!.__offset(this.bb_pos, 4);\n      return offset ? /**  */ (this.bb!.readInt32(this.bb_pos + offset)) :\n                      onnxruntime.experimental.fbs.TensorDataType.UNDEFINED;\n    }\n\n    /**\n     * @param onnxruntime.experimental.fbs.Shape= obj\n     * @returns onnxruntime.experimental.fbs.Shape|null\n     */\n    shape(obj?: onnxruntime.experimental.fbs.Shape): onnxruntime.experimental.fbs.Shape|null {\n      let offset = this.bb!.__offset(this.bb_pos, 6);\n      return offset ? (obj || new onnxruntime.experimental.fbs.Shape())\n                          .__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) :\n                      null;\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     */\n    static startTensorTypeAndShape(builder: flatbuffers.Builder) {\n      builder.startObject(2);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param onnxruntime.experimental.fbs.TensorDataType elemType\n     */\n    static addElemType(builder: flatbuffers.Builder, elemType: onnxruntime.experimental.fbs.TensorDataType) {\n      builder.addFieldInt32(0, elemType, onnxruntime.experimental.fbs.TensorDataType.UNDEFINED);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset shapeOffset\n     */\n    static addShape(builder: flatbuffers.Builder, shapeOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(1, shapeOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @returns flatbuffers.Offset\n     */\n    static endTensorTypeAndShape(builder: flatbuffers.Builder): flatbuffers.Offset {\n      let offset = builder.endObject();\n      return offset;\n    }\n\n    static createTensorTypeAndShape(\n        builder: flatbuffers.Builder, elemType: onnxruntime.experimental.fbs.TensorDataType,\n        shapeOffset: flatbuffers.Offset): flatbuffers.Offset {\n      TensorTypeAndShape.startTensorTypeAndShape(builder);\n      TensorTypeAndShape.addElemType(builder, elemType);\n      TensorTypeAndShape.addShape(builder, shapeOffset);\n      return TensorTypeAndShape.endTensorTypeAndShape(builder);\n    }\n  }\n}\n/**\n * @constructor\n */\nexport namespace onnxruntime.experimental.fbs {\n  export class MapType {\n    bb: flatbuffers.ByteBuffer|null = null;\n\n    bb_pos = 0;\n    /**\n     * @param number i\n     * @param flatbuffers.ByteBuffer bb\n     * @returns MapType\n     */\n    __init(i: number, bb: flatbuffers.ByteBuffer): MapType {\n      this.bb_pos = i;\n      this.bb = bb;\n      return this;\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param MapType= obj\n     * @returns MapType\n     */\n    static getRootAsMapType(bb: flatbuffers.ByteBuffer, obj?: MapType): MapType {\n      return (obj || new MapType()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param MapType= obj\n     * @returns MapType\n     */\n    static getSizePrefixedRootAsMapType(bb: flatbuffers.ByteBuffer, obj?: MapType): MapType {\n      bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n      return (obj || new MapType()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @returns onnxruntime.experimental.fbs.TensorDataType\n     */\n    keyType(): onnxruntime.experimental.fbs.TensorDataType {\n      let offset = this.bb!.__offset(this.bb_pos, 4);\n      return offset ? /**  */ (this.bb!.readInt32(this.bb_pos + offset)) :\n                      onnxruntime.experimental.fbs.TensorDataType.UNDEFINED;\n    }\n\n    /**\n     * @param onnxruntime.experimental.fbs.TypeInfo= obj\n     * @returns onnxruntime.experimental.fbs.TypeInfo|null\n     */\n    valueType(obj?: onnxruntime.experimental.fbs.TypeInfo): onnxruntime.experimental.fbs.TypeInfo|null {\n      let offset = this.bb!.__offset(this.bb_pos, 6);\n      return offset ? (obj || new onnxruntime.experimental.fbs.TypeInfo())\n                          .__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) :\n                      null;\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     */\n    static startMapType(builder: flatbuffers.Builder) {\n      builder.startObject(2);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param onnxruntime.experimental.fbs.TensorDataType keyType\n     */\n    static addKeyType(builder: flatbuffers.Builder, keyType: onnxruntime.experimental.fbs.TensorDataType) {\n      builder.addFieldInt32(0, keyType, onnxruntime.experimental.fbs.TensorDataType.UNDEFINED);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset valueTypeOffset\n     */\n    static addValueType(builder: flatbuffers.Builder, valueTypeOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(1, valueTypeOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @returns flatbuffers.Offset\n     */\n    static endMapType(builder: flatbuffers.Builder): flatbuffers.Offset {\n      let offset = builder.endObject();\n      return offset;\n    }\n\n    static createMapType(\n        builder: flatbuffers.Builder, keyType: onnxruntime.experimental.fbs.TensorDataType,\n        valueTypeOffset: flatbuffers.Offset): flatbuffers.Offset {\n      MapType.startMapType(builder);\n      MapType.addKeyType(builder, keyType);\n      MapType.addValueType(builder, valueTypeOffset);\n      return MapType.endMapType(builder);\n    }\n  }\n}\n/**\n * @constructor\n */\nexport namespace onnxruntime.experimental.fbs {\n  export class SequenceType {\n    bb: flatbuffers.ByteBuffer|null = null;\n\n    bb_pos = 0;\n    /**\n     * @param number i\n     * @param flatbuffers.ByteBuffer bb\n     * @returns SequenceType\n     */\n    __init(i: number, bb: flatbuffers.ByteBuffer): SequenceType {\n      this.bb_pos = i;\n      this.bb = bb;\n      return this;\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param SequenceType= obj\n     * @returns SequenceType\n     */\n    static getRootAsSequenceType(bb: flatbuffers.ByteBuffer, obj?: SequenceType): SequenceType {\n      return (obj || new SequenceType()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param SequenceType= obj\n     * @returns SequenceType\n     */\n    static getSizePrefixedRootAsSequenceType(bb: flatbuffers.ByteBuffer, obj?: SequenceType): SequenceType {\n      bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n      return (obj || new SequenceType()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param onnxruntime.experimental.fbs.TypeInfo= obj\n     * @returns onnxruntime.experimental.fbs.TypeInfo|null\n     */\n    elemType(obj?: onnxruntime.experimental.fbs.TypeInfo): onnxruntime.experimental.fbs.TypeInfo|null {\n      let offset = this.bb!.__offset(this.bb_pos, 4);\n      return offset ? (obj || new onnxruntime.experimental.fbs.TypeInfo())\n                          .__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) :\n                      null;\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     */\n    static startSequenceType(builder: flatbuffers.Builder) {\n      builder.startObject(1);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset elemTypeOffset\n     */\n    static addElemType(builder: flatbuffers.Builder, elemTypeOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(0, elemTypeOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @returns flatbuffers.Offset\n     */\n    static endSequenceType(builder: flatbuffers.Builder): flatbuffers.Offset {\n      let offset = builder.endObject();\n      return offset;\n    }\n\n    static createSequenceType(builder: flatbuffers.Builder, elemTypeOffset: flatbuffers.Offset): flatbuffers.Offset {\n      SequenceType.startSequenceType(builder);\n      SequenceType.addElemType(builder, elemTypeOffset);\n      return SequenceType.endSequenceType(builder);\n    }\n  }\n}\n/**\n * @constructor\n */\nexport namespace onnxruntime.experimental.fbs {\n  export class EdgeEnd {\n    bb: flatbuffers.ByteBuffer|null = null;\n\n    bb_pos = 0;\n    /**\n     * @param number i\n     * @param flatbuffers.ByteBuffer bb\n     * @returns EdgeEnd\n     */\n    __init(i: number, bb: flatbuffers.ByteBuffer): EdgeEnd {\n      this.bb_pos = i;\n      this.bb = bb;\n      return this;\n    }\n\n    /**\n     * @returns number\n     */\n    nodeIndex(): number {\n      return this.bb!.readUint32(this.bb_pos);\n    }\n\n    /**\n     * @returns number\n     */\n    srcArgIndex(): number {\n      return this.bb!.readInt32(this.bb_pos + 4);\n    }\n\n    /**\n     * @returns number\n     */\n    dstArgIndex(): number {\n      return this.bb!.readInt32(this.bb_pos + 8);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number node_index\n     * @param number src_arg_index\n     * @param number dst_arg_index\n     * @returns flatbuffers.Offset\n     */\n    static createEdgeEnd(\n        builder: flatbuffers.Builder, node_index: number, src_arg_index: number,\n        dst_arg_index: number): flatbuffers.Offset {\n      builder.prep(4, 12);\n      builder.writeInt32(dst_arg_index);\n      builder.writeInt32(src_arg_index);\n      builder.writeInt32(node_index);\n      return builder.offset();\n    }\n  }\n}\n/**\n * @constructor\n */\nexport namespace onnxruntime.experimental.fbs {\n  export class NodeEdge {\n    bb: flatbuffers.ByteBuffer|null = null;\n\n    bb_pos = 0;\n    /**\n     * @param number i\n     * @param flatbuffers.ByteBuffer bb\n     * @returns NodeEdge\n     */\n    __init(i: number, bb: flatbuffers.ByteBuffer): NodeEdge {\n      this.bb_pos = i;\n      this.bb = bb;\n      return this;\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param NodeEdge= obj\n     * @returns NodeEdge\n     */\n    static getRootAsNodeEdge(bb: flatbuffers.ByteBuffer, obj?: NodeEdge): NodeEdge {\n      return (obj || new NodeEdge()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param NodeEdge= obj\n     * @returns NodeEdge\n     */\n    static getSizePrefixedRootAsNodeEdge(bb: flatbuffers.ByteBuffer, obj?: NodeEdge): NodeEdge {\n      bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n      return (obj || new NodeEdge()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @returns number\n     */\n    nodeIndex(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 4);\n      return offset ? this.bb!.readUint32(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @param number index\n     * @param onnxruntime.experimental.fbs.EdgeEnd= obj\n     * @returns onnxruntime.experimental.fbs.EdgeEnd\n     */\n    inputEdges(index: number, obj?: onnxruntime.experimental.fbs.EdgeEnd): onnxruntime.experimental.fbs.EdgeEnd|null {\n      let offset = this.bb!.__offset(this.bb_pos, 6);\n      return offset ? (obj || new onnxruntime.experimental.fbs.EdgeEnd())\n                          .__init(this.bb!.__vector(this.bb_pos + offset) + index * 12, this.bb!) :\n                      null;\n    }\n\n    /**\n     * @returns number\n     */\n    inputEdgesLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 6);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @param number index\n     * @param onnxruntime.experimental.fbs.EdgeEnd= obj\n     * @returns onnxruntime.experimental.fbs.EdgeEnd\n     */\n    outputEdges(index: number, obj?: onnxruntime.experimental.fbs.EdgeEnd): onnxruntime.experimental.fbs.EdgeEnd|null {\n      let offset = this.bb!.__offset(this.bb_pos, 8);\n      return offset ? (obj || new onnxruntime.experimental.fbs.EdgeEnd())\n                          .__init(this.bb!.__vector(this.bb_pos + offset) + index * 12, this.bb!) :\n                      null;\n    }\n\n    /**\n     * @returns number\n     */\n    outputEdgesLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 8);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     */\n    static startNodeEdge(builder: flatbuffers.Builder) {\n      builder.startObject(3);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number nodeIndex\n     */\n    static addNodeIndex(builder: flatbuffers.Builder, nodeIndex: number) {\n      builder.addFieldInt32(0, nodeIndex, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset inputEdgesOffset\n     */\n    static addInputEdges(builder: flatbuffers.Builder, inputEdgesOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(1, inputEdgesOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startInputEdgesVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(12, numElems, 4);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset outputEdgesOffset\n     */\n    static addOutputEdges(builder: flatbuffers.Builder, outputEdgesOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(2, outputEdgesOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startOutputEdgesVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(12, numElems, 4);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @returns flatbuffers.Offset\n     */\n    static endNodeEdge(builder: flatbuffers.Builder): flatbuffers.Offset {\n      let offset = builder.endObject();\n      return offset;\n    }\n\n    static createNodeEdge(\n        builder: flatbuffers.Builder, nodeIndex: number, inputEdgesOffset: flatbuffers.Offset,\n        outputEdgesOffset: flatbuffers.Offset): flatbuffers.Offset {\n      NodeEdge.startNodeEdge(builder);\n      NodeEdge.addNodeIndex(builder, nodeIndex);\n      NodeEdge.addInputEdges(builder, inputEdgesOffset);\n      NodeEdge.addOutputEdges(builder, outputEdgesOffset);\n      return NodeEdge.endNodeEdge(builder);\n    }\n  }\n}\n/**\n * @constructor\n */\nexport namespace onnxruntime.experimental.fbs {\n  export class Node {\n    bb: flatbuffers.ByteBuffer|null = null;\n\n    bb_pos = 0;\n    /**\n     * @param number i\n     * @param flatbuffers.ByteBuffer bb\n     * @returns Node\n     */\n    __init(i: number, bb: flatbuffers.ByteBuffer): Node {\n      this.bb_pos = i;\n      this.bb = bb;\n      return this;\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param Node= obj\n     * @returns Node\n     */\n    static getRootAsNode(bb: flatbuffers.ByteBuffer, obj?: Node): Node {\n      return (obj || new Node()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param Node= obj\n     * @returns Node\n     */\n    static getSizePrefixedRootAsNode(bb: flatbuffers.ByteBuffer, obj?: Node): Node {\n      bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n      return (obj || new Node()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array|null\n     */\n    name(): string|null;\n    name(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\n    name(optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 4);\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n    }\n\n    /**\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array|null\n     */\n    docString(): string|null;\n    docString(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\n    docString(optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 6);\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n    }\n\n    /**\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array|null\n     */\n    domain(): string|null;\n    domain(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\n    domain(optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 8);\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n    }\n\n    /**\n     * @returns number\n     */\n    sinceVersion(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 10);\n      return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @returns number\n     */\n    index(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 12);\n      return offset ? this.bb!.readUint32(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array|null\n     */\n    opType(): string|null;\n    opType(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\n    opType(optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 14);\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n    }\n\n    /**\n     * @returns onnxruntime.experimental.fbs.NodeType\n     */\n    type(): onnxruntime.experimental.fbs.NodeType {\n      let offset = this.bb!.__offset(this.bb_pos, 16);\n      return offset ? /**  */ (this.bb!.readInt32(this.bb_pos + offset)) :\n                      onnxruntime.experimental.fbs.NodeType.Primitive;\n    }\n\n    /**\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array|null\n     */\n    executionProviderType(): string|null;\n    executionProviderType(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\n    executionProviderType(optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 18);\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n    }\n\n    /**\n     * @param number index\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array\n     */\n    inputs(index: number): string;\n    inputs(index: number, optionalEncoding: flatbuffers.Encoding): string|Uint8Array;\n    inputs(index: number, optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 20);\n      return offset ? this.bb!.__string(this.bb!.__vector(this.bb_pos + offset) + index * 4, optionalEncoding) : null;\n    }\n\n    /**\n     * @returns number\n     */\n    inputsLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 20);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @param number index\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array\n     */\n    outputs(index: number): string;\n    outputs(index: number, optionalEncoding: flatbuffers.Encoding): string|Uint8Array;\n    outputs(index: number, optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 22);\n      return offset ? this.bb!.__string(this.bb!.__vector(this.bb_pos + offset) + index * 4, optionalEncoding) : null;\n    }\n\n    /**\n     * @returns number\n     */\n    outputsLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 22);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @param number index\n     * @param onnxruntime.experimental.fbs.Attribute= obj\n     * @returns onnxruntime.experimental.fbs.Attribute\n     */\n    attributes(index: number, obj?: onnxruntime.experimental.fbs.Attribute): onnxruntime.experimental.fbs.Attribute\n        |null {\n      let offset = this.bb!.__offset(this.bb_pos, 24);\n      return offset ? (obj || new onnxruntime.experimental.fbs.Attribute())\n                          .__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) :\n                      null;\n    }\n\n    /**\n     * @returns number\n     */\n    attributesLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 24);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @param number index\n     * @returns number\n     */\n    inputArgCounts(index: number): number|null {\n      let offset = this.bb!.__offset(this.bb_pos, 26);\n      return offset ? this.bb!.readInt32(this.bb!.__vector(this.bb_pos + offset) + index * 4) : 0;\n    }\n\n    /**\n     * @returns number\n     */\n    inputArgCountsLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 26);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @returns Int32Array\n     */\n    inputArgCountsArray(): Int32Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 26);\n      return offset ?\n          new Int32Array(\n              this.bb!.bytes().buffer, this.bb!.bytes().byteOffset + this.bb!.__vector(this.bb_pos + offset),\n              this.bb!.__vector_len(this.bb_pos + offset)) :\n          null;\n    }\n\n    /**\n     * @param number index\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array\n     */\n    implicitInputs(index: number): string;\n    implicitInputs(index: number, optionalEncoding: flatbuffers.Encoding): string|Uint8Array;\n    implicitInputs(index: number, optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 28);\n      return offset ? this.bb!.__string(this.bb!.__vector(this.bb_pos + offset) + index * 4, optionalEncoding) : null;\n    }\n\n    /**\n     * @returns number\n     */\n    implicitInputsLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 28);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     */\n    static startNode(builder: flatbuffers.Builder) {\n      builder.startObject(13);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset nameOffset\n     */\n    static addName(builder: flatbuffers.Builder, nameOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(0, nameOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset docStringOffset\n     */\n    static addDocString(builder: flatbuffers.Builder, docStringOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(1, docStringOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset domainOffset\n     */\n    static addDomain(builder: flatbuffers.Builder, domainOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(2, domainOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number sinceVersion\n     */\n    static addSinceVersion(builder: flatbuffers.Builder, sinceVersion: number) {\n      builder.addFieldInt32(3, sinceVersion, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number index\n     */\n    static addIndex(builder: flatbuffers.Builder, index: number) {\n      builder.addFieldInt32(4, index, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset opTypeOffset\n     */\n    static addOpType(builder: flatbuffers.Builder, opTypeOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(5, opTypeOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param onnxruntime.experimental.fbs.NodeType type\n     */\n    static addType(builder: flatbuffers.Builder, type: onnxruntime.experimental.fbs.NodeType) {\n      builder.addFieldInt32(6, type, onnxruntime.experimental.fbs.NodeType.Primitive);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset executionProviderTypeOffset\n     */\n    static addExecutionProviderType(builder: flatbuffers.Builder, executionProviderTypeOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(7, executionProviderTypeOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset inputsOffset\n     */\n    static addInputs(builder: flatbuffers.Builder, inputsOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(8, inputsOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param Array.<flatbuffers.Offset> data\n     * @returns flatbuffers.Offset\n     */\n    static createInputsVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]): flatbuffers.Offset {\n      builder.startVector(4, data.length, 4);\n      for (let i = data.length - 1; i >= 0; i--) {\n        builder.addOffset(data[i]);\n      }\n      return builder.endVector();\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startInputsVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(4, numElems, 4);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset outputsOffset\n     */\n    static addOutputs(builder: flatbuffers.Builder, outputsOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(9, outputsOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param Array.<flatbuffers.Offset> data\n     * @returns flatbuffers.Offset\n     */\n    static createOutputsVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]): flatbuffers.Offset {\n      builder.startVector(4, data.length, 4);\n      for (let i = data.length - 1; i >= 0; i--) {\n        builder.addOffset(data[i]);\n      }\n      return builder.endVector();\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startOutputsVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(4, numElems, 4);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset attributesOffset\n     */\n    static addAttributes(builder: flatbuffers.Builder, attributesOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(10, attributesOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param Array.<flatbuffers.Offset> data\n     * @returns flatbuffers.Offset\n     */\n    static createAttributesVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]): flatbuffers.Offset {\n      builder.startVector(4, data.length, 4);\n      for (let i = data.length - 1; i >= 0; i--) {\n        builder.addOffset(data[i]);\n      }\n      return builder.endVector();\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startAttributesVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(4, numElems, 4);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset inputArgCountsOffset\n     */\n    static addInputArgCounts(builder: flatbuffers.Builder, inputArgCountsOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(11, inputArgCountsOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param Array.<number> data\n     * @returns flatbuffers.Offset\n     */\n    static createInputArgCountsVector(builder: flatbuffers.Builder, data: number[]|Uint8Array): flatbuffers.Offset {\n      builder.startVector(4, data.length, 4);\n      for (let i = data.length - 1; i >= 0; i--) {\n        builder.addInt32(data[i]);\n      }\n      return builder.endVector();\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startInputArgCountsVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(4, numElems, 4);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset implicitInputsOffset\n     */\n    static addImplicitInputs(builder: flatbuffers.Builder, implicitInputsOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(12, implicitInputsOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param Array.<flatbuffers.Offset> data\n     * @returns flatbuffers.Offset\n     */\n    static createImplicitInputsVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]): flatbuffers.Offset {\n      builder.startVector(4, data.length, 4);\n      for (let i = data.length - 1; i >= 0; i--) {\n        builder.addOffset(data[i]);\n      }\n      return builder.endVector();\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startImplicitInputsVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(4, numElems, 4);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @returns flatbuffers.Offset\n     */\n    static endNode(builder: flatbuffers.Builder): flatbuffers.Offset {\n      let offset = builder.endObject();\n      return offset;\n    }\n\n    static createNode(\n        builder: flatbuffers.Builder, nameOffset: flatbuffers.Offset, docStringOffset: flatbuffers.Offset,\n        domainOffset: flatbuffers.Offset, sinceVersion: number, index: number, opTypeOffset: flatbuffers.Offset,\n        type: onnxruntime.experimental.fbs.NodeType, executionProviderTypeOffset: flatbuffers.Offset,\n        inputsOffset: flatbuffers.Offset, outputsOffset: flatbuffers.Offset, attributesOffset: flatbuffers.Offset,\n        inputArgCountsOffset: flatbuffers.Offset, implicitInputsOffset: flatbuffers.Offset): flatbuffers.Offset {\n      Node.startNode(builder);\n      Node.addName(builder, nameOffset);\n      Node.addDocString(builder, docStringOffset);\n      Node.addDomain(builder, domainOffset);\n      Node.addSinceVersion(builder, sinceVersion);\n      Node.addIndex(builder, index);\n      Node.addOpType(builder, opTypeOffset);\n      Node.addType(builder, type);\n      Node.addExecutionProviderType(builder, executionProviderTypeOffset);\n      Node.addInputs(builder, inputsOffset);\n      Node.addOutputs(builder, outputsOffset);\n      Node.addAttributes(builder, attributesOffset);\n      Node.addInputArgCounts(builder, inputArgCountsOffset);\n      Node.addImplicitInputs(builder, implicitInputsOffset);\n      return Node.endNode(builder);\n    }\n  }\n}\n/**\n * @constructor\n */\nexport namespace onnxruntime.experimental.fbs {\n  export class ValueInfo {\n    bb: flatbuffers.ByteBuffer|null = null;\n\n    bb_pos = 0;\n    /**\n     * @param number i\n     * @param flatbuffers.ByteBuffer bb\n     * @returns ValueInfo\n     */\n    __init(i: number, bb: flatbuffers.ByteBuffer): ValueInfo {\n      this.bb_pos = i;\n      this.bb = bb;\n      return this;\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param ValueInfo= obj\n     * @returns ValueInfo\n     */\n    static getRootAsValueInfo(bb: flatbuffers.ByteBuffer, obj?: ValueInfo): ValueInfo {\n      return (obj || new ValueInfo()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param ValueInfo= obj\n     * @returns ValueInfo\n     */\n    static getSizePrefixedRootAsValueInfo(bb: flatbuffers.ByteBuffer, obj?: ValueInfo): ValueInfo {\n      bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n      return (obj || new ValueInfo()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array|null\n     */\n    name(): string|null;\n    name(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\n    name(optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 4);\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n    }\n\n    /**\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array|null\n     */\n    docString(): string|null;\n    docString(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\n    docString(optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 6);\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n    }\n\n    /**\n     * @param onnxruntime.experimental.fbs.TypeInfo= obj\n     * @returns onnxruntime.experimental.fbs.TypeInfo|null\n     */\n    type(obj?: onnxruntime.experimental.fbs.TypeInfo): onnxruntime.experimental.fbs.TypeInfo|null {\n      let offset = this.bb!.__offset(this.bb_pos, 8);\n      return offset ? (obj || new onnxruntime.experimental.fbs.TypeInfo())\n                          .__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) :\n                      null;\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     */\n    static startValueInfo(builder: flatbuffers.Builder) {\n      builder.startObject(3);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset nameOffset\n     */\n    static addName(builder: flatbuffers.Builder, nameOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(0, nameOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset docStringOffset\n     */\n    static addDocString(builder: flatbuffers.Builder, docStringOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(1, docStringOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset typeOffset\n     */\n    static addType(builder: flatbuffers.Builder, typeOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(2, typeOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @returns flatbuffers.Offset\n     */\n    static endValueInfo(builder: flatbuffers.Builder): flatbuffers.Offset {\n      let offset = builder.endObject();\n      return offset;\n    }\n\n    static createValueInfo(\n        builder: flatbuffers.Builder, nameOffset: flatbuffers.Offset, docStringOffset: flatbuffers.Offset,\n        typeOffset: flatbuffers.Offset): flatbuffers.Offset {\n      ValueInfo.startValueInfo(builder);\n      ValueInfo.addName(builder, nameOffset);\n      ValueInfo.addDocString(builder, docStringOffset);\n      ValueInfo.addType(builder, typeOffset);\n      return ValueInfo.endValueInfo(builder);\n    }\n  }\n}\n/**\n * @constructor\n */\nexport namespace onnxruntime.experimental.fbs {\n  export class TypeInfo {\n    bb: flatbuffers.ByteBuffer|null = null;\n\n    bb_pos = 0;\n    /**\n     * @param number i\n     * @param flatbuffers.ByteBuffer bb\n     * @returns TypeInfo\n     */\n    __init(i: number, bb: flatbuffers.ByteBuffer): TypeInfo {\n      this.bb_pos = i;\n      this.bb = bb;\n      return this;\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param TypeInfo= obj\n     * @returns TypeInfo\n     */\n    static getRootAsTypeInfo(bb: flatbuffers.ByteBuffer, obj?: TypeInfo): TypeInfo {\n      return (obj || new TypeInfo()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param TypeInfo= obj\n     * @returns TypeInfo\n     */\n    static getSizePrefixedRootAsTypeInfo(bb: flatbuffers.ByteBuffer, obj?: TypeInfo): TypeInfo {\n      bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n      return (obj || new TypeInfo()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array|null\n     */\n    denotation(): string|null;\n    denotation(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\n    denotation(optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 4);\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n    }\n\n    /**\n     * @returns onnxruntime.experimental.fbs.TypeInfoValue\n     */\n    valueType(): onnxruntime.experimental.fbs.TypeInfoValue {\n      let offset = this.bb!.__offset(this.bb_pos, 6);\n      return offset ? /**  */ (this.bb!.readUint8(this.bb_pos + offset)) :\n                      onnxruntime.experimental.fbs.TypeInfoValue.NONE;\n    }\n\n    /**\n     * @param flatbuffers.Table obj\n     * @returns ?flatbuffers.Table\n     */\n    value<T extends flatbuffers.Table>(obj: T): T|null {\n      let offset = this.bb!.__offset(this.bb_pos, 8);\n      return offset ? this.bb!.__union(obj, this.bb_pos + offset) : null;\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     */\n    static startTypeInfo(builder: flatbuffers.Builder) {\n      builder.startObject(3);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset denotationOffset\n     */\n    static addDenotation(builder: flatbuffers.Builder, denotationOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(0, denotationOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param onnxruntime.experimental.fbs.TypeInfoValue valueType\n     */\n    static addValueType(builder: flatbuffers.Builder, valueType: onnxruntime.experimental.fbs.TypeInfoValue) {\n      builder.addFieldInt8(1, valueType, onnxruntime.experimental.fbs.TypeInfoValue.NONE);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset valueOffset\n     */\n    static addValue(builder: flatbuffers.Builder, valueOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(2, valueOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @returns flatbuffers.Offset\n     */\n    static endTypeInfo(builder: flatbuffers.Builder): flatbuffers.Offset {\n      let offset = builder.endObject();\n      return offset;\n    }\n\n    static createTypeInfo(\n        builder: flatbuffers.Builder, denotationOffset: flatbuffers.Offset,\n        valueType: onnxruntime.experimental.fbs.TypeInfoValue, valueOffset: flatbuffers.Offset): flatbuffers.Offset {\n      TypeInfo.startTypeInfo(builder);\n      TypeInfo.addDenotation(builder, denotationOffset);\n      TypeInfo.addValueType(builder, valueType);\n      TypeInfo.addValue(builder, valueOffset);\n      return TypeInfo.endTypeInfo(builder);\n    }\n  }\n}\n/**\n * @constructor\n */\nexport namespace onnxruntime.experimental.fbs {\n  export class OperatorSetId {\n    bb: flatbuffers.ByteBuffer|null = null;\n\n    bb_pos = 0;\n    /**\n     * @param number i\n     * @param flatbuffers.ByteBuffer bb\n     * @returns OperatorSetId\n     */\n    __init(i: number, bb: flatbuffers.ByteBuffer): OperatorSetId {\n      this.bb_pos = i;\n      this.bb = bb;\n      return this;\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param OperatorSetId= obj\n     * @returns OperatorSetId\n     */\n    static getRootAsOperatorSetId(bb: flatbuffers.ByteBuffer, obj?: OperatorSetId): OperatorSetId {\n      return (obj || new OperatorSetId()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param OperatorSetId= obj\n     * @returns OperatorSetId\n     */\n    static getSizePrefixedRootAsOperatorSetId(bb: flatbuffers.ByteBuffer, obj?: OperatorSetId): OperatorSetId {\n      bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n      return (obj || new OperatorSetId()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array|null\n     */\n    domain(): string|null;\n    domain(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\n    domain(optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 4);\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n    }\n\n    /**\n     * @returns flatbuffers.Long\n     */\n    version(): flatbuffers.Long {\n      let offset = this.bb!.__offset(this.bb_pos, 6);\n      return offset ? this.bb!.readInt64(this.bb_pos + offset) : this.bb!.createLong(0, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     */\n    static startOperatorSetId(builder: flatbuffers.Builder) {\n      builder.startObject(2);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset domainOffset\n     */\n    static addDomain(builder: flatbuffers.Builder, domainOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(0, domainOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Long version\n     */\n    static addVersion(builder: flatbuffers.Builder, version: flatbuffers.Long) {\n      builder.addFieldInt64(1, version, builder.createLong(0, 0));\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @returns flatbuffers.Offset\n     */\n    static endOperatorSetId(builder: flatbuffers.Builder): flatbuffers.Offset {\n      let offset = builder.endObject();\n      return offset;\n    }\n\n    static createOperatorSetId(\n        builder: flatbuffers.Builder, domainOffset: flatbuffers.Offset, version: flatbuffers.Long): flatbuffers.Offset {\n      OperatorSetId.startOperatorSetId(builder);\n      OperatorSetId.addDomain(builder, domainOffset);\n      OperatorSetId.addVersion(builder, version);\n      return OperatorSetId.endOperatorSetId(builder);\n    }\n  }\n}\n/**\n * @constructor\n */\nexport namespace onnxruntime.experimental.fbs {\n  export class Tensor {\n    bb: flatbuffers.ByteBuffer|null = null;\n\n    bb_pos = 0;\n    /**\n     * @param number i\n     * @param flatbuffers.ByteBuffer bb\n     * @returns Tensor\n     */\n    __init(i: number, bb: flatbuffers.ByteBuffer): Tensor {\n      this.bb_pos = i;\n      this.bb = bb;\n      return this;\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param Tensor= obj\n     * @returns Tensor\n     */\n    static getRootAsTensor(bb: flatbuffers.ByteBuffer, obj?: Tensor): Tensor {\n      return (obj || new Tensor()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param Tensor= obj\n     * @returns Tensor\n     */\n    static getSizePrefixedRootAsTensor(bb: flatbuffers.ByteBuffer, obj?: Tensor): Tensor {\n      bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n      return (obj || new Tensor()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array|null\n     */\n    name(): string|null;\n    name(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\n    name(optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 4);\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n    }\n\n    /**\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array|null\n     */\n    docString(): string|null;\n    docString(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\n    docString(optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 6);\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n    }\n\n    /**\n     * @param number index\n     * @returns flatbuffers.Long\n     */\n    dims(index: number): flatbuffers.Long|null {\n      let offset = this.bb!.__offset(this.bb_pos, 8);\n      return offset ? this.bb!.readInt64(this.bb!.__vector(this.bb_pos + offset) + index * 8) :\n                      this.bb!.createLong(0, 0);\n    }\n\n    /**\n     * @returns number\n     */\n    dimsLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 8);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @returns onnxruntime.experimental.fbs.TensorDataType\n     */\n    dataType(): onnxruntime.experimental.fbs.TensorDataType {\n      let offset = this.bb!.__offset(this.bb_pos, 10);\n      return offset ? /**  */ (this.bb!.readInt32(this.bb_pos + offset)) :\n                      onnxruntime.experimental.fbs.TensorDataType.UNDEFINED;\n    }\n\n    /**\n     * @param number index\n     * @returns number\n     */\n    rawData(index: number): number|null {\n      let offset = this.bb!.__offset(this.bb_pos, 12);\n      return offset ? this.bb!.readUint8(this.bb!.__vector(this.bb_pos + offset) + index) : 0;\n    }\n\n    /**\n     * @returns number\n     */\n    rawDataLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 12);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @returns Uint8Array\n     */\n    rawDataArray(): Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 12);\n      return offset ?\n          new Uint8Array(\n              this.bb!.bytes().buffer, this.bb!.bytes().byteOffset + this.bb!.__vector(this.bb_pos + offset),\n              this.bb!.__vector_len(this.bb_pos + offset)) :\n          null;\n    }\n\n    /**\n     * @param number index\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array\n     */\n    stringData(index: number): string;\n    stringData(index: number, optionalEncoding: flatbuffers.Encoding): string|Uint8Array;\n    stringData(index: number, optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 14);\n      return offset ? this.bb!.__string(this.bb!.__vector(this.bb_pos + offset) + index * 4, optionalEncoding) : null;\n    }\n\n    /**\n     * @returns number\n     */\n    stringDataLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 14);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     */\n    static startTensor(builder: flatbuffers.Builder) {\n      builder.startObject(6);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset nameOffset\n     */\n    static addName(builder: flatbuffers.Builder, nameOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(0, nameOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset docStringOffset\n     */\n    static addDocString(builder: flatbuffers.Builder, docStringOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(1, docStringOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset dimsOffset\n     */\n    static addDims(builder: flatbuffers.Builder, dimsOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(2, dimsOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param Array.<flatbuffers.Long> data\n     * @returns flatbuffers.Offset\n     */\n    static createDimsVector(builder: flatbuffers.Builder, data: flatbuffers.Long[]): flatbuffers.Offset {\n      builder.startVector(8, data.length, 8);\n      for (let i = data.length - 1; i >= 0; i--) {\n        builder.addInt64(data[i]);\n      }\n      return builder.endVector();\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startDimsVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(8, numElems, 8);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param onnxruntime.experimental.fbs.TensorDataType dataType\n     */\n    static addDataType(builder: flatbuffers.Builder, dataType: onnxruntime.experimental.fbs.TensorDataType) {\n      builder.addFieldInt32(3, dataType, onnxruntime.experimental.fbs.TensorDataType.UNDEFINED);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset rawDataOffset\n     */\n    static addRawData(builder: flatbuffers.Builder, rawDataOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(4, rawDataOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param Array.<number> data\n     * @returns flatbuffers.Offset\n     */\n    static createRawDataVector(builder: flatbuffers.Builder, data: number[]|Uint8Array): flatbuffers.Offset {\n      builder.startVector(1, data.length, 1);\n      for (let i = data.length - 1; i >= 0; i--) {\n        builder.addInt8(data[i]);\n      }\n      return builder.endVector();\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startRawDataVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(1, numElems, 1);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset stringDataOffset\n     */\n    static addStringData(builder: flatbuffers.Builder, stringDataOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(5, stringDataOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param Array.<flatbuffers.Offset> data\n     * @returns flatbuffers.Offset\n     */\n    static createStringDataVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]): flatbuffers.Offset {\n      builder.startVector(4, data.length, 4);\n      for (let i = data.length - 1; i >= 0; i--) {\n        builder.addOffset(data[i]);\n      }\n      return builder.endVector();\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startStringDataVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(4, numElems, 4);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @returns flatbuffers.Offset\n     */\n    static endTensor(builder: flatbuffers.Builder): flatbuffers.Offset {\n      let offset = builder.endObject();\n      return offset;\n    }\n\n    static createTensor(\n        builder: flatbuffers.Builder, nameOffset: flatbuffers.Offset, docStringOffset: flatbuffers.Offset,\n        dimsOffset: flatbuffers.Offset, dataType: onnxruntime.experimental.fbs.TensorDataType,\n        rawDataOffset: flatbuffers.Offset, stringDataOffset: flatbuffers.Offset): flatbuffers.Offset {\n      Tensor.startTensor(builder);\n      Tensor.addName(builder, nameOffset);\n      Tensor.addDocString(builder, docStringOffset);\n      Tensor.addDims(builder, dimsOffset);\n      Tensor.addDataType(builder, dataType);\n      Tensor.addRawData(builder, rawDataOffset);\n      Tensor.addStringData(builder, stringDataOffset);\n      return Tensor.endTensor(builder);\n    }\n  }\n}\n/**\n * @constructor\n */\nexport namespace onnxruntime.experimental.fbs {\n  export class SparseTensor {\n    bb: flatbuffers.ByteBuffer|null = null;\n\n    bb_pos = 0;\n    /**\n     * @param number i\n     * @param flatbuffers.ByteBuffer bb\n     * @returns SparseTensor\n     */\n    __init(i: number, bb: flatbuffers.ByteBuffer): SparseTensor {\n      this.bb_pos = i;\n      this.bb = bb;\n      return this;\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param SparseTensor= obj\n     * @returns SparseTensor\n     */\n    static getRootAsSparseTensor(bb: flatbuffers.ByteBuffer, obj?: SparseTensor): SparseTensor {\n      return (obj || new SparseTensor()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param SparseTensor= obj\n     * @returns SparseTensor\n     */\n    static getSizePrefixedRootAsSparseTensor(bb: flatbuffers.ByteBuffer, obj?: SparseTensor): SparseTensor {\n      bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n      return (obj || new SparseTensor()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param onnxruntime.experimental.fbs.Tensor= obj\n     * @returns onnxruntime.experimental.fbs.Tensor|null\n     */\n    values(obj?: onnxruntime.experimental.fbs.Tensor): onnxruntime.experimental.fbs.Tensor|null {\n      let offset = this.bb!.__offset(this.bb_pos, 4);\n      return offset ? (obj || new onnxruntime.experimental.fbs.Tensor())\n                          .__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) :\n                      null;\n    }\n\n    /**\n     * @param onnxruntime.experimental.fbs.Tensor= obj\n     * @returns onnxruntime.experimental.fbs.Tensor|null\n     */\n    indices(obj?: onnxruntime.experimental.fbs.Tensor): onnxruntime.experimental.fbs.Tensor|null {\n      let offset = this.bb!.__offset(this.bb_pos, 6);\n      return offset ? (obj || new onnxruntime.experimental.fbs.Tensor())\n                          .__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) :\n                      null;\n    }\n\n    /**\n     * @param number index\n     * @returns flatbuffers.Long\n     */\n    dims(index: number): flatbuffers.Long|null {\n      let offset = this.bb!.__offset(this.bb_pos, 8);\n      return offset ? this.bb!.readInt64(this.bb!.__vector(this.bb_pos + offset) + index * 8) :\n                      this.bb!.createLong(0, 0);\n    }\n\n    /**\n     * @returns number\n     */\n    dimsLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 8);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     */\n    static startSparseTensor(builder: flatbuffers.Builder) {\n      builder.startObject(3);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset valuesOffset\n     */\n    static addValues(builder: flatbuffers.Builder, valuesOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(0, valuesOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset indicesOffset\n     */\n    static addIndices(builder: flatbuffers.Builder, indicesOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(1, indicesOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset dimsOffset\n     */\n    static addDims(builder: flatbuffers.Builder, dimsOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(2, dimsOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param Array.<flatbuffers.Long> data\n     * @returns flatbuffers.Offset\n     */\n    static createDimsVector(builder: flatbuffers.Builder, data: flatbuffers.Long[]): flatbuffers.Offset {\n      builder.startVector(8, data.length, 8);\n      for (let i = data.length - 1; i >= 0; i--) {\n        builder.addInt64(data[i]);\n      }\n      return builder.endVector();\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startDimsVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(8, numElems, 8);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @returns flatbuffers.Offset\n     */\n    static endSparseTensor(builder: flatbuffers.Builder): flatbuffers.Offset {\n      let offset = builder.endObject();\n      return offset;\n    }\n\n    static createSparseTensor(\n        builder: flatbuffers.Builder, valuesOffset: flatbuffers.Offset, indicesOffset: flatbuffers.Offset,\n        dimsOffset: flatbuffers.Offset): flatbuffers.Offset {\n      SparseTensor.startSparseTensor(builder);\n      SparseTensor.addValues(builder, valuesOffset);\n      SparseTensor.addIndices(builder, indicesOffset);\n      SparseTensor.addDims(builder, dimsOffset);\n      return SparseTensor.endSparseTensor(builder);\n    }\n  }\n}\n/**\n * @constructor\n */\nexport namespace onnxruntime.experimental.fbs {\n  export class Attribute {\n    bb: flatbuffers.ByteBuffer|null = null;\n\n    bb_pos = 0;\n    /**\n     * @param number i\n     * @param flatbuffers.ByteBuffer bb\n     * @returns Attribute\n     */\n    __init(i: number, bb: flatbuffers.ByteBuffer): Attribute {\n      this.bb_pos = i;\n      this.bb = bb;\n      return this;\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param Attribute= obj\n     * @returns Attribute\n     */\n    static getRootAsAttribute(bb: flatbuffers.ByteBuffer, obj?: Attribute): Attribute {\n      return (obj || new Attribute()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param Attribute= obj\n     * @returns Attribute\n     */\n    static getSizePrefixedRootAsAttribute(bb: flatbuffers.ByteBuffer, obj?: Attribute): Attribute {\n      bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n      return (obj || new Attribute()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array|null\n     */\n    name(): string|null;\n    name(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\n    name(optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 4);\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n    }\n\n    /**\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array|null\n     */\n    docString(): string|null;\n    docString(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\n    docString(optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 6);\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n    }\n\n    /**\n     * @returns onnxruntime.experimental.fbs.AttributeType\n     */\n    type(): onnxruntime.experimental.fbs.AttributeType {\n      let offset = this.bb!.__offset(this.bb_pos, 8);\n      return offset ? /**  */ (this.bb!.readInt32(this.bb_pos + offset)) :\n                      onnxruntime.experimental.fbs.AttributeType.UNDEFINED;\n    }\n\n    /**\n     * @returns number\n     */\n    f(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 10);\n      return offset ? this.bb!.readFloat32(this.bb_pos + offset) : 0.0;\n    }\n\n    /**\n     * @returns flatbuffers.Long\n     */\n    i(): flatbuffers.Long {\n      let offset = this.bb!.__offset(this.bb_pos, 12);\n      return offset ? this.bb!.readInt64(this.bb_pos + offset) : this.bb!.createLong(0, 0);\n    }\n\n    /**\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array|null\n     */\n    s(): string|null;\n    s(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\n    s(optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 14);\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n    }\n\n    /**\n     * @param onnxruntime.experimental.fbs.Tensor= obj\n     * @returns onnxruntime.experimental.fbs.Tensor|null\n     */\n    t(obj?: onnxruntime.experimental.fbs.Tensor): onnxruntime.experimental.fbs.Tensor|null {\n      let offset = this.bb!.__offset(this.bb_pos, 16);\n      return offset ? (obj || new onnxruntime.experimental.fbs.Tensor())\n                          .__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) :\n                      null;\n    }\n\n    /**\n     * @param onnxruntime.experimental.fbs.Graph= obj\n     * @returns onnxruntime.experimental.fbs.Graph|null\n     */\n    g(obj?: onnxruntime.experimental.fbs.Graph): onnxruntime.experimental.fbs.Graph|null {\n      let offset = this.bb!.__offset(this.bb_pos, 18);\n      return offset ? (obj || new onnxruntime.experimental.fbs.Graph())\n                          .__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) :\n                      null;\n    }\n\n    /**\n     * @param number index\n     * @returns number\n     */\n    floats(index: number): number|null {\n      let offset = this.bb!.__offset(this.bb_pos, 20);\n      return offset ? this.bb!.readFloat32(this.bb!.__vector(this.bb_pos + offset) + index * 4) : 0;\n    }\n\n    /**\n     * @returns number\n     */\n    floatsLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 20);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @returns Float32Array\n     */\n    floatsArray(): Float32Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 20);\n      return offset ?\n          new Float32Array(\n              this.bb!.bytes().buffer, this.bb!.bytes().byteOffset + this.bb!.__vector(this.bb_pos + offset),\n              this.bb!.__vector_len(this.bb_pos + offset)) :\n          null;\n    }\n\n    /**\n     * @param number index\n     * @returns flatbuffers.Long\n     */\n    ints(index: number): flatbuffers.Long|null {\n      let offset = this.bb!.__offset(this.bb_pos, 22);\n      return offset ? this.bb!.readInt64(this.bb!.__vector(this.bb_pos + offset) + index * 8) :\n                      this.bb!.createLong(0, 0);\n    }\n\n    /**\n     * @returns number\n     */\n    intsLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 22);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @param number index\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array\n     */\n    strings(index: number): string;\n    strings(index: number, optionalEncoding: flatbuffers.Encoding): string|Uint8Array;\n    strings(index: number, optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 24);\n      return offset ? this.bb!.__string(this.bb!.__vector(this.bb_pos + offset) + index * 4, optionalEncoding) : null;\n    }\n\n    /**\n     * @returns number\n     */\n    stringsLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 24);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @param number index\n     * @param onnxruntime.experimental.fbs.Tensor= obj\n     * @returns onnxruntime.experimental.fbs.Tensor\n     */\n    tensors(index: number, obj?: onnxruntime.experimental.fbs.Tensor): onnxruntime.experimental.fbs.Tensor|null {\n      let offset = this.bb!.__offset(this.bb_pos, 26);\n      return offset ? (obj || new onnxruntime.experimental.fbs.Tensor())\n                          .__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) :\n                      null;\n    }\n\n    /**\n     * @returns number\n     */\n    tensorsLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 26);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @param number index\n     * @param onnxruntime.experimental.fbs.Graph= obj\n     * @returns onnxruntime.experimental.fbs.Graph\n     */\n    graphs(index: number, obj?: onnxruntime.experimental.fbs.Graph): onnxruntime.experimental.fbs.Graph|null {\n      let offset = this.bb!.__offset(this.bb_pos, 28);\n      return offset ? (obj || new onnxruntime.experimental.fbs.Graph())\n                          .__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) :\n                      null;\n    }\n\n    /**\n     * @returns number\n     */\n    graphsLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 28);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     */\n    static startAttribute(builder: flatbuffers.Builder) {\n      builder.startObject(13);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset nameOffset\n     */\n    static addName(builder: flatbuffers.Builder, nameOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(0, nameOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset docStringOffset\n     */\n    static addDocString(builder: flatbuffers.Builder, docStringOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(1, docStringOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param onnxruntime.experimental.fbs.AttributeType type\n     */\n    static addType(builder: flatbuffers.Builder, type: onnxruntime.experimental.fbs.AttributeType) {\n      builder.addFieldInt32(2, type, onnxruntime.experimental.fbs.AttributeType.UNDEFINED);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number f\n     */\n    static addF(builder: flatbuffers.Builder, f: number) {\n      builder.addFieldFloat32(3, f, 0.0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Long i\n     */\n    static addI(builder: flatbuffers.Builder, i: flatbuffers.Long) {\n      builder.addFieldInt64(4, i, builder.createLong(0, 0));\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset sOffset\n     */\n    static addS(builder: flatbuffers.Builder, sOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(5, sOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset tOffset\n     */\n    static addT(builder: flatbuffers.Builder, tOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(6, tOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset gOffset\n     */\n    static addG(builder: flatbuffers.Builder, gOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(7, gOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset floatsOffset\n     */\n    static addFloats(builder: flatbuffers.Builder, floatsOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(8, floatsOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param Array.<number> data\n     * @returns flatbuffers.Offset\n     */\n    static createFloatsVector(builder: flatbuffers.Builder, data: number[]|Uint8Array): flatbuffers.Offset {\n      builder.startVector(4, data.length, 4);\n      for (let i = data.length - 1; i >= 0; i--) {\n        builder.addFloat32(data[i]);\n      }\n      return builder.endVector();\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startFloatsVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(4, numElems, 4);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset intsOffset\n     */\n    static addInts(builder: flatbuffers.Builder, intsOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(9, intsOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param Array.<flatbuffers.Long> data\n     * @returns flatbuffers.Offset\n     */\n    static createIntsVector(builder: flatbuffers.Builder, data: flatbuffers.Long[]): flatbuffers.Offset {\n      builder.startVector(8, data.length, 8);\n      for (let i = data.length - 1; i >= 0; i--) {\n        builder.addInt64(data[i]);\n      }\n      return builder.endVector();\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startIntsVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(8, numElems, 8);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset stringsOffset\n     */\n    static addStrings(builder: flatbuffers.Builder, stringsOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(10, stringsOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param Array.<flatbuffers.Offset> data\n     * @returns flatbuffers.Offset\n     */\n    static createStringsVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]): flatbuffers.Offset {\n      builder.startVector(4, data.length, 4);\n      for (let i = data.length - 1; i >= 0; i--) {\n        builder.addOffset(data[i]);\n      }\n      return builder.endVector();\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startStringsVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(4, numElems, 4);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset tensorsOffset\n     */\n    static addTensors(builder: flatbuffers.Builder, tensorsOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(11, tensorsOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param Array.<flatbuffers.Offset> data\n     * @returns flatbuffers.Offset\n     */\n    static createTensorsVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]): flatbuffers.Offset {\n      builder.startVector(4, data.length, 4);\n      for (let i = data.length - 1; i >= 0; i--) {\n        builder.addOffset(data[i]);\n      }\n      return builder.endVector();\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startTensorsVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(4, numElems, 4);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset graphsOffset\n     */\n    static addGraphs(builder: flatbuffers.Builder, graphsOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(12, graphsOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param Array.<flatbuffers.Offset> data\n     * @returns flatbuffers.Offset\n     */\n    static createGraphsVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]): flatbuffers.Offset {\n      builder.startVector(4, data.length, 4);\n      for (let i = data.length - 1; i >= 0; i--) {\n        builder.addOffset(data[i]);\n      }\n      return builder.endVector();\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startGraphsVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(4, numElems, 4);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @returns flatbuffers.Offset\n     */\n    static endAttribute(builder: flatbuffers.Builder): flatbuffers.Offset {\n      let offset = builder.endObject();\n      return offset;\n    }\n\n    static createAttribute(\n        builder: flatbuffers.Builder, nameOffset: flatbuffers.Offset, docStringOffset: flatbuffers.Offset,\n        type: onnxruntime.experimental.fbs.AttributeType, f: number, i: flatbuffers.Long, sOffset: flatbuffers.Offset,\n        tOffset: flatbuffers.Offset, gOffset: flatbuffers.Offset, floatsOffset: flatbuffers.Offset,\n        intsOffset: flatbuffers.Offset, stringsOffset: flatbuffers.Offset, tensorsOffset: flatbuffers.Offset,\n        graphsOffset: flatbuffers.Offset): flatbuffers.Offset {\n      Attribute.startAttribute(builder);\n      Attribute.addName(builder, nameOffset);\n      Attribute.addDocString(builder, docStringOffset);\n      Attribute.addType(builder, type);\n      Attribute.addF(builder, f);\n      Attribute.addI(builder, i);\n      Attribute.addS(builder, sOffset);\n      Attribute.addT(builder, tOffset);\n      Attribute.addG(builder, gOffset);\n      Attribute.addFloats(builder, floatsOffset);\n      Attribute.addInts(builder, intsOffset);\n      Attribute.addStrings(builder, stringsOffset);\n      Attribute.addTensors(builder, tensorsOffset);\n      Attribute.addGraphs(builder, graphsOffset);\n      return Attribute.endAttribute(builder);\n    }\n  }\n}\n/**\n * @constructor\n */\nexport namespace onnxruntime.experimental.fbs {\n  export class Graph {\n    bb: flatbuffers.ByteBuffer|null = null;\n\n    bb_pos = 0;\n    /**\n     * @param number i\n     * @param flatbuffers.ByteBuffer bb\n     * @returns Graph\n     */\n    __init(i: number, bb: flatbuffers.ByteBuffer): Graph {\n      this.bb_pos = i;\n      this.bb = bb;\n      return this;\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param Graph= obj\n     * @returns Graph\n     */\n    static getRootAsGraph(bb: flatbuffers.ByteBuffer, obj?: Graph): Graph {\n      return (obj || new Graph()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param Graph= obj\n     * @returns Graph\n     */\n    static getSizePrefixedRootAsGraph(bb: flatbuffers.ByteBuffer, obj?: Graph): Graph {\n      bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n      return (obj || new Graph()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param number index\n     * @param onnxruntime.experimental.fbs.Tensor= obj\n     * @returns onnxruntime.experimental.fbs.Tensor\n     */\n    initializers(index: number, obj?: onnxruntime.experimental.fbs.Tensor): onnxruntime.experimental.fbs.Tensor|null {\n      let offset = this.bb!.__offset(this.bb_pos, 4);\n      return offset ? (obj || new onnxruntime.experimental.fbs.Tensor())\n                          .__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) :\n                      null;\n    }\n\n    /**\n     * @returns number\n     */\n    initializersLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 4);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @param number index\n     * @param onnxruntime.experimental.fbs.ValueInfo= obj\n     * @returns onnxruntime.experimental.fbs.ValueInfo\n     */\n    nodeArgs(index: number, obj?: onnxruntime.experimental.fbs.ValueInfo): onnxruntime.experimental.fbs.ValueInfo|null {\n      let offset = this.bb!.__offset(this.bb_pos, 6);\n      return offset ? (obj || new onnxruntime.experimental.fbs.ValueInfo())\n                          .__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) :\n                      null;\n    }\n\n    /**\n     * @returns number\n     */\n    nodeArgsLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 6);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @param number index\n     * @param onnxruntime.experimental.fbs.Node= obj\n     * @returns onnxruntime.experimental.fbs.Node\n     */\n    nodes(index: number, obj?: onnxruntime.experimental.fbs.Node): onnxruntime.experimental.fbs.Node|null {\n      let offset = this.bb!.__offset(this.bb_pos, 8);\n      return offset ? (obj || new onnxruntime.experimental.fbs.Node())\n                          .__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) :\n                      null;\n    }\n\n    /**\n     * @returns number\n     */\n    nodesLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 8);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @returns number\n     */\n    maxNodeIndex(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 10);\n      return offset ? this.bb!.readUint32(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @param number index\n     * @param onnxruntime.experimental.fbs.NodeEdge= obj\n     * @returns onnxruntime.experimental.fbs.NodeEdge\n     */\n    nodeEdges(index: number, obj?: onnxruntime.experimental.fbs.NodeEdge): onnxruntime.experimental.fbs.NodeEdge|null {\n      let offset = this.bb!.__offset(this.bb_pos, 12);\n      return offset ? (obj || new onnxruntime.experimental.fbs.NodeEdge())\n                          .__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) :\n                      null;\n    }\n\n    /**\n     * @returns number\n     */\n    nodeEdgesLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 12);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @param number index\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array\n     */\n    inputs(index: number): string;\n    inputs(index: number, optionalEncoding: flatbuffers.Encoding): string|Uint8Array;\n    inputs(index: number, optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 14);\n      return offset ? this.bb!.__string(this.bb!.__vector(this.bb_pos + offset) + index * 4, optionalEncoding) : null;\n    }\n\n    /**\n     * @returns number\n     */\n    inputsLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 14);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @param number index\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array\n     */\n    outputs(index: number): string;\n    outputs(index: number, optionalEncoding: flatbuffers.Encoding): string|Uint8Array;\n    outputs(index: number, optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 16);\n      return offset ? this.bb!.__string(this.bb!.__vector(this.bb_pos + offset) + index * 4, optionalEncoding) : null;\n    }\n\n    /**\n     * @returns number\n     */\n    outputsLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 16);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @param number index\n     * @param onnxruntime.experimental.fbs.SparseTensor= obj\n     * @returns onnxruntime.experimental.fbs.SparseTensor\n     */\n    sparseInitializers(index: number, obj?: onnxruntime.experimental.fbs.SparseTensor):\n        onnxruntime.experimental.fbs.SparseTensor|null {\n      let offset = this.bb!.__offset(this.bb_pos, 18);\n      return offset ? (obj || new onnxruntime.experimental.fbs.SparseTensor())\n                          .__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) :\n                      null;\n    }\n\n    /**\n     * @returns number\n     */\n    sparseInitializersLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 18);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     */\n    static startGraph(builder: flatbuffers.Builder) {\n      builder.startObject(8);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset initializersOffset\n     */\n    static addInitializers(builder: flatbuffers.Builder, initializersOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(0, initializersOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param Array.<flatbuffers.Offset> data\n     * @returns flatbuffers.Offset\n     */\n    static createInitializersVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]): flatbuffers.Offset {\n      builder.startVector(4, data.length, 4);\n      for (let i = data.length - 1; i >= 0; i--) {\n        builder.addOffset(data[i]);\n      }\n      return builder.endVector();\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startInitializersVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(4, numElems, 4);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset nodeArgsOffset\n     */\n    static addNodeArgs(builder: flatbuffers.Builder, nodeArgsOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(1, nodeArgsOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param Array.<flatbuffers.Offset> data\n     * @returns flatbuffers.Offset\n     */\n    static createNodeArgsVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]): flatbuffers.Offset {\n      builder.startVector(4, data.length, 4);\n      for (let i = data.length - 1; i >= 0; i--) {\n        builder.addOffset(data[i]);\n      }\n      return builder.endVector();\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startNodeArgsVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(4, numElems, 4);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset nodesOffset\n     */\n    static addNodes(builder: flatbuffers.Builder, nodesOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(2, nodesOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param Array.<flatbuffers.Offset> data\n     * @returns flatbuffers.Offset\n     */\n    static createNodesVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]): flatbuffers.Offset {\n      builder.startVector(4, data.length, 4);\n      for (let i = data.length - 1; i >= 0; i--) {\n        builder.addOffset(data[i]);\n      }\n      return builder.endVector();\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startNodesVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(4, numElems, 4);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number maxNodeIndex\n     */\n    static addMaxNodeIndex(builder: flatbuffers.Builder, maxNodeIndex: number) {\n      builder.addFieldInt32(3, maxNodeIndex, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset nodeEdgesOffset\n     */\n    static addNodeEdges(builder: flatbuffers.Builder, nodeEdgesOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(4, nodeEdgesOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param Array.<flatbuffers.Offset> data\n     * @returns flatbuffers.Offset\n     */\n    static createNodeEdgesVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]): flatbuffers.Offset {\n      builder.startVector(4, data.length, 4);\n      for (let i = data.length - 1; i >= 0; i--) {\n        builder.addOffset(data[i]);\n      }\n      return builder.endVector();\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startNodeEdgesVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(4, numElems, 4);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset inputsOffset\n     */\n    static addInputs(builder: flatbuffers.Builder, inputsOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(5, inputsOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param Array.<flatbuffers.Offset> data\n     * @returns flatbuffers.Offset\n     */\n    static createInputsVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]): flatbuffers.Offset {\n      builder.startVector(4, data.length, 4);\n      for (let i = data.length - 1; i >= 0; i--) {\n        builder.addOffset(data[i]);\n      }\n      return builder.endVector();\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startInputsVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(4, numElems, 4);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset outputsOffset\n     */\n    static addOutputs(builder: flatbuffers.Builder, outputsOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(6, outputsOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param Array.<flatbuffers.Offset> data\n     * @returns flatbuffers.Offset\n     */\n    static createOutputsVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]): flatbuffers.Offset {\n      builder.startVector(4, data.length, 4);\n      for (let i = data.length - 1; i >= 0; i--) {\n        builder.addOffset(data[i]);\n      }\n      return builder.endVector();\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startOutputsVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(4, numElems, 4);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset sparseInitializersOffset\n     */\n    static addSparseInitializers(builder: flatbuffers.Builder, sparseInitializersOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(7, sparseInitializersOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param Array.<flatbuffers.Offset> data\n     * @returns flatbuffers.Offset\n     */\n    static createSparseInitializersVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]):\n        flatbuffers.Offset {\n      builder.startVector(4, data.length, 4);\n      for (let i = data.length - 1; i >= 0; i--) {\n        builder.addOffset(data[i]);\n      }\n      return builder.endVector();\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startSparseInitializersVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(4, numElems, 4);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @returns flatbuffers.Offset\n     */\n    static endGraph(builder: flatbuffers.Builder): flatbuffers.Offset {\n      let offset = builder.endObject();\n      return offset;\n    }\n\n    static createGraph(\n        builder: flatbuffers.Builder, initializersOffset: flatbuffers.Offset, nodeArgsOffset: flatbuffers.Offset,\n        nodesOffset: flatbuffers.Offset, maxNodeIndex: number, nodeEdgesOffset: flatbuffers.Offset,\n        inputsOffset: flatbuffers.Offset, outputsOffset: flatbuffers.Offset,\n        sparseInitializersOffset: flatbuffers.Offset): flatbuffers.Offset {\n      Graph.startGraph(builder);\n      Graph.addInitializers(builder, initializersOffset);\n      Graph.addNodeArgs(builder, nodeArgsOffset);\n      Graph.addNodes(builder, nodesOffset);\n      Graph.addMaxNodeIndex(builder, maxNodeIndex);\n      Graph.addNodeEdges(builder, nodeEdgesOffset);\n      Graph.addInputs(builder, inputsOffset);\n      Graph.addOutputs(builder, outputsOffset);\n      Graph.addSparseInitializers(builder, sparseInitializersOffset);\n      return Graph.endGraph(builder);\n    }\n  }\n}\n/**\n * @constructor\n */\nexport namespace onnxruntime.experimental.fbs {\n  export class Model {\n    bb: flatbuffers.ByteBuffer|null = null;\n\n    bb_pos = 0;\n    /**\n     * @param number i\n     * @param flatbuffers.ByteBuffer bb\n     * @returns Model\n     */\n    __init(i: number, bb: flatbuffers.ByteBuffer): Model {\n      this.bb_pos = i;\n      this.bb = bb;\n      return this;\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param Model= obj\n     * @returns Model\n     */\n    static getRootAsModel(bb: flatbuffers.ByteBuffer, obj?: Model): Model {\n      return (obj || new Model()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param Model= obj\n     * @returns Model\n     */\n    static getSizePrefixedRootAsModel(bb: flatbuffers.ByteBuffer, obj?: Model): Model {\n      bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n      return (obj || new Model()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @returns flatbuffers.Long\n     */\n    irVersion(): flatbuffers.Long {\n      let offset = this.bb!.__offset(this.bb_pos, 4);\n      return offset ? this.bb!.readInt64(this.bb_pos + offset) : this.bb!.createLong(0, 0);\n    }\n\n    /**\n     * @param number index\n     * @param onnxruntime.experimental.fbs.OperatorSetId= obj\n     * @returns onnxruntime.experimental.fbs.OperatorSetId\n     */\n    opsetImport(index: number, obj?: onnxruntime.experimental.fbs.OperatorSetId):\n        onnxruntime.experimental.fbs.OperatorSetId|null {\n      let offset = this.bb!.__offset(this.bb_pos, 6);\n      return offset ? (obj || new onnxruntime.experimental.fbs.OperatorSetId())\n                          .__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) :\n                      null;\n    }\n\n    /**\n     * @returns number\n     */\n    opsetImportLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 6);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array|null\n     */\n    producerName(): string|null;\n    producerName(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\n    producerName(optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 8);\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n    }\n\n    /**\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array|null\n     */\n    producerVersion(): string|null;\n    producerVersion(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\n    producerVersion(optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 10);\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n    }\n\n    /**\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array|null\n     */\n    domain(): string|null;\n    domain(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\n    domain(optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 12);\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n    }\n\n    /**\n     * @returns flatbuffers.Long\n     */\n    modelVersion(): flatbuffers.Long {\n      let offset = this.bb!.__offset(this.bb_pos, 14);\n      return offset ? this.bb!.readInt64(this.bb_pos + offset) : this.bb!.createLong(0, 0);\n    }\n\n    /**\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array|null\n     */\n    docString(): string|null;\n    docString(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\n    docString(optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 16);\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n    }\n\n    /**\n     * @param onnxruntime.experimental.fbs.Graph= obj\n     * @returns onnxruntime.experimental.fbs.Graph|null\n     */\n    graph(obj?: onnxruntime.experimental.fbs.Graph): onnxruntime.experimental.fbs.Graph|null {\n      let offset = this.bb!.__offset(this.bb_pos, 18);\n      return offset ? (obj || new onnxruntime.experimental.fbs.Graph())\n                          .__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) :\n                      null;\n    }\n\n    /**\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array|null\n     */\n    graphDocString(): string|null;\n    graphDocString(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\n    graphDocString(optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 20);\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     */\n    static startModel(builder: flatbuffers.Builder) {\n      builder.startObject(9);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Long irVersion\n     */\n    static addIrVersion(builder: flatbuffers.Builder, irVersion: flatbuffers.Long) {\n      builder.addFieldInt64(0, irVersion, builder.createLong(0, 0));\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset opsetImportOffset\n     */\n    static addOpsetImport(builder: flatbuffers.Builder, opsetImportOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(1, opsetImportOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param Array.<flatbuffers.Offset> data\n     * @returns flatbuffers.Offset\n     */\n    static createOpsetImportVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]): flatbuffers.Offset {\n      builder.startVector(4, data.length, 4);\n      for (let i = data.length - 1; i >= 0; i--) {\n        builder.addOffset(data[i]);\n      }\n      return builder.endVector();\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startOpsetImportVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(4, numElems, 4);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset producerNameOffset\n     */\n    static addProducerName(builder: flatbuffers.Builder, producerNameOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(2, producerNameOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset producerVersionOffset\n     */\n    static addProducerVersion(builder: flatbuffers.Builder, producerVersionOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(3, producerVersionOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset domainOffset\n     */\n    static addDomain(builder: flatbuffers.Builder, domainOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(4, domainOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Long modelVersion\n     */\n    static addModelVersion(builder: flatbuffers.Builder, modelVersion: flatbuffers.Long) {\n      builder.addFieldInt64(5, modelVersion, builder.createLong(0, 0));\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset docStringOffset\n     */\n    static addDocString(builder: flatbuffers.Builder, docStringOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(6, docStringOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset graphOffset\n     */\n    static addGraph(builder: flatbuffers.Builder, graphOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(7, graphOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset graphDocStringOffset\n     */\n    static addGraphDocString(builder: flatbuffers.Builder, graphDocStringOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(8, graphDocStringOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @returns flatbuffers.Offset\n     */\n    static endModel(builder: flatbuffers.Builder): flatbuffers.Offset {\n      let offset = builder.endObject();\n      return offset;\n    }\n\n    static createModel(\n        builder: flatbuffers.Builder, irVersion: flatbuffers.Long, opsetImportOffset: flatbuffers.Offset,\n        producerNameOffset: flatbuffers.Offset, producerVersionOffset: flatbuffers.Offset,\n        domainOffset: flatbuffers.Offset, modelVersion: flatbuffers.Long, docStringOffset: flatbuffers.Offset,\n        graphOffset: flatbuffers.Offset, graphDocStringOffset: flatbuffers.Offset): flatbuffers.Offset {\n      Model.startModel(builder);\n      Model.addIrVersion(builder, irVersion);\n      Model.addOpsetImport(builder, opsetImportOffset);\n      Model.addProducerName(builder, producerNameOffset);\n      Model.addProducerVersion(builder, producerVersionOffset);\n      Model.addDomain(builder, domainOffset);\n      Model.addModelVersion(builder, modelVersion);\n      Model.addDocString(builder, docStringOffset);\n      Model.addGraph(builder, graphOffset);\n      Model.addGraphDocString(builder, graphDocStringOffset);\n      return Model.endModel(builder);\n    }\n  }\n}\n/**\n * @constructor\n */\nexport namespace onnxruntime.experimental.fbs {\n  export class KernelCreateInfos {\n    bb: flatbuffers.ByteBuffer|null = null;\n\n    bb_pos = 0;\n    /**\n     * @param number i\n     * @param flatbuffers.ByteBuffer bb\n     * @returns KernelCreateInfos\n     */\n    __init(i: number, bb: flatbuffers.ByteBuffer): KernelCreateInfos {\n      this.bb_pos = i;\n      this.bb = bb;\n      return this;\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param KernelCreateInfos= obj\n     * @returns KernelCreateInfos\n     */\n    static getRootAsKernelCreateInfos(bb: flatbuffers.ByteBuffer, obj?: KernelCreateInfos): KernelCreateInfos {\n      return (obj || new KernelCreateInfos()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param KernelCreateInfos= obj\n     * @returns KernelCreateInfos\n     */\n    static getSizePrefixedRootAsKernelCreateInfos(bb: flatbuffers.ByteBuffer, obj?: KernelCreateInfos):\n        KernelCreateInfos {\n      bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n      return (obj || new KernelCreateInfos()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param number index\n     * @returns number\n     */\n    nodeIndices(index: number): number|null {\n      let offset = this.bb!.__offset(this.bb_pos, 4);\n      return offset ? this.bb!.readUint32(this.bb!.__vector(this.bb_pos + offset) + index * 4) : 0;\n    }\n\n    /**\n     * @returns number\n     */\n    nodeIndicesLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 4);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @returns Uint32Array\n     */\n    nodeIndicesArray(): Uint32Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 4);\n      return offset ?\n          new Uint32Array(\n              this.bb!.bytes().buffer, this.bb!.bytes().byteOffset + this.bb!.__vector(this.bb_pos + offset),\n              this.bb!.__vector_len(this.bb_pos + offset)) :\n          null;\n    }\n\n    /**\n     * @param number index\n     * @returns flatbuffers.Long\n     */\n    kernelDefHashes(index: number): flatbuffers.Long|null {\n      let offset = this.bb!.__offset(this.bb_pos, 6);\n      return offset ? this.bb!.readUint64(this.bb!.__vector(this.bb_pos + offset) + index * 8) :\n                      this.bb!.createLong(0, 0);\n    }\n\n    /**\n     * @returns number\n     */\n    kernelDefHashesLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 6);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     */\n    static startKernelCreateInfos(builder: flatbuffers.Builder) {\n      builder.startObject(2);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset nodeIndicesOffset\n     */\n    static addNodeIndices(builder: flatbuffers.Builder, nodeIndicesOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(0, nodeIndicesOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param Array.<number> data\n     * @returns flatbuffers.Offset\n     */\n    static createNodeIndicesVector(builder: flatbuffers.Builder, data: number[]|Uint8Array): flatbuffers.Offset {\n      builder.startVector(4, data.length, 4);\n      for (let i = data.length - 1; i >= 0; i--) {\n        builder.addInt32(data[i]);\n      }\n      return builder.endVector();\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startNodeIndicesVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(4, numElems, 4);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset kernelDefHashesOffset\n     */\n    static addKernelDefHashes(builder: flatbuffers.Builder, kernelDefHashesOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(1, kernelDefHashesOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param Array.<flatbuffers.Long> data\n     * @returns flatbuffers.Offset\n     */\n    static createKernelDefHashesVector(builder: flatbuffers.Builder, data: flatbuffers.Long[]): flatbuffers.Offset {\n      builder.startVector(8, data.length, 8);\n      for (let i = data.length - 1; i >= 0; i--) {\n        builder.addInt64(data[i]);\n      }\n      return builder.endVector();\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startKernelDefHashesVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(8, numElems, 8);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @returns flatbuffers.Offset\n     */\n    static endKernelCreateInfos(builder: flatbuffers.Builder): flatbuffers.Offset {\n      let offset = builder.endObject();\n      return offset;\n    }\n\n    static createKernelCreateInfos(\n        builder: flatbuffers.Builder, nodeIndicesOffset: flatbuffers.Offset,\n        kernelDefHashesOffset: flatbuffers.Offset): flatbuffers.Offset {\n      KernelCreateInfos.startKernelCreateInfos(builder);\n      KernelCreateInfos.addNodeIndices(builder, nodeIndicesOffset);\n      KernelCreateInfos.addKernelDefHashes(builder, kernelDefHashesOffset);\n      return KernelCreateInfos.endKernelCreateInfos(builder);\n    }\n  }\n}\n/**\n * @constructor\n */\nexport namespace onnxruntime.experimental.fbs {\n  export class SubGraphSessionState {\n    bb: flatbuffers.ByteBuffer|null = null;\n\n    bb_pos = 0;\n    /**\n     * @param number i\n     * @param flatbuffers.ByteBuffer bb\n     * @returns SubGraphSessionState\n     */\n    __init(i: number, bb: flatbuffers.ByteBuffer): SubGraphSessionState {\n      this.bb_pos = i;\n      this.bb = bb;\n      return this;\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param SubGraphSessionState= obj\n     * @returns SubGraphSessionState\n     */\n    static getRootAsSubGraphSessionState(bb: flatbuffers.ByteBuffer, obj?: SubGraphSessionState): SubGraphSessionState {\n      return (obj || new SubGraphSessionState()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param SubGraphSessionState= obj\n     * @returns SubGraphSessionState\n     */\n    static getSizePrefixedRootAsSubGraphSessionState(bb: flatbuffers.ByteBuffer, obj?: SubGraphSessionState):\n        SubGraphSessionState {\n      bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n      return (obj || new SubGraphSessionState()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array|null\n     */\n    graphId(): string|null;\n    graphId(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\n    graphId(optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 4);\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n    }\n\n    /**\n     * @param onnxruntime.experimental.fbs.SessionState= obj\n     * @returns onnxruntime.experimental.fbs.SessionState|null\n     */\n    sessionState(obj?: onnxruntime.experimental.fbs.SessionState): onnxruntime.experimental.fbs.SessionState|null {\n      let offset = this.bb!.__offset(this.bb_pos, 6);\n      return offset ? (obj || new onnxruntime.experimental.fbs.SessionState())\n                          .__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) :\n                      null;\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     */\n    static startSubGraphSessionState(builder: flatbuffers.Builder) {\n      builder.startObject(2);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset graphIdOffset\n     */\n    static addGraphId(builder: flatbuffers.Builder, graphIdOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(0, graphIdOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset sessionStateOffset\n     */\n    static addSessionState(builder: flatbuffers.Builder, sessionStateOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(1, sessionStateOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @returns flatbuffers.Offset\n     */\n    static endSubGraphSessionState(builder: flatbuffers.Builder): flatbuffers.Offset {\n      let offset = builder.endObject();\n      builder.requiredField(offset, 4);  // graph_id\n      return offset;\n    }\n\n    static createSubGraphSessionState(\n        builder: flatbuffers.Builder, graphIdOffset: flatbuffers.Offset,\n        sessionStateOffset: flatbuffers.Offset): flatbuffers.Offset {\n      SubGraphSessionState.startSubGraphSessionState(builder);\n      SubGraphSessionState.addGraphId(builder, graphIdOffset);\n      SubGraphSessionState.addSessionState(builder, sessionStateOffset);\n      return SubGraphSessionState.endSubGraphSessionState(builder);\n    }\n  }\n}\n/**\n * @constructor\n */\nexport namespace onnxruntime.experimental.fbs {\n  export class SessionState {\n    bb: flatbuffers.ByteBuffer|null = null;\n\n    bb_pos = 0;\n    /**\n     * @param number i\n     * @param flatbuffers.ByteBuffer bb\n     * @returns SessionState\n     */\n    __init(i: number, bb: flatbuffers.ByteBuffer): SessionState {\n      this.bb_pos = i;\n      this.bb = bb;\n      return this;\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param SessionState= obj\n     * @returns SessionState\n     */\n    static getRootAsSessionState(bb: flatbuffers.ByteBuffer, obj?: SessionState): SessionState {\n      return (obj || new SessionState()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param SessionState= obj\n     * @returns SessionState\n     */\n    static getSizePrefixedRootAsSessionState(bb: flatbuffers.ByteBuffer, obj?: SessionState): SessionState {\n      bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n      return (obj || new SessionState()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param onnxruntime.experimental.fbs.KernelCreateInfos= obj\n     * @returns onnxruntime.experimental.fbs.KernelCreateInfos|null\n     */\n    kernels(obj?: onnxruntime.experimental.fbs.KernelCreateInfos): onnxruntime.experimental.fbs.KernelCreateInfos|null {\n      let offset = this.bb!.__offset(this.bb_pos, 4);\n      return offset ? (obj || new onnxruntime.experimental.fbs.KernelCreateInfos())\n                          .__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) :\n                      null;\n    }\n\n    /**\n     * @param number index\n     * @param onnxruntime.experimental.fbs.SubGraphSessionState= obj\n     * @returns onnxruntime.experimental.fbs.SubGraphSessionState\n     */\n    subGraphSessionStates(index: number, obj?: onnxruntime.experimental.fbs.SubGraphSessionState):\n        onnxruntime.experimental.fbs.SubGraphSessionState|null {\n      let offset = this.bb!.__offset(this.bb_pos, 6);\n      return offset ? (obj || new onnxruntime.experimental.fbs.SubGraphSessionState())\n                          .__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) :\n                      null;\n    }\n\n    /**\n     * @returns number\n     */\n    subGraphSessionStatesLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 6);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     */\n    static startSessionState(builder: flatbuffers.Builder) {\n      builder.startObject(2);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset kernelsOffset\n     */\n    static addKernels(builder: flatbuffers.Builder, kernelsOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(0, kernelsOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset subGraphSessionStatesOffset\n     */\n    static addSubGraphSessionStates(builder: flatbuffers.Builder, subGraphSessionStatesOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(1, subGraphSessionStatesOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param Array.<flatbuffers.Offset> data\n     * @returns flatbuffers.Offset\n     */\n    static createSubGraphSessionStatesVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]):\n        flatbuffers.Offset {\n      builder.startVector(4, data.length, 4);\n      for (let i = data.length - 1; i >= 0; i--) {\n        builder.addOffset(data[i]);\n      }\n      return builder.endVector();\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startSubGraphSessionStatesVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(4, numElems, 4);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @returns flatbuffers.Offset\n     */\n    static endSessionState(builder: flatbuffers.Builder): flatbuffers.Offset {\n      let offset = builder.endObject();\n      return offset;\n    }\n\n    static createSessionState(\n        builder: flatbuffers.Builder, kernelsOffset: flatbuffers.Offset,\n        subGraphSessionStatesOffset: flatbuffers.Offset): flatbuffers.Offset {\n      SessionState.startSessionState(builder);\n      SessionState.addKernels(builder, kernelsOffset);\n      SessionState.addSubGraphSessionStates(builder, subGraphSessionStatesOffset);\n      return SessionState.endSessionState(builder);\n    }\n  }\n}\n/**\n * @constructor\n */\nexport namespace onnxruntime.experimental.fbs {\n  export class InferenceSession {\n    bb: flatbuffers.ByteBuffer|null = null;\n\n    bb_pos = 0;\n    /**\n     * @param number i\n     * @param flatbuffers.ByteBuffer bb\n     * @returns InferenceSession\n     */\n    __init(i: number, bb: flatbuffers.ByteBuffer): InferenceSession {\n      this.bb_pos = i;\n      this.bb = bb;\n      return this;\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param InferenceSession= obj\n     * @returns InferenceSession\n     */\n    static getRootAsInferenceSession(bb: flatbuffers.ByteBuffer, obj?: InferenceSession): InferenceSession {\n      return (obj || new InferenceSession()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param InferenceSession= obj\n     * @returns InferenceSession\n     */\n    static getSizePrefixedRootAsInferenceSession(bb: flatbuffers.ByteBuffer, obj?: InferenceSession): InferenceSession {\n      bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n      return (obj || new InferenceSession()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @returns boolean\n     */\n    static bufferHasIdentifier(bb: flatbuffers.ByteBuffer): boolean {\n      return bb.__has_identifier('ORTM');\n    }\n\n    /**\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array|null\n     */\n    ortVersion(): string|null;\n    ortVersion(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\n    ortVersion(optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 4);\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n    }\n\n    /**\n     * @param onnxruntime.experimental.fbs.Model= obj\n     * @returns onnxruntime.experimental.fbs.Model|null\n     */\n    model(obj?: onnxruntime.experimental.fbs.Model): onnxruntime.experimental.fbs.Model|null {\n      let offset = this.bb!.__offset(this.bb_pos, 6);\n      return offset ? (obj || new onnxruntime.experimental.fbs.Model())\n                          .__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) :\n                      null;\n    }\n\n    /**\n     * @param onnxruntime.experimental.fbs.SessionState= obj\n     * @returns onnxruntime.experimental.fbs.SessionState|null\n     */\n    sessionState(obj?: onnxruntime.experimental.fbs.SessionState): onnxruntime.experimental.fbs.SessionState|null {\n      let offset = this.bb!.__offset(this.bb_pos, 8);\n      return offset ? (obj || new onnxruntime.experimental.fbs.SessionState())\n                          .__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) :\n                      null;\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     */\n    static startInferenceSession(builder: flatbuffers.Builder) {\n      builder.startObject(3);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset ortVersionOffset\n     */\n    static addOrtVersion(builder: flatbuffers.Builder, ortVersionOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(0, ortVersionOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset modelOffset\n     */\n    static addModel(builder: flatbuffers.Builder, modelOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(1, modelOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset sessionStateOffset\n     */\n    static addSessionState(builder: flatbuffers.Builder, sessionStateOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(2, sessionStateOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @returns flatbuffers.Offset\n     */\n    static endInferenceSession(builder: flatbuffers.Builder): flatbuffers.Offset {\n      let offset = builder.endObject();\n      return offset;\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset offset\n     */\n    static finishInferenceSessionBuffer(builder: flatbuffers.Builder, offset: flatbuffers.Offset) {\n      builder.finish(offset, 'ORTM');\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset offset\n     */\n    static finishSizePrefixedInferenceSessionBuffer(builder: flatbuffers.Builder, offset: flatbuffers.Offset) {\n      builder.finish(offset, 'ORTM', true);\n    }\n\n    static createInferenceSession(\n        builder: flatbuffers.Builder, ortVersionOffset: flatbuffers.Offset, modelOffset: flatbuffers.Offset,\n        sessionStateOffset: flatbuffers.Offset): flatbuffers.Offset {\n      InferenceSession.startInferenceSession(builder);\n      InferenceSession.addOrtVersion(builder, ortVersionOffset);\n      InferenceSession.addModel(builder, modelOffset);\n      InferenceSession.addSessionState(builder, sessionStateOffset);\n      return InferenceSession.endInferenceSession(builder);\n    }\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {InferenceSession, SessionHandler, Tensor} from 'onnxruntime-common';\n\nimport {Session} from './session';\nimport {Tensor as OnnxjsTensor} from './tensor';\n\nexport class OnnxjsSessionHandler implements SessionHandler {\n  constructor(private session: Session) {\n    this.inputNames = this.session.inputNames;\n    this.outputNames = this.session.outputNames;\n  }\n\n  async dispose(): Promise<void> {}\n  inputNames: readonly string[];\n  outputNames: readonly string[];\n  async run(\n      feeds: SessionHandler.FeedsType, _fetches: SessionHandler.FetchesType,\n      _options: InferenceSession.RunOptions): Promise<SessionHandler.ReturnType> {\n    const inputMap = new Map<string, OnnxjsTensor>();\n    for (const name in feeds) {\n      if (Object.hasOwnProperty.call(feeds, name)) {\n        const feed = feeds[name];\n        inputMap.set(\n            name,\n            new OnnxjsTensor(\n                feed.dims, feed.type as OnnxjsTensor.DataType, undefined, undefined,\n                feed.data as OnnxjsTensor.NumberType));\n      }\n    }\n    const outputMap = await this.session.run(inputMap);\n    const output: SessionHandler.ReturnType = {};\n    outputMap.forEach((tensor, name) => {\n      output[name] = new Tensor(tensor.type, tensor.data, tensor.dims);\n    });\n    return output;\n  }\n  startProfiling(): void {\n    this.session.startProfiling();\n  }\n  endProfiling(): void {\n    this.session.endProfiling();\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {readFile} from 'fs';\nimport {promisify} from 'util';\n\nimport {resolveBackend, SessionHandlerType} from './backend';\nimport {ExecutionPlan} from './execution-plan';\nimport {Graph} from './graph';\nimport {Profiler} from './instrument';\nimport {Model} from './model';\nimport {Operator} from './operators';\nimport {Tensor} from './tensor';\n\nexport declare namespace Session {\n  export interface Config {\n    backendHint?: string;\n    profiler?: Profiler.Config;\n  }\n\n  export interface Context {\n    profiler: Readonly<Profiler>;\n    graphInputTypes?: Tensor.DataType[];\n    graphInputDims?: Array<readonly number[]>;\n  }\n}\n\nexport class Session {\n  constructor(config: Session.Config = {}) {\n    this._initialized = false;\n    this.backendHint = config.backendHint;\n    this.profiler = Profiler.create(config.profiler);\n    this.context = {profiler: this.profiler, graphInputTypes: [], graphInputDims: []};\n  }\n\n  get inputNames(): readonly string[] {\n    return this._model.graph.getInputNames();\n  }\n  get outputNames(): readonly string[] {\n    return this._model.graph.getOutputNames();\n  }\n\n  startProfiling() {\n    this.profiler.start();\n  }\n\n  endProfiling() {\n    this.profiler.stop();\n  }\n\n  async loadModel(uri: string): Promise<void>;\n  async loadModel(buffer: ArrayBuffer, byteOffset?: number, length?: number): Promise<void>;\n  async loadModel(buffer: Uint8Array): Promise<void>;\n  async loadModel(arg: string|ArrayBuffer|Uint8Array, byteOffset?: number, length?: number): Promise<void> {\n    await this.profiler.event('session', 'Session.loadModel', async () => {\n      // resolve backend and session handler\n      const backend = await resolveBackend(this.backendHint);\n      this.sessionHandler = backend.createSessionHandler(this.context);\n\n      this._model = new Model();\n      if (typeof arg === 'string') {\n        const isOrtFormat = arg.endsWith('.ort');\n        if (typeof fetch === 'undefined') {\n          // node\n          const buf = await promisify(readFile)(arg);\n          this.initialize(buf, isOrtFormat);\n        } else {\n          // browser\n          const response = await fetch(arg);\n          const buf = await response.arrayBuffer();\n          this.initialize(new Uint8Array(buf), isOrtFormat);\n        }\n      } else if (!ArrayBuffer.isView(arg)) {\n        // load model from ArrayBuffer\n        const arr = new Uint8Array(arg, byteOffset || 0, length || arg.byteLength);\n        this.initialize(arr);\n      } else {\n        // load model from Uint8array\n        this.initialize(arg);\n      }\n    });\n  }\n\n  private initialize(modelProtoBlob: Uint8Array, isOrtFormat?: boolean): void {\n    if (this._initialized) {\n      throw new Error('already initialized');\n    }\n\n    this.profiler.event('session', 'Session.initialize', () => {\n      // load graph\n      const graphInitializer =\n          this.sessionHandler.transformGraph ? this.sessionHandler as Graph.Initializer : undefined;\n      this._model.load(modelProtoBlob, graphInitializer, isOrtFormat);\n\n      // graph is completely initialzied at this stage , let the interested handlers know\n      if (this.sessionHandler.onGraphInitialized) {\n        this.sessionHandler.onGraphInitialized(this._model.graph);\n      }\n      // initialize each operator in the graph\n      this.initializeOps(this._model.graph);\n\n      // instantiate an ExecutionPlan object to be used by the Session object\n      this._executionPlan = new ExecutionPlan(this._model.graph, this._ops, this.profiler);\n    });\n\n    this._initialized = true;\n  }\n\n  async run(inputs: Map<string, Tensor>|Tensor[]): Promise<Map<string, Tensor>> {\n    if (!this._initialized) {\n      throw new Error('session not initialized yet');\n    }\n\n    return this.profiler.event('session', 'Session.run', async () => {\n      const inputTensors = this.normalizeAndValidateInputs(inputs);\n\n      const outputTensors = await this._executionPlan.execute(this.sessionHandler, inputTensors);\n\n      return this.createOutput(outputTensors);\n    });\n  }\n\n  private normalizeAndValidateInputs(inputs: Map<string, Tensor>|Tensor[]): Tensor[] {\n    const modelInputNames = this._model.graph.getInputNames();\n\n    // normalize inputs\n    // inputs: Tensor[]\n    if (Array.isArray(inputs)) {\n      if (inputs.length !== modelInputNames.length) {\n        throw new Error(`incorrect input array length: expected ${modelInputNames.length} but got ${inputs.length}`);\n      }\n    }\n    // convert map to array\n    // inputs: Map<string, Tensor>\n    else {\n      if (inputs.size !== modelInputNames.length) {\n        throw new Error(`incorrect input map size: expected ${modelInputNames.length} but got ${inputs.size}`);\n      }\n\n      const sortedInputs = new Array<Tensor>(inputs.size);\n      let sortedInputsIndex = 0;\n      for (let i = 0; i < modelInputNames.length; ++i) {\n        const tensor = inputs.get(modelInputNames[i]);\n        if (!tensor) {\n          throw new Error(`missing input tensor for: '${name}'`);\n        }\n        sortedInputs[sortedInputsIndex++] = tensor;\n      }\n\n      inputs = sortedInputs;\n    }\n\n    // validate dims requirements\n    // First session run - graph input data is not cached for the session\n    if (!this.context.graphInputTypes || this.context.graphInputTypes.length === 0 || !this.context.graphInputDims ||\n        this.context.graphInputDims.length === 0) {\n      const modelInputIndices = this._model.graph.getInputIndices();\n      const modelValues = this._model.graph.getValues();\n\n      const graphInputDims = new Array<readonly number[]>(modelInputIndices.length);\n\n      for (let i = 0; i < modelInputIndices.length; ++i) {\n        const graphInput = modelValues[modelInputIndices[i]];\n        graphInputDims[i] = graphInput.type!.shape.dims;\n\n        // cached for second and subsequent runs.\n        // Some parts of the framework works on the assumption that the graph and types and shapes are static\n        this.context.graphInputTypes!.push(graphInput.type!.tensorType);\n        this.context.graphInputDims!.push(inputs[i].dims);\n      }\n\n      this.validateInputTensorDims(graphInputDims, inputs, true);\n    }\n\n    // Second and subsequent session runs - graph input data is cached for the session\n    else {\n      this.validateInputTensorDims(this.context.graphInputDims, inputs, false);\n    }\n\n    // validate types requirement\n    this.validateInputTensorTypes(this.context.graphInputTypes!, inputs);\n\n    return inputs;\n  }\n\n  private validateInputTensorTypes(graphInputTypes: Tensor.DataType[], givenInputs: Tensor[]) {\n    for (let i = 0; i < givenInputs.length; i++) {\n      const expectedType = graphInputTypes[i];\n      const actualType = givenInputs[i].type;\n      if (expectedType !== actualType) {\n        throw new Error(`input tensor[${i}] check failed: expected type '${expectedType}' but got ${actualType}`);\n      }\n    }\n  }\n\n  private validateInputTensorDims(\n      graphInputDims: Array<readonly number[]>, givenInputs: Tensor[], noneDimSupported: boolean) {\n    for (let i = 0; i < givenInputs.length; i++) {\n      const expectedDims = graphInputDims[i];\n      const actualDims = givenInputs[i].dims;\n      if (!this.compareTensorDims(expectedDims, actualDims, noneDimSupported)) {\n        throw new Error(`input tensor[${i}] check failed: expected shape '[${expectedDims.join(',')}]' but got [${\n            actualDims.join(',')}]`);\n      }\n    }\n  }\n\n  private compareTensorDims(expectedDims: readonly number[], actualDims: readonly number[], noneDimSupported: boolean):\n      boolean {\n    if (expectedDims.length !== actualDims.length) {\n      return false;\n    }\n\n    for (let i = 0; i < expectedDims.length; ++i) {\n      if (expectedDims[i] !== actualDims[i] && (!noneDimSupported || expectedDims[i] !== 0)) {\n        // data shape mis-match AND not a 'None' dimension.\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  private createOutput(outputTensors: Tensor[]): Map<string, Tensor> {\n    const modelOutputNames = this._model.graph.getOutputNames();\n    if (outputTensors.length !== modelOutputNames.length) {\n      throw new Error('expected number of outputs do not match number of generated outputs');\n    }\n\n    const output = new Map<string, Tensor>();\n    for (let i = 0; i < modelOutputNames.length; ++i) {\n      output.set(modelOutputNames[i], outputTensors[i]);\n    }\n\n    return output;\n  }\n\n  private initializeOps(graph: Graph): void {\n    const nodes = graph.getNodes();\n    this._ops = new Array(nodes.length);\n\n    for (let i = 0; i < nodes.length; i++) {\n      this._ops[i] = this.sessionHandler.resolve(nodes[i], this._model.opsets, graph);\n    }\n  }\n\n  private _model: Model;\n  private _initialized: boolean;\n\n  private _ops: Operator[];\n  private _executionPlan: ExecutionPlan;\n\n  private backendHint?: string;\n\n  private sessionHandler: SessionHandlerType;\n  private context: Session.Context;\n  private profiler: Readonly<Profiler>;\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Guid} from 'guid-typescript';\nimport Long from 'long';\nimport {onnx} from 'onnx-proto';\n\nimport {onnxruntime} from './ort-schema/ort-generated';\nimport {decodeUtf8String, ProtoUtil, ShapeUtil} from './util';\n\nimport ortFbs = onnxruntime.experimental.fbs;\n\nexport declare namespace Tensor {\n  export interface DataTypeMap {\n    bool: Uint8Array;\n    float32: Float32Array;\n    float64: Float64Array;\n    string: string[];\n    int8: Int8Array;\n    uint8: Uint8Array;\n    int16: Int16Array;\n    uint16: Uint16Array;\n    int32: Int32Array;\n    uint32: Uint32Array;\n  }\n\n  export type DataType = keyof DataTypeMap;\n\n  export type StringType = Tensor.DataTypeMap['string'];\n  export type BooleanType = Tensor.DataTypeMap['bool'];\n  export type IntegerType = Tensor.DataTypeMap['int8']|Tensor.DataTypeMap['uint8']|Tensor.DataTypeMap['int16']|\n                            Tensor.DataTypeMap['uint16']|Tensor.DataTypeMap['int32']|Tensor.DataTypeMap['uint32'];\n  export type FloatType = Tensor.DataTypeMap['float32']|Tensor.DataTypeMap['float64'];\n  export type NumberType = BooleanType|IntegerType|FloatType;\n\n  export type Id = Guid;\n}\n\ntype TensorData = Tensor.DataTypeMap[Tensor.DataType];\n\ntype DataProvider = (id: Tensor.Id) => TensorData;\ntype AsyncDataProvider = (id: Tensor.Id) => Promise<TensorData>;\n\nexport class Tensor {\n  /**\n   * get the underlying tensor data\n   */\n  get data(): TensorData {\n    if (this.cache === undefined) {\n      const data = this.dataProvider!(this.dataId);\n      if (data.length !== this.size) {\n        throw new Error('Length of data provided by the Data Provider is inconsistent with the dims of this Tensor.');\n      }\n      this.cache = data;\n    }\n    return this.cache;\n  }\n\n  /**\n   * get the underlying string tensor data. Should only use when type is STRING\n   */\n  get stringData() {\n    if (this.type !== 'string') {\n      throw new TypeError('data type is not string');\n    }\n\n    return this.data as Tensor.StringType;\n  }\n\n  /**\n   * get the underlying integer tensor data. Should only use when type is one of the following: (UINT8, INT8, UINT16,\n   * INT16, INT32, UINT32, BOOL)\n   */\n  get integerData() {\n    switch (this.type) {\n      case 'uint8':\n      case 'int8':\n      case 'uint16':\n      case 'int16':\n      case 'int32':\n      case 'uint32':\n      case 'bool':\n        return this.data as Tensor.IntegerType;\n\n      default:\n        throw new TypeError('data type is not integer (uint8, int8, uint16, int16, int32, uint32, bool)');\n    }\n  }\n\n  /**\n   * get the underlying float tensor data. Should only use when type is one of the following: (FLOAT, DOUBLE)\n   */\n  get floatData() {\n    switch (this.type) {\n      case 'float32':\n      case 'float64':\n        return this.data as Tensor.FloatType;\n\n      default:\n        throw new TypeError('data type is not float (float32, float64)');\n    }\n  }\n\n  /**\n   * get the underlying number tensor data. Should only use when type is one of the following: (UINT8, INT8, UINT16,\n   * INT16, INT32, UINT32, BOOL, FLOAT, DOUBLE)\n   */\n  get numberData() {\n    if (this.type !== 'string') {\n      return this.data as Tensor.NumberType;\n    }\n    throw new TypeError('type cannot be non-number (string)');\n  }\n\n  /**\n   * get value of an element at the given indices\n   */\n  get(indices: readonly number[]): Tensor.DataTypeMap[Tensor.DataType][number] {\n    return this.data[ShapeUtil.indicesToOffset(indices, this.strides)];\n  }\n\n  /**\n   * set value of an element at the given indices\n   */\n  set(indices: readonly number[], value: Tensor.DataTypeMap[Tensor.DataType][number]) {\n    this.data[ShapeUtil.indicesToOffset(indices, this.strides)] = value;\n  }\n\n  /**\n   * get the underlying tensor data asynchronously\n   */\n  async getData(): Promise<TensorData> {\n    if (this.cache === undefined) {\n      this.cache = await this.asyncDataProvider!(this.dataId);\n    }\n    return this.cache;\n  }\n\n  /**\n   * get the number of elements in the tensor\n   */\n  public readonly size: number;\n\n  private _strides: readonly number[];\n  /**\n   * get the strides for each dimension\n   */\n  get strides(): readonly number[] {\n    if (!this._strides) {\n      this._strides = ShapeUtil.computeStrides(this.dims);\n    }\n    return this._strides;\n  }\n\n  constructor(\n      /**\n       * get the dimensions of the tensor\n       */\n      public readonly dims: readonly number[],\n      /**\n       * get the type of the tensor\n       */\n      public readonly type: Tensor.DataType, private dataProvider?: DataProvider,\n      private asyncDataProvider?: AsyncDataProvider, private cache?: TensorData,\n      /**\n       * get the data ID that used to map to a tensor data\n       */\n      public readonly dataId: Guid = Guid.create()) {\n    this.size = ShapeUtil.validateDimsAndCalcSize(dims);\n    const size = this.size;\n    const empty = (dataProvider === undefined && asyncDataProvider === undefined && cache === undefined);\n\n    if (cache !== undefined) {\n      if (cache.length !== size) {\n        throw new RangeError('Input dims doesn\\'t match data length.');\n      }\n    }\n\n    if (type === 'string') {\n      if (cache !== undefined && (!Array.isArray(cache) || !cache.every(i => typeof i === 'string'))) {\n        throw new TypeError('cache should be a string array');\n      }\n\n      if (empty) {\n        this.cache = new Array<string>(size);\n      }\n    } else {\n      if (cache !== undefined) {\n        const constructor = dataviewConstructor(type);\n        if (!(cache instanceof constructor)) {\n          throw new TypeError(`cache should be type ${constructor.name}`);\n        }\n      }\n\n      if (empty) {\n        const buf = new ArrayBuffer(size * sizeof(type));\n        this.cache = createView(buf, type);\n      }\n    }\n  }\n\n  /**\n   * Construct new Tensor from a ONNX Tensor object\n   * @param tensorProto the ONNX Tensor\n   */\n  static fromProto(tensorProto: onnx.ITensorProto): Tensor {\n    if (!tensorProto) {\n      throw new Error('cannot construct Value from an empty tensor');\n    }\n    const type = ProtoUtil.tensorDataTypeFromProto(tensorProto.dataType!);\n    const dims = ProtoUtil.tensorDimsFromProto(tensorProto.dims!);\n\n    const value = new Tensor(dims, type);\n\n    if (type === 'string') {\n      // When it's STRING type, the value should always be stored in field\n      // 'stringData'\n      tensorProto.stringData!.forEach((str, i) => {\n        value.data[i] = decodeUtf8String(str);\n      });\n\n    } else if (\n        tensorProto.rawData && typeof tensorProto.rawData.byteLength === 'number' &&\n        tensorProto.rawData.byteLength > 0) {\n      // NOT considering segment for now (IMPORTANT)\n\n      // populate value from rawData\n      const dataDest = value.data;\n      const dataSource =\n          new DataView(tensorProto.rawData.buffer, tensorProto.rawData.byteOffset, tensorProto.rawData.byteLength);\n      const elementSize = sizeofProto(tensorProto.dataType!);\n      const length = tensorProto.rawData.byteLength / elementSize;\n\n      if (tensorProto.rawData.byteLength % elementSize !== 0) {\n        throw new Error('invalid buffer length');\n      }\n      if (dataDest.length !== length) {\n        throw new Error('buffer length mismatch');\n      }\n\n      for (let i = 0; i < length; i++) {\n        const n = readProto(dataSource, tensorProto.dataType!, i * elementSize);\n        dataDest[i] = n;\n      }\n    } else {\n      // populate value from array\n      let array: Array<number|Long>;\n      switch (tensorProto.dataType) {\n        case onnx.TensorProto.DataType.FLOAT:\n          array = tensorProto.floatData!;\n          break;\n        case onnx.TensorProto.DataType.INT32:\n        case onnx.TensorProto.DataType.INT16:\n        case onnx.TensorProto.DataType.UINT16:\n        case onnx.TensorProto.DataType.INT8:\n        case onnx.TensorProto.DataType.UINT8:\n        case onnx.TensorProto.DataType.BOOL:\n          array = tensorProto.int32Data!;\n          break;\n        case onnx.TensorProto.DataType.INT64:\n          array = tensorProto.int64Data!;\n          break;\n        case onnx.TensorProto.DataType.DOUBLE:\n          array = tensorProto.doubleData!;\n          break;\n        case onnx.TensorProto.DataType.UINT32:\n        case onnx.TensorProto.DataType.UINT64:\n          array = tensorProto.uint64Data!;\n          break;\n        default:\n          // should never run here\n          throw new Error('unspecific error');\n      }\n\n      if (array === null || array === undefined) {\n        throw new Error('failed to populate data from a tensorproto value');\n      }\n\n      const data = value.data;\n      if (data.length !== array.length) {\n        throw new Error('array length mismatch');\n      }\n\n      for (let i = 0; i < array.length; i++) {\n        const element = array[i];\n        if (Long.isLong(element)) {\n          data[i] = longToNumber(element, tensorProto.dataType);\n        } else {\n          data[i] = element;\n        }\n      }\n    }\n\n    return value;\n  }\n\n  /**\n   * Construct new Tensor from raw data\n   * @param data the raw data object. Should be a string array for 'string' tensor, and the corresponding typed array\n   * for other types of tensor.\n   * @param dims the dimensions of the tensor\n   * @param type the type of the tensor\n   */\n  static fromData(data: Tensor.DataTypeMap[Tensor.DataType], dims: readonly number[], type: Tensor.DataType) {\n    return new Tensor(dims, type, undefined, undefined, data);\n  }\n\n  static fromOrtTensor(ortTensor: ortFbs.Tensor) {\n    if (!ortTensor) {\n      throw new Error('cannot construct Value from an empty tensor');\n    }\n    const dims = ProtoUtil.tensorDimsFromORTFormat(ortTensor);\n    const type = ProtoUtil.tensorDataTypeFromProto(ortTensor.dataType());\n\n    const value = new Tensor(dims, type);\n\n    if (type === 'string') {\n      // When it's STRING type, the value should always be stored in field\n      // 'stringData'\n      for (let i = 0; i < ortTensor.stringDataLength(); i++) {\n        value.data[i] = ortTensor.stringData(i);\n      }\n\n    } else if (\n        ortTensor.rawDataArray() && typeof ortTensor.rawDataLength() === 'number' && ortTensor.rawDataLength() > 0) {\n      // NOT considering segment for now (IMPORTANT)\n\n      // populate value from rawData\n      const dataDest = value.data;\n      const dataSource = new DataView(\n          ortTensor.rawDataArray()!.buffer, ortTensor.rawDataArray()!.byteOffset, ortTensor.rawDataLength());\n      const elementSize = sizeofProto(ortTensor.dataType());\n      const length = ortTensor.rawDataLength() / elementSize;\n\n      if (ortTensor.rawDataLength() % elementSize !== 0) {\n        throw new Error('invalid buffer length');\n      }\n      if (dataDest.length !== length) {\n        throw new Error('buffer length mismatch');\n      }\n\n      for (let i = 0; i < length; i++) {\n        const n = readProto(dataSource, ortTensor.dataType(), i * elementSize);\n        dataDest[i] = n;\n      }\n    }\n    return value;\n  }\n}\n\nfunction sizeof(type: Tensor.DataType): number {\n  switch (type) {\n    case 'bool':\n    case 'int8':\n    case 'uint8':\n      return 1;\n    case 'int16':\n    case 'uint16':\n      return 2;\n    case 'int32':\n    case 'uint32':\n    case 'float32':\n      return 4;\n    case 'float64':\n      return 8;\n    default:\n      throw new Error(`cannot calculate sizeof() on type ${type}`);\n  }\n}\n\nfunction sizeofProto(type: onnx.TensorProto.DataType|ortFbs.TensorDataType): number {\n  switch (type) {\n    case onnx.TensorProto.DataType.UINT8:\n    case onnx.TensorProto.DataType.INT8:\n    case onnx.TensorProto.DataType.BOOL:\n      return 1;\n    case onnx.TensorProto.DataType.UINT16:\n    case onnx.TensorProto.DataType.INT16:\n      return 2;\n    case onnx.TensorProto.DataType.FLOAT:\n    case onnx.TensorProto.DataType.INT32:\n    case onnx.TensorProto.DataType.UINT32:\n      return 4;\n    case onnx.TensorProto.DataType.INT64:\n    case onnx.TensorProto.DataType.DOUBLE:\n    case onnx.TensorProto.DataType.UINT64:\n      return 8;\n    default:\n      throw new Error(`cannot calculate sizeof() on type ${onnx.TensorProto.DataType[type]}`);\n  }\n}\n\nfunction createView(dataBuffer: ArrayBuffer, type: Tensor.DataType) {\n  return new (dataviewConstructor(type))(dataBuffer);\n}\n\nfunction dataviewConstructor(type: Tensor.DataType) {\n  switch (type) {\n    case 'bool':\n    case 'uint8':\n      return Uint8Array;\n    case 'int8':\n      return Int8Array;\n    case 'int16':\n      return Int16Array;\n    case 'uint16':\n      return Uint16Array;\n    case 'int32':\n      return Int32Array;\n    case 'uint32':\n      return Uint32Array;\n    case 'float32':\n      return Float32Array;\n    case 'float64':\n      return Float64Array;\n    default:\n      // should never run to here\n      throw new Error('unspecified error');\n  }\n}\n\n// convert a long number to a 32-bit integer (cast-down)\nfunction longToNumber(i: Long, type: onnx.TensorProto.DataType|ortFbs.TensorDataType): number {\n  // INT64, UINT32, UINT64\n  if (type === onnx.TensorProto.DataType.INT64 || type === ortFbs.TensorDataType.INT64) {\n    if (i.greaterThanOrEqual(2147483648) || i.lessThan(-2147483648)) {\n      throw new TypeError('int64 is not supported');\n    }\n  } else if (\n      type === onnx.TensorProto.DataType.UINT32 || type === ortFbs.TensorDataType.UINT32 ||\n      type === onnx.TensorProto.DataType.UINT64 || type === ortFbs.TensorDataType.UINT64) {\n    if (i.greaterThanOrEqual(4294967296) || i.lessThan(0)) {\n      throw new TypeError('uint64 is not supported');\n    }\n  } else {\n    throw new TypeError(`not a LONG type: ${onnx.TensorProto.DataType[type]}`);\n  }\n\n  return i.toNumber();\n}\n\n// read one value from TensorProto\nfunction readProto(view: DataView, type: onnx.TensorProto.DataType|ortFbs.TensorDataType, byteOffset: number): number {\n  switch (type) {\n    case onnx.TensorProto.DataType.BOOL:\n    case onnx.TensorProto.DataType.UINT8:\n      return view.getUint8(byteOffset);\n    case onnx.TensorProto.DataType.INT8:\n      return view.getInt8(byteOffset);\n    case onnx.TensorProto.DataType.UINT16:\n      return view.getUint16(byteOffset, true);\n    case onnx.TensorProto.DataType.INT16:\n      return view.getInt16(byteOffset, true);\n    case onnx.TensorProto.DataType.FLOAT:\n      return view.getFloat32(byteOffset, true);\n    case onnx.TensorProto.DataType.INT32:\n      return view.getInt32(byteOffset, true);\n    case onnx.TensorProto.DataType.UINT32:\n      return view.getUint32(byteOffset, true);\n    case onnx.TensorProto.DataType.INT64:\n      return longToNumber(\n          Long.fromBits(view.getUint32(byteOffset, true), view.getUint32(byteOffset + 4, true), false), type);\n    case onnx.TensorProto.DataType.DOUBLE:\n      return view.getFloat64(byteOffset, true);\n    case onnx.TensorProto.DataType.UINT64:\n      return longToNumber(\n          Long.fromBits(view.getUint32(byteOffset, true), view.getUint32(byteOffset + 4, true), true), type);\n    default:\n      throw new Error(`cannot read from DataView for type ${onnx.TensorProto.DataType[type]}`);\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {flatbuffers} from 'flatbuffers';\nimport Long from 'long';\nimport {onnx} from 'onnx-proto';\n\nimport {Graph} from './graph';\nimport {onnxruntime} from './ort-schema/ort-generated';\nimport {Tensor} from './tensor';\n\n// check the inputs shape before running an OP.\n// return true when the inputs pass the check\n// return false when the inputs do not fit the requirement\n// throw exception when fatal error or not implemented\nexport function checkInputsShape(inputs: Tensor[], ...expectedDimensions: number[]): boolean {\n  if (!inputs || inputs.length !== expectedDimensions.length) {\n    return false;\n  }\n  for (let i = 0; i < inputs.length; i++) {\n    if (!inputs[i].dims || inputs[i].dims.length !== expectedDimensions[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n\n// Evaluates the given expression and asserts error message if condition is unmet.\nexport function assert(expr: boolean, msg: () => string) {\n  if (!expr) {\n    throw new Error(typeof msg === 'string' ? msg : msg());\n  }\n}\n\nexport class ArrayUtil {\n  /**\n   * Verifies if 2 input arrays contain the same elements.\n   * @param n1 Array 1\n   * @param n2 Array 2\n   * @returns Whether these 2 are equal\n   */\n  static arraysEqual(\n      n1: readonly number[]|Int8Array|Uint8Array|Int16Array|Uint16Array|Int32Array|Uint32Array|Uint8ClampedArray|\n      Float32Array|Float64Array,\n      n2: readonly number[]|Int8Array|Uint8Array|Int16Array|Uint16Array|Int32Array|Uint32Array|Uint8ClampedArray|\n      Float32Array|Float64Array) {\n    if (n1.length !== n2.length) {\n      return false;\n    }\n    for (let i = 0; i < n1.length; i++) {\n      if (n1[i] !== n2[i]) {\n        return false;\n      }\n    }\n    return true;\n  }\n}\n\nexport class MatMulUtil {\n  /**\n   * Fix the input shapes for MatMul operation if they need fixing\n   * @param dimsA The shape of tensor A. Should be an array of positive integers\n   * @param dimsB The shape of tensor B. Should be an array of positive integers\n   * @returns A tuple containing the preprocessed input shapes as required by ONNX specifications\n   */\n  static preprocessInputShapes(dimsA: readonly number[], dimsB: readonly number[]):\n      [readonly number[], readonly number[]] {\n    // If the first argument is 1-D, it is promoted to a matrix by prepending\n    // a 1 to its dimensions. After matrix multiplication the prepended 1 is\n    // removed.\n    const a = (dimsA.length === 1) ? [1, dimsA[0]] : dimsA;\n\n    // If the second argument is 1-D, it is promoted to a matrix by appending\n    // a 1 to its dimensions. After matrix multiplication the appended 1 is\n    // removed.\n    const b = (dimsB.length === 1) ? [dimsB[0], 1] : dimsB;\n\n    return [a, b];\n  }\n\n  /**\n   * Fix the output shape computed for MatMul operation if it needs fixing\n   * @param outputShape The computed outputShape. Should be an array (atleast of length 2) of positive integers.\n   * This will be mutated.\n   * @param aRank The rank of tensor A.\n   * @param bRank The rank of tensor B.\n   */\n  static postprocessOutputShape(outputShape: number[], aRank: number, bRank: number) {\n    // Remove prepended dimension if first input is 1d\n    if (aRank === 1) {\n      // outputShape = outputShape.slice(0, outputShape.length - 2).concat(outputShape.slice(outputShape.length - 1));\n      outputShape.splice(outputShape.length - 2, 1);\n    }\n    // Remove appended dimension if second input is 1d\n    if (bRank === 1) {\n      outputShape.pop();\n    }\n  }\n\n  /**\n   * Calculate the expected shape when matrix multiplication\n   * @param a The shape of tensor A. Should be a tuple of 2 positive integers\n   * @param b The shape of tensor B. Should be a tuple of 2 positive integers\n   * @returns The expected shape of the result, or undefined if N/A\n   */\n  static calcMatMulShape(a: [number, number], b: [number, number]): [number, number]|undefined {\n    return (a[1] !== b[0]) ? undefined : [a[0], b[1]];\n  }\n}\n\nexport class BroadcastUtil {\n  /**\n   * Calculate the expected shape when broadcasting 2 tensors\n   * @param a The shape of tensor A. Should be an array of positive integers\n   * @param b The shape of tensor B. Should be an array of positive integers\n   * @param isMatMul Whether the operation is MatMul\n   * @returns The expected shape of the result, or undefined if N/A\n   */\n  static calcShape(adims: readonly number[], bdims: readonly number[], isMatMul = false): readonly number[]|undefined {\n    const arank = adims.length;\n    const brank = bdims.length;\n    if (arank === 0) {\n      return bdims;\n    }\n    if (brank === 0) {\n      return adims;\n    }\n    const crank = Math.max(adims.length, bdims.length);\n    const cdims = new Array<number>(crank);\n\n    // calculate the last 2 dimension if it is MatMul\n    if (isMatMul) {\n      if (arank < 2 || brank < 2) {\n        return undefined;\n      }\n      const cShapeMatMul =\n          MatMulUtil.calcMatMulShape([adims[arank - 2], adims[arank - 1]], [bdims[brank - 2], bdims[brank - 1]]);\n      if (cShapeMatMul === undefined) {\n        return undefined;\n      }\n      [cdims[crank - 2], cdims[crank - 1]] = cShapeMatMul;\n    }\n\n    for (let i = isMatMul ? 3 : 1; i <= crank; i++) {\n      const aLen = arank - i < 0 ? 1 : adims[arank - i];\n      const bLen = brank - i < 0 ? 1 : bdims[brank - i];\n\n      if (aLen !== bLen && aLen > 1 && bLen > 1) {\n        return undefined;\n      }\n      cdims[crank - i] = Math.max(aLen, bLen);\n    }\n\n    return cdims;\n  }\n\n  /**\n   * Given the indices of a broadcasted tensor, calculate the original indices\n   * @param broadcastedIndices The given indices of the broadcasted tensor.\n   * @param originalShape The original shape of the tensor before broadcas\n   * @returns The calculated indices that maps to the original tensor.\n   */\n  static index(broadcastedIndices: readonly number[], originalShape: readonly number[]): number[] {\n    // NOTE 1: we assume the parameter broadcastedIndices is valid. ie. it should have the same\n    // length as the broadcasted shape, and for each dimension the index should\n    // not be out of range.\n    const originalIndices = new Array(originalShape.length);\n    BroadcastUtil.fillIndex(broadcastedIndices, originalShape, originalIndices);\n    return originalIndices;\n  }\n\n  /**\n   * Given the indices of a broadcasted tensor, calculate the original indices\n   * @param broadcastedIndices The given indices of the broadcasted tensor.\n   * @param originalShape The original shape of the tensor before broadcast\n   * @param originalIndices The mapping of broadcastedIndices to the originalIndices (output parameter - will be\n   *     mutated).\n   */\n  static fillIndex(broadcastedIndices: readonly number[], originalShape: readonly number[], originalIndices: number[]) {\n    // NOTE 1: we assume the parameter broadcastedIndices is valid. ie. it should have the same length as the\n    // broadcasted shape, and for each dimension the index should not be out of range.\n    // NOTE 2: we assume the parameter originalIndices has the same length as the originalShape\n    const dimOffset = broadcastedIndices.length - originalShape.length;\n    for (let i = 0; i < originalShape.length; i++) {\n      originalIndices[i] = broadcastedIndices[dimOffset + i] % originalShape[i];\n    }\n  }\n\n  /**\n   * Perform the broadcasting operation on the specific operator\n   * @param a The input tensor A\n   * @param b The input tensor B\n   * @param op The operator lambda function\n   * @param inplace Whether to write the result back to A.\n   * @returns The result tensor, or undefined if input not broadcastable.\n   */\n  static calc(\n      a: Tensor, b: Tensor, op: (a: string|number, b: string|number) => (string | number), inplace: boolean,\n      resultType?: Tensor.DataType): Tensor|undefined {\n    const outputShape = BroadcastUtil.calcShape(a.dims, b.dims);\n\n    if (outputShape) {\n      if (inplace && !ShapeUtil.areEqual(outputShape, a.dims)) {\n        // B is not broadcastable to A, failed to calculate inplace.\n        return undefined;\n      }\n\n      const size = ShapeUtil.size(outputShape);\n      const c = inplace ? a : new Tensor(outputShape, resultType || a.type);\n\n      // both inputs are scalars\n      if (outputShape.length === 0) {\n        c.set([], op(a.get([]), b.get([])));\n      }\n\n      // atleast one input is a non-scalar\n      else {\n        const outputIndices = new Array<number>(outputShape.length);\n        const originalIndicesA = new Array(a.dims.length);\n        const originalIndicesB = new Array(b.dims.length);\n        let valA: string|number = 0;\n        let valB: string|number = 0;\n        let isAScalar = false;\n        let isBScalar = false;\n        if (a.dims.length === 0) {\n          valA = a.get([]);\n          isAScalar = true;\n        }\n        if (b.dims.length === 0) {\n          valB = b.get([]);\n          isBScalar = true;\n        }\n        let rest: number;\n        for (let i = 0; i < size; i++) {\n          // traversal indices\n          rest = i;\n          for (let j = outputShape.length - 1; j >= 0; j--) {\n            outputIndices[j] = rest % outputShape[j];\n            rest = Math.floor(rest / outputShape[j]);\n          }\n\n          if (!isAScalar) {\n            // map outputIndices (which is actually broadcasted) to the originalIndices\n            BroadcastUtil.fillIndex(outputIndices, a.dims, originalIndicesA);\n            valA = a.get(originalIndicesA);\n          }\n          if (!isBScalar) {\n            BroadcastUtil.fillIndex(outputIndices, b.dims, originalIndicesB);\n            valB = b.get(originalIndicesB);\n          }\n\n          c.set(outputIndices, op(valA, valB));\n        }\n      }\n\n      return c;\n    }\n\n    return undefined;\n  }\n\n  /**\n   * Determine if a shape is unidirectional broadcastable to another shape\n   * @param shape The input shape\n   * @param finalShape The desired shape after broadcasting\n   */\n  static isValidBroadcast(shape: readonly number[], finalShape: readonly number[]): boolean {\n    // align shape to the right\n    const inputRank = shape.length;\n    const finalRank = finalShape.length;\n    if (inputRank > finalRank) {\n      return false;\n    }\n    for (let i = 1; i <= inputRank; i++) {\n      if (shape[inputRank - i] !== 1 && shape[inputRank - i] !== finalShape[finalRank - i]) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  /**\n   * Determine the broadcasted dims in input shape based on the given output shape.\n   * Note that this function only returns the broadcasted dims.\n   * @param inputShape The input shape\n   * @param outputShape The output shape\n   * @returns The broadcasted dims in input shape.\n   */\n  static getBroadcastDims(inputShape: readonly number[], outputShape: readonly number[]): number[] {\n    const inRank = inputShape.length;\n    const dims: number[] = [];\n    for (let i = 0; i < inRank; i++) {\n      const dim = inRank - 1 - i;\n      const a = inputShape[dim] || 1;\n      const b = outputShape[outputShape.length - 1 - i] || 1;\n      if (b > 1 && a === 1) {\n        dims.unshift(dim);\n      }\n    }\n    return dims;\n  }\n}\n\n// copy array helper\n// mimics memcpy as much as possible\nexport function arrayCopyHelper(\n    target: number[]|Tensor.NumberType, source: number[]|Tensor.NumberType, targetIndex: number, sourceIndex: number,\n    blockSize: number) {\n  if (sourceIndex < 0 || sourceIndex >= source.length) {\n    throw new Error('sourceIndex out of bounds');\n  }\n  if (targetIndex < 0 || targetIndex >= target.length) {\n    throw new Error('targetIndex out of bounds');\n  }\n  if (sourceIndex + blockSize > source.length) {\n    throw new Error('source indices to be copied are outside bounds');\n  }\n  if (targetIndex + blockSize > target.length) {\n    throw new Error('target array is too small to hold result');\n  }\n\n  for (let offset = 0; offset < blockSize; offset++) {\n    target[targetIndex + offset] = source[sourceIndex + offset];\n  }\n}\n\nexport class GemmUtil {\n  // will make sure input shapes are compatible for this op\n  // and return back the shape of the output in the form of a tuple\n  // will throw exception if the input shapes are not compatible\n  static getShapeOfGemmResult(\n      leftShape: readonly number[], transLeft: boolean, rightShape: readonly number[], transRight: boolean,\n      biasShape?: readonly number[]): readonly number[] {\n    if (leftShape.length !== 2 || rightShape.length !== 2) {\n      throw new Error('shape need to be of size 2');\n    }\n\n    let M: number;\n    let K: number;\n    let N: number;\n\n    if (transLeft) {\n      M = leftShape[1];\n      K = leftShape[0];\n    } else {\n      M = leftShape[0];\n      K = leftShape[1];\n    }\n\n    let kDim = -1;\n\n    if (transRight) {\n      N = rightShape[0];\n      kDim = 1;\n    } else {\n      N = rightShape[1];\n      kDim = 0;\n    }\n\n    if (rightShape[kDim] !== K) {\n      throw new Error('dimension mismatch');\n    }\n\n    if (M <= 0 || N <= 0 || K <= 0) {\n      throw new Error('invalid shape specified');\n    }\n\n    if (biasShape && !BroadcastUtil.isValidBroadcast(biasShape, [M, N])) {\n      throw new Error('gemm: invalid bias shape for broadcast');\n    }\n\n    return [M, N, K];\n  }\n}\n\nexport class ProtoUtil {\n  static tensorDataTypeFromProto(typeProto: onnx.TensorProto.DataType|\n                                 onnxruntime.experimental.fbs.TensorDataType): Tensor.DataType {\n    switch (typeProto) {\n      case onnx.TensorProto.DataType.INT8:\n        return 'int8';\n      case onnx.TensorProto.DataType.UINT8:\n        return 'uint8';\n      case onnx.TensorProto.DataType.BOOL:\n        return 'bool';\n      case onnx.TensorProto.DataType.INT16:\n        return 'int16';\n      case onnx.TensorProto.DataType.UINT16:\n        return 'uint16';\n      case onnx.TensorProto.DataType.INT32:\n        return 'int32';\n      case onnx.TensorProto.DataType.UINT32:\n        return 'uint32';\n      case onnx.TensorProto.DataType.FLOAT:\n        return 'float32';\n      case onnx.TensorProto.DataType.DOUBLE:\n        return 'float64';\n      case onnx.TensorProto.DataType.STRING:\n        return 'string';\n\n      // For INT64/UINT64, reduce their value to 32-bits.\n      // Should throw exception when overflow\n      case onnx.TensorProto.DataType.INT64:\n        return 'int32';\n      case onnx.TensorProto.DataType.UINT64:\n        return 'uint32';\n\n      default:\n        throw new Error(`unsupported data type: ${onnx.TensorProto.DataType[typeProto]}`);\n    }\n  }\n\n  static tensorDataTypeStringToEnum(type: string): onnx.TensorProto.DataType {\n    switch (type) {\n      case 'int8':\n        return onnx.TensorProto.DataType.INT8;\n      case 'uint8':\n        return onnx.TensorProto.DataType.UINT8;\n      case 'bool':\n        return onnx.TensorProto.DataType.BOOL;\n      case 'int16':\n        return onnx.TensorProto.DataType.INT16;\n      case 'uint16':\n        return onnx.TensorProto.DataType.UINT16;\n      case 'int32':\n        return onnx.TensorProto.DataType.INT32;\n      case 'uint32':\n        return onnx.TensorProto.DataType.UINT32;\n      case 'float16':\n        return onnx.TensorProto.DataType.FLOAT16;\n      case 'float32':\n        return onnx.TensorProto.DataType.FLOAT;\n      case 'float64':\n        return onnx.TensorProto.DataType.DOUBLE;\n      case 'string':\n        return onnx.TensorProto.DataType.STRING;\n      case 'int64':\n        return onnx.TensorProto.DataType.INT64;\n      case 'uint64':\n        return onnx.TensorProto.DataType.UINT64;\n\n      default:\n        throw new Error(`unsupported data type: ${type}`);\n    }\n  }\n\n  static tensorDimsFromProto(dims: Array<number|Long>): number[] {\n    // get rid of Long type for dims\n    return dims.map(d => Long.isLong(d) ? d.toNumber() : d);\n  }\n\n  static tensorValueTypeFromProto(valueType: onnx.TypeProto.ITensor): Graph.ValueType {\n    return {\n      tensorType: ProtoUtil.tensorDataTypeFromProto(valueType.elemType!),\n      shape: {dims: ProtoUtil.tensorDimsFromProto(valueType.shape!.dim!.map(d => d.dimValue!))}\n    };\n  }\n\n  static tensorDimsFromORTFormat(tensor: onnxruntime.experimental.fbs.Tensor) {\n    const dims = [];\n    for (let i = 0; i < tensor.dimsLength(); i++) {\n      dims.push(LongUtil.longToNumber(tensor.dims(i)!));\n    }\n    return dims;\n  }\n\n  static tensorAttributesFromORTFormat(node: onnxruntime.experimental.fbs.Node) {\n    const attributes = [];\n    for (let i = 0; i < node.attributesLength(); i++) {\n      attributes.push(node.attributes(i)!);\n    }\n    return attributes;\n  }\n}\n\nexport class LongUtil {\n  // This function is called to get a number from long type of data for attribute, dim, and ir version,\n  // which values are signed integers.\n  // To make it more generic, add an optional paramter to convert to a unsigned number.\n  static longToNumber(n: Long|flatbuffers.Long|number, unsigned?: boolean) {\n    if (Long.isLong(n)) {\n      return n.toNumber();\n    } else if (n instanceof flatbuffers.Long) {\n      return Long.fromValue({low: n.low, high: n.high, unsigned: unsigned ?? false}).toNumber();\n    }\n    return n;\n  }\n  static isLong(n: unknown) {\n    return Long.isLong(n) || n instanceof flatbuffers.Long;\n  }\n}\n\nexport class ShapeUtil {\n  static size(dims: readonly number[]): number {\n    return ShapeUtil.getSizeFromDimensionRange(dims, 0, dims.length);\n  }\n\n  // `axis` inclusive\n  static sizeFromDimension(dims: readonly number[], axis: number): number {\n    if (axis < 0 || axis > dims.length) {\n      throw new Error(`invalid dimension of ${axis} for sizeFromDimension as Tensor has ${dims.length} dimensions.`);\n    }\n    return ShapeUtil.getSizeFromDimensionRange(dims, axis, dims.length);\n  }\n\n  // `axis` exclusive\n  static sizeToDimension(dims: readonly number[], axis: number): number {\n    if (axis < 0 || axis > dims.length) {\n      throw new Error(`invalid dimension of ${axis} for sizeToDimension as Tensor has ${dims.length} dimensions.`);\n    }\n    return ShapeUtil.getSizeFromDimensionRange(dims, 0, axis);\n  }\n\n  static getSizeFromDimensionRange(dims: readonly number[], start: number, end: number): number {\n    let size = 1;\n    for (let i = start; i < end; i++) {\n      // safety check as this method is called by multiple other methods requiring size.\n      // size cannot be 0 or negative.\n      if (dims[i] <= 0) {\n        throw new Error(\n            // eslint-disable-next-line max-len\n            'cannot get valid size from specified dimension range. Most likely the range contains 0 or negative values in them.');\n      }\n      size *= dims[i];\n    }\n    return size;\n  }\n\n  static computeStrides(dims: readonly number[]): readonly number[] {\n    const rank = dims.length;\n    if (rank === 0) {\n      return [];\n    } else if (rank === 1) {\n      return [1];\n    }\n    const strides = new Array(rank);\n    strides[rank - 1] = 1;\n    strides[rank - 2] = dims[rank - 1];\n    for (let i = rank - 3; i >= 0; --i) {\n      strides[i] = strides[i + 1] * dims[i + 1];\n    }\n    return strides;\n  }\n\n  static transpose(dims: readonly number[]): readonly number[] {\n    const copy = dims.slice();\n    return copy.reverse();\n  }\n\n  static indicesToOffset(indices: readonly number[], strides: readonly number[], axis?: number): number {\n    if (axis === undefined) {\n      axis = indices.length;\n    }\n    let offset = 0;\n    for (let i = 0; i < axis; ++i) {\n      offset += strides[i] * indices[i];\n    }\n    return offset;\n  }\n\n  static offsetToIndices(offset: number, strides: readonly number[]): readonly number[] {\n    const rank = strides.length;\n    if (rank === 0) {\n      return [];\n    } else if (rank === 1) {\n      return [offset * strides[0]];\n    }\n    const indices: number[] = new Array(strides.length);\n    for (let i = 0; i < indices.length - 1; ++i) {\n      indices[i] = Math.floor(offset / strides[i]);\n      offset -= indices[i] * strides[i];\n    }\n    indices[indices.length - 1] = offset;\n    return indices;\n  }\n\n  /**\n   * normailze axis of range [-r, r) into [0, r).\n   */\n  static normalizeAxis(axis: number, tensorRank: number): number {\n    if (axis < -tensorRank && axis >= tensorRank) {\n      throw new Error('unsupported axis for this operation.');\n    }\n    return axis < 0 ? axis + tensorRank : axis;\n  }\n\n  static normalizeAxes(axes: readonly number[], tensorRank: number): number[] {\n    return axes.map(x => this.normalizeAxis(x, tensorRank));\n  }\n\n  // Increment an index into a tensor (in lexicographic\n  // ordering), wrapping around the specified upper_bound.\n  /**\n   * Increment an index into a tensor (in lexicographic ordering), wrapping around the specified upper_bound.\n   * @param index Given index to increment (Will be mutated)\n   * @param dims The dimensions of the tensor for which the given index corresponds to\n   * @param axisToIncrementOn The 1-indexed axis to increment on. If undefined, axisToIncrementOn == rank\n   */\n  static incrementIndex(index: number[], dims: readonly number[], axisToIncrementOn?: number) {\n    if (dims.length === 0 || index.length === 0) {\n      throw new Error('Index incrementing unsupported for scalar Tensor');\n    }\n    if (axisToIncrementOn === undefined) {\n      axisToIncrementOn = dims.length;\n    } else {\n      if (axisToIncrementOn <= 0 || axisToIncrementOn > dims.length) {\n        throw new Error('Incorrect axis to increment on');\n      }\n    }\n\n    for (let k = axisToIncrementOn - 1; k >= 0; --k) {\n      index[k]++;\n      if (index[k] < dims[k]) {\n        break;\n      }\n      index[k] = 0;\n    }\n  }\n\n  /**\n   * Produces a new dimensions array based on the values in the 'originalDimensions' and 'shape' array\n   * Used in Reshape\n   * @param originalDims Original Shape array\n   * @param shapeHints array containing values to compute the new dimensions\n   * For example:\n   * originalDims = [2,2] and shapeHints = [0,-1] will return [2,2]\n   * originalDims = [2,2] and shapeHints = [4] will return [4]\n   * originalDims = [2,2] and shapeHints = [5] will throw an exception\n   * https://github.com/onnx/onnx/blob/main/docs/Operators.md#Reshape\n   */\n\n  static calculateReshapedDims(originalDims: readonly number[], shapeHints: ArrayLike<number>): number[] {\n    // reshape to a Scalar Tensor\n    if (shapeHints.length === 0) {\n      if (originalDims.length === 0 || ShapeUtil.size(originalDims) === 1) {\n        return [];\n      } else {\n        throw new Error('cannot reshape to a scalar Tensor');\n      }\n    }\n\n    const nDims = shapeHints.length;\n    const reshapedDims = new Array<number>(nDims);\n    let unknownDimension = -1;\n    let newTensorSize = 1;\n    for (let i = 0; i < nDims; i++) {\n      if (shapeHints[i] < -1) {\n        throw new Error('a dimension in shape hints cannot be less than -1');\n      }\n      if (shapeHints[i] === -1) {\n        if (unknownDimension !== -1) {\n          throw new Error('at most one dimension in shape hints can be -1');\n        }\n        unknownDimension = i;\n      } else {\n        if (shapeHints[i] === 0) {\n          if (i >= originalDims.length) {\n            throw new Error('the dimension with value zero exceeds the dimension size of the input tensor');\n          }\n          reshapedDims[i] = originalDims[i];\n        } else {\n          reshapedDims[i] = shapeHints[i];\n        }\n        newTensorSize *= reshapedDims[i];\n      }\n    }\n\n    const oldTensorSize = ShapeUtil.size(originalDims);\n    if (unknownDimension !== -1) {\n      if (oldTensorSize % newTensorSize !== 0) {\n        throw new Error(`the input tensor cannot be reshaped to the requested shape. Input shape: [${\n            originalDims}] Output shape: [${shapeHints}]`);\n      }\n      reshapedDims[unknownDimension] = oldTensorSize / newTensorSize;\n    }\n    // validate sizes from originalDims and reshapedDims match\n    else {\n      if (newTensorSize !== oldTensorSize) {\n        throw new Error('reshapedDims and originalDims don\\'t have matching sizes');\n      }\n    }\n    return reshapedDims;\n  }\n\n  /**\n   * Sorts a given array based on the indices in the Perm array\n   * Used in Transpose\n   * @param a Array to be sorted such as dims or strides\n   * @param perm Perm given; if null a will be reversed\n   */\n  static sortBasedOnPerm(a: readonly number[], perm?: readonly number[]): readonly number[] {\n    if (perm) {\n      return perm.map((v) => a[v]);\n    } else {\n      return a.slice().reverse();\n    }\n  }\n\n  /**\n   * Pads a given shape according to the padding values\n   * @param dims shape of the Tensor to be padded\n   * @param pad pad values\n   */\n  static padShape(dims: readonly number[], pad: readonly number[]): readonly number[] {\n    const rank = dims.length;\n    return dims.map((v, i) => v + pad[i] + pad[i + rank]);\n  }\n\n  /**\n   * Determines if the two shapes are identical\n   * @param shape1\n   * @param shape2\n   */\n  static areEqual(shape1: readonly number[], shape2: readonly number[]): boolean {\n    if (shape1.length !== shape2.length) {\n      return false;\n    }\n    return shape1.every((v, i) => v === shape2[i]);\n  }\n\n  /**\n   * Validates if the given `dims` or `shape` is valid in ONNX.js context and returns data size\n   * @param dims - input `dims` that needs to be checked\n   */\n  static validateDimsAndCalcSize(dims: readonly number[]): number {\n    if (dims.length > 6) {\n      throw new TypeError('Only rank 0 to 6 is supported for tensor shape.');\n    }\n    let size = 1;\n    for (const n of dims) {\n      if (!Number.isInteger(n)) {\n        throw new TypeError(`Invalid shape: ${n} is not an integer`);\n      }\n      if (n < 0 || n > 2147483647) {\n        throw new TypeError(`Invalid shape: length ${n} is not allowed`);\n      }\n      size *= n;\n    }\n    return size;\n  }\n\n  /**\n   * Determines the shape of output tensor y = flatten(x, axis)\n   * @param dims - shape of input tensor\n   * @param axis - flatten axis, in the range [-r, r]\n   */\n  static flattenShape(dims: readonly number[], axis: number): readonly number[] {\n    if (axis < 0) {\n      axis += dims.length;\n    }\n    const total = dims.reduce((x, y) => x * y, 1);\n    const right = dims.slice(axis).reduce((x, y) => x * y, 1);\n    const outputDims = [total / right, right];\n\n    return outputDims;\n  }\n\n  /**\n   * Determines the shape of output tensor y = squeeze(x, axes)\n   * @param dims - shape of input tensor\n   * @param axes - squeeze axes\n   */\n  static squeezeShape(dims: readonly number[], axes: readonly number[]): readonly number[] {\n    const outputDims = new Array<number>();\n\n    // sanity check\n    axes = ShapeUtil.normalizeAxes(axes, dims.length);\n\n    for (let i = 0; i < dims.length; i++) {\n      const inSqueezeList = axes.indexOf(i) >= 0;\n      if (inSqueezeList && dims[i] !== 1) {\n        throw new Error('squeeze an axis of size different than 1');\n      }\n\n      if ((axes.length === 0 && dims[i] > 1) || (axes.length > 0 && !inSqueezeList)) {\n        outputDims.push(dims[i]);\n      }\n    }\n\n    return outputDims;\n  }\n\n  /**\n   * Determines the shape of output tensor y = unsqueeze(x, axes)\n   * @param dims - shape of input tensor\n   * @param axes - unsqueeze axes\n   */\n  static unsqueezeShape(dims: readonly number[], axes: readonly number[]): readonly number[] {\n    const outputDims = new Array<number>(dims.length + axes.length);\n\n    // initialize the array elements to 0\n    outputDims.fill(0);\n\n    // set all axes indices to 1 in outputDims and check for duplicates\n    for (let i = 0; i < axes.length; i++) {\n      const axis = ShapeUtil.normalizeAxis(axes[i], outputDims.length);\n      if (axis >= outputDims.length) {\n        throw new Error('\\'axes\\' has an out of range axis');\n      }\n      if (outputDims[axis] !== 0) {\n        throw new Error('\\'axes\\' has a duplicate axis');\n      }\n\n      outputDims[axis] = 1;\n    }\n\n    // fill in the zero entries of outputDims with the input tensor's shape\n    let inputDimsIterator = 0;\n    for (let i = 0; i < outputDims.length; i++) {\n      if (outputDims[i] === 0) {\n        outputDims[i] = dims[inputDimsIterator++];\n      }\n    }\n\n    // sanity check assertion. 'inputDimsIterator'\n    // should be equal to the length of 'dims'\n    if (inputDimsIterator !== dims.length) {\n      throw new Error('the unsqueezed dimension could not be established');\n    }\n\n    return outputDims;\n  }\n}\n\n// bunch of helper methods that do a variety of math operations\nexport class MathUtil {\n  // y = (x*x) + y\n  static sqr(\n      target: number[]|Tensor.NumberType, source: number[]|Tensor.NumberType, targetIndex: number, sourceIndex: number,\n      blockSize: number) {\n    if (sourceIndex < 0 || sourceIndex >= source.length) {\n      throw new Error('sourceIndex out of bounds');\n    }\n    if (targetIndex < 0 || targetIndex >= target.length) {\n      throw new Error('targetIndex out of bounds');\n    }\n    if (sourceIndex + blockSize > source.length) {\n      throw new Error('source indices to be copied are outside bounds');\n    }\n    if (targetIndex + blockSize > target.length) {\n      throw new Error('target array is too small to hold result');\n    }\n\n    for (let offset = 0; offset < blockSize; offset++) {\n      target[targetIndex + offset] += Math.pow(source[sourceIndex + offset], 2);\n    }\n  }\n\n  // y = ax + y\n  static axpy(\n      target: number[]|Tensor.NumberType, source: number[]|Tensor.NumberType, targetIndex: number, sourceIndex: number,\n      blockSize: number, alpha: number) {\n    if (sourceIndex < 0 || sourceIndex >= source.length) {\n      throw new Error('sourceIndex out of bounds');\n    }\n    if (targetIndex < 0 || targetIndex >= target.length) {\n      throw new Error('targetIndex out of bounds');\n    }\n    if (sourceIndex + blockSize > source.length) {\n      throw new Error('source indices to be copied are outside bounds');\n    }\n    if (targetIndex + blockSize > target.length) {\n      throw new Error('target array is too small to hold result');\n    }\n\n    for (let offset = 0; offset < blockSize; offset++) {\n      target[targetIndex + offset] += (alpha * source[sourceIndex + offset]);\n    }\n  }\n\n  // y = pow(x, b)\n  static powx(\n      target: number[]|Tensor.NumberType, source: number[]|Tensor.NumberType, targetIndex: number, sourceIndex: number,\n      blockSize: number, b: number) {\n    if (sourceIndex < 0 || sourceIndex >= source.length) {\n      throw new Error('sourceIndex out of bounds');\n    }\n    if (targetIndex < 0 || targetIndex >= target.length) {\n      throw new Error('targetIndex out of bounds');\n    }\n    if (sourceIndex + blockSize > source.length) {\n      throw new Error('source indices to be copied are outside bounds');\n    }\n    if (targetIndex + blockSize > target.length) {\n      throw new Error('target array is too small to hold result');\n    }\n\n    for (let offset = 0; offset < blockSize; offset++) {\n      target[targetIndex + offset] = Math.pow(source[sourceIndex + offset], b);\n    }\n  }\n\n  // y = x * y\n  static mul(\n      target: number[]|Tensor.NumberType, source: number[]|Tensor.NumberType, targetIndex: number, sourceIndex: number,\n      blockSize: number) {\n    if (sourceIndex < 0 || sourceIndex >= source.length) {\n      throw new Error('sourceIndex out of bounds');\n    }\n    if (targetIndex < 0 || targetIndex >= target.length) {\n      throw new Error('targetIndex out of bounds');\n    }\n    if (sourceIndex + blockSize > source.length) {\n      throw new Error('source indices to be copied are outside bounds');\n    }\n    if (targetIndex + blockSize > target.length) {\n      throw new Error('target array is too small to hold result');\n    }\n\n    for (let offset = 0; offset < blockSize; offset++) {\n      target[targetIndex + offset] = (source[sourceIndex + offset] * target[targetIndex + offset]);\n    }\n  }\n}\n\nexport class SplitUtil {\n  /**\n   * Calculates new Shapes from existing one and the splits given along the axis provides\n   * @param dims Shape of the Tensor to be splitted into two or more Shapes\n   * @param axis The dimension along which the Tensor will be split\n   * @param splits Offsets for the start of each split\n   */\n  static splitShape(dims: readonly number[], axis: number, split: number[], numOutputs?: number):\n      [number[][], number[]] {\n    if (split.length === 0) {\n      if (!numOutputs) {\n        throw new Error('need to know number of outputs when the \\'split\\' attribute is not specified');\n      }\n      SplitUtil.determineSplit(dims[axis], numOutputs, split);\n    }\n\n    const shapes: number[][] = [];\n    const offsets = [0];\n    for (let i = 0; i < split.length; ++i) {\n      if (i !== 0) {\n        offsets.push(offsets[i - 1] + split[i - 1]);\n      }\n      const shape = dims.slice();\n      shape[axis] = split[i];\n      shapes.push(shape);\n    }\n    return [shapes, offsets];\n  }\n\n  static determineSplit(numElementsAlongAxis: number, numOutputs: number, split: number[]) {\n    // If 'split' is not specified by the user, we need to partition the number of elements equally among the outputs\n    if (numElementsAlongAxis % numOutputs !== 0) {\n      throw new Error('cannot split tensor to equal sized parts');\n    }\n    for (let i = 0; i < numOutputs; ++i) {\n      split.push(numElementsAlongAxis / numOutputs);\n    }\n  }\n}\n\nexport class ReduceUtil {\n  /**\n   * Perform reduce operations on the specific operator\n   * @param a Input tensor data\n   * @param axes The dimensions along which the Tensor will be reduced\n   * @param keepdims If set to true, the axes which are reduced are left in the\n   *    result as dimensions with size one.\n   * @param op1 The operation to be performed on each element in the tensor\n   * @param op2 The operation to be performed between elements in the tensor\n   */\n  static calcReduce(\n      a: Tensor, axes: number[], keepdims: boolean, op1: (b: number) => number,\n      op2: (a: number, b: number) => number): Tensor {\n    const dims = a.dims.slice(0);\n    // if axes is not set, perform reduce on all axes\n    if (axes.length === 0) {\n      dims.forEach((d, ind) => axes.push(ind));\n    }\n    // get a temporary broadcastable output shape\n    const outputDims = ReduceUtil.calcReduceShape(dims, axes, true);\n\n    // loop through the output and calculate result one by one\n    const size = ShapeUtil.size(outputDims);\n    const y = new Tensor(outputDims, a.type);\n    const strides = ShapeUtil.computeStrides(outputDims);\n    const inputStrides = ShapeUtil.computeStrides(dims);\n    const indicesY = new Array(dims.length);\n    for (let i = 0; i < size; i++) {\n      const indices = ShapeUtil.offsetToIndices(i, strides);\n      // map index\n      BroadcastUtil.fillIndex(indices, dims, indicesY);\n      y.set(\n          indices,\n          ReduceUtil.calcReduceByAxis(\n              a.numberData, axes, dims, 0, ShapeUtil.indicesToOffset(indicesY, inputStrides), op1, op2));\n    }\n\n    if (keepdims) {\n      return y;\n    } else {\n      // keepdims == 0, calculate the expected shape\n      return new Tensor(\n          ReduceUtil.calcReduceShape(dims, axes, keepdims), y.type, undefined, undefined, y.data, y.dataId);\n    }\n  }\n\n  /**\n   * Perform reduce operations on the specific operator on specific axes\n   * @param a Input tensor data\n   * @param axes The dimensions along which the Tensor will be reduced\n   * @param dims The input dimension.\n   * @param curAxisInd Index in axes specifying the current dimension along\n   *      which the tensor will be reduced\n   * @param pos The current index of element to perform operation\n   * @param op1 The operation to be performed on each element in the tensor\n   * @param op2 The operation to be performed between elements in the tensor\n   */\n  static calcReduceByAxis(\n      input: Tensor.NumberType, axes: number[], dims: number[], curAxisInd: number, pos: number,\n      op1: (b: number) => number, op2: (a: number, b: number) => number): number {\n    let res = 0;\n    if (curAxisInd >= axes.length) {\n      return op1(input[pos]);\n    }\n    const axis = axes[curAxisInd];\n    const step = axis >= dims.length ? 1 : ShapeUtil.size(dims.slice(axis + 1));\n    for (let i = 0; i < dims[axis]; i++) {\n      res = i === 0 ? ReduceUtil.calcReduceByAxis(input, axes, dims, curAxisInd + 1, pos, op1, op2) :\n                      op2(res, ReduceUtil.calcReduceByAxis(input, axes, dims, curAxisInd + 1, pos, op1, op2));\n      pos += step;\n    }\n    return res;\n  }\n\n  /**\n   * Calculate the expected shape of a reduce operation\n   * @param dims The input tensor dimension\n   * @param axes The dimensions along which the Tensor will be reduced\n   * @param keepdims If set to true, the axes which are reduced are left in the\n   *    result as dimensions with size one.\n   */\n  static calcReduceShape(dims: readonly number[], axes: readonly number[], keepDims: boolean): number[] {\n    const outputDims = dims.slice();\n    for (let i = 0; i < axes.length; i++) {\n      if (keepDims) {\n        outputDims[axes[i]] = 1;\n      } else {\n        outputDims[axes[i]] = 0;\n      }\n    }\n    return outputDims.filter(dim => dim !== 0);\n  }\n}\n\nexport class PoolConvUtil {\n  /**\n   * Adjust the kernel, strides, pads to correct rank. Set to default value if not present\n   * @param isGlobalOperator If true, perform global pooling.\n   * @param inputDims The input tensor dimension.\n   * @param kernelShape The size of the kernel along each axis.\n   * @param strides Stride along each axis.\n   * @param dilations Dilation along each axis.\n   * @param pads Padding for the beginning and ending along each axis.\n   */\n  static adjustPoolAttributes(\n      isGlobalOperator: boolean, inputDims: readonly number[], kernelShape: number[], strides: number[],\n      dilations: number[], pads: number[]) {\n    if (!isGlobalOperator && kernelShape.length !== inputDims.length - 2) {\n      throw new Error('length of specified kernel shapes should be 2 less than length of input dimensions');\n    }\n\n    if (isGlobalOperator) {\n      // adjust kernel shape to cover the input dims\n      for (let dim = 0; dim < inputDims.length - 2; dim++) {\n        if (dim >= kernelShape.length) {\n          kernelShape.push(inputDims[dim + 2]);\n        } else {\n          kernelShape[dim] = inputDims[dim + 2];\n        }\n      }\n    }\n\n    // adjust strides length to match kernel shape length\n    for (let dim = 0; dim < kernelShape.length; dim++) {\n      if (dim < strides.length) {\n        if (strides[dim] < 0) {\n          throw new Error('strides should be greater than or equal to 1');\n        }\n      } else {\n        strides.push(1);\n      }\n    }\n\n    // adjust dilation value\n    for (let dim = 0; dim < kernelShape.length; dim++) {\n      if (dim < dilations.length) {\n        if (dilations[dim] < 0) {\n          throw new Error('dilations should be greater than or equal to 1');\n        }\n      } else {\n        dilations.push(1);\n      }\n    }\n\n    // adjust pads length to match 2 * kernel shape length\n    for (let dim = 0; dim < kernelShape.length * 2; dim++) {\n      if (dim < pads.length) {\n        if (pads[dim] < 0) {\n          throw new Error('pad should be greater than or equal to 1');\n        }\n      } else {\n        pads.push(0);\n      }\n    }\n\n    // sanity checks for values in kernel shapes and pads\n    for (let dim = 0; dim < kernelShape.length; dim++) {\n      if (kernelShape[dim] <= 0) {\n        throw new Error('kernel shapes need to be greater than 0');\n      }\n\n      if (pads[dim] >= kernelShape[dim] || pads[dim + kernelShape.length] >= kernelShape[dim]) {\n        throw new Error('pads should be smaller than kernel');\n      }\n    }\n  }\n\n  // adjust pad values based on 'autoPad' attribute\n  static adjustPadsBasedOnAutoPad(\n      inputDims: readonly number[], strides: readonly number[], dilations: readonly number[],\n      kernelShape: readonly number[], pads: number[], autoPad?: string) {\n    if (!autoPad) {\n      return;\n    }\n\n    if (pads.length !== 2 * (inputDims.length - 2)) {\n      throw new Error('length of pads should be twice the length of data dimensions');\n    }\n\n    if (strides.length !== (inputDims.length - 2)) {\n      throw new Error('length of strides should be the length of data dimensions');\n    }\n\n    if (kernelShape.length !== (inputDims.length - 2)) {\n      throw new Error('length of kernel shapes should be the length of data dimensions');\n    }\n\n    for (let dim = 0; dim < inputDims.length - 2; dim++) {\n      PoolConvUtil.adjustPadAndReturnShape(\n          inputDims[dim + 2], strides[dim], dilations[dim], kernelShape[dim], pads, dim, dim + inputDims.length - 2,\n          autoPad);\n    }\n  }\n\n  /**\n   * Calculate the output shape for Pool ops based on input attributes. (Should be used only for Pool ops)\n   * @param isGlobalOperator If true, perform global pooling.\n   * @param inputDims The input tensor dimension. (inputs[0].dims)\n   * @param strides Stride along each axis.\n   * @param dilations Dilation along each axis.\n   * @param kernelShape The size of the kernel along each axis.\n   * @param pads Padding for the beginning and ending along each axis.\n   * @param autoPad DEPRECATED attribute supported for legacy models. Specifies how to implicitly calculate pads in each\n   *     dimension. Can take values NOTSET, SAME_UPPER, SAME_LOWER, or VALID.\n   */\n  static computePoolOutputShape(\n      isGlobalOperator: boolean, inputDims: readonly number[], strides: number[], dilations: number[],\n      kernelShape: number[], pads: number[], autoPad?: string): number[] {\n    if (inputDims.length <= 0) {\n      throw new Error('input shape must be of size greater than 0');\n    }\n\n    // Add batch size and number of channels of output\n    const outputDims = [inputDims[0], inputDims[1]];\n\n    PoolConvUtil.computeShapeHelper(\n        isGlobalOperator, inputDims, outputDims, strides, dilations, kernelShape, pads, autoPad);\n    return outputDims;\n  }\n\n  /**\n   * Calculate the output shape for Conv op based on input attributes. (Should be used only for Conv op)\n   * @param inputDims The input tensor dimension. (inputs[0].dims)\n   * @param filterDims The filter tensor dimension. (inputs[1].dims)\n   * @param strides Stride along each axis.\n   * @param kernelShape The size of the kernel along each axis.\n   * @param pads Padding for the beginning and ending along each axis.\n   * @param autoPad DEPRECATED attribute supported for legacy models. Specifies how to implicitly calculate pads in each\n   *     dimension. Can take values NOTSET, SAME_UPPER, SAME_LOWER, or VALID.\n   */\n  static computeConvOutputShape(\n      inputDims: readonly number[], filterDims: readonly number[], strides: number[], dilations: number[],\n      kernelShape: number[], pads: number[], autoPad?: string): number[] {\n    if (inputDims.length <= 0 || filterDims.length <= 0) {\n      throw new Error('invalid input tensor dims or invalid filter tensor dims');\n    }\n\n    // Add batch size and number of channels of output\n    const outputDims = [inputDims[0], filterDims[0]];\n\n    PoolConvUtil.computeShapeHelper(false, inputDims, outputDims, strides, dilations, kernelShape, pads, autoPad);\n    return outputDims;\n  }\n\n  // will compute output shapes for data dimensions ONLY (i.e.) no batch size and channels\n  // called by computePoolOutputShape() and computeConvOutputShape()\n  // adjust pads based on 'autoPad' attribute prior to shape computation\n  private static computeShapeHelper(\n      isGlobalOperator: boolean, inputDims: readonly number[], outputDims: number[], strides: readonly number[],\n      dilations: readonly number[], kernelShape: readonly number[], pads: number[], autoPad?: string) {\n    if (isGlobalOperator) {\n      for (let dim = 0; dim < inputDims.length - 2; dim++) {\n        outputDims.push(1);\n      }\n    } else {\n      for (let dim = 0; dim < inputDims.length - 2; dim++) {\n        outputDims.push(PoolConvUtil.adjustPadAndReturnShape(\n            inputDims[dim + 2], strides[dim], dilations[dim], kernelShape[dim], pads, dim, dim + inputDims.length - 2,\n            autoPad));\n      }\n    }\n  }\n\n  // helper for computeShapeHelper() and adjustPadsBasedOnAutoPad()\n  // adjusts pad value for given 'autoPad' string and computes output shape along a particular dimension\n  private static adjustPadAndReturnShape(\n      inSize: number, stride: number, dilation: number, kernel: number, pads: number[], padHeadIndex: number,\n      padTailIndex: number, autoPad?: string): number {\n    const dkernel = dilation * (kernel - 1) + 1;\n    if (autoPad && autoPad !== 'NOTSET') {\n      switch (autoPad) {\n        case 'VALID':\n          pads[padHeadIndex] = 0;\n          pads[padTailIndex] = 0;\n          return Math.floor(((inSize - dkernel) / stride) + 1);\n        case 'SAME_LOWER':\n        case 'SAME_UPPER':\n          if (dilation !== 1) {\n            throw new Error('Dilation not supported for SAME_UPPER or SAME_LOWER');\n          } else {\n            const legacyTargetSize = (inSize + stride - 1) / stride;\n            const padNeeded = (legacyTargetSize - 1) * stride + kernel - inSize;\n            pads[padHeadIndex] =\n                (autoPad === 'SAME_LOWER') ? Math.floor((padNeeded + 1) / 2) : Math.floor(padNeeded / 2);\n            pads[padTailIndex] = padNeeded - pads[padHeadIndex];\n            return Math.floor(((inSize + padNeeded - kernel) / stride) + 1);\n          }\n        default:\n          throw new Error('Unsupported AutoPad type');\n      }\n    } else {\n      return Math.floor(((inSize + pads[padHeadIndex] + pads[padTailIndex] - dkernel) / stride) + 1);\n    }\n  }\n}\n\nexport const MIN_CLIP = -3.4028234663852886e+38;\nexport const MAX_CLIP = 3.4028234663852886e+38;\n\nexport function decodeUtf8String(buffer: Uint8Array): string {\n  return new TextDecoder().decode(buffer);\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Env} from 'onnxruntime-common';\n\nimport {configureLogger, LOG_DEBUG} from './log';\nimport {TensorView} from './tensor';\nimport {createGpuDataManager, GpuDataManager} from './webgpu/gpu-data-manager';\nimport {RunFunction, WEBGPU_OP_RESOLVE_RULES} from './webgpu/op-resolve-rules';\nimport {ProgramManager} from './webgpu/program-manager';\nimport {ComputeContext, GpuData, GpuDataType, ProgramInfo, ProgramInfoLoader} from './webgpu/types';\n\n/**\n * get a unique key representing the program from the program info,input shapes and types.\n *\n * @returns a unique key is a shorter string than the shader source, which contains all the information to identify a\n * program. if the key is the same, the program shader source should be the same, so we can reuse the program.\n *\n */\nconst getProgramInfoUniqueKey =\n    (programInfo: ProgramInfo|ProgramInfoLoader, inputTensorShapes: ReadonlyArray<TensorView['dims']>,\n     inputGpuDataTypes: readonly GpuDataType[]): string => {\n      const inputTensorShapesToString = inputTensorShapes.map(d => `${d.join(',')}`).join('_');\n      const inputGpuDataTypesToString = inputGpuDataTypes.join('_');\n      let key = programInfo.name;\n      if (programInfo.cacheHint) {\n        key += '[' + programInfo.cacheHint + ']';\n      }\n      key += ':' + inputTensorShapesToString + ';' + inputGpuDataTypesToString;\n      return key;\n    };\n\n/**\n * this class is designed to store status and being used as a singleton for JSEP. It will be passed to jsepInit() as\n * the first parameter so that it is stored for future use.\n */\nexport class WebGpuBackend {\n  device: GPUDevice;\n  /**\n   * an instance of GpuDataManager to manage a GpuDataId -> GpuBuffer mapping\n   */\n  gpuDataManager: GpuDataManager;\n  /**\n   * an instance of ProgramManager to build and run WebGPU compute shader program, and manage a ProgramKey -> Program\n   * artifacts mapping\n   */\n  programManager: ProgramManager;\n\n  /**\n   * representing the kernel ID of which is currently being computed (CPU code perspective).\n   * `null` means no kernel is being computed.\n   * only one kernel can be computed at a moment.\n   */\n  currentKernelId: number|null = null;\n  /**\n   * a list of temporary GPU data for the current kernel. should release when the kernel done computation.\n   */\n  private temporaryData: GpuData[];\n  /**\n   * a KernelID -> a GPU data list, which stores persistent GPU data owned by the specific kernel.\n   */\n  private kernelPersistentData: Map<number, GpuData[]>;\n  /**\n   * a KernelID -> a custom data, which stores custom data owned by the specific kernel.\n   */\n  private kernelCustomData: Map<number, {[key: string]: unknown}>;\n  /**\n   * get the custom data of the current kernel\n   */\n  get currentKernelCustomData(): {[key: string]: unknown} {\n    if (this.currentKernelId === null) {\n      throw new Error('currentKernelCustomData(): currentKernelId is null. (should not happen)');\n    }\n\n    let data = this.kernelCustomData.get(this.currentKernelId);\n    if (!data) {\n      data = {};\n      this.kernelCustomData.set(this.currentKernelId, data);\n    }\n\n    return data;\n  }\n\n  /**\n   * a KernelID -> kernel info mapping. value is [ name, run function, [optional] preprocess_attribute_once function ]\n   */\n  kernels: Map<number, [string, RunFunction, [((attribute: unknown) => unknown) | undefined, unknown]]>;\n\n  commandEncoder: GPUCommandEncoder|null = null;\n  computePassEncoder: GPUComputePassEncoder|null = null;\n  pendingDispatchNumber = 0;\n\n  profilingEnabled = false;\n  profilingQuerySet: GPUQuerySet;\n  profilingTimeBase?: bigint;\n\n  async initialize(env: Env): Promise<void> {\n    if (!navigator.gpu) {\n      // WebGPU is not available.\n      throw new Error('WebGpuBackend: WebGPU is not available.');\n    }\n\n    const adapter = await navigator.gpu.requestAdapter();\n    if (!adapter) {\n      throw new Error('WebGpuBackend: Failed to get GPU adapter.');\n    }\n\n    const deviceDescriptor: GPUDeviceDescriptor = {\n      requiredLimits: {\n        maxComputeWorkgroupStorageSize: adapter.limits.maxComputeWorkgroupStorageSize,\n        maxComputeWorkgroupsPerDimension: adapter.limits.maxComputeWorkgroupsPerDimension,\n        maxStorageBufferBindingSize: adapter.limits.maxStorageBufferBindingSize,\n      }\n    };\n    // WebGPU Spec: Timestamp Queries Inside Passes\n    // https://github.com/gpuweb/gpuweb/blob/main/proposals/timestamp-query-inside-passes.md\n    if (adapter.features.has('timestamp-query-inside-passes') && env.webgpu.profilingMode === 'default') {\n      this.profilingEnabled = true;\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      deviceDescriptor.requiredFeatures = ['timestamp-query-inside-passes' as any];\n    }\n\n    this.device = await adapter.requestDevice(deviceDescriptor);\n    this.gpuDataManager = createGpuDataManager(this);\n    this.programManager = new ProgramManager(this);\n    this.kernels = new Map();\n    this.kernelPersistentData = new Map();\n    this.kernelCustomData = new Map();\n\n    // set up flags for logger\n    configureLogger(env.logLevel!, !!env.debug);\n\n    // TODO: set up flags\n\n    this.device.onuncapturederror = ev => {\n      if (ev.error instanceof GPUValidationError) {\n        // eslint-disable-next-line no-console\n        console.error(`An uncaught WebGPU validation error was raised: ${ev.error.message}`);\n      }\n    };\n\n    if (this.profilingEnabled) {\n      this.profilingQuerySet = this.device.createQuerySet({\n        type: 'timestamp',\n        count: 2,\n      });\n    }\n  }\n\n  dispose(): void {\n    // currently, we do not do anything in this function. In all known use cases, we don't have the requirement to\n    // actually dispose the WebGpuBackend instance, because it's always used as a singleton.\n    //\n    // revisit this place if we get real requirement to dispose the instance.\n  }\n\n  getCommandEncoder(): GPUCommandEncoder {\n    if (!this.commandEncoder) {\n      this.commandEncoder = this.device.createCommandEncoder();\n    }\n    return this.commandEncoder;\n  }\n\n  getComputePassEncoder(): GPUComputePassEncoder {\n    if (!this.computePassEncoder) {\n      this.computePassEncoder = this.getCommandEncoder().beginComputePass();\n    }\n    return this.computePassEncoder;\n  }\n\n  endComputePass(): void {\n    if (this.computePassEncoder) {\n      this.computePassEncoder.end();\n      this.computePassEncoder = null;\n    }\n  }\n\n  flush(): void {\n    this.endComputePass();\n    this.device.queue.submit([this.getCommandEncoder().finish()]);\n    this.gpuDataManager.refreshPendingBuffers();\n    this.commandEncoder = null;\n    this.pendingDispatchNumber = 0;\n  }\n\n  /**\n   * run a WebGPU program.\n   * @param program either a ProgramInfo instance containing metadata including the shader code, or a function that\n   * can be called and return a ProgramInfo instance\n   * @param inputs a TensorView array. each element represents a value already exists in GPU.\n   * @param outputIndices an indices array. each element can be either -1 (temporary data), -2 (persistent data) or an\n   * index to the kernel's output.\n   * @param createKernelOutput a callback function that create a value to kernel's output with the given index\n   * @param createIntermediateOutput a callback function that create a value as a intermediate value, either temporary\n   * or persistent (owned by the current kernel)\n   * @returns a TensorView array representing the result.\n   */\n  run(program: ProgramInfoLoader|ProgramInfo, inputs: readonly TensorView[], outputIndices: readonly number[],\n      createKernelOutput: (index: number, dataType: number, dims: readonly number[]) => TensorView,\n      createIntermediateOutput: (dataType: number, dims: readonly number[]) => TensorView): TensorView[] {\n    if (inputs.length !== program.inputTypes.length) {\n      throw new Error(`Input size must be equal to ${program.inputTypes.length}.`);\n    }\n\n    // create info for inputs\n    const inputDatas: GpuData[] = [];\n    for (let i = 0; i < inputs.length; ++i) {\n      const gpuData = this.gpuDataManager.get(inputs[i].data);\n      if (!gpuData) {\n        throw new Error(`no GPU data for input: ${inputs[i].data}`);\n      }\n      inputDatas[i] = gpuData;\n    }\n\n    const key = getProgramInfoUniqueKey(program, inputs.map(i => i.dims), inputDatas.map(i => i.type));\n    let artifact = this.programManager.getArtifact(key);\n    const programInfo = artifact ?\n        artifact.programInfo :\n        (typeof (program as ProgramInfoLoader).get === 'function' ? (program as ProgramInfoLoader).get() :\n                                                                    (program as ProgramInfo));\n\n    // check output indices\n    const validatedOutputIndices = outputIndices.length === 0 ? programInfo.outputs.map((_, i) => i) : outputIndices;\n    if (validatedOutputIndices.length !== programInfo.outputs.length) {\n      throw new Error(`Output size ${validatedOutputIndices.length} must be equal to ${programInfo.outputs.length}.`);\n    }\n\n    // create info for outputs\n    const outputTensorViews: TensorView[] = [];\n    const outputDatas: GpuData[] = [];\n    for (let i = 0; i < programInfo.outputs.length; ++i) {\n      // value -1 and -2 are used for creating temporary and persistent outputs. so -2, -1 and 0, 1, 2, ... are valid\n      // output indices. see type definition of ComputeContextInputsOutputsMapping for more details.\n      if (!Number.isInteger(validatedOutputIndices[i]) || validatedOutputIndices[i] < -2 ||\n          validatedOutputIndices[i] >= programInfo.outputs.length) {\n        throw new Error(`Invalid output index: ${validatedOutputIndices[i]}`);\n      }\n      const isTemporary = validatedOutputIndices[i] === -1;\n      const isPersistent = validatedOutputIndices[i] === -2;\n      const tensorView = (isTemporary || isPersistent) ?\n          createIntermediateOutput(programInfo.outputs[i].dataType, programInfo.outputs[i].dims) :\n          createKernelOutput(validatedOutputIndices[i], programInfo.outputs[i].dataType, programInfo.outputs[i].dims);\n      const gpuData = this.gpuDataManager.get(tensorView.data);\n      if (!gpuData) {\n        throw new Error(`no GPU data for output: ${tensorView.data}`);\n      }\n      if (isTemporary) {\n        this.temporaryData.push(gpuData);\n      }\n      if (isPersistent) {\n        let persistentData = this.kernelPersistentData.get(this.currentKernelId!);\n        if (!persistentData) {\n          persistentData = [];\n          this.kernelPersistentData.set(this.currentKernelId!, persistentData);\n        }\n        persistentData.push(gpuData);\n      }\n      outputTensorViews.push(tensorView);\n      outputDatas.push(gpuData);\n    }\n\n    const normalizedDispatchGroup = this.programManager.normalizeDispatchGroupSize(programInfo.dispatchGroup(inputs));\n\n    if (!artifact) {\n      artifact = this.programManager.build(programInfo, normalizedDispatchGroup);\n      this.programManager.setArtifact(key, artifact);\n    }\n\n    LOG_DEBUG(\n        'info',\n        () => `[ProgramManager] run \"${programInfo.name}\" (key=${key}) with ${normalizedDispatchGroup[0]}x${\n            normalizedDispatchGroup[1]}x${normalizedDispatchGroup[2]}`);\n    this.programManager.run(artifact, inputDatas, outputDatas, normalizedDispatchGroup);\n\n    return outputTensorViews;\n  }\n\n  upload(gpuDataId: number, data: Uint8Array): void {\n    this.gpuDataManager.upload(gpuDataId, data);\n  }\n\n  memcpy(src: number, dst: number): void {\n    this.gpuDataManager.memcpy(src, dst);\n  }\n\n  async download(gpuDataId: number, getTargetBuffer: () => Uint8Array): Promise<void> {\n    const arrayBuffer = await this.gpuDataManager.download(gpuDataId);\n\n    // the underlying buffer may be changed after the async function is called. so we use a getter function to make sure\n    // the buffer is up-to-date.\n    const data = getTargetBuffer();\n    data.set(new Uint8Array(arrayBuffer));\n  }\n\n  alloc(size: number): number {\n    return this.gpuDataManager.create(size).id;\n  }\n\n  free(ptr: number): number {\n    return this.gpuDataManager.release(ptr);\n  }\n\n  createKernel(name: string, kernelId: number, attribute: unknown): void {\n    const op = WEBGPU_OP_RESOLVE_RULES.get(name);\n    if (!op) {\n      throw new Error(`kernel not implemented: ${name}`);\n    }\n\n    this.kernels.set(kernelId, [name, op[0], [op[1], attribute]]);\n  }\n\n  releaseKernel(kernelId: number): void {\n    const persistentData = this.kernelPersistentData.get(kernelId);\n    if (persistentData) {\n      for (const data of persistentData) {\n        this.gpuDataManager.release(data.id);\n      }\n      this.kernelPersistentData.delete(kernelId);\n    }\n\n    this.kernelCustomData.delete(kernelId);\n    this.kernels.delete(kernelId);\n  }\n\n  computeKernel(kernelId: number, context: ComputeContext): number {\n    const kernel = this.kernels.get(kernelId);\n    if (!kernel) {\n      throw new Error(`kernel not created: ${kernelId}`);\n    }\n    const [name, kernelEntry, attributes] = kernel;\n    if (this.currentKernelId !== null) {\n      throw new Error(`kernel \"${name}\" is not allowed to be called recursively`);\n    }\n    this.currentKernelId = kernelId;\n\n    // parse attributes if necessary\n    if (attributes[0]) {\n      attributes[1] = attributes[0](attributes[1]);\n      attributes[0] = undefined;\n    }\n\n    LOG_DEBUG('info', () => `[WebGPU] Start to run kernel \"${name}\"...`);\n\n    this.temporaryData = [];\n    try {\n      kernelEntry(context, attributes[1]);\n      return 0;  // ORT_OK\n    } catch (e) {\n      LOG_DEBUG('warning', `[WebGPU] Kernel \"${name}\" failed. Error: ${e}`);\n      return 1;  // ORT_FAIL\n    } finally {\n      for (const data of this.temporaryData) {\n        this.gpuDataManager.release(data.id);\n      }\n      this.temporaryData = [];\n      this.currentKernelId = null;\n    }\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Env} from 'onnxruntime-common';\n\nimport {OrtWasmModule} from '../binding/ort-wasm';\nimport {getTensorElementSize} from '../wasm-common';\n\nimport {WebGpuBackend} from './backend-webgpu';\nimport {LOG_DEBUG} from './log';\nimport {TensorView} from './tensor';\nimport {ShapeUtil} from './util';\nimport {ComputeContext, ComputeContextInputsOutputsMapping, ProgramInfo, ProgramInfoLoader} from './webgpu/types';\n\n/* eslint-disable no-bitwise */\n\nclass TensorViewImpl implements TensorView {\n  constructor(\n      private module: OrtWasmModule, public readonly dataType: number, public readonly data: number,\n      public readonly dims: readonly number[]) {}\n\n  getFloat32Array(): Float32Array {\n    return new Float32Array(this.module.HEAP8.buffer, this.data, ShapeUtil.size(this.dims));\n  }\n\n  reshape(newDims: readonly number[]): TensorView {\n    if (ShapeUtil.size(newDims) !== ShapeUtil.size(this.dims)) {\n      throw new Error('Invalid new shape');\n    }\n    return new TensorViewImpl(this.module, this.dataType, this.data, newDims);\n  }\n}\n\nclass ComputeContextImpl implements ComputeContext {\n  readonly opKernelContext: number;\n  readonly inputs: readonly TensorView[];\n  get customData(): {[key: string]: unknown} {\n    return this.backend.currentKernelCustomData;\n  }\n  constructor(private module: OrtWasmModule, private backend: WebGpuBackend, contextDataOffset: number) {\n    const heapU32 = module.HEAPU32;\n\n    // extract context data\n    let dataIndex = (contextDataOffset >> 2);\n    this.opKernelContext = heapU32[dataIndex++];\n    const inputCount = heapU32[dataIndex++];\n\n    const inputs: TensorView[] = [];\n    for (let i = 0; i < inputCount; i++) {\n      const dataType = heapU32[dataIndex++];\n      const data = heapU32[dataIndex++];\n      const dim = heapU32[dataIndex++];\n      const dims: number[] = [];\n      for (let d = 0; d < dim; d++) {\n        dims.push(heapU32[dataIndex++]);\n      }\n      inputs.push(new TensorViewImpl(module, dataType, data, dims));\n    }\n    this.inputs = inputs;\n  }\n\n  compute(program: ProgramInfoLoader|ProgramInfo, inputsOutputsMapping?: ComputeContextInputsOutputsMapping):\n      TensorView[] {\n    // prepare inputs. inputs should always be valid data.\n    const mappedInputs =\n        inputsOutputsMapping?.inputs?.map(i => typeof i === 'number' ? this.inputs[i] : i) ?? this.inputs;\n    // prepare outputs.\n    const outputIndices = inputsOutputsMapping?.outputs ?? [];\n    const createKernelOutput = (index: number, dataType: number, dims: readonly number[]): TensorView =>\n        new TensorViewImpl(this.module, dataType, this.output(index, dims), dims);\n    const createTemporaryOutput = (dataType: number, dims: readonly number[]): TensorView => {\n      const elementSize = getTensorElementSize(dataType);\n      if (!elementSize) {\n        throw new Error(`Unsupported data type: ${dataType}`);\n      }\n      const bufferSize = elementSize * ShapeUtil.size(dims);\n      return new TensorViewImpl(this.module, dataType, this.backend.gpuDataManager.create(bufferSize).id, dims);\n    };\n    return this.backend.run(program, mappedInputs, outputIndices, createKernelOutput, createTemporaryOutput);\n  }\n\n  output(index: number, dims: readonly number[]): number {\n    const stack = this.module.stackSave();\n    try {\n      const data = this.module.stackAlloc((1 + dims.length) * 4 /* sizeof(size_t) */);\n      let offset = data >> 2;\n      this.module.HEAPU32[offset++] = dims.length;\n      for (let i = 0; i < dims.length; i++) {\n        this.module.HEAPU32[offset++] = dims[i];\n      }\n      return this.module._JsepOutput(this.opKernelContext, index, data);\n    } finally {\n      this.module.stackRestore(stack);\n    }\n  }\n}\n\nexport const init = async(module: OrtWasmModule, env: Env): Promise<void> => {\n  const init = module.jsepInit;\n  if (init && navigator.gpu) {\n    if (!env.wasm.simd) {\n      throw new Error(\n          'Not supported for WebGPU=ON and SIMD=OFF. Please set `env.wasm.simd` to true when using WebGPU EP');\n    }\n    const backend = new WebGpuBackend();\n    await backend.initialize(env);\n\n    init(\n        // backend\n        {backend},\n\n        // jsepAlloc()\n        (size: number) => backend.alloc(size),\n\n        // jsepFree()\n        (ptr: number) => backend.free(ptr),\n\n        // jsepCopy(src, dst, size, isSourceGpu)\n        (src: number, dst: number, size: number, isSourceGpu = false) => {\n          if (isSourceGpu) {\n            LOG_DEBUG('verbose', () => `[WebGPU] jsepCopyGpuToGpu: src=${src}, dst=${dst}, size=${size}`);\n            backend.memcpy(src, dst);\n          } else {\n            LOG_DEBUG('verbose', () => `[WebGPU] jsepCopyCpuToGpu: dataOffset=${src}, gpuDataId=${dst}, size=${size}`);\n            const data = module.HEAPU8.subarray(src, src + size);\n            backend.upload(dst, data);\n          }\n        },\n\n        // jsepCopyAsync(src, dst, size)\n        async(gpuDataId: number, dataOffset: number, size: number):\n            Promise<void> => {\n              LOG_DEBUG(\n                  'verbose',\n                  () => `[WebGPU] jsepCopyGpuToCpu: gpuDataId=${gpuDataId}, dataOffset=${dataOffset}, size=${size}`);\n\n              await backend.download(gpuDataId, () => module.HEAPU8.subarray(dataOffset, dataOffset + size));\n            },\n\n        // jsepCreateKernel\n        (name: string, kernel: number, attribute: unknown) => backend.createKernel(name, kernel, attribute),\n\n        // jsepReleaseKernel\n        (kernel: number) => backend.releaseKernel(kernel),\n\n        // jsepRun\n        (kernel: number, contextDataOffset: number) => {\n          LOG_DEBUG('verbose', () => `[WebGPU] jsepRun: kernel=${kernel}, contextDataOffset=${contextDataOffset}`);\n          const context = new ComputeContextImpl(module, backend, contextDataOffset);\n          return backend.computeKernel(kernel, context);\n        });\n  }\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Env} from 'onnxruntime-common';\n\nimport {logLevelStringToEnum} from '../wasm-common';\n\ntype LogLevel = NonNullable<Env['logLevel']>;\ntype MessageString = string;\ntype MessageFunction = () => string;\ntype Message = MessageString|MessageFunction;\n\nconst logLevelPrefix = ['V', 'I', 'W', 'E', 'F'];\n\nconst doLog = (level: number, message: string): void => {\n  // eslint-disable-next-line no-console\n  console.log(`[${logLevelPrefix[level]},${new Date().toISOString()}]${message}`);\n};\n\nlet configLogLevel: LogLevel|undefined;\nlet debug: boolean|undefined;\n\nexport const configureLogger = ($configLogLevel: LogLevel, $debug: boolean): void => {\n  configLogLevel = $configLogLevel;\n  debug = $debug;\n};\n\n/**\n * A simple logging utility to log messages to the console.\n */\nexport const LOG = (logLevel: LogLevel, msg: Message): void => {\n  const messageLevel = logLevelStringToEnum(logLevel);\n  const configLevel = logLevelStringToEnum(configLogLevel);\n  if (messageLevel >= configLevel) {\n    doLog(messageLevel, typeof msg === 'function' ? msg() : msg);\n  }\n};\n\n/**\n * A simple logging utility to log messages to the console. Only logs when debug is enabled.\n */\nexport const LOG_DEBUG: typeof LOG = (...args: Parameters<typeof LOG>) => {\n  if (debug) {\n    LOG(...args);\n  }\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\n/* eslint-disable no-param-reassign */\n\nexport class MatMulUtil {\n  /**\n   * Calculate the expected shape when matrix multiplication\n   * @param a The shape of tensor A. Should be a tuple of 2 positive integers\n   * @param b The shape of tensor B. Should be a tuple of 2 positive integers\n   * @returns The expected shape of the result, or undefined if N/A\n   */\n  static calcMatMulShape(a: [number, number], b: [number, number]): [number, number]|undefined {\n    return (a[1] !== b[0]) ? undefined : [a[0], b[1]];\n  }\n}\n\n\nexport class BroadcastUtil {\n  /**\n   * Calculate the expected shape when broadcasting 2 tensors\n   * @param a The shape of tensor A. Should be an array of positive integers\n   * @param b The shape of tensor B. Should be an array of positive integers\n   * @param isMatMul Whether the operation is MatMul\n   * @returns The expected shape of the result, or undefined if N/A\n   */\n  static calcShape(adims: readonly number[], bdims: readonly number[], isMatMul = false): readonly number[]|undefined {\n    const arank = adims.length;\n    const brank = bdims.length;\n    if (arank === 0) {\n      return bdims;\n    }\n    if (brank === 0) {\n      return adims;\n    }\n    const crank = Math.max(adims.length, bdims.length);\n    const cdims = new Array<number>(crank);\n\n    // calculate the last 2 dimension if it is MatMul\n    if (isMatMul) {\n      if (arank < 2 || brank < 2) {\n        return undefined;\n      }\n      const cShapeMatMul =\n          MatMulUtil.calcMatMulShape([adims[arank - 2], adims[arank - 1]], [bdims[brank - 2], bdims[brank - 1]]);\n      if (cShapeMatMul === undefined) {\n        return undefined;\n      }\n      [cdims[crank - 2], cdims[crank - 1]] = cShapeMatMul;\n    }\n\n    for (let i = isMatMul ? 3 : 1; i <= crank; i++) {\n      const aLen = arank - i < 0 ? 1 : adims[arank - i];\n      const bLen = brank - i < 0 ? 1 : bdims[brank - i];\n\n      if (aLen !== bLen && aLen > 1 && bLen > 1) {\n        return undefined;\n      }\n      cdims[crank - i] = Math.max(aLen, bLen);\n    }\n\n    return cdims;\n  }\n\n  /**\n   * Determine if a shape is unidirectional broadcastable to another shape\n   * @param shape The input shape\n   * @param finalShape The desired shape after broadcasting\n   */\n  static isValidBroadcast(shape: readonly number[], finalShape: readonly number[]): boolean {\n    // align shape to the right\n    const inputRank = shape.length;\n    const finalRank = finalShape.length;\n    if (inputRank > finalRank) {\n      return false;\n    }\n    for (let i = 1; i <= inputRank; i++) {\n      if (shape[inputRank - i] !== 1 && shape[inputRank - i] !== finalShape[finalRank - i]) {\n        return false;\n      }\n    }\n    return true;\n  }\n}\n\n\nexport class ShapeUtil {\n  /**\n   * calculate the size (number of elements)\n   */\n  static size(dims: readonly number[]): number {\n    return ShapeUtil.getSizeFromDimensionRange(dims, 0, dims.length);\n  }\n\n  /**\n   * calculate the size (number of elements) from the given axis (inclusive)\n   */\n  static sizeFromDimension(dims: readonly number[], axis: number): number {\n    if (axis < 0 || axis > dims.length) {\n      throw new Error(`invalid dimension of ${axis} for sizeFromDimension as Tensor has ${dims.length} dimensions.`);\n    }\n    return ShapeUtil.getSizeFromDimensionRange(dims, axis, dims.length);\n  }\n\n  /**\n   * calculate the size (number of elements) to the given axis (exclusive)\n   */\n  static sizeToDimension(dims: readonly number[], axis: number): number {\n    if (axis < 0 || axis > dims.length) {\n      throw new Error(`invalid dimension of ${axis} for sizeToDimension as Tensor has ${dims.length} dimensions.`);\n    }\n    return ShapeUtil.getSizeFromDimensionRange(dims, 0, axis);\n  }\n\n  /**\n   * calculate the size (number of elements) from and to the given axis [start, end)\n   */\n  static getSizeFromDimensionRange(dims: readonly number[], start: number, end: number): number {\n    let size = 1;\n    for (let i = start; i < end; i++) {\n      // safety check as this method is called by multiple other methods requiring size.\n      // size cannot be 0 or negative.\n      if (dims[i] <= 0) {\n        throw new Error(\n            // eslint-disable-next-line max-len\n            'cannot get valid size from specified dimension range. Most likely the range contains 0 or negative values in them.');\n      }\n      size *= dims[i];\n    }\n    return size;\n  }\n\n  static computeStrides(dims: readonly number[]): readonly number[] {\n    const rank = dims.length;\n    if (rank === 0) {\n      return [];\n    } else if (rank === 1) {\n      return [1];\n    }\n    const strides = new Array(rank);\n    strides[rank - 1] = 1;\n    strides[rank - 2] = dims[rank - 1];\n    for (let i = rank - 3; i >= 0; --i) {\n      strides[i] = strides[i + 1] * dims[i + 1];\n    }\n    return strides;\n  }\n\n  /**\n   * normailze axis of range [-r, r) into [0, r).\n   */\n  static normalizeAxis(axis: number, tensorRank: number): number {\n    if (axis < -tensorRank && axis >= tensorRank) {\n      throw new Error('unsupported axis for this operation.');\n    }\n    return axis < 0 ? axis + tensorRank : axis;\n  }\n\n  static normalizeAxes(axes: readonly number[], tensorRank?: number): number[] {\n    return axes.map(x => this.normalizeAxis(x, tensorRank ?? axes.length));\n  }\n\n  /**\n   * Sorts a given array based on the indices in the Perm array\n   * Used in Transpose\n   * @param a Array to be sorted such as dims or strides\n   * @param perm Perm given; if null a will be reversed\n   */\n  static sortBasedOnPerm(a: readonly number[], perm?: readonly number[]): readonly number[] {\n    if (perm) {\n      return perm.map((v) => a[v]);\n    } else {\n      return a.slice().reverse();\n    }\n  }\n\n  /**\n   * Pads a given shape according to the padding values\n   * @param dims shape of the Tensor to be padded\n   * @param pad pad values\n   */\n  static padShape(dims: readonly number[], pad: readonly number[]): readonly number[] {\n    const rank = dims.length;\n    return dims.map((v, i) => v + pad[i] + pad[i + rank]);\n  }\n\n  /**\n   * Determines if the two shapes are identical\n   * @param shape1\n   * @param shape2\n   */\n  static areEqual(shape1: readonly number[], shape2: readonly number[]): boolean {\n    if (shape1.length !== shape2.length) {\n      return false;\n    }\n    return shape1.every((v, i) => v === shape2[i]);\n  }\n}\n\nexport class PoolConvUtil {\n  /**\n   * Adjust the kernel, strides, pads to correct rank. Set to default value if not present\n   * @param isGlobalOperator If true, perform global pooling.\n   * @param inputDims The input tensor dimension.\n   * @param kernelShape The size of the kernel along each axis.\n   * @param strides Stride along each axis.\n   * @param dilations Dilation along each axis.\n   * @param pads Padding for the beginning and ending along each axis.\n   */\n  static adjustPoolAttributes(\n      isGlobalOperator: boolean, inputDims: readonly number[], kernelShape: number[], strides: number[],\n      dilations: number[], pads: number[]): void {\n    if (!isGlobalOperator && kernelShape.length !== inputDims.length - 2) {\n      throw new Error('length of specified kernel shapes should be 2 less than length of input dimensions');\n    }\n\n    if (isGlobalOperator) {\n      // adjust kernel shape to cover the input dims\n      for (let dim = 0; dim < inputDims.length - 2; dim++) {\n        if (dim >= kernelShape.length) {\n          kernelShape.push(inputDims[dim + 2]);\n        } else {\n          kernelShape[dim] = inputDims[dim + 2];\n        }\n      }\n    }\n\n    // adjust strides length to match kernel shape length\n    for (let dim = 0; dim < kernelShape.length; dim++) {\n      if (dim < strides.length) {\n        if (strides[dim] < 0) {\n          throw new Error('strides should be greater than or equal to 1');\n        }\n      } else {\n        strides.push(1);\n      }\n    }\n\n    // adjust dilation value\n    for (let dim = 0; dim < kernelShape.length; dim++) {\n      if (dim < dilations.length) {\n        if (dilations[dim] < 0) {\n          throw new Error('dilations should be greater than or equal to 1');\n        }\n      } else {\n        dilations.push(1);\n      }\n    }\n\n    // adjust pads length to match 2 * kernel shape length\n    for (let dim = 0; dim < kernelShape.length * 2; dim++) {\n      if (dim < pads.length) {\n        if (pads[dim] < 0) {\n          throw new Error('pad should be greater than or equal to 1');\n        }\n      } else {\n        pads.push(0);\n      }\n    }\n\n    // sanity checks for values in kernel shapes and pads\n    for (let dim = 0; dim < kernelShape.length; dim++) {\n      if (kernelShape[dim] <= 0) {\n        throw new Error('kernel shapes need to be greater than 0');\n      }\n\n      if (pads[dim] >= kernelShape[dim] || pads[dim + kernelShape.length] >= kernelShape[dim]) {\n        throw new Error('pads should be smaller than kernel');\n      }\n    }\n  }\n\n  // adjust pad values based on 'autoPad' attribute\n  static adjustPadsBasedOnAutoPad(\n      inputDims: readonly number[], strides: readonly number[], dilations: readonly number[],\n      kernelShape: readonly number[], pads: number[], isChannelLast: boolean, autoPad?: string): void {\n    if (!autoPad) {\n      return;\n    }\n\n    if (pads.length !== 2 * (inputDims.length - 2)) {\n      throw new Error('length of pads should be twice the length of data dimensions');\n    }\n\n    if (strides.length !== (inputDims.length - 2)) {\n      throw new Error('length of strides should be the length of data dimensions');\n    }\n\n    if (kernelShape.length !== (inputDims.length - 2)) {\n      throw new Error('length of kernel shapes should be the length of data dimensions');\n    }\n\n    for (let dim = 0; dim < inputDims.length - 2; dim++) {\n      PoolConvUtil.adjustPadAndReturnShape(\n          inputDims[dim + (isChannelLast ? 1 : 2)], strides[dim], dilations[dim], kernelShape[dim], pads, dim,\n          dim + inputDims.length - 2, autoPad);\n    }\n  }\n\n  /**\n   * Calculate the output shape for Pool ops based on input attributes. (Should be used only for Pool ops)\n   * @param isGlobalOperator If true, perform global pooling.\n   * @param inputDims The input tensor dimension. (inputs[0].dims)\n   * @param strides Stride along each axis.\n   * @param dilations Dilation along each axis.\n   * @param kernelShape The size of the kernel along each axis.\n   * @param pads Padding for the beginning and ending along each axis.\n   * @param autoPad DEPRECATED attribute supported for legacy models. Specifies how to implicitly calculate pads in each\n   *     dimension. Can take values NOTSET, SAME_UPPER, SAME_LOWER, or VALID.\n   */\n  static computePoolOutputShape(\n      isGlobalOperator: boolean, inputDims: readonly number[], strides: number[], dilations: number[],\n      kernelShape: number[], pads: number[], autoPad?: string): number[] {\n    if (inputDims.length <= 0) {\n      throw new Error('input shape must be of size greater than 0');\n    }\n\n    // Add batch size and number of channels of output\n    const outputDims = [inputDims[0], inputDims[1]];\n\n    PoolConvUtil.computeShapeHelper(\n        isGlobalOperator, inputDims, outputDims, strides, dilations, kernelShape, pads, autoPad);\n    return outputDims;\n  }\n\n  /**\n   * Calculate the output shape for Conv op based on input attributes. (Should be used only for Conv op)\n   * @param inputDims The input tensor dimension. (inputs[0].dims)\n   * @param filterDims The filter tensor dimension. (inputs[1].dims)\n   * @param strides Stride along each axis.\n   * @param kernelShape The size of the kernel along each axis.\n   * @param pads Padding for the beginning and ending along each axis.\n   * @param autoPad DEPRECATED attribute supported for legacy models. Specifies how to implicitly calculate pads in each\n   *     dimension. Can take values NOTSET, SAME_UPPER, SAME_LOWER, or VALID.\n   */\n  static computeConvOutputShape(\n      inputDims: readonly number[], filterDims: readonly number[], strides: number[], dilations: number[],\n      kernelShape: number[], pads: number[], autoPad?: string): number[] {\n    if (inputDims.length <= 0 || filterDims.length <= 0) {\n      throw new Error('invalid input tensor dims or invalid filter tensor dims');\n    }\n\n    // Add batch size and number of channels of output\n    const outputDims = [inputDims[0], filterDims[0]];\n\n    PoolConvUtil.computeShapeHelper(false, inputDims, outputDims, strides, dilations, kernelShape, pads, autoPad);\n    return outputDims;\n  }\n\n  // will compute output shapes for data dimensions ONLY (i.e.) no batch size and channels\n  // called by computePoolOutputShape() and computeConvOutputShape()\n  // adjust pads based on 'autoPad' attribute prior to shape computation\n  private static computeShapeHelper(\n      isGlobalOperator: boolean, inputDims: readonly number[], outputDims: number[], strides: readonly number[],\n      dilations: readonly number[], kernelShape: readonly number[], pads: number[], autoPad?: string) {\n    if (isGlobalOperator) {\n      for (let dim = 0; dim < inputDims.length - 2; dim++) {\n        outputDims.push(1);\n      }\n    } else {\n      for (let dim = 0; dim < inputDims.length - 2; dim++) {\n        outputDims.push(PoolConvUtil.adjustPadAndReturnShape(\n            inputDims[dim + 2], strides[dim], dilations[dim], kernelShape[dim], pads, dim, dim + inputDims.length - 2,\n            autoPad));\n      }\n    }\n  }\n\n  // helper for computeShapeHelper() and adjustPadsBasedOnAutoPad()\n  // adjusts pad value for given 'autoPad' string and computes output shape along a particular dimension\n  private static adjustPadAndReturnShape(\n      inSize: number, stride: number, dilation: number, kernel: number, pads: number[], padHeadIndex: number,\n      padTailIndex: number, autoPad?: string): number {\n    const dkernel = dilation * (kernel - 1) + 1;\n    if (autoPad && autoPad !== 'NOTSET') {\n      switch (autoPad) {\n        case 'VALID':\n          pads[padHeadIndex] = 0;\n          pads[padTailIndex] = 0;\n          return Math.floor(((inSize - dkernel) / stride) + 1);\n        case 'SAME_LOWER':\n        case 'SAME_UPPER':\n          if (dilation !== 1) {\n            throw new Error('Dilation not supported for SAME_UPPER or SAME_LOWER');\n          } else {\n            const legacyTargetSize = (inSize + stride - 1) / stride;\n            const padNeeded = (legacyTargetSize - 1) * stride + kernel - inSize;\n            pads[padHeadIndex] =\n                (autoPad === 'SAME_LOWER') ? Math.floor((padNeeded + 1) / 2) : Math.floor(padNeeded / 2);\n            pads[padTailIndex] = padNeeded - pads[padHeadIndex];\n            return Math.floor(((inSize + padNeeded - kernel) / stride) + 1);\n          }\n        default:\n          throw new Error('Unsupported AutoPad type');\n      }\n    } else {\n      return Math.floor(((inSize + pads[padHeadIndex] + pads[padTailIndex] - dkernel) / stride) + 1);\n    }\n  }\n}\n\nexport class GemmUtil {\n  // will make sure input shapes are compatible for this op\n  // and return back the shape of the output in the form of a tuple\n  // will throw exception if the input shapes are not compatible\n  static getShapeOfGemmResult(\n      leftShape: readonly number[], transLeft: boolean, rightShape: readonly number[], transRight: boolean,\n      biasShape?: readonly number[]): readonly number[] {\n    if (leftShape.length !== 2 || rightShape.length !== 2) {\n      throw new Error('shape need to be of size 2');\n    }\n\n    let M: number;\n    let K: number;\n    let N: number;\n\n    if (transLeft) {\n      M = leftShape[1];\n      K = leftShape[0];\n    } else {\n      M = leftShape[0];\n      K = leftShape[1];\n    }\n\n    let kDim = -1;\n\n    if (transRight) {\n      N = rightShape[0];\n      kDim = 1;\n    } else {\n      N = rightShape[1];\n      kDim = 0;\n    }\n\n    if (rightShape[kDim] !== K) {\n      throw new Error('dimension mismatch');\n    }\n\n    if (M <= 0 || N <= 0 || K <= 0) {\n      throw new Error('invalid shape specified');\n    }\n\n    if (biasShape && !BroadcastUtil.isValidBroadcast(biasShape, [M, N])) {\n      throw new Error('gemm: invalid bias shape for broadcast');\n    }\n\n    return [M, N, K];\n  }\n}\n\n\nexport const MIN_CLIP = -3.4028234663852886e+38;\nexport const MAX_CLIP = 3.4028234663852886e+38;\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nclass AttributeWithCacheKeyImpl {\n  constructor(attribute: Record<string, unknown>) {\n    Object.assign(this, attribute);\n  }\n\n  private _cacheKey: string;\n  public get cacheKey(): string {\n    if (!this._cacheKey) {\n      this._cacheKey =\n          Object.getOwnPropertyNames(this).sort().map(name => `${(this as Record<string, unknown>)[name]}`).join(';');\n    }\n    return this._cacheKey;\n  }\n}\n\nexport interface AttributeWithCacheKey {\n  readonly cacheKey: string;\n}\n\n/**\n * create a new object from the given attribute, and add a cacheKey property to it\n */\nexport const createAttributeWithCacheKey = <T extends Record<string, unknown>>(attribute: T): T&AttributeWithCacheKey =>\n    new AttributeWithCacheKeyImpl(attribute) as unknown as T & AttributeWithCacheKey;\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {WebGpuBackend} from '../backend-webgpu';\nimport {LOG_DEBUG} from '../log';\n\nimport {GpuData, GpuDataId, GpuDataType} from './types';\n\n/**\n * manages GpuDataId -> GpuBuffer\n */\nexport interface GpuDataManager {\n  /**\n   * copy data from CPU to GPU.\n   */\n  upload(id: GpuDataId, data: Uint8Array): void;\n  /**\n   * copy data from GPU to GPU.\n   */\n  memcpy(sourceId: GpuDataId, destinationId: GpuDataId): void;\n  /**\n   * create new data on GPU.\n   */\n  create(size: number, usage?: number): GpuData;\n  /**\n   * get GPU data by ID.\n   */\n  get(id: GpuDataId): GpuData|undefined;\n  /**\n   * release the data on GPU by ID.\n   *\n   * @return size of the data released\n   */\n  release(id: GpuDataId): number;\n  /**\n   * copy data from GPU to CPU.\n   */\n  download(id: GpuDataId): Promise<ArrayBufferLike>;\n\n  /**\n   * refresh the buffers that marked for release.\n   *\n   * when release() is called, the buffer is not released immediately. this is because we need to wait for the commands\n   * to be submitted to the GPU. this function is called after the commands are submitted so that the buffers can be\n   * actually released.\n   */\n  refreshPendingBuffers(): void;\n}\n\ninterface StorageCacheValue {\n  gpuData: GpuData;\n  originalSize: number;\n}\n\ninterface DownloadCacheValue {\n  data: Promise<ArrayBufferLike>;\n}\n\n/**\n * normalize the buffer size so that it fits the 128-bits (16 bytes) alignment.\n */\nconst calcNormalizedBufferSize = (size: number) => Math.ceil(size / 16) * 16;\n\nlet guid = 0;\nconst createNewGpuDataId = () => guid++;\n\nclass GpuDataManagerImpl implements GpuDataManager {\n  // GPU Data ID => GPU Data ( storage buffer )\n  storageCache: Map<GpuDataId, StorageCacheValue>;\n\n  // GPU Data ID => GPU Data ( read buffer )\n  downloadCache: Map<GpuDataId, DownloadCacheValue>;\n\n  // pending buffers for uploading ( data is unmapped )\n  private buffersForUploadingPending: GPUBuffer[];\n  // pending buffers for computing\n  private buffersPending: GPUBuffer[];\n\n  constructor(private backend: WebGpuBackend /* , private reuseBuffer: boolean */) {\n    this.storageCache = new Map();\n    this.downloadCache = new Map();\n    this.buffersForUploadingPending = [];\n    this.buffersPending = [];\n  }\n\n  upload(id: GpuDataId, data: Uint8Array): void {\n    const srcArrayBuffer = data.buffer;\n    const srcOffset = data.byteOffset;\n    const srcLength = data.byteLength;\n    const size = calcNormalizedBufferSize(srcLength);\n\n    // get destination gpu buffer\n    const gpuDataCache = this.storageCache.get(id);\n    if (!gpuDataCache) {\n      throw new Error('gpu data for uploading does not exist');\n    }\n    if (gpuDataCache.originalSize !== srcLength) {\n      throw new Error(`inconsistent data size. gpu data size=${gpuDataCache.originalSize}, data size=${srcLength}`);\n    }\n\n    // create gpu buffer\n    const gpuBufferForUploading = this.backend.device.createBuffer(\n        // eslint-disable-next-line no-bitwise\n        {mappedAtCreation: true, size, usage: GPUBufferUsage.MAP_WRITE | GPUBufferUsage.COPY_SRC});\n\n    // copy (upload) data\n    const arrayBuffer = gpuBufferForUploading.getMappedRange();\n    new Uint8Array(arrayBuffer).set(new Uint8Array(srcArrayBuffer, srcOffset, srcLength));\n    gpuBufferForUploading.unmap();\n\n\n    // GPU copy\n    const commandEncoder = this.backend.getCommandEncoder();\n    this.backend.endComputePass();\n    commandEncoder.copyBufferToBuffer(gpuBufferForUploading, 0, gpuDataCache.gpuData.buffer, 0, size);\n\n    LOG_DEBUG('verbose', () => `[WebGPU] GpuDataManager.upload(id=${id})`);\n\n    this.buffersForUploadingPending.push(gpuBufferForUploading);\n  }\n\n  memcpy(sourceId: GpuDataId, destinationId: GpuDataId): void {\n    // get source gpu buffer\n    const sourceGpuDataCache = this.storageCache.get(sourceId);\n    if (!sourceGpuDataCache) {\n      throw new Error('source gpu data for memcpy does not exist');\n    }\n    // get destination gpu buffer\n    const destinationGpuDataCache = this.storageCache.get(destinationId);\n    if (!destinationGpuDataCache) {\n      throw new Error('destination gpu data for memcpy does not exist');\n    }\n    if (sourceGpuDataCache.originalSize !== destinationGpuDataCache.originalSize) {\n      throw new Error('inconsistent source and destination gpu data size');\n    }\n    const size = calcNormalizedBufferSize(sourceGpuDataCache.originalSize);\n    // GPU copy\n    this.backend.getCommandEncoder().copyBufferToBuffer(\n        sourceGpuDataCache.gpuData.buffer, 0, destinationGpuDataCache.gpuData.buffer, 0, size);\n  }\n\n  // eslint-disable-next-line no-bitwise\n  create(size: number, usage = GPUBufferUsage.STORAGE | GPUBufferUsage.COPY_SRC | GPUBufferUsage.COPY_DST): GpuData {\n    // !!!\n    // !!! IMPORTANT: TODO: whether we should keep the storage buffer every time, or always create new ones.\n    // !!!                  This need to be figured out by performance test results.\n    // !!!\n\n    const bufferSize = calcNormalizedBufferSize(size);\n\n    // create gpu buffer\n    const gpuBuffer = this.backend.device.createBuffer({size: bufferSize, usage});\n\n    const gpuData = {id: createNewGpuDataId(), type: GpuDataType.default, buffer: gpuBuffer};\n    this.storageCache.set(gpuData.id, {gpuData, originalSize: size});\n\n    LOG_DEBUG('verbose', () => `[WebGPU] GpuDataManager.create(size=${size}) => id=${gpuData.id}`);\n    return gpuData;\n  }\n\n  get(id: GpuDataId): GpuData|undefined {\n    return this.storageCache.get(id)?.gpuData;\n  }\n\n  release(id: GpuDataId): number {\n    const cachedData = this.storageCache.get(id);\n    if (!cachedData) {\n      throw new Error('releasing data does not exist');\n    }\n\n    LOG_DEBUG('verbose', () => `[WebGPU] GpuDataManager.release(id=${id}), gpuDataId=${cachedData.gpuData.id}`);\n\n    this.storageCache.delete(id);\n    this.buffersPending.push(cachedData.gpuData.buffer);\n    // cachedData.gpuData.buffer.destroy();\n\n    const downloadingData = this.downloadCache.get(id);\n    if (downloadingData) {\n      this.downloadCache.delete(id);\n    }\n\n    return cachedData.originalSize;\n  }\n\n  async download(id: GpuDataId): Promise<ArrayBufferLike> {\n    const downloadData = this.downloadCache.get(id);\n    if (downloadData) {\n      return downloadData.data;\n    }\n\n    const cachedData = this.storageCache.get(id);\n    if (!cachedData) {\n      throw new Error('data does not exist');\n    }\n\n    const commandEncoder = this.backend.getCommandEncoder();\n    this.backend.endComputePass();\n    const gpuReadBuffer = this.backend.device.createBuffer(\n        // eslint-disable-next-line no-bitwise\n        {size: cachedData.originalSize, usage: GPUBufferUsage.COPY_DST | GPUBufferUsage.MAP_READ});\n    commandEncoder.copyBufferToBuffer(\n        cachedData.gpuData.buffer /* source buffer */, 0 /* source offset */, gpuReadBuffer /* destination buffer */,\n        0 /* destination offset */, cachedData.originalSize /* size */\n    );\n    this.backend.flush();\n\n    const readDataPromise = new Promise<ArrayBuffer>((resolve) => {\n      gpuReadBuffer.mapAsync(GPUMapMode.READ).then(() => {\n        const data = gpuReadBuffer.getMappedRange().slice(0);\n        gpuReadBuffer.destroy();\n        resolve(data);\n      });\n    });\n\n    this.downloadCache.set(id, {data: readDataPromise});\n\n    return readDataPromise;\n  }\n\n  refreshPendingBuffers(): void {\n    for (const buffer of this.buffersForUploadingPending) {\n      buffer.destroy();\n    }\n    for (const buffer of this.buffersPending) {\n      buffer.destroy();\n    }\n  }\n}\n\nexport const createGpuDataManager = (...args: ConstructorParameters<typeof GpuDataManagerImpl>): GpuDataManager =>\n    new GpuDataManagerImpl(...args);\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport * as binaryOps from './ops/binary-op';\nimport {conv, parseConvAttributes} from './ops/conv';\nimport {gemm, parseGemmAttributes} from './ops/gemm';\nimport {matMul} from './ops/matmul';\nimport * as pool from './ops/pool';\nimport {parseTransposeAttributes, transpose} from './ops/transpose';\nimport * as unaryOps from './ops/unary-op';\nimport {ComputeContext} from './types';\n\nexport type RunFunction = (context: ComputeContext, attribute?: unknown) => void;\nexport type ParseAttributeFunction = (attributeRaw: unknown) => unknown;\nexport type OperatorImplementation = [RunFunction]|[RunFunction, ParseAttributeFunction];\n\nexport const WEBGPU_OP_RESOLVE_RULES: Map<string, OperatorImplementation> = new Map([\n  ['Abs', [unaryOps.abs]],\n  ['Acos', [unaryOps.acos]],\n  ['Acosh', [unaryOps.acosh]],\n  ['Add', [binaryOps.add]],\n  ['Asin', [unaryOps.asin]],\n  ['Asinh', [unaryOps.asinh]],\n  ['Atan', [unaryOps.atan]],\n  ['Atanh', [unaryOps.atanh]],\n  // TODO: support new attributes for AveragePool-10\n  ['AveragePool', [pool.averagePool, pool.parseAveragePoolAttributes]],\n  ['Ceil', [unaryOps.ceil]],\n  ['ClipV10', [unaryOps.clipV10]],\n  ['Clip', [unaryOps.clip]],\n  ['Conv', [conv, parseConvAttributes]],\n  ['Cos', [unaryOps.cos]],\n  ['Cosh', [unaryOps.cosh]],\n  ['Div', [binaryOps.div]],\n  ['Elu', [unaryOps.elu, unaryOps.parseAlphaAttributes]],\n  ['Erf', [unaryOps.erf]],\n  ['Exp', [unaryOps.exp]],\n  ['Floor', [unaryOps.floor]],\n  ['Gemm', [gemm, parseGemmAttributes]],\n  ['GlobalAveragePool', [pool.globalAveragePool, pool.parseGlobalAveragePoolAttributes]],\n  ['GlobalMaxPool', [pool.globalMaxPool, pool.parseGlobalMaxPoolAttributes]],\n  ['LeakyRelu', [unaryOps.leakyRelu, unaryOps.parseAlphaAttributes]],\n  ['MatMul', [matMul]],\n  // TODO: support new attributes for MaxPool-8 and MaxPool-10\n  ['MaxPool', [pool.maxPool, pool.parseMaxPoolAttributes]],\n  ['Mul', [binaryOps.mul]],\n  ['Neg', [unaryOps.neg]],\n  ['Pow', [binaryOps.pow]],\n  ['Reciprocal', [unaryOps.reciprocal]],\n  ['Relu', [unaryOps.relu]],\n  ['Sigmoid', [unaryOps.sigmoid]],\n  ['Sin', [unaryOps.sin]],\n  ['Sinh', [unaryOps.sinh]],\n  ['Sqrt', [unaryOps.sqrt]],\n  ['Sub', [binaryOps.sub]],\n  ['Tan', [unaryOps.tan]],\n  ['Tanh', [unaryOps.tanh]],\n  ['ThresholdedRelu', [unaryOps.thresholdedRelu, unaryOps.parseAlphaAttributes]],\n  ['Transpose', [transpose, parseTransposeAttributes]],\n]);\n","/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n// sampled from [@tensorflow/tfjs] tfjs-backend-webgpu/src/activation_util.ts\n//\n// modified to fit the needs of the project\n\nexport declare type Activation = 'linear' | 'relu' | 'prelu' | 'elu' | 'relu6' | 'leakyrelu' | 'sigmoid';\n\nexport const typeSnippet = (component: number) => {\n  switch (component) {\n    case 1:\n      return 'f32';\n    case 2:\n      return 'vec2<f32>';\n    case 3:\n      return 'vec3<f32>';\n    case 4:\n      return 'vec4<f32>';\n    default:\n      throw new Error(`${component}-component is not supported.`);\n  }\n};\n\nexport const activationFnSnippet =\n    (activation?: Activation, _hasPreluActivationWeights = false, _packed = false, _coordsLength = 3): string => {\n      if (!activation) {\n        return '';\n      }\n\n      // TODO: add implementations\n      return '';\n    };\n\nexport const biasActivationSnippet = (hasBias: boolean, activation?: Activation): string => `\n      ${hasBias ? 'value = value + getBiasByOutputCoords(coords);' : ''}\n      ${activation ? 'value = activation(value, coords);' : ''}\n      `;\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n// sampled from [@tensorflow/tfjs] tfjs-backend-webgpu/src/conv2d_mm_webgpu.ts\n//\n// modified to fit the needs of the project\n\nimport {LOG_DEBUG} from '../../../log';\nimport {TensorView} from '../../../tensor';\nimport {ShapeUtil} from '../../../util';\nimport {GpuDataType, ProgramInfo, ProgramMetadata} from '../../types';\nimport {ConvAttributes} from '../conv';\n\nimport {Activation, activationFnSnippet, biasActivationSnippet, typeSnippet} from './activation_util';\nimport {utilFunctions} from './conv_util';\nimport {makeMatMulPackedSource, makeMatMulPackedVec4Source} from './matmul_packed_webgpu';\n\nconst conv2dCommonSnippet =\n    (isChannelsLast: boolean, fitAOuter: boolean, fitBOuter: boolean, fitInner: boolean, addBias = false,\n     activation?: Activation, hasPreluActivationWeights = false, innerElementSizeX = 4, innerElementSizeW = 4,\n     innerElementSize = 4): string => {\n      const getXSnippet = (innerElementSize: number) => {\n        switch (innerElementSize) {\n          case 1:\n            return 'resData = x[xIndex];';\n          case 3:\n            return 'resData = vec3<f32>(x[xIndex], x[xIndex + 1], x[xIndex + 2]);';\n          case 4:\n            return 'resData = x[xIndex / 4];';\n          default:\n            throw new Error(`innerElementSize ${innerElementSize} is not supported.`);\n        }\n      };\n      const getWSnippet = (innerElementSize: number) => {\n        switch (innerElementSize) {\n          case 1:\n            return 'return w[row * wShape[3] + colIn];';\n          case 4:\n            return 'return w[row * wShape[3] / 4 + colIn];';\n          default:\n            throw new Error(`innerElementSize ${innerElementSize} is not supported.`);\n        }\n      };\n      const coordASnippet = isChannelsLast ? `\n    let coord = vec4<i32>(batch, xRow, xCol, xCh);\n    ` :\n                                             `\n    let coord = vec4<i32>(batch, xCh, xRow, xCol);\n    `;\n\n      const coordResSnippet = isChannelsLast ? `\n    let coords = vec4<i32>(\n      batch,\n      row / outWidth,\n      row % outWidth,\n      col);\n    ` :\n                                               `\n    let coords = vec4<i32>(\n      batch,\n      row,\n      col / outWidth,\n      col % outWidth);\n    `;\n\n      const xHeight = isChannelsLast ? 'xShape[1]' : 'xShape[2]';\n      const xWidth = isChannelsLast ? 'xShape[2]' : 'xShape[3]';\n      const row = isChannelsLast ? 'row' : 'col';\n      const col = isChannelsLast ? 'col' : 'row';\n      const readXSnippet = `\n    let inChannels = wShape[2];\n    let outWidth = ${isChannelsLast ? 'outShape[2]' : 'outShape[3]'};\n    let outRow = ${row} / outWidth;\n    let outCol = ${row} % outWidth;\n\n    let WRow = ${col} / (filterDims[1] * inChannels);\n    let WCol = ${col} / inChannels % filterDims[1];\n    let xRow = outRow * stride[0] + dilation[0] * WRow - pad[0];\n    let xCol = outCol * stride[1] + dilation[1] * WCol - pad[1];\n    let xCh = ${col} % inChannels;\n    var resData = ${typeSnippet(innerElementSizeX)}(0.0);\n    // The bounds checking is always needed since we use it to pad zero for\n    // the 'same' padding type.\n    if (xRow >= 0 && xRow < ${xHeight} && xCol >= 0 && xCol < ${xWidth}) {\n      ${coordASnippet}\n      let xIndex = getIndexFromCoords4D(coord, xShape);\n      ${getXSnippet(innerElementSizeX)}\n    }\n    return resData;`;\n\n      const sampleX = isChannelsLast ? (fitAOuter && fitInner ? `\n    let col = colIn * ${innerElementSizeX};\n    ${readXSnippet}` :\n                                                                `\n    let col = colIn * ${innerElementSizeX};\n    if (row < dimAOuter && col < dimInner) {\n      ${readXSnippet}\n    }\n    return ${typeSnippet(innerElementSizeX)}(0.0);`) :\n                                       (fitInner && fitBOuter ? `\n    let col = colIn * ${innerElementSizeX};\n    ${readXSnippet}` :\n                                                                `\n    let col = colIn * ${innerElementSizeX};\n    if (row < dimInner && col < dimBOuter) {\n      ${readXSnippet}\n    }\n    return ${typeSnippet(innerElementSizeX)}(0.0);`);\n\n      const sampleW = `${getWSnippet(innerElementSizeW)}`;\n\n      const resType = typeSnippet(innerElementSize);\n      const aType = isChannelsLast ? typeSnippet(innerElementSizeX) : typeSnippet(innerElementSizeW);\n      const bType = isChannelsLast ? typeSnippet(innerElementSizeW) : typeSnippet(innerElementSizeX);\n      const userCode = `\n    ${activationFnSnippet(activation, hasPreluActivationWeights, innerElementSize === 4, 4)}\n    fn mm_readA(batch: i32, row : i32, colIn : i32) -> ${aType} {\n      ${isChannelsLast ? sampleX : sampleW}\n    }\n\n    fn mm_readB(batch: i32, row : i32, colIn : i32) -> ${bType} {\n      ${isChannelsLast ? sampleW : sampleX}\n    }\n\n    fn mm_write(batch: i32, row : i32, colIn : i32, valueIn : ${resType}) {\n      let col = colIn * ${innerElementSize};\n      if (row < dimAOuter && col < dimBOuter)\n      {\n      var value = valueIn;\n      let outWidth = ${isChannelsLast ? 'outShape[2]' : 'outShape[3]'};\n      ${coordResSnippet}\n      ${biasActivationSnippet(addBias, activation)}\n      setOutputAtCoords(coords[0], coords[1], coords[2], coords[3], value);\n      }\n    }`;\n      return userCode;\n    };\n\nexport const createConv2DMatMulProgramInfo =\n    (inputs: readonly TensorView[], metadata: ProgramMetadata, attributes: ConvAttributes,\n     outputShape: readonly number[], dimAOuter: number, dimBOuter: number, dimInner: number, hasBias: boolean,\n     sequentialAccessByThreads: boolean): ProgramInfo => {\n      const isChannelsLast = attributes.format === 'NHWC';\n      const inChannels = isChannelsLast ? inputs[0].dims[3] : inputs[0].dims[1];\n      const batchSize = outputShape[0];\n      const outWidth = isChannelsLast ? outputShape[2] : outputShape[3];\n      const outHeight = isChannelsLast ? outputShape[1] : outputShape[2];\n      const outChannels = isChannelsLast ? outputShape[3] : outputShape[1];\n      const isVec4 = (((inChannels % 4 === 0 || inChannels % 3 === 0) && isChannelsLast) ||\n                      (outWidth % 4 === 0 && !isChannelsLast)) &&\n          outChannels % 4 === 0;\n\n      // TODO: fine tune size\n      const dispatchX = isChannelsLast ? outChannels : outWidth * outHeight;\n      const dispatchY = isChannelsLast ? outWidth * outHeight : outChannels;\n      const workGroupSize: [number, number, number] =\n          isVec4 ? [8, 8, 1] : [dispatchX <= 4 ? 4 : 16, dispatchX > 4 && dispatchY <= 4 ? 4 : 16, 1];\n      const elementsPerThread =\n          isVec4 ? [4, 4, 1] : [dispatchX <= 4 ? 1 : 2, dispatchX > 4 && dispatchY <= 4 ? 1 : 2, 1];\n      const dispatch = [\n        Math.ceil(dispatchX / workGroupSize[0] / elementsPerThread[0]),\n        Math.ceil(dispatchY / workGroupSize[1] / elementsPerThread[1]),\n        Math.ceil(batchSize / workGroupSize[2] / elementsPerThread[1])\n      ];\n\n      LOG_DEBUG('verbose', () => `[conv2d_mm_webgpu] dispatch = ${dispatch}`);\n\n      const innerElementSize = isVec4 ? (isChannelsLast && inChannels % 4 !== 0 ? 3 : 4) : elementsPerThread[0];\n\n      const tileAOuter = workGroupSize[1] * elementsPerThread[1];\n      const tileBOuter = workGroupSize[0] * elementsPerThread[0];\n      const tileInner = Math.max(workGroupSize[0] * innerElementSize, workGroupSize[1]);\n\n      const fitAOuter = dimAOuter % tileAOuter === 0;\n      const fitBOuter = dimBOuter % tileBOuter === 0;\n      const fitInner = dimInner % tileInner === 0;\n\n      const elementsSize = isVec4 ? [innerElementSize, 4, 4] : [1, 1, 1];\n\n      const declareInputs = [\n        `@group(0) @binding(0) var<storage, read> x: array<${isVec4 && innerElementSize === 4 ? 'vec4<f32>' : 'f32'}>;`,\n        `@group(0) @binding(1) var<storage, read> w: array<${isVec4 ? 'vec4<f32>' : 'f32'}>;`\n      ];\n      let declareFunctions = `\n      fn setOutputAtIndex(flatIndex : i32, value : ${isVec4 ? 'vec4<f32>' : 'f32'}) {\n        result[flatIndex] = ${isVec4 ? 'vec4<f32>' : 'f32'}(value);\n      }\n      fn setOutputAtCoords(d0 : i32, d1 : i32, d2 : i32, d3 : i32, value : ${isVec4 ? 'vec4<f32>' : 'f32'}) {\n        let flatIndex = getOutputIndexFromCoords(vec4<i32>(d0, d1, d2, d3));\n        setOutputAtIndex(flatIndex ${isVec4 ? '/ 4' : ''}, value);\n      }`;\n      if (hasBias) {\n        declareInputs.push(`@group(0) @binding(2) var<storage, read> bias: array<${isVec4 ? 'vec4<f32>' : 'f32'}>;`);\n        declareFunctions += `\n        fn getBiasByOutputCoords(coords : vec4<i32>) -> ${isVec4 ? 'vec4<f32>' : 'f32'} {\n          return bias[coords.${isChannelsLast ? 'w' : 'y'}${isVec4 ? '/ 4' : ''}];\n        }`;\n      }\n\n      return {\n        ...metadata,\n        outputs: [{dims: outputShape, dataType: inputs[0].dataType, gpuDataType: GpuDataType.default}],\n        dispatchGroup: () => ({x: dispatch[0], y: dispatch[1], z: dispatch[2]}),\n        getShaderSource: () => `\n        ${utilFunctions}\n        //struct Uniforms { xShape : vec4<i32>, wShape : vec4<i32>, outShape : vec4<i32>,\n        //  outShapeStrides: vec3<i32>, filterDims : vec2<i32>, pad : vec2<i32>, stride : vec2<i32>,\n        //  dilation : vec2<i32>, dimAOuter : i32, dimBOuter : i32, dimInner : i32 };\n        ${declareInputs.join('')}\n        @group(0) @binding(${declareInputs.length}) var<storage, read_write> result: array<${\n            isVec4 ? 'vec4<f32>' : 'f32'}>;\n        //@group(0) @binding(${declareInputs.length + 1}) var<uniform> uniforms: Uniforms;\n\n        const xShape : vec4<i32> = vec4<i32>(${inputs[0].dims.join(',')});\n        const wShape : vec4<i32> = vec4<i32>(${inputs[1].dims.join(',')});\n        const outShape : vec4<i32> = vec4<i32>(${outputShape.join(',')});\n        const outShapeStrides : vec3<i32> = vec3<i32>(${ShapeUtil.computeStrides(outputShape).slice(0, 3).join(',')});\n        const filterDims : vec2<i32> = vec2<i32>(${attributes.kernelShape[0]}, ${attributes.kernelShape[1]});\n        const pad : vec2<i32> = vec2<i32>(${attributes.pads[0]}, ${attributes.pads[1]});\n        const stride : vec2<i32> = vec2<i32>(${attributes.strides[0]}, ${attributes.strides[1]});\n        const dilation : vec2<i32> = vec2<i32>(${attributes.dilations[0]}, ${attributes.dilations[1]});\n        const dimAOuter : i32 = ${dimAOuter};\n        const dimBOuter : i32 = ${dimBOuter};\n        const dimInner : i32 = ${dimInner};\n        ${declareFunctions}\n        ${\n            conv2dCommonSnippet(\n                isChannelsLast, fitAOuter, fitBOuter, fitInner, hasBias, undefined, false, elementsSize[0],\n                elementsSize[1], elementsSize[2])}\n            ${\n            isVec4 ? makeMatMulPackedVec4Source(elementsPerThread, workGroupSize, !isChannelsLast, tileInner) :\n                     makeMatMulPackedSource(\n                         elementsPerThread, workGroupSize, !isChannelsLast, tileInner, false, undefined,\n                         sequentialAccessByThreads)}`\n      };\n    };\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n// sampled from [@tensorflow/tfjs] tfjs-core/src/ops/conv_util.ts\n//\n// modified to fit the needs of the project\n\nexport const utilFunctions = `\nfn getIndexFromCoords4D(coords : vec4<i32>, shape : vec4<i32>) -> i32 {\n  return dot(coords, vec4<i32>(\n      shape.y * shape.z * shape.w, shape.z * shape.w, shape.w, 1));\n}\nfn getOutputIndexFromCoords(coords : vec4<i32>) -> i32 {\n  return dot(coords, vec4<i32>(\n    outShapeStrides.x, outShapeStrides.y, outShapeStrides.z, 1));\n}\n`;\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n// sampled from [@tensorflow/tfjs] tfjs-backend-webgpu/src/matmul_packed_webgpu.ts\n//\n// modified to fit the needs of the project\n\nconst writeDataToSubAVec4Snippet = (transpose: boolean) => {\n  if (transpose) {\n    return `\n        mm_Asub[inputRow][inputCol] = mm_readA(batch,\n          kStart + inputRow,\n          globalRowStart / innerElementSize + inputCol);\n        `;\n\n  } else {\n    return `\n        mm_Asub[inputRow][inputCol] = mm_readA(batch,\n          globalRow + innerRow,\n          kStart / innerElementSize + inputCol);\n        `;\n  }\n};\n\nconst calculateResultSnippet = (transposeA: boolean, innerElementSize: number) => {\n  if (transposeA) {\n    return `\n        let ACached0 = mm_Asub[k * innerElementSize][localRow];\n        let ACached1 = mm_Asub[k * innerElementSize + 1][localRow];\n        let ACached2 = mm_Asub[k * innerElementSize + 2][localRow];\n        ${innerElementSize === 3 ? '' : 'let ACached3 = mm_Asub[k * innerElementSize + 3][localRow];'}\n        for (var i = 0; i < rowPerThread; i = i + 1) {\n          acc[i] = BCached0 * ACached0[i] + acc[i];\n          acc[i] = BCached1 * ACached1[i] + acc[i];\n          acc[i] = BCached2 * ACached2[i] + acc[i];\n          ${innerElementSize === 3 ? '' : 'acc[i] = BCached3 * ACached3[i] + acc[i];'}\n        }`;\n  } else {\n    return `\n        for (var i = 0; i < rowPerThread; i = i + 1) {\n          let ACached = mm_Asub[tileRow + i][k];\n          acc[i] = BCached0 * ACached.x + acc[i];\n          acc[i] = BCached1 * ACached.y + acc[i];\n          acc[i] = BCached2 * ACached.z + acc[i];\n          ${innerElementSize === 3 ? '' : 'acc[i] = BCached3 * ACached.w + acc[i];'}\n        }`;\n  }\n};\n\nexport const makeMatMulPackedVec4Source =\n    (workPerThread: number[], workgroupSize: [number, number, number], transposeA = false, tileInner = 32,\n     splitK = false, splitedDimInner = 32, isVectorA = false): string => {\n      const tileAOuter = workgroupSize[1] * workPerThread[1];\n      const tileBOuter = workgroupSize[0] * workPerThread[0];\n      const tileAWidth = transposeA ? tileAOuter : tileInner;\n      const tileAHight = transposeA ? tileInner : tileAOuter;\n      const innerElementSize = tileAWidth / workgroupSize[0];\n      const rowPerThreadB = tileInner / workgroupSize[1];\n\n      if (!(((transposeA && innerElementSize === 4 && workPerThread[1] === 4) ||\n             (!transposeA && (innerElementSize === 3 || innerElementSize === 4))) &&\n            tileAWidth % workgroupSize[0] === 0 && tileInner % workgroupSize[1] === 0 && workPerThread[0] === 4)) {\n        throw new Error(`If transposeA ${transposeA} is true, innerElementSize ${\n            innerElementSize} and workPerThread[1] ${workPerThread[1]} must be 4.\n      Otherwise, innerElementSize ${innerElementSize} must be 3 or 4.\n  tileAWidth ${tileAWidth} must be divisible by workgroupSize[0]${workgroupSize[0]}. tileInner ${\n            tileInner} must be divisible by workgroupSize[1] ${workgroupSize[1]}. colPerThread ${\n            workPerThread[0]} must be 4.`);\n      }\n      return `\nvar<workgroup> mm_Asub : array<array<vec${innerElementSize}<f32>, ${tileAWidth / innerElementSize}>, ${tileAHight}>;\nvar<workgroup> mm_Bsub : array<array<vec4<f32>, ${tileBOuter / workPerThread[0]}>, ${tileInner}>;\n\nconst rowPerThread = ${workPerThread[1]};\nconst colPerThread = ${workPerThread[0]};\nconst innerElementSize = ${innerElementSize};\nconst tileInner = ${tileInner};\n\n@compute @workgroup_size(${workgroupSize[0]}, ${workgroupSize[1]}, ${workgroupSize[2]})\nfn main(@builtin(local_invocation_id) localId : vec3<u32>,\n        @builtin(global_invocation_id) globalId : vec3<u32>,\n        @builtin(workgroup_id) workgroupId : vec3<u32>) {\n  let localRow = i32(localId.y);\n  let tileRow = ${isVectorA ? '0' : 'localRow * rowPerThread'};\n  let tileCol = i32(localId.x);\n\n  let globalRow = ${isVectorA ? '0' : 'i32(globalId.y) * rowPerThread'};\n  let globalCol = i32(globalId.x);\n  let batch = ${splitK ? '0' : 'i32(globalId.z)'};\n  let globalRowStart = i32(workgroupId.y) * ${tileAOuter};\n\n  let numTiles = ${splitK ? `${Math.ceil(splitedDimInner / tileInner)}` : '(dimInner - 1) / tileInner + 1'};\n  var kStart = ${splitK ? `i32(globalId.z) * ${splitedDimInner}` : '0'};\n\n  var acc: array<vec4<f32>, rowPerThread>;\n\n  // Loop over shared dimension.\n  let tileRowB = localRow * ${rowPerThreadB};\n  for (var t = 0; t < numTiles; t = t + 1) {\n      // Load one tile of A into local memory.\n      for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {\n          let inputRow = tileRow + innerRow;\n          let inputCol = tileCol;\n          ${writeDataToSubAVec4Snippet(transposeA)}\n      }\n\n      // Load one tile of B into local memory.\n      for (var innerRow = 0; innerRow < ${rowPerThreadB}; innerRow = innerRow + 1) {\n          let inputRow = tileRowB + innerRow;\n          let inputCol = tileCol;\n          mm_Bsub[inputRow][inputCol] = mm_readB(batch, kStart + inputRow, globalCol);\n      }\n      kStart = kStart + tileInner;\n      workgroupBarrier();\n\n      // Compute acc values for a single thread.\n      for (var k = 0; k < tileInner / innerElementSize; k = k + 1) {\n          let BCached0 = mm_Bsub[k * innerElementSize][tileCol];\n          let BCached1 = mm_Bsub[k * innerElementSize + 1][tileCol];\n          let BCached2 = mm_Bsub[k * innerElementSize + 2][tileCol];\n          ${innerElementSize === 3 ? '' : 'let BCached3 = mm_Bsub[k * innerElementSize + 3][tileCol];'}\n\n          ${calculateResultSnippet(transposeA, innerElementSize)}\n      }\n\n      workgroupBarrier();\n  }\n\n  for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {\n      mm_write(batch, globalRow + innerRow, globalCol, acc[innerRow]);\n  }\n}`;\n    };\n\nconst writeDataToSubASnippet = (transpose: boolean) => {\n  if (transpose) {\n    return `\n            mm_Asub[inputRow][inputCol] = mm_readA(batch,\n              kStart + inputRow,\n              globalRowStart + inputCol);\n            `;\n\n  } else {\n    return `\n            mm_Asub[inputRow][inputCol] = mm_readA(batch,\n              globalRowStart + inputRow,\n              kStart + inputCol);\n            `;\n  }\n};\n\nconst readDataFromSubASnippet = (transposeA: boolean) =>\n    transposeA ? 'let ACached = mm_Asub[k][tileRow + innerRow];' : 'let ACached = mm_Asub[tileRow + innerRow][k];';\n\n// sequentialAccessByThreads means sequential data in memory is accessed by\n// threads, instead of a single thread (default behavior).\nexport const makeMatMulPackedSource =\n    (workPerThread: number[], workgroupSize: [number, number, number], transposeA = false, tileInner = 32,\n     splitK = false, splitedDimInner = 32, sequentialAccessByThreads = false): string => {\n      const tileAOuter = workPerThread[1] * workgroupSize[1];\n      const tileBOuter = workPerThread[0] * workgroupSize[0];\n      const tileAWidth = transposeA ? tileAOuter : tileInner;\n      const tileAHight = transposeA ? tileInner : tileAOuter;\n\n      if (!(tileAHight % workgroupSize[1] === 0 && tileAWidth % workgroupSize[0] === 0 &&\n            tileInner % workgroupSize[1] === 0)) {\n        throw new Error(`tileAHight ${tileAHight} must be divisible by workgroupSize[1]${\n            workgroupSize[1]}, tileAWidth ${tileAWidth} must be divisible by workgroupSize[0]${\n            workgroupSize[0]}, tileInner ${tileInner} must be divisible by workgroupSize[1]${workgroupSize[1]}`);\n      }\n      const rowPerThreadA = tileAHight / workgroupSize[1];\n      const colPerThreadA = tileAWidth / workgroupSize[0];\n      const rowPerThreadB = tileInner / workgroupSize[1];\n      const matmulSnippet = sequentialAccessByThreads ?\n          `\n    let localRow = i32(localId.y);\n    let localCol = i32(localId.x);\n    let globalRowStart = i32(workgroupId.y) * ${tileAOuter};\n    let globalColStart = i32(workgroupId.x) * ${tileBOuter};\n\n    // Loop over shared dimension.\n    for (var t = 0; t < numTiles; t = t + 1) {\n      // Load one tile of A into local memory.\n      for (var inputRow = localRow; inputRow < ${tileAHight}; inputRow = inputRow + ${workgroupSize[1]}) {\n        for (var inputCol = localCol; inputCol < ${tileAWidth}; inputCol = inputCol + ${workgroupSize[0]}) {\n          ${writeDataToSubASnippet(transposeA)}\n        }\n      }\n      // Load one tile of B into local memory.\n      for (var inputRow = localRow; inputRow < ${tileInner}; inputRow = inputRow + ${workgroupSize[1]}) {\n            for (var inputCol = localCol; inputCol < ${tileBOuter}; inputCol = inputCol + ${workgroupSize[0]}) {\n          mm_Bsub[inputRow][inputCol] = mm_readB(batch,\n            kStart + inputRow,\n            globalColStart + inputCol);\n        }\n      }\n      kStart = kStart + tileInner;\n      workgroupBarrier();\n\n      // Compute acc values for a single thread.\n      var BCached : array<f32, colPerThread>;\n      for (var k = 0; k < tileInner; k = k + 1) {\n        for (var inner = 0; inner < colPerThread; inner = inner + 1) {\n          BCached[inner] = mm_Bsub[k][localCol + inner * ${workgroupSize[0]}];\n        }\n        for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {\n          let ACached = ${\n              transposeA ? `mm_Asub[k][localRow + innerRow * ${workgroupSize[1]}];` :\n                           `mm_Asub[localRow + innerRow * ${workgroupSize[1]}][k];`}\n          for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {\n            acc[innerRow][innerCol] = acc[innerRow][innerCol] +\n                ACached * BCached[innerCol];\n          }\n        }\n      }\n      workgroupBarrier();\n    }\n    for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {\n      let gRow = globalRowStart + localRow + innerRow * ${workgroupSize[1]};\n      for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {\n        let gCol = globalColStart + localCol + innerCol * ${workgroupSize[0]};\n        mm_write(batch, gRow, gCol, acc[innerRow][innerCol]);\n      }\n    }\n    ` :\n          `\nlet tileRow = i32(localId.y) * rowPerThread;\nlet tileCol = i32(localId.x) * colPerThread;\n\nlet globalRow = i32(globalId.y) * rowPerThread;\nlet globalCol = i32(globalId.x) * colPerThread;\nlet globalRowStart = i32(workgroupId.y) * ${tileAOuter};\n\nlet tileRowA = i32(localId.y) * ${rowPerThreadA};\nlet tileColA = i32(localId.x) * ${colPerThreadA};\nlet tileRowB = i32(localId.y) * ${rowPerThreadB};\n// Loop over shared dimension.\nfor (var t = 0; t < numTiles; t = t + 1) {\n  // Load one tile of A into local memory.\n  for (var innerRow = 0; innerRow < ${rowPerThreadA}; innerRow = innerRow + 1) {\n    for (var innerCol = 0; innerCol < ${colPerThreadA}; innerCol = innerCol + 1) {\n      let inputRow = tileRowA + innerRow;\n      let inputCol = tileColA + innerCol;\n      ${writeDataToSubASnippet(transposeA)}\n    }\n  }\n\n  // Load one tile of B into local memory.\n  for (var innerRow = 0; innerRow < ${rowPerThreadB}; innerRow = innerRow + 1) {\n    for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {\n      let inputRow = tileRowB + innerRow;\n      let inputCol = tileCol + innerCol;\n      mm_Bsub[inputRow][inputCol] = mm_readB(batch,\n        kStart + inputRow,\n        globalCol + innerCol);\n    }\n  }\n  kStart = kStart + tileInner;\n  workgroupBarrier();\n\n  // Compute acc values for a single thread.\n  var BCached : array<f32, colPerThread>;\n  for (var k = 0; k < tileInner; k = k + 1) {\n    for (var inner = 0; inner < colPerThread; inner = inner + 1) {\n      BCached[inner] = mm_Bsub[k][tileCol + inner];\n    }\n\n    for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {\n      ${readDataFromSubASnippet(transposeA)}\n      for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {\n        acc[innerRow][innerCol] = acc[innerRow][innerCol] + ACached * BCached[innerCol];\n      }\n    }\n  }\n\n  workgroupBarrier();\n}\n\nfor (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {\n  for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {\n    mm_write(batch, globalRow + innerRow, globalCol + innerCol,\n        acc[innerRow][innerCol]);\n  }\n}\n`;\n\n      return `\n  var<workgroup> mm_Asub : array<array<f32, ${tileAWidth}>, ${tileAHight}>;\n  var<workgroup> mm_Bsub : array<array<f32, ${tileBOuter}>, ${tileInner}>;\n  const rowPerThread = ${workPerThread[1]};\n  const colPerThread = ${workPerThread[0]};\n  const tileInner = ${tileInner};\n\n@compute @workgroup_size(${workgroupSize[0]}, ${workgroupSize[1]}, ${workgroupSize[2]})\nfn main(@builtin(local_invocation_id) localId : vec3<u32>,\n        @builtin(global_invocation_id) globalId : vec3<u32>,\n        @builtin(workgroup_id) workgroupId : vec3<u32>) {\n    let batch = ${splitK ? '0' : 'i32(globalId.z)'};\n    let numTiles = ${splitK ? `${Math.ceil(splitedDimInner / tileInner)}` : '(dimInner - 1) / tileInner + 1'};\n    var kStart = ${splitK ? `i32(globalId.z) * ${splitedDimInner}` : '0'};\n\n    var acc : array<array<f32, colPerThread>, rowPerThread>;\n\n    // Without this initialization strange values show up in acc.\n    for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {\n      for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {\n        acc[innerRow][innerCol] = 0.0;\n      }\n    }\n    ${matmulSnippet}\n  }\n`;\n    };\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {TensorView} from '../../tensor';\nimport {BroadcastUtil, ShapeUtil} from '../../util';\nimport {ComputeContext, GpuDataType, ProgramInfo, ProgramInfoLoader, ProgramMetadata} from '../types';\n\nimport {createIndicesHelper, ShaderHelper} from './common';\n\ntype BuiltinFunctionName = string;\ntype BinaryCustomExpression = (expressionA: string, expressionB: string) => string;\ntype BinaryFunctionCall = BuiltinFunctionName|BinaryCustomExpression|{\n  scalar: BinaryCustomExpression;\n  vector: BinaryCustomExpression;\n};\n\nconst createBinaryOpProgramShader =\n    (shaderHelper: ShaderHelper, dimsA: readonly number[], dimsB: readonly number[], dimsOutput: readonly number[],\n     vectorize: boolean, doBroadcast: boolean, funcCall: BinaryFunctionCall, additionalImplementation?: string,\n     typeA = 'f32', typeB = 'f32', typeOutput = 'f32') => {\n      const outputSize = ShapeUtil.size(dimsOutput);\n      const vecSize = Math.ceil(outputSize / 4);\n\n      let expressionScalar: BinaryCustomExpression;\n      let expressionVector: BinaryCustomExpression;\n      if (typeof funcCall === 'string') {\n        expressionScalar = expressionVector = (a, b) => `${funcCall}((${a}),(${b}))`;\n      } else if (typeof funcCall === 'function') {\n        expressionScalar = expressionVector = funcCall;\n      } else {\n        expressionScalar = funcCall.scalar;\n        expressionVector = funcCall.vector;\n      }\n\n      let broadcastImpl = '';\n      const outputIndicesHelper = createIndicesHelper('output', dimsOutput);\n      if (doBroadcast) {\n        const calcOffsetImpl = (dims: readonly number[]) => {\n          const strides = ShapeUtil.computeStrides(dims);\n          const offsets: string[] = [];\n          for (let i = dims.length - 1; i >= 0; i--) {\n            const idx = dimsOutput.length === 0 ? '0u' :\n                (dimsOutput.length === 1)       ? '(*outputIndices)' :\n                                                  `(*outputIndices)[${i + dimsOutput.length - dims.length}]`;\n            offsets.push(`${strides[i]}u * (${idx} % ${dims[i]}u)`);\n          }\n          return offsets.length > 0 ? offsets.join('+') : '0u';\n        };\n\n        broadcastImpl = `\n  ${outputIndicesHelper.o2iImpl}\n\n  fn calcOffsetA(outputIndices: ptr<function, ${outputIndicesHelper.iType}>) -> u32 {\n    return ${calcOffsetImpl(dimsA)};\n  }\n\n  fn calcOffsetB(outputIndices: ptr<function, ${outputIndicesHelper.iType}>) -> u32 {\n    return ${calcOffsetImpl(dimsB)};\n  }\n  `;\n      }\n\n      let assignment: string;\n      if (vectorize) {\n        if (doBroadcast) {\n          assignment = `\n      ${outputIndicesHelper.indicesVariableDeclaration('outputIndices')}\n      ${outputIndicesHelper.o2iCall('global_idx * 4u', 'outputIndices')}\n      let offsetA = calcOffsetA(&outputIndices);\n      let offsetB = calcOffsetB(&outputIndices);\n      outputData[global_idx] = ${expressionVector('aData[offsetA / 4u]', 'bData[offsetB / 4u]')};`;\n        } else {\n          assignment = `outputData[global_idx] = ${expressionVector('aData[global_idx]', 'bData[global_idx]')};`;\n        }\n      } else {\n        if (!doBroadcast) {\n          throw new Error('no necessary to use scalar implementation for element-wise binary op implementation.');\n        }\n        const singleAssignment = (x: number) => {\n          const expressionA = `aData[indexA${x}][componentA${x}]`;\n          const expressionB = `bData[indexB${x}][componentB${x}]`;\n          return `\n      ${outputIndicesHelper.o2iCall(`global_idx * 4u + ${x}u`, 'outputIndices')}\n      let offsetA${x} = calcOffsetA(&outputIndices);\n      let offsetB${x} = calcOffsetB(&outputIndices);\n      let indexA${x} = offsetA${x} / 4u;\n      let indexB${x} = offsetB${x} / 4u;\n      let componentA${x} = offsetA${x} % 4u;\n      let componentB${x} = offsetB${x} % 4u;\n      outputData[global_idx][${x}] = ${expressionScalar(expressionA, expressionB)};`;\n        };\n\n        assignment = `\n      ${outputIndicesHelper.indicesVariableDeclaration('outputIndices')}\n      ${singleAssignment(0)}\n      ${singleAssignment(1)}\n      ${singleAssignment(2)}\n      ${singleAssignment(3)}`;\n      }\n\n      return `\n  @group(0) @binding(0) var<storage, read> aData : array<vec4<${typeA}>>;\n  @group(0) @binding(1) var<storage, read> bData : array<vec4<${typeB}>>;\n  @group(0) @binding(2) var<storage, read_write> outputData : array<vec4<${typeOutput}>>;\n\n  ${additionalImplementation ?? ''}\n  ${broadcastImpl}\n\n  ${shaderHelper.mainStart()}\n    ${shaderHelper.guardAgainstOutOfBoundsWorkgroupSizes(vecSize)}\n    ${assignment}\n  }`;\n    };\n\nconst createBinaryOpProgramInfo =\n    (metadata: ProgramMetadata, a: TensorView, b: TensorView, funcCall: BinaryFunctionCall,\n     additionalImplementation?: string, outputDataType: number = a.dataType): ProgramInfo => {\n      const isBroadcast = !ShapeUtil.areEqual(a.dims, b.dims);\n      let outputShape = a.dims;\n      let outputSize = ShapeUtil.size(a.dims);\n\n      let vectorize = false;\n\n      // TODO: deal with zero-sized tensors (eg. dims=[1,0])\n\n      if (isBroadcast) {\n        const calculatedShape = BroadcastUtil.calcShape(a.dims, b.dims, false);\n        if (!calculatedShape) {\n          throw new Error('Can\\'t perform binary op on the given tensors');\n        }\n        outputShape = calculatedShape;\n        outputSize = ShapeUtil.size(outputShape);\n\n        // check whether vectorize can be enabled\n        let sharedDimension = 1;\n        for (let i = 0; i < outputShape.length; i++) {\n          const dimA = a.dims[a.dims.length - i] ?? 1;\n          const dimB = b.dims[b.dims.length - i] ?? 1;\n          if (dimA === dimB) {\n            sharedDimension *= dimA;\n          } else {\n            break;\n          }\n        }\n        if (sharedDimension % 4 === 0) {\n          vectorize = true;\n        }\n\n\n      } else {\n        // element-wise\n        vectorize = true;\n      }\n\n      return {\n        ...metadata,\n        getShaderSource: (shaderHelper) => createBinaryOpProgramShader(\n            shaderHelper, a.dims, b.dims, outputShape, vectorize, isBroadcast, funcCall, additionalImplementation),\n        outputs: [{dims: outputShape, dataType: outputDataType, gpuDataType: GpuDataType.default}],\n        dispatchGroup: () =>\n            ({x: Math.ceil(outputSize / 64 /* workgroup size */ / (vectorize ? 4 : 1) /* vec size */)})\n      };\n    };\n\nconst createBinaryOpProgramInfoLoader =\n    (inputs: readonly TensorView[], name: string, funcCall: BinaryFunctionCall, additionalImplementation?: string,\n     cacheKey?: string): ProgramInfoLoader => {\n      const metadata:\n          ProgramMetadata = {name, inputTypes: [GpuDataType.default, GpuDataType.default], cacheHint: cacheKey};\n      return {\n        ...metadata,\n        get: () => createBinaryOpProgramInfo(metadata, inputs[0], inputs[1], funcCall, additionalImplementation)\n      };\n    };\n\nexport const add = (context: ComputeContext): void => {\n  context.compute(createBinaryOpProgramInfoLoader(context.inputs, 'Add', (a, b) => `${a}+${b}`));\n};\n\nexport const div = (context: ComputeContext): void => {\n  context.compute(createBinaryOpProgramInfoLoader(context.inputs, 'Div', (a, b) => `${a}/${b}`));\n};\n\nexport const mul = (context: ComputeContext): void => {\n  context.compute(createBinaryOpProgramInfoLoader(context.inputs, 'Mul', (a, b) => `${a}*${b}`));\n};\n\nexport const pow = (context: ComputeContext): void => {\n  context.compute(createBinaryOpProgramInfoLoader(\n      context.inputs, 'Pow', ({scalar: (a, b) => `pow_f32(${a},${b})`, vector: (a, b) => `pow_vf32(${a},${b})`}), `\n    fn pow_f32(a : f32, b : f32) -> f32 {\n      if (b == 0.0) {\n        return 1.0;\n      } else if (a < 0.0 && b != floor(b)) {\n        return pow(a, b); // NaN\n      }\n      return select(sign(a), 1.0, round(abs(b) % 2.0) != 1.0) * pow(abs(a), b);\n    }\n    fn pow_vf32(a : vec4<f32>, b : vec4<f32>) -> vec4<f32> {\n      // TODO: implement vectorized pow\n      return vec4<f32>(pow_f32(a.x, b.x), pow_f32(a.y, b.y), pow_f32(a.z, b.z), pow_f32(a.w, b.w));\n    }\n      `));\n};\n\nexport const sub = (context: ComputeContext): void => {\n  context.compute(createBinaryOpProgramInfoLoader(context.inputs, 'Sub', (a, b) => `${a}-${b}`));\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {ShapeUtil} from '../../util';\n\n/**\n * constant value for a workgroup size.\n *\n * We definitely can do further optimization in future, but for now we use 64.\n *\n * rule of thumb: Use [a workgroup size of] 64 unless you know what GPU you are targeting or that your workload\n *                needs something different.\n *\n * from: https://surma.dev/things/webgpu/\n **/\nexport const WORKGROUP_SIZE = 64;\n\nexport interface IndicesHelper {\n  /**\n   * WGSL code of function implementation for offset-to-indices\n   */\n  o2iImpl: string;\n  /**\n   * WGSL code of function call for offset-to-indices\n   */\n  o2iCall: (varOffset: string, varIndices: string) => string;\n  /**\n   * WGSL code of function implementation for indices-to-offset\n   */\n  i2oImpl: string;\n  /**\n   * WGSL code of function implementation for indices-to-offset\n   *\n   * @param isPtr - whether the variable is a pointer. default is false.\n   */\n  i2oExpression: (varIndices: string, isPtr?: boolean) => string;\n  /**\n   * WGSL code of indices variable declaration\n   *\n   * @param v - variable name.\n   * @param init - initial value.\n   */\n  indicesVariableDeclaration: (v: string, init?: string[]) => string;\n  /**\n   * data type of indices\n   */\n  iType: string;\n}\n\nexport const createIndicesHelper = (name: string, shape: readonly number[]): IndicesHelper => {\n  const iType = shape.length < 2 ? 'u32' : `array<u32, ${shape.length}>`;\n\n  const strides = ShapeUtil.computeStrides(shape);\n  let o2iSnippet = '';\n  for (let i = 0; i < shape.length - 1; i++) {\n    o2iSnippet += `\n    let dim${i} = current / ${strides[i]}u;\n    let rest${i} = current % ${strides[i]}u;\n    (*indices)[${i}] = dim${i};\n    current = rest${i};\n    `;\n  }\n  o2iSnippet += `(*indices)[${shape.length - 1}] = current;`;\n\n  const o2iImpl = shape.length < 2 ? '' : `\n  fn ih_o2i_${name}(offset: u32, indices: ptr<function, ${iType}>) {\n    var current = offset;\n    ${o2iSnippet}\n  }`;\n\n  const o2iCall = (varOffset: string, varIndices: string) =>\n      shape.length < 2 ? `${varIndices}=${varOffset};` : `ih_o2i_${name}(${varOffset}, &${varIndices});`;\n\n  const offsets: string[] = [];\n  if (shape.length === 0) {\n    offsets.push('0u');\n  } else if (shape.length < 2) {\n    offsets.push('(*indices)');\n  } else {\n    for (let i = shape.length - 1; i >= 0; i--) {\n      offsets.push(`${strides[i]}u * ((*indices)[${i}])`);\n    }\n  }\n\n  const i2oImpl = shape.length < 2 ? '' : `\n  fn ih_i2o_${name}(indices: ptr<function, ${iType}>) -> u32 {\n    return ${offsets.join('+')};\n  }`;\n\n  const i2oExpression = (varIndices: string, isPtr?: boolean) =>\n      shape.length < 2 ? `(${isPtr ? '*' : ''}${varIndices})` : `ih_i2o_${name}(${isPtr ? '' : '&'}${varIndices})`;\n\n  const indicesVariableDeclaration = (v: string, init?: string[]) =>\n      `var ${v}:${iType}${init ? `=${iType}(${init.join(',')})` : ''};`;\n\n  return {o2iImpl, o2iCall, i2oImpl, i2oExpression, indicesVariableDeclaration, iType};\n};\n\n/**\n * A ShaderHelper is a helper class for generating WGSL code.\n */\nexport interface ShaderHelper {\n  mainStart(workgroupSize?: number|[number, number, number]): string;\n  guardAgainstOutOfBoundsWorkgroupSizes(size: unknown): string;\n}\n\nclass ShaderHelperImpl implements ShaderHelper {\n  constructor(private normalizedDispatchGroup: [number, number, number]) {}\n  guardAgainstOutOfBoundsWorkgroupSizes(size: number|string): string {\n    // Guard against out-of-bounds work group sizes\n    const sizeInCode = typeof size === 'number' ? `${size}u` : size;\n    return `if (global_idx >= ${sizeInCode}) { return; }`;\n  }\n  mainStart(workgroupSize: number|[number, number, number] = WORKGROUP_SIZE) {\n    const workgroupSizeX = typeof workgroupSize === 'number' ? workgroupSize : workgroupSize[0];\n    const workgroupSizeY = typeof workgroupSize === 'number' ? 1 : workgroupSize[1];\n    const workgroupSizeZ = typeof workgroupSize === 'number' ? 1 : workgroupSize[2];\n\n    const is1DimensionDispatch = this.normalizedDispatchGroup[1] === 1 && this.normalizedDispatchGroup[2] === 1;\n    const paramList = is1DimensionDispatch ? '@builtin(global_invocation_id) global_id : vec3<u32>' :\n                                             `@builtin(local_invocation_index) local_index : u32,\n    @builtin(workgroup_id) workgroup_id : vec3<u32>`;\n    const globalIdxDefinition = is1DimensionDispatch ?\n        'let global_idx = global_id.x;' :\n        `let global_idx = (workgroup_id.z * ${this.normalizedDispatchGroup[0] * this.normalizedDispatchGroup[1]}u +\n          workgroup_id.y * ${this.normalizedDispatchGroup[0]}u + workgroup_id.x) * ${\n            workgroupSizeX * workgroupSizeY * workgroupSizeZ}u + local_index;`;\n\n    return `@compute @workgroup_size(${workgroupSizeX}, ${workgroupSizeY}, ${workgroupSizeZ})\n  fn main(${paramList}) {\n    ${globalIdxDefinition}\n  `;\n  }\n}\n\nexport const createShaderHelper = (dispatchGroup: [number, number, number]): ShaderHelper =>\n    new ShaderHelperImpl(dispatchGroup);\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {TensorView} from '../../tensor';\nimport {ShapeUtil} from '../../util';\nimport {GpuDataType, ProgramInfo, ProgramInfoLoader, ProgramMetadata} from '../types';\n\nimport {createIndicesHelper, ShaderHelper} from './common';\nimport {calculateOutputShape, ConvAttributes} from './conv';\nimport {getActicationSnippet} from './fuse-utils';\n\nconst createGroupedConvProgramMetadata = (hasBias: boolean, cacheHint: string): ProgramMetadata => ({\n  name: 'GroupedConv',\n  inputTypes: hasBias ? [GpuDataType.default, GpuDataType.default, GpuDataType.default] :\n                        [GpuDataType.default, GpuDataType.default],\n  cacheHint\n});\n\nconst createGroupedConvProgramInfo =\n    (inputs: readonly TensorView[], metadata: ProgramMetadata, attributes: ConvAttributes,\n     squeezeOutputShapeFunction?: (shape: readonly number[]) => number[]): ProgramInfo => {\n      const hasBias = inputs.length > 2;\n      const processBias = hasBias ? 'value += b[output_channel];' : '';\n      const xShape = inputs[0].dims;\n      const wShape = inputs[1].dims;\n      const outputChannelsPerGroup = wShape[0] / attributes.group;\n\n      const dataType = 'f32';  // TODO: support other data type\n      const {activationFunction, applyActivation} = getActicationSnippet(attributes);\n      const inputStorageBuffersDeclarations = [\n        `@group(0) @binding(0) var<storage, read> x : array<${dataType}>;`,\n        `@group(0) @binding(1) var<storage, read> w : array<${dataType}>;`\n      ];\n      if (hasBias) {\n        inputStorageBuffersDeclarations.push(`@group(0) @binding(2) var<storage, read> b : array<${dataType}>;`);\n      }\n\n      const isChannelLast = attributes.format === 'NHWC';\n      const outputShape = calculateOutputShape(\n          xShape, wShape, attributes.dilations, attributes.pads, attributes.strides, isChannelLast);\n      const outputSize = ShapeUtil.size(outputShape);\n      const outputIndicesHelper = createIndicesHelper('output', outputShape);\n      const xIndicesHelper = createIndicesHelper('x', xShape);\n      const wIndicesHelper = createIndicesHelper('w', wShape);\n\n      const getShaderSource = (shaderHelper: ShaderHelper) => `\n  const strides: vec2<u32> = vec2(${attributes.strides[0]}u, ${attributes.strides[1]}u);\n  const pads: vec2<u32> = vec2(${attributes.pads[0]}u, ${attributes.pads[1]}u);\n\n  ${inputStorageBuffersDeclarations.join('\\n')}\n  @group(0) @binding(${inputStorageBuffersDeclarations.length}) var<storage, read_write> output : array<${dataType}>;\n\n  ${activationFunction}\n  ${outputIndicesHelper.o2iImpl}\n  ${xIndicesHelper.i2oImpl}\n  ${wIndicesHelper.i2oImpl}\n\n  ${shaderHelper.mainStart()}\n    ${shaderHelper.guardAgainstOutOfBoundsWorkgroupSizes(outputSize)}\n\n    ${outputIndicesHelper.indicesVariableDeclaration('outputIndices')}\n    ${outputIndicesHelper.o2iCall('global_idx', 'outputIndices')}\n    let batch: u32 = outputIndices[0];\n    let output_channel: u32 = outputIndices[${isChannelLast ? 3 : 1}];\n    let xRCCorner: vec2<u32> = vec2<u32>(outputIndices[${isChannelLast ? 1 : 2}], outputIndices[${\n          isChannelLast ? 2 : 3}]) * strides - pads;\n    let group_id: u32 = output_channel / ${outputChannelsPerGroup}u;\n\n    var value: ${dataType} = ${dataType}(0);\n    for (var wInChannel: u32 = 0u; wInChannel < ${wShape[1]}u; wInChannel++) {\n      let input_channel = group_id * ${wShape[1]}u + wInChannel;\n      for (var wHeight: u32 = 0u; wHeight < ${wShape[2]}u; wHeight++) {\n        let xHeight = xRCCorner.x + wHeight * ${attributes.dilations[0]}u;\n\n        if (xHeight < 0u || xHeight >= ${xShape[isChannelLast ? 1 : 2]}u) {\n          continue;\n        }\n\n        for (var wWidth: u32 = 0u; wWidth < ${wShape[3]}u; wWidth++) {\n          let xWidth = xRCCorner.y + wWidth * ${attributes.dilations[1]}u;\n          if (xWidth < 0u || xWidth >= ${xShape[isChannelLast ? 2 : 3]}u) {\n            continue;\n          }\n\n          ${\n          xIndicesHelper.indicesVariableDeclaration(\n              'xIndices',\n              isChannelLast ? ['batch', 'xHeight', 'xWidth', 'input_channel'] :\n                              [\n                                'batch', 'input_channel', 'xHeight', 'xWidth'\n                              ])}\n          let xVal = x[${xIndicesHelper.i2oExpression('xIndices')}];\n          ${\n          wIndicesHelper.indicesVariableDeclaration('wIndices', [\n            'output_channel', 'wInChannel', 'wHeight', 'wWidth'\n          ])}\n          let wVal = w[${wIndicesHelper.i2oExpression('wIndices')}];\n          value += xVal*wVal;\n        }\n      }\n    }\n    ${processBias}\n    ${applyActivation}\n    output[global_idx] = value;\n  }`;\n      return {\n        ...metadata,\n        outputs: [{\n          dims: squeezeOutputShapeFunction ? squeezeOutputShapeFunction(outputShape) : outputShape,\n          dataType: inputs[0].dataType,\n          gpuDataType: GpuDataType.default\n        }],\n        getShaderSource,\n        dispatchGroup: () => ({x: Math.ceil(outputSize / 64 /* workgroup size */)})\n      };\n    };\n\n/**\n * naive grouped conv implementation, supports 1d/2d conv\n * @param squeezeOutputShapeFunction - an optional function to squeeze the output shape, only used in conv1d\n */\nexport const createGroupedConvProgramInfoLoader =\n    (inputs: readonly TensorView[], attributes: ConvAttributes,\n     squeezeOutputShapeFunction?: (shape: readonly number[]) => number[]): ProgramInfoLoader => {\n      const metadata = createGroupedConvProgramMetadata(inputs.length > 2, attributes.cacheKey);\n      return {\n        ...metadata,\n        get: () => createGroupedConvProgramInfo(inputs, metadata, attributes, squeezeOutputShapeFunction)\n      };\n    };\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {DataType} from '../../../wasm-common';\nimport {TensorView} from '../../tensor';\nimport {PoolConvUtil} from '../../util';\nimport {AttributeWithCacheKey, createAttributeWithCacheKey} from '../attribute-with-cache-key';\nimport {ComputeContext} from '../types';\n\nimport {createGroupedConvProgramInfoLoader} from './conv-grouped';\nimport {createConv2DMatMulProgramInfoLoader} from './conv2d-mm';\nimport {InternalActivationAttributes, parseInternalActivationAttributes} from './fuse-utils';\nimport {createTransposeProgramInfo, TransposeAttributes, transposeProgramMetadata} from './transpose';\n\nexport const calculateOutputShape =\n    (inputShape: readonly number[], kernelShape: readonly number[], dilations: readonly number[],\n     adjustPads: readonly number[], strides: readonly number[], isChannelLast: boolean): number[] => {\n      const batchSize = inputShape[0];\n      const inputSpatialShape = inputShape.slice(isChannelLast ? 1 : 2, isChannelLast ? 3 : 4);\n      const spatialRank = inputSpatialShape.length;\n      const outChannels = kernelShape[0];\n      const kernelSpatialShape = kernelShape.slice(2);\n      const dilatedKernelShape = kernelSpatialShape.map((v, i) => v + (v - 1) * (dilations[i] - 1));\n      const inputSpatialShapeWithPad = inputSpatialShape.map((v, i) => v + adjustPads[i] + adjustPads[i + spatialRank]);\n      const outputShape =\n          inputSpatialShapeWithPad.map((v, i) => Math.floor((v - dilatedKernelShape[i] + strides[i]) / strides[i]));\n      outputShape.splice(0, 0, batchSize);\n      outputShape.splice(isChannelLast ? 3 : 1, 0, outChannels);\n      return outputShape;\n    };\n\nexport interface ConvAttributes extends InternalActivationAttributes, AttributeWithCacheKey {\n  readonly autoPad: string;\n  readonly dilations: readonly number[];\n  readonly format: 'NHWC'|'NCHW';\n  readonly group: number;\n  readonly kernelShape: readonly number[];\n  readonly pads: readonly number[];\n  readonly strides: readonly number[];\n  readonly wIsConst: boolean;\n}\n\n// for transposing weight tensor from [M, C/group, KH, KW] to [KH, KW, C/group, M]\nconst weightTransposeAttribute: TransposeAttributes = createAttributeWithCacheKey({perm: [2, 3, 1, 0]});\n\nconst validateInputs = (inputs: readonly TensorView[], attributes: ConvAttributes): void => {\n  // Refer to the below link for all input checks\n  // https://github.com/onnx/onnx/blob/master/docs/Operators.md#Conv\n  if (!inputs || (inputs.length !== 2 && inputs.length !== 3)) {\n    throw new Error('Conv requires 2 or 3 inputs');\n  }\n\n  // TODO : Need to add support for multi-dimensional conv\n  if (inputs[0].dims.length !== 4 && inputs[0].dims.length !== 3) {\n    throw new Error('currently only support conv 1D and 2D');\n  }\n\n  if (inputs[0].dims.length !== inputs[1].dims.length) {\n    throw new Error('filter does not have same dimension as input');\n  }\n\n  // FILTER_IN_CHANNEL should be equal to DATA_CHANNEL\n  const dataChannel = inputs[0].dims[attributes.format === 'NHWC' ? inputs[0].dims.length - 1 : 1];\n  const filterInChannel = inputs[1].dims[1] * attributes.group;\n  if (dataChannel !== filterInChannel) {\n    throw new Error('FILTER_IN_CHANNEL should be equal to DATA_CHANNEL');\n  }\n\n  // if bias is provided it should be 1D and the number of elements should be equal to the number of feature maps\n  if (inputs.length === 3 && (inputs[2].dims.length !== 1 || inputs[1].dims[0] !== inputs[2].dims[0])) {\n    throw new Error('invalid bias');\n  }\n\n  const spatialRank = inputs[0].dims.length - 2;\n  // wrong dilations dimension\n  if (attributes.dilations.length !== spatialRank) {\n    throw new Error(`dilations should be ${spatialRank}D`);\n  }\n\n  // Wrong strides dimension\n  if (attributes.strides.length !== spatialRank) {\n    throw new Error(`strides should be ${spatialRank}D`);\n  }\n\n  // Wrong pads dimension\n  if (attributes.pads.length !== spatialRank * 2) {\n    throw new Error(`pads should be ${spatialRank * 2}D`);\n  }\n\n  // if kernelShape is specified, it's data length must be 2 less than dims length of the weights tensor\n  // (the first 2 dims are batch_size and channels)\n  if (attributes.kernelShape.length !== 0 && attributes.kernelShape.length !== inputs[1].dims.length - 2) {\n    throw new Error('invalid kernel shape');\n  }\n\n  // TODO : Need to add support for float64\n  if (inputs[0].dataType !== DataType.float || inputs[1].dataType !== DataType.float) {\n    throw new Error('Conv input(X,W) should be float tensor');\n  }\n\n  if (inputs.length === 3 && inputs[2].dataType !== DataType.float) {\n    throw new Error('Conv input(bias) should be float tensor');\n  }\n};\n\nconst getAdjustedConvAttributes = <T extends ConvAttributes>(attributes: T, inputs: readonly TensorView[]): T => {\n  const kernelShape = attributes.kernelShape.slice();\n  // if kernelShape is not specified in the attributes of this op, infer it from the weight tensor dims\n  for (let i = 2; i < inputs[1].dims.length; ++i) {\n    if (kernelShape[i - 2] === 0) {\n      kernelShape[i - 2] = inputs[1].dims[i];\n    }\n  }\n  const pads = attributes.pads.slice();\n  PoolConvUtil.adjustPadsBasedOnAutoPad(\n      inputs[0].dims, attributes.strides, attributes.dilations, kernelShape, pads, attributes.format === 'NHWC',\n      attributes.autoPad);\n\n  // always return a new object so does not modify the original attributes\n  const newAttributes: T = Object.assign({}, attributes);\n  Object.assign(newAttributes, {kernelShape, pads, cacheKey: attributes.cacheKey});\n  return newAttributes;\n};\n\nexport const parseConvAttributes = (attributes: Record<string, unknown>): ConvAttributes => {\n  const activationAttributes = parseInternalActivationAttributes(attributes);\n  // TODO : Make this generic enough to compute default attributes for multi-dimensional conv\n  const format = attributes.format as 'NHWC' | 'NCHW';\n  const autoPad = ['NOTSET', 'VALID', 'SAME_UPPER', 'SAME_LOWER'][attributes.auto_pad as number];\n  const dilations = attributes.dilations as [number, number];\n  const group = attributes.group as number;\n  const kernelShape = attributes.kernel_shape as [number, number];\n  const pads = attributes.pads as [number, number, number, number];\n  const strides = attributes.strides as [number, number];\n  const wIsConst = (attributes.w_is_const as () => boolean)();\n\n  return createAttributeWithCacheKey(\n      {autoPad, format, dilations, group, kernelShape, pads, strides, wIsConst, ...activationAttributes});\n};\n\nconst conv2d = (context: ComputeContext, inputs: readonly TensorView[], attributes: ConvAttributes): void => {\n  const adjustedAttributes = getAdjustedConvAttributes(attributes, inputs);\n\n  // check attributes\n\n  const hasBias = inputs.length === 3;\n  // const hasPreluActivationWeights = false; /* TODO: add support for prelu activation weights */\n  const isChannelsLast = attributes.format === 'NHWC';\n\n  // const batchSize = context.inputs[0].dims[0];\n  const inputHeight = inputs[0].dims[isChannelsLast ? 1 : 2];\n  const inputWidth = inputs[0].dims[isChannelsLast ? 2 : 3];\n  const inputChannels = inputs[0].dims[isChannelsLast ? 3 : 1];\n  const weightHeight = inputs[1].dims[2];\n  const weightWidth = inputs[1].dims[3];\n\n  const outputShape = calculateOutputShape(\n      inputs[0].dims, inputs[1].dims, attributes.dilations, adjustedAttributes.pads, attributes.strides,\n      isChannelsLast);\n  const outHeight = outputShape[isChannelsLast ? 1 : 2];\n  const outWidth = outputShape[isChannelsLast ? 2 : 3];\n  const outChannels = outputShape[isChannelsLast ? 3 : 1];\n\n  const sameSize =\n      isChannelsLast && weightHeight === inputHeight && weightWidth === inputWidth && attributes.autoPad === 'VALID';\n  if (sameSize ||\n      (weightHeight === 1 && weightWidth === 1 && attributes.dilations[0] === 1 && attributes.dilations[1] === 1 &&\n       attributes.strides[0] === 1 && attributes.strides[1] === 1 &&\n       (attributes.autoPad === 'SAME_UPPER' || attributes.autoPad === 'SAME_LOWER' ||\n        attributes.autoPad === 'VALID'))) {\n    // TODO: implement conv2dByMatMul()\n    context.compute(createGroupedConvProgramInfoLoader(inputs, adjustedAttributes));\n    return;\n  }\n\n  if (!isChannelsLast || attributes.group !== 1) {\n    context.compute(createGroupedConvProgramInfoLoader(inputs, adjustedAttributes));\n    return;\n  }\n\n  // TODO: implement conv2dWithIm2Col()\n\n  const dimAOuter = isChannelsLast ? outHeight * outWidth : outChannels;\n  const dimBOuter = isChannelsLast ? outChannels : outHeight * outWidth;\n  const dimInner = weightHeight * weightWidth * inputChannels;\n\n  const sequentialAccessByThreads = /* backend.adapterInfo.isIntel() */ true;\n\n  // STEP.1: transpose weight\n  const transposedWeight = (context.customData.wT as TensorView | undefined) ??\n      context.compute(\n          {\n            ...transposeProgramMetadata,\n            cacheHint: weightTransposeAttribute.cacheKey,\n            get: () => createTransposeProgramInfo(inputs[1], weightTransposeAttribute.perm)\n          },\n          {inputs: [1], outputs: [attributes.wIsConst ? -2 : -1]})[0];\n  if (attributes.wIsConst && !context.customData.wT) {\n    context.customData.wT = transposedWeight;\n  }\n\n  // STEP.2: prepare reshaped inputs\n  const convInputs = [inputs[0], transposedWeight];\n  if (hasBias) {\n    if (!isChannelsLast && inputs[2].dims.length === 1) {\n      convInputs.push(inputs[2].reshape([inputs[2].dims[0], 1, 1]));\n    } else {\n      convInputs.push(inputs[2]);\n    }\n  }\n\n  // STEP.3: compute matmul\n  context.compute(\n      createConv2DMatMulProgramInfoLoader(\n          convInputs, adjustedAttributes, outputShape, dimAOuter, dimBOuter, dimInner, hasBias,\n          sequentialAccessByThreads),\n      {inputs: convInputs});\n};\n\nconst conv1d = (context: ComputeContext, attributes: ConvAttributes): void => {\n  // extend the input to 2D by adding H dimension\n  const isChannelLast = attributes.format === 'NHWC';\n  const inputs = [\n    context.inputs[0].reshape(\n        isChannelLast ?\n            // [N, W, C] -> [N, H=1, W, C]\n            [context.inputs[0].dims[0], 1, context.inputs[0].dims[1], context.inputs[0].dims[2]] :\n            // [N, C, W] -> [N, C, H=1, W]\n            [context.inputs[0].dims[0], context.inputs[0].dims[1], 1, context.inputs[0].dims[2]]),\n    //[FILTER_OUT_CHANNEL, FILTER_IN_CHANNEL, kW] -> [FILTER_OUT_CHANNEL, FILTER_IN_CHANNEL, kH=1, kW]\n    context.inputs[1].reshape([context.inputs[1].dims[0], context.inputs[1].dims[1], 1, context.inputs[1].dims[2]])\n  ];\n  if (context.inputs.length === 3) {\n    inputs.push(context.inputs[2]);\n  }\n  const pads = [0, attributes.pads[0], 0, attributes.pads[1]];\n  const strides = [1].concat(attributes.strides);\n  const dilations = [1].concat(attributes.dilations);\n  const kernelShape = [1].concat(attributes.kernelShape);\n  const adjustedAttributes = getAdjustedConvAttributes({...attributes, pads, strides, dilations, kernelShape}, inputs);\n  context.compute(createGroupedConvProgramInfoLoader(\n      inputs, adjustedAttributes,\n      outputShape => isChannelLast ? [outputShape[0], outputShape[2], outputShape[3]] : []));\n};\n\nexport const conv = (context: ComputeContext, attributes: ConvAttributes): void => {\n  validateInputs(context.inputs, attributes);  // currently will fail if not conv1D/2D\n  if (context.inputs[0].dims.length === 3) {\n    conv1d(context, attributes);\n  } else {\n    conv2d(context, context.inputs, attributes);\n  }\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {TensorView} from '../../tensor';\nimport {GpuDataType, ProgramInfoLoader, ProgramMetadata} from '../types';\n\nimport {createConv2DMatMulProgramInfo} from './3rd-party/conv2d_mm_webgpu';\nimport {ConvAttributes} from './conv';\n\n\nconst createConv2DMatMulProgramMetadata = (hasBias: boolean, cacheHint: string): ProgramMetadata => ({\n  name: 'Conv2DMatMul',\n  inputTypes: hasBias ? [GpuDataType.default, GpuDataType.default, GpuDataType.default] :\n                        [GpuDataType.default, GpuDataType.default],\n  cacheHint\n});\n\nexport const createConv2DMatMulProgramInfoLoader =\n    (inputs: readonly TensorView[], attributes: ConvAttributes, outputShape: readonly number[], dimAOuter: number,\n     dimBOuter: number, dimInner: number, hasBias: boolean, sequentialAccessByThreads: boolean): ProgramInfoLoader => {\n      const metadata = createConv2DMatMulProgramMetadata(hasBias, attributes.cacheKey);\n      return {\n        ...metadata,\n        get: () => createConv2DMatMulProgramInfo(\n            inputs, metadata, attributes, outputShape, dimAOuter, dimBOuter, dimInner, hasBias,\n            sequentialAccessByThreads)\n      };\n    };\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {MAX_CLIP, MIN_CLIP} from '../../util';\n\nexport interface InternalActivationAttributes {\n  readonly activation: string;\n  readonly clipMin?: number;\n  readonly clipMax?: number;\n  readonly activationCacheKey: string;\n}\n\nexport const getActicationSnippet =\n    (attributes: InternalActivationAttributes): {activationFunction: string; applyActivation: string} => {\n      switch (attributes.activation) {\n        case 'Relu':\n          return {activationFunction: '', applyActivation: 'value = max(value, 0.0);'};\n        case 'Sigmoid':\n          return {activationFunction: '', applyActivation: 'value = (1.0 / (1.0 + exp(-value)));'};\n        case 'Clip':\n          return {\n            activationFunction:\n                `const clip_min_=f32(${attributes.clipMin!});const clip_max_=f32(${attributes.clipMax!});`,\n            applyActivation: 'value = clamp(value, clip_min_, clip_max_);'\n          };\n          // TODO: adding other activations that can be fused.\n        default:\n          return {activationFunction: '', applyActivation: ''};\n      }\n    };\n\nexport const parseInternalActivationAttributes =\n    (attributes: Record<string, unknown>|undefined): InternalActivationAttributes => {\n      const activation = attributes?.activation as string || '';\n\n      if (activation === 'Clip') {\n        const [clipMin, clipMax] = attributes?.activation_params as [number, number] || [MIN_CLIP, MAX_CLIP];\n        return {activation, clipMax, clipMin, activationCacheKey: `${activation}:${clipMin},${clipMax}`};\n      }\n      return {activation, activationCacheKey: activation};\n    };\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {DataType} from '../../../wasm-common';\nimport {TensorView} from '../../tensor';\nimport {GemmUtil, ShapeUtil} from '../../util';\nimport {AttributeWithCacheKey, createAttributeWithCacheKey} from '../attribute-with-cache-key';\nimport {ComputeContext, GpuDataType, ProgramInfo, ProgramInfoLoader, ProgramMetadata} from '../types';\n\nimport {ShaderHelper} from './common';\n\nconst validateInputs = (inputs: readonly TensorView[]): void => {\n  if (!inputs) {\n    throw new Error('Input is missing');\n  }\n  if (inputs.length < 2 || inputs.length > 3) {\n    throw new Error('Invaid input number.');\n  }\n\n  // 'C' can be of dimensionality 0, 1 or 2 only\n  if (inputs.length === 3 && inputs[2].dims.length > 2) {\n    throw new Error('Invalid input shape of C');\n  }\n\n  if ((inputs[0].dataType !== DataType.float) || (inputs[1].dataType !== DataType.float) ||\n      (inputs.length === 3 && inputs[2].dataType !== DataType.float)) {\n    throw new Error('Invalid input type.');\n  }\n\n  if ((inputs[0].dataType !== inputs[1].dataType) ||\n      (inputs.length === 3 && inputs[0].dataType !== inputs[2].dataType)) {\n    throw new Error('Input types are mismatched');\n  }\n};\n\nexport interface GemmAttributes extends AttributeWithCacheKey {\n  transA: boolean;\n  transB: boolean;\n  alpha: number;\n  beta: number;\n}\n\nconst offsetC = (m: number, n: number, dims: readonly number[]): string => {\n  if (dims.length === 0) {\n    return '0u';\n  }\n\n  const broadcastM = (dims.length === 1 && m !== 1) || (dims.length === 2 && dims[0] !== m);\n  const broadcastN = dims[dims.length - 1] !== n;\n\n  let offset = '0u';\n  if (!broadcastM) {\n    offset += `+ m * ${dims[dims.length - 1]}u`;\n  }\n  if (!broadcastN) {\n    offset += '+n';\n  }\n\n  return offset;\n};\n\nconst createGemmProgramInfo =\n    (metadata: ProgramMetadata, inputs: readonly TensorView[], attributes: GemmAttributes): ProgramInfo => {\n      const aShape = inputs[0].dims.slice();\n      const bShape = inputs[1].dims.slice();\n      const [M, N, K] = GemmUtil.getShapeOfGemmResult(\n          aShape, attributes.transA, bShape, attributes.transB, inputs.length === 3 ? inputs[2].dims : undefined);\n      const outputShape = [M, N];\n      if (!outputShape) {\n        throw new Error('Can\\'t use gemm on the given tensors');\n      }\n      const outputSize = ShapeUtil.size(outputShape);\n      let line = '';\n      if (attributes.transA && attributes.transB) {\n        line = 'value += a[k * M + m] * b[n * K + k];';\n      } else if (attributes.transA && !attributes.transB) {\n        line = 'value += a[k * M + m] * b[k * N + n];';\n      } else if (!attributes.transA && attributes.transB) {\n        line = 'value += a[m * K + k] * b[n * K + k];';\n      } else if (!attributes.transA && !attributes.transB) {\n        line = 'value += a[m * K + k] * b[k * N + n];';\n      }\n\n      const dataType = 'f32';  // TODO: support other data type\n      const calculateAlpha = attributes.alpha === 1 ? '' : 'value *= alpha;';\n      const calculateC = inputs.length === 3 ? `value += beta * c[${offsetC(M, N, inputs[2].dims)}];` : '';\n      const inputStorageBuffersDeclarations = [\n        `@group(0) @binding(0) var<storage, read> a : array<${dataType}>;`,\n        `@group(0) @binding(1) var<storage, read> b : array<${dataType}>;`\n      ];\n      if (inputs.length === 3) {\n        inputStorageBuffersDeclarations.push(`@group(0) @binding(2) var<storage, read> c : array<${dataType}>;`);\n      }\n      const getShaderSource = (shaderHelper: ShaderHelper) => `\n  const M: u32 = ${M}u;\n  const N: u32 = ${N}u;\n  const K: u32 = ${K}u;\n  const alpha = ${dataType}(${attributes.alpha});\n  const beta = ${dataType}(${attributes.beta});\n\n  ${inputStorageBuffersDeclarations.join('\\n')}\n  @group(0) @binding(${inputs.length}) var<storage, read_write> output : array<${dataType}>;\n\n  ${shaderHelper.mainStart()}\n    ${shaderHelper.guardAgainstOutOfBoundsWorkgroupSizes(outputSize)}\n\n    let m = global_id.x / N;\n    let n = global_id.x % N;\n\n    var value = ${dataType}(0);\n    for (var k: u32 = 0u; k<${K}u; k++) {\n      ${line}\n    }\n\n    ${calculateAlpha}\n    ${calculateC}\n    output[global_id.x] = value;\n\n  }`;\n      return {\n        ...metadata,\n        outputs: [{dims: outputShape, dataType: inputs[0].dataType, gpuDataType: GpuDataType.default}],\n        getShaderSource,\n        dispatchGroup: () => ({x: Math.ceil(outputSize / 64 /* workgroup size */)})\n      };\n    };\n\nconst createGemmProgramInfoLoader = (inputs: readonly TensorView[], attributes: GemmAttributes): ProgramInfoLoader => {\n  const metadata = {\n    name: 'Gemm',\n    inputTypes: inputs.length === 3 ? [GpuDataType.default, GpuDataType.default, GpuDataType.default] :\n                                      [GpuDataType.default, GpuDataType.default],\n    cacheHint: attributes.cacheKey\n  };\n\n  return {...metadata, get: () => createGemmProgramInfo(metadata, inputs, attributes)};\n};\n\nexport const gemm = (context: ComputeContext, attributes: GemmAttributes): void => {\n  validateInputs(context.inputs);\n  context.compute(createGemmProgramInfoLoader(context.inputs, attributes));\n};\n\nexport const parseGemmAttributes = (attributes: Record<string, unknown>): GemmAttributes =>\n    createAttributeWithCacheKey(attributes as Omit<GemmAttributes, keyof AttributeWithCacheKey>);\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {DataType} from '../../../wasm-common';\nimport {TensorView} from '../../tensor';\nimport {BroadcastUtil, ShapeUtil} from '../../util';\nimport {ComputeContext, GpuDataType, ProgramInfo, ProgramInfoLoader, ProgramMetadata} from '../types';\n\nimport {ShaderHelper} from './common';\nimport {getActicationSnippet, InternalActivationAttributes} from './fuse-utils';\n\n\nconst createMatmulProgramMetadata = (hasBias: boolean, cacheHint: string) => ({\n  name: 'MatMul',\n  inputTypes: hasBias ? [GpuDataType.default, GpuDataType.default, GpuDataType.default] :\n                        [GpuDataType.default, GpuDataType.default],\n  cacheHint\n});\n\nconst createMatmulProgramInfo =\n    (metadata: ProgramMetadata, inputs: readonly TensorView[], activationAttributes: InternalActivationAttributes):\n        ProgramInfo => {\n          const aShape = inputs[0].dims;\n          const bShape = inputs[1].dims;\n          const outputShape = BroadcastUtil.calcShape(aShape, bShape, true);\n          if (!outputShape) {\n            throw new Error('Can\\'t use matmul on the given tensors');\n          }\n          const outputSize = ShapeUtil.size(outputShape);\n          // TODO: support broadcasting\n\n          const dataType = 'f32';  // TODO: support other data type\n          const {activationFunction, applyActivation} = getActicationSnippet(activationAttributes);\n\n          const M = outputShape[outputShape.length - 2];\n          const K = aShape[aShape.length - 1];\n          const N = outputShape[outputShape.length - 1];\n          const getShaderSource = (shaderHelper: ShaderHelper) => `\n  const M: u32 = ${M}u;\n  const N: u32 = ${N}u;\n  const K: u32 = ${K}u;\n\n  @group(0) @binding(0) var<storage, read> a : array<${dataType}>;\n  @group(0) @binding(1) var<storage, read> b : array<${dataType}>;\n  @group(0) @binding(2) var<storage, read_write> output : array<${dataType}>;\n\n  ${activationFunction}\n\n  ${shaderHelper.mainStart()}\n    ${shaderHelper.guardAgainstOutOfBoundsWorkgroupSizes(outputSize)}\n\n    let stack = global_idx / (M * N);\n    let mn = global_idx % (M * N);\n    let n = global_idx % N;\n    let m = mn / N;\n\n    let offsetA = stack * (M * K);\n    let offsetB = stack * (K * N);\n\n    var value = ${dataType}(0);\n    for (var k: u32 = 0u; k<${K}u; k++) {\n      value += a[offsetA + m * K + k] * b[offsetB + k * N + n];\n    }\n    ${applyActivation}\n    output[global_idx] = value;\n  }`;\n          return {\n            ...metadata,\n            outputs: [{dims: outputShape, dataType: inputs[0].dataType, gpuDataType: GpuDataType.default}],\n            getShaderSource,\n            dispatchGroup: () => ({x: Math.ceil(outputSize / 64 /* workgroup size */)})\n          };\n        };\n\nexport const createMatmulProgramInfoLoader =\n    (inputs: readonly TensorView[], activationAttributes: InternalActivationAttributes): ProgramInfoLoader => {\n      const metadata = createMatmulProgramMetadata(inputs.length > 2, activationAttributes.activationCacheKey);\n      return {...metadata, get: () => createMatmulProgramInfo(metadata, inputs, activationAttributes)};\n    };\n\nconst validateInputs = (inputs: readonly TensorView[]): void => {\n  if (!inputs || inputs.length !== 2) {\n    throw new Error('MatMul requires 2 inputs.');\n  }\n\n  if (inputs[0].dims[inputs[0].dims.length - 1] !== inputs[1].dims[inputs[1].dims.length - 2]) {\n    throw new Error('shared dimension does not match.');\n  }\n\n  if (inputs[0].dataType !== DataType.float || inputs[1].dataType !== DataType.float) {\n    throw new Error('inputs should be float type');\n  }\n};\n\nexport const matMul = (context: ComputeContext): void => {\n  validateInputs(context.inputs);\n\n  context.compute(createMatmulProgramInfoLoader(context.inputs, {activation: '', activationCacheKey: ''}));\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {DataType} from '../../../wasm-common';\nimport {TensorView} from '../../tensor';\nimport {PoolConvUtil, ShapeUtil} from '../../util';\nimport {AttributeWithCacheKey, createAttributeWithCacheKey} from '../attribute-with-cache-key';\nimport {ComputeContext, GpuDataType, ProgramInfo, ProgramMetadata} from '../types';\n\nimport {createIndicesHelper, ShaderHelper} from './common';\n\n// TODO: support:\n// - ceil_mode                 \"test_maxpool_2d_ceil\"\n// - storage_order             \"test_maxpool_with_argmax_2d_precomputed_strides\"\n// - [MaxPool] dilations       \"test_maxpool_2d_dilations\"\n// - [MaxPool] output[1]       \"test_maxpool_with_argmax_2d_precomputed_pads\"\n\nconst validateInputs = (inputs: readonly TensorView[]): void => {\n  if (!inputs || inputs.length !== 1) {\n    throw new Error('Pool ops requires 1 input.');\n  }\n  if (inputs[0].dims.length !== 4) {\n    throw new Error('Pool ops supports 2-D inputs only for now.');\n  }\n  if (inputs[0].dataType !== DataType.float) {\n    throw new Error('Invalid input type.');\n  }\n};\n\nconst getAdjustedPoolAttributesAndOutputShape = <AttributeType extends AveragePoolAttributes|MaxPoolAttributes>(\n    inputs: readonly TensorView[], attributes: AttributeType, isGlobalOperator: boolean): [AttributeType, number[]] => {\n  const isChannelsLast = attributes.format === 'NHWC';\n  const inputShapeAsChannelFirst = isChannelsLast ?\n      [inputs[0].dims[0], inputs[0].dims[3], inputs[0].dims[1], inputs[0].dims[2]] :\n      inputs[0].dims.slice();\n  const hasDilations = Object.hasOwnProperty.call(attributes, 'dilations');\n  const kernelShape = attributes.kernelShape.slice();\n  const strides = attributes.strides.slice();\n  const dilations: number[] = hasDilations ? (attributes as MaxPoolAttributes).dilations.slice() : [];\n  const pads = attributes.pads.slice();\n  PoolConvUtil.adjustPoolAttributes(isGlobalOperator, inputShapeAsChannelFirst, kernelShape, strides, dilations, pads);\n\n  const outputShapeAsChannelFirst = PoolConvUtil.computePoolOutputShape(\n      isGlobalOperator, inputShapeAsChannelFirst, strides, dilations, kernelShape, pads, attributes.autoPad);\n\n  const newAttributes = Object.assign({}, attributes);\n  if (hasDilations) {\n    Object.assign(newAttributes, {kernelShape, strides, pads, dilations, cacheKey: attributes.cacheKey});\n  } else {\n    Object.assign(newAttributes, {kernelShape, strides, pads, cacheKey: attributes.cacheKey});\n  }\n  return [\n    newAttributes,\n    isChannelsLast ?\n        [\n          outputShapeAsChannelFirst[0], outputShapeAsChannelFirst[2], outputShapeAsChannelFirst[3],\n          outputShapeAsChannelFirst[1]\n        ] :\n        outputShapeAsChannelFirst\n  ];\n};\n\nconst generatePoolingCode = <AttributeType extends AveragePoolAttributes|MaxPoolAttributes>(\n    shaderHelper: ShaderHelper, inputDims: readonly number[], outputShape: readonly number[], attributes: AttributeType,\n    op1: string, op2: string, dataType: string, start: string): string => {\n  const isChannelsLast = attributes.format === 'NHWC';\n  const rank = inputDims.length;\n  const outputSize = ShapeUtil.size(outputShape);\n  const outputIndicesHelper = createIndicesHelper('output', outputShape);\n  const xIndicesHelper = createIndicesHelper('x', inputDims);\n\n  if (attributes.kernelShape.length <= 2) {\n    const kw = attributes.kernelShape[attributes.kernelShape.length - 1];\n    const sw = attributes.strides[attributes.strides.length - 1];\n    const pwStart = attributes.pads[attributes.pads.length / 2 - 1];\n    const pwEnd = attributes.pads[attributes.pads.length - 1];\n    const dimIdxW = rank - (isChannelsLast ? 2 : 1);\n    let codeW = '';\n    let codeH = '';\n    let codeHEnd = '';\n    if (pwStart + pwEnd !== 0) {\n      codeW = `\n              for (var i: u32 = 0u; i < ${kw}u; i++) {\n                xIndices[${dimIdxW}] = indices[${dimIdxW}] * ${sw} - ${pwStart} + i;\n                if (xIndices[${dimIdxW}] < 0 || xIndices[${dimIdxW}] >= ${inputDims[dimIdxW]}) {\n                  pad++;\n                  continue;\n                }\n                let x_val = x[${xIndicesHelper.i2oExpression('xIndices')}];\n                ${op1}\n              }`;\n    } else {\n      codeW = `\n              for (var i: u32 = 0u; i < ${kw}u; i++) {\n                xIndices[${dimIdxW}] = indices[${dimIdxW}] * ${sw} - ${pwStart} + i;\n                let x_val = x[${xIndicesHelper.i2oExpression('xIndices')}];\n                ${op1}\n              }`;\n    }\n\n    if (attributes.kernelShape.length === 2) {\n      const kh = attributes.kernelShape[attributes.kernelShape.length - 2];\n      const sh = attributes.strides[attributes.strides.length - 2];\n      const phStart = attributes.pads[attributes.pads.length / 2 - 2];\n      const phEnd = attributes.pads[attributes.pads.length - 2];\n      const dimIdxH = rank - (isChannelsLast ? 3 : 2);\n      const dimH = inputDims[dimIdxH];\n      if (phStart + phEnd !== 0) {\n        codeH = `\n                for (var j: u32 = 0u; j < ${kh}u; j++) {\n                  xIndices[${dimIdxH}] = indices[${dimIdxH}] * ${sh} - ${phStart} + j;\n                  if (xIndices[${dimIdxH}] < 0 || xIndices[${dimIdxH}] >= ${dimH}) {\n                    pad+= ${kw};\n                    continue;\n                  }\n              `;\n      } else {\n        codeH = `\n                for (var j: u32 = 0u; j < ${kh}u; j++) {\n                  xIndices[${dimIdxH}] = indices[${dimIdxH}] * ${sh} - ${phStart} + j;\n                `;\n      }\n      codeHEnd = `\n              }\n            `;\n    }\n\n    const poolingCode = `\n            @group(0) @binding(0) var<storage, read> x : array<${dataType}>;\n            @group(0) @binding(1) var<storage, read_write> output : array<${dataType}>;\n\n            ${outputIndicesHelper.o2iImpl}\n            ${xIndicesHelper.i2oImpl}\n\n            ${shaderHelper.mainStart()}\n              ${shaderHelper.guardAgainstOutOfBoundsWorkgroupSizes(outputSize)}\n\n              ${outputIndicesHelper.indicesVariableDeclaration('indices')}\n              ${outputIndicesHelper.o2iCall('global_idx', 'indices')}\n              ${outputIndicesHelper.indicesVariableDeclaration('xIndices')}\n              ${outputIndicesHelper.o2iCall('global_idx', 'xIndices')}\n\n              var value: ${dataType} = ${dataType}(${start});\n              var pad = 0;\n              ${codeH}\n              ${codeW}\n              ${codeHEnd}\n              ${op2}\n\n              output[global_idx] = value;\n            }`;\n    return poolingCode;\n  } else {\n    if (isChannelsLast) {\n      throw new Error('Pooling with kernelShape.length > 2 is not supported for NHWC format.');\n    }\n    const kernelSize = ShapeUtil.size(attributes.kernelShape);\n    const kernelStrides = ShapeUtil.computeStrides(attributes.kernelShape);\n    const stridesRank = kernelStrides.length;\n    const padsRank = attributes.pads.length;\n    const hasPads = attributes.pads.reduce((sum, cur) => sum + cur);\n    let padCode = '';\n    if (hasPads) {\n      padCode = `\n                if (xIndices[j] >= inputDims[j]) {\n                  pad++;\n                  isPad = true;\n                  break;\n                }\n              }\n              if (!isPad) {\n                let x_val = x[${xIndicesHelper.i2oExpression('xIndices')}];\n                ${op1}\n              }`;\n    } else {\n      padCode = `\n              }\n              let x_val = x[${xIndicesHelper.i2oExpression('xIndices')}];\n              ${op1}\n            `;\n    }\n    const poolingCode = `\n            @group(0) @binding(0) var<storage, read> x : array<${dataType}>;\n            @group(0) @binding(1) var<storage, read_write> output : array<${dataType}>;\n\n            ${outputIndicesHelper.o2iImpl}\n            ${xIndicesHelper.i2oImpl}\n\n            const pads = array<u32, ${padsRank}>(${attributes.pads.map(i => `${i}u`).join(',')});\n            const inputDims = array<u32, ${rank}>(${inputDims.map(i => `${i}u`).join(',')});\n            const kernelStrides = array<u32, ${stridesRank}>(${kernelStrides.map(i => `${i}u`).join(',')});\n            const strides = array<u32, ${stridesRank}>(${attributes.strides.map(i => `${i}u`).join(',')});\n\n            ${shaderHelper.mainStart()}\n              ${shaderHelper.guardAgainstOutOfBoundsWorkgroupSizes(outputSize)}\n\n              ${outputIndicesHelper.indicesVariableDeclaration('indices')}\n              ${outputIndicesHelper.o2iCall('global_idx', 'indices')}\n              ${outputIndicesHelper.indicesVariableDeclaration('xIndices')}\n              ${outputIndicesHelper.o2iCall('global_idx', 'xIndices')}\n\n              var offsets: array<u32, ${stridesRank}>;\n\n              var value = ${dataType}(${start});\n              var pad = 0;\n              var isPad = false;\n\n              for (var i: u32 = 0u; i < ${kernelSize}u; i++) {\n                var offset = i;\n                for (var j = 0u; j < ${stridesRank - 1}u; j++) {\n                  offsets[j] = offset / kernelStrides[j];\n                  offset -= offsets[j] * kernelStrides[j];\n                }\n                offsets[${stridesRank - 1}] = offset;\n\n                isPad = false;\n                for (var j = ${rank - stridesRank}u; j < ${rank}u; j++) {\n                  xIndices[j] = indices[j] * strides[j - ${rank - stridesRank}u]\n                    + offsets[j - ${rank - stridesRank}u] - pads[j - 2u];\n                  ${padCode}\n              }\n              ${op2}\n\n              output[global_idx] = value;\n            }`;\n    return poolingCode;\n  }\n};\n\nexport interface FormatAttributes {\n  readonly format: 'NHWC'|'NCHW';\n}\n\nexport interface PoolCommonAttributes extends FormatAttributes {\n  readonly autoPad: string;\n  readonly ceilMode: number;\n  readonly kernelShape: readonly number[];\n  readonly strides: readonly number[];\n  readonly pads: readonly number[];\n}\n\nconst parsePoolCommonAttributes = (attributes: Record<string, unknown>): PoolCommonAttributes => ({\n  format: attributes.format as FormatAttributes['format'],\n  autoPad: ['NOTSET', 'VALID', 'SAME_UPPER', 'SAME_LOWER'][attributes.auto_pad as number],\n  ceilMode: attributes.ceil_mode as number,\n  kernelShape: attributes.kernel_shape as [number, number],\n  strides: attributes.strides as [number, number],\n  pads: attributes.pads as [number, number, number, number]\n});\n\nexport interface AveragePoolAttributes extends PoolCommonAttributes, AttributeWithCacheKey {\n  readonly countIncludePad: boolean;\n}\n\nconst createAveragePoolProgramInfo =\n    (inputs: readonly TensorView[], metadata: ProgramMetadata, isGlobalOperator: boolean,\n     attributes: AveragePoolAttributes): ProgramInfo => {\n      const [adjustedAttributes, outputShape] =\n          getAdjustedPoolAttributesAndOutputShape(inputs, attributes, isGlobalOperator);\n      const kernelSize = ShapeUtil.size(adjustedAttributes.kernelShape);\n\n      const dataType = 'f32';\n\n      const op1 = 'value += x_val;';\n      let op2 = '';\n      if (adjustedAttributes.countIncludePad) {\n        op2 += `value /= ${dataType}(${kernelSize});`;\n      } else {\n        op2 += `value /= ${dataType}(${kernelSize} - pad);`;\n      }\n      return {\n        ...metadata,\n        outputs: [{dims: outputShape, dataType: inputs[0].dataType, gpuDataType: GpuDataType.default}],\n        getShaderSource: shaderHelper => generatePoolingCode(\n            shaderHelper, inputs[0].dims, outputShape, adjustedAttributes, op1, op2, dataType, '0.0'),\n        dispatchGroup: () => ({x: Math.ceil(ShapeUtil.size(outputShape) / 64 /* workgroup size */)})\n      };\n    };\n\nexport const parseAveragePoolAttributes = (attributes: Record<string, unknown>): AveragePoolAttributes => {\n  const countIncludePad = (attributes.count_include_pad as number) === 0 ? false : true;\n\n  const attr = parsePoolCommonAttributes(attributes);\n  // TODO: support attribute 'ceil_mode'\n  if (attr.ceilMode !== 0) {\n    throw new Error('using ceil() in shape computation is not yet supported for AveragePool');\n  }\n\n  return createAttributeWithCacheKey({countIncludePad, ...attr});\n};\n\nexport const averagePool = (context: ComputeContext, attributes: AveragePoolAttributes): void => {\n  validateInputs(context.inputs);\n  const metadata = {name: 'AveragePool', inputTypes: [GpuDataType.default], cacheHint: attributes.cacheKey};\n  context.compute({...metadata, get: () => createAveragePoolProgramInfo(context.inputs, metadata, false, attributes)});\n};\n\nconst globalPoolAttributes = {\n  autoPad: '',\n  ceilMode: 0,\n  countIncludePad: false,\n  kernelShape: [],\n  strides: [],\n  pads: [],\n  storageOrder: 0,\n  dilations: [],\n  cacheKey: ''\n};\n\nexport const parseGlobalAveragePoolAttributes = (attributes: Record<string, unknown>): AveragePoolAttributes => {\n  const format = attributes.format as FormatAttributes['format'];\n  return {format, ...globalPoolAttributes, cacheKey: format};\n};\n\nexport const globalAveragePool = (context: ComputeContext, attributes: AveragePoolAttributes): void => {\n  validateInputs(context.inputs);\n  const metadata = {name: 'GlobalAveragePool', inputTypes: [GpuDataType.default], cacheHint: attributes.cacheKey};\n  context.compute({...metadata, get: () => createAveragePoolProgramInfo(context.inputs, metadata, true, attributes)});\n};\n\nexport interface MaxPoolAttributes extends PoolCommonAttributes, AttributeWithCacheKey {\n  readonly storageOrder: number;\n  readonly dilations: number[];\n}\n\nconst createMaxPoolProgramInfo =\n    (inputs: readonly TensorView[], metadata: ProgramMetadata, isGlobalOperator: boolean,\n     attributes: MaxPoolAttributes): ProgramInfo => {\n      const [adjustedAttributes, outputShape] =\n          getAdjustedPoolAttributesAndOutputShape(inputs, attributes, isGlobalOperator);\n      const op1 = `\n      value = max(x_val, value);\n    `;\n      const op2 = '';\n      return {\n        ...metadata,\n        outputs: [{dims: outputShape, dataType: inputs[0].dataType, gpuDataType: GpuDataType.default}],\n        getShaderSource: shaderHelper =>\n            generatePoolingCode(shaderHelper, inputs[0].dims, outputShape, adjustedAttributes, op1, op2, 'f32', '-1e5'),\n        dispatchGroup: () => ({x: Math.ceil(ShapeUtil.size(outputShape) / 64 /* workgroup size */)})\n      };\n    };\n\nexport const maxPool = (context: ComputeContext, attributes: MaxPoolAttributes): void => {\n  validateInputs(context.inputs);\n  const metadata = {name: 'MaxPool', inputTypes: [GpuDataType.default], cacheHint: attributes.cacheKey};\n  context.compute({...metadata, get: () => createMaxPoolProgramInfo(context.inputs, metadata, false, attributes)});\n};\n\nexport const parseMaxPoolAttributes = (attributes: Record<string, unknown>): MaxPoolAttributes => {\n  const storageOrder = attributes.storage_order as number;\n  const dilations = attributes.dilations as [number, number];\n\n  const attr = parsePoolCommonAttributes(attributes);\n  // TODO: support attribute 'ceil_mode' and 'storage_order'\n  if (storageOrder !== 0) {\n    throw new Error('column major storage order is not yet supported for MaxPool');\n  }\n  if (attr.ceilMode !== 0) {\n    throw new Error('using ceil() in shape computation is not yet supported for MaxPool');\n  }\n\n  return createAttributeWithCacheKey({storageOrder, dilations, ...attr});\n};\n\nexport const parseGlobalMaxPoolAttributes = (attributes: Record<string, unknown>): MaxPoolAttributes => {\n  const format = attributes.format as FormatAttributes['format'];\n  return {format, ...globalPoolAttributes, cacheKey: format};\n};\n\nexport const globalMaxPool = (context: ComputeContext, attributes: MaxPoolAttributes): void => {\n  validateInputs(context.inputs);\n  const metadata = {name: 'GlobalMaxPool', inputTypes: [GpuDataType.default], cacheHint: attributes.cacheKey};\n  context.compute({...metadata, get: () => createMaxPoolProgramInfo(context.inputs, metadata, true, attributes)});\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {DataType} from '../../../wasm-common';\nimport {TensorView} from '../../tensor';\nimport {ShapeUtil} from '../../util';\nimport {AttributeWithCacheKey, createAttributeWithCacheKey} from '../attribute-with-cache-key';\nimport {ComputeContext, GpuDataType, ProgramInfo} from '../types';\n\nimport {createIndicesHelper, ShaderHelper} from './common';\n\nexport interface TransposeAttributes extends AttributeWithCacheKey {\n  readonly perm: number[];\n}\n\nexport const transposeProgramMetadata = {\n  name: 'Transpose',\n  inputTypes: [GpuDataType.default]\n};\n\nconst validateInputs = (inputs: readonly TensorView[]): void => {\n  if (!inputs || inputs.length !== 1) {\n    throw new Error('Transpose requires 1 input.');\n  }\n\n  if (inputs[0].dataType !== DataType.float) {\n    throw new Error('input should be float tensor');\n  }\n};\n\nconst getAdjustedPerm = (inputShape: readonly number[], perm: number[]): number[] =>\n    (perm && perm.length !== inputShape.length) ? [...(inputShape.keys())].reverse() : perm;\n\nconst getOutputShape = (inputShape: readonly number[], perm: number[]): readonly number[] =>\n    ShapeUtil.sortBasedOnPerm(inputShape, getAdjustedPerm(inputShape, perm));\n\nconst permFunctionBody = (perm: number[], rank: number): string => {\n  const reverseFunc = [];\n  reverseFunc.push(`fn perm(a: ptr<function, array<u32, ${rank}>>, i: ptr<function, array<u32, ${rank}>>) {`);\n  for (let i = 0; i < rank; ++i) {\n    reverseFunc.push(`\\t(*a)[${perm[i]}]=(*i)[${i}];`);\n  }\n  reverseFunc.push('\\t}');\n  return reverseFunc.join('\\n');\n};\n\nexport const createTransposeProgramInfo = (input: TensorView, permAttr: number[]): ProgramInfo => {\n  const dataType = 'f32';  // TODO: support other data type\n  const inputShape = input.dims;\n  const perm = getAdjustedPerm(inputShape, permAttr);\n  const outputShape = getOutputShape(inputShape, perm);\n  const rank = inputShape.length;\n  const outputSize = ShapeUtil.size(outputShape);\n  // A dims=[${inputs[0].dims.toString()}]\n  // out Dims=[${unpackedOutputShape.toString()}]\n  // based on perm=[${perm.toString()}]\n\n  const outputIndicesHelper = createIndicesHelper('output', outputShape);\n  const inputIndicesHelper = createIndicesHelper('a', inputShape);\n\n  const getShaderSource = (shaderHelper: ShaderHelper) => `\n  @group(0) @binding(0) var<storage, read> a : array<${dataType}>;\n  @group(0) @binding(1) var<storage, read_write> output : array<${dataType}>;\n\n  ${permFunctionBody(perm, rank)}\n  ${outputIndicesHelper.o2iImpl}\n  ${inputIndicesHelper.i2oImpl}\n\n  ${shaderHelper.mainStart()}\n    ${shaderHelper.guardAgainstOutOfBoundsWorkgroupSizes(outputSize)}\n\n    ${outputIndicesHelper.indicesVariableDeclaration('indices')}\n    ${outputIndicesHelper.o2iCall('global_idx', 'indices')}\n    ${inputIndicesHelper.indicesVariableDeclaration('aIndices')}\n    perm(&aIndices, &indices);\n\n    output[global_idx] = a[${inputIndicesHelper.i2oExpression('aIndices')}];\n  }`;\n  return {\n    ...transposeProgramMetadata,\n    outputs: [{dims: outputShape, dataType: input.dataType, gpuDataType: GpuDataType.default}],\n    getShaderSource,\n    dispatchGroup: () => ({x: Math.ceil(outputSize / 64 /* workgroup size */)})\n  };\n};\n\nexport const transpose = (context: ComputeContext, attributes: TransposeAttributes): void => {\n  validateInputs(context.inputs);\n  context.compute({\n    ...transposeProgramMetadata,\n    cacheHint: attributes.cacheKey,\n    get: () => createTransposeProgramInfo(context.inputs[0], attributes.perm)\n  });\n};\n\nexport const parseTransposeAttributes = (attributes: Record<string, unknown>): TransposeAttributes =>\n    createAttributeWithCacheKey({perm: attributes.perm as number[]});\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {TensorView} from '../../tensor';\nimport {MAX_CLIP, MIN_CLIP, ShapeUtil} from '../../util';\nimport {AttributeWithCacheKey, createAttributeWithCacheKey} from '../attribute-with-cache-key';\nimport {ComputeContext, GpuDataType, ProgramInfo, ProgramInfoLoader, ProgramMetadata} from '../types';\n\nimport {ShaderHelper} from './common';\n\ntype BuiltinFunctionName = string;\ntype ElementwiseCustomExpression = (expression: string) => string;\ntype ElementwiseFunctionCall = BuiltinFunctionName|ElementwiseCustomExpression;\n\nconst createElementwiseProgramShader =\n    (shaderHelper: ShaderHelper, datasize: number, funcCall: ElementwiseFunctionCall,\n     additionalImplementation?: string): string => {\n      const vecSize = Math.ceil(datasize / 4);\n\n      let expression = '';\n      if (typeof funcCall === 'string') {\n        expression = `${funcCall}(a)`;\n      } else {\n        expression = funcCall('a');\n      }\n      return `\n  @group(0) @binding(0) var<storage, read> inputData : array<vec4<f32>>;\n  @group(0) @binding(1) var<storage, read_write> outputData : array<vec4<f32>>;\n\n  ${additionalImplementation ?? ''}\n\n  ${shaderHelper.mainStart()}\n    ${shaderHelper.guardAgainstOutOfBoundsWorkgroupSizes(vecSize)}\n\n    let a = inputData[global_idx];\n    outputData[global_idx] = ${expression};\n  }`;\n    };\n\nconst createElementwiseProgramInfo =\n    (metadata: ProgramMetadata, input: TensorView, funcCall: ElementwiseFunctionCall,\n     additionalImplementation?: string): ProgramInfo => ({\n      ...metadata,\n      getShaderSource: shaderHelper =>\n          createElementwiseProgramShader(shaderHelper, ShapeUtil.size(input.dims), funcCall, additionalImplementation),\n      outputs: [{dims: input.dims, dataType: input.dataType, gpuDataType: GpuDataType.default}],\n      dispatchGroup: (inputTensors) =>\n          ({x: Math.ceil(ShapeUtil.size(inputTensors[0].dims) / 64 /* workgroup size */ / 4 /* vec size */)})\n    });\n\nconst createElementwiseProgramInfoLoader =\n    (input: TensorView, name: string, funcCall: ElementwiseFunctionCall, additionalImplementation?: string,\n     cacheKey?: string): ProgramInfoLoader => {\n      const metadata: ProgramMetadata = {name, inputTypes: [GpuDataType.default], cacheHint: cacheKey};\n      return {\n        ...metadata,\n        get: () => createElementwiseProgramInfo(metadata, input, funcCall, additionalImplementation)\n      };\n    };\n\nexport const abs = (context: ComputeContext): void => {\n  context.compute(createElementwiseProgramInfoLoader(context.inputs[0], 'Abs', 'abs'));\n};\n\nexport const acos = (context: ComputeContext): void => {\n  context.compute(createElementwiseProgramInfoLoader(context.inputs[0], 'Acos', 'acos'));\n};\n\nexport const acosh = (context: ComputeContext): void => {\n  context.compute(createElementwiseProgramInfoLoader(context.inputs[0], 'Acosh', 'acosh'));\n};\n\nexport const asin = (context: ComputeContext): void => {\n  context.compute(createElementwiseProgramInfoLoader(context.inputs[0], 'Asin', 'asin'));\n};\n\nexport const asinh = (context: ComputeContext): void => {\n  context.compute(createElementwiseProgramInfoLoader(context.inputs[0], 'Asinh', 'asinh'));\n};\n\nexport const atan = (context: ComputeContext): void => {\n  context.compute(createElementwiseProgramInfoLoader(context.inputs[0], 'Atan', 'atan'));\n};\nexport const atanh = (context: ComputeContext): void => {\n  context.compute(createElementwiseProgramInfoLoader(context.inputs[0], 'Atanh', 'atanh'));\n};\n\nexport interface ClipAttributes extends AttributeWithCacheKey {\n  readonly min: number;\n  readonly max: number;\n}\n\nexport const clipV10 = (context: ComputeContext, attributes: ClipAttributes): void => {\n  context.compute(\n      createElementwiseProgramInfoLoader(\n          context.inputs[0], 'Clip', a => `clamp(${a}, clip_min_, clip_max_)`, `\n    const clip_min_: vec4<f32> = vec4(f32(${attributes.min}));\n    const clip_max_: vec4<f32> = vec4(f32(${attributes.max}));\n`,\n          attributes.cacheKey),\n      {inputs: [0]});\n};\nconst generateClipAttributesFromInputs = (inputs: readonly TensorView[]): ClipAttributes => {\n  const min = (inputs.length >= 2) ? inputs[1].getFloat32Array()[0] : MIN_CLIP;\n  const max = (inputs.length >= 3) ? inputs[2].getFloat32Array()[0] : MAX_CLIP;\n  return createAttributeWithCacheKey({min, max});\n};\n\nexport const clip = (context: ComputeContext): void => {\n  const attributes = generateClipAttributesFromInputs(context.inputs);\n  clipV10(context, attributes);\n};\n\nexport const ceil = (context: ComputeContext): void => {\n  context.compute(createElementwiseProgramInfoLoader(context.inputs[0], 'Ceil', 'ceil'));\n};\n\nexport const cos = (context: ComputeContext): void => {\n  context.compute(createElementwiseProgramInfoLoader(context.inputs[0], 'Cos', 'cos'));\n};\n\nexport const cosh = (context: ComputeContext): void => {\n  context.compute(createElementwiseProgramInfoLoader(context.inputs[0], 'Cosh', 'cosh'));\n};\n\nexport interface AlphaAttributes extends AttributeWithCacheKey {\n  readonly alpha: number;\n}\n\nexport const parseAlphaAttributes = (attributes: Record<string, unknown>): AlphaAttributes =>\n    createAttributeWithCacheKey(attributes as {alpha: number});\n\nexport const elu = (context: ComputeContext, attributes: AlphaAttributes): void => {\n  context.compute(createElementwiseProgramInfoLoader(\n      context.inputs[0], 'Elu', a => `elu_vf32(${a})`, `\n  const elu_alpha_: f32 = f32(${attributes.alpha});\n\n  fn elu_f32(a: f32) -> f32 {\n  return select((exp(a) - 1.0) * elu_alpha_, a, a >= 0.0);\n  }\n\n  fn elu_vf32(v: vec4<f32>) -> vec4<f32> {\n  return vec4(elu_f32(v.x), elu_f32(v.y), elu_f32(v.z), elu_f32(v.w));\n  }`,\n      attributes.cacheKey));\n};\n\nexport const erf = (context: ComputeContext): void => {\n  context.compute(createElementwiseProgramInfoLoader(context.inputs[0], 'Erf', a => `erf_vf32(${a})`, `\n  const r0: f32 = 0.3275911;\n  const r1: f32 = 0.254829592;\n  const r2: f32 = -0.284496736;\n  const r3: f32 = 1.421413741;\n  const r4: f32 = -1.453152027;\n  const r5: f32 = 1.061405429;\n\n  fn erf_vf32(v: vec4<f32>) -> vec4<f32> {\n    let absv = abs(v);\n    let x = 1.0 / (1.0 + r0 * absv);\n    return sign(v) * (1.0 - ((((r5 * x + r4) * x + r3) * x + r2) * x + r1) * x * exp(-absv * absv));\n  }`));\n};\n\nexport const exp = (context: ComputeContext): void => {\n  context.compute(createElementwiseProgramInfoLoader(context.inputs[0], 'Exp', 'exp'));\n};\n\nexport const floor = (context: ComputeContext): void => {\n  context.compute(createElementwiseProgramInfoLoader(context.inputs[0], 'Floor', 'floor'));\n};\n\nexport const leakyRelu = (context: ComputeContext, attributes: AlphaAttributes): void => {\n  context.compute(createElementwiseProgramInfoLoader(\n      context.inputs[0], 'LeakyRelu', a => `select(leaky_relu_alpha_ * ${a}, ${a}, ${a} >= vec4<f32>(0.0))`,\n      `const leaky_relu_alpha_: f32 = f32(${attributes.alpha});`, attributes.cacheKey));\n};\n\nexport const neg = (context: ComputeContext): void => {\n  context.compute(createElementwiseProgramInfoLoader(context.inputs[0], 'Neg', a => `-${a}`));\n};\n\nexport const reciprocal = (context: ComputeContext): void => {\n  context.compute(createElementwiseProgramInfoLoader(context.inputs[0], 'Reciprocal', a => `1.0/${a}`));\n};\n\nexport const relu = (context: ComputeContext): void => {\n  context.compute(createElementwiseProgramInfoLoader(\n      context.inputs[0], 'Relu', a => `select(vec4<f32>(0.0), ${a}, ${a} > vec4<f32>(0.0))`));\n};\n\nexport const sigmoid = (context: ComputeContext): void => {\n  context.compute(createElementwiseProgramInfoLoader(context.inputs[0], 'Sigmoid', a => `(1.0 / (1.0 + exp(-${a})))`));\n};\n\nexport const sin = (context: ComputeContext): void => {\n  context.compute(createElementwiseProgramInfoLoader(context.inputs[0], 'Sin', 'sin'));\n};\n\nexport const sinh = (context: ComputeContext): void => {\n  context.compute(createElementwiseProgramInfoLoader(context.inputs[0], 'Sinh', 'sinh'));\n};\n\nexport const sqrt = (context: ComputeContext): void => {\n  context.compute(createElementwiseProgramInfoLoader(context.inputs[0], 'Sqrt', 'sqrt'));\n};\n\nexport const tan = (context: ComputeContext): void => {\n  context.compute(createElementwiseProgramInfoLoader(context.inputs[0], 'Tan', 'tan'));\n};\n\nexport const tanh = (context: ComputeContext): void => {\n  context.compute(createElementwiseProgramInfoLoader(context.inputs[0], 'Tanh', 'tanh'));\n};\n\nexport const thresholdedRelu = (context: ComputeContext, attributes: AlphaAttributes): number => {\n  context.compute(createElementwiseProgramInfoLoader(\n      context.inputs[0], 'ThresholdedRelu', a => `select(vec4<f32>(0.0), ${a}, ${a} > thresholded_relu_alpha_)`,\n      `const thresholded_relu_alpha_: vec4<f32> = vec4<f32>(${attributes.alpha});`, attributes.cacheKey));\n  return 0;\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {WebGpuBackend} from '../backend-webgpu';\nimport {LOG_DEBUG} from '../log';\n\nimport {createShaderHelper} from './ops/common';\nimport {Artifact, GpuData, ProgramInfo} from './types';\n\n/**\n * ProgramManager is the main class behind running computations\n * It builds ProgramInfo's into Artifacts\n * It compiles given ProgramInfo's into WebGL Prorams (cached as Artifacts)\n * Uses the artifact to run the computation by calling Draw on\n * the WebGL drawing buffer\n * ProgramManager automatically maps (binds) input variables to their\n * corresponding Location's in the binary program\n */\nexport class ProgramManager {\n  repo: Map<unknown, Artifact>;  // this should be per-session object\n  attributesBound: boolean;\n\n  constructor(private backend: WebGpuBackend) {\n    this.repo = new Map();\n    this.attributesBound = false;\n  }\n  getArtifact(key: unknown): Artifact|undefined {\n    return this.repo.get(key);\n  }\n  setArtifact(key: unknown, artifact: Artifact): void {\n    this.repo.set(key, artifact);\n  }\n  run(buildArtifact: Artifact, inputs: GpuData[], outputs: GpuData[], dispatchGroup: [number, number, number]): void {\n    const device = this.backend.device;\n    const computePassEncoder = this.backend.getComputePassEncoder();\n\n    if (this.backend.profilingEnabled) {\n      // profiling write start timestamp\n\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      (computePassEncoder as any).writeTimestamp(this.backend.profilingQuerySet, 0);\n    }\n\n    computePassEncoder.setPipeline(buildArtifact.computePipeline);\n    const entries = [];\n    for (const input of inputs) {\n      entries.push({binding: entries.length, resource: {buffer: input.buffer}});\n    }\n    for (const output of outputs) {\n      entries.push({binding: entries.length, resource: {buffer: output.buffer}});\n    }\n    const bindGroup = device.createBindGroup({layout: buildArtifact.computePipeline.getBindGroupLayout(0), entries});\n    computePassEncoder.setBindGroup(0, bindGroup);\n\n    computePassEncoder.dispatchWorkgroups(...dispatchGroup);\n\n    this.backend.pendingDispatchNumber++;\n\n    if (this.backend.profilingEnabled) {\n      // profiling write end timestamp\n\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      (computePassEncoder as any).writeTimestamp(this.backend.profilingQuerySet, 1);\n      // eslint-disable-next-line no-bitwise\n      const queryData = this.backend.gpuDataManager.create(16, GPUBufferUsage.COPY_SRC | GPUBufferUsage.QUERY_RESOLVE);\n      // eslint-disable-next-line no-bitwise\n      const syncData = this.backend.gpuDataManager.create(16, GPUBufferUsage.MAP_READ | GPUBufferUsage.COPY_DST);\n\n      this.backend.endComputePass();\n      this.backend.getCommandEncoder().resolveQuerySet(this.backend.profilingQuerySet, 0, 2, queryData.buffer, 0);\n      this.backend.getCommandEncoder().copyBufferToBuffer(queryData.buffer, 0, syncData.buffer, 0, 16);\n      this.backend.flush();\n\n      const kernelId = this.backend.currentKernelId!;\n      const kernelName = this.backend.kernels.get(kernelId)![0];\n\n      syncData.buffer.mapAsync(GPUMapMode.READ).then(() => {\n        const mappedData = new BigUint64Array(syncData.buffer.getMappedRange());\n        const startTimeU64 = mappedData[0];\n        const endTimeU64 = mappedData[1];\n\n        syncData.buffer.unmap();\n\n        if (typeof this.backend.profilingTimeBase === 'undefined') {\n          this.backend.profilingTimeBase = startTimeU64;\n        }\n\n        const startTime = Number(startTimeU64 - this.backend.profilingTimeBase);\n        const endTime = Number(endTimeU64 - this.backend.profilingTimeBase);\n\n        if (!Number.isSafeInteger(startTime) || !Number.isSafeInteger(endTime)) {\n          throw new RangeError('incorrect timestamp range');\n        }\n\n        this.backend.gpuDataManager.release(queryData.id);\n        this.backend.gpuDataManager.release(syncData.id);\n\n        // eslint-disable-next-line no-console\n        console.log(`[profiling] kernel \"${kernelId}|${kernelName}\" execution time: ${endTime - startTime} ns`);\n      });\n    }\n\n    if (this.backend.pendingDispatchNumber >= 16) {\n      this.backend.flush();\n    }\n  }\n  dispose(): void {\n    // this.repo.forEach(a => this.glContext.deleteProgram(a.program));\n  }\n  build(programInfo: ProgramInfo, normalizedDispatchGroupSize: [number, number, number]): Artifact {\n    const device = this.backend.device;\n\n    const code = programInfo.getShaderSource(createShaderHelper(normalizedDispatchGroupSize));\n    const shaderModule = device.createShaderModule({code});\n    LOG_DEBUG('verbose', () => `[WebGPU] shader code: ${code}`);\n\n    const computePipeline =\n        device.createComputePipeline({compute: {module: shaderModule, entryPoint: 'main'}, layout: 'auto'});\n\n    return {programInfo, computePipeline};\n  }\n\n  normalizeDispatchGroupSize(dispatchGroup: ReturnType<ProgramInfo['dispatchGroup']>): [number, number, number] {\n    const x = typeof dispatchGroup === 'number' ? dispatchGroup : dispatchGroup.x;\n    const y = typeof dispatchGroup === 'number' ? 1 : (dispatchGroup.y || 1);\n    const z = typeof dispatchGroup === 'number' ? 1 : (dispatchGroup.z || 1);\n    const limitPerDimension = this.backend.device.limits.maxComputeWorkgroupsPerDimension;\n    if (x <= limitPerDimension && y <= limitPerDimension && z <= limitPerDimension) {\n      return [x, y, z];\n    }\n    const size = x * y * z;\n    let dispatchAverage = Math.ceil(Math.sqrt(size));\n    if (dispatchAverage > limitPerDimension) {\n      dispatchAverage = Math.ceil(Math.cbrt(size));\n      if (dispatchAverage > limitPerDimension) {\n        throw new Error('Total dispatch size exceeds WebGPU maximum.');\n      }\n      return [dispatchAverage, dispatchAverage, dispatchAverage];\n    } else {\n      return [dispatchAverage, dispatchAverage, 1];\n    }\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Tensor, TensorView} from '../tensor';\n\nimport {ShaderHelper} from './ops/common';\n\nexport enum GpuDataType {\n  default = 0,\n  upload = 1,\n  profile = 2\n}\nexport type GpuDataId = number;\n\nexport interface GpuData {\n  type: GpuDataType;\n  id: GpuDataId;\n  buffer: GPUBuffer;\n}\n\nexport interface TensorInfo {\n  id?: Tensor.Id;\n  dims: readonly number[];\n  dataType: number;\n  gpuDataType: GpuDataType;\n}\n\n\nexport interface ProgramVariable {\n  type: 'float'|'int';\n  name: string;\n  arrayLength?: number;\n  data: number|number[];\n}\n\n\nexport interface ProgramMetadata {\n  /**\n   * the name of the program. used for debugging and profiling\n   */\n  name: string;\n\n  /**\n   * gpu data types for each input\n   */\n  inputTypes: GpuDataType[];\n  /**\n   * an optional string as a cache hint in the artifact cache\n   */\n  cacheHint?: string;\n}\n\n/**\n * A ProgramInfoLoader allows\n */\nexport interface ProgramInfoLoader extends ProgramMetadata {\n  /**\n   * a function to get the program info\n   */\n  get(): ProgramInfo;\n}\n\n/**\n * A set of data that represent a shader program\n */\nexport interface ProgramInfo extends ProgramMetadata {\n  /**\n   * information of uniform variables\n   */\n  variables?: ProgramVariable[];\n  /**\n   * tensor info for outputs\n   */\n  outputs: TensorInfo[];\n  /**\n   * the shader's processing source code\n   */\n  getShaderSource: (shaderHelper: ShaderHelper) => string;\n  /**\n   * default is \"main\"\n   */\n  // entryPoint: string;\n\n  dispatchGroup: (inputs: readonly TensorView[]) => {\n    x: number;\n    y?: number;\n    z?: number;\n  };\n}\n\nexport interface Artifact {\n  programInfo: ProgramInfo;\n  computePipeline: GPUComputePipeline;\n}\n\nexport interface ComputeContextInputsOutputsMapping {\n  /**\n   * specify the mapping to the program's inputs. the value can be a number or a tensor view.\n   * - if it's a number, it's the index of the kernel's input\n   * - if it's a tensor view, it's an existing tensor view that will be used as the input\n   *\n   * if inputs is not specified, the mapping will be the kernel's inputs in order.\n   */\n  readonly inputs?: ReadonlyArray<TensorView|number>;\n  /**\n   * specify the mapping to the program's outputs. the value must be a number.\n   * - if it's a non-negative number, it's the index of the kernel's output\n   * - if it's -1, it's an output that will be created as a temporary value. this value will be released after\n   * the kernel is executed.\n   * - if it's -2, it's an output that will be created as a persistent value. this value will be released when the\n   * kernel is released.\n   *\n   * if outputs is not specified, the mapping will be the kernel's outputs in order.\n   */\n  readonly outputs?: readonly number[];\n}\n\n/**\n * A ComputeContext instance carries the states that representing the current running of a kernel.\n */\nexport interface ComputeContext {\n  /**\n   * stores the pointer to OpKernelContext\n   */\n  readonly opKernelContext: number;\n\n  /**\n   * a list of inputs, each input is an instance of TensorView\n   */\n  readonly inputs: readonly TensorView[];\n\n  /**\n   * a custom data object that can be used to store any data that is needed by the kernel\n   */\n  readonly customData: {[key: string]: unknown};\n\n  compute(program: ProgramInfoLoader|ProgramInfo, inputsOutputsMapping?: ComputeContextInputsOutputsMapping):\n      TensorView[];\n  output(index: number, dims: readonly number[]): number;\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\ninterface ExtraOptionsHandler {\n  (name: string, value: string): void;\n}\n\nexport const iterateExtraOptions =\n    (options: Record<string, unknown>, prefix: string, seen: WeakSet<Record<string, unknown>>,\n     handler: ExtraOptionsHandler): void => {\n      if (typeof options == 'object' && options !== null) {\n        if (seen.has(options)) {\n          throw new Error('Circular reference in options');\n        } else {\n          seen.add(options);\n        }\n      }\n\n      Object.entries(options).forEach(([key, value]) => {\n        const name = (prefix) ? prefix + key : key;\n        if (typeof value === 'object') {\n          iterateExtraOptions(value as Record<string, unknown>, name + '.', seen, handler);\n        } else if (typeof value === 'string' || typeof value === 'number') {\n          handler(name, value.toString());\n        } else if (typeof value === 'boolean') {\n          handler(name, (value) ? '1' : '0');\n        } else {\n          throw new Error(`Can't handle extra config type: ${typeof value}`);\n        }\n      });\n    };\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Env, env, InferenceSession} from 'onnxruntime-common';\n\nimport {OrtWasmMessage, SerializableModeldata, SerializableSessionMetadata, SerializableTensor} from './proxy-messages';\nimport * as core from './wasm-core-impl';\nimport {initializeWebAssembly} from './wasm-factory';\n\nconst isProxy = (): boolean => !!env.wasm.proxy && typeof document !== 'undefined';\nlet proxyWorker: Worker|undefined;\nlet initializing = false;\nlet initialized = false;\nlet aborted = false;\n\n// resolve; reject\ntype PromiseCallbacks<T = void> = [(result: T) => void, (reason: unknown) => void];\n\nlet initWasmCallbacks: PromiseCallbacks;\nlet initOrtCallbacks: PromiseCallbacks;\nconst createSessionAllocateCallbacks: Array<PromiseCallbacks<SerializableModeldata>> = [];\nconst createSessionFinalizeCallbacks: Array<PromiseCallbacks<SerializableSessionMetadata>> = [];\nconst createSessionCallbacks: Array<PromiseCallbacks<SerializableSessionMetadata>> = [];\nconst releaseSessionCallbacks: Array<PromiseCallbacks<void>> = [];\nconst runCallbacks: Array<PromiseCallbacks<SerializableTensor[]>> = [];\nconst endProfilingCallbacks: Array<PromiseCallbacks<void>> = [];\n\nconst ensureWorker = (): void => {\n  if (initializing || !initialized || aborted || !proxyWorker) {\n    throw new Error('worker not ready');\n  }\n};\n\nconst onProxyWorkerMessage = (ev: MessageEvent<OrtWasmMessage>): void => {\n  switch (ev.data.type) {\n    case 'init-wasm':\n      initializing = false;\n      if (ev.data.err) {\n        aborted = true;\n        initWasmCallbacks[1](ev.data.err);\n      } else {\n        initialized = true;\n        initWasmCallbacks[0]();\n      }\n      break;\n    case 'init-ort':\n      if (ev.data.err) {\n        initOrtCallbacks[1](ev.data.err);\n      } else {\n        initOrtCallbacks[0]();\n      }\n      break;\n    case 'create_allocate':\n      if (ev.data.err) {\n        createSessionAllocateCallbacks.shift()![1](ev.data.err);\n      } else {\n        createSessionAllocateCallbacks.shift()![0](ev.data.out!);\n      }\n      break;\n    case 'create_finalize':\n      if (ev.data.err) {\n        createSessionFinalizeCallbacks.shift()![1](ev.data.err);\n      } else {\n        createSessionFinalizeCallbacks.shift()![0](ev.data.out!);\n      }\n      break;\n    case 'create':\n      if (ev.data.err) {\n        createSessionCallbacks.shift()![1](ev.data.err);\n      } else {\n        createSessionCallbacks.shift()![0](ev.data.out!);\n      }\n      break;\n    case 'release':\n      if (ev.data.err) {\n        releaseSessionCallbacks.shift()![1](ev.data.err);\n      } else {\n        releaseSessionCallbacks.shift()![0]();\n      }\n      break;\n    case 'run':\n      if (ev.data.err) {\n        runCallbacks.shift()![1](ev.data.err);\n      } else {\n        runCallbacks.shift()![0](ev.data.out!);\n      }\n      break;\n    case 'end-profiling':\n      if (ev.data.err) {\n        endProfilingCallbacks.shift()![1](ev.data.err);\n      } else {\n        endProfilingCallbacks.shift()![0]();\n      }\n      break;\n    default:\n  }\n};\n\nconst scriptSrc = typeof document !== 'undefined' ? (document?.currentScript as HTMLScriptElement)?.src : undefined;\n\nexport const initializeWebAssemblyInstance = async(): Promise<void> => {\n  if (!BUILD_DEFS.DISABLE_WASM_PROXY && isProxy()) {\n    if (initialized) {\n      return;\n    }\n    if (initializing) {\n      throw new Error('multiple calls to \\'initWasm()\\' detected.');\n    }\n    if (aborted) {\n      throw new Error('previous call to \\'initWasm()\\' failed.');\n    }\n\n    initializing = true;\n\n    // overwrite wasm filepaths\n    if (env.wasm.wasmPaths === undefined) {\n      if (scriptSrc && scriptSrc.indexOf('blob:') !== 0) {\n        env.wasm.wasmPaths = scriptSrc.substr(0, +(scriptSrc).lastIndexOf('/') + 1);\n      }\n    }\n\n    return new Promise<void>((resolve, reject) => {\n      proxyWorker?.terminate();\n      // eslint-disable-next-line @typescript-eslint/no-var-requires, @typescript-eslint/no-require-imports\n      proxyWorker = require('worker-loader?inline=no-fallback!./proxy-worker/main').default() as Worker;\n      proxyWorker.onmessage = onProxyWorkerMessage;\n      initWasmCallbacks = [resolve, reject];\n      const message: OrtWasmMessage = {type: 'init-wasm', in : env.wasm};\n      proxyWorker.postMessage(message);\n    });\n\n  } else {\n    return initializeWebAssembly(env.wasm);\n  }\n};\n\nexport const initializeRuntime = async(env: Env): Promise<void> => {\n  if (!BUILD_DEFS.DISABLE_WASM_PROXY && isProxy()) {\n    ensureWorker();\n    return new Promise<void>((resolve, reject) => {\n      initOrtCallbacks = [resolve, reject];\n      const message: OrtWasmMessage = {type: 'init-ort', in : env};\n      proxyWorker!.postMessage(message);\n    });\n  } else {\n    await core.initRuntime(env);\n  }\n};\n\nexport const createSessionAllocate = async(model: Uint8Array): Promise<SerializableModeldata> => {\n  if (!BUILD_DEFS.DISABLE_WASM_PROXY && isProxy()) {\n    ensureWorker();\n    return new Promise<SerializableModeldata>((resolve, reject) => {\n      createSessionAllocateCallbacks.push([resolve, reject]);\n      const message: OrtWasmMessage = {type: 'create_allocate', in : {model}};\n      proxyWorker!.postMessage(message, [model.buffer]);\n    });\n  } else {\n    return core.createSessionAllocate(model);\n  }\n};\n\nexport const createSessionFinalize = async(modeldata: SerializableModeldata, options?: InferenceSession.SessionOptions):\n    Promise<SerializableSessionMetadata> => {\n      if (!BUILD_DEFS.DISABLE_WASM_PROXY && isProxy()) {\n        ensureWorker();\n        return new Promise<SerializableSessionMetadata>((resolve, reject) => {\n          createSessionFinalizeCallbacks.push([resolve, reject]);\n          const message: OrtWasmMessage = {type: 'create_finalize', in : {modeldata, options}};\n          proxyWorker!.postMessage(message);\n        });\n      } else {\n        return core.createSessionFinalize(modeldata, options);\n      }\n    };\n\nexport const createSession =\n    async(model: Uint8Array, options?: InferenceSession.SessionOptions): Promise<SerializableSessionMetadata> => {\n  if (!BUILD_DEFS.DISABLE_WASM_PROXY && isProxy()) {\n    ensureWorker();\n    return new Promise<SerializableSessionMetadata>((resolve, reject) => {\n      createSessionCallbacks.push([resolve, reject]);\n      const message: OrtWasmMessage = {type: 'create', in : {model, options}};\n      proxyWorker!.postMessage(message, [model.buffer]);\n    });\n  } else {\n    return core.createSession(model, options);\n  }\n};\n\nexport const releaseSession = async(sessionId: number): Promise<void> => {\n  if (!BUILD_DEFS.DISABLE_WASM_PROXY && isProxy()) {\n    ensureWorker();\n    return new Promise<void>((resolve, reject) => {\n      releaseSessionCallbacks.push([resolve, reject]);\n      const message: OrtWasmMessage = {type: 'release', in : sessionId};\n      proxyWorker!.postMessage(message);\n    });\n  } else {\n    core.releaseSession(sessionId);\n  }\n};\n\nexport const run = async(\n    sessionId: number, inputIndices: number[], inputs: SerializableTensor[], outputIndices: number[],\n    options: InferenceSession.RunOptions): Promise<SerializableTensor[]> => {\n  if (!BUILD_DEFS.DISABLE_WASM_PROXY && isProxy()) {\n    ensureWorker();\n    return new Promise<SerializableTensor[]>((resolve, reject) => {\n      runCallbacks.push([resolve, reject]);\n      const message: OrtWasmMessage = {type: 'run', in : {sessionId, inputIndices, inputs, outputIndices, options}};\n      proxyWorker!.postMessage(message, core.extractTransferableBuffers(inputs));\n    });\n  } else {\n    return core.run(sessionId, inputIndices, inputs, outputIndices, options);\n  }\n};\n\nexport const endProfiling = async(sessionId: number): Promise<void> => {\n  if (!BUILD_DEFS.DISABLE_WASM_PROXY && isProxy()) {\n    ensureWorker();\n    return new Promise<void>((resolve, reject) => {\n      endProfilingCallbacks.push([resolve, reject]);\n      const message: OrtWasmMessage = {type: 'end-profiling', in : sessionId};\n      proxyWorker!.postMessage(message);\n    });\n  } else {\n    core.endProfiling(sessionId);\n  }\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {InferenceSession} from 'onnxruntime-common';\n\nimport {iterateExtraOptions} from './options-utils';\nimport {allocWasmString} from './string-utils';\nimport {getInstance} from './wasm-factory';\n\nexport const setRunOptions = (options: InferenceSession.RunOptions): [number, number[]] => {\n  const wasm = getInstance();\n  let runOptionsHandle = 0;\n  const allocs: number[] = [];\n\n  const runOptions: InferenceSession.RunOptions = options || {};\n\n  try {\n    if (options?.logSeverityLevel === undefined) {\n      runOptions.logSeverityLevel = 2;  // Default to warning\n    } else if (\n        typeof options.logSeverityLevel !== 'number' || !Number.isInteger(options.logSeverityLevel) ||\n        options.logSeverityLevel < 0 || options.logSeverityLevel > 4) {\n      throw new Error(`log serverity level is not valid: ${options.logSeverityLevel}`);\n    }\n\n    if (options?.logVerbosityLevel === undefined) {\n      runOptions.logVerbosityLevel = 0;  // Default to 0\n    } else if (typeof options.logVerbosityLevel !== 'number' || !Number.isInteger(options.logVerbosityLevel)) {\n      throw new Error(`log verbosity level is not valid: ${options.logVerbosityLevel}`);\n    }\n\n    if (options?.terminate === undefined) {\n      runOptions.terminate = false;\n    }\n\n    let tagDataOffset = 0;\n    if (options?.tag !== undefined) {\n      tagDataOffset = allocWasmString(options.tag, allocs);\n    }\n\n    runOptionsHandle = wasm._OrtCreateRunOptions(\n        runOptions.logSeverityLevel!, runOptions.logVerbosityLevel!, !!runOptions.terminate!, tagDataOffset);\n    if (runOptionsHandle === 0) {\n      throw new Error('Can\\'t create run options');\n    }\n\n    if (options?.extra !== undefined) {\n      iterateExtraOptions(options.extra, '', new WeakSet<Record<string, unknown>>(), (key, value) => {\n        const keyDataOffset = allocWasmString(key, allocs);\n        const valueDataOffset = allocWasmString(value, allocs);\n\n        if (wasm._OrtAddRunConfigEntry(runOptionsHandle, keyDataOffset, valueDataOffset) !== 0) {\n          throw new Error(`Can't set a run config entry: ${key} - ${value}`);\n        }\n      });\n    }\n\n    return [runOptionsHandle, allocs];\n  } catch (e) {\n    if (runOptionsHandle !== 0) {\n      wasm._OrtReleaseRunOptions(runOptionsHandle);\n    }\n    allocs.forEach(wasm._free);\n    throw e;\n  }\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {readFile} from 'fs';\nimport {env, InferenceSession, SessionHandler, Tensor} from 'onnxruntime-common';\nimport {promisify} from 'util';\n\nimport {SerializableModeldata} from './proxy-messages';\nimport {createSession, createSessionAllocate, createSessionFinalize, endProfiling, initializeRuntime, releaseSession, run} from './proxy-wrapper';\n\nlet runtimeInitialized: boolean;\n\nexport class OnnxruntimeWebAssemblySessionHandler implements SessionHandler {\n  private sessionId: number;\n\n  inputNames: string[];\n  outputNames: string[];\n\n  async createSessionAllocate(path: string): Promise<SerializableModeldata> {\n    // fetch model from url and move to wasm heap. The arraybufffer that held the http\n    // response is freed once we return\n    const response = await fetch(path);\n    const arrayBuffer = await response.arrayBuffer();\n    return createSessionAllocate(new Uint8Array(arrayBuffer));\n  }\n\n  async loadModel(pathOrBuffer: string|Uint8Array, options?: InferenceSession.SessionOptions): Promise<void> {\n    if (!runtimeInitialized) {\n      await initializeRuntime(env);\n      runtimeInitialized = true;\n    }\n\n    if (typeof pathOrBuffer === 'string') {\n      if (typeof fetch === 'undefined') {\n        // node\n        const model = await promisify(readFile)(pathOrBuffer);\n        [this.sessionId, this.inputNames, this.outputNames] = await createSession(model, options);\n      } else {\n        // browser\n        // fetch model and move to wasm heap.\n        const modelData: SerializableModeldata = await this.createSessionAllocate(pathOrBuffer);\n        // create the session\n        [this.sessionId, this.inputNames, this.outputNames] = await createSessionFinalize(modelData, options);\n      }\n    } else {\n      [this.sessionId, this.inputNames, this.outputNames] = await createSession(pathOrBuffer, options);\n    }\n  }\n\n  async dispose(): Promise<void> {\n    return releaseSession(this.sessionId);\n  }\n\n  async run(feeds: SessionHandler.FeedsType, fetches: SessionHandler.FetchesType, options: InferenceSession.RunOptions):\n      Promise<SessionHandler.ReturnType> {\n    const inputArray: Tensor[] = [];\n    const inputIndices: number[] = [];\n    Object.entries(feeds).forEach(kvp => {\n      const name = kvp[0];\n      const tensor = kvp[1];\n      const index = this.inputNames.indexOf(name);\n      if (index === -1) {\n        throw new Error(`invalid input '${name}'`);\n      }\n      inputArray.push(tensor);\n      inputIndices.push(index);\n    });\n\n    const outputIndices: number[] = [];\n    Object.entries(fetches).forEach(kvp => {\n      const name = kvp[0];\n      // TODO: support pre-allocated output\n      const index = this.outputNames.indexOf(name);\n      if (index === -1) {\n        throw new Error(`invalid output '${name}'`);\n      }\n      outputIndices.push(index);\n    });\n\n    const outputs =\n        await run(this.sessionId, inputIndices, inputArray.map(t => [t.type, t.dims, t.data]), outputIndices, options);\n\n    const result: SessionHandler.ReturnType = {};\n    for (let i = 0; i < outputs.length; i++) {\n      result[this.outputNames[outputIndices[i]]] = new Tensor(outputs[i][0], outputs[i][2], outputs[i][1]);\n    }\n    return result;\n  }\n\n  startProfiling(): void {\n    // TODO: implement profiling\n  }\n\n  endProfiling(): void {\n    void endProfiling(this.sessionId);\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {InferenceSession} from 'onnxruntime-common';\n\nimport {iterateExtraOptions} from './options-utils';\nimport {allocWasmString} from './string-utils';\nimport {getInstance} from './wasm-factory';\n\nconst getGraphOptimzationLevel = (graphOptimizationLevel: string|unknown): number => {\n  switch (graphOptimizationLevel) {\n    case 'disabled':\n      return 0;\n    case 'basic':\n      return 1;\n    case 'extended':\n      return 2;\n    case 'all':\n      return 99;\n    default:\n      throw new Error(`unsupported graph optimization level: ${graphOptimizationLevel}`);\n  }\n};\n\nconst getExecutionMode = (executionMode: 'sequential'|'parallel'): number => {\n  switch (executionMode) {\n    case 'sequential':\n      return 0;\n    case 'parallel':\n      return 1;\n    default:\n      throw new Error(`unsupported execution mode: ${executionMode}`);\n  }\n};\n\nconst appendDefaultOptions = (options: InferenceSession.SessionOptions): void => {\n  if (!options.extra) {\n    options.extra = {};\n  }\n  if (!options.extra.session) {\n    options.extra.session = {};\n  }\n  const session = options.extra.session as Record<string, string>;\n  if (!session.use_ort_model_bytes_directly) {\n    // eslint-disable-next-line camelcase\n    session.use_ort_model_bytes_directly = '1';\n  }\n\n  // if using JSEP with WebGPU, always disable memory pattern\n  if (options.executionProviders &&\n      options.executionProviders.some(ep => (typeof ep === 'string' ? ep : ep.name) === 'webgpu')) {\n    options.enableMemPattern = false;\n  }\n};\n\nconst setExecutionProviders =\n    (sessionOptionsHandle: number, executionProviders: readonly InferenceSession.ExecutionProviderConfig[],\n     allocs: number[]): void => {\n      for (const ep of executionProviders) {\n        let epName = typeof ep === 'string' ? ep : ep.name;\n\n        // check EP name\n        switch (epName) {\n          case 'xnnpack':\n            epName = 'XNNPACK';\n            break;\n          case 'webnn':\n            epName = 'WEBNN';\n            if (typeof ep !== 'string') {\n              const webnnOptions = ep as InferenceSession.WebNNExecutionProviderOption;\n              if (webnnOptions?.deviceType) {\n                const keyDataOffset = allocWasmString('deviceType', allocs);\n                const valueDataOffset = allocWasmString(webnnOptions.deviceType, allocs);\n                if (getInstance()._OrtAddSessionConfigEntry(sessionOptionsHandle, keyDataOffset, valueDataOffset) !==\n                    0) {\n                  throw new Error(`Can't set a session config entry: 'deviceType' - ${webnnOptions.deviceType}`);\n                }\n              }\n              if (webnnOptions?.powerPreference) {\n                const keyDataOffset = allocWasmString('powerPreference', allocs);\n                const valueDataOffset = allocWasmString(webnnOptions.powerPreference, allocs);\n                if (getInstance()._OrtAddSessionConfigEntry(sessionOptionsHandle, keyDataOffset, valueDataOffset) !==\n                    0) {\n                  throw new Error(\n                      `Can't set a session config entry: 'powerPreference' - ${webnnOptions.powerPreference}`);\n                }\n              }\n            }\n            break;\n          case 'webgpu':\n            epName = 'JS';\n            break;\n          case 'wasm':\n          case 'cpu':\n            continue;\n          default:\n            throw new Error(`not supported EP: ${epName}`);\n        }\n\n        const epNameDataOffset = allocWasmString(epName, allocs);\n        if (getInstance()._OrtAppendExecutionProvider(sessionOptionsHandle, epNameDataOffset) !== 0) {\n          throw new Error(`Can't append execution provider: ${epName}`);\n        }\n      }\n    };\n\nexport const setSessionOptions = (options?: InferenceSession.SessionOptions): [number, number[]] => {\n  const wasm = getInstance();\n  let sessionOptionsHandle = 0;\n  const allocs: number[] = [];\n\n  const sessionOptions: InferenceSession.SessionOptions = options || {};\n  appendDefaultOptions(sessionOptions);\n\n  try {\n    const graphOptimizationLevel = getGraphOptimzationLevel(sessionOptions.graphOptimizationLevel ?? 'all');\n    const executionMode = getExecutionMode(sessionOptions.executionMode ?? 'sequential');\n    const logIdDataOffset =\n        typeof sessionOptions.logId === 'string' ? allocWasmString(sessionOptions.logId, allocs) : 0;\n\n    const logSeverityLevel = sessionOptions.logSeverityLevel ?? 2;  // Default to 2 - warning\n    if (!Number.isInteger(logSeverityLevel) || logSeverityLevel < 0 || logSeverityLevel > 4) {\n      throw new Error(`log serverity level is not valid: ${logSeverityLevel}`);\n    }\n\n    const logVerbosityLevel = sessionOptions.logVerbosityLevel ?? 0;  // Default to 0 - verbose\n    if (!Number.isInteger(logVerbosityLevel) || logVerbosityLevel < 0 || logVerbosityLevel > 4) {\n      throw new Error(`log verbosity level is not valid: ${logVerbosityLevel}`);\n    }\n\n    const optimizedModelFilePathOffset = typeof sessionOptions.optimizedModelFilePath === 'string' ?\n        allocWasmString(sessionOptions.optimizedModelFilePath, allocs) :\n        0;\n\n    sessionOptionsHandle = wasm._OrtCreateSessionOptions(\n        graphOptimizationLevel, !!sessionOptions.enableCpuMemArena, !!sessionOptions.enableMemPattern, executionMode,\n        !!sessionOptions.enableProfiling, 0, logIdDataOffset, logSeverityLevel, logVerbosityLevel,\n        optimizedModelFilePathOffset);\n    if (sessionOptionsHandle === 0) {\n      throw new Error('Can\\'t create session options');\n    }\n\n    if (sessionOptions.executionProviders) {\n      setExecutionProviders(sessionOptionsHandle, sessionOptions.executionProviders, allocs);\n    }\n\n    if (sessionOptions.extra !== undefined) {\n      iterateExtraOptions(sessionOptions.extra, '', new WeakSet<Record<string, unknown>>(), (key, value) => {\n        const keyDataOffset = allocWasmString(key, allocs);\n        const valueDataOffset = allocWasmString(value, allocs);\n\n        if (wasm._OrtAddSessionConfigEntry(sessionOptionsHandle, keyDataOffset, valueDataOffset) !== 0) {\n          throw new Error(`Can't set a session config entry: ${key} - ${value}`);\n        }\n      });\n    }\n\n    return [sessionOptionsHandle, allocs];\n  } catch (e) {\n    if (sessionOptionsHandle !== 0) {\n      wasm._OrtReleaseSessionOptions(sessionOptionsHandle);\n    }\n    allocs.forEach(wasm._free);\n    throw e;\n  }\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {getInstance} from './wasm-factory';\n\nexport const allocWasmString = (data: string, allocs: number[]): number => {\n  const wasm = getInstance();\n\n  const dataLength = wasm.lengthBytesUTF8(data) + 1;\n  const dataOffset = wasm._malloc(dataLength);\n  wasm.stringToUTF8(data, dataOffset, dataLength);\n  allocs.push(dataOffset);\n\n  return dataOffset;\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Tensor} from 'onnxruntime-common';\n\n/**\n * Copied from ONNX definition. Use this to drop dependency 'onnx_proto' to decrease compiled .js file size.\n */\nexport const enum DataType {\n  undefined = 0,\n  float = 1,\n  uint8 = 2,\n  int8 = 3,\n  uint16 = 4,\n  int16 = 5,\n  int32 = 6,\n  int64 = 7,\n  string = 8,\n  bool = 9,\n  float16 = 10,\n  double = 11,\n  uint32 = 12,\n  uint64 = 13,\n  complex64 = 14,\n  complex128 = 15,\n  bfloat16 = 16\n}\n\n/**\n * Map string tensor data to enum value\n */\nexport const tensorDataTypeStringToEnum = (type: string): DataType => {\n  switch (type) {\n    case 'int8':\n      return DataType.int8;\n    case 'uint8':\n      return DataType.uint8;\n    case 'bool':\n      return DataType.bool;\n    case 'int16':\n      return DataType.int16;\n    case 'uint16':\n      return DataType.uint16;\n    case 'int32':\n      return DataType.int32;\n    case 'uint32':\n      return DataType.uint32;\n    case 'float16':\n      return DataType.float16;\n    case 'float32':\n      return DataType.float;\n    case 'float64':\n      return DataType.double;\n    case 'string':\n      return DataType.string;\n    case 'int64':\n      return DataType.int64;\n    case 'uint64':\n      return DataType.uint64;\n\n    default:\n      throw new Error(`unsupported data type: ${type}`);\n  }\n};\n\n/**\n * Map enum value to string tensor data\n */\nexport const tensorDataTypeEnumToString = (typeProto: DataType): Tensor.Type => {\n  switch (typeProto) {\n    case DataType.int8:\n      return 'int8';\n    case DataType.uint8:\n      return 'uint8';\n    case DataType.bool:\n      return 'bool';\n    case DataType.int16:\n      return 'int16';\n    case DataType.uint16:\n      return 'uint16';\n    case DataType.int32:\n      return 'int32';\n    case DataType.uint32:\n      return 'uint32';\n    case DataType.float16:\n      return 'uint16';\n    case DataType.float:\n      return 'float32';\n    case DataType.double:\n      return 'float64';\n    case DataType.string:\n      return 'string';\n    case DataType.int64:\n      return 'int64';\n    case DataType.uint64:\n      return 'uint64';\n\n    default:\n      throw new Error(`unsupported data type: ${typeProto}`);\n  }\n};\n\n/**\n * get tensor element size in bytes by the given data type\n * @returns size in integer or undefined if the data type is not supported\n */\nexport const getTensorElementSize = (dateType: number): number|\n    undefined => [undefined, 4, 1, 1, 2, 2, 4, 8, undefined, 1, 2, 8, 4, 8, undefined, undefined, undefined][dateType];\n\n/**\n * get typed array constructor by the given tensor type\n */\nexport const tensorTypeToTypedArrayConstructor = (type: Tensor.Type): Float32ArrayConstructor|Uint8ArrayConstructor|\n    Int8ArrayConstructor|Uint16ArrayConstructor|Int16ArrayConstructor|Int32ArrayConstructor|BigInt64ArrayConstructor|\n    Uint8ArrayConstructor|Float64ArrayConstructor|Uint32ArrayConstructor|BigUint64ArrayConstructor => {\n      switch (type) {\n        case 'float32':\n          return Float32Array;\n        case 'uint8':\n          return Uint8Array;\n        case 'int8':\n          return Int8Array;\n        case 'uint16':\n          return Uint16Array;\n        case 'int16':\n          return Int16Array;\n        case 'int32':\n          return Int32Array;\n        case 'bool':\n          return Uint8Array;\n        case 'float64':\n          return Float64Array;\n        case 'uint32':\n          return Uint32Array;\n        case 'int64':\n          return BigInt64Array;\n        case 'uint64':\n          return BigUint64Array;\n        default:\n          throw new Error(`unsupported type: ${type}`);\n      }\n    };\n\n/**\n * Map string log level to integer value\n */\nexport const logLevelStringToEnum = (logLevel?: 'verbose'|'info'|'warning'|'error'|'fatal'): number => {\n  switch (logLevel) {\n    case 'verbose':\n      return 0;\n    case 'info':\n      return 1;\n    case 'warning':\n      return 2;\n    case 'error':\n      return 3;\n    case 'fatal':\n      return 4;\n    default:\n      throw new Error(`unsupported logging level: ${logLevel}`);\n  }\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Env, InferenceSession, Tensor} from 'onnxruntime-common';\n\nimport {init as initJsep} from './jsep/init';\nimport {SerializableModeldata, SerializableSessionMetadata, SerializableTensor} from './proxy-messages';\nimport {setRunOptions} from './run-options';\nimport {setSessionOptions} from './session-options';\nimport {allocWasmString} from './string-utils';\nimport {logLevelStringToEnum, tensorDataTypeEnumToString, tensorDataTypeStringToEnum, tensorTypeToTypedArrayConstructor} from './wasm-common';\nimport {getInstance} from './wasm-factory';\n\n/**\n * initialize ORT environment.\n * @param numThreads SetGlobalIntraOpNumThreads(numThreads)\n * @param loggingLevel CreateEnv(static_cast<OrtLoggingLevel>(logging_level))\n */\nconst initOrt = async(numThreads: number, loggingLevel: number): Promise<void> => {\n  const errorCode = getInstance()._OrtInit(numThreads, loggingLevel);\n  if (errorCode !== 0) {\n    throw new Error(`Can't initialize onnxruntime. error code = ${errorCode}`);\n  }\n};\n\n/**\n * intialize runtime environment.\n * @param env passed in the environment config object.\n */\nexport const initRuntime = async(env: Env): Promise<void> => {\n  // init ORT\n  await initOrt(env.wasm.numThreads!, logLevelStringToEnum(env.logLevel));\n\n  // init JSEP if available\n  await initJsep(getInstance(), env);\n};\n\n/**\n *  tuple elements are: InferenceSession ID; inputNamesUTF8Encoded; outputNamesUTF8Encoded\n */\ntype SessionMetadata = [number, number[], number[]];\n\nconst activeSessions = new Map<number, SessionMetadata>();\n\n/**\n * create an instance of InferenceSession.\n * @returns the metadata of InferenceSession. 0-value handle for failure.\n */\nexport const createSessionAllocate = (model: Uint8Array): [number, number] => {\n  const wasm = getInstance();\n  const modelDataOffset = wasm._malloc(model.byteLength);\n  wasm.HEAPU8.set(model, modelDataOffset);\n  return [modelDataOffset, model.byteLength];\n};\n\nexport const createSessionFinalize =\n    (modelData: SerializableModeldata, options?: InferenceSession.SessionOptions): SerializableSessionMetadata => {\n      const wasm = getInstance();\n\n      let sessionHandle = 0;\n      let sessionOptionsHandle = 0;\n      let allocs: number[] = [];\n\n      try {\n        [sessionOptionsHandle, allocs] = setSessionOptions(options);\n\n        sessionHandle = wasm._OrtCreateSession(modelData[0], modelData[1], sessionOptionsHandle);\n        if (sessionHandle === 0) {\n          throw new Error('Can\\'t create a session');\n        }\n      } finally {\n        wasm._free(modelData[0]);\n        if (sessionOptionsHandle !== 0) {\n          wasm._OrtReleaseSessionOptions(sessionOptionsHandle);\n        }\n        allocs.forEach(wasm._free);\n      }\n\n      const inputCount = wasm._OrtGetInputCount(sessionHandle);\n      const outputCount = wasm._OrtGetOutputCount(sessionHandle);\n\n      const inputNames = [];\n      const inputNamesUTF8Encoded = [];\n      const outputNames = [];\n      const outputNamesUTF8Encoded = [];\n      for (let i = 0; i < inputCount; i++) {\n        const name = wasm._OrtGetInputName(sessionHandle, i);\n        if (name === 0) {\n          throw new Error('Can\\'t get an input name');\n        }\n        inputNamesUTF8Encoded.push(name);\n        inputNames.push(wasm.UTF8ToString(name));\n      }\n      for (let i = 0; i < outputCount; i++) {\n        const name = wasm._OrtGetOutputName(sessionHandle, i);\n        if (name === 0) {\n          throw new Error('Can\\'t get an output name');\n        }\n        outputNamesUTF8Encoded.push(name);\n        outputNames.push(wasm.UTF8ToString(name));\n      }\n\n      activeSessions.set(sessionHandle, [sessionHandle, inputNamesUTF8Encoded, outputNamesUTF8Encoded]);\n      return [sessionHandle, inputNames, outputNames];\n    };\n\n\n/**\n * create an instance of InferenceSession.\n * @returns the metadata of InferenceSession. 0-value handle for failure.\n */\nexport const createSession =\n    (model: Uint8Array, options?: InferenceSession.SessionOptions): SerializableSessionMetadata => {\n      const modelData: SerializableModeldata = createSessionAllocate(model);\n      return createSessionFinalize(modelData, options);\n    };\n\nexport const releaseSession = (sessionId: number): void => {\n  const wasm = getInstance();\n  const session = activeSessions.get(sessionId);\n  if (!session) {\n    throw new Error('invalid session id');\n  }\n  const sessionHandle = session[0];\n  const inputNamesUTF8Encoded = session[1];\n  const outputNamesUTF8Encoded = session[2];\n\n  inputNamesUTF8Encoded.forEach(wasm._OrtFree);\n  outputNamesUTF8Encoded.forEach(wasm._OrtFree);\n  wasm._OrtReleaseSession(sessionHandle);\n  activeSessions.delete(sessionId);\n};\n\n/**\n * perform inference run\n */\nexport const run = async(\n    sessionId: number, inputIndices: number[], inputs: SerializableTensor[], outputIndices: number[],\n    options: InferenceSession.RunOptions): Promise<SerializableTensor[]> => {\n  const wasm = getInstance();\n  const session = activeSessions.get(sessionId);\n  if (!session) {\n    throw new Error('invalid session id');\n  }\n  const sessionHandle = session[0];\n  const inputNamesUTF8Encoded = session[1];\n  const outputNamesUTF8Encoded = session[2];\n\n  const inputCount = inputIndices.length;\n  const outputCount = outputIndices.length;\n\n  let runOptionsHandle = 0;\n  let runOptionsAllocs: number[] = [];\n\n  const inputValues: number[] = [];\n  const inputAllocs: number[] = [];\n\n  try {\n    [runOptionsHandle, runOptionsAllocs] = setRunOptions(options);\n\n    // create input tensors\n    for (let i = 0; i < inputCount; i++) {\n      const dataType = inputs[i][0];\n      const dims = inputs[i][1];\n      const data = inputs[i][2];\n\n      let dataOffset: number;\n      let dataByteLength: number;\n\n      if (Array.isArray(data)) {\n        // string tensor\n        dataByteLength = 4 * data.length;\n        dataOffset = wasm._malloc(dataByteLength);\n        inputAllocs.push(dataOffset);\n        let dataIndex = dataOffset / 4;\n        for (let i = 0; i < data.length; i++) {\n          if (typeof data[i] !== 'string') {\n            throw new TypeError(`tensor data at index ${i} is not a string`);\n          }\n          wasm.HEAPU32[dataIndex++] = allocWasmString(data[i], inputAllocs);\n        }\n      } else {\n        dataByteLength = data.byteLength;\n        dataOffset = wasm._malloc(dataByteLength);\n        inputAllocs.push(dataOffset);\n        wasm.HEAPU8.set(new Uint8Array(data.buffer, data.byteOffset, dataByteLength), dataOffset);\n      }\n\n      const stack = wasm.stackSave();\n      const dimsOffset = wasm.stackAlloc(4 * dims.length);\n      try {\n        let dimIndex = dimsOffset / 4;\n        dims.forEach(d => wasm.HEAP32[dimIndex++] = d);\n        const tensor = wasm._OrtCreateTensor(\n            tensorDataTypeStringToEnum(dataType), dataOffset, dataByteLength, dimsOffset, dims.length);\n        if (tensor === 0) {\n          throw new Error('Can\\'t create a tensor');\n        }\n        inputValues.push(tensor);\n      } finally {\n        wasm.stackRestore(stack);\n      }\n    }\n\n    const beforeRunStack = wasm.stackSave();\n    const inputValuesOffset = wasm.stackAlloc(inputCount * 4);\n    const inputNamesOffset = wasm.stackAlloc(inputCount * 4);\n    const outputValuesOffset = wasm.stackAlloc(outputCount * 4);\n    const outputNamesOffset = wasm.stackAlloc(outputCount * 4);\n\n    try {\n      let inputValuesIndex = inputValuesOffset / 4;\n      let inputNamesIndex = inputNamesOffset / 4;\n      let outputValuesIndex = outputValuesOffset / 4;\n      let outputNamesIndex = outputNamesOffset / 4;\n      for (let i = 0; i < inputCount; i++) {\n        wasm.HEAPU32[inputValuesIndex++] = inputValues[i];\n        wasm.HEAPU32[inputNamesIndex++] = inputNamesUTF8Encoded[inputIndices[i]];\n      }\n      for (let i = 0; i < outputCount; i++) {\n        wasm.HEAPU32[outputValuesIndex++] = 0;\n        wasm.HEAPU32[outputNamesIndex++] = outputNamesUTF8Encoded[outputIndices[i]];\n      }\n\n      // support RunOptions\n      let errorCode = wasm._OrtRun(\n          sessionHandle, inputNamesOffset, inputValuesOffset, inputCount, outputNamesOffset, outputCount,\n          outputValuesOffset, runOptionsHandle);\n\n      // eslint-disable-next-line @typescript-eslint/naming-convention\n      const runPromise = wasm.jsepRunPromise;\n      if (runPromise && typeof runPromise.then !== 'undefined') {\n        errorCode = await runPromise;\n      }\n\n      const output: SerializableTensor[] = [];\n\n      if (errorCode === 0) {\n        for (let i = 0; i < outputCount; i++) {\n          const tensor = wasm.HEAPU32[outputValuesOffset / 4 + i];\n\n          const beforeGetTensorDataStack = wasm.stackSave();\n          // stack allocate 4 pointer value\n          const tensorDataOffset = wasm.stackAlloc(4 * 4);\n\n          let type: Tensor.Type|undefined, dataOffset = 0;\n          try {\n            errorCode = wasm._OrtGetTensorData(\n                tensor, tensorDataOffset, tensorDataOffset + 4, tensorDataOffset + 8, tensorDataOffset + 12);\n            if (errorCode !== 0) {\n              throw new Error(`Can't access output tensor data. error code = ${errorCode}`);\n            }\n            let tensorDataIndex = tensorDataOffset / 4;\n            const dataType = wasm.HEAPU32[tensorDataIndex++];\n            dataOffset = wasm.HEAPU32[tensorDataIndex++];\n            const dimsOffset = wasm.HEAPU32[tensorDataIndex++];\n            const dimsLength = wasm.HEAPU32[tensorDataIndex++];\n            const dims = [];\n            for (let i = 0; i < dimsLength; i++) {\n              dims.push(wasm.HEAPU32[dimsOffset / 4 + i]);\n            }\n            wasm._OrtFree(dimsOffset);\n\n            const size = dims.length === 0 ? 1 : dims.reduce((a, b) => a * b);\n            type = tensorDataTypeEnumToString(dataType);\n            if (type === 'string') {\n              const stringData: string[] = [];\n              let dataIndex = dataOffset / 4;\n              for (let i = 0; i < size; i++) {\n                const offset = wasm.HEAPU32[dataIndex++];\n                const maxBytesToRead = i === size - 1 ? undefined : wasm.HEAPU32[dataIndex] - offset;\n                stringData.push(wasm.UTF8ToString(offset, maxBytesToRead));\n              }\n              output.push([type, dims, stringData]);\n            } else {\n              const typedArrayConstructor = tensorTypeToTypedArrayConstructor(type);\n              const data = new typedArrayConstructor(size);\n              new Uint8Array(data.buffer, data.byteOffset, data.byteLength)\n                  .set(wasm.HEAPU8.subarray(dataOffset, dataOffset + data.byteLength));\n              output.push([type, dims, data]);\n            }\n          } finally {\n            wasm.stackRestore(beforeGetTensorDataStack);\n            if (type === 'string' && dataOffset) {\n              wasm._free(dataOffset);\n            }\n            wasm._OrtReleaseTensor(tensor);\n          }\n        }\n      }\n\n      if (errorCode === 0) {\n        return output;\n      } else {\n        throw new Error(`failed to call OrtRun(). error code = ${errorCode}.`);\n      }\n    } finally {\n      wasm.stackRestore(beforeRunStack);\n    }\n  } finally {\n    inputValues.forEach(wasm._OrtReleaseTensor);\n    inputAllocs.forEach(wasm._free);\n\n    wasm._OrtReleaseRunOptions(runOptionsHandle);\n    runOptionsAllocs.forEach(wasm._free);\n  }\n};\n\n/**\n * end profiling\n */\nexport const endProfiling = (sessionId: number): void => {\n  const wasm = getInstance();\n  const session = activeSessions.get(sessionId);\n  if (!session) {\n    throw new Error('invalid session id');\n  }\n  const sessionHandle = session[0];\n\n  // profile file name is not used yet, but it must be freed.\n  const profileFileName = wasm._OrtEndProfiling(sessionHandle);\n  if (profileFileName === 0) {\n    throw new Error('Can\\'t get an profile file name');\n  }\n  wasm._OrtFree(profileFileName);\n};\n\nexport const extractTransferableBuffers = (tensors: readonly SerializableTensor[]): ArrayBufferLike[] => {\n  const buffers: ArrayBufferLike[] = [];\n  for (const tensor of tensors) {\n    const data = tensor[2];\n    if (!Array.isArray(data) && data.buffer) {\n      buffers.push(data.buffer);\n    }\n  }\n  return buffers;\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Env} from 'onnxruntime-common';\nimport * as path from 'path';\n\nimport {OrtWasmModule} from './binding/ort-wasm';\nimport {OrtWasmThreadedModule} from './binding/ort-wasm-threaded';\n\n/* eslint-disable @typescript-eslint/no-require-imports */\nconst ortWasmFactory: EmscriptenModuleFactory<OrtWasmModule> =\n    BUILD_DEFS.DISABLE_WEBGPU ? require('./binding/ort-wasm.js') : require('./binding/ort-wasm-simd.jsep.js');\n\nconst ortWasmFactoryThreaded: EmscriptenModuleFactory<OrtWasmModule> = !BUILD_DEFS.DISABLE_WASM_THREAD ?\n    (BUILD_DEFS.DISABLE_WEBGPU ? require('./binding/ort-wasm-threaded.js') :\n                                 require('./binding/ort-wasm-simd-threaded.jsep.js')) :\n    ortWasmFactory;\n/* eslint-enable @typescript-eslint/no-require-imports */\n\nlet wasm: OrtWasmModule|undefined;\nlet initialized = false;\nlet initializing = false;\nlet aborted = false;\n\nconst isMultiThreadSupported = (): boolean => {\n  try {\n    // If 'SharedArrayBuffer' is not available, WebAssembly threads will not work.\n    if (typeof SharedArrayBuffer === 'undefined') {\n      return false;\n    }\n\n    // Test for transferability of SABs (for browsers. needed for Firefox)\n    // https://groups.google.com/forum/#!msg/mozilla.dev.platform/IHkBZlHETpA/dwsMNchWEQAJ\n    if (typeof MessageChannel !== 'undefined') {\n      new MessageChannel().port1.postMessage(new SharedArrayBuffer(1));\n    }\n\n    // Test for WebAssembly threads capability (for both browsers and Node.js)\n    // This typed array is a WebAssembly program containing threaded instructions.\n    return WebAssembly.validate(new Uint8Array([\n      0, 97, 115, 109, 1, 0,  0,  0, 1, 4, 1,  96, 0,   0,  3, 2, 1,  0, 5,\n      4, 1,  3,   1,   1, 10, 11, 1, 9, 0, 65, 0,  254, 16, 2, 0, 26, 11\n    ]));\n  } catch (e) {\n    return false;\n  }\n};\n\nconst isSimdSupported = (): boolean => {\n  try {\n    // Test for WebAssembly SIMD capability (for both browsers and Node.js)\n    // This typed array is a WebAssembly program containing SIMD instructions.\n\n    // The binary data is generated from the following code by wat2wasm:\n    //\n    // (module\n    //   (type $t0 (func))\n    //   (func $f0 (type $t0)\n    //     (drop\n    //       (i32x4.dot_i16x8_s\n    //         (i8x16.splat\n    //           (i32.const 0))\n    //         (v128.const i32x4 0x00000000 0x00000000 0x00000000 0x00000000)))))\n\n    return WebAssembly.validate(new Uint8Array([\n      0,   97, 115, 109, 1, 0, 0, 0, 1, 4, 1, 96, 0, 0, 3, 2, 1, 0, 10, 30, 1,   28,  0, 65, 0,\n      253, 15, 253, 12,  0, 0, 0, 0, 0, 0, 0, 0,  0, 0, 0, 0, 0, 0, 0,  0,  253, 186, 1, 26, 11\n    ]));\n  } catch (e) {\n    return false;\n  }\n};\n\nconst getWasmFileName = (useSimd: boolean, useThreads: boolean) => {\n  if (useThreads) {\n    return useSimd ? 'ort-wasm-simd-threaded.wasm' : 'ort-wasm-threaded.wasm';\n  } else {\n    return useSimd ? 'ort-wasm-simd.wasm' : 'ort-wasm.wasm';\n  }\n};\n\nexport const initializeWebAssembly = async(flags: Env.WebAssemblyFlags): Promise<void> => {\n  if (initialized) {\n    return Promise.resolve();\n  }\n  if (initializing) {\n    throw new Error('multiple calls to \\'initializeWebAssembly()\\' detected.');\n  }\n  if (aborted) {\n    throw new Error('previous call to \\'initializeWebAssembly()\\' failed.');\n  }\n\n  initializing = true;\n\n  // wasm flags are already initialized\n  const timeout = flags.initTimeout!;\n  const numThreads = flags.numThreads!;\n  const simd = flags.simd!;\n\n  const useThreads = numThreads > 1 && isMultiThreadSupported();\n  const useSimd = simd && isSimdSupported();\n\n  const wasmPaths = flags.wasmPaths;\n  const wasmPrefixOverride = typeof wasmPaths === 'string' ? wasmPaths : undefined;\n  const wasmFileName = getWasmFileName(useSimd, useThreads);\n  const wasmPathOverride = typeof wasmPaths === 'object' ? wasmPaths[wasmFileName] : undefined;\n\n  let isTimeout = false;\n\n  const tasks: Array<Promise<void>> = [];\n\n  // promise for timeout\n  if (timeout > 0) {\n    tasks.push(new Promise((resolve) => {\n      setTimeout(() => {\n        isTimeout = true;\n        resolve();\n      }, timeout);\n    }));\n  }\n\n  // promise for module initialization\n  tasks.push(new Promise((resolve, reject) => {\n    const factory = useThreads ? ortWasmFactoryThreaded : ortWasmFactory;\n    const config: Partial<OrtWasmModule> = {\n      locateFile: (fileName: string, scriptDirectory: string) => {\n        if (!BUILD_DEFS.DISABLE_WASM_THREAD && useThreads && fileName.endsWith('.worker.js') &&\n            typeof Blob !== 'undefined') {\n          return URL.createObjectURL(new Blob(\n              [\n                // This require() function is handled by webpack to load file content of the corresponding .worker.js\n                // eslint-disable-next-line @typescript-eslint/no-require-imports\n                require('./binding/ort-wasm-threaded.worker.js')\n              ],\n              {type: 'text/javascript'}));\n        }\n\n        if (fileName.endsWith('.wasm')) {\n          if (wasmPathOverride) {\n            return wasmPathOverride;\n          }\n\n          const prefix = wasmPrefixOverride ?? scriptDirectory;\n\n          if (!BUILD_DEFS.DISABLE_WEBGPU) {\n            if (wasmFileName === 'ort-wasm-simd.wasm') {\n              return prefix + 'ort-wasm-simd.jsep.wasm';\n            } else if (wasmFileName === 'ort-wasm-simd-threaded.wasm') {\n              return prefix + 'ort-wasm-simd-threaded.jsep.wasm';\n            }\n          }\n\n          return prefix + wasmFileName;\n        }\n\n        return scriptDirectory + fileName;\n      }\n    };\n\n    if (!BUILD_DEFS.DISABLE_WASM_THREAD && useThreads) {\n      if (typeof Blob === 'undefined') {\n        config.mainScriptUrlOrBlob = path.join(__dirname, 'ort-wasm-threaded.js');\n      } else {\n        const scriptSourceCode = `var ortWasmThreaded=(function(){var _scriptDir;return ${factory.toString()}})();`;\n        config.mainScriptUrlOrBlob = new Blob([scriptSourceCode], {type: 'text/javascript'});\n      }\n    }\n\n    factory(config).then(\n        // wasm module initialized successfully\n        module => {\n          initializing = false;\n          initialized = true;\n          wasm = module;\n          resolve();\n        },\n        // wasm module failed to initialize\n        (what) => {\n          initializing = false;\n          aborted = true;\n          reject(what);\n        });\n  }));\n\n  await Promise.race(tasks);\n\n  if (isTimeout) {\n    throw new Error(`WebAssembly backend initializing failed due to timeout: ${timeout}ms`);\n  }\n};\n\nexport const getInstance = (): OrtWasmModule => {\n  if (initialized && wasm) {\n    return wasm;\n  }\n\n  throw new Error('WebAssembly is not initialized yet.');\n};\n\nexport const dispose = (): void => {\n  if (initialized && !initializing && !aborted) {\n    initializing = true;\n\n    (wasm as OrtWasmThreadedModule).PThread?.terminateAllThreads();\n    wasm = undefined;\n\n    initializing = false;\n    initialized = false;\n    aborted = true;\n  }\n};\n","\nimport worker from \"!!../../../../node_modules/worker-loader/dist/runtime/inline.js\";\n\nexport default function Worker_fn() {\n  return worker(\"/*!\\n* ONNX Runtime Web v1.16.0\\n* Copyright (c) Microsoft Corporation. All rights reserved.\\n* Licensed under the MIT License.\\n*/\\n!function(){var t={838:function(t,e,n){\\\"use strict\\\";var r=this&&this.__awaiter||function(t,e,n,r){return new(n||(n=Promise))((function(i,a){function o(t){try{u(r.next(t))}catch(t){a(t)}}function c(t){try{u(r.throw(t))}catch(t){a(t)}}function u(t){var e;t.done?i(t.value):(e=t.value,e instanceof n?e:new n((function(t){t(e)}))).then(o,c)}u((r=r.apply(t,e||[])).next())}))},i=this&&this.__generator||function(t,e){var n,r,i,a,o={label:0,sent:function(){if(1&i[0])throw i[1];return i[1]},trys:[],ops:[]};return a={next:c(0),throw:c(1),return:c(2)},\\\"function\\\"==typeof Symbol&&(a[Symbol.iterator]=function(){return this}),a;function c(c){return function(u){return function(c){if(n)throw new TypeError(\\\"Generator is already executing.\\\");for(;a&&(a=0,c[0]&&(o=0)),o;)try{if(n=1,r&&(i=2&c[0]?r.return:c[0]?r.throw||((i=r.return)&&i.call(r),0):r.next)&&!(i=i.call(r,c[1])).done)return i;switch(r=0,i&&(c=[2&c[0],i.value]),c[0]){case 0:case 1:i=c;break;case 4:return o.label++,{value:c[1],done:!1};case 5:o.label++,r=c[1],c=[0];continue;case 7:c=o.ops.pop(),o.trys.pop();continue;default:if(!((i=(i=o.trys).length>0&&i[i.length-1])||6!==c[0]&&2!==c[0])){o=0;continue}if(3===c[0]&&(!i||c[1]>i[0]&&c[1]<i[3])){o.label=c[1];break}if(6===c[0]&&o.label<i[1]){o.label=i[1],i=c;break}if(i&&o.label<i[2]){o.label=i[2],o.ops.push(c);break}i[2]&&o.ops.pop(),o.trys.pop();continue}c=e.call(t,o)}catch(t){c=[6,t],r=0}finally{n=i=0}if(5&c[0])throw c[1];return{value:c[0]?c[1]:void 0,done:!0}}([c,u])}}},a=this&&this.__values||function(t){var e=\\\"function\\\"==typeof Symbol&&Symbol.iterator,n=e&&t[e],r=0;if(n)return n.call(t);if(t&&\\\"number\\\"==typeof t.length)return{next:function(){return t&&r>=t.length&&(t=void 0),{value:t&&t[r++],done:!t}}};throw new TypeError(e?\\\"Object is not iterable.\\\":\\\"Symbol.iterator is not defined.\\\")},o=this&&this.__read||function(t,e){var n=\\\"function\\\"==typeof Symbol&&t[Symbol.iterator];if(!n)return t;var r,i,a=n.call(t),o=[];try{for(;(void 0===e||e-- >0)&&!(r=a.next()).done;)o.push(r.value)}catch(t){i={error:t}}finally{try{r&&!r.done&&(n=a.return)&&n.call(a)}finally{if(i)throw i.error}}return o};Object.defineProperty(e,\\\"__esModule\\\",{value:!0}),e.WebGpuBackend=void 0;var c=n(955),u=n(771),s=n(510),l=n(305),f=function(){function t(){this.currentKernelId=null,this.commandEncoder=null,this.computePassEncoder=null,this.pendingDispatchNumber=0,this.profilingEnabled=!1}return Object.defineProperty(t.prototype,\\\"currentKernelCustomData\\\",{get:function(){if(null===this.currentKernelId)throw new Error(\\\"currentKernelCustomData(): currentKernelId is null. (should not happen)\\\");var t=this.kernelCustomData.get(this.currentKernelId);return t||(t={},this.kernelCustomData.set(this.currentKernelId,t)),t},enumerable:!1,configurable:!0}),t.prototype.initialize=function(t){return r(this,void 0,void 0,(function(){var e,n,r;return i(this,(function(i){switch(i.label){case 0:if(!navigator.gpu)throw new Error(\\\"WebGpuBackend: WebGPU is not available.\\\");return[4,navigator.gpu.requestAdapter()];case 1:if(!(e=i.sent()))throw new Error(\\\"WebGpuBackend: Failed to get GPU adapter.\\\");return n={requiredLimits:{maxComputeWorkgroupStorageSize:e.limits.maxComputeWorkgroupStorageSize,maxComputeWorkgroupsPerDimension:e.limits.maxComputeWorkgroupsPerDimension,maxStorageBufferBindingSize:e.limits.maxStorageBufferBindingSize}},e.features.has(\\\"timestamp-query-inside-passes\\\")&&\\\"default\\\"===t.webgpu.profilingMode&&(this.profilingEnabled=!0,n.requiredFeatures=[\\\"timestamp-query-inside-passes\\\"]),r=this,[4,e.requestDevice(n)];case 2:return r.device=i.sent(),this.gpuDataManager=(0,u.createGpuDataManager)(this),this.programManager=new l.ProgramManager(this),this.kernels=new Map,this.kernelPersistentData=new Map,this.kernelCustomData=new Map,(0,c.configureLogger)(t.logLevel,!!t.debug),this.device.onuncapturederror=function(t){t.error instanceof GPUValidationError&&console.error(\\\"An uncaught WebGPU validation error was raised: \\\".concat(t.error.message))},this.profilingEnabled&&(this.profilingQuerySet=this.device.createQuerySet({type:\\\"timestamp\\\",count:2})),[2]}}))}))},t.prototype.dispose=function(){},t.prototype.getCommandEncoder=function(){return this.commandEncoder||(this.commandEncoder=this.device.createCommandEncoder()),this.commandEncoder},t.prototype.getComputePassEncoder=function(){return this.computePassEncoder||(this.computePassEncoder=this.getCommandEncoder().beginComputePass()),this.computePassEncoder},t.prototype.endComputePass=function(){this.computePassEncoder&&(this.computePassEncoder.end(),this.computePassEncoder=null)},t.prototype.flush=function(){this.endComputePass(),this.device.queue.submit([this.getCommandEncoder().finish()]),this.gpuDataManager.refreshPendingBuffers(),this.commandEncoder=null,this.pendingDispatchNumber=0},t.prototype.run=function(t,e,n,r,i){if(e.length!==t.inputTypes.length)throw new Error(\\\"Input size must be equal to \\\".concat(t.inputTypes.length,\\\".\\\"));for(var a=[],o=0;o<e.length;++o){if(!(h=this.gpuDataManager.get(e[o].data)))throw new Error(\\\"no GPU data for input: \\\".concat(e[o].data));a[o]=h}var u=function(t,e,n){var r=e.map((function(t){return\\\"\\\".concat(t.join(\\\",\\\"))})).join(\\\"_\\\"),i=n.join(\\\"_\\\"),a=t.name;return t.cacheHint&&(a+=\\\"[\\\"+t.cacheHint+\\\"]\\\"),a+\\\":\\\"+r+\\\";\\\"+i}(t,e.map((function(t){return t.dims})),a.map((function(t){return t.type}))),s=this.programManager.getArtifact(u),l=s?s.programInfo:\\\"function\\\"==typeof t.get?t.get():t,f=0===n.length?l.outputs.map((function(t,e){return e})):n;if(f.length!==l.outputs.length)throw new Error(\\\"Output size \\\".concat(f.length,\\\" must be equal to \\\").concat(l.outputs.length,\\\".\\\"));var p=[],d=[];for(o=0;o<l.outputs.length;++o){if(!Number.isInteger(f[o])||f[o]<-2||f[o]>=l.outputs.length)throw new Error(\\\"Invalid output index: \\\".concat(f[o]));var h,v=-1===f[o],m=-2===f[o],g=v||m?i(l.outputs[o].dataType,l.outputs[o].dims):r(f[o],l.outputs[o].dataType,l.outputs[o].dims);if(!(h=this.gpuDataManager.get(g.data)))throw new Error(\\\"no GPU data for output: \\\".concat(g.data));if(v&&this.temporaryData.push(h),m){var y=this.kernelPersistentData.get(this.currentKernelId);y||(y=[],this.kernelPersistentData.set(this.currentKernelId,y)),y.push(h)}p.push(g),d.push(h)}var w=this.programManager.normalizeDispatchGroupSize(l.dispatchGroup(e));return s||(s=this.programManager.build(l,w),this.programManager.setArtifact(u,s)),(0,c.LOG_DEBUG)(\\\"info\\\",(function(){return'[ProgramManager] run \\\"'.concat(l.name,'\\\" (key=').concat(u,\\\") with \\\").concat(w[0],\\\"x\\\").concat(w[1],\\\"x\\\").concat(w[2])})),this.programManager.run(s,a,d,w),p},t.prototype.upload=function(t,e){this.gpuDataManager.upload(t,e)},t.prototype.memcpy=function(t,e){this.gpuDataManager.memcpy(t,e)},t.prototype.download=function(t,e){return r(this,void 0,void 0,(function(){var n;return i(this,(function(r){switch(r.label){case 0:return[4,this.gpuDataManager.download(t)];case 1:return n=r.sent(),e().set(new Uint8Array(n)),[2]}}))}))},t.prototype.alloc=function(t){return this.gpuDataManager.create(t).id},t.prototype.free=function(t){return this.gpuDataManager.release(t)},t.prototype.createKernel=function(t,e,n){var r=s.WEBGPU_OP_RESOLVE_RULES.get(t);if(!r)throw new Error(\\\"kernel not implemented: \\\".concat(t));this.kernels.set(e,[t,r[0],[r[1],n]])},t.prototype.releaseKernel=function(t){var e,n,r=this.kernelPersistentData.get(t);if(r){try{for(var i=a(r),o=i.next();!o.done;o=i.next()){var c=o.value;this.gpuDataManager.release(c.id)}}catch(t){e={error:t}}finally{try{o&&!o.done&&(n=i.return)&&n.call(i)}finally{if(e)throw e.error}}this.kernelPersistentData.delete(t)}this.kernelCustomData.delete(t),this.kernels.delete(t)},t.prototype.computeKernel=function(t,e){var n,r,i=this.kernels.get(t);if(!i)throw new Error(\\\"kernel not created: \\\".concat(t));var u=o(i,3),s=u[0],l=u[1],f=u[2];if(null!==this.currentKernelId)throw new Error('kernel \\\"'.concat(s,'\\\" is not allowed to be called recursively'));this.currentKernelId=t,f[0]&&(f[1]=f[0](f[1]),f[0]=void 0),(0,c.LOG_DEBUG)(\\\"info\\\",(function(){return'[WebGPU] Start to run kernel \\\"'.concat(s,'\\\"...')})),this.temporaryData=[];try{return l(e,f[1]),0}catch(t){return(0,c.LOG_DEBUG)(\\\"warning\\\",'[WebGPU] Kernel \\\"'.concat(s,'\\\" failed. Error: ').concat(t)),1}finally{try{for(var p=a(this.temporaryData),d=p.next();!d.done;d=p.next()){var h=d.value;this.gpuDataManager.release(h.id)}}catch(t){n={error:t}}finally{try{d&&!d.done&&(r=p.return)&&r.call(p)}finally{if(n)throw n.error}}this.temporaryData=[],this.currentKernelId=null}},t}();e.WebGpuBackend=f},675:function(t,e,n){\\\"use strict\\\";var r=this&&this.__awaiter||function(t,e,n,r){return new(n||(n=Promise))((function(i,a){function o(t){try{u(r.next(t))}catch(t){a(t)}}function c(t){try{u(r.throw(t))}catch(t){a(t)}}function u(t){var e;t.done?i(t.value):(e=t.value,e instanceof n?e:new n((function(t){t(e)}))).then(o,c)}u((r=r.apply(t,e||[])).next())}))},i=this&&this.__generator||function(t,e){var n,r,i,a,o={label:0,sent:function(){if(1&i[0])throw i[1];return i[1]},trys:[],ops:[]};return a={next:c(0),throw:c(1),return:c(2)},\\\"function\\\"==typeof Symbol&&(a[Symbol.iterator]=function(){return this}),a;function c(c){return function(u){return function(c){if(n)throw new TypeError(\\\"Generator is already executing.\\\");for(;a&&(a=0,c[0]&&(o=0)),o;)try{if(n=1,r&&(i=2&c[0]?r.return:c[0]?r.throw||((i=r.return)&&i.call(r),0):r.next)&&!(i=i.call(r,c[1])).done)return i;switch(r=0,i&&(c=[2&c[0],i.value]),c[0]){case 0:case 1:i=c;break;case 4:return o.label++,{value:c[1],done:!1};case 5:o.label++,r=c[1],c=[0];continue;case 7:c=o.ops.pop(),o.trys.pop();continue;default:if(!((i=(i=o.trys).length>0&&i[i.length-1])||6!==c[0]&&2!==c[0])){o=0;continue}if(3===c[0]&&(!i||c[1]>i[0]&&c[1]<i[3])){o.label=c[1];break}if(6===c[0]&&o.label<i[1]){o.label=i[1],i=c;break}if(i&&o.label<i[2]){o.label=i[2],o.ops.push(c);break}i[2]&&o.ops.pop(),o.trys.pop();continue}c=e.call(t,o)}catch(t){c=[6,t],r=0}finally{n=i=0}if(5&c[0])throw c[1];return{value:c[0]?c[1]:void 0,done:!0}}([c,u])}}};Object.defineProperty(e,\\\"__esModule\\\",{value:!0}),e.init=void 0;var a=n(917),o=n(838),c=n(955),u=n(952),s=function(){function t(t,e,n,r){this.module=t,this.dataType=e,this.data=n,this.dims=r}return t.prototype.getFloat32Array=function(){return new Float32Array(this.module.HEAP8.buffer,this.data,u.ShapeUtil.size(this.dims))},t.prototype.reshape=function(e){if(u.ShapeUtil.size(e)!==u.ShapeUtil.size(this.dims))throw new Error(\\\"Invalid new shape\\\");return new t(this.module,this.dataType,this.data,e)},t}(),l=function(){function t(t,e,n){this.module=t,this.backend=e;var r=t.HEAPU32,i=n>>2;this.opKernelContext=r[i++];for(var a=r[i++],o=[],c=0;c<a;c++){for(var u=r[i++],l=r[i++],f=r[i++],p=[],d=0;d<f;d++)p.push(r[i++]);o.push(new s(t,u,l,p))}this.inputs=o}return Object.defineProperty(t.prototype,\\\"customData\\\",{get:function(){return this.backend.currentKernelCustomData},enumerable:!1,configurable:!0}),t.prototype.compute=function(t,e){var n,r,i,o=this,c=null!==(r=null===(n=null==e?void 0:e.inputs)||void 0===n?void 0:n.map((function(t){return\\\"number\\\"==typeof t?o.inputs[t]:t})))&&void 0!==r?r:this.inputs,l=null!==(i=null==e?void 0:e.outputs)&&void 0!==i?i:[];return this.backend.run(t,c,l,(function(t,e,n){return new s(o.module,e,o.output(t,n),n)}),(function(t,e){var n=(0,a.getTensorElementSize)(t);if(!n)throw new Error(\\\"Unsupported data type: \\\".concat(t));var r=n*u.ShapeUtil.size(e);return new s(o.module,t,o.backend.gpuDataManager.create(r).id,e)}))},t.prototype.output=function(t,e){var n=this.module.stackSave();try{var r=this.module.stackAlloc(4*(1+e.length)),i=r>>2;this.module.HEAPU32[i++]=e.length;for(var a=0;a<e.length;a++)this.module.HEAPU32[i++]=e[a];return this.module._JsepOutput(this.opKernelContext,t,r)}finally{this.module.stackRestore(n)}},t}();e.init=function(t,e){return r(void 0,void 0,void 0,(function(){var n,a;return i(this,(function(u){switch(u.label){case 0:if(!(n=t.jsepInit)||!navigator.gpu)return[3,2];if(!e.wasm.simd)throw new Error(\\\"Not supported for WebGPU=ON and SIMD=OFF. Please set `env.wasm.simd` to true when using WebGPU EP\\\");return[4,(a=new o.WebGpuBackend).initialize(e)];case 1:u.sent(),n({backend:a},(function(t){return a.alloc(t)}),(function(t){return a.free(t)}),(function(e,n,r,i){if(void 0===i&&(i=!1),i)(0,c.LOG_DEBUG)(\\\"verbose\\\",(function(){return\\\"[WebGPU] jsepCopyGpuToGpu: src=\\\".concat(e,\\\", dst=\\\").concat(n,\\\", size=\\\").concat(r)})),a.memcpy(e,n);else{(0,c.LOG_DEBUG)(\\\"verbose\\\",(function(){return\\\"[WebGPU] jsepCopyCpuToGpu: dataOffset=\\\".concat(e,\\\", gpuDataId=\\\").concat(n,\\\", size=\\\").concat(r)}));var o=t.HEAPU8.subarray(e,e+r);a.upload(n,o)}}),(function(e,n,o){return r(void 0,void 0,void 0,(function(){return i(this,(function(r){switch(r.label){case 0:return(0,c.LOG_DEBUG)(\\\"verbose\\\",(function(){return\\\"[WebGPU] jsepCopyGpuToCpu: gpuDataId=\\\".concat(e,\\\", dataOffset=\\\").concat(n,\\\", size=\\\").concat(o)})),[4,a.download(e,(function(){return t.HEAPU8.subarray(n,n+o)}))];case 1:return r.sent(),[2]}}))}))}),(function(t,e,n){return a.createKernel(t,e,n)}),(function(t){return a.releaseKernel(t)}),(function(e,n){(0,c.LOG_DEBUG)(\\\"verbose\\\",(function(){return\\\"[WebGPU] jsepRun: kernel=\\\".concat(e,\\\", contextDataOffset=\\\").concat(n)}));var r=new l(t,a,n);return a.computeKernel(e,r)})),u.label=2;case 2:return[2]}}))}))}},955:function(t,e,n){\\\"use strict\\\";var r=this&&this.__read||function(t,e){var n=\\\"function\\\"==typeof Symbol&&t[Symbol.iterator];if(!n)return t;var r,i,a=n.call(t),o=[];try{for(;(void 0===e||e-- >0)&&!(r=a.next()).done;)o.push(r.value)}catch(t){i={error:t}}finally{try{r&&!r.done&&(n=a.return)&&n.call(a)}finally{if(i)throw i.error}}return o},i=this&&this.__spreadArray||function(t,e,n){if(n||2===arguments.length)for(var r,i=0,a=e.length;i<a;i++)!r&&i in e||(r||(r=Array.prototype.slice.call(e,0,i)),r[i]=e[i]);return t.concat(r||Array.prototype.slice.call(e))};Object.defineProperty(e,\\\"__esModule\\\",{value:!0}),e.LOG_DEBUG=e.LOG=e.configureLogger=void 0;var a,o,c=n(917),u=[\\\"V\\\",\\\"I\\\",\\\"W\\\",\\\"E\\\",\\\"F\\\"];e.configureLogger=function(t,e){a=t,o=e},e.LOG=function(t,e){var n,r,i=(0,c.logLevelStringToEnum)(t);i>=(0,c.logLevelStringToEnum)(a)&&(n=i,r=\\\"function\\\"==typeof e?e():e,console.log(\\\"[\\\".concat(u[n],\\\",\\\").concat((new Date).toISOString(),\\\"]\\\").concat(r)))},e.LOG_DEBUG=function(){for(var t=[],n=0;n<arguments.length;n++)t[n]=arguments[n];o&&e.LOG.apply(void 0,i([],r(t),!1))}},952:function(t,e){\\\"use strict\\\";var n=this&&this.__read||function(t,e){var n=\\\"function\\\"==typeof Symbol&&t[Symbol.iterator];if(!n)return t;var r,i,a=n.call(t),o=[];try{for(;(void 0===e||e-- >0)&&!(r=a.next()).done;)o.push(r.value)}catch(t){i={error:t}}finally{try{r&&!r.done&&(n=a.return)&&n.call(a)}finally{if(i)throw i.error}}return o};Object.defineProperty(e,\\\"__esModule\\\",{value:!0}),e.MAX_CLIP=e.MIN_CLIP=e.GemmUtil=e.PoolConvUtil=e.ShapeUtil=e.BroadcastUtil=e.MatMulUtil=void 0;var r=function(){function t(){}return t.calcMatMulShape=function(t,e){return t[1]!==e[0]?void 0:[t[0],e[1]]},t}();e.MatMulUtil=r;var i=function(){function t(){}return t.calcShape=function(t,e,i){var a;void 0===i&&(i=!1);var o=t.length,c=e.length;if(0===o)return e;if(0===c)return t;var u=Math.max(t.length,e.length),s=new Array(u);if(i){if(o<2||c<2)return;var l=r.calcMatMulShape([t[o-2],t[o-1]],[e[c-2],e[c-1]]);if(void 0===l)return;a=n(l,2),s[u-2]=a[0],s[u-1]=a[1]}for(var f=i?3:1;f<=u;f++){var p=o-f<0?1:t[o-f],d=c-f<0?1:e[c-f];if(p!==d&&p>1&&d>1)return;s[u-f]=Math.max(p,d)}return s},t.isValidBroadcast=function(t,e){var n=t.length,r=e.length;if(n>r)return!1;for(var i=1;i<=n;i++)if(1!==t[n-i]&&t[n-i]!==e[r-i])return!1;return!0},t}();e.BroadcastUtil=i;var a=function(){function t(){}return t.size=function(e){return t.getSizeFromDimensionRange(e,0,e.length)},t.sizeFromDimension=function(e,n){if(n<0||n>e.length)throw new Error(\\\"invalid dimension of \\\".concat(n,\\\" for sizeFromDimension as Tensor has \\\").concat(e.length,\\\" dimensions.\\\"));return t.getSizeFromDimensionRange(e,n,e.length)},t.sizeToDimension=function(e,n){if(n<0||n>e.length)throw new Error(\\\"invalid dimension of \\\".concat(n,\\\" for sizeToDimension as Tensor has \\\").concat(e.length,\\\" dimensions.\\\"));return t.getSizeFromDimensionRange(e,0,n)},t.getSizeFromDimensionRange=function(t,e,n){for(var r=1,i=e;i<n;i++){if(t[i]<=0)throw new Error(\\\"cannot get valid size from specified dimension range. Most likely the range contains 0 or negative values in them.\\\");r*=t[i]}return r},t.computeStrides=function(t){var e=t.length;if(0===e)return[];if(1===e)return[1];var n=new Array(e);n[e-1]=1,n[e-2]=t[e-1];for(var r=e-3;r>=0;--r)n[r]=n[r+1]*t[r+1];return n},t.normalizeAxis=function(t,e){if(t<-e&&t>=e)throw new Error(\\\"unsupported axis for this operation.\\\");return t<0?t+e:t},t.normalizeAxes=function(t,e){var n=this;return t.map((function(r){return n.normalizeAxis(r,null!=e?e:t.length)}))},t.sortBasedOnPerm=function(t,e){return e?e.map((function(e){return t[e]})):t.slice().reverse()},t.padShape=function(t,e){var n=t.length;return t.map((function(t,r){return t+e[r]+e[r+n]}))},t.areEqual=function(t,e){return t.length===e.length&&t.every((function(t,n){return t===e[n]}))},t}();e.ShapeUtil=a;var o=function(){function t(){}return t.adjustPoolAttributes=function(t,e,n,r,i,a){if(!t&&n.length!==e.length-2)throw new Error(\\\"length of specified kernel shapes should be 2 less than length of input dimensions\\\");if(t)for(var o=0;o<e.length-2;o++)o>=n.length?n.push(e[o+2]):n[o]=e[o+2];for(o=0;o<n.length;o++)if(o<r.length){if(r[o]<0)throw new Error(\\\"strides should be greater than or equal to 1\\\")}else r.push(1);for(o=0;o<n.length;o++)if(o<i.length){if(i[o]<0)throw new Error(\\\"dilations should be greater than or equal to 1\\\")}else i.push(1);for(o=0;o<2*n.length;o++)if(o<a.length){if(a[o]<0)throw new Error(\\\"pad should be greater than or equal to 1\\\")}else a.push(0);for(o=0;o<n.length;o++){if(n[o]<=0)throw new Error(\\\"kernel shapes need to be greater than 0\\\");if(a[o]>=n[o]||a[o+n.length]>=n[o])throw new Error(\\\"pads should be smaller than kernel\\\")}},t.adjustPadsBasedOnAutoPad=function(e,n,r,i,a,o,c){if(c){if(a.length!==2*(e.length-2))throw new Error(\\\"length of pads should be twice the length of data dimensions\\\");if(n.length!==e.length-2)throw new Error(\\\"length of strides should be the length of data dimensions\\\");if(i.length!==e.length-2)throw new Error(\\\"length of kernel shapes should be the length of data dimensions\\\");for(var u=0;u<e.length-2;u++)t.adjustPadAndReturnShape(e[u+(o?1:2)],n[u],r[u],i[u],a,u,u+e.length-2,c)}},t.computePoolOutputShape=function(e,n,r,i,a,o,c){if(n.length<=0)throw new Error(\\\"input shape must be of size greater than 0\\\");var u=[n[0],n[1]];return t.computeShapeHelper(e,n,u,r,i,a,o,c),u},t.computeConvOutputShape=function(e,n,r,i,a,o,c){if(e.length<=0||n.length<=0)throw new Error(\\\"invalid input tensor dims or invalid filter tensor dims\\\");var u=[e[0],n[0]];return t.computeShapeHelper(!1,e,u,r,i,a,o,c),u},t.computeShapeHelper=function(e,n,r,i,a,o,c,u){if(e)for(var s=0;s<n.length-2;s++)r.push(1);else for(s=0;s<n.length-2;s++)r.push(t.adjustPadAndReturnShape(n[s+2],i[s],a[s],o[s],c,s,s+n.length-2,u))},t.adjustPadAndReturnShape=function(t,e,n,r,i,a,o,c){var u=n*(r-1)+1;if(!c||\\\"NOTSET\\\"===c)return Math.floor((t+i[a]+i[o]-u)/e+1);switch(c){case\\\"VALID\\\":return i[a]=0,i[o]=0,Math.floor((t-u)/e+1);case\\\"SAME_LOWER\\\":case\\\"SAME_UPPER\\\":if(1!==n)throw new Error(\\\"Dilation not supported for SAME_UPPER or SAME_LOWER\\\");var s=((t+e-1)/e-1)*e+r-t;return i[a]=\\\"SAME_LOWER\\\"===c?Math.floor((s+1)/2):Math.floor(s/2),i[o]=s-i[a],Math.floor((t+s-r)/e+1);default:throw new Error(\\\"Unsupported AutoPad type\\\")}},t}();e.PoolConvUtil=o;var c=function(){function t(){}return t.getShapeOfGemmResult=function(t,e,n,r,a){if(2!==t.length||2!==n.length)throw new Error(\\\"shape need to be of size 2\\\");var o,c,u;e?(o=t[1],c=t[0]):(o=t[0],c=t[1]);var s=-1;if(r?(u=n[0],s=1):(u=n[1],s=0),n[s]!==c)throw new Error(\\\"dimension mismatch\\\");if(o<=0||u<=0||c<=0)throw new Error(\\\"invalid shape specified\\\");if(a&&!i.isValidBroadcast(a,[o,u]))throw new Error(\\\"gemm: invalid bias shape for broadcast\\\");return[o,u,c]},t}();e.GemmUtil=c,e.MIN_CLIP=-34028234663852886e22,e.MAX_CLIP=34028234663852886e22},387:function(t,e){\\\"use strict\\\";Object.defineProperty(e,\\\"__esModule\\\",{value:!0}),e.createAttributeWithCacheKey=void 0;var n=function(){function t(t){Object.assign(this,t)}return Object.defineProperty(t.prototype,\\\"cacheKey\\\",{get:function(){var t=this;return this._cacheKey||(this._cacheKey=Object.getOwnPropertyNames(this).sort().map((function(e){return\\\"\\\".concat(t[e])})).join(\\\";\\\")),this._cacheKey},enumerable:!1,configurable:!0}),t}();e.createAttributeWithCacheKey=function(t){return new n(t)}},771:function(t,e,n){\\\"use strict\\\";var r=this&&this.__awaiter||function(t,e,n,r){return new(n||(n=Promise))((function(i,a){function o(t){try{u(r.next(t))}catch(t){a(t)}}function c(t){try{u(r.throw(t))}catch(t){a(t)}}function u(t){var e;t.done?i(t.value):(e=t.value,e instanceof n?e:new n((function(t){t(e)}))).then(o,c)}u((r=r.apply(t,e||[])).next())}))},i=this&&this.__generator||function(t,e){var n,r,i,a,o={label:0,sent:function(){if(1&i[0])throw i[1];return i[1]},trys:[],ops:[]};return a={next:c(0),throw:c(1),return:c(2)},\\\"function\\\"==typeof Symbol&&(a[Symbol.iterator]=function(){return this}),a;function c(c){return function(u){return function(c){if(n)throw new TypeError(\\\"Generator is already executing.\\\");for(;a&&(a=0,c[0]&&(o=0)),o;)try{if(n=1,r&&(i=2&c[0]?r.return:c[0]?r.throw||((i=r.return)&&i.call(r),0):r.next)&&!(i=i.call(r,c[1])).done)return i;switch(r=0,i&&(c=[2&c[0],i.value]),c[0]){case 0:case 1:i=c;break;case 4:return o.label++,{value:c[1],done:!1};case 5:o.label++,r=c[1],c=[0];continue;case 7:c=o.ops.pop(),o.trys.pop();continue;default:if(!((i=(i=o.trys).length>0&&i[i.length-1])||6!==c[0]&&2!==c[0])){o=0;continue}if(3===c[0]&&(!i||c[1]>i[0]&&c[1]<i[3])){o.label=c[1];break}if(6===c[0]&&o.label<i[1]){o.label=i[1],i=c;break}if(i&&o.label<i[2]){o.label=i[2],o.ops.push(c);break}i[2]&&o.ops.pop(),o.trys.pop();continue}c=e.call(t,o)}catch(t){c=[6,t],r=0}finally{n=i=0}if(5&c[0])throw c[1];return{value:c[0]?c[1]:void 0,done:!0}}([c,u])}}},a=this&&this.__values||function(t){var e=\\\"function\\\"==typeof Symbol&&Symbol.iterator,n=e&&t[e],r=0;if(n)return n.call(t);if(t&&\\\"number\\\"==typeof t.length)return{next:function(){return t&&r>=t.length&&(t=void 0),{value:t&&t[r++],done:!t}}};throw new TypeError(e?\\\"Object is not iterable.\\\":\\\"Symbol.iterator is not defined.\\\")},o=this&&this.__read||function(t,e){var n=\\\"function\\\"==typeof Symbol&&t[Symbol.iterator];if(!n)return t;var r,i,a=n.call(t),o=[];try{for(;(void 0===e||e-- >0)&&!(r=a.next()).done;)o.push(r.value)}catch(t){i={error:t}}finally{try{r&&!r.done&&(n=a.return)&&n.call(a)}finally{if(i)throw i.error}}return o},c=this&&this.__spreadArray||function(t,e,n){if(n||2===arguments.length)for(var r,i=0,a=e.length;i<a;i++)!r&&i in e||(r||(r=Array.prototype.slice.call(e,0,i)),r[i]=e[i]);return t.concat(r||Array.prototype.slice.call(e))};Object.defineProperty(e,\\\"__esModule\\\",{value:!0}),e.createGpuDataManager=void 0;var u=n(955),s=n(163),l=function(t){return 16*Math.ceil(t/16)},f=0,p=function(){function t(t){this.backend=t,this.storageCache=new Map,this.downloadCache=new Map,this.buffersForUploadingPending=[],this.buffersPending=[]}return t.prototype.upload=function(t,e){var n=e.buffer,r=e.byteOffset,i=e.byteLength,a=l(i),o=this.storageCache.get(t);if(!o)throw new Error(\\\"gpu data for uploading does not exist\\\");if(o.originalSize!==i)throw new Error(\\\"inconsistent data size. gpu data size=\\\".concat(o.originalSize,\\\", data size=\\\").concat(i));var c=this.backend.device.createBuffer({mappedAtCreation:!0,size:a,usage:GPUBufferUsage.MAP_WRITE|GPUBufferUsage.COPY_SRC}),s=c.getMappedRange();new Uint8Array(s).set(new Uint8Array(n,r,i)),c.unmap();var f=this.backend.getCommandEncoder();this.backend.endComputePass(),f.copyBufferToBuffer(c,0,o.gpuData.buffer,0,a),(0,u.LOG_DEBUG)(\\\"verbose\\\",(function(){return\\\"[WebGPU] GpuDataManager.upload(id=\\\".concat(t,\\\")\\\")})),this.buffersForUploadingPending.push(c)},t.prototype.memcpy=function(t,e){var n=this.storageCache.get(t);if(!n)throw new Error(\\\"source gpu data for memcpy does not exist\\\");var r=this.storageCache.get(e);if(!r)throw new Error(\\\"destination gpu data for memcpy does not exist\\\");if(n.originalSize!==r.originalSize)throw new Error(\\\"inconsistent source and destination gpu data size\\\");var i=l(n.originalSize);this.backend.getCommandEncoder().copyBufferToBuffer(n.gpuData.buffer,0,r.gpuData.buffer,0,i)},t.prototype.create=function(t,e){void 0===e&&(e=GPUBufferUsage.STORAGE|GPUBufferUsage.COPY_SRC|GPUBufferUsage.COPY_DST);var n=l(t),r=this.backend.device.createBuffer({size:n,usage:e}),i={id:f++,type:s.GpuDataType.default,buffer:r};return this.storageCache.set(i.id,{gpuData:i,originalSize:t}),(0,u.LOG_DEBUG)(\\\"verbose\\\",(function(){return\\\"[WebGPU] GpuDataManager.create(size=\\\".concat(t,\\\") => id=\\\").concat(i.id)})),i},t.prototype.get=function(t){var e;return null===(e=this.storageCache.get(t))||void 0===e?void 0:e.gpuData},t.prototype.release=function(t){var e=this.storageCache.get(t);if(!e)throw new Error(\\\"releasing data does not exist\\\");return(0,u.LOG_DEBUG)(\\\"verbose\\\",(function(){return\\\"[WebGPU] GpuDataManager.release(id=\\\".concat(t,\\\"), gpuDataId=\\\").concat(e.gpuData.id)})),this.storageCache.delete(t),this.buffersPending.push(e.gpuData.buffer),this.downloadCache.get(t)&&this.downloadCache.delete(t),e.originalSize},t.prototype.download=function(t){return r(this,void 0,void 0,(function(){var e,n,r,a,o;return i(this,(function(i){if(e=this.downloadCache.get(t))return[2,e.data];if(!(n=this.storageCache.get(t)))throw new Error(\\\"data does not exist\\\");return r=this.backend.getCommandEncoder(),this.backend.endComputePass(),a=this.backend.device.createBuffer({size:n.originalSize,usage:GPUBufferUsage.COPY_DST|GPUBufferUsage.MAP_READ}),r.copyBufferToBuffer(n.gpuData.buffer,0,a,0,n.originalSize),this.backend.flush(),o=new Promise((function(t){a.mapAsync(GPUMapMode.READ).then((function(){var e=a.getMappedRange().slice(0);a.destroy(),t(e)}))})),this.downloadCache.set(t,{data:o}),[2,o]}))}))},t.prototype.refreshPendingBuffers=function(){var t,e,n,r;try{for(var i=a(this.buffersForUploadingPending),o=i.next();!o.done;o=i.next())o.value.destroy()}catch(e){t={error:e}}finally{try{o&&!o.done&&(e=i.return)&&e.call(i)}finally{if(t)throw t.error}}try{for(var c=a(this.buffersPending),u=c.next();!u.done;u=c.next())u.value.destroy()}catch(t){n={error:t}}finally{try{u&&!u.done&&(r=c.return)&&r.call(c)}finally{if(n)throw n.error}}},t}();e.createGpuDataManager=function(){for(var t=[],e=0;e<arguments.length;e++)t[e]=arguments[e];return new(p.bind.apply(p,c([void 0],o(t),!1)))}},510:function(t,e,n){\\\"use strict\\\";var r=this&&this.__createBinding||(Object.create?function(t,e,n,r){void 0===r&&(r=n);var i=Object.getOwnPropertyDescriptor(e,n);i&&!(\\\"get\\\"in i?!e.__esModule:i.writable||i.configurable)||(i={enumerable:!0,get:function(){return e[n]}}),Object.defineProperty(t,r,i)}:function(t,e,n,r){void 0===r&&(r=n),t[r]=e[n]}),i=this&&this.__setModuleDefault||(Object.create?function(t,e){Object.defineProperty(t,\\\"default\\\",{enumerable:!0,value:e})}:function(t,e){t.default=e}),a=this&&this.__importStar||function(t){if(t&&t.__esModule)return t;var e={};if(null!=t)for(var n in t)\\\"default\\\"!==n&&Object.prototype.hasOwnProperty.call(t,n)&&r(e,t,n);return i(e,t),e};Object.defineProperty(e,\\\"__esModule\\\",{value:!0}),e.WEBGPU_OP_RESOLVE_RULES=void 0;var o=a(n(504)),c=n(770),u=n(271),s=n(522),l=a(n(262)),f=n(625),p=a(n(302));e.WEBGPU_OP_RESOLVE_RULES=new Map([[\\\"Abs\\\",[p.abs]],[\\\"Acos\\\",[p.acos]],[\\\"Acosh\\\",[p.acosh]],[\\\"Add\\\",[o.add]],[\\\"Asin\\\",[p.asin]],[\\\"Asinh\\\",[p.asinh]],[\\\"Atan\\\",[p.atan]],[\\\"Atanh\\\",[p.atanh]],[\\\"AveragePool\\\",[l.averagePool,l.parseAveragePoolAttributes]],[\\\"Ceil\\\",[p.ceil]],[\\\"ClipV10\\\",[p.clipV10]],[\\\"Clip\\\",[p.clip]],[\\\"Conv\\\",[c.conv,c.parseConvAttributes]],[\\\"Cos\\\",[p.cos]],[\\\"Cosh\\\",[p.cosh]],[\\\"Div\\\",[o.div]],[\\\"Elu\\\",[p.elu,p.parseAlphaAttributes]],[\\\"Erf\\\",[p.erf]],[\\\"Exp\\\",[p.exp]],[\\\"Floor\\\",[p.floor]],[\\\"Gemm\\\",[u.gemm,u.parseGemmAttributes]],[\\\"GlobalAveragePool\\\",[l.globalAveragePool,l.parseGlobalAveragePoolAttributes]],[\\\"GlobalMaxPool\\\",[l.globalMaxPool,l.parseGlobalMaxPoolAttributes]],[\\\"LeakyRelu\\\",[p.leakyRelu,p.parseAlphaAttributes]],[\\\"MatMul\\\",[s.matMul]],[\\\"MaxPool\\\",[l.maxPool,l.parseMaxPoolAttributes]],[\\\"Mul\\\",[o.mul]],[\\\"Neg\\\",[p.neg]],[\\\"Pow\\\",[o.pow]],[\\\"Reciprocal\\\",[p.reciprocal]],[\\\"Relu\\\",[p.relu]],[\\\"Sigmoid\\\",[p.sigmoid]],[\\\"Sin\\\",[p.sin]],[\\\"Sinh\\\",[p.sinh]],[\\\"Sqrt\\\",[p.sqrt]],[\\\"Sub\\\",[o.sub]],[\\\"Tan\\\",[p.tan]],[\\\"Tanh\\\",[p.tanh]],[\\\"ThresholdedRelu\\\",[p.thresholdedRelu,p.parseAlphaAttributes]],[\\\"Transpose\\\",[f.transpose,f.parseTransposeAttributes]]])},427:function(t,e){\\\"use strict\\\";Object.defineProperty(e,\\\"__esModule\\\",{value:!0}),e.biasActivationSnippet=e.activationFnSnippet=e.typeSnippet=void 0,e.typeSnippet=function(t){switch(t){case 1:return\\\"f32\\\";case 2:return\\\"vec2<f32>\\\";case 3:return\\\"vec3<f32>\\\";case 4:return\\\"vec4<f32>\\\";default:throw new Error(\\\"\\\".concat(t,\\\"-component is not supported.\\\"))}},e.activationFnSnippet=function(t,e,n,r){return void 0===e&&(e=!1),void 0===n&&(n=!1),void 0===r&&(r=3),\\\"\\\"},e.biasActivationSnippet=function(t,e){return\\\"\\\\n      \\\".concat(t?\\\"value = value + getBiasByOutputCoords(coords);\\\":\\\"\\\",\\\"\\\\n      \\\").concat(e?\\\"value = activation(value, coords);\\\":\\\"\\\",\\\"\\\\n      \\\")}},456:function(t,e,n){\\\"use strict\\\";var r=this&&this.__assign||function(){return r=Object.assign||function(t){for(var e,n=1,r=arguments.length;n<r;n++)for(var i in e=arguments[n])Object.prototype.hasOwnProperty.call(e,i)&&(t[i]=e[i]);return t},r.apply(this,arguments)};Object.defineProperty(e,\\\"__esModule\\\",{value:!0}),e.createConv2DMatMulProgramInfo=void 0;var i=n(955),a=n(952),o=n(163),c=n(427),u=n(85),s=n(158);e.createConv2DMatMulProgramInfo=function(t,e,n,l,f,p,d,h,v){var m=\\\"NHWC\\\"===n.format,g=m?t[0].dims[3]:t[0].dims[1],y=l[0],w=m?l[2]:l[3],_=m?l[1]:l[2],b=m?l[3]:l[1],S=((g%4==0||g%3==0)&&m||w%4==0&&!m)&&b%4==0,k=m?b:w*_,A=m?w*_:b,O=S?[8,8,1]:[k<=4?4:16,k>4&&A<=4?4:16,1],C=S?[4,4,1]:[k<=4?1:2,k>4&&A<=4?1:2,1],T=[Math.ceil(k/O[0]/C[0]),Math.ceil(A/O[1]/C[1]),Math.ceil(y/O[2]/C[1])];(0,i.LOG_DEBUG)(\\\"verbose\\\",(function(){return\\\"[conv2d_mm_webgpu] dispatch = \\\".concat(T)}));var P=S?m&&g%4!=0?3:4:C[0],E=O[1]*C[1],x=O[0]*C[0],j=Math.max(O[0]*P,O[1]),M=f%E==0,R=p%x==0,I=d%j==0,D=S?[P,4,4]:[1,1,1],U=[\\\"@group(0) @binding(0) var<storage, read> x: array<\\\".concat(S&&4===P?\\\"vec4<f32>\\\":\\\"f32\\\",\\\">;\\\"),\\\"@group(0) @binding(1) var<storage, read> w: array<\\\".concat(S?\\\"vec4<f32>\\\":\\\"f32\\\",\\\">;\\\")],G=\\\"\\\\n      fn setOutputAtIndex(flatIndex : i32, value : \\\".concat(S?\\\"vec4<f32>\\\":\\\"f32\\\",\\\") {\\\\n        result[flatIndex] = \\\").concat(S?\\\"vec4<f32>\\\":\\\"f32\\\",\\\"(value);\\\\n      }\\\\n      fn setOutputAtCoords(d0 : i32, d1 : i32, d2 : i32, d3 : i32, value : \\\").concat(S?\\\"vec4<f32>\\\":\\\"f32\\\",\\\") {\\\\n        let flatIndex = getOutputIndexFromCoords(vec4<i32>(d0, d1, d2, d3));\\\\n        setOutputAtIndex(flatIndex \\\").concat(S?\\\"/ 4\\\":\\\"\\\",\\\", value);\\\\n      }\\\");return h&&(U.push(\\\"@group(0) @binding(2) var<storage, read> bias: array<\\\".concat(S?\\\"vec4<f32>\\\":\\\"f32\\\",\\\">;\\\")),G+=\\\"\\\\n        fn getBiasByOutputCoords(coords : vec4<i32>) -> \\\".concat(S?\\\"vec4<f32>\\\":\\\"f32\\\",\\\" {\\\\n          return bias[coords.\\\").concat(m?\\\"w\\\":\\\"y\\\").concat(S?\\\"/ 4\\\":\\\"\\\",\\\"];\\\\n        }\\\")),r(r({},e),{outputs:[{dims:l,dataType:t[0].dataType,gpuDataType:o.GpuDataType.default}],dispatchGroup:function(){return{x:T[0],y:T[1],z:T[2]}},getShaderSource:function(){return\\\"\\\\n        \\\".concat(u.utilFunctions,\\\"\\\\n        //struct Uniforms { xShape : vec4<i32>, wShape : vec4<i32>, outShape : vec4<i32>,\\\\n        //  outShapeStrides: vec3<i32>, filterDims : vec2<i32>, pad : vec2<i32>, stride : vec2<i32>,\\\\n        //  dilation : vec2<i32>, dimAOuter : i32, dimBOuter : i32, dimInner : i32 };\\\\n        \\\").concat(U.join(\\\"\\\"),\\\"\\\\n        @group(0) @binding(\\\").concat(U.length,\\\") var<storage, read_write> result: array<\\\").concat(S?\\\"vec4<f32>\\\":\\\"f32\\\",\\\">;\\\\n        //@group(0) @binding(\\\").concat(U.length+1,\\\") var<uniform> uniforms: Uniforms;\\\\n\\\\n        const xShape : vec4<i32> = vec4<i32>(\\\").concat(t[0].dims.join(\\\",\\\"),\\\");\\\\n        const wShape : vec4<i32> = vec4<i32>(\\\").concat(t[1].dims.join(\\\",\\\"),\\\");\\\\n        const outShape : vec4<i32> = vec4<i32>(\\\").concat(l.join(\\\",\\\"),\\\");\\\\n        const outShapeStrides : vec3<i32> = vec3<i32>(\\\").concat(a.ShapeUtil.computeStrides(l).slice(0,3).join(\\\",\\\"),\\\");\\\\n        const filterDims : vec2<i32> = vec2<i32>(\\\").concat(n.kernelShape[0],\\\", \\\").concat(n.kernelShape[1],\\\");\\\\n        const pad : vec2<i32> = vec2<i32>(\\\").concat(n.pads[0],\\\", \\\").concat(n.pads[1],\\\");\\\\n        const stride : vec2<i32> = vec2<i32>(\\\").concat(n.strides[0],\\\", \\\").concat(n.strides[1],\\\");\\\\n        const dilation : vec2<i32> = vec2<i32>(\\\").concat(n.dilations[0],\\\", \\\").concat(n.dilations[1],\\\");\\\\n        const dimAOuter : i32 = \\\").concat(f,\\\";\\\\n        const dimBOuter : i32 = \\\").concat(p,\\\";\\\\n        const dimInner : i32 = \\\").concat(d,\\\";\\\\n        \\\").concat(G,\\\"\\\\n        \\\").concat(function(t,e,n,r,i,a,o,u,s,l){void 0===i&&(i=!1),void 0===o&&(o=!1),void 0===u&&(u=4),void 0===s&&(s=4),void 0===l&&(l=4);var f=t?\\\"\\\\n    let coord = vec4<i32>(batch, xRow, xCol, xCh);\\\\n    \\\":\\\"\\\\n    let coord = vec4<i32>(batch, xCh, xRow, xCol);\\\\n    \\\",p=t?\\\"\\\\n    let coords = vec4<i32>(\\\\n      batch,\\\\n      row / outWidth,\\\\n      row % outWidth,\\\\n      col);\\\\n    \\\":\\\"\\\\n    let coords = vec4<i32>(\\\\n      batch,\\\\n      row,\\\\n      col / outWidth,\\\\n      col % outWidth);\\\\n    \\\",d=t?\\\"xShape[1]\\\":\\\"xShape[2]\\\",h=t?\\\"xShape[2]\\\":\\\"xShape[3]\\\",v=t?\\\"row\\\":\\\"col\\\",m=t?\\\"col\\\":\\\"row\\\",g=\\\"\\\\n    let inChannels = wShape[2];\\\\n    let outWidth = \\\".concat(t?\\\"outShape[2]\\\":\\\"outShape[3]\\\",\\\";\\\\n    let outRow = \\\").concat(v,\\\" / outWidth;\\\\n    let outCol = \\\").concat(v,\\\" % outWidth;\\\\n\\\\n    let WRow = \\\").concat(m,\\\" / (filterDims[1] * inChannels);\\\\n    let WCol = \\\").concat(m,\\\" / inChannels % filterDims[1];\\\\n    let xRow = outRow * stride[0] + dilation[0] * WRow - pad[0];\\\\n    let xCol = outCol * stride[1] + dilation[1] * WCol - pad[1];\\\\n    let xCh = \\\").concat(m,\\\" % inChannels;\\\\n    var resData = \\\").concat((0,c.typeSnippet)(u),\\\"(0.0);\\\\n    // The bounds checking is always needed since we use it to pad zero for\\\\n    // the 'same' padding type.\\\\n    if (xRow >= 0 && xRow < \\\").concat(d,\\\" && xCol >= 0 && xCol < \\\").concat(h,\\\") {\\\\n      \\\").concat(f,\\\"\\\\n      let xIndex = getIndexFromCoords4D(coord, xShape);\\\\n      \\\").concat(function(t){switch(t){case 1:return\\\"resData = x[xIndex];\\\";case 3:return\\\"resData = vec3<f32>(x[xIndex], x[xIndex + 1], x[xIndex + 2]);\\\";case 4:return\\\"resData = x[xIndex / 4];\\\";default:throw new Error(\\\"innerElementSize \\\".concat(t,\\\" is not supported.\\\"))}}(u),\\\"\\\\n    }\\\\n    return resData;\\\"),y=t?e&&r?\\\"\\\\n    let col = colIn * \\\".concat(u,\\\";\\\\n    \\\").concat(g):\\\"\\\\n    let col = colIn * \\\".concat(u,\\\";\\\\n    if (row < dimAOuter && col < dimInner) {\\\\n      \\\").concat(g,\\\"\\\\n    }\\\\n    return \\\").concat((0,c.typeSnippet)(u),\\\"(0.0);\\\"):r&&n?\\\"\\\\n    let col = colIn * \\\".concat(u,\\\";\\\\n    \\\").concat(g):\\\"\\\\n    let col = colIn * \\\".concat(u,\\\";\\\\n    if (row < dimInner && col < dimBOuter) {\\\\n      \\\").concat(g,\\\"\\\\n    }\\\\n    return \\\").concat((0,c.typeSnippet)(u),\\\"(0.0);\\\"),w=\\\"\\\".concat(function(t){switch(t){case 1:return\\\"return w[row * wShape[3] + colIn];\\\";case 4:return\\\"return w[row * wShape[3] / 4 + colIn];\\\";default:throw new Error(\\\"innerElementSize \\\".concat(t,\\\" is not supported.\\\"))}}(s)),_=(0,c.typeSnippet)(l),b=t?(0,c.typeSnippet)(u):(0,c.typeSnippet)(s),S=t?(0,c.typeSnippet)(s):(0,c.typeSnippet)(u);return\\\"\\\\n    \\\".concat((0,c.activationFnSnippet)(a,o,4===l,4),\\\"\\\\n    fn mm_readA(batch: i32, row : i32, colIn : i32) -> \\\").concat(b,\\\" {\\\\n      \\\").concat(t?y:w,\\\"\\\\n    }\\\\n\\\\n    fn mm_readB(batch: i32, row : i32, colIn : i32) -> \\\").concat(S,\\\" {\\\\n      \\\").concat(t?w:y,\\\"\\\\n    }\\\\n\\\\n    fn mm_write(batch: i32, row : i32, colIn : i32, valueIn : \\\").concat(_,\\\") {\\\\n      let col = colIn * \\\").concat(l,\\\";\\\\n      if (row < dimAOuter && col < dimBOuter)\\\\n      {\\\\n      var value = valueIn;\\\\n      let outWidth = \\\").concat(t?\\\"outShape[2]\\\":\\\"outShape[3]\\\",\\\";\\\\n      \\\").concat(p,\\\"\\\\n      \\\").concat((0,c.biasActivationSnippet)(i,a),\\\"\\\\n      setOutputAtCoords(coords[0], coords[1], coords[2], coords[3], value);\\\\n      }\\\\n    }\\\")}(m,M,R,I,h,void 0,!1,D[0],D[1],D[2]),\\\"\\\\n            \\\").concat(S?(0,s.makeMatMulPackedVec4Source)(C,O,!m,j):(0,s.makeMatMulPackedSource)(C,O,!m,j,!1,void 0,v))}})}},85:function(t,e){\\\"use strict\\\";Object.defineProperty(e,\\\"__esModule\\\",{value:!0}),e.utilFunctions=void 0,e.utilFunctions=\\\"\\\\nfn getIndexFromCoords4D(coords : vec4<i32>, shape : vec4<i32>) -> i32 {\\\\n  return dot(coords, vec4<i32>(\\\\n      shape.y * shape.z * shape.w, shape.z * shape.w, shape.w, 1));\\\\n}\\\\nfn getOutputIndexFromCoords(coords : vec4<i32>) -> i32 {\\\\n  return dot(coords, vec4<i32>(\\\\n    outShapeStrides.x, outShapeStrides.y, outShapeStrides.z, 1));\\\\n}\\\\n\\\"},158:function(t,e){\\\"use strict\\\";Object.defineProperty(e,\\\"__esModule\\\",{value:!0}),e.makeMatMulPackedSource=e.makeMatMulPackedVec4Source=void 0,e.makeMatMulPackedVec4Source=function(t,e,n,r,i,a,o){void 0===n&&(n=!1),void 0===r&&(r=32),void 0===i&&(i=!1),void 0===a&&(a=32),void 0===o&&(o=!1);var c,u=e[1]*t[1],s=e[0]*t[0],l=n?u:r,f=n?r:u,p=l/e[0],d=r/e[1];if((!n||4!==p||4!==t[1])&&(n||3!==p&&4!==p)||l%e[0]!=0||r%e[1]!=0||4!==t[0])throw new Error(\\\"If transposeA \\\".concat(n,\\\" is true, innerElementSize \\\").concat(p,\\\" and workPerThread[1] \\\").concat(t[1],\\\" must be 4.\\\\n      Otherwise, innerElementSize \\\").concat(p,\\\" must be 3 or 4.\\\\n  tileAWidth \\\").concat(l,\\\" must be divisible by workgroupSize[0]\\\").concat(e[0],\\\". tileInner \\\").concat(r,\\\" must be divisible by workgroupSize[1] \\\").concat(e[1],\\\". colPerThread \\\").concat(t[0],\\\" must be 4.\\\"));return\\\"\\\\nvar<workgroup> mm_Asub : array<array<vec\\\".concat(p,\\\"<f32>, \\\").concat(l/p,\\\">, \\\").concat(f,\\\">;\\\\nvar<workgroup> mm_Bsub : array<array<vec4<f32>, \\\").concat(s/t[0],\\\">, \\\").concat(r,\\\">;\\\\n\\\\nconst rowPerThread = \\\").concat(t[1],\\\";\\\\nconst colPerThread = \\\").concat(t[0],\\\";\\\\nconst innerElementSize = \\\").concat(p,\\\";\\\\nconst tileInner = \\\").concat(r,\\\";\\\\n\\\\n@compute @workgroup_size(\\\").concat(e[0],\\\", \\\").concat(e[1],\\\", \\\").concat(e[2],\\\")\\\\nfn main(@builtin(local_invocation_id) localId : vec3<u32>,\\\\n        @builtin(global_invocation_id) globalId : vec3<u32>,\\\\n        @builtin(workgroup_id) workgroupId : vec3<u32>) {\\\\n  let localRow = i32(localId.y);\\\\n  let tileRow = \\\").concat(o?\\\"0\\\":\\\"localRow * rowPerThread\\\",\\\";\\\\n  let tileCol = i32(localId.x);\\\\n\\\\n  let globalRow = \\\").concat(o?\\\"0\\\":\\\"i32(globalId.y) * rowPerThread\\\",\\\";\\\\n  let globalCol = i32(globalId.x);\\\\n  let batch = \\\").concat(i?\\\"0\\\":\\\"i32(globalId.z)\\\",\\\";\\\\n  let globalRowStart = i32(workgroupId.y) * \\\").concat(u,\\\";\\\\n\\\\n  let numTiles = \\\").concat(i?\\\"\\\".concat(Math.ceil(a/r)):\\\"(dimInner - 1) / tileInner + 1\\\",\\\";\\\\n  var kStart = \\\").concat(i?\\\"i32(globalId.z) * \\\".concat(a):\\\"0\\\",\\\";\\\\n\\\\n  var acc: array<vec4<f32>, rowPerThread>;\\\\n\\\\n  // Loop over shared dimension.\\\\n  let tileRowB = localRow * \\\").concat(d,\\\";\\\\n  for (var t = 0; t < numTiles; t = t + 1) {\\\\n      // Load one tile of A into local memory.\\\\n      for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {\\\\n          let inputRow = tileRow + innerRow;\\\\n          let inputCol = tileCol;\\\\n          \\\").concat((c=n,c?\\\"\\\\n        mm_Asub[inputRow][inputCol] = mm_readA(batch,\\\\n          kStart + inputRow,\\\\n          globalRowStart / innerElementSize + inputCol);\\\\n        \\\":\\\"\\\\n        mm_Asub[inputRow][inputCol] = mm_readA(batch,\\\\n          globalRow + innerRow,\\\\n          kStart / innerElementSize + inputCol);\\\\n        \\\"),\\\"\\\\n      }\\\\n\\\\n      // Load one tile of B into local memory.\\\\n      for (var innerRow = 0; innerRow < \\\").concat(d,\\\"; innerRow = innerRow + 1) {\\\\n          let inputRow = tileRowB + innerRow;\\\\n          let inputCol = tileCol;\\\\n          mm_Bsub[inputRow][inputCol] = mm_readB(batch, kStart + inputRow, globalCol);\\\\n      }\\\\n      kStart = kStart + tileInner;\\\\n      workgroupBarrier();\\\\n\\\\n      // Compute acc values for a single thread.\\\\n      for (var k = 0; k < tileInner / innerElementSize; k = k + 1) {\\\\n          let BCached0 = mm_Bsub[k * innerElementSize][tileCol];\\\\n          let BCached1 = mm_Bsub[k * innerElementSize + 1][tileCol];\\\\n          let BCached2 = mm_Bsub[k * innerElementSize + 2][tileCol];\\\\n          \\\").concat(3===p?\\\"\\\":\\\"let BCached3 = mm_Bsub[k * innerElementSize + 3][tileCol];\\\",\\\"\\\\n\\\\n          \\\").concat(function(t,e){return t?\\\"\\\\n        let ACached0 = mm_Asub[k * innerElementSize][localRow];\\\\n        let ACached1 = mm_Asub[k * innerElementSize + 1][localRow];\\\\n        let ACached2 = mm_Asub[k * innerElementSize + 2][localRow];\\\\n        \\\".concat(3===e?\\\"\\\":\\\"let ACached3 = mm_Asub[k * innerElementSize + 3][localRow];\\\",\\\"\\\\n        for (var i = 0; i < rowPerThread; i = i + 1) {\\\\n          acc[i] = BCached0 * ACached0[i] + acc[i];\\\\n          acc[i] = BCached1 * ACached1[i] + acc[i];\\\\n          acc[i] = BCached2 * ACached2[i] + acc[i];\\\\n          \\\").concat(3===e?\\\"\\\":\\\"acc[i] = BCached3 * ACached3[i] + acc[i];\\\",\\\"\\\\n        }\\\"):\\\"\\\\n        for (var i = 0; i < rowPerThread; i = i + 1) {\\\\n          let ACached = mm_Asub[tileRow + i][k];\\\\n          acc[i] = BCached0 * ACached.x + acc[i];\\\\n          acc[i] = BCached1 * ACached.y + acc[i];\\\\n          acc[i] = BCached2 * ACached.z + acc[i];\\\\n          \\\".concat(3===e?\\\"\\\":\\\"acc[i] = BCached3 * ACached.w + acc[i];\\\",\\\"\\\\n        }\\\")}(n,p),\\\"\\\\n      }\\\\n\\\\n      workgroupBarrier();\\\\n  }\\\\n\\\\n  for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {\\\\n      mm_write(batch, globalRow + innerRow, globalCol, acc[innerRow]);\\\\n  }\\\\n}\\\")};var n=function(t){return t?\\\"\\\\n            mm_Asub[inputRow][inputCol] = mm_readA(batch,\\\\n              kStart + inputRow,\\\\n              globalRowStart + inputCol);\\\\n            \\\":\\\"\\\\n            mm_Asub[inputRow][inputCol] = mm_readA(batch,\\\\n              globalRowStart + inputRow,\\\\n              kStart + inputCol);\\\\n            \\\"};e.makeMatMulPackedSource=function(t,e,r,i,a,o,c){void 0===r&&(r=!1),void 0===i&&(i=32),void 0===a&&(a=!1),void 0===o&&(o=32),void 0===c&&(c=!1);var u=t[1]*e[1],s=t[0]*e[0],l=r?u:i,f=r?i:u;if(f%e[1]!=0||l%e[0]!=0||i%e[1]!=0)throw new Error(\\\"tileAHight \\\".concat(f,\\\" must be divisible by workgroupSize[1]\\\").concat(e[1],\\\", tileAWidth \\\").concat(l,\\\" must be divisible by workgroupSize[0]\\\").concat(e[0],\\\", tileInner \\\").concat(i,\\\" must be divisible by workgroupSize[1]\\\").concat(e[1]));var p=f/e[1],d=l/e[0],h=i/e[1],v=c?\\\"\\\\n    let localRow = i32(localId.y);\\\\n    let localCol = i32(localId.x);\\\\n    let globalRowStart = i32(workgroupId.y) * \\\".concat(u,\\\";\\\\n    let globalColStart = i32(workgroupId.x) * \\\").concat(s,\\\";\\\\n\\\\n    // Loop over shared dimension.\\\\n    for (var t = 0; t < numTiles; t = t + 1) {\\\\n      // Load one tile of A into local memory.\\\\n      for (var inputRow = localRow; inputRow < \\\").concat(f,\\\"; inputRow = inputRow + \\\").concat(e[1],\\\") {\\\\n        for (var inputCol = localCol; inputCol < \\\").concat(l,\\\"; inputCol = inputCol + \\\").concat(e[0],\\\") {\\\\n          \\\").concat(n(r),\\\"\\\\n        }\\\\n      }\\\\n      // Load one tile of B into local memory.\\\\n      for (var inputRow = localRow; inputRow < \\\").concat(i,\\\"; inputRow = inputRow + \\\").concat(e[1],\\\") {\\\\n            for (var inputCol = localCol; inputCol < \\\").concat(s,\\\"; inputCol = inputCol + \\\").concat(e[0],\\\") {\\\\n          mm_Bsub[inputRow][inputCol] = mm_readB(batch,\\\\n            kStart + inputRow,\\\\n            globalColStart + inputCol);\\\\n        }\\\\n      }\\\\n      kStart = kStart + tileInner;\\\\n      workgroupBarrier();\\\\n\\\\n      // Compute acc values for a single thread.\\\\n      var BCached : array<f32, colPerThread>;\\\\n      for (var k = 0; k < tileInner; k = k + 1) {\\\\n        for (var inner = 0; inner < colPerThread; inner = inner + 1) {\\\\n          BCached[inner] = mm_Bsub[k][localCol + inner * \\\").concat(e[0],\\\"];\\\\n        }\\\\n        for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {\\\\n          let ACached = \\\").concat(r?\\\"mm_Asub[k][localRow + innerRow * \\\".concat(e[1],\\\"];\\\"):\\\"mm_Asub[localRow + innerRow * \\\".concat(e[1],\\\"][k];\\\"),\\\"\\\\n          for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {\\\\n            acc[innerRow][innerCol] = acc[innerRow][innerCol] +\\\\n                ACached * BCached[innerCol];\\\\n          }\\\\n        }\\\\n      }\\\\n      workgroupBarrier();\\\\n    }\\\\n    for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {\\\\n      let gRow = globalRowStart + localRow + innerRow * \\\").concat(e[1],\\\";\\\\n      for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {\\\\n        let gCol = globalColStart + localCol + innerCol * \\\").concat(e[0],\\\";\\\\n        mm_write(batch, gRow, gCol, acc[innerRow][innerCol]);\\\\n      }\\\\n    }\\\\n    \\\"):\\\"\\\\nlet tileRow = i32(localId.y) * rowPerThread;\\\\nlet tileCol = i32(localId.x) * colPerThread;\\\\n\\\\nlet globalRow = i32(globalId.y) * rowPerThread;\\\\nlet globalCol = i32(globalId.x) * colPerThread;\\\\nlet globalRowStart = i32(workgroupId.y) * \\\".concat(u,\\\";\\\\n\\\\nlet tileRowA = i32(localId.y) * \\\").concat(p,\\\";\\\\nlet tileColA = i32(localId.x) * \\\").concat(d,\\\";\\\\nlet tileRowB = i32(localId.y) * \\\").concat(h,\\\";\\\\n// Loop over shared dimension.\\\\nfor (var t = 0; t < numTiles; t = t + 1) {\\\\n  // Load one tile of A into local memory.\\\\n  for (var innerRow = 0; innerRow < \\\").concat(p,\\\"; innerRow = innerRow + 1) {\\\\n    for (var innerCol = 0; innerCol < \\\").concat(d,\\\"; innerCol = innerCol + 1) {\\\\n      let inputRow = tileRowA + innerRow;\\\\n      let inputCol = tileColA + innerCol;\\\\n      \\\").concat(n(r),\\\"\\\\n    }\\\\n  }\\\\n\\\\n  // Load one tile of B into local memory.\\\\n  for (var innerRow = 0; innerRow < \\\").concat(h,\\\"; innerRow = innerRow + 1) {\\\\n    for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {\\\\n      let inputRow = tileRowB + innerRow;\\\\n      let inputCol = tileCol + innerCol;\\\\n      mm_Bsub[inputRow][inputCol] = mm_readB(batch,\\\\n        kStart + inputRow,\\\\n        globalCol + innerCol);\\\\n    }\\\\n  }\\\\n  kStart = kStart + tileInner;\\\\n  workgroupBarrier();\\\\n\\\\n  // Compute acc values for a single thread.\\\\n  var BCached : array<f32, colPerThread>;\\\\n  for (var k = 0; k < tileInner; k = k + 1) {\\\\n    for (var inner = 0; inner < colPerThread; inner = inner + 1) {\\\\n      BCached[inner] = mm_Bsub[k][tileCol + inner];\\\\n    }\\\\n\\\\n    for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {\\\\n      \\\").concat(function(t){return t?\\\"let ACached = mm_Asub[k][tileRow + innerRow];\\\":\\\"let ACached = mm_Asub[tileRow + innerRow][k];\\\"}(r),\\\"\\\\n      for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {\\\\n        acc[innerRow][innerCol] = acc[innerRow][innerCol] + ACached * BCached[innerCol];\\\\n      }\\\\n    }\\\\n  }\\\\n\\\\n  workgroupBarrier();\\\\n}\\\\n\\\\nfor (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {\\\\n  for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {\\\\n    mm_write(batch, globalRow + innerRow, globalCol + innerCol,\\\\n        acc[innerRow][innerCol]);\\\\n  }\\\\n}\\\\n\\\");return\\\"\\\\n  var<workgroup> mm_Asub : array<array<f32, \\\".concat(l,\\\">, \\\").concat(f,\\\">;\\\\n  var<workgroup> mm_Bsub : array<array<f32, \\\").concat(s,\\\">, \\\").concat(i,\\\">;\\\\n  const rowPerThread = \\\").concat(t[1],\\\";\\\\n  const colPerThread = \\\").concat(t[0],\\\";\\\\n  const tileInner = \\\").concat(i,\\\";\\\\n\\\\n@compute @workgroup_size(\\\").concat(e[0],\\\", \\\").concat(e[1],\\\", \\\").concat(e[2],\\\")\\\\nfn main(@builtin(local_invocation_id) localId : vec3<u32>,\\\\n        @builtin(global_invocation_id) globalId : vec3<u32>,\\\\n        @builtin(workgroup_id) workgroupId : vec3<u32>) {\\\\n    let batch = \\\").concat(a?\\\"0\\\":\\\"i32(globalId.z)\\\",\\\";\\\\n    let numTiles = \\\").concat(a?\\\"\\\".concat(Math.ceil(o/i)):\\\"(dimInner - 1) / tileInner + 1\\\",\\\";\\\\n    var kStart = \\\").concat(a?\\\"i32(globalId.z) * \\\".concat(o):\\\"0\\\",\\\";\\\\n\\\\n    var acc : array<array<f32, colPerThread>, rowPerThread>;\\\\n\\\\n    // Without this initialization strange values show up in acc.\\\\n    for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {\\\\n      for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {\\\\n        acc[innerRow][innerCol] = 0.0;\\\\n      }\\\\n    }\\\\n    \\\").concat(v,\\\"\\\\n  }\\\\n\\\")}},504:function(t,e,n){\\\"use strict\\\";var r=this&&this.__assign||function(){return r=Object.assign||function(t){for(var e,n=1,r=arguments.length;n<r;n++)for(var i in e=arguments[n])Object.prototype.hasOwnProperty.call(e,i)&&(t[i]=e[i]);return t},r.apply(this,arguments)};Object.defineProperty(e,\\\"__esModule\\\",{value:!0}),e.sub=e.pow=e.mul=e.div=e.add=void 0;var i=n(952),a=n(163),o=n(75),c=function(t,e,n,c,u){var s={name:e,inputTypes:[a.GpuDataType.default,a.GpuDataType.default],cacheHint:u};return r(r({},s),{get:function(){return function(t,e,n,c,u,s){var l,f;void 0===s&&(s=e.dataType);var p=!i.ShapeUtil.areEqual(e.dims,n.dims),d=e.dims,h=i.ShapeUtil.size(e.dims),v=!1;if(p){var m=i.BroadcastUtil.calcShape(e.dims,n.dims,!1);if(!m)throw new Error(\\\"Can't perform binary op on the given tensors\\\");d=m,h=i.ShapeUtil.size(d);for(var g=1,y=0;y<d.length;y++){var w=null!==(l=e.dims[e.dims.length-y])&&void 0!==l?l:1;if(w!==(null!==(f=n.dims[n.dims.length-y])&&void 0!==f?f:1))break;g*=w}g%4==0&&(v=!0)}else v=!0;return r(r({},t),{getShaderSource:function(t){return function(t,e,n,r,a,c,u,s,l,f,p){void 0===l&&(l=\\\"f32\\\"),void 0===f&&(f=\\\"f32\\\"),void 0===p&&(p=\\\"f32\\\");var d,h,v=i.ShapeUtil.size(r),m=Math.ceil(v/4);\\\"string\\\"==typeof u?d=h=function(t,e){return\\\"\\\".concat(u,\\\"((\\\").concat(t,\\\"),(\\\").concat(e,\\\"))\\\")}:\\\"function\\\"==typeof u?d=h=u:(d=u.scalar,h=u.vector);var g,y=\\\"\\\",w=(0,o.createIndicesHelper)(\\\"output\\\",r);if(c){var _=function(t){for(var e=i.ShapeUtil.computeStrides(t),n=[],a=t.length-1;a>=0;a--){var o=0===r.length?\\\"0u\\\":1===r.length?\\\"(*outputIndices)\\\":\\\"(*outputIndices)[\\\".concat(a+r.length-t.length,\\\"]\\\");n.push(\\\"\\\".concat(e[a],\\\"u * (\\\").concat(o,\\\" % \\\").concat(t[a],\\\"u)\\\"))}return n.length>0?n.join(\\\"+\\\"):\\\"0u\\\"};y=\\\"\\\\n  \\\".concat(w.o2iImpl,\\\"\\\\n\\\\n  fn calcOffsetA(outputIndices: ptr<function, \\\").concat(w.iType,\\\">) -> u32 {\\\\n    return \\\").concat(_(e),\\\";\\\\n  }\\\\n\\\\n  fn calcOffsetB(outputIndices: ptr<function, \\\").concat(w.iType,\\\">) -> u32 {\\\\n    return \\\").concat(_(n),\\\";\\\\n  }\\\\n  \\\")}if(a)g=c?\\\"\\\\n      \\\".concat(w.indicesVariableDeclaration(\\\"outputIndices\\\"),\\\"\\\\n      \\\").concat(w.o2iCall(\\\"global_idx * 4u\\\",\\\"outputIndices\\\"),\\\"\\\\n      let offsetA = calcOffsetA(&outputIndices);\\\\n      let offsetB = calcOffsetB(&outputIndices);\\\\n      outputData[global_idx] = \\\").concat(h(\\\"aData[offsetA / 4u]\\\",\\\"bData[offsetB / 4u]\\\"),\\\";\\\"):\\\"outputData[global_idx] = \\\".concat(h(\\\"aData[global_idx]\\\",\\\"bData[global_idx]\\\"),\\\";\\\");else{if(!c)throw new Error(\\\"no necessary to use scalar implementation for element-wise binary op implementation.\\\");var b=function(t){var e=\\\"aData[indexA\\\".concat(t,\\\"][componentA\\\").concat(t,\\\"]\\\"),n=\\\"bData[indexB\\\".concat(t,\\\"][componentB\\\").concat(t,\\\"]\\\");return\\\"\\\\n      \\\".concat(w.o2iCall(\\\"global_idx * 4u + \\\".concat(t,\\\"u\\\"),\\\"outputIndices\\\"),\\\"\\\\n      let offsetA\\\").concat(t,\\\" = calcOffsetA(&outputIndices);\\\\n      let offsetB\\\").concat(t,\\\" = calcOffsetB(&outputIndices);\\\\n      let indexA\\\").concat(t,\\\" = offsetA\\\").concat(t,\\\" / 4u;\\\\n      let indexB\\\").concat(t,\\\" = offsetB\\\").concat(t,\\\" / 4u;\\\\n      let componentA\\\").concat(t,\\\" = offsetA\\\").concat(t,\\\" % 4u;\\\\n      let componentB\\\").concat(t,\\\" = offsetB\\\").concat(t,\\\" % 4u;\\\\n      outputData[global_idx][\\\").concat(t,\\\"] = \\\").concat(d(e,n),\\\";\\\")};g=\\\"\\\\n      \\\".concat(w.indicesVariableDeclaration(\\\"outputIndices\\\"),\\\"\\\\n      \\\").concat(b(0),\\\"\\\\n      \\\").concat(b(1),\\\"\\\\n      \\\").concat(b(2),\\\"\\\\n      \\\").concat(b(3))}return\\\"\\\\n  @group(0) @binding(0) var<storage, read> aData : array<vec4<\\\".concat(l,\\\">>;\\\\n  @group(0) @binding(1) var<storage, read> bData : array<vec4<\\\").concat(f,\\\">>;\\\\n  @group(0) @binding(2) var<storage, read_write> outputData : array<vec4<\\\").concat(p,\\\">>;\\\\n\\\\n  \\\").concat(null!=s?s:\\\"\\\",\\\"\\\\n  \\\").concat(y,\\\"\\\\n\\\\n  \\\").concat(t.mainStart(),\\\"\\\\n    \\\").concat(t.guardAgainstOutOfBoundsWorkgroupSizes(m),\\\"\\\\n    \\\").concat(g,\\\"\\\\n  }\\\")}(t,e.dims,n.dims,d,v,p,c,u)},outputs:[{dims:d,dataType:s,gpuDataType:a.GpuDataType.default}],dispatchGroup:function(){return{x:Math.ceil(h/64/(v?4:1))}}})}(s,t[0],t[1],n,c)}})};e.add=function(t){t.compute(c(t.inputs,\\\"Add\\\",(function(t,e){return\\\"\\\".concat(t,\\\"+\\\").concat(e)})))},e.div=function(t){t.compute(c(t.inputs,\\\"Div\\\",(function(t,e){return\\\"\\\".concat(t,\\\"/\\\").concat(e)})))},e.mul=function(t){t.compute(c(t.inputs,\\\"Mul\\\",(function(t,e){return\\\"\\\".concat(t,\\\"*\\\").concat(e)})))},e.pow=function(t){t.compute(c(t.inputs,\\\"Pow\\\",{scalar:function(t,e){return\\\"pow_f32(\\\".concat(t,\\\",\\\").concat(e,\\\")\\\")},vector:function(t,e){return\\\"pow_vf32(\\\".concat(t,\\\",\\\").concat(e,\\\")\\\")}},\\\"\\\\n    fn pow_f32(a : f32, b : f32) -> f32 {\\\\n      if (b == 0.0) {\\\\n        return 1.0;\\\\n      } else if (a < 0.0 && b != floor(b)) {\\\\n        return pow(a, b); // NaN\\\\n      }\\\\n      return select(sign(a), 1.0, round(abs(b) % 2.0) != 1.0) * pow(abs(a), b);\\\\n    }\\\\n    fn pow_vf32(a : vec4<f32>, b : vec4<f32>) -> vec4<f32> {\\\\n      // TODO: implement vectorized pow\\\\n      return vec4<f32>(pow_f32(a.x, b.x), pow_f32(a.y, b.y), pow_f32(a.z, b.z), pow_f32(a.w, b.w));\\\\n    }\\\\n      \\\"))},e.sub=function(t){t.compute(c(t.inputs,\\\"Sub\\\",(function(t,e){return\\\"\\\".concat(t,\\\"-\\\").concat(e)})))}},75:function(t,e,n){\\\"use strict\\\";Object.defineProperty(e,\\\"__esModule\\\",{value:!0}),e.createShaderHelper=e.createIndicesHelper=e.WORKGROUP_SIZE=void 0;var r=n(952);e.WORKGROUP_SIZE=64,e.createIndicesHelper=function(t,e){for(var n=e.length<2?\\\"u32\\\":\\\"array<u32, \\\".concat(e.length,\\\">\\\"),i=r.ShapeUtil.computeStrides(e),a=\\\"\\\",o=0;o<e.length-1;o++)a+=\\\"\\\\n    let dim\\\".concat(o,\\\" = current / \\\").concat(i[o],\\\"u;\\\\n    let rest\\\").concat(o,\\\" = current % \\\").concat(i[o],\\\"u;\\\\n    (*indices)[\\\").concat(o,\\\"] = dim\\\").concat(o,\\\";\\\\n    current = rest\\\").concat(o,\\\";\\\\n    \\\");a+=\\\"(*indices)[\\\".concat(e.length-1,\\\"] = current;\\\");var c=e.length<2?\\\"\\\":\\\"\\\\n  fn ih_o2i_\\\".concat(t,\\\"(offset: u32, indices: ptr<function, \\\").concat(n,\\\">) {\\\\n    var current = offset;\\\\n    \\\").concat(a,\\\"\\\\n  }\\\"),u=[];if(0===e.length)u.push(\\\"0u\\\");else if(e.length<2)u.push(\\\"(*indices)\\\");else for(o=e.length-1;o>=0;o--)u.push(\\\"\\\".concat(i[o],\\\"u * ((*indices)[\\\").concat(o,\\\"])\\\"));return{o2iImpl:c,o2iCall:function(n,r){return e.length<2?\\\"\\\".concat(r,\\\"=\\\").concat(n,\\\";\\\"):\\\"ih_o2i_\\\".concat(t,\\\"(\\\").concat(n,\\\", &\\\").concat(r,\\\");\\\")},i2oImpl:e.length<2?\\\"\\\":\\\"\\\\n  fn ih_i2o_\\\".concat(t,\\\"(indices: ptr<function, \\\").concat(n,\\\">) -> u32 {\\\\n    return \\\").concat(u.join(\\\"+\\\"),\\\";\\\\n  }\\\"),i2oExpression:function(n,r){return e.length<2?\\\"(\\\".concat(r?\\\"*\\\":\\\"\\\").concat(n,\\\")\\\"):\\\"ih_i2o_\\\".concat(t,\\\"(\\\").concat(r?\\\"\\\":\\\"&\\\").concat(n,\\\")\\\")},indicesVariableDeclaration:function(t,e){return\\\"var \\\".concat(t,\\\":\\\").concat(n).concat(e?\\\"=\\\".concat(n,\\\"(\\\").concat(e.join(\\\",\\\"),\\\")\\\"):\\\"\\\",\\\";\\\")},iType:n}};var i=function(){function t(t){this.normalizedDispatchGroup=t}return t.prototype.guardAgainstOutOfBoundsWorkgroupSizes=function(t){var e=\\\"number\\\"==typeof t?\\\"\\\".concat(t,\\\"u\\\"):t;return\\\"if (global_idx >= \\\".concat(e,\\\") { return; }\\\")},t.prototype.mainStart=function(t){void 0===t&&(t=e.WORKGROUP_SIZE);var n=\\\"number\\\"==typeof t?t:t[0],r=\\\"number\\\"==typeof t?1:t[1],i=\\\"number\\\"==typeof t?1:t[2],a=1===this.normalizedDispatchGroup[1]&&1===this.normalizedDispatchGroup[2],o=a?\\\"@builtin(global_invocation_id) global_id : vec3<u32>\\\":\\\"@builtin(local_invocation_index) local_index : u32,\\\\n    @builtin(workgroup_id) workgroup_id : vec3<u32>\\\",c=a?\\\"let global_idx = global_id.x;\\\":\\\"let global_idx = (workgroup_id.z * \\\".concat(this.normalizedDispatchGroup[0]*this.normalizedDispatchGroup[1],\\\"u +\\\\n          workgroup_id.y * \\\").concat(this.normalizedDispatchGroup[0],\\\"u + workgroup_id.x) * \\\").concat(n*r*i,\\\"u + local_index;\\\");return\\\"@compute @workgroup_size(\\\".concat(n,\\\", \\\").concat(r,\\\", \\\").concat(i,\\\")\\\\n  fn main(\\\").concat(o,\\\") {\\\\n    \\\").concat(c,\\\"\\\\n  \\\")},t}();e.createShaderHelper=function(t){return new i(t)}},192:function(t,e,n){\\\"use strict\\\";var r=this&&this.__assign||function(){return r=Object.assign||function(t){for(var e,n=1,r=arguments.length;n<r;n++)for(var i in e=arguments[n])Object.prototype.hasOwnProperty.call(e,i)&&(t[i]=e[i]);return t},r.apply(this,arguments)};Object.defineProperty(e,\\\"__esModule\\\",{value:!0}),e.createGroupedConvProgramInfoLoader=void 0;var i=n(952),a=n(163),o=n(75),c=n(770),u=n(997);e.createGroupedConvProgramInfoLoader=function(t,e,n){var s,l,f=(s=t.length>2,l=e.cacheKey,{name:\\\"GroupedConv\\\",inputTypes:s?[a.GpuDataType.default,a.GpuDataType.default,a.GpuDataType.default]:[a.GpuDataType.default,a.GpuDataType.default],cacheHint:l});return r(r({},f),{get:function(){return function(t,e,n,s){var l=t.length>2,f=l?\\\"value += b[output_channel];\\\":\\\"\\\",p=t[0].dims,d=t[1].dims,h=d[0]/n.group,v=\\\"f32\\\",m=(0,u.getActicationSnippet)(n),g=m.activationFunction,y=m.applyActivation,w=[\\\"@group(0) @binding(0) var<storage, read> x : array<\\\".concat(v,\\\">;\\\"),\\\"@group(0) @binding(1) var<storage, read> w : array<\\\".concat(v,\\\">;\\\")];l&&w.push(\\\"@group(0) @binding(2) var<storage, read> b : array<\\\".concat(v,\\\">;\\\"));var _=\\\"NHWC\\\"===n.format,b=(0,c.calculateOutputShape)(p,d,n.dilations,n.pads,n.strides,_),S=i.ShapeUtil.size(b),k=(0,o.createIndicesHelper)(\\\"output\\\",b),A=(0,o.createIndicesHelper)(\\\"x\\\",p),O=(0,o.createIndicesHelper)(\\\"w\\\",d);return r(r({},e),{outputs:[{dims:s?s(b):b,dataType:t[0].dataType,gpuDataType:a.GpuDataType.default}],getShaderSource:function(t){return\\\"\\\\n  const strides: vec2<u32> = vec2(\\\".concat(n.strides[0],\\\"u, \\\").concat(n.strides[1],\\\"u);\\\\n  const pads: vec2<u32> = vec2(\\\").concat(n.pads[0],\\\"u, \\\").concat(n.pads[1],\\\"u);\\\\n\\\\n  \\\").concat(w.join(\\\"\\\\n\\\"),\\\"\\\\n  @group(0) @binding(\\\").concat(w.length,\\\") var<storage, read_write> output : array<\\\").concat(v,\\\">;\\\\n\\\\n  \\\").concat(g,\\\"\\\\n  \\\").concat(k.o2iImpl,\\\"\\\\n  \\\").concat(A.i2oImpl,\\\"\\\\n  \\\").concat(O.i2oImpl,\\\"\\\\n\\\\n  \\\").concat(t.mainStart(),\\\"\\\\n    \\\").concat(t.guardAgainstOutOfBoundsWorkgroupSizes(S),\\\"\\\\n\\\\n    \\\").concat(k.indicesVariableDeclaration(\\\"outputIndices\\\"),\\\"\\\\n    \\\").concat(k.o2iCall(\\\"global_idx\\\",\\\"outputIndices\\\"),\\\"\\\\n    let batch: u32 = outputIndices[0];\\\\n    let output_channel: u32 = outputIndices[\\\").concat(_?3:1,\\\"];\\\\n    let xRCCorner: vec2<u32> = vec2<u32>(outputIndices[\\\").concat(_?1:2,\\\"], outputIndices[\\\").concat(_?2:3,\\\"]) * strides - pads;\\\\n    let group_id: u32 = output_channel / \\\").concat(h,\\\"u;\\\\n\\\\n    var value: \\\").concat(v,\\\" = \\\").concat(v,\\\"(0);\\\\n    for (var wInChannel: u32 = 0u; wInChannel < \\\").concat(d[1],\\\"u; wInChannel++) {\\\\n      let input_channel = group_id * \\\").concat(d[1],\\\"u + wInChannel;\\\\n      for (var wHeight: u32 = 0u; wHeight < \\\").concat(d[2],\\\"u; wHeight++) {\\\\n        let xHeight = xRCCorner.x + wHeight * \\\").concat(n.dilations[0],\\\"u;\\\\n\\\\n        if (xHeight < 0u || xHeight >= \\\").concat(p[_?1:2],\\\"u) {\\\\n          continue;\\\\n        }\\\\n\\\\n        for (var wWidth: u32 = 0u; wWidth < \\\").concat(d[3],\\\"u; wWidth++) {\\\\n          let xWidth = xRCCorner.y + wWidth * \\\").concat(n.dilations[1],\\\"u;\\\\n          if (xWidth < 0u || xWidth >= \\\").concat(p[_?2:3],\\\"u) {\\\\n            continue;\\\\n          }\\\\n\\\\n          \\\").concat(A.indicesVariableDeclaration(\\\"xIndices\\\",_?[\\\"batch\\\",\\\"xHeight\\\",\\\"xWidth\\\",\\\"input_channel\\\"]:[\\\"batch\\\",\\\"input_channel\\\",\\\"xHeight\\\",\\\"xWidth\\\"]),\\\"\\\\n          let xVal = x[\\\").concat(A.i2oExpression(\\\"xIndices\\\"),\\\"];\\\\n          \\\").concat(O.indicesVariableDeclaration(\\\"wIndices\\\",[\\\"output_channel\\\",\\\"wInChannel\\\",\\\"wHeight\\\",\\\"wWidth\\\"]),\\\"\\\\n          let wVal = w[\\\").concat(O.i2oExpression(\\\"wIndices\\\"),\\\"];\\\\n          value += xVal*wVal;\\\\n        }\\\\n      }\\\\n    }\\\\n    \\\").concat(f,\\\"\\\\n    \\\").concat(y,\\\"\\\\n    output[global_idx] = value;\\\\n  }\\\")},dispatchGroup:function(){return{x:Math.ceil(S/64)}}})}(t,f,e,n)}})}},770:function(t,e,n){\\\"use strict\\\";var r=this&&this.__assign||function(){return r=Object.assign||function(t){for(var e,n=1,r=arguments.length;n<r;n++)for(var i in e=arguments[n])Object.prototype.hasOwnProperty.call(e,i)&&(t[i]=e[i]);return t},r.apply(this,arguments)};Object.defineProperty(e,\\\"__esModule\\\",{value:!0}),e.conv=e.parseConvAttributes=e.calculateOutputShape=void 0;var i=n(952),a=n(387),o=n(192),c=n(822),u=n(997),s=n(625);e.calculateOutputShape=function(t,e,n,r,i,a){var o=t[0],c=t.slice(a?1:2,a?3:4),u=c.length,s=e[0],l=e.slice(2).map((function(t,e){return t+(t-1)*(n[e]-1)})),f=c.map((function(t,e){return t+r[e]+r[e+u]})).map((function(t,e){return Math.floor((t-l[e]+i[e])/i[e])}));return f.splice(0,0,o),f.splice(a?3:1,0,s),f};var l=(0,a.createAttributeWithCacheKey)({perm:[2,3,1,0]}),f=function(t,e){for(var n=t.kernelShape.slice(),r=2;r<e[1].dims.length;++r)0===n[r-2]&&(n[r-2]=e[1].dims[r]);var a=t.pads.slice();i.PoolConvUtil.adjustPadsBasedOnAutoPad(e[0].dims,t.strides,t.dilations,n,a,\\\"NHWC\\\"===t.format,t.autoPad);var o=Object.assign({},t);return Object.assign(o,{kernelShape:n,pads:a,cacheKey:t.cacheKey}),o};e.parseConvAttributes=function(t){var e=(0,u.parseInternalActivationAttributes)(t),n=t.format,i=[\\\"NOTSET\\\",\\\"VALID\\\",\\\"SAME_UPPER\\\",\\\"SAME_LOWER\\\"][t.auto_pad],o=t.dilations,c=t.group,s=t.kernel_shape,l=t.pads,f=t.strides,p=t.w_is_const();return(0,a.createAttributeWithCacheKey)(r({autoPad:i,format:n,dilations:o,group:c,kernelShape:s,pads:l,strides:f,wIsConst:p},e))},e.conv=function(t,n){!function(t,e){if(!t||2!==t.length&&3!==t.length)throw new Error(\\\"Conv requires 2 or 3 inputs\\\");if(4!==t[0].dims.length&&3!==t[0].dims.length)throw new Error(\\\"currently only support conv 1D and 2D\\\");if(t[0].dims.length!==t[1].dims.length)throw new Error(\\\"filter does not have same dimension as input\\\");if(t[0].dims[\\\"NHWC\\\"===e.format?t[0].dims.length-1:1]!==t[1].dims[1]*e.group)throw new Error(\\\"FILTER_IN_CHANNEL should be equal to DATA_CHANNEL\\\");if(3===t.length&&(1!==t[2].dims.length||t[1].dims[0]!==t[2].dims[0]))throw new Error(\\\"invalid bias\\\");var n=t[0].dims.length-2;if(e.dilations.length!==n)throw new Error(\\\"dilations should be \\\".concat(n,\\\"D\\\"));if(e.strides.length!==n)throw new Error(\\\"strides should be \\\".concat(n,\\\"D\\\"));if(e.pads.length!==2*n)throw new Error(\\\"pads should be \\\".concat(2*n,\\\"D\\\"));if(0!==e.kernelShape.length&&e.kernelShape.length!==t[1].dims.length-2)throw new Error(\\\"invalid kernel shape\\\");if(1!==t[0].dataType||1!==t[1].dataType)throw new Error(\\\"Conv input(X,W) should be float tensor\\\");if(3===t.length&&1!==t[2].dataType)throw new Error(\\\"Conv input(bias) should be float tensor\\\")}(t.inputs,n),3===t.inputs[0].dims.length?function(t,e){var n=\\\"NHWC\\\"===e.format,i=[t.inputs[0].reshape(n?[t.inputs[0].dims[0],1,t.inputs[0].dims[1],t.inputs[0].dims[2]]:[t.inputs[0].dims[0],t.inputs[0].dims[1],1,t.inputs[0].dims[2]]),t.inputs[1].reshape([t.inputs[1].dims[0],t.inputs[1].dims[1],1,t.inputs[1].dims[2]])];3===t.inputs.length&&i.push(t.inputs[2]);var a=[0,e.pads[0],0,e.pads[1]],c=[1].concat(e.strides),u=[1].concat(e.dilations),s=[1].concat(e.kernelShape),l=f(r(r({},e),{pads:a,strides:c,dilations:u,kernelShape:s}),i);t.compute((0,o.createGroupedConvProgramInfoLoader)(i,l,(function(t){return n?[t[0],t[2],t[3]]:[]})))}(t,n):function(t,n,i){var a,u=f(i,n),p=3===n.length,d=\\\"NHWC\\\"===i.format,h=n[0].dims[d?1:2],v=n[0].dims[d?2:3],m=n[0].dims[d?3:1],g=n[1].dims[2],y=n[1].dims[3],w=(0,e.calculateOutputShape)(n[0].dims,n[1].dims,i.dilations,u.pads,i.strides,d),_=w[d?1:2],b=w[d?2:3],S=w[d?3:1];if(d&&g===h&&y===v&&\\\"VALID\\\"===i.autoPad||1===g&&1===y&&1===i.dilations[0]&&1===i.dilations[1]&&1===i.strides[0]&&1===i.strides[1]&&(\\\"SAME_UPPER\\\"===i.autoPad||\\\"SAME_LOWER\\\"===i.autoPad||\\\"VALID\\\"===i.autoPad))t.compute((0,o.createGroupedConvProgramInfoLoader)(n,u));else if(d&&1===i.group){var k=d?_*b:S,A=d?S:_*b,O=g*y*m,C=null!==(a=t.customData.wT)&&void 0!==a?a:t.compute(r(r({},s.transposeProgramMetadata),{cacheHint:l.cacheKey,get:function(){return(0,s.createTransposeProgramInfo)(n[1],l.perm)}}),{inputs:[1],outputs:[i.wIsConst?-2:-1]})[0];i.wIsConst&&!t.customData.wT&&(t.customData.wT=C);var T=[n[0],C];p&&(d||1!==n[2].dims.length?T.push(n[2]):T.push(n[2].reshape([n[2].dims[0],1,1]))),t.compute((0,c.createConv2DMatMulProgramInfoLoader)(T,u,w,k,A,O,p,!0),{inputs:T})}else t.compute((0,o.createGroupedConvProgramInfoLoader)(n,u))}(t,t.inputs,n)}},822:function(t,e,n){\\\"use strict\\\";var r=this&&this.__assign||function(){return r=Object.assign||function(t){for(var e,n=1,r=arguments.length;n<r;n++)for(var i in e=arguments[n])Object.prototype.hasOwnProperty.call(e,i)&&(t[i]=e[i]);return t},r.apply(this,arguments)};Object.defineProperty(e,\\\"__esModule\\\",{value:!0}),e.createConv2DMatMulProgramInfoLoader=void 0;var i=n(163),a=n(456);e.createConv2DMatMulProgramInfoLoader=function(t,e,n,o,c,u,s,l){var f=function(t,e){return{name:\\\"Conv2DMatMul\\\",inputTypes:t?[i.GpuDataType.default,i.GpuDataType.default,i.GpuDataType.default]:[i.GpuDataType.default,i.GpuDataType.default],cacheHint:e}}(s,e.cacheKey);return r(r({},f),{get:function(){return(0,a.createConv2DMatMulProgramInfo)(t,f,e,n,o,c,u,s,l)}})}},997:function(t,e,n){\\\"use strict\\\";var r=this&&this.__read||function(t,e){var n=\\\"function\\\"==typeof Symbol&&t[Symbol.iterator];if(!n)return t;var r,i,a=n.call(t),o=[];try{for(;(void 0===e||e-- >0)&&!(r=a.next()).done;)o.push(r.value)}catch(t){i={error:t}}finally{try{r&&!r.done&&(n=a.return)&&n.call(a)}finally{if(i)throw i.error}}return o};Object.defineProperty(e,\\\"__esModule\\\",{value:!0}),e.parseInternalActivationAttributes=e.getActicationSnippet=void 0;var i=n(952);e.getActicationSnippet=function(t){switch(t.activation){case\\\"Relu\\\":return{activationFunction:\\\"\\\",applyActivation:\\\"value = max(value, 0.0);\\\"};case\\\"Sigmoid\\\":return{activationFunction:\\\"\\\",applyActivation:\\\"value = (1.0 / (1.0 + exp(-value)));\\\"};case\\\"Clip\\\":return{activationFunction:\\\"const clip_min_=f32(\\\".concat(t.clipMin,\\\");const clip_max_=f32(\\\").concat(t.clipMax,\\\");\\\"),applyActivation:\\\"value = clamp(value, clip_min_, clip_max_);\\\"};default:return{activationFunction:\\\"\\\",applyActivation:\\\"\\\"}}},e.parseInternalActivationAttributes=function(t){var e=(null==t?void 0:t.activation)||\\\"\\\";if(\\\"Clip\\\"===e){var n=r((null==t?void 0:t.activation_params)||[i.MIN_CLIP,i.MAX_CLIP],2),a=n[0],o=n[1];return{activation:e,clipMax:o,clipMin:a,activationCacheKey:\\\"\\\".concat(e,\\\":\\\").concat(a,\\\",\\\").concat(o)}}return{activation:e,activationCacheKey:e}}},271:function(t,e,n){\\\"use strict\\\";var r=this&&this.__assign||function(){return r=Object.assign||function(t){for(var e,n=1,r=arguments.length;n<r;n++)for(var i in e=arguments[n])Object.prototype.hasOwnProperty.call(e,i)&&(t[i]=e[i]);return t},r.apply(this,arguments)},i=this&&this.__read||function(t,e){var n=\\\"function\\\"==typeof Symbol&&t[Symbol.iterator];if(!n)return t;var r,i,a=n.call(t),o=[];try{for(;(void 0===e||e-- >0)&&!(r=a.next()).done;)o.push(r.value)}catch(t){i={error:t}}finally{try{r&&!r.done&&(n=a.return)&&n.call(a)}finally{if(i)throw i.error}}return o};Object.defineProperty(e,\\\"__esModule\\\",{value:!0}),e.parseGemmAttributes=e.gemm=void 0;var a=n(952),o=n(387),c=n(163);e.gemm=function(t,e){!function(t){if(!t)throw new Error(\\\"Input is missing\\\");if(t.length<2||t.length>3)throw new Error(\\\"Invaid input number.\\\");if(3===t.length&&t[2].dims.length>2)throw new Error(\\\"Invalid input shape of C\\\");if(1!==t[0].dataType||1!==t[1].dataType||3===t.length&&1!==t[2].dataType)throw new Error(\\\"Invalid input type.\\\");if(t[0].dataType!==t[1].dataType||3===t.length&&t[0].dataType!==t[2].dataType)throw new Error(\\\"Input types are mismatched\\\")}(t.inputs),t.compute(function(t,e){var n={name:\\\"Gemm\\\",inputTypes:3===t.length?[c.GpuDataType.default,c.GpuDataType.default,c.GpuDataType.default]:[c.GpuDataType.default,c.GpuDataType.default],cacheHint:e.cacheKey};return r(r({},n),{get:function(){return function(t,e,n){var o=e[0].dims.slice(),u=e[1].dims.slice(),s=i(a.GemmUtil.getShapeOfGemmResult(o,n.transA,u,n.transB,3===e.length?e[2].dims:void 0),3),l=s[0],f=s[1],p=s[2],d=[l,f];if(!d)throw new Error(\\\"Can't use gemm on the given tensors\\\");var h=a.ShapeUtil.size(d),v=\\\"\\\";n.transA&&n.transB?v=\\\"value += a[k * M + m] * b[n * K + k];\\\":n.transA&&!n.transB?v=\\\"value += a[k * M + m] * b[k * N + n];\\\":!n.transA&&n.transB?v=\\\"value += a[m * K + k] * b[n * K + k];\\\":n.transA||n.transB||(v=\\\"value += a[m * K + k] * b[k * N + n];\\\");var m=\\\"f32\\\",g=1===n.alpha?\\\"\\\":\\\"value *= alpha;\\\",y=3===e.length?\\\"value += beta * c[\\\".concat(function(t,e,n){if(0===n.length)return\\\"0u\\\";var r=1===n.length&&1!==t||2===n.length&&n[0]!==t,i=n[n.length-1]!==e,a=\\\"0u\\\";return r||(a+=\\\"+ m * \\\".concat(n[n.length-1],\\\"u\\\")),i||(a+=\\\"+n\\\"),a}(l,f,e[2].dims),\\\"];\\\"):\\\"\\\",w=[\\\"@group(0) @binding(0) var<storage, read> a : array<\\\".concat(m,\\\">;\\\"),\\\"@group(0) @binding(1) var<storage, read> b : array<\\\".concat(m,\\\">;\\\")];return 3===e.length&&w.push(\\\"@group(0) @binding(2) var<storage, read> c : array<\\\".concat(m,\\\">;\\\")),r(r({},t),{outputs:[{dims:d,dataType:e[0].dataType,gpuDataType:c.GpuDataType.default}],getShaderSource:function(t){return\\\"\\\\n  const M: u32 = \\\".concat(l,\\\"u;\\\\n  const N: u32 = \\\").concat(f,\\\"u;\\\\n  const K: u32 = \\\").concat(p,\\\"u;\\\\n  const alpha = \\\").concat(m,\\\"(\\\").concat(n.alpha,\\\");\\\\n  const beta = \\\").concat(m,\\\"(\\\").concat(n.beta,\\\");\\\\n\\\\n  \\\").concat(w.join(\\\"\\\\n\\\"),\\\"\\\\n  @group(0) @binding(\\\").concat(e.length,\\\") var<storage, read_write> output : array<\\\").concat(m,\\\">;\\\\n\\\\n  \\\").concat(t.mainStart(),\\\"\\\\n    \\\").concat(t.guardAgainstOutOfBoundsWorkgroupSizes(h),\\\"\\\\n\\\\n    let m = global_id.x / N;\\\\n    let n = global_id.x % N;\\\\n\\\\n    var value = \\\").concat(m,\\\"(0);\\\\n    for (var k: u32 = 0u; k<\\\").concat(p,\\\"u; k++) {\\\\n      \\\").concat(v,\\\"\\\\n    }\\\\n\\\\n    \\\").concat(g,\\\"\\\\n    \\\").concat(y,\\\"\\\\n    output[global_id.x] = value;\\\\n\\\\n  }\\\")},dispatchGroup:function(){return{x:Math.ceil(h/64)}}})}(n,t,e)}})}(t.inputs,e))},e.parseGemmAttributes=function(t){return(0,o.createAttributeWithCacheKey)(t)}},522:function(t,e,n){\\\"use strict\\\";var r=this&&this.__assign||function(){return r=Object.assign||function(t){for(var e,n=1,r=arguments.length;n<r;n++)for(var i in e=arguments[n])Object.prototype.hasOwnProperty.call(e,i)&&(t[i]=e[i]);return t},r.apply(this,arguments)};Object.defineProperty(e,\\\"__esModule\\\",{value:!0}),e.matMul=e.createMatmulProgramInfoLoader=void 0;var i=n(952),a=n(163),o=n(997);e.createMatmulProgramInfoLoader=function(t,e){var n,c,u=(n=t.length>2,c=e.activationCacheKey,{name:\\\"MatMul\\\",inputTypes:n?[a.GpuDataType.default,a.GpuDataType.default,a.GpuDataType.default]:[a.GpuDataType.default,a.GpuDataType.default],cacheHint:c});return r(r({},u),{get:function(){return function(t,e,n){var c=e[0].dims,u=e[1].dims,s=i.BroadcastUtil.calcShape(c,u,!0);if(!s)throw new Error(\\\"Can't use matmul on the given tensors\\\");var l=i.ShapeUtil.size(s),f=\\\"f32\\\",p=(0,o.getActicationSnippet)(n),d=p.activationFunction,h=p.applyActivation,v=s[s.length-2],m=c[c.length-1],g=s[s.length-1];return r(r({},t),{outputs:[{dims:s,dataType:e[0].dataType,gpuDataType:a.GpuDataType.default}],getShaderSource:function(t){return\\\"\\\\n  const M: u32 = \\\".concat(v,\\\"u;\\\\n  const N: u32 = \\\").concat(g,\\\"u;\\\\n  const K: u32 = \\\").concat(m,\\\"u;\\\\n\\\\n  @group(0) @binding(0) var<storage, read> a : array<\\\").concat(f,\\\">;\\\\n  @group(0) @binding(1) var<storage, read> b : array<\\\").concat(f,\\\">;\\\\n  @group(0) @binding(2) var<storage, read_write> output : array<\\\").concat(f,\\\">;\\\\n\\\\n  \\\").concat(d,\\\"\\\\n\\\\n  \\\").concat(t.mainStart(),\\\"\\\\n    \\\").concat(t.guardAgainstOutOfBoundsWorkgroupSizes(l),\\\"\\\\n\\\\n    let stack = global_idx / (M * N);\\\\n    let mn = global_idx % (M * N);\\\\n    let n = global_idx % N;\\\\n    let m = mn / N;\\\\n\\\\n    let offsetA = stack * (M * K);\\\\n    let offsetB = stack * (K * N);\\\\n\\\\n    var value = \\\").concat(f,\\\"(0);\\\\n    for (var k: u32 = 0u; k<\\\").concat(m,\\\"u; k++) {\\\\n      value += a[offsetA + m * K + k] * b[offsetB + k * N + n];\\\\n    }\\\\n    \\\").concat(h,\\\"\\\\n    output[global_idx] = value;\\\\n  }\\\")},dispatchGroup:function(){return{x:Math.ceil(l/64)}}})}(u,t,e)}})},e.matMul=function(t){!function(t){if(!t||2!==t.length)throw new Error(\\\"MatMul requires 2 inputs.\\\");if(t[0].dims[t[0].dims.length-1]!==t[1].dims[t[1].dims.length-2])throw new Error(\\\"shared dimension does not match.\\\");if(1!==t[0].dataType||1!==t[1].dataType)throw new Error(\\\"inputs should be float type\\\")}(t.inputs),t.compute((0,e.createMatmulProgramInfoLoader)(t.inputs,{activation:\\\"\\\",activationCacheKey:\\\"\\\"}))}},262:function(t,e,n){\\\"use strict\\\";var r=this&&this.__assign||function(){return r=Object.assign||function(t){for(var e,n=1,r=arguments.length;n<r;n++)for(var i in e=arguments[n])Object.prototype.hasOwnProperty.call(e,i)&&(t[i]=e[i]);return t},r.apply(this,arguments)},i=this&&this.__read||function(t,e){var n=\\\"function\\\"==typeof Symbol&&t[Symbol.iterator];if(!n)return t;var r,i,a=n.call(t),o=[];try{for(;(void 0===e||e-- >0)&&!(r=a.next()).done;)o.push(r.value)}catch(t){i={error:t}}finally{try{r&&!r.done&&(n=a.return)&&n.call(a)}finally{if(i)throw i.error}}return o};Object.defineProperty(e,\\\"__esModule\\\",{value:!0}),e.globalMaxPool=e.parseGlobalMaxPoolAttributes=e.parseMaxPoolAttributes=e.maxPool=e.globalAveragePool=e.parseGlobalAveragePoolAttributes=e.averagePool=e.parseAveragePoolAttributes=void 0;var a=n(952),o=n(387),c=n(163),u=n(75),s=function(t){if(!t||1!==t.length)throw new Error(\\\"Pool ops requires 1 input.\\\");if(4!==t[0].dims.length)throw new Error(\\\"Pool ops supports 2-D inputs only for now.\\\");if(1!==t[0].dataType)throw new Error(\\\"Invalid input type.\\\")},l=function(t,e,n){var r=\\\"NHWC\\\"===e.format,i=r?[t[0].dims[0],t[0].dims[3],t[0].dims[1],t[0].dims[2]]:t[0].dims.slice(),o=Object.hasOwnProperty.call(e,\\\"dilations\\\"),c=e.kernelShape.slice(),u=e.strides.slice(),s=o?e.dilations.slice():[],l=e.pads.slice();a.PoolConvUtil.adjustPoolAttributes(n,i,c,u,s,l);var f=a.PoolConvUtil.computePoolOutputShape(n,i,u,s,c,l,e.autoPad),p=Object.assign({},e);return o?Object.assign(p,{kernelShape:c,strides:u,pads:l,dilations:s,cacheKey:e.cacheKey}):Object.assign(p,{kernelShape:c,strides:u,pads:l,cacheKey:e.cacheKey}),[p,r?[f[0],f[2],f[3],f[1]]:f]},f=function(t,e,n,r,i,o,c,s){var l=\\\"NHWC\\\"===r.format,f=e.length,p=a.ShapeUtil.size(n),d=(0,u.createIndicesHelper)(\\\"output\\\",n),h=(0,u.createIndicesHelper)(\\\"x\\\",e);if(r.kernelShape.length<=2){var v,m=r.kernelShape[r.kernelShape.length-1],g=r.strides[r.strides.length-1],y=r.pads[r.pads.length/2-1],w=f-(l?2:1),_=\\\"\\\",b=\\\"\\\";if(v=y+r.pads[r.pads.length-1]!==0?\\\"\\\\n              for (var i: u32 = 0u; i < \\\".concat(m,\\\"u; i++) {\\\\n                xIndices[\\\").concat(w,\\\"] = indices[\\\").concat(w,\\\"] * \\\").concat(g,\\\" - \\\").concat(y,\\\" + i;\\\\n                if (xIndices[\\\").concat(w,\\\"] < 0 || xIndices[\\\").concat(w,\\\"] >= \\\").concat(e[w],\\\") {\\\\n                  pad++;\\\\n                  continue;\\\\n                }\\\\n                let x_val = x[\\\").concat(h.i2oExpression(\\\"xIndices\\\"),\\\"];\\\\n                \\\").concat(i,\\\"\\\\n              }\\\"):\\\"\\\\n              for (var i: u32 = 0u; i < \\\".concat(m,\\\"u; i++) {\\\\n                xIndices[\\\").concat(w,\\\"] = indices[\\\").concat(w,\\\"] * \\\").concat(g,\\\" - \\\").concat(y,\\\" + i;\\\\n                let x_val = x[\\\").concat(h.i2oExpression(\\\"xIndices\\\"),\\\"];\\\\n                \\\").concat(i,\\\"\\\\n              }\\\"),2===r.kernelShape.length){var S=r.kernelShape[r.kernelShape.length-2],k=r.strides[r.strides.length-2],A=r.pads[r.pads.length/2-2],O=r.pads[r.pads.length-2],C=f-(l?3:2),T=e[C];_=A+O!==0?\\\"\\\\n                for (var j: u32 = 0u; j < \\\".concat(S,\\\"u; j++) {\\\\n                  xIndices[\\\").concat(C,\\\"] = indices[\\\").concat(C,\\\"] * \\\").concat(k,\\\" - \\\").concat(A,\\\" + j;\\\\n                  if (xIndices[\\\").concat(C,\\\"] < 0 || xIndices[\\\").concat(C,\\\"] >= \\\").concat(T,\\\") {\\\\n                    pad+= \\\").concat(m,\\\";\\\\n                    continue;\\\\n                  }\\\\n              \\\"):\\\"\\\\n                for (var j: u32 = 0u; j < \\\".concat(S,\\\"u; j++) {\\\\n                  xIndices[\\\").concat(C,\\\"] = indices[\\\").concat(C,\\\"] * \\\").concat(k,\\\" - \\\").concat(A,\\\" + j;\\\\n                \\\"),b=\\\"\\\\n              }\\\\n            \\\"}return\\\"\\\\n            @group(0) @binding(0) var<storage, read> x : array<\\\".concat(c,\\\">;\\\\n            @group(0) @binding(1) var<storage, read_write> output : array<\\\").concat(c,\\\">;\\\\n\\\\n            \\\").concat(d.o2iImpl,\\\"\\\\n            \\\").concat(h.i2oImpl,\\\"\\\\n\\\\n            \\\").concat(t.mainStart(),\\\"\\\\n              \\\").concat(t.guardAgainstOutOfBoundsWorkgroupSizes(p),\\\"\\\\n\\\\n              \\\").concat(d.indicesVariableDeclaration(\\\"indices\\\"),\\\"\\\\n              \\\").concat(d.o2iCall(\\\"global_idx\\\",\\\"indices\\\"),\\\"\\\\n              \\\").concat(d.indicesVariableDeclaration(\\\"xIndices\\\"),\\\"\\\\n              \\\").concat(d.o2iCall(\\\"global_idx\\\",\\\"xIndices\\\"),\\\"\\\\n\\\\n              var value: \\\").concat(c,\\\" = \\\").concat(c,\\\"(\\\").concat(s,\\\");\\\\n              var pad = 0;\\\\n              \\\").concat(_,\\\"\\\\n              \\\").concat(v,\\\"\\\\n              \\\").concat(b,\\\"\\\\n              \\\").concat(o,\\\"\\\\n\\\\n              output[global_idx] = value;\\\\n            }\\\")}if(l)throw new Error(\\\"Pooling with kernelShape.length > 2 is not supported for NHWC format.\\\");var P,E=a.ShapeUtil.size(r.kernelShape),x=a.ShapeUtil.computeStrides(r.kernelShape),j=x.length,M=r.pads.length;return P=r.pads.reduce((function(t,e){return t+e}))?\\\"\\\\n                if (xIndices[j] >= inputDims[j]) {\\\\n                  pad++;\\\\n                  isPad = true;\\\\n                  break;\\\\n                }\\\\n              }\\\\n              if (!isPad) {\\\\n                let x_val = x[\\\".concat(h.i2oExpression(\\\"xIndices\\\"),\\\"];\\\\n                \\\").concat(i,\\\"\\\\n              }\\\"):\\\"\\\\n              }\\\\n              let x_val = x[\\\".concat(h.i2oExpression(\\\"xIndices\\\"),\\\"];\\\\n              \\\").concat(i,\\\"\\\\n            \\\"),\\\"\\\\n            @group(0) @binding(0) var<storage, read> x : array<\\\".concat(c,\\\">;\\\\n            @group(0) @binding(1) var<storage, read_write> output : array<\\\").concat(c,\\\">;\\\\n\\\\n            \\\").concat(d.o2iImpl,\\\"\\\\n            \\\").concat(h.i2oImpl,\\\"\\\\n\\\\n            const pads = array<u32, \\\").concat(M,\\\">(\\\").concat(r.pads.map((function(t){return\\\"\\\".concat(t,\\\"u\\\")})).join(\\\",\\\"),\\\");\\\\n            const inputDims = array<u32, \\\").concat(f,\\\">(\\\").concat(e.map((function(t){return\\\"\\\".concat(t,\\\"u\\\")})).join(\\\",\\\"),\\\");\\\\n            const kernelStrides = array<u32, \\\").concat(j,\\\">(\\\").concat(x.map((function(t){return\\\"\\\".concat(t,\\\"u\\\")})).join(\\\",\\\"),\\\");\\\\n            const strides = array<u32, \\\").concat(j,\\\">(\\\").concat(r.strides.map((function(t){return\\\"\\\".concat(t,\\\"u\\\")})).join(\\\",\\\"),\\\");\\\\n\\\\n            \\\").concat(t.mainStart(),\\\"\\\\n              \\\").concat(t.guardAgainstOutOfBoundsWorkgroupSizes(p),\\\"\\\\n\\\\n              \\\").concat(d.indicesVariableDeclaration(\\\"indices\\\"),\\\"\\\\n              \\\").concat(d.o2iCall(\\\"global_idx\\\",\\\"indices\\\"),\\\"\\\\n              \\\").concat(d.indicesVariableDeclaration(\\\"xIndices\\\"),\\\"\\\\n              \\\").concat(d.o2iCall(\\\"global_idx\\\",\\\"xIndices\\\"),\\\"\\\\n\\\\n              var offsets: array<u32, \\\").concat(j,\\\">;\\\\n\\\\n              var value = \\\").concat(c,\\\"(\\\").concat(s,\\\");\\\\n              var pad = 0;\\\\n              var isPad = false;\\\\n\\\\n              for (var i: u32 = 0u; i < \\\").concat(E,\\\"u; i++) {\\\\n                var offset = i;\\\\n                for (var j = 0u; j < \\\").concat(j-1,\\\"u; j++) {\\\\n                  offsets[j] = offset / kernelStrides[j];\\\\n                  offset -= offsets[j] * kernelStrides[j];\\\\n                }\\\\n                offsets[\\\").concat(j-1,\\\"] = offset;\\\\n\\\\n                isPad = false;\\\\n                for (var j = \\\").concat(f-j,\\\"u; j < \\\").concat(f,\\\"u; j++) {\\\\n                  xIndices[j] = indices[j] * strides[j - \\\").concat(f-j,\\\"u]\\\\n                    + offsets[j - \\\").concat(f-j,\\\"u] - pads[j - 2u];\\\\n                  \\\").concat(P,\\\"\\\\n              }\\\\n              \\\").concat(o,\\\"\\\\n\\\\n              output[global_idx] = value;\\\\n            }\\\")},p=function(t){return{format:t.format,autoPad:[\\\"NOTSET\\\",\\\"VALID\\\",\\\"SAME_UPPER\\\",\\\"SAME_LOWER\\\"][t.auto_pad],ceilMode:t.ceil_mode,kernelShape:t.kernel_shape,strides:t.strides,pads:t.pads}},d=function(t,e,n,o){var u=i(l(t,o,n),2),s=u[0],p=u[1],d=a.ShapeUtil.size(s.kernelShape),h=\\\"f32\\\",v=\\\"\\\";return s.countIncludePad?v+=\\\"value /= \\\".concat(h,\\\"(\\\").concat(d,\\\");\\\"):v+=\\\"value /= \\\".concat(h,\\\"(\\\").concat(d,\\\" - pad);\\\"),r(r({},e),{outputs:[{dims:p,dataType:t[0].dataType,gpuDataType:c.GpuDataType.default}],getShaderSource:function(e){return f(e,t[0].dims,p,s,\\\"value += x_val;\\\",v,h,\\\"0.0\\\")},dispatchGroup:function(){return{x:Math.ceil(a.ShapeUtil.size(p)/64)}}})};e.parseAveragePoolAttributes=function(t){var e=0!==t.count_include_pad,n=p(t);if(0!==n.ceilMode)throw new Error(\\\"using ceil() in shape computation is not yet supported for AveragePool\\\");return(0,o.createAttributeWithCacheKey)(r({countIncludePad:e},n))},e.averagePool=function(t,e){s(t.inputs);var n={name:\\\"AveragePool\\\",inputTypes:[c.GpuDataType.default],cacheHint:e.cacheKey};t.compute(r(r({},n),{get:function(){return d(t.inputs,n,!1,e)}}))};var h={autoPad:\\\"\\\",ceilMode:0,countIncludePad:!1,kernelShape:[],strides:[],pads:[],storageOrder:0,dilations:[],cacheKey:\\\"\\\"};e.parseGlobalAveragePoolAttributes=function(t){var e=t.format;return r(r({format:e},h),{cacheKey:e})},e.globalAveragePool=function(t,e){s(t.inputs);var n={name:\\\"GlobalAveragePool\\\",inputTypes:[c.GpuDataType.default],cacheHint:e.cacheKey};t.compute(r(r({},n),{get:function(){return d(t.inputs,n,!0,e)}}))};var v=function(t,e,n,o){var u=i(l(t,o,n),2),s=u[0],p=u[1];return r(r({},e),{outputs:[{dims:p,dataType:t[0].dataType,gpuDataType:c.GpuDataType.default}],getShaderSource:function(e){return f(e,t[0].dims,p,s,\\\"\\\\n      value = max(x_val, value);\\\\n    \\\",\\\"\\\",\\\"f32\\\",\\\"-1e5\\\")},dispatchGroup:function(){return{x:Math.ceil(a.ShapeUtil.size(p)/64)}}})};e.maxPool=function(t,e){s(t.inputs);var n={name:\\\"MaxPool\\\",inputTypes:[c.GpuDataType.default],cacheHint:e.cacheKey};t.compute(r(r({},n),{get:function(){return v(t.inputs,n,!1,e)}}))},e.parseMaxPoolAttributes=function(t){var e=t.storage_order,n=t.dilations,i=p(t);if(0!==e)throw new Error(\\\"column major storage order is not yet supported for MaxPool\\\");if(0!==i.ceilMode)throw new Error(\\\"using ceil() in shape computation is not yet supported for MaxPool\\\");return(0,o.createAttributeWithCacheKey)(r({storageOrder:e,dilations:n},i))},e.parseGlobalMaxPoolAttributes=function(t){var e=t.format;return r(r({format:e},h),{cacheKey:e})},e.globalMaxPool=function(t,e){s(t.inputs);var n={name:\\\"GlobalMaxPool\\\",inputTypes:[c.GpuDataType.default],cacheHint:e.cacheKey};t.compute(r(r({},n),{get:function(){return v(t.inputs,n,!0,e)}}))}},625:function(t,e,n){\\\"use strict\\\";var r=this&&this.__assign||function(){return r=Object.assign||function(t){for(var e,n=1,r=arguments.length;n<r;n++)for(var i in e=arguments[n])Object.prototype.hasOwnProperty.call(e,i)&&(t[i]=e[i]);return t},r.apply(this,arguments)},i=this&&this.__read||function(t,e){var n=\\\"function\\\"==typeof Symbol&&t[Symbol.iterator];if(!n)return t;var r,i,a=n.call(t),o=[];try{for(;(void 0===e||e-- >0)&&!(r=a.next()).done;)o.push(r.value)}catch(t){i={error:t}}finally{try{r&&!r.done&&(n=a.return)&&n.call(a)}finally{if(i)throw i.error}}return o},a=this&&this.__spreadArray||function(t,e,n){if(n||2===arguments.length)for(var r,i=0,a=e.length;i<a;i++)!r&&i in e||(r||(r=Array.prototype.slice.call(e,0,i)),r[i]=e[i]);return t.concat(r||Array.prototype.slice.call(e))};Object.defineProperty(e,\\\"__esModule\\\",{value:!0}),e.parseTransposeAttributes=e.transpose=e.createTransposeProgramInfo=e.transposeProgramMetadata=void 0;var o=n(952),c=n(387),u=n(163),s=n(75);e.transposeProgramMetadata={name:\\\"Transpose\\\",inputTypes:[u.GpuDataType.default]};var l=function(t,e){return e&&e.length!==t.length?a([],i(t.keys()),!1).reverse():e};e.createTransposeProgramInfo=function(t,n){var i=t.dims,a=l(i,n),c=function(t,e){return o.ShapeUtil.sortBasedOnPerm(t,l(t,e))}(i,a),f=i.length,p=o.ShapeUtil.size(c),d=(0,s.createIndicesHelper)(\\\"output\\\",c),h=(0,s.createIndicesHelper)(\\\"a\\\",i);return r(r({},e.transposeProgramMetadata),{outputs:[{dims:c,dataType:t.dataType,gpuDataType:u.GpuDataType.default}],getShaderSource:function(t){return\\\"\\\\n  @group(0) @binding(0) var<storage, read> a : array<\\\".concat(\\\"f32\\\",\\\">;\\\\n  @group(0) @binding(1) var<storage, read_write> output : array<\\\").concat(\\\"f32\\\",\\\">;\\\\n\\\\n  \\\").concat(function(t,e){var n=[];n.push(\\\"fn perm(a: ptr<function, array<u32, \\\".concat(e,\\\">>, i: ptr<function, array<u32, \\\").concat(e,\\\">>) {\\\"));for(var r=0;r<e;++r)n.push(\\\"\\\\t(*a)[\\\".concat(t[r],\\\"]=(*i)[\\\").concat(r,\\\"];\\\"));return n.push(\\\"\\\\t}\\\"),n.join(\\\"\\\\n\\\")}(a,f),\\\"\\\\n  \\\").concat(d.o2iImpl,\\\"\\\\n  \\\").concat(h.i2oImpl,\\\"\\\\n\\\\n  \\\").concat(t.mainStart(),\\\"\\\\n    \\\").concat(t.guardAgainstOutOfBoundsWorkgroupSizes(p),\\\"\\\\n\\\\n    \\\").concat(d.indicesVariableDeclaration(\\\"indices\\\"),\\\"\\\\n    \\\").concat(d.o2iCall(\\\"global_idx\\\",\\\"indices\\\"),\\\"\\\\n    \\\").concat(h.indicesVariableDeclaration(\\\"aIndices\\\"),\\\"\\\\n    perm(&aIndices, &indices);\\\\n\\\\n    output[global_idx] = a[\\\").concat(h.i2oExpression(\\\"aIndices\\\"),\\\"];\\\\n  }\\\")},dispatchGroup:function(){return{x:Math.ceil(p/64)}}})},e.transpose=function(t,n){!function(t){if(!t||1!==t.length)throw new Error(\\\"Transpose requires 1 input.\\\");if(1!==t[0].dataType)throw new Error(\\\"input should be float tensor\\\")}(t.inputs),t.compute(r(r({},e.transposeProgramMetadata),{cacheHint:n.cacheKey,get:function(){return(0,e.createTransposeProgramInfo)(t.inputs[0],n.perm)}}))},e.parseTransposeAttributes=function(t){return(0,c.createAttributeWithCacheKey)({perm:t.perm})}},302:function(t,e,n){\\\"use strict\\\";var r=this&&this.__assign||function(){return r=Object.assign||function(t){for(var e,n=1,r=arguments.length;n<r;n++)for(var i in e=arguments[n])Object.prototype.hasOwnProperty.call(e,i)&&(t[i]=e[i]);return t},r.apply(this,arguments)};Object.defineProperty(e,\\\"__esModule\\\",{value:!0}),e.thresholdedRelu=e.tanh=e.tan=e.sqrt=e.sinh=e.sin=e.sigmoid=e.relu=e.reciprocal=e.neg=e.leakyRelu=e.floor=e.exp=e.erf=e.elu=e.parseAlphaAttributes=e.cosh=e.cos=e.ceil=e.clip=e.clipV10=e.atanh=e.atan=e.asinh=e.asin=e.acosh=e.acos=e.abs=void 0;var i=n(952),a=n(387),o=n(163),c=function(t,e,n,a,c){var u={name:e,inputTypes:[o.GpuDataType.default],cacheHint:c};return r(r({},u),{get:function(){return function(t,e,n,a){return r(r({},t),{getShaderSource:function(t){return function(t,e,n,r){var i,a=Math.ceil(e/4);return i=\\\"string\\\"==typeof n?\\\"\\\".concat(n,\\\"(a)\\\"):n(\\\"a\\\"),\\\"\\\\n  @group(0) @binding(0) var<storage, read> inputData : array<vec4<f32>>;\\\\n  @group(0) @binding(1) var<storage, read_write> outputData : array<vec4<f32>>;\\\\n\\\\n  \\\".concat(null!=r?r:\\\"\\\",\\\"\\\\n\\\\n  \\\").concat(t.mainStart(),\\\"\\\\n    \\\").concat(t.guardAgainstOutOfBoundsWorkgroupSizes(a),\\\"\\\\n\\\\n    let a = inputData[global_idx];\\\\n    outputData[global_idx] = \\\").concat(i,\\\";\\\\n  }\\\")}(t,i.ShapeUtil.size(e.dims),n,a)},outputs:[{dims:e.dims,dataType:e.dataType,gpuDataType:o.GpuDataType.default}],dispatchGroup:function(t){return{x:Math.ceil(i.ShapeUtil.size(t[0].dims)/64/4)}}})}(u,t,n,a)}})};e.abs=function(t){t.compute(c(t.inputs[0],\\\"Abs\\\",\\\"abs\\\"))},e.acos=function(t){t.compute(c(t.inputs[0],\\\"Acos\\\",\\\"acos\\\"))},e.acosh=function(t){t.compute(c(t.inputs[0],\\\"Acosh\\\",\\\"acosh\\\"))},e.asin=function(t){t.compute(c(t.inputs[0],\\\"Asin\\\",\\\"asin\\\"))},e.asinh=function(t){t.compute(c(t.inputs[0],\\\"Asinh\\\",\\\"asinh\\\"))},e.atan=function(t){t.compute(c(t.inputs[0],\\\"Atan\\\",\\\"atan\\\"))},e.atanh=function(t){t.compute(c(t.inputs[0],\\\"Atanh\\\",\\\"atanh\\\"))},e.clipV10=function(t,e){t.compute(c(t.inputs[0],\\\"Clip\\\",(function(t){return\\\"clamp(\\\".concat(t,\\\", clip_min_, clip_max_)\\\")}),\\\"\\\\n    const clip_min_: vec4<f32> = vec4(f32(\\\".concat(e.min,\\\"));\\\\n    const clip_max_: vec4<f32> = vec4(f32(\\\").concat(e.max,\\\"));\\\\n\\\"),e.cacheKey),{inputs:[0]})},e.clip=function(t){var n,r,o,c=(r=(n=t.inputs).length>=2?n[1].getFloat32Array()[0]:i.MIN_CLIP,o=n.length>=3?n[2].getFloat32Array()[0]:i.MAX_CLIP,(0,a.createAttributeWithCacheKey)({min:r,max:o}));(0,e.clipV10)(t,c)},e.ceil=function(t){t.compute(c(t.inputs[0],\\\"Ceil\\\",\\\"ceil\\\"))},e.cos=function(t){t.compute(c(t.inputs[0],\\\"Cos\\\",\\\"cos\\\"))},e.cosh=function(t){t.compute(c(t.inputs[0],\\\"Cosh\\\",\\\"cosh\\\"))},e.parseAlphaAttributes=function(t){return(0,a.createAttributeWithCacheKey)(t)},e.elu=function(t,e){t.compute(c(t.inputs[0],\\\"Elu\\\",(function(t){return\\\"elu_vf32(\\\".concat(t,\\\")\\\")}),\\\"\\\\n  const elu_alpha_: f32 = f32(\\\".concat(e.alpha,\\\");\\\\n\\\\n  fn elu_f32(a: f32) -> f32 {\\\\n  return select((exp(a) - 1.0) * elu_alpha_, a, a >= 0.0);\\\\n  }\\\\n\\\\n  fn elu_vf32(v: vec4<f32>) -> vec4<f32> {\\\\n  return vec4(elu_f32(v.x), elu_f32(v.y), elu_f32(v.z), elu_f32(v.w));\\\\n  }\\\"),e.cacheKey))},e.erf=function(t){t.compute(c(t.inputs[0],\\\"Erf\\\",(function(t){return\\\"erf_vf32(\\\".concat(t,\\\")\\\")}),\\\"\\\\n  const r0: f32 = 0.3275911;\\\\n  const r1: f32 = 0.254829592;\\\\n  const r2: f32 = -0.284496736;\\\\n  const r3: f32 = 1.421413741;\\\\n  const r4: f32 = -1.453152027;\\\\n  const r5: f32 = 1.061405429;\\\\n\\\\n  fn erf_vf32(v: vec4<f32>) -> vec4<f32> {\\\\n    let absv = abs(v);\\\\n    let x = 1.0 / (1.0 + r0 * absv);\\\\n    return sign(v) * (1.0 - ((((r5 * x + r4) * x + r3) * x + r2) * x + r1) * x * exp(-absv * absv));\\\\n  }\\\"))},e.exp=function(t){t.compute(c(t.inputs[0],\\\"Exp\\\",\\\"exp\\\"))},e.floor=function(t){t.compute(c(t.inputs[0],\\\"Floor\\\",\\\"floor\\\"))},e.leakyRelu=function(t,e){t.compute(c(t.inputs[0],\\\"LeakyRelu\\\",(function(t){return\\\"select(leaky_relu_alpha_ * \\\".concat(t,\\\", \\\").concat(t,\\\", \\\").concat(t,\\\" >= vec4<f32>(0.0))\\\")}),\\\"const leaky_relu_alpha_: f32 = f32(\\\".concat(e.alpha,\\\");\\\"),e.cacheKey))},e.neg=function(t){t.compute(c(t.inputs[0],\\\"Neg\\\",(function(t){return\\\"-\\\".concat(t)})))},e.reciprocal=function(t){t.compute(c(t.inputs[0],\\\"Reciprocal\\\",(function(t){return\\\"1.0/\\\".concat(t)})))},e.relu=function(t){t.compute(c(t.inputs[0],\\\"Relu\\\",(function(t){return\\\"select(vec4<f32>(0.0), \\\".concat(t,\\\", \\\").concat(t,\\\" > vec4<f32>(0.0))\\\")})))},e.sigmoid=function(t){t.compute(c(t.inputs[0],\\\"Sigmoid\\\",(function(t){return\\\"(1.0 / (1.0 + exp(-\\\".concat(t,\\\")))\\\")})))},e.sin=function(t){t.compute(c(t.inputs[0],\\\"Sin\\\",\\\"sin\\\"))},e.sinh=function(t){t.compute(c(t.inputs[0],\\\"Sinh\\\",\\\"sinh\\\"))},e.sqrt=function(t){t.compute(c(t.inputs[0],\\\"Sqrt\\\",\\\"sqrt\\\"))},e.tan=function(t){t.compute(c(t.inputs[0],\\\"Tan\\\",\\\"tan\\\"))},e.tanh=function(t){t.compute(c(t.inputs[0],\\\"Tanh\\\",\\\"tanh\\\"))},e.thresholdedRelu=function(t,e){return t.compute(c(t.inputs[0],\\\"ThresholdedRelu\\\",(function(t){return\\\"select(vec4<f32>(0.0), \\\".concat(t,\\\", \\\").concat(t,\\\" > thresholded_relu_alpha_)\\\")}),\\\"const thresholded_relu_alpha_: vec4<f32> = vec4<f32>(\\\".concat(e.alpha,\\\");\\\"),e.cacheKey)),0}},305:function(t,e,n){\\\"use strict\\\";var r=this&&this.__values||function(t){var e=\\\"function\\\"==typeof Symbol&&Symbol.iterator,n=e&&t[e],r=0;if(n)return n.call(t);if(t&&\\\"number\\\"==typeof t.length)return{next:function(){return t&&r>=t.length&&(t=void 0),{value:t&&t[r++],done:!t}}};throw new TypeError(e?\\\"Object is not iterable.\\\":\\\"Symbol.iterator is not defined.\\\")},i=this&&this.__read||function(t,e){var n=\\\"function\\\"==typeof Symbol&&t[Symbol.iterator];if(!n)return t;var r,i,a=n.call(t),o=[];try{for(;(void 0===e||e-- >0)&&!(r=a.next()).done;)o.push(r.value)}catch(t){i={error:t}}finally{try{r&&!r.done&&(n=a.return)&&n.call(a)}finally{if(i)throw i.error}}return o},a=this&&this.__spreadArray||function(t,e,n){if(n||2===arguments.length)for(var r,i=0,a=e.length;i<a;i++)!r&&i in e||(r||(r=Array.prototype.slice.call(e,0,i)),r[i]=e[i]);return t.concat(r||Array.prototype.slice.call(e))};Object.defineProperty(e,\\\"__esModule\\\",{value:!0}),e.ProgramManager=void 0;var o=n(955),c=n(75),u=function(){function t(t){this.backend=t,this.repo=new Map,this.attributesBound=!1}return t.prototype.getArtifact=function(t){return this.repo.get(t)},t.prototype.setArtifact=function(t,e){this.repo.set(t,e)},t.prototype.run=function(t,e,n,o){var c,u,s,l,f=this,p=this.backend.device,d=this.backend.getComputePassEncoder();this.backend.profilingEnabled&&d.writeTimestamp(this.backend.profilingQuerySet,0),d.setPipeline(t.computePipeline);var h=[];try{for(var v=r(e),m=v.next();!m.done;m=v.next()){var g=m.value;h.push({binding:h.length,resource:{buffer:g.buffer}})}}catch(t){c={error:t}}finally{try{m&&!m.done&&(u=v.return)&&u.call(v)}finally{if(c)throw c.error}}try{for(var y=r(n),w=y.next();!w.done;w=y.next()){var _=w.value;h.push({binding:h.length,resource:{buffer:_.buffer}})}}catch(t){s={error:t}}finally{try{w&&!w.done&&(l=y.return)&&l.call(y)}finally{if(s)throw s.error}}var b=p.createBindGroup({layout:t.computePipeline.getBindGroupLayout(0),entries:h});if(d.setBindGroup(0,b),d.dispatchWorkgroups.apply(d,a([],i(o),!1)),this.backend.pendingDispatchNumber++,this.backend.profilingEnabled){d.writeTimestamp(this.backend.profilingQuerySet,1);var S=this.backend.gpuDataManager.create(16,GPUBufferUsage.COPY_SRC|GPUBufferUsage.QUERY_RESOLVE),k=this.backend.gpuDataManager.create(16,GPUBufferUsage.MAP_READ|GPUBufferUsage.COPY_DST);this.backend.endComputePass(),this.backend.getCommandEncoder().resolveQuerySet(this.backend.profilingQuerySet,0,2,S.buffer,0),this.backend.getCommandEncoder().copyBufferToBuffer(S.buffer,0,k.buffer,0,16),this.backend.flush();var A=this.backend.currentKernelId,O=this.backend.kernels.get(A)[0];k.buffer.mapAsync(GPUMapMode.READ).then((function(){var t=new BigUint64Array(k.buffer.getMappedRange()),e=t[0],n=t[1];k.buffer.unmap(),void 0===f.backend.profilingTimeBase&&(f.backend.profilingTimeBase=e);var r=Number(e-f.backend.profilingTimeBase),i=Number(n-f.backend.profilingTimeBase);if(!Number.isSafeInteger(r)||!Number.isSafeInteger(i))throw new RangeError(\\\"incorrect timestamp range\\\");f.backend.gpuDataManager.release(S.id),f.backend.gpuDataManager.release(k.id),console.log('[profiling] kernel \\\"'.concat(A,\\\"|\\\").concat(O,'\\\" execution time: ').concat(i-r,\\\" ns\\\"))}))}this.backend.pendingDispatchNumber>=16&&this.backend.flush()},t.prototype.dispose=function(){},t.prototype.build=function(t,e){var n=this.backend.device,r=t.getShaderSource((0,c.createShaderHelper)(e)),i=n.createShaderModule({code:r});return(0,o.LOG_DEBUG)(\\\"verbose\\\",(function(){return\\\"[WebGPU] shader code: \\\".concat(r)})),{programInfo:t,computePipeline:n.createComputePipeline({compute:{module:i,entryPoint:\\\"main\\\"},layout:\\\"auto\\\"})}},t.prototype.normalizeDispatchGroupSize=function(t){var e=\\\"number\\\"==typeof t?t:t.x,n=\\\"number\\\"==typeof t?1:t.y||1,r=\\\"number\\\"==typeof t?1:t.z||1,i=this.backend.device.limits.maxComputeWorkgroupsPerDimension;if(e<=i&&n<=i&&r<=i)return[e,n,r];var a=e*n*r,o=Math.ceil(Math.sqrt(a));if(o>i){if((o=Math.ceil(Math.cbrt(a)))>i)throw new Error(\\\"Total dispatch size exceeds WebGPU maximum.\\\");return[o,o,o]}return[o,o,1]},t}();e.ProgramManager=u},163:function(t,e){\\\"use strict\\\";var n;Object.defineProperty(e,\\\"__esModule\\\",{value:!0}),e.GpuDataType=void 0,(n=e.GpuDataType||(e.GpuDataType={}))[n.default=0]=\\\"default\\\",n[n.upload=1]=\\\"upload\\\",n[n.profile=2]=\\\"profile\\\"},899:function(t,e){\\\"use strict\\\";var n=this&&this.__read||function(t,e){var n=\\\"function\\\"==typeof Symbol&&t[Symbol.iterator];if(!n)return t;var r,i,a=n.call(t),o=[];try{for(;(void 0===e||e-- >0)&&!(r=a.next()).done;)o.push(r.value)}catch(t){i={error:t}}finally{try{r&&!r.done&&(n=a.return)&&n.call(a)}finally{if(i)throw i.error}}return o};Object.defineProperty(e,\\\"__esModule\\\",{value:!0}),e.iterateExtraOptions=void 0,e.iterateExtraOptions=function(t,r,i,a){if(\\\"object\\\"==typeof t&&null!==t){if(i.has(t))throw new Error(\\\"Circular reference in options\\\");i.add(t)}Object.entries(t).forEach((function(t){var o=n(t,2),c=o[0],u=o[1],s=r?r+c:c;if(\\\"object\\\"==typeof u)(0,e.iterateExtraOptions)(u,s+\\\".\\\",i,a);else if(\\\"string\\\"==typeof u||\\\"number\\\"==typeof u)a(s,u.toString());else{if(\\\"boolean\\\"!=typeof u)throw new Error(\\\"Can't handle extra config type: \\\".concat(typeof u));a(s,u?\\\"1\\\":\\\"0\\\")}}))}},918:function(t,e,n){\\\"use strict\\\";Object.defineProperty(e,\\\"__esModule\\\",{value:!0}),e.setRunOptions=void 0;var r=n(899),i=n(444),a=n(263);e.setRunOptions=function(t){var e=(0,a.getInstance)(),n=0,o=[],c=t||{};try{if(void 0===(null==t?void 0:t.logSeverityLevel))c.logSeverityLevel=2;else if(\\\"number\\\"!=typeof t.logSeverityLevel||!Number.isInteger(t.logSeverityLevel)||t.logSeverityLevel<0||t.logSeverityLevel>4)throw new Error(\\\"log serverity level is not valid: \\\".concat(t.logSeverityLevel));if(void 0===(null==t?void 0:t.logVerbosityLevel))c.logVerbosityLevel=0;else if(\\\"number\\\"!=typeof t.logVerbosityLevel||!Number.isInteger(t.logVerbosityLevel))throw new Error(\\\"log verbosity level is not valid: \\\".concat(t.logVerbosityLevel));void 0===(null==t?void 0:t.terminate)&&(c.terminate=!1);var u=0;if(void 0!==(null==t?void 0:t.tag)&&(u=(0,i.allocWasmString)(t.tag,o)),0===(n=e._OrtCreateRunOptions(c.logSeverityLevel,c.logVerbosityLevel,!!c.terminate,u)))throw new Error(\\\"Can't create run options\\\");return void 0!==(null==t?void 0:t.extra)&&(0,r.iterateExtraOptions)(t.extra,\\\"\\\",new WeakSet,(function(t,r){var a=(0,i.allocWasmString)(t,o),c=(0,i.allocWasmString)(r,o);if(0!==e._OrtAddRunConfigEntry(n,a,c))throw new Error(\\\"Can't set a run config entry: \\\".concat(t,\\\" - \\\").concat(r))})),[n,o]}catch(t){throw 0!==n&&e._OrtReleaseRunOptions(n),o.forEach(e._free),t}}},622:function(t,e,n){\\\"use strict\\\";var r=this&&this.__values||function(t){var e=\\\"function\\\"==typeof Symbol&&Symbol.iterator,n=e&&t[e],r=0;if(n)return n.call(t);if(t&&\\\"number\\\"==typeof t.length)return{next:function(){return t&&r>=t.length&&(t=void 0),{value:t&&t[r++],done:!t}}};throw new TypeError(e?\\\"Object is not iterable.\\\":\\\"Symbol.iterator is not defined.\\\")};Object.defineProperty(e,\\\"__esModule\\\",{value:!0}),e.setSessionOptions=void 0;var i=n(899),a=n(444),o=n(263);e.setSessionOptions=function(t){var e,n,c,u,s=(0,o.getInstance)(),l=0,f=[],p=t||{};!function(t){t.extra||(t.extra={}),t.extra.session||(t.extra.session={});var e=t.extra.session;e.use_ort_model_bytes_directly||(e.use_ort_model_bytes_directly=\\\"1\\\"),t.executionProviders&&t.executionProviders.some((function(t){return\\\"webgpu\\\"===(\\\"string\\\"==typeof t?t:t.name)}))&&(t.enableMemPattern=!1)}(p);try{var d=function(t){switch(t){case\\\"disabled\\\":return 0;case\\\"basic\\\":return 1;case\\\"extended\\\":return 2;case\\\"all\\\":return 99;default:throw new Error(\\\"unsupported graph optimization level: \\\".concat(t))}}(null!==(e=p.graphOptimizationLevel)&&void 0!==e?e:\\\"all\\\"),h=function(t){switch(t){case\\\"sequential\\\":return 0;case\\\"parallel\\\":return 1;default:throw new Error(\\\"unsupported execution mode: \\\".concat(t))}}(null!==(n=p.executionMode)&&void 0!==n?n:\\\"sequential\\\"),v=\\\"string\\\"==typeof p.logId?(0,a.allocWasmString)(p.logId,f):0,m=null!==(c=p.logSeverityLevel)&&void 0!==c?c:2;if(!Number.isInteger(m)||m<0||m>4)throw new Error(\\\"log serverity level is not valid: \\\".concat(m));var g=null!==(u=p.logVerbosityLevel)&&void 0!==u?u:0;if(!Number.isInteger(g)||g<0||g>4)throw new Error(\\\"log verbosity level is not valid: \\\".concat(g));var y=\\\"string\\\"==typeof p.optimizedModelFilePath?(0,a.allocWasmString)(p.optimizedModelFilePath,f):0;if(0===(l=s._OrtCreateSessionOptions(d,!!p.enableCpuMemArena,!!p.enableMemPattern,h,!!p.enableProfiling,0,v,m,g,y)))throw new Error(\\\"Can't create session options\\\");return p.executionProviders&&function(t,e,n){var i,c;try{for(var u=r(e),s=u.next();!s.done;s=u.next()){var l=s.value,f=\\\"string\\\"==typeof l?l:l.name;switch(f){case\\\"xnnpack\\\":f=\\\"XNNPACK\\\";break;case\\\"webnn\\\":if(f=\\\"WEBNN\\\",\\\"string\\\"!=typeof l){var p=l;if(null==p?void 0:p.deviceType){var d=(0,a.allocWasmString)(\\\"deviceType\\\",n),h=(0,a.allocWasmString)(p.deviceType,n);if(0!==(0,o.getInstance)()._OrtAddSessionConfigEntry(t,d,h))throw new Error(\\\"Can't set a session config entry: 'deviceType' - \\\".concat(p.deviceType))}if((null==p?void 0:p.powerPreference)&&(d=(0,a.allocWasmString)(\\\"powerPreference\\\",n),h=(0,a.allocWasmString)(p.powerPreference,n),0!==(0,o.getInstance)()._OrtAddSessionConfigEntry(t,d,h)))throw new Error(\\\"Can't set a session config entry: 'powerPreference' - \\\".concat(p.powerPreference))}break;case\\\"webgpu\\\":f=\\\"JS\\\";break;case\\\"wasm\\\":case\\\"cpu\\\":continue;default:throw new Error(\\\"not supported EP: \\\".concat(f))}var v=(0,a.allocWasmString)(f,n);if(0!==(0,o.getInstance)()._OrtAppendExecutionProvider(t,v))throw new Error(\\\"Can't append execution provider: \\\".concat(f))}}catch(t){i={error:t}}finally{try{s&&!s.done&&(c=u.return)&&c.call(u)}finally{if(i)throw i.error}}}(l,p.executionProviders,f),void 0!==p.extra&&(0,i.iterateExtraOptions)(p.extra,\\\"\\\",new WeakSet,(function(t,e){var n=(0,a.allocWasmString)(t,f),r=(0,a.allocWasmString)(e,f);if(0!==s._OrtAddSessionConfigEntry(l,n,r))throw new Error(\\\"Can't set a session config entry: \\\".concat(t,\\\" - \\\").concat(e))})),[l,f]}catch(t){throw 0!==l&&s._OrtReleaseSessionOptions(l),f.forEach(s._free),t}}},444:function(t,e,n){\\\"use strict\\\";Object.defineProperty(e,\\\"__esModule\\\",{value:!0}),e.allocWasmString=void 0;var r=n(263);e.allocWasmString=function(t,e){var n=(0,r.getInstance)(),i=n.lengthBytesUTF8(t)+1,a=n._malloc(i);return n.stringToUTF8(t,a,i),e.push(a),a}},917:function(t,e){\\\"use strict\\\";Object.defineProperty(e,\\\"__esModule\\\",{value:!0}),e.logLevelStringToEnum=e.tensorTypeToTypedArrayConstructor=e.getTensorElementSize=e.tensorDataTypeEnumToString=e.tensorDataTypeStringToEnum=void 0,e.tensorDataTypeStringToEnum=function(t){switch(t){case\\\"int8\\\":return 3;case\\\"uint8\\\":return 2;case\\\"bool\\\":return 9;case\\\"int16\\\":return 5;case\\\"uint16\\\":return 4;case\\\"int32\\\":return 6;case\\\"uint32\\\":return 12;case\\\"float16\\\":return 10;case\\\"float32\\\":return 1;case\\\"float64\\\":return 11;case\\\"string\\\":return 8;case\\\"int64\\\":return 7;case\\\"uint64\\\":return 13;default:throw new Error(\\\"unsupported data type: \\\".concat(t))}},e.tensorDataTypeEnumToString=function(t){switch(t){case 3:return\\\"int8\\\";case 2:return\\\"uint8\\\";case 9:return\\\"bool\\\";case 5:return\\\"int16\\\";case 4:case 10:return\\\"uint16\\\";case 6:return\\\"int32\\\";case 12:return\\\"uint32\\\";case 1:return\\\"float32\\\";case 11:return\\\"float64\\\";case 8:return\\\"string\\\";case 7:return\\\"int64\\\";case 13:return\\\"uint64\\\";default:throw new Error(\\\"unsupported data type: \\\".concat(t))}},e.getTensorElementSize=function(t){return[void 0,4,1,1,2,2,4,8,void 0,1,2,8,4,8,void 0,void 0,void 0][t]},e.tensorTypeToTypedArrayConstructor=function(t){switch(t){case\\\"float32\\\":return Float32Array;case\\\"uint8\\\":case\\\"bool\\\":return Uint8Array;case\\\"int8\\\":return Int8Array;case\\\"uint16\\\":return Uint16Array;case\\\"int16\\\":return Int16Array;case\\\"int32\\\":return Int32Array;case\\\"float64\\\":return Float64Array;case\\\"uint32\\\":return Uint32Array;case\\\"int64\\\":return BigInt64Array;case\\\"uint64\\\":return BigUint64Array;default:throw new Error(\\\"unsupported type: \\\".concat(t))}},e.logLevelStringToEnum=function(t){switch(t){case\\\"verbose\\\":return 0;case\\\"info\\\":return 1;case\\\"warning\\\":return 2;case\\\"error\\\":return 3;case\\\"fatal\\\":return 4;default:throw new Error(\\\"unsupported logging level: \\\".concat(t))}}},259:function(t,e,n){\\\"use strict\\\";var r=this&&this.__awaiter||function(t,e,n,r){return new(n||(n=Promise))((function(i,a){function o(t){try{u(r.next(t))}catch(t){a(t)}}function c(t){try{u(r.throw(t))}catch(t){a(t)}}function u(t){var e;t.done?i(t.value):(e=t.value,e instanceof n?e:new n((function(t){t(e)}))).then(o,c)}u((r=r.apply(t,e||[])).next())}))},i=this&&this.__generator||function(t,e){var n,r,i,a,o={label:0,sent:function(){if(1&i[0])throw i[1];return i[1]},trys:[],ops:[]};return a={next:c(0),throw:c(1),return:c(2)},\\\"function\\\"==typeof Symbol&&(a[Symbol.iterator]=function(){return this}),a;function c(c){return function(u){return function(c){if(n)throw new TypeError(\\\"Generator is already executing.\\\");for(;a&&(a=0,c[0]&&(o=0)),o;)try{if(n=1,r&&(i=2&c[0]?r.return:c[0]?r.throw||((i=r.return)&&i.call(r),0):r.next)&&!(i=i.call(r,c[1])).done)return i;switch(r=0,i&&(c=[2&c[0],i.value]),c[0]){case 0:case 1:i=c;break;case 4:return o.label++,{value:c[1],done:!1};case 5:o.label++,r=c[1],c=[0];continue;case 7:c=o.ops.pop(),o.trys.pop();continue;default:if(!((i=(i=o.trys).length>0&&i[i.length-1])||6!==c[0]&&2!==c[0])){o=0;continue}if(3===c[0]&&(!i||c[1]>i[0]&&c[1]<i[3])){o.label=c[1];break}if(6===c[0]&&o.label<i[1]){o.label=i[1],i=c;break}if(i&&o.label<i[2]){o.label=i[2],o.ops.push(c);break}i[2]&&o.ops.pop(),o.trys.pop();continue}c=e.call(t,o)}catch(t){c=[6,t],r=0}finally{n=i=0}if(5&c[0])throw c[1];return{value:c[0]?c[1]:void 0,done:!0}}([c,u])}}},a=this&&this.__read||function(t,e){var n=\\\"function\\\"==typeof Symbol&&t[Symbol.iterator];if(!n)return t;var r,i,a=n.call(t),o=[];try{for(;(void 0===e||e-- >0)&&!(r=a.next()).done;)o.push(r.value)}catch(t){i={error:t}}finally{try{r&&!r.done&&(n=a.return)&&n.call(a)}finally{if(i)throw i.error}}return o},o=this&&this.__values||function(t){var e=\\\"function\\\"==typeof Symbol&&Symbol.iterator,n=e&&t[e],r=0;if(n)return n.call(t);if(t&&\\\"number\\\"==typeof t.length)return{next:function(){return t&&r>=t.length&&(t=void 0),{value:t&&t[r++],done:!t}}};throw new TypeError(e?\\\"Object is not iterable.\\\":\\\"Symbol.iterator is not defined.\\\")};Object.defineProperty(e,\\\"__esModule\\\",{value:!0}),e.extractTransferableBuffers=e.endProfiling=e.run=e.releaseSession=e.createSession=e.createSessionFinalize=e.createSessionAllocate=e.initRuntime=void 0;var c=n(675),u=n(918),s=n(622),l=n(444),f=n(917),p=n(263);e.initRuntime=function(t){return r(void 0,void 0,void 0,(function(){return i(this,(function(e){switch(e.label){case 0:return[4,(n=t.wasm.numThreads,a=(0,f.logLevelStringToEnum)(t.logLevel),r(void 0,void 0,void 0,(function(){var t;return i(this,(function(e){if(0!==(t=(0,p.getInstance)()._OrtInit(n,a)))throw new Error(\\\"Can't initialize onnxruntime. error code = \\\".concat(t));return[2]}))})))];case 1:return e.sent(),[4,(0,c.init)((0,p.getInstance)(),t)];case 2:return e.sent(),[2]}var n,a}))}))};var d=new Map;e.createSessionAllocate=function(t){var e=(0,p.getInstance)(),n=e._malloc(t.byteLength);return e.HEAPU8.set(t,n),[n,t.byteLength]},e.createSessionFinalize=function(t,e){var n,r=(0,p.getInstance)(),i=0,o=0,c=[];try{if(o=(n=a((0,s.setSessionOptions)(e),2))[0],c=n[1],0===(i=r._OrtCreateSession(t[0],t[1],o)))throw new Error(\\\"Can't create a session\\\")}finally{r._free(t[0]),0!==o&&r._OrtReleaseSessionOptions(o),c.forEach(r._free)}for(var u=r._OrtGetInputCount(i),l=r._OrtGetOutputCount(i),f=[],h=[],v=[],m=[],g=0;g<u;g++){var y=r._OrtGetInputName(i,g);if(0===y)throw new Error(\\\"Can't get an input name\\\");h.push(y),f.push(r.UTF8ToString(y))}for(g=0;g<l;g++){var w=r._OrtGetOutputName(i,g);if(0===w)throw new Error(\\\"Can't get an output name\\\");m.push(w),v.push(r.UTF8ToString(w))}return d.set(i,[i,h,m]),[i,f,v]},e.createSession=function(t,n){var r=(0,e.createSessionAllocate)(t);return(0,e.createSessionFinalize)(r,n)},e.releaseSession=function(t){var e=(0,p.getInstance)(),n=d.get(t);if(!n)throw new Error(\\\"invalid session id\\\");var r=n[0],i=n[1],a=n[2];i.forEach(e._OrtFree),a.forEach(e._OrtFree),e._OrtReleaseSession(r),d.delete(t)},e.run=function(t,e,n,o,c){return r(void 0,void 0,void 0,(function(){var r,s,h,v,m,g,y,w,_,b,S,k,A,O,C,T,P,E,x,j,M,R,I,D,U,G,B,W,z,F,L,H,N,K,Y,V,q,J,X,Z,Q,$,tt,et,nt;return i(this,(function(i){switch(i.label){case 0:if(r=(0,p.getInstance)(),!(s=d.get(t)))throw new Error(\\\"invalid session id\\\");h=s[0],v=s[1],m=s[2],g=e.length,y=o.length,w=0,_=[],b=[],S=[],i.label=1;case 1:for(i.trys.push([1,,7,8]),nt=a((0,u.setRunOptions)(c),2),w=nt[0],_=nt[1],k=function(t){var e=n[t][0],i=n[t][1],a=n[t][2],o=void 0,c=void 0;if(Array.isArray(a)){c=4*a.length,o=r._malloc(c),S.push(o);for(var u=o/4,s=0;s<a.length;s++){if(\\\"string\\\"!=typeof a[s])throw new TypeError(\\\"tensor data at index \\\".concat(s,\\\" is not a string\\\"));r.HEAPU32[u++]=(0,l.allocWasmString)(a[s],S)}}else c=a.byteLength,o=r._malloc(c),S.push(o),r.HEAPU8.set(new Uint8Array(a.buffer,a.byteOffset,c),o);var p=r.stackSave(),d=r.stackAlloc(4*i.length);try{var h=d/4;i.forEach((function(t){return r.HEAP32[h++]=t}));var v=r._OrtCreateTensor((0,f.tensorDataTypeStringToEnum)(e),o,c,d,i.length);if(0===v)throw new Error(\\\"Can't create a tensor\\\");b.push(v)}finally{r.stackRestore(p)}},U=0;U<g;U++)k(U);A=r.stackSave(),O=r.stackAlloc(4*g),C=r.stackAlloc(4*g),T=r.stackAlloc(4*y),P=r.stackAlloc(4*y),i.label=2;case 2:for(i.trys.push([2,,5,6]),E=O/4,x=C/4,j=T/4,M=P/4,U=0;U<g;U++)r.HEAPU32[E++]=b[U],r.HEAPU32[x++]=v[e[U]];for(U=0;U<y;U++)r.HEAPU32[j++]=0,r.HEAPU32[M++]=m[o[U]];return R=r._OrtRun(h,C,O,g,P,y,T,w),(I=r.jsepRunPromise)&&void 0!==I.then?[4,I]:[3,4];case 3:R=i.sent(),i.label=4;case 4:if(D=[],0===R)for(U=0;U<y;U++){G=r.HEAPU32[T/4+U],B=r.stackSave(),W=r.stackAlloc(16),z=void 0,F=0;try{if(0!==(R=r._OrtGetTensorData(G,W,W+4,W+8,W+12)))throw new Error(\\\"Can't access output tensor data. error code = \\\".concat(R));for(L=W/4,H=r.HEAPU32[L++],F=r.HEAPU32[L++],N=r.HEAPU32[L++],K=r.HEAPU32[L++],Y=[],V=0;V<K;V++)Y.push(r.HEAPU32[N/4+V]);if(r._OrtFree(N),q=0===Y.length?1:Y.reduce((function(t,e){return t*e})),\\\"string\\\"===(z=(0,f.tensorDataTypeEnumToString)(H))){for(J=[],X=F/4,Z=0;Z<q;Z++)Q=r.HEAPU32[X++],$=Z===q-1?void 0:r.HEAPU32[X]-Q,J.push(r.UTF8ToString(Q,$));D.push([z,Y,J])}else tt=(0,f.tensorTypeToTypedArrayConstructor)(z),et=new tt(q),new Uint8Array(et.buffer,et.byteOffset,et.byteLength).set(r.HEAPU8.subarray(F,F+et.byteLength)),D.push([z,Y,et])}finally{r.stackRestore(B),\\\"string\\\"===z&&F&&r._free(F),r._OrtReleaseTensor(G)}}if(0===R)return[2,D];throw new Error(\\\"failed to call OrtRun(). error code = \\\".concat(R,\\\".\\\"));case 5:return r.stackRestore(A),[7];case 6:return[3,8];case 7:return b.forEach(r._OrtReleaseTensor),S.forEach(r._free),r._OrtReleaseRunOptions(w),_.forEach(r._free),[7];case 8:return[2]}}))}))},e.endProfiling=function(t){var e=(0,p.getInstance)(),n=d.get(t);if(!n)throw new Error(\\\"invalid session id\\\");var r=n[0],i=e._OrtEndProfiling(r);if(0===i)throw new Error(\\\"Can't get an profile file name\\\");e._OrtFree(i)},e.extractTransferableBuffers=function(t){var e,n,r=[];try{for(var i=o(t),a=i.next();!a.done;a=i.next()){var c=a.value[2];!Array.isArray(c)&&c.buffer&&r.push(c.buffer)}}catch(t){e={error:t}}finally{try{a&&!a.done&&(n=i.return)&&n.call(i)}finally{if(e)throw e.error}}return r}},263:function(t,e,n){\\\"use strict\\\";var r=this&&this.__createBinding||(Object.create?function(t,e,n,r){void 0===r&&(r=n);var i=Object.getOwnPropertyDescriptor(e,n);i&&!(\\\"get\\\"in i?!e.__esModule:i.writable||i.configurable)||(i={enumerable:!0,get:function(){return e[n]}}),Object.defineProperty(t,r,i)}:function(t,e,n,r){void 0===r&&(r=n),t[r]=e[n]}),i=this&&this.__setModuleDefault||(Object.create?function(t,e){Object.defineProperty(t,\\\"default\\\",{enumerable:!0,value:e})}:function(t,e){t.default=e}),a=this&&this.__importStar||function(t){if(t&&t.__esModule)return t;var e={};if(null!=t)for(var n in t)\\\"default\\\"!==n&&Object.prototype.hasOwnProperty.call(t,n)&&r(e,t,n);return i(e,t),e},o=this&&this.__awaiter||function(t,e,n,r){return new(n||(n=Promise))((function(i,a){function o(t){try{u(r.next(t))}catch(t){a(t)}}function c(t){try{u(r.throw(t))}catch(t){a(t)}}function u(t){var e;t.done?i(t.value):(e=t.value,e instanceof n?e:new n((function(t){t(e)}))).then(o,c)}u((r=r.apply(t,e||[])).next())}))},c=this&&this.__generator||function(t,e){var n,r,i,a,o={label:0,sent:function(){if(1&i[0])throw i[1];return i[1]},trys:[],ops:[]};return a={next:c(0),throw:c(1),return:c(2)},\\\"function\\\"==typeof Symbol&&(a[Symbol.iterator]=function(){return this}),a;function c(c){return function(u){return function(c){if(n)throw new TypeError(\\\"Generator is already executing.\\\");for(;a&&(a=0,c[0]&&(o=0)),o;)try{if(n=1,r&&(i=2&c[0]?r.return:c[0]?r.throw||((i=r.return)&&i.call(r),0):r.next)&&!(i=i.call(r,c[1])).done)return i;switch(r=0,i&&(c=[2&c[0],i.value]),c[0]){case 0:case 1:i=c;break;case 4:return o.label++,{value:c[1],done:!1};case 5:o.label++,r=c[1],c=[0];continue;case 7:c=o.ops.pop(),o.trys.pop();continue;default:if(!((i=(i=o.trys).length>0&&i[i.length-1])||6!==c[0]&&2!==c[0])){o=0;continue}if(3===c[0]&&(!i||c[1]>i[0]&&c[1]<i[3])){o.label=c[1];break}if(6===c[0]&&o.label<i[1]){o.label=i[1],i=c;break}if(i&&o.label<i[2]){o.label=i[2],o.ops.push(c);break}i[2]&&o.ops.pop(),o.trys.pop();continue}c=e.call(t,o)}catch(t){c=[6,t],r=0}finally{n=i=0}if(5&c[0])throw c[1];return{value:c[0]?c[1]:void 0,done:!0}}([c,u])}}};Object.defineProperty(e,\\\"__esModule\\\",{value:!0}),e.dispose=e.getInstance=e.initializeWebAssembly=void 0;var u,s=a(n(449)),l=n(932),f=n(474),p=!1,d=!1,h=!1;e.initializeWebAssembly=function(t){return o(void 0,void 0,void 0,(function(){var e,r,i,a,o,v,m,g,y,w,_;return c(this,(function(c){switch(c.label){case 0:if(p)return[2,Promise.resolve()];if(d)throw new Error(\\\"multiple calls to 'initializeWebAssembly()' detected.\\\");if(h)throw new Error(\\\"previous call to 'initializeWebAssembly()' failed.\\\");return d=!0,e=t.initTimeout,r=t.numThreads,i=t.simd,a=r>1&&function(){try{return\\\"undefined\\\"!=typeof SharedArrayBuffer&&(\\\"undefined\\\"!=typeof MessageChannel&&(new MessageChannel).port1.postMessage(new SharedArrayBuffer(1)),WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,5,4,1,3,1,1,10,11,1,9,0,65,0,254,16,2,0,26,11])))}catch(t){return!1}}(),o=i&&function(){try{return WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,10,30,1,28,0,65,0,253,15,253,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,253,186,1,26,11]))}catch(t){return!1}}(),v=t.wasmPaths,m=\\\"string\\\"==typeof v?v:void 0,g=function(t,e){return e?t?\\\"ort-wasm-simd-threaded.wasm\\\":\\\"ort-wasm-threaded.wasm\\\":t?\\\"ort-wasm-simd.wasm\\\":\\\"ort-wasm.wasm\\\"}(o,a),y=\\\"object\\\"==typeof v?v[g]:void 0,w=!1,_=[],e>0&&_.push(new Promise((function(t){setTimeout((function(){w=!0,t()}),e)}))),_.push(new Promise((function(t,e){var r=a?f:l,i={locateFile:function(t,e){return a&&t.endsWith(\\\".worker.js\\\")&&\\\"undefined\\\"!=typeof Blob?URL.createObjectURL(new Blob([n(154)],{type:\\\"text/javascript\\\"})):t.endsWith(\\\".wasm\\\")?y||(null!=m?m:e)+g:e+t}};if(a)if(\\\"undefined\\\"==typeof Blob)i.mainScriptUrlOrBlob=s.join(\\\"/\\\",\\\"ort-wasm-threaded.js\\\");else{var o=\\\"var ortWasmThreaded=(function(){var _scriptDir;return \\\".concat(r.toString(),\\\"})();\\\");i.mainScriptUrlOrBlob=new Blob([o],{type:\\\"text/javascript\\\"})}r(i).then((function(e){d=!1,p=!0,u=e,t()}),(function(t){d=!1,h=!0,e(t)}))}))),[4,Promise.race(_)];case 1:if(c.sent(),w)throw new Error(\\\"WebAssembly backend initializing failed due to timeout: \\\".concat(e,\\\"ms\\\"));return[2]}}))}))},e.getInstance=function(){if(p&&u)return u;throw new Error(\\\"WebAssembly is not initialized yet.\\\")},e.dispose=function(){var t;!p||d||h||(d=!0,null===(t=u.PThread)||void 0===t||t.terminateAllThreads(),u=void 0,d=!1,p=!1,h=!0)}},474:function(t,e,n){var _scriptDir,r=(_scriptDir=(_scriptDir=\\\"undefined\\\"!=typeof document&&document.currentScript?document.currentScript.src:void 0)||\\\"/index.js\\\",function(t={}){function e(){return x.buffer!=R.buffer&&W(),R}function r(){return x.buffer!=R.buffer&&W(),I}function i(){return x.buffer!=R.buffer&&W(),D}function a(){return x.buffer!=R.buffer&&W(),U}function o(){return x.buffer!=R.buffer&&W(),G}var c,u,s;c||(c=void 0!==t?t:{}),c.ready=new Promise(((t,e)=>{u=t,s=e}));var l,f,p,d=Object.assign({},c),h=\\\"./this.program\\\",v=(t,e)=>{throw e},m=\\\"object\\\"==typeof window,g=\\\"function\\\"==typeof importScripts,y=\\\"object\\\"==typeof process&&\\\"object\\\"==typeof process.versions&&\\\"string\\\"==typeof process.versions.node,w=c.ENVIRONMENT_IS_PTHREAD||!1,_=\\\"\\\";function b(t){return c.locateFile?c.locateFile(t,_):_+t}if(y){var S=n(384),k=n(908);let e;_=g?k.dirname(_)+\\\"/\\\":\\\"//\\\",l=(t,e)=>(t=t.startsWith(\\\"file://\\\")?new URL(t):k.normalize(t),S.readFileSync(t,e?void 0:\\\"utf8\\\")),p=t=>((t=l(t,!0)).buffer||(t=new Uint8Array(t)),t),f=(t,e,n,r=!0)=>{t=t.startsWith(\\\"file://\\\")?new URL(t):k.normalize(t),S.readFile(t,r?void 0:\\\"utf8\\\",((t,i)=>{t?n(t):e(r?i.buffer:i)}))},!c.thisProgram&&1<process.argv.length&&(h=process.argv[1].replace(/\\\\\\\\/g,\\\"/\\\")),process.argv.slice(2),v=(t,e)=>{throw process.exitCode=t,e},c.inspect=()=>\\\"[Emscripten Module object]\\\";try{e=n(925)}catch(t){throw console.error('The \\\"worker_threads\\\" module is not supported in this node.js build - perhaps a newer version is needed?'),t}n.g.Worker=e.Worker}else(m||g)&&(g?_=self.location.href:\\\"undefined\\\"!=typeof document&&document.currentScript&&(_=document.currentScript.src),_scriptDir&&(_=_scriptDir),_=0!==_.indexOf(\\\"blob:\\\")?_.substr(0,_.replace(/[?#].*/,\\\"\\\").lastIndexOf(\\\"/\\\")+1):\\\"\\\",y||(l=t=>{var e=new XMLHttpRequest;return e.open(\\\"GET\\\",t,!1),e.send(null),e.responseText},g&&(p=t=>{var e=new XMLHttpRequest;return e.open(\\\"GET\\\",t,!1),e.responseType=\\\"arraybuffer\\\",e.send(null),new Uint8Array(e.response)}),f=(t,e,n)=>{var r=new XMLHttpRequest;r.open(\\\"GET\\\",t,!0),r.responseType=\\\"arraybuffer\\\",r.onload=()=>{200==r.status||0==r.status&&r.response?e(r.response):n()},r.onerror=n,r.send(null)}));y&&\\\"undefined\\\"==typeof performance&&(n.g.performance=n(953).performance);var A=console.log.bind(console),O=console.warn.bind(console);y&&(A=(...t)=>S.writeSync(1,t.join(\\\" \\\")+\\\"\\\\n\\\"),O=(...t)=>S.writeSync(2,t.join(\\\" \\\")+\\\"\\\\n\\\"));var C,T=c.print||A,P=c.printErr||O;Object.assign(c,d),d=null,c.thisProgram&&(h=c.thisProgram),c.quit&&(v=c.quit),c.wasmBinary&&(C=c.wasmBinary);var E=c.noExitRuntime||!0;\\\"object\\\"!=typeof WebAssembly&&Q(\\\"no native wasm support detected\\\");var x,j,M,R,I,D,U,G,B=!1;function W(){var t=x.buffer;c.HEAP8=R=new Int8Array(t),c.HEAP16=new Int16Array(t),c.HEAP32=D=new Int32Array(t),c.HEAPU8=I=new Uint8Array(t),c.HEAPU16=new Uint16Array(t),c.HEAPU32=U=new Uint32Array(t),c.HEAPF32=new Float32Array(t),c.HEAPF64=G=new Float64Array(t)}var z=c.INITIAL_MEMORY||16777216;if(5242880<=z||Q(\\\"INITIAL_MEMORY should be larger than STACK_SIZE, was \\\"+z+\\\"! (STACK_SIZE=5242880)\\\"),w)x=c.wasmMemory;else if(c.wasmMemory)x=c.wasmMemory;else if(!((x=new WebAssembly.Memory({initial:z/65536,maximum:65536,shared:!0})).buffer instanceof SharedArrayBuffer))throw P(\\\"requested a shared WebAssembly.Memory but the returned buffer is not a SharedArrayBuffer, indicating that while the browser has SharedArrayBuffer it does not have WebAssembly threads support - you may need to set a flag\\\"),y&&P(\\\"(on node you may need: --experimental-wasm-threads --experimental-wasm-bulk-memory and/or recent version)\\\"),Error(\\\"bad memory\\\");W(),z=x.buffer.byteLength;var F,L=[],H=[],N=[],K=0;function Y(){return E||0<K}function V(){var t=c.preRun.shift();L.unshift(t)}var q,J=0,X=null,Z=null;function Q(t){throw c.onAbort&&c.onAbort(t),P(t=\\\"Aborted(\\\"+t+\\\")\\\"),B=!0,M=1,t=new WebAssembly.RuntimeError(t+\\\". Build with -sASSERTIONS for more info.\\\"),s(t),t}function $(t){return t.startsWith(\\\"data:application/octet-stream;base64,\\\")}function tt(t){try{if(t==q&&C)return new Uint8Array(C);if(p)return p(t);throw\\\"both async and sync fetching of the wasm failed\\\"}catch(t){Q(t)}}function et(t,e,n){return function(t){if(!C&&(m||g)){if(\\\"function\\\"==typeof fetch&&!t.startsWith(\\\"file://\\\"))return fetch(t,{credentials:\\\"same-origin\\\"}).then((e=>{if(!e.ok)throw\\\"failed to load wasm binary file at '\\\"+t+\\\"'\\\";return e.arrayBuffer()})).catch((()=>tt(t)));if(f)return new Promise(((e,n)=>{f(t,(t=>e(new Uint8Array(t))),n)}))}return Promise.resolve().then((()=>tt(t)))}(t).then((t=>WebAssembly.instantiate(t,e))).then((t=>t)).then(n,(t=>{P(\\\"failed to asynchronously prepare wasm: \\\"+t),Q(t)}))}function nt(t){this.name=\\\"ExitStatus\\\",this.message=\\\"Program terminated with exit(\\\"+t+\\\")\\\",this.status=t}function rt(t){t.terminate(),t.onmessage=()=>{}}function it(t){(t=pt.Ha[t])||Q(),pt.hb(t)}function at(t){var e=pt.bb();if(!e)return 6;pt.Ka.push(e),pt.Ha[t.Ja]=e,e.Ja=t.Ja;var n={cmd:\\\"run\\\",start_routine:t.ib,arg:t.$a,pthread_ptr:t.Ja};return y&&e.unref(),e.postMessage(n,t.ob),0}$(q=\\\"ort-wasm-threaded.wasm\\\")||(q=b(q));var ot=\\\"undefined\\\"!=typeof TextDecoder?new TextDecoder(\\\"utf8\\\"):void 0;function ct(t,e,n){var r=(e>>>=0)+n;for(n=e;t[n]&&!(n>=r);)++n;if(16<n-e&&t.buffer&&ot)return ot.decode(t.buffer instanceof SharedArrayBuffer?t.slice(e,n):t.subarray(e,n));for(r=\\\"\\\";e<n;){var i=t[e++];if(128&i){var a=63&t[e++];if(192==(224&i))r+=String.fromCharCode((31&i)<<6|a);else{var o=63&t[e++];65536>(i=224==(240&i)?(15&i)<<12|a<<6|o:(7&i)<<18|a<<12|o<<6|63&t[e++])?r+=String.fromCharCode(i):(i-=65536,r+=String.fromCharCode(55296|i>>10,56320|1023&i))}}else r+=String.fromCharCode(i)}return r}function ut(t,e){return(t>>>=0)?ct(r(),t,e):\\\"\\\"}function st(t){if(w)return Yt(1,1,t);M=t,Y()||(pt.jb(),c.onExit&&c.onExit(t),B=!0),v(t,new nt(t))}function lt(t){if(M=t,w)throw ht(t),\\\"unwind\\\";st(t)}function ft(t){t instanceof nt||\\\"unwind\\\"==t||v(1,t)}var pt={Na:[],Ka:[],Va:[],Ha:{},Ra:function(){w&&pt.cb()},rb:function(){},cb:function(){pt.receiveObjectTransfer=pt.gb,pt.threadInitTLS=pt.Ua,pt.setExitStatus=pt.Ta,E=!1},Ta:function(t){M=t},tb:[\\\"$terminateWorker\\\"],jb:function(){for(var t of pt.Ka)rt(t);for(t of pt.Na)rt(t);pt.Na=[],pt.Ka=[],pt.Ha=[]},hb:function(t){var e=t.Ja;delete pt.Ha[e],pt.Na.push(t),pt.Ka.splice(pt.Ka.indexOf(t),1),t.Ja=0,he(e)},gb:function(){},Ua:function(){pt.Va.forEach((t=>t()))},fb:t=>new Promise((e=>{t.onmessage=n=>{var r=(n=n.data).cmd;if(t.Ja&&(pt.ab=t.Ja),n.targetThread&&n.targetThread!=le()){var i=pt.Ha[n.sb];i?i.postMessage(n,n.transferList):P('Internal error! Worker sent a message \\\"'+r+'\\\" to target pthread '+n.targetThread+\\\", but that thread no longer exists!\\\")}else\\\"checkMailbox\\\"===r?Ut():\\\"spawnThread\\\"===r?at(n):\\\"cleanupThread\\\"===r?it(n.thread):\\\"killThread\\\"===r?(n=n.thread,r=pt.Ha[n],delete pt.Ha[n],rt(r),he(n),pt.Ka.splice(pt.Ka.indexOf(r),1),r.Ja=0):\\\"cancelThread\\\"===r?pt.Ha[n.thread].postMessage({cmd:\\\"cancel\\\"}):\\\"loaded\\\"===r?(t.loaded=!0,e(t)):\\\"print\\\"===r?T(\\\"Thread \\\"+n.threadId+\\\": \\\"+n.text):\\\"printErr\\\"===r?P(\\\"Thread \\\"+n.threadId+\\\": \\\"+n.text):\\\"alert\\\"===r?alert(\\\"Thread \\\"+n.threadId+\\\": \\\"+n.text):\\\"setimmediate\\\"===n.target?t.postMessage(n):\\\"callHandler\\\"===r?c[n.handler](...n.args):r&&P(\\\"worker sent an unknown command \\\"+r);pt.ab=void 0},t.onerror=t=>{throw P(\\\"worker sent an error! \\\"+t.filename+\\\":\\\"+t.lineno+\\\": \\\"+t.message),t},y&&(t.on(\\\"message\\\",(function(e){t.onmessage({data:e})})),t.on(\\\"error\\\",(function(e){t.onerror(e)})));var n,r=[];for(n of[\\\"onExit\\\",\\\"onAbort\\\",\\\"print\\\",\\\"printErr\\\"])c.hasOwnProperty(n)&&r.push(n);t.postMessage({cmd:\\\"load\\\",handlers:r,urlOrBlob:c.mainScriptUrlOrBlob||_scriptDir,wasmMemory:x,wasmModule:j})})),eb:function(t){t()},Za:function(){var t=b(\\\"ort-wasm-threaded.worker.js\\\");t=new Worker(t),pt.Na.push(t)},bb:function(){return 0==pt.Na.length&&(pt.Za(),pt.fb(pt.Na[0])),pt.Na.pop()}};function dt(t){for(;0<t.length;)t.shift()(c)}function ht(t){if(w)return Yt(2,0,t);lt(t)}c.PThread=pt,c.establishStackSpace=function(){var t=le(),e=i()[t+52>>2>>>0];ye(e,e-(t=i()[t+56>>2>>>0])),_e(e)};var vt=[];function mt(t){this.Qa=t-24,this.Ya=function(t){a()[this.Qa+4>>2>>>0]=t},this.Xa=function(t){a()[this.Qa+8>>2>>>0]=t},this.Ra=function(t,e){this.Wa(),this.Ya(t),this.Xa(e)},this.Wa=function(){a()[this.Qa+16>>2>>>0]=0}}function gt(t,e,n,r){return w?Yt(3,1,t,e,n,r):yt(t,e,n,r)}function yt(t,e,n,r){if(\\\"undefined\\\"==typeof SharedArrayBuffer)return P(\\\"Current environment does not support SharedArrayBuffer, pthreads are not available!\\\"),6;var i=[];return w&&0===i.length?gt(t,e,n,r):(t={ib:n,Ja:t,$a:r,ob:i},w?(t.qb=\\\"spawnThread\\\",postMessage(t,i),0):at(t))}function wt(t,e,n){return w?Yt(4,1,t,e,n):0}function _t(t,e){if(w)return Yt(5,1,t,e)}function bt(t){for(var e=0,n=0;n<t.length;++n){var r=t.charCodeAt(n);127>=r?e++:2047>=r?e+=2:55296<=r&&57343>=r?(e+=4,++n):e+=3}return e}function St(t,e,n,r){if(!(0<r))return 0;var i=n>>>=0;r=n+r-1;for(var a=0;a<t.length;++a){var o=t.charCodeAt(a);if(55296<=o&&57343>=o&&(o=65536+((1023&o)<<10)|1023&t.charCodeAt(++a)),127>=o){if(n>=r)break;e[n++>>>0]=o}else{if(2047>=o){if(n+1>=r)break;e[n++>>>0]=192|o>>6}else{if(65535>=o){if(n+2>=r)break;e[n++>>>0]=224|o>>12}else{if(n+3>=r)break;e[n++>>>0]=240|o>>18,e[n++>>>0]=128|o>>12&63}e[n++>>>0]=128|o>>6&63}e[n++>>>0]=128|63&o}}return e[n>>>0]=0,n-i}function kt(t,e,n){return St(t,r(),e,n)}function At(t,e){if(w)return Yt(6,1,t,e)}function Ot(t,e,n){if(w)return Yt(7,1,t,e,n)}function Ct(t,e,n){return w?Yt(8,1,t,e,n):0}function Tt(t,e){if(w)return Yt(9,1,t,e)}function Pt(t,e,n){if(w)return Yt(10,1,t,e,n)}function Et(t,e,n,r){if(w)return Yt(11,1,t,e,n,r)}function xt(t,e,n,r){if(w)return Yt(12,1,t,e,n,r)}function jt(t,e,n,r){if(w)return Yt(13,1,t,e,n,r)}function Mt(t){if(w)return Yt(14,1,t)}function Rt(t,e){if(w)return Yt(15,1,t,e)}function It(t,e,n){if(w)return Yt(16,1,t,e,n)}function Dt(t){\\\"function\\\"==typeof Atomics.pb&&(Atomics.pb(i(),t>>2,t).value.then(Ut),t+=128,Atomics.store(i(),t>>2,1))}function Ut(){var t=le();t&&(Dt(t),function(t){if(!B)try{if(ge(),!Y())try{w?me(M):lt(M)}catch(t){ft(t)}}catch(t){ft(t)}}())}function Gt(t){return a()[t>>>2]+4294967296*i()[t+4>>>2]}function Bt(t){return 0==t%4&&(0!=t%100||0==t%400)}c.invokeEntryPoint=function(t,e){var n=vt[t];n||(t>=vt.length&&(vt.length=t+1),vt[t]=n=F.get(t)),t=n(e),Y()?pt.Ta(t):me(t)},c.__emscripten_thread_mailbox_await=Dt,c.checkMailbox=Ut;var Wt,zt=[0,31,60,91,121,152,182,213,244,274,305,335],Ft=[0,31,59,90,120,151,181,212,243,273,304,334];function Lt(t){return(Bt(t.getFullYear())?zt:Ft)[t.getMonth()]+t.getDate()-1}function Ht(t,e,n,r,i,a,o){return w?Yt(17,1,t,e,n,r,i,a,o):-52}function Nt(t,e,n,r,i,a){if(w)return Yt(18,1,t,e,n,r,i,a)}function Kt(t){var e=bt(t)+1,n=fe(e);return n&&kt(t,n,e),n}function Yt(t,e){var n=arguments.length-2,r=arguments;return function(t){var e=we();return t=t(),_e(e),t}((()=>{for(var i=be(8*n),a=i>>3,c=0;c<n;c++){var u=r[2+c];o()[a+c>>>0]=u}return de(t,n,i,e)}))}Wt=y?()=>{var t=process.hrtime();return 1e3*t[0]+t[1]/1e6}:()=>performance.timeOrigin+performance.now();var Vt,qt=[],Jt={};function Xt(){if(!Vt){var t,e={USER:\\\"web_user\\\",LOGNAME:\\\"web_user\\\",PATH:\\\"/\\\",PWD:\\\"/\\\",HOME:\\\"/home/web_user\\\",LANG:(\\\"object\\\"==typeof navigator&&navigator.languages&&navigator.languages[0]||\\\"C\\\").replace(\\\"-\\\",\\\"_\\\")+\\\".UTF-8\\\",_:h||\\\"./this.program\\\"};for(t in Jt)void 0===Jt[t]?delete e[t]:e[t]=Jt[t];var n=[];for(t in e)n.push(t+\\\"=\\\"+e[t]);Vt=n}return Vt}function Zt(t,n){if(w)return Yt(19,1,t,n);var r=0;return Xt().forEach((function(i,o){var c=n+r;for(o=a()[t+4*o>>2>>>0]=c,c=0;c<i.length;++c)e()[o++>>0>>>0]=i.charCodeAt(c);e()[o>>0>>>0]=0,r+=i.length+1})),0}function Qt(t,e){if(w)return Yt(20,1,t,e);var n=Xt();a()[t>>2>>>0]=n.length;var r=0;return n.forEach((function(t){r+=t.length+1})),a()[e>>2>>>0]=r,0}function $t(t){return w?Yt(21,1,t):52}function te(t,e,n,r){return w?Yt(22,1,t,e,n,r):52}function ee(t,e,n,r,i){return w?Yt(23,1,t,e,n,r,i):70}var ne=[null,[],[]];function re(t,e,n,i){if(w)return Yt(24,1,t,e,n,i);for(var o=0,c=0;c<n;c++){var u=a()[e>>2>>>0],s=a()[e+4>>2>>>0];e+=8;for(var l=0;l<s;l++){var f=r()[u+l>>>0],p=ne[t];0===f||10===f?((1===t?T:P)(ct(p,0)),p.length=0):p.push(f)}o+=s}return a()[i>>2>>>0]=o,0}function ie(t){return(ie=function(){if(\\\"object\\\"==typeof crypto&&\\\"function\\\"==typeof crypto.getRandomValues)return t=>(t.set(crypto.getRandomValues(new Uint8Array(t.byteLength))),t);if(y)try{var t=n(760);if(t.randomFillSync)return e=>t.randomFillSync(e);var e=t.randomBytes;return t=>(t.set(e(t.byteLength)),t)}catch(t){}Q(\\\"initRandomDevice\\\")}())(t)}var ae=[31,29,31,30,31,30,31,31,30,31,30,31],oe=[31,28,31,30,31,30,31,31,30,31,30,31];function ce(t,n,r,a){function o(t,e,n){for(t=\\\"number\\\"==typeof t?t.toString():t||\\\"\\\";t.length<e;)t=n[0]+t;return t}function c(t,e){return o(t,e,\\\"0\\\")}function u(t,e){function n(t){return 0>t?-1:0<t?1:0}var r;return 0===(r=n(t.getFullYear()-e.getFullYear()))&&0===(r=n(t.getMonth()-e.getMonth()))&&(r=n(t.getDate()-e.getDate())),r}function s(t){switch(t.getDay()){case 0:return new Date(t.getFullYear()-1,11,29);case 1:return t;case 2:return new Date(t.getFullYear(),0,3);case 3:return new Date(t.getFullYear(),0,2);case 4:return new Date(t.getFullYear(),0,1);case 5:return new Date(t.getFullYear()-1,11,31);case 6:return new Date(t.getFullYear()-1,11,30)}}function l(t){var e=t.La;for(t=new Date(new Date(t.Ma+1900,0,1).getTime());0<e;){var n=t.getMonth(),r=(Bt(t.getFullYear())?ae:oe)[n];if(!(e>r-t.getDate())){t.setDate(t.getDate()+e);break}e-=r-t.getDate()+1,t.setDate(1),11>n?t.setMonth(n+1):(t.setMonth(0),t.setFullYear(t.getFullYear()+1))}return n=new Date(t.getFullYear()+1,0,4),e=s(new Date(t.getFullYear(),0,4)),n=s(n),0>=u(e,t)?0>=u(n,t)?t.getFullYear()+1:t.getFullYear():t.getFullYear()-1}var f=i()[a+40>>2>>>0];for(var p in a={mb:i()[a>>2>>>0],lb:i()[a+4>>2>>>0],Oa:i()[a+8>>2>>>0],Sa:i()[a+12>>2>>>0],Pa:i()[a+16>>2>>>0],Ma:i()[a+20>>2>>>0],Ia:i()[a+24>>2>>>0],La:i()[a+28>>2>>>0],ub:i()[a+32>>2>>>0],kb:i()[a+36>>2>>>0],nb:f?ut(f):\\\"\\\"},r=ut(r),f={\\\"%c\\\":\\\"%a %b %d %H:%M:%S %Y\\\",\\\"%D\\\":\\\"%m/%d/%y\\\",\\\"%F\\\":\\\"%Y-%m-%d\\\",\\\"%h\\\":\\\"%b\\\",\\\"%r\\\":\\\"%I:%M:%S %p\\\",\\\"%R\\\":\\\"%H:%M\\\",\\\"%T\\\":\\\"%H:%M:%S\\\",\\\"%x\\\":\\\"%m/%d/%y\\\",\\\"%X\\\":\\\"%H:%M:%S\\\",\\\"%Ec\\\":\\\"%c\\\",\\\"%EC\\\":\\\"%C\\\",\\\"%Ex\\\":\\\"%m/%d/%y\\\",\\\"%EX\\\":\\\"%H:%M:%S\\\",\\\"%Ey\\\":\\\"%y\\\",\\\"%EY\\\":\\\"%Y\\\",\\\"%Od\\\":\\\"%d\\\",\\\"%Oe\\\":\\\"%e\\\",\\\"%OH\\\":\\\"%H\\\",\\\"%OI\\\":\\\"%I\\\",\\\"%Om\\\":\\\"%m\\\",\\\"%OM\\\":\\\"%M\\\",\\\"%OS\\\":\\\"%S\\\",\\\"%Ou\\\":\\\"%u\\\",\\\"%OU\\\":\\\"%U\\\",\\\"%OV\\\":\\\"%V\\\",\\\"%Ow\\\":\\\"%w\\\",\\\"%OW\\\":\\\"%W\\\",\\\"%Oy\\\":\\\"%y\\\"})r=r.replace(new RegExp(p,\\\"g\\\"),f[p]);var d=\\\"Sunday Monday Tuesday Wednesday Thursday Friday Saturday\\\".split(\\\" \\\"),h=\\\"January February March April May June July August September October November December\\\".split(\\\" \\\");for(p in f={\\\"%a\\\":function(t){return d[t.Ia].substring(0,3)},\\\"%A\\\":function(t){return d[t.Ia]},\\\"%b\\\":function(t){return h[t.Pa].substring(0,3)},\\\"%B\\\":function(t){return h[t.Pa]},\\\"%C\\\":function(t){return c((t.Ma+1900)/100|0,2)},\\\"%d\\\":function(t){return c(t.Sa,2)},\\\"%e\\\":function(t){return o(t.Sa,2,\\\" \\\")},\\\"%g\\\":function(t){return l(t).toString().substring(2)},\\\"%G\\\":function(t){return l(t)},\\\"%H\\\":function(t){return c(t.Oa,2)},\\\"%I\\\":function(t){return 0==(t=t.Oa)?t=12:12<t&&(t-=12),c(t,2)},\\\"%j\\\":function(t){for(var e=0,n=0;n<=t.Pa-1;e+=(Bt(t.Ma+1900)?ae:oe)[n++]);return c(t.Sa+e,3)},\\\"%m\\\":function(t){return c(t.Pa+1,2)},\\\"%M\\\":function(t){return c(t.lb,2)},\\\"%n\\\":function(){return\\\"\\\\n\\\"},\\\"%p\\\":function(t){return 0<=t.Oa&&12>t.Oa?\\\"AM\\\":\\\"PM\\\"},\\\"%S\\\":function(t){return c(t.mb,2)},\\\"%t\\\":function(){return\\\"\\\\t\\\"},\\\"%u\\\":function(t){return t.Ia||7},\\\"%U\\\":function(t){return c(Math.floor((t.La+7-t.Ia)/7),2)},\\\"%V\\\":function(t){var e=Math.floor((t.La+7-(t.Ia+6)%7)/7);if(2>=(t.Ia+371-t.La-2)%7&&e++,e)53==e&&(4==(n=(t.Ia+371-t.La)%7)||3==n&&Bt(t.Ma)||(e=1));else{e=52;var n=(t.Ia+7-t.La-1)%7;(4==n||5==n&&Bt(t.Ma%400-1))&&e++}return c(e,2)},\\\"%w\\\":function(t){return t.Ia},\\\"%W\\\":function(t){return c(Math.floor((t.La+7-(t.Ia+6)%7)/7),2)},\\\"%y\\\":function(t){return(t.Ma+1900).toString().substring(2)},\\\"%Y\\\":function(t){return t.Ma+1900},\\\"%z\\\":function(t){var e=0<=(t=t.kb);return t=Math.abs(t)/60,(e?\\\"+\\\":\\\"-\\\")+String(\\\"0000\\\"+(t/60*100+t%60)).slice(-4)},\\\"%Z\\\":function(t){return t.nb},\\\"%%\\\":function(){return\\\"%\\\"}},r=r.replace(/%%/g,\\\"\\\\0\\\\0\\\"),f)r.includes(p)&&(r=r.replace(new RegExp(p,\\\"g\\\"),f[p](a)));return p=function(t){var e=Array(bt(t)+1);return St(t,e,0,e.length),e}(r=r.replace(/\\\\0\\\\0/g,\\\"%\\\")),p.length>n?0:(function(t,n){e().set(t,n>>>0)}(p,t),p.length-1)}pt.Ra();var ue=[null,st,ht,gt,wt,_t,At,Ot,Ct,Tt,Pt,Et,xt,jt,Mt,Rt,It,Ht,Nt,Zt,Qt,$t,te,ee,re],se={b:function(t,e,n){throw new mt(t).Ra(e,n),t},p:function(){Q(\\\"To use dlopen, you need enable dynamic linking, see https://emscripten.org/docs/compiling/Dynamic-Linking.html\\\")},N:function(t){pe(t,!g,1,!m),pt.Ua()},k:function(t){w?postMessage({cmd:\\\"cleanupThread\\\",thread:t}):it(t)},C:yt,h:wt,U:_t,y:At,B:Ot,V:Ct,R:Tt,J:Pt,Q:Et,o:xt,A:jt,w:Mt,T:Rt,x:It,D:function(){return 131072},Y:function(){return!0},u:function(t,e){t==e?setTimeout((()=>Ut())):w?postMessage({targetThread:t,cmd:\\\"checkMailbox\\\"}):(t=pt.Ha[t])&&t.postMessage({cmd:\\\"checkMailbox\\\"})},L:function(){return-1},M:Dt,X:function(t){y&&pt.Ha[t].ref()},G:function(t,e){t=new Date(1e3*Gt(t)),i()[e>>2>>>0]=t.getUTCSeconds(),i()[e+4>>2>>>0]=t.getUTCMinutes(),i()[e+8>>2>>>0]=t.getUTCHours(),i()[e+12>>2>>>0]=t.getUTCDate(),i()[e+16>>2>>>0]=t.getUTCMonth(),i()[e+20>>2>>>0]=t.getUTCFullYear()-1900,i()[e+24>>2>>>0]=t.getUTCDay(),t=(t.getTime()-Date.UTC(t.getUTCFullYear(),0,1,0,0,0,0))/864e5|0,i()[e+28>>2>>>0]=t},H:function(t,e){t=new Date(1e3*Gt(t)),i()[e>>2>>>0]=t.getSeconds(),i()[e+4>>2>>>0]=t.getMinutes(),i()[e+8>>2>>>0]=t.getHours(),i()[e+12>>2>>>0]=t.getDate(),i()[e+16>>2>>>0]=t.getMonth(),i()[e+20>>2>>>0]=t.getFullYear()-1900,i()[e+24>>2>>>0]=t.getDay();var n=0|Lt(t);i()[e+28>>2>>>0]=n,i()[e+36>>2>>>0]=-60*t.getTimezoneOffset(),n=new Date(t.getFullYear(),6,1).getTimezoneOffset();var r=new Date(t.getFullYear(),0,1).getTimezoneOffset();t=0|(n!=r&&t.getTimezoneOffset()==Math.min(r,n)),i()[e+32>>2>>>0]=t},I:function(t){var e=new Date(i()[t+20>>2>>>0]+1900,i()[t+16>>2>>>0],i()[t+12>>2>>>0],i()[t+8>>2>>>0],i()[t+4>>2>>>0],i()[t>>2>>>0],0),n=i()[t+32>>2>>>0],r=e.getTimezoneOffset(),a=new Date(e.getFullYear(),6,1).getTimezoneOffset(),o=new Date(e.getFullYear(),0,1).getTimezoneOffset(),c=Math.min(o,a);return 0>n?i()[t+32>>2>>>0]=Number(a!=o&&c==r):0<n!=(c==r)&&(a=Math.max(o,a),e.setTime(e.getTime()+6e4*((0<n?c:a)-r))),i()[t+24>>2>>>0]=e.getDay(),n=0|Lt(e),i()[t+28>>2>>>0]=n,i()[t>>2>>>0]=e.getSeconds(),i()[t+4>>2>>>0]=e.getMinutes(),i()[t+8>>2>>>0]=e.getHours(),i()[t+12>>2>>>0]=e.getDate(),i()[t+16>>2>>>0]=e.getMonth(),i()[t+20>>2>>>0]=e.getYear(),e.getTime()/1e3|0},E:Ht,F:Nt,t:function(t,e,n){function r(t){return(t=t.toTimeString().match(/\\\\(([A-Za-z ]+)\\\\)$/))?t[1]:\\\"GMT\\\"}var o=(new Date).getFullYear(),c=new Date(o,0,1),u=new Date(o,6,1);o=c.getTimezoneOffset();var s=u.getTimezoneOffset(),l=Math.max(o,s);a()[t>>2>>>0]=60*l,i()[e>>2>>>0]=Number(o!=s),t=r(c),e=r(u),t=Kt(t),e=Kt(e),s<o?(a()[n>>2>>>0]=t,a()[n+4>>2>>>0]=e):(a()[n>>2>>>0]=e,a()[n+4>>2>>>0]=t)},c:function(){Q(\\\"\\\")},S:function(){Q(\\\"To use dlopen, you need enable dynamic linking, see https://emscripten.org/docs/compiling/Dynamic-Linking.html\\\")},l:function(){},i:function(){return Date.now()},W:function(){throw K+=1,\\\"unwind\\\"},v:function(){return 4294901760},e:Wt,f:function(){return y?n(993).cpus().length:navigator.hardwareConcurrency},K:function(t,e,n){qt.length=e,n>>=3;for(var r=0;r<e;r++)qt[r]=o()[n+r>>>0];return ue[t].apply(null,qt)},s:function(t){var e=r().length;if((t>>>=0)<=e||4294901760<t)return!1;for(var n=1;4>=n;n*=2){var i=e*(1+.2/n);i=Math.min(i,t+100663296);var a=Math,o=a.min;i=Math.max(t,i),i+=(65536-i%65536)%65536;t:{var c=x.buffer;try{x.grow(o.call(a,4294901760,i)-c.byteLength+65535>>>16),W();var u=1;break t}catch(t){}u=void 0}if(u)return!0}return!1},O:Zt,P:Qt,j:lt,g:$t,n:te,q:ee,m:re,r:function(t,e){return ie(r().subarray(t>>>0,t+e>>>0)),0},a:x||c.wasmMemory,z:ce,d:function(t,e,n,r){return ce(t,e,n,r)}};!function(){function t(t,e){return t=t.exports,c.asm=t,pt.Va.push(c.asm.va),F=c.asm.wa,H.unshift(c.asm.Z),j=e,pt.eb((()=>{if(J--,c.monitorRunDependencies&&c.monitorRunDependencies(J),0==J&&(null!==X&&(clearInterval(X),X=null),Z)){var t=Z;Z=null,t()}})),t}var e={a:se};if(J++,c.monitorRunDependencies&&c.monitorRunDependencies(J),c.instantiateWasm)try{return c.instantiateWasm(e,t)}catch(t){P(\\\"Module.instantiateWasm callback failed with error: \\\"+t),s(t)}(function(t,e){var n=q;return C||\\\"function\\\"!=typeof WebAssembly.instantiateStreaming||$(n)||n.startsWith(\\\"file://\\\")||y||\\\"function\\\"!=typeof fetch?et(n,t,e):fetch(n,{credentials:\\\"same-origin\\\"}).then((r=>WebAssembly.instantiateStreaming(r,t).then(e,(function(r){return P(\\\"wasm streaming compile failed: \\\"+r),P(\\\"falling back to ArrayBuffer instantiation\\\"),et(n,t,e)}))))})(e,(function(e){t(e.instance,e.module)})).catch(s)}(),c._OrtInit=function(){return(c._OrtInit=c.asm._).apply(null,arguments)},c._OrtCreateSessionOptions=function(){return(c._OrtCreateSessionOptions=c.asm.$).apply(null,arguments)},c._OrtAppendExecutionProvider=function(){return(c._OrtAppendExecutionProvider=c.asm.aa).apply(null,arguments)},c._OrtAddSessionConfigEntry=function(){return(c._OrtAddSessionConfigEntry=c.asm.ba).apply(null,arguments)},c._OrtReleaseSessionOptions=function(){return(c._OrtReleaseSessionOptions=c.asm.ca).apply(null,arguments)},c._OrtCreateSession=function(){return(c._OrtCreateSession=c.asm.da).apply(null,arguments)},c._OrtReleaseSession=function(){return(c._OrtReleaseSession=c.asm.ea).apply(null,arguments)},c._OrtGetInputCount=function(){return(c._OrtGetInputCount=c.asm.fa).apply(null,arguments)},c._OrtGetOutputCount=function(){return(c._OrtGetOutputCount=c.asm.ga).apply(null,arguments)},c._OrtGetInputName=function(){return(c._OrtGetInputName=c.asm.ha).apply(null,arguments)},c._OrtGetOutputName=function(){return(c._OrtGetOutputName=c.asm.ia).apply(null,arguments)},c._OrtFree=function(){return(c._OrtFree=c.asm.ja).apply(null,arguments)},c._OrtCreateTensor=function(){return(c._OrtCreateTensor=c.asm.ka).apply(null,arguments)},c._OrtGetTensorData=function(){return(c._OrtGetTensorData=c.asm.la).apply(null,arguments)},c._OrtReleaseTensor=function(){return(c._OrtReleaseTensor=c.asm.ma).apply(null,arguments)},c._OrtCreateRunOptions=function(){return(c._OrtCreateRunOptions=c.asm.na).apply(null,arguments)},c._OrtAddRunConfigEntry=function(){return(c._OrtAddRunConfigEntry=c.asm.oa).apply(null,arguments)},c._OrtReleaseRunOptions=function(){return(c._OrtReleaseRunOptions=c.asm.pa).apply(null,arguments)},c._OrtRun=function(){return(c._OrtRun=c.asm.qa).apply(null,arguments)},c._OrtEndProfiling=function(){return(c._OrtEndProfiling=c.asm.ra).apply(null,arguments)};var le=c._pthread_self=function(){return(le=c._pthread_self=c.asm.sa).apply(null,arguments)},fe=c._malloc=function(){return(fe=c._malloc=c.asm.ta).apply(null,arguments)};c._free=function(){return(c._free=c.asm.ua).apply(null,arguments)},c.__emscripten_tls_init=function(){return(c.__emscripten_tls_init=c.asm.va).apply(null,arguments)};var pe=c.__emscripten_thread_init=function(){return(pe=c.__emscripten_thread_init=c.asm.xa).apply(null,arguments)};function de(){return(de=c.asm.za).apply(null,arguments)}function he(){return(he=c.asm.Aa).apply(null,arguments)}c.__emscripten_thread_crashed=function(){return(c.__emscripten_thread_crashed=c.asm.ya).apply(null,arguments)};var ve,me=c.__emscripten_thread_exit=function(){return(me=c.__emscripten_thread_exit=c.asm.Ba).apply(null,arguments)},ge=c.__emscripten_check_mailbox=function(){return(ge=c.__emscripten_check_mailbox=c.asm.Ca).apply(null,arguments)};function ye(){return(ye=c.asm.Da).apply(null,arguments)}function we(){return(we=c.asm.Ea).apply(null,arguments)}function _e(){return(_e=c.asm.Fa).apply(null,arguments)}function be(){return(be=c.asm.Ga).apply(null,arguments)}function Se(){function t(){if(!ve&&(ve=!0,c.calledRun=!0,!B)&&(w||dt(H),u(c),c.onRuntimeInitialized&&c.onRuntimeInitialized(),!w)){if(c.postRun)for(\\\"function\\\"==typeof c.postRun&&(c.postRun=[c.postRun]);c.postRun.length;){var t=c.postRun.shift();N.unshift(t)}dt(N)}}if(!(0<J))if(w)u(c),w||dt(H),startWorker(c);else{if(c.preRun)for(\\\"function\\\"==typeof c.preRun&&(c.preRun=[c.preRun]);c.preRun.length;)V();dt(L),0<J||(c.setStatus?(c.setStatus(\\\"Running...\\\"),setTimeout((function(){setTimeout((function(){c.setStatus(\\\"\\\")}),1),t()}),1)):t())}}if(c.keepRuntimeAlive=Y,c.wasmMemory=x,c.stackAlloc=be,c.stackSave=we,c.stackRestore=_e,c.UTF8ToString=ut,c.stringToUTF8=kt,c.lengthBytesUTF8=bt,c.ExitStatus=nt,c.PThread=pt,Z=function t(){ve||Se(),ve||(Z=t)},c.preInit)for(\\\"function\\\"==typeof c.preInit&&(c.preInit=[c.preInit]);0<c.preInit.length;)c.preInit.pop()();return Se(),t.ready});t.exports=r},932:function(t,e,n){var _scriptDir,r=(_scriptDir=(_scriptDir=\\\"undefined\\\"!=typeof document&&document.currentScript?document.currentScript.src:void 0)||\\\"/index.js\\\",function(t={}){var e,r,i=void 0!==t?t:{};i.ready=new Promise(((t,n)=>{e=t,r=n}));var a,o,c,u=Object.assign({},i),s=\\\"./this.program\\\",l=\\\"object\\\"==typeof window,f=\\\"function\\\"==typeof importScripts,p=\\\"object\\\"==typeof process&&\\\"object\\\"==typeof process.versions&&\\\"string\\\"==typeof process.versions.node,d=\\\"\\\";if(p){var h=n(384),v=n(908);d=f?v.dirname(d)+\\\"/\\\":\\\"//\\\",a=(t,e)=>(t=N(t)?new URL(t):v.normalize(t),h.readFileSync(t,e?void 0:\\\"utf8\\\")),c=t=>{var e=a(t,!0);return e.buffer||(e=new Uint8Array(e)),e},o=(t,e,n,r=!0)=>{t=N(t)?new URL(t):v.normalize(t),h.readFile(t,r?void 0:\\\"utf8\\\",((t,i)=>{t?n(t):e(r?i.buffer:i)}))},!i.thisProgram&&process.argv.length>1&&(s=process.argv[1].replace(/\\\\\\\\/g,\\\"/\\\")),process.argv.slice(2),i.inspect=()=>\\\"[Emscripten Module object]\\\"}else(l||f)&&(f?d=self.location.href:\\\"undefined\\\"!=typeof document&&document.currentScript&&(d=document.currentScript.src),_scriptDir&&(d=_scriptDir),d=0!==d.indexOf(\\\"blob:\\\")?d.substr(0,d.replace(/[?#].*/,\\\"\\\").lastIndexOf(\\\"/\\\")+1):\\\"\\\",a=t=>{var e=new XMLHttpRequest;return e.open(\\\"GET\\\",t,!1),e.send(null),e.responseText},f&&(c=t=>{var e=new XMLHttpRequest;return e.open(\\\"GET\\\",t,!1),e.responseType=\\\"arraybuffer\\\",e.send(null),new Uint8Array(e.response)}),o=(t,e,n)=>{var r=new XMLHttpRequest;r.open(\\\"GET\\\",t,!0),r.responseType=\\\"arraybuffer\\\",r.onload=()=>{200==r.status||0==r.status&&r.response?e(r.response):n()},r.onerror=n,r.send(null)});var m,g,y=i.print||console.log.bind(console),w=i.printErr||console.warn.bind(console);Object.assign(i,u),u=null,i.arguments&&i.arguments,i.thisProgram&&(s=i.thisProgram),i.quit&&i.quit,i.wasmBinary&&(m=i.wasmBinary),i.noExitRuntime,\\\"object\\\"!=typeof WebAssembly&&W(\\\"no native wasm support detected\\\");var _,b,S,k,A,O,C,T,P,E,x,j=!1;function M(){var t=g.buffer;i.HEAP8=_=new Int8Array(t),i.HEAP16=S=new Int16Array(t),i.HEAP32=A=new Int32Array(t),i.HEAPU8=b=new Uint8Array(t),i.HEAPU16=k=new Uint16Array(t),i.HEAPU32=O=new Uint32Array(t),i.HEAPF32=C=new Float32Array(t),i.HEAPF64=E=new Float64Array(t),i.HEAP64=T=new BigInt64Array(t),i.HEAPU64=P=new BigUint64Array(t)}var R=[],I=[],D=[],U=0,G=null,B=null;function W(t){i.onAbort&&i.onAbort(t),w(t=\\\"Aborted(\\\"+t+\\\")\\\"),j=!0,t+=\\\". Build with -sASSERTIONS for more info.\\\";var e=new WebAssembly.RuntimeError(t);throw r(e),e}var z,F,L=\\\"data:application/octet-stream;base64,\\\";function H(t){return t.startsWith(L)}function N(t){return t.startsWith(\\\"file://\\\")}function K(t){try{if(t==z&&m)return new Uint8Array(m);if(c)return c(t);throw\\\"both async and sync fetching of the wasm failed\\\"}catch(t){W(t)}}function Y(t,e,n){return function(t){if(!m&&(l||f)){if(\\\"function\\\"==typeof fetch&&!N(t))return fetch(t,{credentials:\\\"same-origin\\\"}).then((e=>{if(!e.ok)throw\\\"failed to load wasm binary file at '\\\"+t+\\\"'\\\";return e.arrayBuffer()})).catch((()=>K(t)));if(o)return new Promise(((e,n)=>{o(t,(t=>e(new Uint8Array(t))),n)}))}return Promise.resolve().then((()=>K(t)))}(t).then((t=>WebAssembly.instantiate(t,e))).then((t=>t)).then(n,(t=>{w(\\\"failed to asynchronously prepare wasm: \\\"+t),W(t)}))}function V(t){for(;t.length>0;)t.shift()(i)}H(z=\\\"ort-wasm-simd.wasm\\\")||(F=z,z=i.locateFile?i.locateFile(F,d):d+F);var q=[],J=0,X=0;function Z(t){this.excPtr=t,this.ptr=t-24,this.set_type=function(t){O[this.ptr+4>>>2]=t},this.get_type=function(){return O[this.ptr+4>>>2]},this.set_destructor=function(t){O[this.ptr+8>>>2]=t},this.get_destructor=function(){return O[this.ptr+8>>>2]},this.set_caught=function(t){t=t?1:0,_[this.ptr+12>>>0]=t},this.get_caught=function(){return 0!=_[this.ptr+12>>>0]},this.set_rethrown=function(t){t=t?1:0,_[this.ptr+13>>>0]=t},this.get_rethrown=function(){return 0!=_[this.ptr+13>>>0]},this.init=function(t,e){this.set_adjusted_ptr(0),this.set_type(t),this.set_destructor(e)},this.set_adjusted_ptr=function(t){O[this.ptr+16>>>2]=t},this.get_adjusted_ptr=function(){return O[this.ptr+16>>>2]},this.get_exception_ptr=function(){if(Se(this.get_type()))return O[this.excPtr>>>2];var t=this.get_adjusted_ptr();return 0!==t?t:this.excPtr}}function Q(){var t=X;if(!t)return ve(0),0;var e=new Z(t);e.set_adjusted_ptr(t);var n=e.get_type();if(!n)return ve(0),t;for(var r=0;r<arguments.length;r++){var i=arguments[r];if(0===i||i===n)break;var a=e.ptr+16;if(be(i,n,a))return ve(i),t}return ve(n),t}var $=Q,tt=Q,et=Q,nt=Q,rt=\\\"To use dlopen, you need enable dynamic linking, see https://emscripten.org/docs/compiling/Dynamic-Linking.html\\\",it=\\\"undefined\\\"!=typeof TextDecoder?new TextDecoder(\\\"utf8\\\"):void 0;function at(t,e,n){for(var r=(e>>>=0)+n,i=e;t[i]&&!(i>=r);)++i;if(i-e>16&&t.buffer&&it)return it.decode(t.subarray(e,i));for(var a=\\\"\\\";e<i;){var o=t[e++];if(128&o){var c=63&t[e++];if(192!=(224&o)){var u=63&t[e++];if((o=224==(240&o)?(15&o)<<12|c<<6|u:(7&o)<<18|c<<12|u<<6|63&t[e++])<65536)a+=String.fromCharCode(o);else{var s=o-65536;a+=String.fromCharCode(55296|s>>10,56320|1023&s)}}else a+=String.fromCharCode((31&o)<<6|c)}else a+=String.fromCharCode(o)}return a}function ot(t,e){return(t>>>=0)?at(b,t,e):\\\"\\\"}var ct={varargs:void 0,get:function(){return ct.varargs+=4,A[ct.varargs-4>>>2]},getStr:function(t){return ot(t)}};function ut(t){for(var e=0,n=0;n<t.length;++n){var r=t.charCodeAt(n);r<=127?e++:r<=2047?e+=2:r>=55296&&r<=57343?(e+=4,++n):e+=3}return e}function st(t,e,n,r){if(!(r>0))return 0;for(var i=n>>>=0,a=n+r-1,o=0;o<t.length;++o){var c=t.charCodeAt(o);if(c>=55296&&c<=57343&&(c=65536+((1023&c)<<10)|1023&t.charCodeAt(++o)),c<=127){if(n>=a)break;e[n++>>>0]=c}else if(c<=2047){if(n+1>=a)break;e[n++>>>0]=192|c>>6,e[n++>>>0]=128|63&c}else if(c<=65535){if(n+2>=a)break;e[n++>>>0]=224|c>>12,e[n++>>>0]=128|c>>6&63,e[n++>>>0]=128|63&c}else{if(n+3>=a)break;e[n++>>>0]=240|c>>18,e[n++>>>0]=128|c>>12&63,e[n++>>>0]=128|c>>6&63,e[n++>>>0]=128|63&c}}return e[n>>>0]=0,n-i}function lt(t,e,n){return st(t,b,e,n)}function ft(t){if(null===t)return\\\"null\\\";var e=typeof t;return\\\"object\\\"===e||\\\"array\\\"===e||\\\"function\\\"===e?t.toString():\\\"\\\"+t}var pt=void 0;function dt(t){for(var e=\\\"\\\",n=t;b[n>>>0];)e+=pt[b[n++>>>0]];return e}var ht={},vt={},mt={},gt=48,yt=57;function wt(t){if(void 0===t)return\\\"_unknown\\\";var e=(t=t.replace(/[^a-zA-Z0-9_]/g,\\\"$\\\")).charCodeAt(0);return e>=gt&&e<=yt?\\\"_\\\"+t:t}function _t(t,e){return{[t=wt(t)]:function(){return e.apply(this,arguments)}}[t]}function bt(t,e){var n=_t(e,(function(t){this.name=e,this.message=t;var n=new Error(t).stack;void 0!==n&&(this.stack=this.toString()+\\\"\\\\n\\\"+n.replace(/^Error(:[^\\\\n]*)?\\\\n/,\\\"\\\"))}));return n.prototype=Object.create(t.prototype),n.prototype.constructor=n,n.prototype.toString=function(){return void 0===this.message?this.name:this.name+\\\": \\\"+this.message},n}var St=void 0;function kt(t){throw new St(t)}function At(t,e,n={}){if(!(\\\"argPackAdvance\\\"in e))throw new TypeError(\\\"registerType registeredInstance requires argPackAdvance\\\");var r=e.name;if(t||kt('type \\\"'+r+'\\\" must have a positive integer typeid pointer'),vt.hasOwnProperty(t)){if(n.ignoreDuplicateRegistrations)return;kt(\\\"Cannot register type '\\\"+r+\\\"' twice\\\")}if(vt[t]=e,delete mt[t],ht.hasOwnProperty(t)){var i=ht[t];delete ht[t],i.forEach((t=>t()))}}function Ot(t,e,n){switch(e){case 0:return n?function(t){return _[t>>>0]}:function(t){return b[t>>>0]};case 1:return n?function(t){return S[t>>>1]}:function(t){return k[t>>>1]};case 2:return n?function(t){return A[t>>>2]}:function(t){return O[t>>>2]};case 3:return n?function(t){return T[t>>3]}:function(t){return P[t>>3]};default:throw new TypeError(\\\"Unknown integer type: \\\"+t)}}function Ct(t){switch(t){case 1:return 0;case 2:return 1;case 4:return 2;case 8:return 3;default:throw new TypeError(\\\"Unknown type size: \\\"+t)}}var Tt=new function(){this.allocated=[void 0],this.freelist=[],this.get=function(t){return this.allocated[t]},this.allocate=function(t){let e=this.freelist.pop()||this.allocated.length;return this.allocated[e]=t,e},this.free=function(t){this.allocated[t]=void 0,this.freelist.push(t)}};function Pt(t){t>=Tt.reserved&&0==--Tt.get(t).refcount&&Tt.free(t)}var Et=t=>(t||kt(\\\"Cannot use deleted val. handle = \\\"+t),Tt.get(t).value),xt=t=>{switch(t){case void 0:return 1;case null:return 2;case!0:return 3;case!1:return 4;default:return Tt.allocate({refcount:1,value:t})}};function jt(t){return this.fromWireType(A[t>>>2])}function Mt(t,e){switch(e){case 2:return function(t){return this.fromWireType(C[t>>>2])};case 3:return function(t){return this.fromWireType(E[t>>>3])};default:throw new TypeError(\\\"Unknown float type: \\\"+t)}}var Rt=\\\"undefined\\\"!=typeof TextDecoder?new TextDecoder(\\\"utf-16le\\\"):void 0;function It(t,e){for(var n=t,r=n>>1,i=r+e/2;!(r>=i)&&k[r>>>0];)++r;if((n=r<<1)-t>32&&Rt)return Rt.decode(b.subarray(t>>>0,n>>>0));for(var a=\\\"\\\",o=0;!(o>=e/2);++o){var c=S[t+2*o>>>1];if(0==c)break;a+=String.fromCharCode(c)}return a}function Dt(t,e,n){if(void 0===n&&(n=2147483647),n<2)return 0;for(var r=e,i=(n-=2)<2*t.length?n/2:t.length,a=0;a<i;++a){var o=t.charCodeAt(a);S[e>>>1]=o,e+=2}return S[e>>>1]=0,e-r}function Ut(t){return 2*t.length}function Gt(t,e){for(var n=0,r=\\\"\\\";!(n>=e/4);){var i=A[t+4*n>>>2];if(0==i)break;if(++n,i>=65536){var a=i-65536;r+=String.fromCharCode(55296|a>>10,56320|1023&a)}else r+=String.fromCharCode(i)}return r}function Bt(t,e,n){if(void 0===n&&(n=2147483647),n<4)return 0;for(var r=e>>>=0,i=r+n-4,a=0;a<t.length;++a){var o=t.charCodeAt(a);if(o>=55296&&o<=57343&&(o=65536+((1023&o)<<10)|1023&t.charCodeAt(++a)),A[e>>>2]=o,(e+=4)+4>i)break}return A[e>>>2]=0,e-r}function Wt(t){for(var e=0,n=0;n<t.length;++n){var r=t.charCodeAt(n);r>=55296&&r<=57343&&++n,e+=4}return e}function zt(t,e){var n,r,i=vt[t];return void 0===i&&kt(e+\\\" has unknown type \\\"+(r=dt(n=de(t)),pe(n),r)),i}var Ft={};function Lt(t){var e=Ft[t];return void 0===e?dt(t):e}var Ht=[];function Nt(){return\\\"object\\\"==typeof globalThis?globalThis:Function(\\\"return this\\\")()}var Kt=[],Yt={};function Vt(t){return O[t>>>2]+4294967296*A[t+4>>>2]}function qt(t){return t%4==0&&(t%100!=0||t%400==0)}var Jt,Xt=[0,31,60,91,121,152,182,213,244,274,305,335],Zt=[0,31,59,90,120,151,181,212,243,273,304,334];function Qt(t){return(qt(t.getFullYear())?Xt:Zt)[t.getMonth()]+t.getDate()-1}function $t(t){var e=ut(t)+1,n=fe(e);return n&&lt(t,n,e),n}function te(t){var e=g.buffer;try{return g.grow(t-e.byteLength+65535>>>16),M(),1}catch(t){}}Jt=p?()=>{var t=process.hrtime();return 1e3*t[0]+t[1]/1e6}:()=>performance.now();var ee={};function ne(){if(!ne.strings){var t={USER:\\\"web_user\\\",LOGNAME:\\\"web_user\\\",PATH:\\\"/\\\",PWD:\\\"/\\\",HOME:\\\"/home/web_user\\\",LANG:(\\\"object\\\"==typeof navigator&&navigator.languages&&navigator.languages[0]||\\\"C\\\").replace(\\\"-\\\",\\\"_\\\")+\\\".UTF-8\\\",_:s||\\\"./this.program\\\"};for(var e in ee)void 0===ee[e]?delete t[e]:t[e]=ee[e];var n=[];for(var e in t)n.push(e+\\\"=\\\"+t[e]);ne.strings=n}return ne.strings}var re=[null,[],[]];var ie=[31,29,31,30,31,30,31,31,30,31,30,31],ae=[31,28,31,30,31,30,31,31,30,31,30,31];function oe(t,e,n,r){var i=A[r+40>>>2],a={tm_sec:A[r>>>2],tm_min:A[r+4>>>2],tm_hour:A[r+8>>>2],tm_mday:A[r+12>>>2],tm_mon:A[r+16>>>2],tm_year:A[r+20>>>2],tm_wday:A[r+24>>>2],tm_yday:A[r+28>>>2],tm_isdst:A[r+32>>>2],tm_gmtoff:A[r+36>>>2],tm_zone:i?ot(i):\\\"\\\"},o=ot(n),c={\\\"%c\\\":\\\"%a %b %d %H:%M:%S %Y\\\",\\\"%D\\\":\\\"%m/%d/%y\\\",\\\"%F\\\":\\\"%Y-%m-%d\\\",\\\"%h\\\":\\\"%b\\\",\\\"%r\\\":\\\"%I:%M:%S %p\\\",\\\"%R\\\":\\\"%H:%M\\\",\\\"%T\\\":\\\"%H:%M:%S\\\",\\\"%x\\\":\\\"%m/%d/%y\\\",\\\"%X\\\":\\\"%H:%M:%S\\\",\\\"%Ec\\\":\\\"%c\\\",\\\"%EC\\\":\\\"%C\\\",\\\"%Ex\\\":\\\"%m/%d/%y\\\",\\\"%EX\\\":\\\"%H:%M:%S\\\",\\\"%Ey\\\":\\\"%y\\\",\\\"%EY\\\":\\\"%Y\\\",\\\"%Od\\\":\\\"%d\\\",\\\"%Oe\\\":\\\"%e\\\",\\\"%OH\\\":\\\"%H\\\",\\\"%OI\\\":\\\"%I\\\",\\\"%Om\\\":\\\"%m\\\",\\\"%OM\\\":\\\"%M\\\",\\\"%OS\\\":\\\"%S\\\",\\\"%Ou\\\":\\\"%u\\\",\\\"%OU\\\":\\\"%U\\\",\\\"%OV\\\":\\\"%V\\\",\\\"%Ow\\\":\\\"%w\\\",\\\"%OW\\\":\\\"%W\\\",\\\"%Oy\\\":\\\"%y\\\"};for(var u in c)o=o.replace(new RegExp(u,\\\"g\\\"),c[u]);var s=[\\\"Sunday\\\",\\\"Monday\\\",\\\"Tuesday\\\",\\\"Wednesday\\\",\\\"Thursday\\\",\\\"Friday\\\",\\\"Saturday\\\"],l=[\\\"January\\\",\\\"February\\\",\\\"March\\\",\\\"April\\\",\\\"May\\\",\\\"June\\\",\\\"July\\\",\\\"August\\\",\\\"September\\\",\\\"October\\\",\\\"November\\\",\\\"December\\\"];function f(t,e,n){for(var r=\\\"number\\\"==typeof t?t.toString():t||\\\"\\\";r.length<e;)r=n[0]+r;return r}function p(t,e){return f(t,e,\\\"0\\\")}function d(t,e){function n(t){return t<0?-1:t>0?1:0}var r;return 0===(r=n(t.getFullYear()-e.getFullYear()))&&0===(r=n(t.getMonth()-e.getMonth()))&&(r=n(t.getDate()-e.getDate())),r}function h(t){switch(t.getDay()){case 0:return new Date(t.getFullYear()-1,11,29);case 1:return t;case 2:return new Date(t.getFullYear(),0,3);case 3:return new Date(t.getFullYear(),0,2);case 4:return new Date(t.getFullYear(),0,1);case 5:return new Date(t.getFullYear()-1,11,31);case 6:return new Date(t.getFullYear()-1,11,30)}}function v(t){var e=function(t,e){for(var n=new Date(t.getTime());e>0;){var r=qt(n.getFullYear()),i=n.getMonth(),a=(r?ie:ae)[i];if(!(e>a-n.getDate()))return n.setDate(n.getDate()+e),n;e-=a-n.getDate()+1,n.setDate(1),i<11?n.setMonth(i+1):(n.setMonth(0),n.setFullYear(n.getFullYear()+1))}return n}(new Date(t.tm_year+1900,0,1),t.tm_yday),n=new Date(e.getFullYear(),0,4),r=new Date(e.getFullYear()+1,0,4),i=h(n),a=h(r);return d(i,e)<=0?d(a,e)<=0?e.getFullYear()+1:e.getFullYear():e.getFullYear()-1}var m={\\\"%a\\\":function(t){return s[t.tm_wday].substring(0,3)},\\\"%A\\\":function(t){return s[t.tm_wday]},\\\"%b\\\":function(t){return l[t.tm_mon].substring(0,3)},\\\"%B\\\":function(t){return l[t.tm_mon]},\\\"%C\\\":function(t){return p((t.tm_year+1900)/100|0,2)},\\\"%d\\\":function(t){return p(t.tm_mday,2)},\\\"%e\\\":function(t){return f(t.tm_mday,2,\\\" \\\")},\\\"%g\\\":function(t){return v(t).toString().substring(2)},\\\"%G\\\":function(t){return v(t)},\\\"%H\\\":function(t){return p(t.tm_hour,2)},\\\"%I\\\":function(t){var e=t.tm_hour;return 0==e?e=12:e>12&&(e-=12),p(e,2)},\\\"%j\\\":function(t){return p(t.tm_mday+function(t,e){for(var n=0,r=0;r<=e;n+=t[r++]);return n}(qt(t.tm_year+1900)?ie:ae,t.tm_mon-1),3)},\\\"%m\\\":function(t){return p(t.tm_mon+1,2)},\\\"%M\\\":function(t){return p(t.tm_min,2)},\\\"%n\\\":function(){return\\\"\\\\n\\\"},\\\"%p\\\":function(t){return t.tm_hour>=0&&t.tm_hour<12?\\\"AM\\\":\\\"PM\\\"},\\\"%S\\\":function(t){return p(t.tm_sec,2)},\\\"%t\\\":function(){return\\\"\\\\t\\\"},\\\"%u\\\":function(t){return t.tm_wday||7},\\\"%U\\\":function(t){var e=t.tm_yday+7-t.tm_wday;return p(Math.floor(e/7),2)},\\\"%V\\\":function(t){var e=Math.floor((t.tm_yday+7-(t.tm_wday+6)%7)/7);if((t.tm_wday+371-t.tm_yday-2)%7<=2&&e++,e){if(53==e){var n=(t.tm_wday+371-t.tm_yday)%7;4==n||3==n&&qt(t.tm_year)||(e=1)}}else{e=52;var r=(t.tm_wday+7-t.tm_yday-1)%7;(4==r||5==r&&qt(t.tm_year%400-1))&&e++}return p(e,2)},\\\"%w\\\":function(t){return t.tm_wday},\\\"%W\\\":function(t){var e=t.tm_yday+7-(t.tm_wday+6)%7;return p(Math.floor(e/7),2)},\\\"%y\\\":function(t){return(t.tm_year+1900).toString().substring(2)},\\\"%Y\\\":function(t){return t.tm_year+1900},\\\"%z\\\":function(t){var e=t.tm_gmtoff,n=e>=0;return e=(e=Math.abs(e)/60)/60*100+e%60,(n?\\\"+\\\":\\\"-\\\")+String(\\\"0000\\\"+e).slice(-4)},\\\"%Z\\\":function(t){return t.tm_zone},\\\"%%\\\":function(){return\\\"%\\\"}};for(var u in o=o.replace(/%%/g,\\\"\\\\0\\\\0\\\"),m)o.includes(u)&&(o=o.replace(new RegExp(u,\\\"g\\\"),m[u](a)));var g,y,w,b,S,k=(!1,y=ut(g=o=o.replace(/\\\\0\\\\0/g,\\\"%\\\"))+1,st(g,w=new Array(y),0,w.length),w);return k.length>e?0:(b=k,S=t,_.set(b,S>>>0),k.length-1)}var ce=[];function ue(t){var e=ce[t];return e||(t>=ce.length&&(ce.length=t+1),ce[t]=e=x.get(t)),e}!function(){for(var t=new Array(256),e=0;e<256;++e)t[e]=String.fromCharCode(e);pt=t}(),St=i.BindingError=bt(Error,\\\"BindingError\\\"),i.InternalError=bt(Error,\\\"InternalError\\\"),Tt.allocated.push({value:void 0},{value:null},{value:!0},{value:!1}),Tt.reserved=Tt.allocated.length,i.count_emval_handles=function(){for(var t=0,e=Tt.reserved;e<Tt.allocated.length;++e)void 0!==Tt.allocated[e]&&++t;return t};var se,le={__cxa_begin_catch:function(t){var e=new Z(t);return e.get_caught()||(e.set_caught(!0),J--),e.set_rethrown(!1),q.push(e),_e(e.excPtr),e.get_exception_ptr()},__cxa_end_catch:function(){he(0);var t=q.pop();we(t.excPtr),X=0},__cxa_find_matching_catch_2:$,__cxa_find_matching_catch_3:tt,__cxa_find_matching_catch_4:et,__cxa_find_matching_catch_5:nt,__cxa_rethrow:function(){var t=q.pop();t||W(\\\"no exception to throw\\\");var e=t.excPtr;throw t.get_rethrown()||(q.push(t),t.set_rethrown(!0),t.set_caught(!1),J++),X=e},__cxa_throw:function(t,e,n){throw new Z(t).init(e,n),J++,X=t},__cxa_uncaught_exceptions:function(){return J},__dlsym:function(t,e){W(rt)},__resumeException:function(t){throw X||(X=t),X},__syscall_fcntl64:function(t,e,n){return ct.varargs=n,0},__syscall_fstat64:function(t,e){},__syscall_getcwd:function(t,e){},__syscall_getdents64:function(t,e,n){},__syscall_ioctl:function(t,e,n){return ct.varargs=n,0},__syscall_lstat64:function(t,e){},__syscall_mkdirat:function(t,e,n){},__syscall_newfstatat:function(t,e,n,r){},__syscall_openat:function(t,e,n,r){ct.varargs=r},__syscall_readlinkat:function(t,e,n,r){},__syscall_rmdir:function(t){},__syscall_stat64:function(t,e){},__syscall_unlinkat:function(t,e,n){},_embind_register_bigint:function(t,e,n,r,i){e=dt(e);var a=Ct(n),o=-1!=e.indexOf(\\\"u\\\");o&&(i=(1n<<64n)-1n),At(t,{name:e,fromWireType:function(t){return t},toWireType:function(t,n){if(\\\"bigint\\\"!=typeof n&&\\\"number\\\"!=typeof n)throw new TypeError('Cannot convert \\\"'+ft(n)+'\\\" to '+this.name);if(n<r||n>i)throw new TypeError('Passing a number \\\"'+ft(n)+'\\\" from JS side to C/C++ side to an argument of type \\\"'+e+'\\\", which is outside the valid range ['+r+\\\", \\\"+i+\\\"]!\\\");return n},argPackAdvance:8,readValueFromPointer:Ot(e,a,!o),destructorFunction:null})},_embind_register_bool:function(t,e,n,r,i){var a=Ct(n);At(t,{name:e=dt(e),fromWireType:function(t){return!!t},toWireType:function(t,e){return e?r:i},argPackAdvance:8,readValueFromPointer:function(t){var r;if(1===n)r=_;else if(2===n)r=S;else{if(4!==n)throw new TypeError(\\\"Unknown boolean type size: \\\"+e);r=A}return this.fromWireType(r[t>>>a])},destructorFunction:null})},_embind_register_emval:function(t,e){At(t,{name:e=dt(e),fromWireType:function(t){var e=Et(t);return Pt(t),e},toWireType:function(t,e){return xt(e)},argPackAdvance:8,readValueFromPointer:jt,destructorFunction:null})},_embind_register_float:function(t,e,n){var r=Ct(n);At(t,{name:e=dt(e),fromWireType:function(t){return t},toWireType:function(t,e){return e},argPackAdvance:8,readValueFromPointer:Mt(e,r),destructorFunction:null})},_embind_register_integer:function(t,e,n,r,i){e=dt(e),-1===i&&(i=4294967295);var a=Ct(n),o=t=>t;if(0===r){var c=32-8*n;o=t=>t<<c>>>c}var u=e.includes(\\\"unsigned\\\");At(t,{name:e,fromWireType:o,toWireType:u?function(t,e){return this.name,e>>>0}:function(t,e){return this.name,e},argPackAdvance:8,readValueFromPointer:Ot(e,a,0!==r),destructorFunction:null})},_embind_register_memory_view:function(t,e,n){var r=[Int8Array,Uint8Array,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array,BigInt64Array,BigUint64Array][e];function i(t){var e=O,n=e[(t>>=2)>>>0],i=e[t+1>>>0];return new r(e.buffer,i,n)}At(t,{name:n=dt(n),fromWireType:i,argPackAdvance:8,readValueFromPointer:i},{ignoreDuplicateRegistrations:!0})},_embind_register_std_string:function(t,e){var n=\\\"std::string\\\"===(e=dt(e));At(t,{name:e,fromWireType:function(t){var e,r=O[t>>>2],i=t+4;if(n)for(var a=i,o=0;o<=r;++o){var c=i+o;if(o==r||0==b[c>>>0]){var u=ot(a,c-a);void 0===e?e=u:(e+=String.fromCharCode(0),e+=u),a=c+1}}else{var s=new Array(r);for(o=0;o<r;++o)s[o]=String.fromCharCode(b[i+o>>>0]);e=s.join(\\\"\\\")}return pe(t),e},toWireType:function(t,e){var r;e instanceof ArrayBuffer&&(e=new Uint8Array(e));var i=\\\"string\\\"==typeof e;i||e instanceof Uint8Array||e instanceof Uint8ClampedArray||e instanceof Int8Array||kt(\\\"Cannot pass non-string to std::string\\\"),r=n&&i?ut(e):e.length;var a=fe(4+r+1),o=a+4;if(o>>>=0,O[a>>>2]=r,n&&i)lt(e,o,r+1);else if(i)for(var c=0;c<r;++c){var u=e.charCodeAt(c);u>255&&(pe(o),kt(\\\"String has UTF-16 code units that do not fit in 8 bits\\\")),b[o+c>>>0]=u}else for(c=0;c<r;++c)b[o+c>>>0]=e[c];return null!==t&&t.push(pe,a),a},argPackAdvance:8,readValueFromPointer:jt,destructorFunction:function(t){pe(t)}})},_embind_register_std_wstring:function(t,e,n){var r,i,a,o,c;n=dt(n),2===e?(r=It,i=Dt,o=Ut,a=()=>k,c=1):4===e&&(r=Gt,i=Bt,o=Wt,a=()=>O,c=2),At(t,{name:n,fromWireType:function(t){for(var n,i=O[t>>>2],o=a(),u=t+4,s=0;s<=i;++s){var l=t+4+s*e;if(s==i||0==o[l>>>c]){var f=r(u,l-u);void 0===n?n=f:(n+=String.fromCharCode(0),n+=f),u=l+e}}return pe(t),n},toWireType:function(t,r){\\\"string\\\"!=typeof r&&kt(\\\"Cannot pass non-string to C++ string type \\\"+n);var a=o(r),u=fe(4+a+e);return O[(u>>>=0)>>>2]=a>>c,i(r,u+4,a+e),null!==t&&t.push(pe,u),u},argPackAdvance:8,readValueFromPointer:jt,destructorFunction:function(t){pe(t)}})},_embind_register_void:function(t,e){At(t,{isVoid:!0,name:e=dt(e),argPackAdvance:0,fromWireType:function(){},toWireType:function(t,e){}})},_emscripten_get_now_is_monotonic:function(){return true},_emval_as:function(t,e,n){t=Et(t),e=zt(e,\\\"emval::as\\\");var r=[],i=xt(r);return O[n>>>2]=i,e.toWireType(r,t)},_emval_call_method:function(t,e,n,r,i){return(t=Ht[t])(e=Et(e),n=Lt(n),function(t){var e=[];return O[t>>>2]=xt(e),e}(r),i)},_emval_call_void_method:function(t,e,n,r){(t=Ht[t])(e=Et(e),n=Lt(n),null,r)},_emval_decref:Pt,_emval_equals:function(t,e){return(t=Et(t))==Et(e)},_emval_get_global:function(t){return 0===t?xt(Nt()):(t=Lt(t),xt(Nt()[t]))},_emval_get_method_caller:function(t,e){var n=function(t,e){for(var n=new Array(t),r=0;r<t;++r)n[r]=zt(O[e+4*r>>>2],\\\"parameter \\\"+r);return n}(t,e),r=n[0],i=r.name+\\\"_$\\\"+n.slice(1).map((function(t){return t.name})).join(\\\"_\\\")+\\\"$\\\",a=Kt[i];if(void 0!==a)return a;for(var o=[\\\"retType\\\"],c=[r],u=\\\"\\\",s=0;s<t-1;++s)u+=(0!==s?\\\", \\\":\\\"\\\")+\\\"arg\\\"+s,o.push(\\\"argType\\\"+s),c.push(n[1+s]);var l,f,p=\\\"return function \\\"+wt(\\\"methodCaller_\\\"+i)+\\\"(handle, name, destructors, args) {\\\\n\\\",d=0;for(s=0;s<t-1;++s)p+=\\\"    var arg\\\"+s+\\\" = argType\\\"+s+\\\".readValueFromPointer(args\\\"+(d?\\\"+\\\"+d:\\\"\\\")+\\\");\\\\n\\\",d+=n[s+1].argPackAdvance;for(p+=\\\"    var rv = handle[name](\\\"+u+\\\");\\\\n\\\",s=0;s<t-1;++s)n[s+1].deleteObject&&(p+=\\\"    argType\\\"+s+\\\".deleteObject(arg\\\"+s+\\\");\\\\n\\\");return r.isVoid||(p+=\\\"    return retType.toWireType(destructors, rv);\\\\n\\\"),p+=\\\"};\\\\n\\\",o.push(p),l=function(t,e){if(!(t instanceof Function))throw new TypeError(\\\"new_ called with constructor type \\\"+typeof t+\\\" which is not a function\\\");var n=_t(t.name||\\\"unknownFunctionName\\\",(function(){}));n.prototype=t.prototype;var r=new n,i=t.apply(r,e);return i instanceof Object?i:r}(Function,o).apply(null,c),f=Ht.length,Ht.push(l),a=f,Kt[i]=a,a},_emval_get_property:function(t,e){return t=Et(t),e=Et(e),xt(t[e])},_emval_incref:function(t){t>4&&(Tt.get(t).refcount+=1)},_emval_new:function(t,e,n,r){t=Et(t);var a=Yt[e];return a||(a=function(t){for(var e=\\\"\\\",n=0;n<t;++n)e+=(0!==n?\\\", \\\":\\\"\\\")+\\\"arg\\\"+n;var r=\\\"return function emval_allocator_\\\"+t+\\\"(constructor, argTypes, args) {\\\\n  var HEAPU32 = getMemory();\\\\n\\\";for(n=0;n<t;++n)r+=\\\"var argType\\\"+n+\\\" = requireRegisteredType(HEAPU32[((argTypes)>>2)], 'parameter \\\"+n+\\\"');\\\\nvar arg\\\"+n+\\\" = argType\\\"+n+\\\".readValueFromPointer(args);\\\\nargs += argType\\\"+n+\\\"['argPackAdvance'];\\\\nargTypes += 4;\\\\n\\\";return r+=\\\"var obj = new constructor(\\\"+e+\\\");\\\\nreturn valueToHandle(obj);\\\\n}\\\\n\\\",new Function(\\\"requireRegisteredType\\\",\\\"Module\\\",\\\"valueToHandle\\\",\\\"getMemory\\\",r)(zt,i,xt,(()=>O))}(e),Yt[e]=a),a(t,n,r)},_emval_new_array:function(){return xt([])},_emval_new_array_from_memory_view:function(t){t=Et(t);for(var e=new Array(t.length),n=0;n<t.length;n++)e[n]=t[n];return xt(e)},_emval_new_cstring:function(t){return xt(Lt(t))},_emval_new_object:function(){return xt({})},_emval_run_destructors:function(t){!function(t){for(;t.length;){var e=t.pop();t.pop()(e)}}(Et(t)),Pt(t)},_emval_set_property:function(t,e,n){t=Et(t),e=Et(e),n=Et(n),t[e]=n},_emval_take_value:function(t,e){var n=(t=zt(t,\\\"_emval_take_value\\\")).readValueFromPointer(e);return xt(n)},_gmtime_js:function(t,e){var n=new Date(1e3*Vt(t));A[e>>>2]=n.getUTCSeconds(),A[e+4>>>2]=n.getUTCMinutes(),A[e+8>>>2]=n.getUTCHours(),A[e+12>>>2]=n.getUTCDate(),A[e+16>>>2]=n.getUTCMonth(),A[e+20>>>2]=n.getUTCFullYear()-1900,A[e+24>>>2]=n.getUTCDay();var r=Date.UTC(n.getUTCFullYear(),0,1,0,0,0,0),i=(n.getTime()-r)/864e5|0;A[e+28>>>2]=i},_localtime_js:function(t,e){var n=new Date(1e3*Vt(t));A[e>>>2]=n.getSeconds(),A[e+4>>>2]=n.getMinutes(),A[e+8>>>2]=n.getHours(),A[e+12>>>2]=n.getDate(),A[e+16>>>2]=n.getMonth(),A[e+20>>>2]=n.getFullYear()-1900,A[e+24>>>2]=n.getDay();var r=0|Qt(n);A[e+28>>>2]=r,A[e+36>>>2]=-60*n.getTimezoneOffset();var i=new Date(n.getFullYear(),0,1),a=new Date(n.getFullYear(),6,1).getTimezoneOffset(),o=i.getTimezoneOffset(),c=0|(a!=o&&n.getTimezoneOffset()==Math.min(o,a));A[e+32>>>2]=c},_mktime_js:function(t){var e=new Date(A[t+20>>>2]+1900,A[t+16>>>2],A[t+12>>>2],A[t+8>>>2],A[t+4>>>2],A[t>>>2],0),n=A[t+32>>>2],r=e.getTimezoneOffset(),i=new Date(e.getFullYear(),0,1),a=new Date(e.getFullYear(),6,1).getTimezoneOffset(),o=i.getTimezoneOffset(),c=Math.min(o,a);if(n<0)A[t+32>>>2]=Number(a!=o&&c==r);else if(n>0!=(c==r)){var u=Math.max(o,a),s=n>0?c:u;e.setTime(e.getTime()+6e4*(s-r))}A[t+24>>>2]=e.getDay();var l=0|Qt(e);return A[t+28>>>2]=l,A[t>>>2]=e.getSeconds(),A[t+4>>>2]=e.getMinutes(),A[t+8>>>2]=e.getHours(),A[t+12>>>2]=e.getDate(),A[t+16>>>2]=e.getMonth(),A[t+20>>>2]=e.getYear(),e.getTime()/1e3|0},_mmap_js:function(t,e,n,r,i,a,o){return-52},_munmap_js:function(t,e,n,r,i,a){},_tzset_js:function(t,e,n){var r=(new Date).getFullYear(),i=new Date(r,0,1),a=new Date(r,6,1),o=i.getTimezoneOffset(),c=a.getTimezoneOffset(),u=Math.max(o,c);function s(t){var e=t.toTimeString().match(/\\\\(([A-Za-z ]+)\\\\)$/);return e?e[1]:\\\"GMT\\\"}O[t>>>2]=60*u,A[e>>>2]=Number(o!=c);var l=s(i),f=s(a),p=$t(l),d=$t(f);c<o?(O[n>>>2]=p,O[n+4>>>2]=d):(O[n>>>2]=d,O[n+4>>>2]=p)},abort:function(){W(\\\"\\\")},dlopen:function(t){W(rt)},emscripten_date_now:function(){return Date.now()},emscripten_get_heap_max:function(){return 4294901760},emscripten_get_now:Jt,emscripten_memcpy_big:function(t,e,n){b.copyWithin(t>>>0,e>>>0,e+n>>>0)},emscripten_resize_heap:function(t){var e,n=b.length,r=4294901760;if((t>>>=0)>r)return!1;for(var i=1;i<=4;i*=2){var a=n*(1+.2/i);if(a=Math.min(a,t+100663296),te(Math.min(r,(e=Math.max(t,a))+(65536-e%65536)%65536)))return!0}return!1},environ_get:function(t,e){var n=0;return ne().forEach((function(r,i){var a=e+n;O[t+4*i>>>2]=a,function(t,e){for(var n=0;n<t.length;++n)_[e++>>>0]=t.charCodeAt(n);_[e>>>0]=0}(r,a),n+=r.length+1})),0},environ_sizes_get:function(t,e){var n=ne();O[t>>>2]=n.length;var r=0;return n.forEach((function(t){r+=t.length+1})),O[e>>>2]=r,0},fd_close:function(t){return 52},fd_read:function(t,e,n,r){return 52},fd_seek:function(t,e,n,r){return 70},fd_write:function(t,e,n,r){for(var i=0,a=0;a<n;a++){var o=O[e>>>2],c=O[e+4>>>2];e+=8;for(var u=0;u<c;u++)s=t,l=b[o+u>>>0],f=void 0,f=re[s],0===l||10===l?((1===s?y:w)(at(f,0)),f.length=0):f.push(l);i+=c}var s,l,f;return O[r>>>2]=i,0},invoke_di:function(t,e){var n=me();try{return ue(t)(e)}catch(t){if(ge(n),t!==t+0)throw t;he(1,0)}},invoke_dii:function(t,e,n){var r=me();try{return ue(t)(e,n)}catch(t){if(ge(r),t!==t+0)throw t;he(1,0)}},invoke_diii:function(t,e,n,r){var i=me();try{return ue(t)(e,n,r)}catch(t){if(ge(i),t!==t+0)throw t;he(1,0)}},invoke_diiiii:function(t,e,n,r,i,a){var o=me();try{return ue(t)(e,n,r,i,a)}catch(t){if(ge(o),t!==t+0)throw t;he(1,0)}},invoke_fffffff:function(t,e,n,r,i,a,o){var c=me();try{return ue(t)(e,n,r,i,a,o)}catch(t){if(ge(c),t!==t+0)throw t;he(1,0)}},invoke_fi:function(t,e){var n=me();try{return ue(t)(e)}catch(t){if(ge(n),t!==t+0)throw t;he(1,0)}},invoke_fii:function(t,e,n){var r=me();try{return ue(t)(e,n)}catch(t){if(ge(r),t!==t+0)throw t;he(1,0)}},invoke_fiii:function(t,e,n,r){var i=me();try{return ue(t)(e,n,r)}catch(t){if(ge(i),t!==t+0)throw t;he(1,0)}},invoke_fiiii:function(t,e,n,r,i){var a=me();try{return ue(t)(e,n,r,i)}catch(t){if(ge(a),t!==t+0)throw t;he(1,0)}},invoke_i:function(t){var e=me();try{return ue(t)()}catch(t){if(ge(e),t!==t+0)throw t;he(1,0)}},invoke_ii:function(t,e){var n=me();try{return ue(t)(e)}catch(t){if(ge(n),t!==t+0)throw t;he(1,0)}},invoke_iid:function(t,e,n){var r=me();try{return ue(t)(e,n)}catch(t){if(ge(r),t!==t+0)throw t;he(1,0)}},invoke_iif:function(t,e,n){var r=me();try{return ue(t)(e,n)}catch(t){if(ge(r),t!==t+0)throw t;he(1,0)}},invoke_iii:function(t,e,n){var r=me();try{return ue(t)(e,n)}catch(t){if(ge(r),t!==t+0)throw t;he(1,0)}},invoke_iiif:function(t,e,n,r){var i=me();try{return ue(t)(e,n,r)}catch(t){if(ge(i),t!==t+0)throw t;he(1,0)}},invoke_iiii:function(t,e,n,r){var i=me();try{return ue(t)(e,n,r)}catch(t){if(ge(i),t!==t+0)throw t;he(1,0)}},invoke_iiiifi:function(t,e,n,r,i,a){var o=me();try{return ue(t)(e,n,r,i,a)}catch(t){if(ge(o),t!==t+0)throw t;he(1,0)}},invoke_iiiii:function(t,e,n,r,i){var a=me();try{return ue(t)(e,n,r,i)}catch(t){if(ge(a),t!==t+0)throw t;he(1,0)}},invoke_iiiiid:function(t,e,n,r,i,a){var o=me();try{return ue(t)(e,n,r,i,a)}catch(t){if(ge(o),t!==t+0)throw t;he(1,0)}},invoke_iiiiii:function(t,e,n,r,i,a){var o=me();try{return ue(t)(e,n,r,i,a)}catch(t){if(ge(o),t!==t+0)throw t;he(1,0)}},invoke_iiiiiii:function(t,e,n,r,i,a,o){var c=me();try{return ue(t)(e,n,r,i,a,o)}catch(t){if(ge(c),t!==t+0)throw t;he(1,0)}},invoke_iiiiiiii:function(t,e,n,r,i,a,o,c){var u=me();try{return ue(t)(e,n,r,i,a,o,c)}catch(t){if(ge(u),t!==t+0)throw t;he(1,0)}},invoke_iiiiiiiii:function(t,e,n,r,i,a,o,c,u){var s=me();try{return ue(t)(e,n,r,i,a,o,c,u)}catch(t){if(ge(s),t!==t+0)throw t;he(1,0)}},invoke_iiiiiiiiii:function(t,e,n,r,i,a,o,c,u,s){var l=me();try{return ue(t)(e,n,r,i,a,o,c,u,s)}catch(t){if(ge(l),t!==t+0)throw t;he(1,0)}},invoke_iiiiiiiiiii:function(t,e,n,r,i,a,o,c,u,s,l){var f=me();try{return ue(t)(e,n,r,i,a,o,c,u,s,l)}catch(t){if(ge(f),t!==t+0)throw t;he(1,0)}},invoke_iiiiiiiiiiii:function(t,e,n,r,i,a,o,c,u,s,l,f){var p=me();try{return ue(t)(e,n,r,i,a,o,c,u,s,l,f)}catch(t){if(ge(p),t!==t+0)throw t;he(1,0)}},invoke_iiiiiiiiiiiiiifi:function(t,e,n,r,i,a,o,c,u,s,l,f,p,d,h,v){var m=me();try{return ue(t)(e,n,r,i,a,o,c,u,s,l,f,p,d,h,v)}catch(t){if(ge(m),t!==t+0)throw t;he(1,0)}},invoke_iiiiiiiiiiiiiiiiifii:function(t,e,n,r,i,a,o,c,u,s,l,f,p,d,h,v,m,g,y,w){var _=me();try{return ue(t)(e,n,r,i,a,o,c,u,s,l,f,p,d,h,v,m,g,y,w)}catch(t){if(ge(_),t!==t+0)throw t;he(1,0)}},invoke_iiiiiiiiiiiiiiiiiifi:function(t,e,n,r,i,a,o,c,u,s,l,f,p,d,h,v,m,g,y,w){var _=me();try{return ue(t)(e,n,r,i,a,o,c,u,s,l,f,p,d,h,v,m,g,y,w)}catch(t){if(ge(_),t!==t+0)throw t;he(1,0)}},invoke_iiiiiiiiijii:function(t,e,n,r,i,a,o,c,u,s,l,f){var p=me();try{return ue(t)(e,n,r,i,a,o,c,u,s,l,f)}catch(t){if(ge(p),t!==t+0)throw t;he(1,0)}},invoke_iiiiiiiijjjfi:function(t,e,n,r,i,a,o,c,u,s,l,f,p){var d=me();try{return ue(t)(e,n,r,i,a,o,c,u,s,l,f,p)}catch(t){if(ge(d),t!==t+0)throw t;he(1,0)}},invoke_iiiiiijjjii:function(t,e,n,r,i,a,o,c,u,s,l){var f=me();try{return ue(t)(e,n,r,i,a,o,c,u,s,l)}catch(t){if(ge(f),t!==t+0)throw t;he(1,0)}},invoke_iiiiij:function(t,e,n,r,i,a){var o=me();try{return ue(t)(e,n,r,i,a)}catch(t){if(ge(o),t!==t+0)throw t;he(1,0)}},invoke_iiiiiji:function(t,e,n,r,i,a,o){var c=me();try{return ue(t)(e,n,r,i,a,o)}catch(t){if(ge(c),t!==t+0)throw t;he(1,0)}},invoke_iiiiijiiiii:function(t,e,n,r,i,a,o,c,u,s,l){var f=me();try{return ue(t)(e,n,r,i,a,o,c,u,s,l)}catch(t){if(ge(f),t!==t+0)throw t;he(1,0)}},invoke_iiiiijji:function(t,e,n,r,i,a,o,c){var u=me();try{return ue(t)(e,n,r,i,a,o,c)}catch(t){if(ge(u),t!==t+0)throw t;he(1,0)}},invoke_iiiij:function(t,e,n,r,i){var a=me();try{return ue(t)(e,n,r,i)}catch(t){if(ge(a),t!==t+0)throw t;he(1,0)}},invoke_iiiiji:function(t,e,n,r,i,a){var o=me();try{return ue(t)(e,n,r,i,a)}catch(t){if(ge(o),t!==t+0)throw t;he(1,0)}},invoke_iiiijjii:function(t,e,n,r,i,a,o,c){var u=me();try{return ue(t)(e,n,r,i,a,o,c)}catch(t){if(ge(u),t!==t+0)throw t;he(1,0)}},invoke_iiiijjj:function(t,e,n,r,i,a,o){var c=me();try{return ue(t)(e,n,r,i,a,o)}catch(t){if(ge(c),t!==t+0)throw t;he(1,0)}},invoke_iiij:function(t,e,n,r){var i=me();try{return ue(t)(e,n,r)}catch(t){if(ge(i),t!==t+0)throw t;he(1,0)}},invoke_iiiji:function(t,e,n,r,i){var a=me();try{return ue(t)(e,n,r,i)}catch(t){if(ge(a),t!==t+0)throw t;he(1,0)}},invoke_iiijii:function(t,e,n,r,i,a){var o=me();try{return ue(t)(e,n,r,i,a)}catch(t){if(ge(o),t!==t+0)throw t;he(1,0)}},invoke_iiijiii:function(t,e,n,r,i,a,o){var c=me();try{return ue(t)(e,n,r,i,a,o)}catch(t){if(ge(c),t!==t+0)throw t;he(1,0)}},invoke_iiijiiii:function(t,e,n,r,i,a,o,c){var u=me();try{return ue(t)(e,n,r,i,a,o,c)}catch(t){if(ge(u),t!==t+0)throw t;he(1,0)}},invoke_iiijiiiiii:function(t,e,n,r,i,a,o,c,u,s){var l=me();try{return ue(t)(e,n,r,i,a,o,c,u,s)}catch(t){if(ge(l),t!==t+0)throw t;he(1,0)}},invoke_iiijiiiiiiiiii:function(t,e,n,r,i,a,o,c,u,s,l,f,p,d){var h=me();try{return ue(t)(e,n,r,i,a,o,c,u,s,l,f,p,d)}catch(t){if(ge(h),t!==t+0)throw t;he(1,0)}},invoke_iiijjj:function(t,e,n,r,i,a){var o=me();try{return ue(t)(e,n,r,i,a)}catch(t){if(ge(o),t!==t+0)throw t;he(1,0)}},invoke_iij:function(t,e,n){var r=me();try{return ue(t)(e,n)}catch(t){if(ge(r),t!==t+0)throw t;he(1,0)}},invoke_iiji:function(t,e,n,r){var i=me();try{return ue(t)(e,n,r)}catch(t){if(ge(i),t!==t+0)throw t;he(1,0)}},invoke_iijiiii:function(t,e,n,r,i,a,o){var c=me();try{return ue(t)(e,n,r,i,a,o)}catch(t){if(ge(c),t!==t+0)throw t;he(1,0)}},invoke_iijjji:function(t,e,n,r,i,a){var o=me();try{return ue(t)(e,n,r,i,a)}catch(t){if(ge(o),t!==t+0)throw t;he(1,0)}},invoke_iijjjii:function(t,e,n,r,i,a,o){var c=me();try{return ue(t)(e,n,r,i,a,o)}catch(t){if(ge(c),t!==t+0)throw t;he(1,0)}},invoke_ij:function(t,e){var n=me();try{return ue(t)(e)}catch(t){if(ge(n),t!==t+0)throw t;he(1,0)}},invoke_ijii:function(t,e,n,r){var i=me();try{return ue(t)(e,n,r)}catch(t){if(ge(i),t!==t+0)throw t;he(1,0)}},invoke_ijijji:function(t,e,n,r,i,a){var o=me();try{return ue(t)(e,n,r,i,a)}catch(t){if(ge(o),t!==t+0)throw t;he(1,0)}},invoke_j:function(t){var e=me();try{return ue(t)()}catch(t){if(ge(e),t!==t+0)throw t;return he(1,0),0n}},invoke_jfi:function(t,e,n){var r=me();try{return ue(t)(e,n)}catch(t){if(ge(r),t!==t+0)throw t;return he(1,0),0n}},invoke_ji:function(t,e){var n=me();try{return ue(t)(e)}catch(t){if(ge(n),t!==t+0)throw t;return he(1,0),0n}},invoke_jii:function(t,e,n){var r=me();try{return ue(t)(e,n)}catch(t){if(ge(r),t!==t+0)throw t;return he(1,0),0n}},invoke_jiii:function(t,e,n,r){var i=me();try{return ue(t)(e,n,r)}catch(t){if(ge(i),t!==t+0)throw t;return he(1,0),0n}},invoke_jiij:function(t,e,n,r){var i=me();try{return ue(t)(e,n,r)}catch(t){if(ge(i),t!==t+0)throw t;return he(1,0),0n}},invoke_jjj:function(t,e,n){var r=me();try{return ue(t)(e,n)}catch(t){if(ge(r),t!==t+0)throw t;return he(1,0),0n}},invoke_v:function(t){var e=me();try{ue(t)()}catch(t){if(ge(e),t!==t+0)throw t;he(1,0)}},invoke_vfiii:function(t,e,n,r,i){var a=me();try{ue(t)(e,n,r,i)}catch(t){if(ge(a),t!==t+0)throw t;he(1,0)}},invoke_vi:function(t,e){var n=me();try{ue(t)(e)}catch(t){if(ge(n),t!==t+0)throw t;he(1,0)}},invoke_vidi:function(t,e,n,r){var i=me();try{ue(t)(e,n,r)}catch(t){if(ge(i),t!==t+0)throw t;he(1,0)}},invoke_vif:function(t,e,n){var r=me();try{ue(t)(e,n)}catch(t){if(ge(r),t!==t+0)throw t;he(1,0)}},invoke_viffiii:function(t,e,n,r,i,a,o){var c=me();try{ue(t)(e,n,r,i,a,o)}catch(t){if(ge(c),t!==t+0)throw t;he(1,0)}},invoke_vii:function(t,e,n){var r=me();try{ue(t)(e,n)}catch(t){if(ge(r),t!==t+0)throw t;he(1,0)}},invoke_viid:function(t,e,n,r){var i=me();try{ue(t)(e,n,r)}catch(t){if(ge(i),t!==t+0)throw t;he(1,0)}},invoke_viif:function(t,e,n,r){var i=me();try{ue(t)(e,n,r)}catch(t){if(ge(i),t!==t+0)throw t;he(1,0)}},invoke_viiff:function(t,e,n,r,i){var a=me();try{ue(t)(e,n,r,i)}catch(t){if(ge(a),t!==t+0)throw t;he(1,0)}},invoke_viifi:function(t,e,n,r,i){var a=me();try{ue(t)(e,n,r,i)}catch(t){if(ge(a),t!==t+0)throw t;he(1,0)}},invoke_viifiifijjjii:function(t,e,n,r,i,a,o,c,u,s,l,f,p){var d=me();try{ue(t)(e,n,r,i,a,o,c,u,s,l,f,p)}catch(t){if(ge(d),t!==t+0)throw t;he(1,0)}},invoke_viii:function(t,e,n,r){var i=me();try{ue(t)(e,n,r)}catch(t){if(ge(i),t!==t+0)throw t;he(1,0)}},invoke_viiid:function(t,e,n,r,i){var a=me();try{ue(t)(e,n,r,i)}catch(t){if(ge(a),t!==t+0)throw t;he(1,0)}},invoke_viiif:function(t,e,n,r,i){var a=me();try{ue(t)(e,n,r,i)}catch(t){if(ge(a),t!==t+0)throw t;he(1,0)}},invoke_viiifii:function(t,e,n,r,i,a,o){var c=me();try{ue(t)(e,n,r,i,a,o)}catch(t){if(ge(c),t!==t+0)throw t;he(1,0)}},invoke_viiii:function(t,e,n,r,i){var a=me();try{ue(t)(e,n,r,i)}catch(t){if(ge(a),t!==t+0)throw t;he(1,0)}},invoke_viiiiff:function(t,e,n,r,i,a,o){var c=me();try{ue(t)(e,n,r,i,a,o)}catch(t){if(ge(c),t!==t+0)throw t;he(1,0)}},invoke_viiiii:function(t,e,n,r,i,a){var o=me();try{ue(t)(e,n,r,i,a)}catch(t){if(ge(o),t!==t+0)throw t;he(1,0)}},invoke_viiiiidiidi:function(t,e,n,r,i,a,o,c,u,s,l){var f=me();try{ue(t)(e,n,r,i,a,o,c,u,s,l)}catch(t){if(ge(f),t!==t+0)throw t;he(1,0)}},invoke_viiiiiff:function(t,e,n,r,i,a,o,c){var u=me();try{ue(t)(e,n,r,i,a,o,c)}catch(t){if(ge(u),t!==t+0)throw t;he(1,0)}},invoke_viiiiifiiiiii:function(t,e,n,r,i,a,o,c,u,s,l,f,p){var d=me();try{ue(t)(e,n,r,i,a,o,c,u,s,l,f,p)}catch(t){if(ge(d),t!==t+0)throw t;he(1,0)}},invoke_viiiiii:function(t,e,n,r,i,a,o){var c=me();try{ue(t)(e,n,r,i,a,o)}catch(t){if(ge(c),t!==t+0)throw t;he(1,0)}},invoke_viiiiiiffifiiiii:function(t,e,n,r,i,a,o,c,u,s,l,f,p,d,h,v){var m=me();try{ue(t)(e,n,r,i,a,o,c,u,s,l,f,p,d,h,v)}catch(t){if(ge(m),t!==t+0)throw t;he(1,0)}},invoke_viiiiiiffiifiiiii:function(t,e,n,r,i,a,o,c,u,s,l,f,p,d,h,v,m){var g=me();try{ue(t)(e,n,r,i,a,o,c,u,s,l,f,p,d,h,v,m)}catch(t){if(ge(g),t!==t+0)throw t;he(1,0)}},invoke_viiiiiiffiiiiii:function(t,e,n,r,i,a,o,c,u,s,l,f,p,d,h){var v=me();try{ue(t)(e,n,r,i,a,o,c,u,s,l,f,p,d,h)}catch(t){if(ge(v),t!==t+0)throw t;he(1,0)}},invoke_viiiiiii:function(t,e,n,r,i,a,o,c){var u=me();try{ue(t)(e,n,r,i,a,o,c)}catch(t){if(ge(u),t!==t+0)throw t;he(1,0)}},invoke_viiiiiiii:function(t,e,n,r,i,a,o,c,u){var s=me();try{ue(t)(e,n,r,i,a,o,c,u)}catch(t){if(ge(s),t!==t+0)throw t;he(1,0)}},invoke_viiiiiiiii:function(t,e,n,r,i,a,o,c,u,s){var l=me();try{ue(t)(e,n,r,i,a,o,c,u,s)}catch(t){if(ge(l),t!==t+0)throw t;he(1,0)}},invoke_viiiiiiiiidi:function(t,e,n,r,i,a,o,c,u,s,l,f){var p=me();try{ue(t)(e,n,r,i,a,o,c,u,s,l,f)}catch(t){if(ge(p),t!==t+0)throw t;he(1,0)}},invoke_viiiiiiiiifi:function(t,e,n,r,i,a,o,c,u,s,l,f){var p=me();try{ue(t)(e,n,r,i,a,o,c,u,s,l,f)}catch(t){if(ge(p),t!==t+0)throw t;he(1,0)}},invoke_viiiiiiiiifiii:function(t,e,n,r,i,a,o,c,u,s,l,f,p,d){var h=me();try{ue(t)(e,n,r,i,a,o,c,u,s,l,f,p,d)}catch(t){if(ge(h),t!==t+0)throw t;he(1,0)}},invoke_viiiiiiiiii:function(t,e,n,r,i,a,o,c,u,s,l){var f=me();try{ue(t)(e,n,r,i,a,o,c,u,s,l)}catch(t){if(ge(f),t!==t+0)throw t;he(1,0)}},invoke_viiiiiiiiiii:function(t,e,n,r,i,a,o,c,u,s,l,f){var p=me();try{ue(t)(e,n,r,i,a,o,c,u,s,l,f)}catch(t){if(ge(p),t!==t+0)throw t;he(1,0)}},invoke_viiiiiiiiiiii:function(t,e,n,r,i,a,o,c,u,s,l,f,p){var d=me();try{ue(t)(e,n,r,i,a,o,c,u,s,l,f,p)}catch(t){if(ge(d),t!==t+0)throw t;he(1,0)}},invoke_viiiiiiiiiiiii:function(t,e,n,r,i,a,o,c,u,s,l,f,p,d){var h=me();try{ue(t)(e,n,r,i,a,o,c,u,s,l,f,p,d)}catch(t){if(ge(h),t!==t+0)throw t;he(1,0)}},invoke_viiiiiiiiiiiiii:function(t,e,n,r,i,a,o,c,u,s,l,f,p,d,h){var v=me();try{ue(t)(e,n,r,i,a,o,c,u,s,l,f,p,d,h)}catch(t){if(ge(v),t!==t+0)throw t;he(1,0)}},invoke_viiiiiiiiiiiiiii:function(t,e,n,r,i,a,o,c,u,s,l,f,p,d,h,v){var m=me();try{ue(t)(e,n,r,i,a,o,c,u,s,l,f,p,d,h,v)}catch(t){if(ge(m),t!==t+0)throw t;he(1,0)}},invoke_viiiiiiiiiiiiiiii:function(t,e,n,r,i,a,o,c,u,s,l,f,p,d,h,v,m){var g=me();try{ue(t)(e,n,r,i,a,o,c,u,s,l,f,p,d,h,v,m)}catch(t){if(ge(g),t!==t+0)throw t;he(1,0)}},invoke_viiiiiiiiiiiiiiiiii:function(t,e,n,r,i,a,o,c,u,s,l,f,p,d,h,v,m,g,y){var w=me();try{ue(t)(e,n,r,i,a,o,c,u,s,l,f,p,d,h,v,m,g,y)}catch(t){if(ge(w),t!==t+0)throw t;he(1,0)}},invoke_viiiiiiiiiiiiiiiiiii:function(t,e,n,r,i,a,o,c,u,s,l,f,p,d,h,v,m,g,y,w){var _=me();try{ue(t)(e,n,r,i,a,o,c,u,s,l,f,p,d,h,v,m,g,y,w)}catch(t){if(ge(_),t!==t+0)throw t;he(1,0)}},invoke_viiiiiiiiiiiiiiiiiiii:function(t,e,n,r,i,a,o,c,u,s,l,f,p,d,h,v,m,g,y,w,_){var b=me();try{ue(t)(e,n,r,i,a,o,c,u,s,l,f,p,d,h,v,m,g,y,w,_)}catch(t){if(ge(b),t!==t+0)throw t;he(1,0)}},invoke_viiiiiiiijj:function(t,e,n,r,i,a,o,c,u,s,l){var f=me();try{ue(t)(e,n,r,i,a,o,c,u,s,l)}catch(t){if(ge(f),t!==t+0)throw t;he(1,0)}},invoke_viiiiiiijiiiiii:function(t,e,n,r,i,a,o,c,u,s,l,f,p,d,h){var v=me();try{ue(t)(e,n,r,i,a,o,c,u,s,l,f,p,d,h)}catch(t){if(ge(v),t!==t+0)throw t;he(1,0)}},invoke_viiiiiiijjj:function(t,e,n,r,i,a,o,c,u,s,l){var f=me();try{ue(t)(e,n,r,i,a,o,c,u,s,l)}catch(t){if(ge(f),t!==t+0)throw t;he(1,0)}},invoke_viiiiiijij:function(t,e,n,r,i,a,o,c,u,s){var l=me();try{ue(t)(e,n,r,i,a,o,c,u,s)}catch(t){if(ge(l),t!==t+0)throw t;he(1,0)}},invoke_viiiiiijjiiiii:function(t,e,n,r,i,a,o,c,u,s,l,f,p,d){var h=me();try{ue(t)(e,n,r,i,a,o,c,u,s,l,f,p,d)}catch(t){if(ge(h),t!==t+0)throw t;he(1,0)}},invoke_viiiiij:function(t,e,n,r,i,a,o){var c=me();try{ue(t)(e,n,r,i,a,o)}catch(t){if(ge(c),t!==t+0)throw t;he(1,0)}},invoke_viiiiijiiiiii:function(t,e,n,r,i,a,o,c,u,s,l,f,p){var d=me();try{ue(t)(e,n,r,i,a,o,c,u,s,l,f,p)}catch(t){if(ge(d),t!==t+0)throw t;he(1,0)}},invoke_viiiiijiiiiiiiiiiiiiiiiiii:function(t,e,n,r,i,a,o,c,u,s,l,f,p,d,h,v,m,g,y,w,_,b,S,k,A,O){var C=me();try{ue(t)(e,n,r,i,a,o,c,u,s,l,f,p,d,h,v,m,g,y,w,_,b,S,k,A,O)}catch(t){if(ge(C),t!==t+0)throw t;he(1,0)}},invoke_viiiiijij:function(t,e,n,r,i,a,o,c,u){var s=me();try{ue(t)(e,n,r,i,a,o,c,u)}catch(t){if(ge(s),t!==t+0)throw t;he(1,0)}},invoke_viiiiijjiiiii:function(t,e,n,r,i,a,o,c,u,s,l,f,p){var d=me();try{ue(t)(e,n,r,i,a,o,c,u,s,l,f,p)}catch(t){if(ge(d),t!==t+0)throw t;he(1,0)}},invoke_viiiiijjji:function(t,e,n,r,i,a,o,c,u,s){var l=me();try{ue(t)(e,n,r,i,a,o,c,u,s)}catch(t){if(ge(l),t!==t+0)throw t;he(1,0)}},invoke_viiiij:function(t,e,n,r,i,a){var o=me();try{ue(t)(e,n,r,i,a)}catch(t){if(ge(o),t!==t+0)throw t;he(1,0)}},invoke_viiiiji:function(t,e,n,r,i,a,o){var c=me();try{ue(t)(e,n,r,i,a,o)}catch(t){if(ge(c),t!==t+0)throw t;he(1,0)}},invoke_viiiijii:function(t,e,n,r,i,a,o,c){var u=me();try{ue(t)(e,n,r,i,a,o,c)}catch(t){if(ge(u),t!==t+0)throw t;he(1,0)}},invoke_viiiijjj:function(t,e,n,r,i,a,o,c){var u=me();try{ue(t)(e,n,r,i,a,o,c)}catch(t){if(ge(u),t!==t+0)throw t;he(1,0)}},invoke_viiij:function(t,e,n,r,i){var a=me();try{ue(t)(e,n,r,i)}catch(t){if(ge(a),t!==t+0)throw t;he(1,0)}},invoke_viiiji:function(t,e,n,r,i,a){var o=me();try{ue(t)(e,n,r,i,a)}catch(t){if(ge(o),t!==t+0)throw t;he(1,0)}},invoke_viiijii:function(t,e,n,r,i,a,o){var c=me();try{ue(t)(e,n,r,i,a,o)}catch(t){if(ge(c),t!==t+0)throw t;he(1,0)}},invoke_viiijiiii:function(t,e,n,r,i,a,o,c,u){var s=me();try{ue(t)(e,n,r,i,a,o,c,u)}catch(t){if(ge(s),t!==t+0)throw t;he(1,0)}},invoke_viiijiiiiii:function(t,e,n,r,i,a,o,c,u,s,l){var f=me();try{ue(t)(e,n,r,i,a,o,c,u,s,l)}catch(t){if(ge(f),t!==t+0)throw t;he(1,0)}},invoke_viiijiiiiiii:function(t,e,n,r,i,a,o,c,u,s,l,f){var p=me();try{ue(t)(e,n,r,i,a,o,c,u,s,l,f)}catch(t){if(ge(p),t!==t+0)throw t;he(1,0)}},invoke_viiijiiiiiiiii:function(t,e,n,r,i,a,o,c,u,s,l,f,p,d){var h=me();try{ue(t)(e,n,r,i,a,o,c,u,s,l,f,p,d)}catch(t){if(ge(h),t!==t+0)throw t;he(1,0)}},invoke_viiijjiii:function(t,e,n,r,i,a,o,c,u){var s=me();try{ue(t)(e,n,r,i,a,o,c,u)}catch(t){if(ge(s),t!==t+0)throw t;he(1,0)}},invoke_viiijjjfii:function(t,e,n,r,i,a,o,c,u,s){var l=me();try{ue(t)(e,n,r,i,a,o,c,u,s)}catch(t){if(ge(l),t!==t+0)throw t;he(1,0)}},invoke_viiijjjii:function(t,e,n,r,i,a,o,c,u){var s=me();try{ue(t)(e,n,r,i,a,o,c,u)}catch(t){if(ge(s),t!==t+0)throw t;he(1,0)}},invoke_viij:function(t,e,n,r){var i=me();try{ue(t)(e,n,r)}catch(t){if(ge(i),t!==t+0)throw t;he(1,0)}},invoke_viiji:function(t,e,n,r,i){var a=me();try{ue(t)(e,n,r,i)}catch(t){if(ge(a),t!==t+0)throw t;he(1,0)}},invoke_viijiii:function(t,e,n,r,i,a,o){var c=me();try{ue(t)(e,n,r,i,a,o)}catch(t){if(ge(c),t!==t+0)throw t;he(1,0)}},invoke_viijiiiiiiiii:function(t,e,n,r,i,a,o,c,u,s,l,f,p){var d=me();try{ue(t)(e,n,r,i,a,o,c,u,s,l,f,p)}catch(t){if(ge(d),t!==t+0)throw t;he(1,0)}},invoke_viijj:function(t,e,n,r,i){var a=me();try{ue(t)(e,n,r,i)}catch(t){if(ge(a),t!==t+0)throw t;he(1,0)}},invoke_viijji:function(t,e,n,r,i,a){var o=me();try{ue(t)(e,n,r,i,a)}catch(t){if(ge(o),t!==t+0)throw t;he(1,0)}},invoke_viijjiii:function(t,e,n,r,i,a,o,c){var u=me();try{ue(t)(e,n,r,i,a,o,c)}catch(t){if(ge(u),t!==t+0)throw t;he(1,0)}},invoke_viijjiiiii:function(t,e,n,r,i,a,o,c,u,s){var l=me();try{ue(t)(e,n,r,i,a,o,c,u,s)}catch(t){if(ge(l),t!==t+0)throw t;he(1,0)}},invoke_viijjjfiifiii:function(t,e,n,r,i,a,o,c,u,s,l,f,p){var d=me();try{ue(t)(e,n,r,i,a,o,c,u,s,l,f,p)}catch(t){if(ge(d),t!==t+0)throw t;he(1,0)}},invoke_viijjjiiiiii:function(t,e,n,r,i,a,o,c,u,s,l,f){var p=me();try{ue(t)(e,n,r,i,a,o,c,u,s,l,f)}catch(t){if(ge(p),t!==t+0)throw t;he(1,0)}},invoke_vij:function(t,e,n){var r=me();try{ue(t)(e,n)}catch(t){if(ge(r),t!==t+0)throw t;he(1,0)}},invoke_viji:function(t,e,n,r){var i=me();try{ue(t)(e,n,r)}catch(t){if(ge(i),t!==t+0)throw t;he(1,0)}},invoke_vijiii:function(t,e,n,r,i,a){var o=me();try{ue(t)(e,n,r,i,a)}catch(t){if(ge(o),t!==t+0)throw t;he(1,0)}},invoke_vijiiiiiiii:function(t,e,n,r,i,a,o,c,u,s,l){var f=me();try{ue(t)(e,n,r,i,a,o,c,u,s,l)}catch(t){if(ge(f),t!==t+0)throw t;he(1,0)}},invoke_vijiiiiiiijjii:function(t,e,n,r,i,a,o,c,u,s,l,f,p,d){var h=me();try{ue(t)(e,n,r,i,a,o,c,u,s,l,f,p,d)}catch(t){if(ge(h),t!==t+0)throw t;he(1,0)}},invoke_vijj:function(t,e,n,r){var i=me();try{ue(t)(e,n,r)}catch(t){if(ge(i),t!==t+0)throw t;he(1,0)}},invoke_vijjfffiii:function(t,e,n,r,i,a,o,c,u,s){var l=me();try{ue(t)(e,n,r,i,a,o,c,u,s)}catch(t){if(ge(l),t!==t+0)throw t;he(1,0)}},invoke_vijjii:function(t,e,n,r,i,a){var o=me();try{ue(t)(e,n,r,i,a)}catch(t){if(ge(o),t!==t+0)throw t;he(1,0)}},invoke_vijjiiiiii:function(t,e,n,r,i,a,o,c,u,s){var l=me();try{ue(t)(e,n,r,i,a,o,c,u,s)}catch(t){if(ge(l),t!==t+0)throw t;he(1,0)}},invoke_vijjjiiji:function(t,e,n,r,i,a,o,c,u){var s=me();try{ue(t)(e,n,r,i,a,o,c,u)}catch(t){if(ge(s),t!==t+0)throw t;he(1,0)}},invoke_vijjjjiij:function(t,e,n,r,i,a,o,c,u){var s=me();try{ue(t)(e,n,r,i,a,o,c,u)}catch(t){if(ge(s),t!==t+0)throw t;he(1,0)}},invoke_vijjjjijjiii:function(t,e,n,r,i,a,o,c,u,s,l,f){var p=me();try{ue(t)(e,n,r,i,a,o,c,u,s,l,f)}catch(t){if(ge(p),t!==t+0)throw t;he(1,0)}},invoke_vijjjjjjifiiiii:function(t,e,n,r,i,a,o,c,u,s,l,f,p,d,h){var v=me();try{ue(t)(e,n,r,i,a,o,c,u,s,l,f,p,d,h)}catch(t){if(ge(v),t!==t+0)throw t;he(1,0)}},invoke_vijjjjjjjjjjjjji:function(t,e,n,r,i,a,o,c,u,s,l,f,p,d,h,v){var m=me();try{ue(t)(e,n,r,i,a,o,c,u,s,l,f,p,d,h,v)}catch(t){if(ge(m),t!==t+0)throw t;he(1,0)}},invoke_vj:function(t,e){var n=me();try{ue(t)(e)}catch(t){if(ge(n),t!==t+0)throw t;he(1,0)}},invoke_vjiii:function(t,e,n,r,i){var a=me();try{ue(t)(e,n,r,i)}catch(t){if(ge(a),t!==t+0)throw t;he(1,0)}},invoke_vjjfiii:function(t,e,n,r,i,a,o){var c=me();try{ue(t)(e,n,r,i,a,o)}catch(t){if(ge(c),t!==t+0)throw t;he(1,0)}},invoke_vjjjjfiii:function(t,e,n,r,i,a,o,c,u){var s=me();try{ue(t)(e,n,r,i,a,o,c,u)}catch(t){if(ge(s),t!==t+0)throw t;he(1,0)}},invoke_vjjjjjiiii:function(t,e,n,r,i,a,o,c,u,s){var l=me();try{ue(t)(e,n,r,i,a,o,c,u,s)}catch(t){if(ge(l),t!==t+0)throw t;he(1,0)}},invoke_vjjjjjjfffifiiiii:function(t,e,n,r,i,a,o,c,u,s,l,f,p,d,h,v,m){var g=me();try{ue(t)(e,n,r,i,a,o,c,u,s,l,f,p,d,h,v,m)}catch(t){if(ge(g),t!==t+0)throw t;he(1,0)}},invoke_vjjjjjjfffifiiiiiii:function(t,e,n,r,i,a,o,c,u,s,l,f,p,d,h,v,m,g,y){var w=me();try{ue(t)(e,n,r,i,a,o,c,u,s,l,f,p,d,h,v,m,g,y)}catch(t){if(ge(w),t!==t+0)throw t;he(1,0)}},invoke_vjjjjjjffiifiiiiii:function(t,e,n,r,i,a,o,c,u,s,l,f,p,d,h,v,m,g){var y=me();try{ue(t)(e,n,r,i,a,o,c,u,s,l,f,p,d,h,v,m,g)}catch(t){if(ge(y),t!==t+0)throw t;he(1,0)}},invoke_vjjjjjjjjfffiifiiiii:function(t,e,n,r,i,a,o,c,u,s,l,f,p,d,h,v,m,g,y,w){var _=me();try{ue(t)(e,n,r,i,a,o,c,u,s,l,f,p,d,h,v,m,g,y,w)}catch(t){if(ge(_),t!==t+0)throw t;he(1,0)}},invoke_vjjjjjjjjfffiifiiiiii:function(t,e,n,r,i,a,o,c,u,s,l,f,p,d,h,v,m,g,y,w,_){var b=me();try{ue(t)(e,n,r,i,a,o,c,u,s,l,f,p,d,h,v,m,g,y,w,_)}catch(t){if(ge(b),t!==t+0)throw t;he(1,0)}},llvm_eh_typeid_for:function(t){return t},strftime:oe,strftime_l:function(t,e,n,r,i){return oe(t,e,n,r)}},fe=(function(){var t,e,n,a,o={env:le,wasi_snapshot_preview1:le};function c(t,e){var n,r=t.exports;return i.asm=r,g=i.asm.memory,M(),x=i.asm.__indirect_function_table,n=i.asm.__wasm_call_ctors,I.unshift(n),function(t){if(U--,i.monitorRunDependencies&&i.monitorRunDependencies(U),0==U&&(null!==G&&(clearInterval(G),G=null),B)){var e=B;B=null,e()}}(),r}if(U++,i.monitorRunDependencies&&i.monitorRunDependencies(U),i.instantiateWasm)try{return i.instantiateWasm(o,c)}catch(t){w(\\\"Module.instantiateWasm callback failed with error: \\\"+t),r(t)}(t=m,e=z,n=o,a=function(t){c(t.instance)},t||\\\"function\\\"!=typeof WebAssembly.instantiateStreaming||H(e)||N(e)||p||\\\"function\\\"!=typeof fetch?Y(e,n,a):fetch(e,{credentials:\\\"same-origin\\\"}).then((t=>WebAssembly.instantiateStreaming(t,n).then(a,(function(t){return w(\\\"wasm streaming compile failed: \\\"+t),w(\\\"falling back to ArrayBuffer instantiation\\\"),Y(e,n,a)}))))).catch(r)}(),i._OrtInit=function(){return(i._OrtInit=i.asm.OrtInit).apply(null,arguments)},i._OrtCreateSessionOptions=function(){return(i._OrtCreateSessionOptions=i.asm.OrtCreateSessionOptions).apply(null,arguments)},i._OrtAppendExecutionProvider=function(){return(i._OrtAppendExecutionProvider=i.asm.OrtAppendExecutionProvider).apply(null,arguments)},i._OrtAddSessionConfigEntry=function(){return(i._OrtAddSessionConfigEntry=i.asm.OrtAddSessionConfigEntry).apply(null,arguments)},i._OrtReleaseSessionOptions=function(){return(i._OrtReleaseSessionOptions=i.asm.OrtReleaseSessionOptions).apply(null,arguments)},i._OrtCreateSession=function(){return(i._OrtCreateSession=i.asm.OrtCreateSession).apply(null,arguments)},i._OrtReleaseSession=function(){return(i._OrtReleaseSession=i.asm.OrtReleaseSession).apply(null,arguments)},i._OrtGetInputCount=function(){return(i._OrtGetInputCount=i.asm.OrtGetInputCount).apply(null,arguments)},i._OrtGetOutputCount=function(){return(i._OrtGetOutputCount=i.asm.OrtGetOutputCount).apply(null,arguments)},i._OrtGetInputName=function(){return(i._OrtGetInputName=i.asm.OrtGetInputName).apply(null,arguments)},i._OrtGetOutputName=function(){return(i._OrtGetOutputName=i.asm.OrtGetOutputName).apply(null,arguments)},i._OrtFree=function(){return(i._OrtFree=i.asm.OrtFree).apply(null,arguments)},i._OrtCreateTensor=function(){return(i._OrtCreateTensor=i.asm.OrtCreateTensor).apply(null,arguments)},i._OrtGetTensorData=function(){return(i._OrtGetTensorData=i.asm.OrtGetTensorData).apply(null,arguments)},i._OrtReleaseTensor=function(){return(i._OrtReleaseTensor=i.asm.OrtReleaseTensor).apply(null,arguments)},i._OrtCreateRunOptions=function(){return(i._OrtCreateRunOptions=i.asm.OrtCreateRunOptions).apply(null,arguments)},i._OrtAddRunConfigEntry=function(){return(i._OrtAddRunConfigEntry=i.asm.OrtAddRunConfigEntry).apply(null,arguments)},i._OrtReleaseRunOptions=function(){return(i._OrtReleaseRunOptions=i.asm.OrtReleaseRunOptions).apply(null,arguments)},i._OrtRun=function(){return(i._OrtRun=i.asm.OrtRun).apply(null,arguments)},i._OrtEndProfiling=function(){return(i._OrtEndProfiling=i.asm.OrtEndProfiling).apply(null,arguments)},i._malloc=function(){return(fe=i._malloc=i.asm.malloc).apply(null,arguments)}),pe=i._free=function(){return(pe=i._free=i.asm.free).apply(null,arguments)},de=function(){return(de=i.asm.__getTypeName).apply(null,arguments)},he=(i.__embind_initialize_bindings=function(){return(i.__embind_initialize_bindings=i.asm._embind_initialize_bindings).apply(null,arguments)},function(){return(he=i.asm.setThrew).apply(null,arguments)}),ve=function(){return(ve=i.asm.setTempRet0).apply(null,arguments)},me=function(){return(me=i.asm.stackSave).apply(null,arguments)},ge=function(){return(ge=i.asm.stackRestore).apply(null,arguments)},ye=function(){return(ye=i.asm.stackAlloc).apply(null,arguments)},we=function(){return(we=i.asm.__cxa_decrement_exception_refcount).apply(null,arguments)},_e=function(){return(_e=i.asm.__cxa_increment_exception_refcount).apply(null,arguments)},be=function(){return(be=i.asm.__cxa_can_catch).apply(null,arguments)},Se=function(){return(Se=i.asm.__cxa_is_pointer_type).apply(null,arguments)};function ke(){function t(){se||(se=!0,i.calledRun=!0,j||(V(I),e(i),i.onRuntimeInitialized&&i.onRuntimeInitialized(),function(){if(i.postRun)for(\\\"function\\\"==typeof i.postRun&&(i.postRun=[i.postRun]);i.postRun.length;)t=i.postRun.shift(),D.unshift(t);var t;V(D)}()))}U>0||(function(){if(i.preRun)for(\\\"function\\\"==typeof i.preRun&&(i.preRun=[i.preRun]);i.preRun.length;)t=i.preRun.shift(),R.unshift(t);var t;V(R)}(),U>0||(i.setStatus?(i.setStatus(\\\"Running...\\\"),setTimeout((function(){setTimeout((function(){i.setStatus(\\\"\\\")}),1),t()}),1)):t()))}if(i.stackAlloc=ye,i.stackSave=me,i.stackRestore=ge,i.UTF8ToString=ot,i.stringToUTF8=lt,i.lengthBytesUTF8=ut,B=function t(){se||ke(),se||(B=t)},i.preInit)for(\\\"function\\\"==typeof i.preInit&&(i.preInit=[i.preInit]);i.preInit.length>0;)i.preInit.pop()();return ke(),t.ready});t.exports=r},154:function(t){\\\"use strict\\\";t.exports='\\\"use strict\\\";var e={},a=\\\"object\\\"==typeof process&&\\\"object\\\"==typeof process.versions&&\\\"string\\\"==typeof process.versions.node;if(a){var r=require(\\\"worker_threads\\\"),t=r.parentPort;t.on(\\\"message\\\",(e=>onmessage({data:e})));var s=require(\\\"fs\\\");Object.assign(global,{self:global,require:require,Module:e,location:{href:__filename},Worker:r.Worker,importScripts:function(e){(0,eval)(s.readFileSync(e,\\\"utf8\\\")+\\\"//# sourceURL=\\\"+e)},postMessage:function(e){t.postMessage(e)},performance:global.performance||{now:function(){return Date.now()}}})}var o=!1,n=function(){var e=Array.prototype.slice.call(arguments).join(\\\" \\\");a?s.writeSync(2,e+\\\"\\\\\\\\n\\\"):console.error(e)};self.alert=function(){var a=Array.prototype.slice.call(arguments).join(\\\" \\\");postMessage({cmd:\\\"alert\\\",text:a,threadId:e._pthread_self()})},e.instantiateWasm=(a,r)=>{var t=e.wasmModule;return e.wasmModule=null,r(new WebAssembly.Instance(t,a))},self.onunhandledrejection=e=>{throw e.reason??e},self.onmessage=function a(r){try{if(\\\"load\\\"===r.data.cmd){let s=[];self.onmessage=e=>s.push(e),self.startWorker=r=>{e=r,postMessage({cmd:\\\"loaded\\\"});for(let e of s)a(e);self.onmessage=a},e.wasmModule=r.data.wasmModule;for(const a of r.data.handlers)e[a]=function(){postMessage({cmd:\\\"callHandler\\\",handler:a,args:[...arguments]})};if(e.wasmMemory=r.data.wasmMemory,e.buffer=e.wasmMemory.buffer,e.ENVIRONMENT_IS_PTHREAD=!0,\\\"string\\\"==typeof r.data.urlOrBlob)importScripts(r.data.urlOrBlob);else{var t=URL.createObjectURL(r.data.urlOrBlob);importScripts(t),URL.revokeObjectURL(t)}ortWasmThreaded(e)}else if(\\\"run\\\"===r.data.cmd){e.__emscripten_thread_init(r.data.pthread_ptr,0,0,1),e.__emscripten_thread_mailbox_await(r.data.pthread_ptr),e.establishStackSpace(),e.PThread.receiveObjectTransfer(r.data),e.PThread.threadInitTLS(),o||(o=!0);try{e.invokeEntryPoint(r.data.start_routine,r.data.arg)}catch(e){if(\\\"unwind\\\"!=e)throw e}}else\\\"cancel\\\"===r.data.cmd?e._pthread_self()&&e.__emscripten_thread_exit(-1):\\\"setimmediate\\\"===r.data.target||(\\\"checkMailbox\\\"===r.data.cmd?o&&e.checkMailbox():r.data.cmd&&(n(\\\"worker.js received unknown command \\\"+r.data.cmd),n(r.data)))}catch(a){throw e.__emscripten_thread_crashed&&e.__emscripten_thread_crashed(),a}};\\\\n'},760:function(){},384:function(){},993:function(){},908:function(){},953:function(){},925:function(){},449:function(){}},e={};function n(r){var i=e[r];if(void 0!==i)return i.exports;var a=e[r]={exports:{}};return t[r].call(a.exports,a,a.exports,n),a.exports}n.g=function(){if(\\\"object\\\"==typeof globalThis)return globalThis;try{return this||new Function(\\\"return this\\\")()}catch(t){if(\\\"object\\\"==typeof window)return window}}(),function(){\\\"use strict\\\";var t=n(259),e=n(263);self.onmessage=function(n){switch(n.data.type){case\\\"init-wasm\\\":try{(0,e.initializeWebAssembly)(n.data.in).then((function(){return postMessage({type:\\\"init-wasm\\\"})}),(function(t){return postMessage({type:\\\"init-wasm\\\",err:t})}))}catch(t){postMessage({type:\\\"init-wasm\\\",err:t})}break;case\\\"init-ort\\\":try{(0,t.initRuntime)(n.data.in).then((function(){return postMessage({type:\\\"init-ort\\\"})}),(function(t){return postMessage({type:\\\"init-ort\\\",err:t})})),postMessage({type:\\\"init-ort\\\"})}catch(t){postMessage({type:\\\"init-ort\\\",err:t})}break;case\\\"create_allocate\\\":try{var r=n.data.in.model,i=(0,t.createSessionAllocate)(r);postMessage({type:\\\"create_allocate\\\",out:i})}catch(t){postMessage({type:\\\"create_allocate\\\",err:t})}break;case\\\"create_finalize\\\":try{var a=n.data.in,o=(i=a.modeldata,a.options),c=(0,t.createSessionFinalize)(i,o);postMessage({type:\\\"create_finalize\\\",out:c})}catch(t){postMessage({type:\\\"create_finalize\\\",err:t})}break;case\\\"create\\\":try{var u=n.data.in;r=u.model,o=u.options,c=(0,t.createSession)(r,o),postMessage({type:\\\"create\\\",out:c})}catch(t){postMessage({type:\\\"create\\\",err:t})}break;case\\\"release\\\":try{var s=n.data.in;(0,t.releaseSession)(s),postMessage({type:\\\"release\\\"})}catch(t){postMessage({type:\\\"release\\\",err:t})}break;case\\\"run\\\":try{var l=n.data.in,f=l.sessionId,p=l.inputIndices,d=l.inputs,h=l.outputIndices;o=l.options,(0,t.run)(f,p,d,h,o).then((function(e){postMessage({type:\\\"run\\\",out:e},(0,t.extractTransferableBuffers)(e))}),(function(t){postMessage({type:\\\"run\\\",err:t})}))}catch(t){postMessage({type:\\\"run\\\",err:t})}break;case\\\"end-profiling\\\":try{s=n.data.in,(0,t.endProfiling)(s),postMessage({type:\\\"end-profiling\\\"})}catch(t){postMessage({type:\\\"end-profiling\\\",err:t})}}}}()}();\\n\", \"Worker\", undefined, undefined);\n}\n","\"use strict\";\n\n/* eslint-env browser */\n\n/* eslint-disable no-undef, no-use-before-define, new-cap */\nmodule.exports = function (content, workerConstructor, workerOptions, url) {\n  var globalScope = self || window;\n\n  try {\n    try {\n      var blob;\n\n      try {\n        // New API\n        blob = new globalScope.Blob([content]);\n      } catch (e) {\n        // BlobBuilder = Deprecated, but widely implemented\n        var BlobBuilder = globalScope.BlobBuilder || globalScope.WebKitBlobBuilder || globalScope.MozBlobBuilder || globalScope.MSBlobBuilder;\n        blob = new BlobBuilder();\n        blob.append(content);\n        blob = blob.getBlob();\n      }\n\n      var URL = globalScope.URL || globalScope.webkitURL;\n      var objectURL = URL.createObjectURL(blob);\n      var worker = new globalScope[workerConstructor](objectURL, workerOptions);\n      URL.revokeObjectURL(objectURL);\n      return worker;\n    } catch (e) {\n      return new globalScope[workerConstructor](\"data:application/javascript,\".concat(encodeURIComponent(content)), workerOptions);\n    }\n  } catch (e) {\n    if (!url) {\n      throw Error(\"Inline worker is not supported\");\n    }\n\n    return new globalScope[workerConstructor](url, workerOptions);\n  }\n};","var _scriptDir,e=(_scriptDir=\"undefined\"!=typeof document&&document.currentScript?document.currentScript.src:void 0,\"undefined\"!=typeof __filename&&(_scriptDir=_scriptDir||__filename),function(e={}){function n(){return D.buffer!=C.buffer&&P(),C}function t(){return D.buffer!=C.buffer&&P(),F}function r(){return D.buffer!=C.buffer&&P(),k}function a(){return D.buffer!=C.buffer&&P(),H}function o(){return D.buffer!=C.buffer&&P(),Y}var i,u,s;i||(i=void 0!==e?e:{}),i.ready=new Promise(((e,n)=>{u=e,s=n}));var f,c,l,p=Object.assign({},i),m=\"./this.program\",d=(e,n)=>{throw n},h=\"object\"==typeof window,g=\"function\"==typeof importScripts,y=\"object\"==typeof process&&\"object\"==typeof process.versions&&\"string\"==typeof process.versions.node,b=i.ENVIRONMENT_IS_PTHREAD||!1,v=\"\";function w(e){return i.locateFile?i.locateFile(e,v):v+e}if(y){var _=require(\"fs\"),O=require(\"path\");let e;v=g?O.dirname(v)+\"/\":__dirname+\"/\",f=(e,n)=>(e=e.startsWith(\"file://\")?new URL(e):O.normalize(e),_.readFileSync(e,n?void 0:\"utf8\")),l=e=>((e=f(e,!0)).buffer||(e=new Uint8Array(e)),e),c=(e,n,t,r=!0)=>{e=e.startsWith(\"file://\")?new URL(e):O.normalize(e),_.readFile(e,r?void 0:\"utf8\",((e,a)=>{e?t(e):n(r?a.buffer:a)}))},!i.thisProgram&&1<process.argv.length&&(m=process.argv[1].replace(/\\\\/g,\"/\")),process.argv.slice(2),d=(e,n)=>{throw process.exitCode=e,n},i.inspect=()=>\"[Emscripten Module object]\";try{e=require(\"worker_threads\")}catch(e){throw console.error('The \"worker_threads\" module is not supported in this node.js build - perhaps a newer version is needed?'),e}global.Worker=e.Worker}else(h||g)&&(g?v=self.location.href:\"undefined\"!=typeof document&&document.currentScript&&(v=document.currentScript.src),_scriptDir&&(v=_scriptDir),v=0!==v.indexOf(\"blob:\")?v.substr(0,v.replace(/[?#].*/,\"\").lastIndexOf(\"/\")+1):\"\",y||(f=e=>{var n=new XMLHttpRequest;return n.open(\"GET\",e,!1),n.send(null),n.responseText},g&&(l=e=>{var n=new XMLHttpRequest;return n.open(\"GET\",e,!1),n.responseType=\"arraybuffer\",n.send(null),new Uint8Array(n.response)}),c=(e,n,t)=>{var r=new XMLHttpRequest;r.open(\"GET\",e,!0),r.responseType=\"arraybuffer\",r.onload=()=>{200==r.status||0==r.status&&r.response?n(r.response):t()},r.onerror=t,r.send(null)}));y&&\"undefined\"==typeof performance&&(global.performance=require(\"perf_hooks\").performance);var T=console.log.bind(console),M=console.warn.bind(console);y&&(T=(...e)=>_.writeSync(1,e.join(\" \")+\"\\n\"),M=(...e)=>_.writeSync(2,e.join(\" \")+\"\\n\"));var S,A=i.print||T,R=i.printErr||M;Object.assign(i,p),p=null,i.thisProgram&&(m=i.thisProgram),i.quit&&(d=i.quit),i.wasmBinary&&(S=i.wasmBinary);var E=i.noExitRuntime||!0;\"object\"!=typeof WebAssembly&&Z(\"no native wasm support detected\");var D,I,x,C,F,k,H,Y,U=!1;function P(){var e=D.buffer;i.HEAP8=C=new Int8Array(e),i.HEAP16=new Int16Array(e),i.HEAP32=k=new Int32Array(e),i.HEAPU8=F=new Uint8Array(e),i.HEAPU16=new Uint16Array(e),i.HEAPU32=H=new Uint32Array(e),i.HEAPF32=new Float32Array(e),i.HEAPF64=Y=new Float64Array(e)}var W=i.INITIAL_MEMORY||16777216;if(5242880<=W||Z(\"INITIAL_MEMORY should be larger than STACK_SIZE, was \"+W+\"! (STACK_SIZE=5242880)\"),b)D=i.wasmMemory;else if(i.wasmMemory)D=i.wasmMemory;else if(!((D=new WebAssembly.Memory({initial:W/65536,maximum:65536,shared:!0})).buffer instanceof SharedArrayBuffer))throw R(\"requested a shared WebAssembly.Memory but the returned buffer is not a SharedArrayBuffer, indicating that while the browser has SharedArrayBuffer it does not have WebAssembly threads support - you may need to set a flag\"),y&&R(\"(on node you may need: --experimental-wasm-threads --experimental-wasm-bulk-memory and/or recent version)\"),Error(\"bad memory\");P(),W=D.buffer.byteLength;var L,N=[],j=[],G=[],B=0;function z(){return E||0<B}function q(){var e=i.preRun.shift();N.unshift(e)}var J,K=0,V=null,X=null;function Z(e){throw i.onAbort&&i.onAbort(e),R(e=\"Aborted(\"+e+\")\"),U=!0,x=1,e=new WebAssembly.RuntimeError(e+\". Build with -sASSERTIONS for more info.\"),s(e),e}function Q(e){return e.startsWith(\"data:application/octet-stream;base64,\")}function $(e){try{if(e==J&&S)return new Uint8Array(S);if(l)return l(e);throw\"both async and sync fetching of the wasm failed\"}catch(e){Z(e)}}function ee(e,n,t){return function(e){if(!S&&(h||g)){if(\"function\"==typeof fetch&&!e.startsWith(\"file://\"))return fetch(e,{credentials:\"same-origin\"}).then((n=>{if(!n.ok)throw\"failed to load wasm binary file at '\"+e+\"'\";return n.arrayBuffer()})).catch((()=>$(e)));if(c)return new Promise(((n,t)=>{c(e,(e=>n(new Uint8Array(e))),t)}))}return Promise.resolve().then((()=>$(e)))}(e).then((e=>WebAssembly.instantiate(e,n))).then((e=>e)).then(t,(e=>{R(\"failed to asynchronously prepare wasm: \"+e),Z(e)}))}function ne(e){this.name=\"ExitStatus\",this.message=\"Program terminated with exit(\"+e+\")\",this.status=e}function te(e){e.terminate(),e.onmessage=()=>{}}function re(e){(e=le.Ha[e])||Z(),le.hb(e)}function ae(e){var n=le.bb();if(!n)return 6;le.Ka.push(n),le.Ha[e.Ja]=n,n.Ja=e.Ja;var t={cmd:\"run\",start_routine:e.ib,arg:e.$a,pthread_ptr:e.Ja};return y&&n.unref(),n.postMessage(t,e.ob),0}Q(J=\"ort-wasm-threaded.wasm\")||(J=w(J));var oe=\"undefined\"!=typeof TextDecoder?new TextDecoder(\"utf8\"):void 0;function ie(e,n,t){var r=(n>>>=0)+t;for(t=n;e[t]&&!(t>=r);)++t;if(16<t-n&&e.buffer&&oe)return oe.decode(e.buffer instanceof SharedArrayBuffer?e.slice(n,t):e.subarray(n,t));for(r=\"\";n<t;){var a=e[n++];if(128&a){var o=63&e[n++];if(192==(224&a))r+=String.fromCharCode((31&a)<<6|o);else{var i=63&e[n++];65536>(a=224==(240&a)?(15&a)<<12|o<<6|i:(7&a)<<18|o<<12|i<<6|63&e[n++])?r+=String.fromCharCode(a):(a-=65536,r+=String.fromCharCode(55296|a>>10,56320|1023&a))}}else r+=String.fromCharCode(a)}return r}function ue(e,n){return(e>>>=0)?ie(t(),e,n):\"\"}function se(e){if(b)return ze(1,1,e);x=e,z()||(le.jb(),i.onExit&&i.onExit(e),U=!0),d(e,new ne(e))}function fe(e){if(x=e,b)throw me(e),\"unwind\";se(e)}function ce(e){e instanceof ne||\"unwind\"==e||d(1,e)}var le={Na:[],Ka:[],Va:[],Ha:{},Ra:function(){b&&le.cb()},rb:function(){},cb:function(){le.receiveObjectTransfer=le.gb,le.threadInitTLS=le.Ua,le.setExitStatus=le.Ta,E=!1},Ta:function(e){x=e},tb:[\"$terminateWorker\"],jb:function(){for(var e of le.Ka)te(e);for(e of le.Na)te(e);le.Na=[],le.Ka=[],le.Ha=[]},hb:function(e){var n=e.Ja;delete le.Ha[n],le.Na.push(e),le.Ka.splice(le.Ka.indexOf(e),1),e.Ja=0,dn(n)},gb:function(){},Ua:function(){le.Va.forEach((e=>e()))},fb:e=>new Promise((n=>{e.onmessage=t=>{var r=(t=t.data).cmd;if(e.Ja&&(le.ab=e.Ja),t.targetThread&&t.targetThread!=cn()){var a=le.Ha[t.sb];a?a.postMessage(t,t.transferList):R('Internal error! Worker sent a message \"'+r+'\" to target pthread '+t.targetThread+\", but that thread no longer exists!\")}else\"checkMailbox\"===r?He():\"spawnThread\"===r?ae(t):\"cleanupThread\"===r?re(t.thread):\"killThread\"===r?(t=t.thread,r=le.Ha[t],delete le.Ha[t],te(r),dn(t),le.Ka.splice(le.Ka.indexOf(r),1),r.Ja=0):\"cancelThread\"===r?le.Ha[t.thread].postMessage({cmd:\"cancel\"}):\"loaded\"===r?(e.loaded=!0,n(e)):\"print\"===r?A(\"Thread \"+t.threadId+\": \"+t.text):\"printErr\"===r?R(\"Thread \"+t.threadId+\": \"+t.text):\"alert\"===r?alert(\"Thread \"+t.threadId+\": \"+t.text):\"setimmediate\"===t.target?e.postMessage(t):\"callHandler\"===r?i[t.handler](...t.args):r&&R(\"worker sent an unknown command \"+r);le.ab=void 0},e.onerror=e=>{throw R(\"worker sent an error! \"+e.filename+\":\"+e.lineno+\": \"+e.message),e},y&&(e.on(\"message\",(function(n){e.onmessage({data:n})})),e.on(\"error\",(function(n){e.onerror(n)})));var t,r=[];for(t of[\"onExit\",\"onAbort\",\"print\",\"printErr\"])i.hasOwnProperty(t)&&r.push(t);e.postMessage({cmd:\"load\",handlers:r,urlOrBlob:i.mainScriptUrlOrBlob||_scriptDir,wasmMemory:D,wasmModule:I})})),eb:function(e){e()},Za:function(){var e=w(\"ort-wasm-threaded.worker.js\");e=new Worker(e),le.Na.push(e)},bb:function(){return 0==le.Na.length&&(le.Za(),le.fb(le.Na[0])),le.Na.pop()}};function pe(e){for(;0<e.length;)e.shift()(i)}function me(e){if(b)return ze(2,0,e);fe(e)}i.PThread=le,i.establishStackSpace=function(){var e=cn(),n=r()[e+52>>2>>>0];bn(n,n-(e=r()[e+56>>2>>>0])),wn(n)};var de=[];function he(e){this.Qa=e-24,this.Ya=function(e){a()[this.Qa+4>>2>>>0]=e},this.Xa=function(e){a()[this.Qa+8>>2>>>0]=e},this.Ra=function(e,n){this.Wa(),this.Ya(e),this.Xa(n)},this.Wa=function(){a()[this.Qa+16>>2>>>0]=0}}function ge(e,n,t,r){return b?ze(3,1,e,n,t,r):ye(e,n,t,r)}function ye(e,n,t,r){if(\"undefined\"==typeof SharedArrayBuffer)return R(\"Current environment does not support SharedArrayBuffer, pthreads are not available!\"),6;var a=[];return b&&0===a.length?ge(e,n,t,r):(e={ib:t,Ja:e,$a:r,ob:a},b?(e.qb=\"spawnThread\",postMessage(e,a),0):ae(e))}function be(e,n,t){return b?ze(4,1,e,n,t):0}function ve(e,n){if(b)return ze(5,1,e,n)}function we(e){for(var n=0,t=0;t<e.length;++t){var r=e.charCodeAt(t);127>=r?n++:2047>=r?n+=2:55296<=r&&57343>=r?(n+=4,++t):n+=3}return n}function _e(e,n,t,r){if(!(0<r))return 0;var a=t>>>=0;r=t+r-1;for(var o=0;o<e.length;++o){var i=e.charCodeAt(o);if(55296<=i&&57343>=i&&(i=65536+((1023&i)<<10)|1023&e.charCodeAt(++o)),127>=i){if(t>=r)break;n[t++>>>0]=i}else{if(2047>=i){if(t+1>=r)break;n[t++>>>0]=192|i>>6}else{if(65535>=i){if(t+2>=r)break;n[t++>>>0]=224|i>>12}else{if(t+3>=r)break;n[t++>>>0]=240|i>>18,n[t++>>>0]=128|i>>12&63}n[t++>>>0]=128|i>>6&63}n[t++>>>0]=128|63&i}}return n[t>>>0]=0,t-a}function Oe(e,n,r){return _e(e,t(),n,r)}function Te(e,n){if(b)return ze(6,1,e,n)}function Me(e,n,t){if(b)return ze(7,1,e,n,t)}function Se(e,n,t){return b?ze(8,1,e,n,t):0}function Ae(e,n){if(b)return ze(9,1,e,n)}function Re(e,n,t){if(b)return ze(10,1,e,n,t)}function Ee(e,n,t,r){if(b)return ze(11,1,e,n,t,r)}function De(e,n,t,r){if(b)return ze(12,1,e,n,t,r)}function Ie(e,n,t,r){if(b)return ze(13,1,e,n,t,r)}function xe(e){if(b)return ze(14,1,e)}function Ce(e,n){if(b)return ze(15,1,e,n)}function Fe(e,n,t){if(b)return ze(16,1,e,n,t)}function ke(e){\"function\"==typeof Atomics.pb&&(Atomics.pb(r(),e>>2,e).value.then(He),e+=128,Atomics.store(r(),e>>2,1))}function He(){var e=cn();e&&(ke(e),function(e){if(!U)try{if(yn(),!z())try{b?gn(x):fe(x)}catch(e){ce(e)}}catch(e){ce(e)}}())}function Ye(e){return a()[e>>>2]+4294967296*r()[e+4>>>2]}function Ue(e){return 0==e%4&&(0!=e%100||0==e%400)}i.invokeEntryPoint=function(e,n){var t=de[e];t||(e>=de.length&&(de.length=e+1),de[e]=t=L.get(e)),e=t(n),z()?le.Ta(e):gn(e)},i.__emscripten_thread_mailbox_await=ke,i.checkMailbox=He;var Pe,We=[0,31,60,91,121,152,182,213,244,274,305,335],Le=[0,31,59,90,120,151,181,212,243,273,304,334];function Ne(e){return(Ue(e.getFullYear())?We:Le)[e.getMonth()]+e.getDate()-1}function je(e,n,t,r,a,o,i){return b?ze(17,1,e,n,t,r,a,o,i):-52}function Ge(e,n,t,r,a,o){if(b)return ze(18,1,e,n,t,r,a,o)}function Be(e){var n=we(e)+1,t=ln(n);return t&&Oe(e,t,n),t}function ze(e,n){var t=arguments.length-2,r=arguments;return function(e){var n=vn();return e=e(),wn(n),e}((()=>{for(var a=_n(8*t),i=a>>3,u=0;u<t;u++){var s=r[2+u];o()[i+u>>>0]=s}return mn(e,t,a,n)}))}Pe=y?()=>{var e=process.hrtime();return 1e3*e[0]+e[1]/1e6}:()=>performance.timeOrigin+performance.now();var qe,Je=[],Ke={};function Ve(){if(!qe){var e,n={USER:\"web_user\",LOGNAME:\"web_user\",PATH:\"/\",PWD:\"/\",HOME:\"/home/web_user\",LANG:(\"object\"==typeof navigator&&navigator.languages&&navigator.languages[0]||\"C\").replace(\"-\",\"_\")+\".UTF-8\",_:m||\"./this.program\"};for(e in Ke)void 0===Ke[e]?delete n[e]:n[e]=Ke[e];var t=[];for(e in n)t.push(e+\"=\"+n[e]);qe=t}return qe}function Xe(e,t){if(b)return ze(19,1,e,t);var r=0;return Ve().forEach((function(o,i){var u=t+r;for(i=a()[e+4*i>>2>>>0]=u,u=0;u<o.length;++u)n()[i++>>0>>>0]=o.charCodeAt(u);n()[i>>0>>>0]=0,r+=o.length+1})),0}function Ze(e,n){if(b)return ze(20,1,e,n);var t=Ve();a()[e>>2>>>0]=t.length;var r=0;return t.forEach((function(e){r+=e.length+1})),a()[n>>2>>>0]=r,0}function Qe(e){return b?ze(21,1,e):52}function $e(e,n,t,r){return b?ze(22,1,e,n,t,r):52}function en(e,n,t,r,a){return b?ze(23,1,e,n,t,r,a):70}var nn=[null,[],[]];function tn(e,n,r,o){if(b)return ze(24,1,e,n,r,o);for(var i=0,u=0;u<r;u++){var s=a()[n>>2>>>0],f=a()[n+4>>2>>>0];n+=8;for(var c=0;c<f;c++){var l=t()[s+c>>>0],p=nn[e];0===l||10===l?((1===e?A:R)(ie(p,0)),p.length=0):p.push(l)}i+=f}return a()[o>>2>>>0]=i,0}function rn(e){return(rn=function(){if(\"object\"==typeof crypto&&\"function\"==typeof crypto.getRandomValues)return e=>(e.set(crypto.getRandomValues(new Uint8Array(e.byteLength))),e);if(y)try{var e=require(\"crypto\");if(e.randomFillSync)return n=>e.randomFillSync(n);var n=e.randomBytes;return e=>(e.set(n(e.byteLength)),e)}catch(e){}Z(\"initRandomDevice\")}())(e)}var an=[31,29,31,30,31,30,31,31,30,31,30,31],on=[31,28,31,30,31,30,31,31,30,31,30,31];function un(e,t,a,o){function i(e,n,t){for(e=\"number\"==typeof e?e.toString():e||\"\";e.length<n;)e=t[0]+e;return e}function u(e,n){return i(e,n,\"0\")}function s(e,n){function t(e){return 0>e?-1:0<e?1:0}var r;return 0===(r=t(e.getFullYear()-n.getFullYear()))&&0===(r=t(e.getMonth()-n.getMonth()))&&(r=t(e.getDate()-n.getDate())),r}function f(e){switch(e.getDay()){case 0:return new Date(e.getFullYear()-1,11,29);case 1:return e;case 2:return new Date(e.getFullYear(),0,3);case 3:return new Date(e.getFullYear(),0,2);case 4:return new Date(e.getFullYear(),0,1);case 5:return new Date(e.getFullYear()-1,11,31);case 6:return new Date(e.getFullYear()-1,11,30)}}function c(e){var n=e.La;for(e=new Date(new Date(e.Ma+1900,0,1).getTime());0<n;){var t=e.getMonth(),r=(Ue(e.getFullYear())?an:on)[t];if(!(n>r-e.getDate())){e.setDate(e.getDate()+n);break}n-=r-e.getDate()+1,e.setDate(1),11>t?e.setMonth(t+1):(e.setMonth(0),e.setFullYear(e.getFullYear()+1))}return t=new Date(e.getFullYear()+1,0,4),n=f(new Date(e.getFullYear(),0,4)),t=f(t),0>=s(n,e)?0>=s(t,e)?e.getFullYear()+1:e.getFullYear():e.getFullYear()-1}var l=r()[o+40>>2>>>0];for(var p in o={mb:r()[o>>2>>>0],lb:r()[o+4>>2>>>0],Oa:r()[o+8>>2>>>0],Sa:r()[o+12>>2>>>0],Pa:r()[o+16>>2>>>0],Ma:r()[o+20>>2>>>0],Ia:r()[o+24>>2>>>0],La:r()[o+28>>2>>>0],ub:r()[o+32>>2>>>0],kb:r()[o+36>>2>>>0],nb:l?ue(l):\"\"},a=ue(a),l={\"%c\":\"%a %b %d %H:%M:%S %Y\",\"%D\":\"%m/%d/%y\",\"%F\":\"%Y-%m-%d\",\"%h\":\"%b\",\"%r\":\"%I:%M:%S %p\",\"%R\":\"%H:%M\",\"%T\":\"%H:%M:%S\",\"%x\":\"%m/%d/%y\",\"%X\":\"%H:%M:%S\",\"%Ec\":\"%c\",\"%EC\":\"%C\",\"%Ex\":\"%m/%d/%y\",\"%EX\":\"%H:%M:%S\",\"%Ey\":\"%y\",\"%EY\":\"%Y\",\"%Od\":\"%d\",\"%Oe\":\"%e\",\"%OH\":\"%H\",\"%OI\":\"%I\",\"%Om\":\"%m\",\"%OM\":\"%M\",\"%OS\":\"%S\",\"%Ou\":\"%u\",\"%OU\":\"%U\",\"%OV\":\"%V\",\"%Ow\":\"%w\",\"%OW\":\"%W\",\"%Oy\":\"%y\"})a=a.replace(new RegExp(p,\"g\"),l[p]);var m=\"Sunday Monday Tuesday Wednesday Thursday Friday Saturday\".split(\" \"),d=\"January February March April May June July August September October November December\".split(\" \");for(p in l={\"%a\":function(e){return m[e.Ia].substring(0,3)},\"%A\":function(e){return m[e.Ia]},\"%b\":function(e){return d[e.Pa].substring(0,3)},\"%B\":function(e){return d[e.Pa]},\"%C\":function(e){return u((e.Ma+1900)/100|0,2)},\"%d\":function(e){return u(e.Sa,2)},\"%e\":function(e){return i(e.Sa,2,\" \")},\"%g\":function(e){return c(e).toString().substring(2)},\"%G\":function(e){return c(e)},\"%H\":function(e){return u(e.Oa,2)},\"%I\":function(e){return 0==(e=e.Oa)?e=12:12<e&&(e-=12),u(e,2)},\"%j\":function(e){for(var n=0,t=0;t<=e.Pa-1;n+=(Ue(e.Ma+1900)?an:on)[t++]);return u(e.Sa+n,3)},\"%m\":function(e){return u(e.Pa+1,2)},\"%M\":function(e){return u(e.lb,2)},\"%n\":function(){return\"\\n\"},\"%p\":function(e){return 0<=e.Oa&&12>e.Oa?\"AM\":\"PM\"},\"%S\":function(e){return u(e.mb,2)},\"%t\":function(){return\"\\t\"},\"%u\":function(e){return e.Ia||7},\"%U\":function(e){return u(Math.floor((e.La+7-e.Ia)/7),2)},\"%V\":function(e){var n=Math.floor((e.La+7-(e.Ia+6)%7)/7);if(2>=(e.Ia+371-e.La-2)%7&&n++,n)53==n&&(4==(t=(e.Ia+371-e.La)%7)||3==t&&Ue(e.Ma)||(n=1));else{n=52;var t=(e.Ia+7-e.La-1)%7;(4==t||5==t&&Ue(e.Ma%400-1))&&n++}return u(n,2)},\"%w\":function(e){return e.Ia},\"%W\":function(e){return u(Math.floor((e.La+7-(e.Ia+6)%7)/7),2)},\"%y\":function(e){return(e.Ma+1900).toString().substring(2)},\"%Y\":function(e){return e.Ma+1900},\"%z\":function(e){var n=0<=(e=e.kb);return e=Math.abs(e)/60,(n?\"+\":\"-\")+String(\"0000\"+(e/60*100+e%60)).slice(-4)},\"%Z\":function(e){return e.nb},\"%%\":function(){return\"%\"}},a=a.replace(/%%/g,\"\\0\\0\"),l)a.includes(p)&&(a=a.replace(new RegExp(p,\"g\"),l[p](o)));return p=function(e){var n=Array(we(e)+1);return _e(e,n,0,n.length),n}(a=a.replace(/\\0\\0/g,\"%\")),p.length>t?0:(function(e,t){n().set(e,t>>>0)}(p,e),p.length-1)}le.Ra();var sn=[null,se,me,ge,be,ve,Te,Me,Se,Ae,Re,Ee,De,Ie,xe,Ce,Fe,je,Ge,Xe,Ze,Qe,$e,en,tn],fn={b:function(e,n,t){throw new he(e).Ra(n,t),e},p:function(){Z(\"To use dlopen, you need enable dynamic linking, see https://emscripten.org/docs/compiling/Dynamic-Linking.html\")},N:function(e){pn(e,!g,1,!h),le.Ua()},k:function(e){b?postMessage({cmd:\"cleanupThread\",thread:e}):re(e)},C:ye,h:be,U:ve,y:Te,B:Me,V:Se,R:Ae,J:Re,Q:Ee,o:De,A:Ie,w:xe,T:Ce,x:Fe,D:function(){return 131072},Y:function(){return!0},u:function(e,n){e==n?setTimeout((()=>He())):b?postMessage({targetThread:e,cmd:\"checkMailbox\"}):(e=le.Ha[e])&&e.postMessage({cmd:\"checkMailbox\"})},L:function(){return-1},M:ke,X:function(e){y&&le.Ha[e].ref()},G:function(e,n){e=new Date(1e3*Ye(e)),r()[n>>2>>>0]=e.getUTCSeconds(),r()[n+4>>2>>>0]=e.getUTCMinutes(),r()[n+8>>2>>>0]=e.getUTCHours(),r()[n+12>>2>>>0]=e.getUTCDate(),r()[n+16>>2>>>0]=e.getUTCMonth(),r()[n+20>>2>>>0]=e.getUTCFullYear()-1900,r()[n+24>>2>>>0]=e.getUTCDay(),e=(e.getTime()-Date.UTC(e.getUTCFullYear(),0,1,0,0,0,0))/864e5|0,r()[n+28>>2>>>0]=e},H:function(e,n){e=new Date(1e3*Ye(e)),r()[n>>2>>>0]=e.getSeconds(),r()[n+4>>2>>>0]=e.getMinutes(),r()[n+8>>2>>>0]=e.getHours(),r()[n+12>>2>>>0]=e.getDate(),r()[n+16>>2>>>0]=e.getMonth(),r()[n+20>>2>>>0]=e.getFullYear()-1900,r()[n+24>>2>>>0]=e.getDay();var t=0|Ne(e);r()[n+28>>2>>>0]=t,r()[n+36>>2>>>0]=-60*e.getTimezoneOffset(),t=new Date(e.getFullYear(),6,1).getTimezoneOffset();var a=new Date(e.getFullYear(),0,1).getTimezoneOffset();e=0|(t!=a&&e.getTimezoneOffset()==Math.min(a,t)),r()[n+32>>2>>>0]=e},I:function(e){var n=new Date(r()[e+20>>2>>>0]+1900,r()[e+16>>2>>>0],r()[e+12>>2>>>0],r()[e+8>>2>>>0],r()[e+4>>2>>>0],r()[e>>2>>>0],0),t=r()[e+32>>2>>>0],a=n.getTimezoneOffset(),o=new Date(n.getFullYear(),6,1).getTimezoneOffset(),i=new Date(n.getFullYear(),0,1).getTimezoneOffset(),u=Math.min(i,o);return 0>t?r()[e+32>>2>>>0]=Number(o!=i&&u==a):0<t!=(u==a)&&(o=Math.max(i,o),n.setTime(n.getTime()+6e4*((0<t?u:o)-a))),r()[e+24>>2>>>0]=n.getDay(),t=0|Ne(n),r()[e+28>>2>>>0]=t,r()[e>>2>>>0]=n.getSeconds(),r()[e+4>>2>>>0]=n.getMinutes(),r()[e+8>>2>>>0]=n.getHours(),r()[e+12>>2>>>0]=n.getDate(),r()[e+16>>2>>>0]=n.getMonth(),r()[e+20>>2>>>0]=n.getYear(),n.getTime()/1e3|0},E:je,F:Ge,t:function(e,n,t){function o(e){return(e=e.toTimeString().match(/\\(([A-Za-z ]+)\\)$/))?e[1]:\"GMT\"}var i=(new Date).getFullYear(),u=new Date(i,0,1),s=new Date(i,6,1);i=u.getTimezoneOffset();var f=s.getTimezoneOffset(),c=Math.max(i,f);a()[e>>2>>>0]=60*c,r()[n>>2>>>0]=Number(i!=f),e=o(u),n=o(s),e=Be(e),n=Be(n),f<i?(a()[t>>2>>>0]=e,a()[t+4>>2>>>0]=n):(a()[t>>2>>>0]=n,a()[t+4>>2>>>0]=e)},c:function(){Z(\"\")},S:function(){Z(\"To use dlopen, you need enable dynamic linking, see https://emscripten.org/docs/compiling/Dynamic-Linking.html\")},l:function(){},i:function(){return Date.now()},W:function(){throw B+=1,\"unwind\"},v:function(){return 4294901760},e:Pe,f:function(){return y?require(\"os\").cpus().length:navigator.hardwareConcurrency},K:function(e,n,t){Je.length=n,t>>=3;for(var r=0;r<n;r++)Je[r]=o()[t+r>>>0];return sn[e].apply(null,Je)},s:function(e){var n=t().length;if((e>>>=0)<=n||4294901760<e)return!1;for(var r=1;4>=r;r*=2){var a=n*(1+.2/r);a=Math.min(a,e+100663296);var o=Math,i=o.min;a=Math.max(e,a),a+=(65536-a%65536)%65536;e:{var u=D.buffer;try{D.grow(i.call(o,4294901760,a)-u.byteLength+65535>>>16),P();var s=1;break e}catch(e){}s=void 0}if(s)return!0}return!1},O:Xe,P:Ze,j:fe,g:Qe,n:$e,q:en,m:tn,r:function(e,n){return rn(t().subarray(e>>>0,e+n>>>0)),0},a:D||i.wasmMemory,z:un,d:function(e,n,t,r){return un(e,n,t,r)}};!function(){function e(e,n){return e=e.exports,i.asm=e,le.Va.push(i.asm.va),L=i.asm.wa,j.unshift(i.asm.Z),I=n,le.eb((()=>{if(K--,i.monitorRunDependencies&&i.monitorRunDependencies(K),0==K&&(null!==V&&(clearInterval(V),V=null),X)){var e=X;X=null,e()}})),e}var n={a:fn};if(K++,i.monitorRunDependencies&&i.monitorRunDependencies(K),i.instantiateWasm)try{return i.instantiateWasm(n,e)}catch(e){R(\"Module.instantiateWasm callback failed with error: \"+e),s(e)}(function(e,n){var t=J;return S||\"function\"!=typeof WebAssembly.instantiateStreaming||Q(t)||t.startsWith(\"file://\")||y||\"function\"!=typeof fetch?ee(t,e,n):fetch(t,{credentials:\"same-origin\"}).then((r=>WebAssembly.instantiateStreaming(r,e).then(n,(function(r){return R(\"wasm streaming compile failed: \"+r),R(\"falling back to ArrayBuffer instantiation\"),ee(t,e,n)}))))})(n,(function(n){e(n.instance,n.module)})).catch(s)}(),i._OrtInit=function(){return(i._OrtInit=i.asm._).apply(null,arguments)},i._OrtCreateSessionOptions=function(){return(i._OrtCreateSessionOptions=i.asm.$).apply(null,arguments)},i._OrtAppendExecutionProvider=function(){return(i._OrtAppendExecutionProvider=i.asm.aa).apply(null,arguments)},i._OrtAddSessionConfigEntry=function(){return(i._OrtAddSessionConfigEntry=i.asm.ba).apply(null,arguments)},i._OrtReleaseSessionOptions=function(){return(i._OrtReleaseSessionOptions=i.asm.ca).apply(null,arguments)},i._OrtCreateSession=function(){return(i._OrtCreateSession=i.asm.da).apply(null,arguments)},i._OrtReleaseSession=function(){return(i._OrtReleaseSession=i.asm.ea).apply(null,arguments)},i._OrtGetInputCount=function(){return(i._OrtGetInputCount=i.asm.fa).apply(null,arguments)},i._OrtGetOutputCount=function(){return(i._OrtGetOutputCount=i.asm.ga).apply(null,arguments)},i._OrtGetInputName=function(){return(i._OrtGetInputName=i.asm.ha).apply(null,arguments)},i._OrtGetOutputName=function(){return(i._OrtGetOutputName=i.asm.ia).apply(null,arguments)},i._OrtFree=function(){return(i._OrtFree=i.asm.ja).apply(null,arguments)},i._OrtCreateTensor=function(){return(i._OrtCreateTensor=i.asm.ka).apply(null,arguments)},i._OrtGetTensorData=function(){return(i._OrtGetTensorData=i.asm.la).apply(null,arguments)},i._OrtReleaseTensor=function(){return(i._OrtReleaseTensor=i.asm.ma).apply(null,arguments)},i._OrtCreateRunOptions=function(){return(i._OrtCreateRunOptions=i.asm.na).apply(null,arguments)},i._OrtAddRunConfigEntry=function(){return(i._OrtAddRunConfigEntry=i.asm.oa).apply(null,arguments)},i._OrtReleaseRunOptions=function(){return(i._OrtReleaseRunOptions=i.asm.pa).apply(null,arguments)},i._OrtRun=function(){return(i._OrtRun=i.asm.qa).apply(null,arguments)},i._OrtEndProfiling=function(){return(i._OrtEndProfiling=i.asm.ra).apply(null,arguments)};var cn=i._pthread_self=function(){return(cn=i._pthread_self=i.asm.sa).apply(null,arguments)},ln=i._malloc=function(){return(ln=i._malloc=i.asm.ta).apply(null,arguments)};i._free=function(){return(i._free=i.asm.ua).apply(null,arguments)},i.__emscripten_tls_init=function(){return(i.__emscripten_tls_init=i.asm.va).apply(null,arguments)};var pn=i.__emscripten_thread_init=function(){return(pn=i.__emscripten_thread_init=i.asm.xa).apply(null,arguments)};function mn(){return(mn=i.asm.za).apply(null,arguments)}function dn(){return(dn=i.asm.Aa).apply(null,arguments)}i.__emscripten_thread_crashed=function(){return(i.__emscripten_thread_crashed=i.asm.ya).apply(null,arguments)};var hn,gn=i.__emscripten_thread_exit=function(){return(gn=i.__emscripten_thread_exit=i.asm.Ba).apply(null,arguments)},yn=i.__emscripten_check_mailbox=function(){return(yn=i.__emscripten_check_mailbox=i.asm.Ca).apply(null,arguments)};function bn(){return(bn=i.asm.Da).apply(null,arguments)}function vn(){return(vn=i.asm.Ea).apply(null,arguments)}function wn(){return(wn=i.asm.Fa).apply(null,arguments)}function _n(){return(_n=i.asm.Ga).apply(null,arguments)}function On(){function e(){if(!hn&&(hn=!0,i.calledRun=!0,!U)&&(b||pe(j),u(i),i.onRuntimeInitialized&&i.onRuntimeInitialized(),!b)){if(i.postRun)for(\"function\"==typeof i.postRun&&(i.postRun=[i.postRun]);i.postRun.length;){var e=i.postRun.shift();G.unshift(e)}pe(G)}}if(!(0<K))if(b)u(i),b||pe(j),startWorker(i);else{if(i.preRun)for(\"function\"==typeof i.preRun&&(i.preRun=[i.preRun]);i.preRun.length;)q();pe(N),0<K||(i.setStatus?(i.setStatus(\"Running...\"),setTimeout((function(){setTimeout((function(){i.setStatus(\"\")}),1),e()}),1)):e())}}if(i.keepRuntimeAlive=z,i.wasmMemory=D,i.stackAlloc=_n,i.stackSave=vn,i.stackRestore=wn,i.UTF8ToString=ue,i.stringToUTF8=Oe,i.lengthBytesUTF8=we,i.ExitStatus=ne,i.PThread=le,X=function e(){hn||On(),hn||(X=e)},i.preInit)for(\"function\"==typeof i.preInit&&(i.preInit=[i.preInit]);0<i.preInit.length;)i.preInit.pop()();return On(),e.ready});\"object\"==typeof exports&&\"object\"==typeof module?module.exports=e:\"function\"==typeof define&&define.amd?define([],(function(){return e})):\"object\"==typeof exports&&(exports.ortWasmThreaded=e);\n","\nvar ortWasm = (() => {\n  var _scriptDir = typeof document !== 'undefined' && document.currentScript ? document.currentScript.src : undefined;\n  if (typeof __filename !== 'undefined') _scriptDir = _scriptDir || __filename;\n  return (\nfunction(ortWasm = {})  {\n\nvar Module = typeof ortWasm != \"undefined\" ? ortWasm : {};\n\nvar readyPromiseResolve, readyPromiseReject;\n\nModule[\"ready\"] = new Promise((resolve, reject) => {\n readyPromiseResolve = resolve;\n readyPromiseReject = reject;\n});\n\nvar moduleOverrides = Object.assign({}, Module);\n\nvar arguments_ = [];\n\nvar thisProgram = \"./this.program\";\n\nvar quit_ = (status, toThrow) => {\n throw toThrow;\n};\n\nvar ENVIRONMENT_IS_WEB = typeof window == \"object\";\n\nvar ENVIRONMENT_IS_WORKER = typeof importScripts == \"function\";\n\nvar ENVIRONMENT_IS_NODE = typeof process == \"object\" && typeof process.versions == \"object\" && typeof process.versions.node == \"string\";\n\nvar ENVIRONMENT_IS_SHELL = !ENVIRONMENT_IS_WEB && !ENVIRONMENT_IS_NODE && !ENVIRONMENT_IS_WORKER;\n\nvar scriptDirectory = \"\";\n\nfunction locateFile(path) {\n if (Module[\"locateFile\"]) {\n  return Module[\"locateFile\"](path, scriptDirectory);\n }\n return scriptDirectory + path;\n}\n\nvar read_, readAsync, readBinary, setWindowTitle;\n\nif (ENVIRONMENT_IS_NODE) {\n var fs = require(\"fs\");\n var nodePath = require(\"path\");\n if (ENVIRONMENT_IS_WORKER) {\n  scriptDirectory = nodePath.dirname(scriptDirectory) + \"/\";\n } else {\n  scriptDirectory = __dirname + \"/\";\n }\n read_ = (filename, binary) => {\n  filename = isFileURI(filename) ? new URL(filename) : nodePath.normalize(filename);\n  return fs.readFileSync(filename, binary ? undefined : \"utf8\");\n };\n readBinary = filename => {\n  var ret = read_(filename, true);\n  if (!ret.buffer) {\n   ret = new Uint8Array(ret);\n  }\n  return ret;\n };\n readAsync = (filename, onload, onerror, binary = true) => {\n  filename = isFileURI(filename) ? new URL(filename) : nodePath.normalize(filename);\n  fs.readFile(filename, binary ? undefined : \"utf8\", (err, data) => {\n   if (err) onerror(err); else onload(binary ? data.buffer : data);\n  });\n };\n if (!Module[\"thisProgram\"] && process.argv.length > 1) {\n  thisProgram = process.argv[1].replace(/\\\\/g, \"/\");\n }\n arguments_ = process.argv.slice(2);\n quit_ = (status, toThrow) => {\n  process.exitCode = status;\n  throw toThrow;\n };\n Module[\"inspect\"] = () => \"[Emscripten Module object]\";\n} else if (ENVIRONMENT_IS_WEB || ENVIRONMENT_IS_WORKER) {\n if (ENVIRONMENT_IS_WORKER) {\n  scriptDirectory = self.location.href;\n } else if (typeof document != \"undefined\" && document.currentScript) {\n  scriptDirectory = document.currentScript.src;\n }\n if (_scriptDir) {\n  scriptDirectory = _scriptDir;\n }\n if (scriptDirectory.indexOf(\"blob:\") !== 0) {\n  scriptDirectory = scriptDirectory.substr(0, scriptDirectory.replace(/[?#].*/, \"\").lastIndexOf(\"/\") + 1);\n } else {\n  scriptDirectory = \"\";\n }\n {\n  read_ = url => {\n   var xhr = new XMLHttpRequest();\n   xhr.open(\"GET\", url, false);\n   xhr.send(null);\n   return xhr.responseText;\n  };\n  if (ENVIRONMENT_IS_WORKER) {\n   readBinary = url => {\n    var xhr = new XMLHttpRequest();\n    xhr.open(\"GET\", url, false);\n    xhr.responseType = \"arraybuffer\";\n    xhr.send(null);\n    return new Uint8Array(xhr.response);\n   };\n  }\n  readAsync = (url, onload, onerror) => {\n   var xhr = new XMLHttpRequest();\n   xhr.open(\"GET\", url, true);\n   xhr.responseType = \"arraybuffer\";\n   xhr.onload = () => {\n    if (xhr.status == 200 || xhr.status == 0 && xhr.response) {\n     onload(xhr.response);\n     return;\n    }\n    onerror();\n   };\n   xhr.onerror = onerror;\n   xhr.send(null);\n  };\n }\n setWindowTitle = title => document.title = title;\n} else {}\n\nvar out = Module[\"print\"] || console.log.bind(console);\n\nvar err = Module[\"printErr\"] || console.warn.bind(console);\n\nObject.assign(Module, moduleOverrides);\n\nmoduleOverrides = null;\n\nif (Module[\"arguments\"]) arguments_ = Module[\"arguments\"];\n\nif (Module[\"thisProgram\"]) thisProgram = Module[\"thisProgram\"];\n\nif (Module[\"quit\"]) quit_ = Module[\"quit\"];\n\nvar wasmBinary;\n\nif (Module[\"wasmBinary\"]) wasmBinary = Module[\"wasmBinary\"];\n\nvar noExitRuntime = Module[\"noExitRuntime\"] || true;\n\nif (typeof WebAssembly != \"object\") {\n abort(\"no native wasm support detected\");\n}\n\nvar wasmMemory;\n\nvar ABORT = false;\n\nvar EXITSTATUS;\n\nfunction assert(condition, text) {\n if (!condition) {\n  abort(text);\n }\n}\n\nvar HEAP, HEAP8, HEAPU8, HEAP16, HEAPU16, HEAP32, HEAPU32, HEAPF32, HEAP64, HEAPU64, HEAPF64;\n\nfunction updateMemoryViews() {\n var b = wasmMemory.buffer;\n Module[\"HEAP8\"] = HEAP8 = new Int8Array(b);\n Module[\"HEAP16\"] = HEAP16 = new Int16Array(b);\n Module[\"HEAP32\"] = HEAP32 = new Int32Array(b);\n Module[\"HEAPU8\"] = HEAPU8 = new Uint8Array(b);\n Module[\"HEAPU16\"] = HEAPU16 = new Uint16Array(b);\n Module[\"HEAPU32\"] = HEAPU32 = new Uint32Array(b);\n Module[\"HEAPF32\"] = HEAPF32 = new Float32Array(b);\n Module[\"HEAPF64\"] = HEAPF64 = new Float64Array(b);\n Module[\"HEAP64\"] = HEAP64 = new BigInt64Array(b);\n Module[\"HEAPU64\"] = HEAPU64 = new BigUint64Array(b);\n}\n\nvar wasmTable;\n\nvar __ATPRERUN__ = [];\n\nvar __ATINIT__ = [];\n\nvar __ATEXIT__ = [];\n\nvar __ATPOSTRUN__ = [];\n\nvar runtimeInitialized = false;\n\nvar runtimeKeepaliveCounter = 0;\n\nfunction keepRuntimeAlive() {\n return noExitRuntime || runtimeKeepaliveCounter > 0;\n}\n\nfunction preRun() {\n if (Module[\"preRun\"]) {\n  if (typeof Module[\"preRun\"] == \"function\") Module[\"preRun\"] = [ Module[\"preRun\"] ];\n  while (Module[\"preRun\"].length) {\n   addOnPreRun(Module[\"preRun\"].shift());\n  }\n }\n callRuntimeCallbacks(__ATPRERUN__);\n}\n\nfunction initRuntime() {\n runtimeInitialized = true;\n callRuntimeCallbacks(__ATINIT__);\n}\n\nfunction postRun() {\n if (Module[\"postRun\"]) {\n  if (typeof Module[\"postRun\"] == \"function\") Module[\"postRun\"] = [ Module[\"postRun\"] ];\n  while (Module[\"postRun\"].length) {\n   addOnPostRun(Module[\"postRun\"].shift());\n  }\n }\n callRuntimeCallbacks(__ATPOSTRUN__);\n}\n\nfunction addOnPreRun(cb) {\n __ATPRERUN__.unshift(cb);\n}\n\nfunction addOnInit(cb) {\n __ATINIT__.unshift(cb);\n}\n\nfunction addOnExit(cb) {}\n\nfunction addOnPostRun(cb) {\n __ATPOSTRUN__.unshift(cb);\n}\n\nvar runDependencies = 0;\n\nvar runDependencyWatcher = null;\n\nvar dependenciesFulfilled = null;\n\nfunction getUniqueRunDependency(id) {\n return id;\n}\n\nfunction addRunDependency(id) {\n runDependencies++;\n if (Module[\"monitorRunDependencies\"]) {\n  Module[\"monitorRunDependencies\"](runDependencies);\n }\n}\n\nfunction removeRunDependency(id) {\n runDependencies--;\n if (Module[\"monitorRunDependencies\"]) {\n  Module[\"monitorRunDependencies\"](runDependencies);\n }\n if (runDependencies == 0) {\n  if (runDependencyWatcher !== null) {\n   clearInterval(runDependencyWatcher);\n   runDependencyWatcher = null;\n  }\n  if (dependenciesFulfilled) {\n   var callback = dependenciesFulfilled;\n   dependenciesFulfilled = null;\n   callback();\n  }\n }\n}\n\nfunction abort(what) {\n if (Module[\"onAbort\"]) {\n  Module[\"onAbort\"](what);\n }\n what = \"Aborted(\" + what + \")\";\n err(what);\n ABORT = true;\n EXITSTATUS = 1;\n what += \". Build with -sASSERTIONS for more info.\";\n var e = new WebAssembly.RuntimeError(what);\n readyPromiseReject(e);\n throw e;\n}\n\nvar dataURIPrefix = \"data:application/octet-stream;base64,\";\n\nfunction isDataURI(filename) {\n return filename.startsWith(dataURIPrefix);\n}\n\nfunction isFileURI(filename) {\n return filename.startsWith(\"file://\");\n}\n\nvar wasmBinaryFile;\n\nwasmBinaryFile = \"ort-wasm-simd.wasm\";\n\nif (!isDataURI(wasmBinaryFile)) {\n wasmBinaryFile = locateFile(wasmBinaryFile);\n}\n\nfunction getBinary(file) {\n try {\n  if (file == wasmBinaryFile && wasmBinary) {\n   return new Uint8Array(wasmBinary);\n  }\n  if (readBinary) {\n   return readBinary(file);\n  }\n  throw \"both async and sync fetching of the wasm failed\";\n } catch (err) {\n  abort(err);\n }\n}\n\nfunction getBinaryPromise(binaryFile) {\n if (!wasmBinary && (ENVIRONMENT_IS_WEB || ENVIRONMENT_IS_WORKER)) {\n  if (typeof fetch == \"function\" && !isFileURI(binaryFile)) {\n   return fetch(binaryFile, {\n    credentials: \"same-origin\"\n   }).then(response => {\n    if (!response[\"ok\"]) {\n     throw \"failed to load wasm binary file at '\" + binaryFile + \"'\";\n    }\n    return response[\"arrayBuffer\"]();\n   }).catch(() => getBinary(binaryFile));\n  } else {\n   if (readAsync) {\n    return new Promise((resolve, reject) => {\n     readAsync(binaryFile, response => resolve(new Uint8Array(response)), reject);\n    });\n   }\n  }\n }\n return Promise.resolve().then(() => getBinary(binaryFile));\n}\n\nfunction instantiateArrayBuffer(binaryFile, imports, receiver) {\n return getBinaryPromise(binaryFile).then(binary => {\n  return WebAssembly.instantiate(binary, imports);\n }).then(instance => {\n  return instance;\n }).then(receiver, reason => {\n  err(\"failed to asynchronously prepare wasm: \" + reason);\n  abort(reason);\n });\n}\n\nfunction instantiateAsync(binary, binaryFile, imports, callback) {\n if (!binary && typeof WebAssembly.instantiateStreaming == \"function\" && !isDataURI(binaryFile) && !isFileURI(binaryFile) && !ENVIRONMENT_IS_NODE && typeof fetch == \"function\") {\n  return fetch(binaryFile, {\n   credentials: \"same-origin\"\n  }).then(response => {\n   var result = WebAssembly.instantiateStreaming(response, imports);\n   return result.then(callback, function(reason) {\n    err(\"wasm streaming compile failed: \" + reason);\n    err(\"falling back to ArrayBuffer instantiation\");\n    return instantiateArrayBuffer(binaryFile, imports, callback);\n   });\n  });\n } else {\n  return instantiateArrayBuffer(binaryFile, imports, callback);\n }\n}\n\nfunction createWasm() {\n var info = {\n  \"env\": wasmImports,\n  \"wasi_snapshot_preview1\": wasmImports\n };\n function receiveInstance(instance, module) {\n  var exports = instance.exports;\n  Module[\"asm\"] = exports;\n  wasmMemory = Module[\"asm\"][\"memory\"];\n  updateMemoryViews();\n  wasmTable = Module[\"asm\"][\"__indirect_function_table\"];\n  addOnInit(Module[\"asm\"][\"__wasm_call_ctors\"]);\n  removeRunDependency(\"wasm-instantiate\");\n  return exports;\n }\n addRunDependency(\"wasm-instantiate\");\n function receiveInstantiationResult(result) {\n  receiveInstance(result[\"instance\"]);\n }\n if (Module[\"instantiateWasm\"]) {\n  try {\n   return Module[\"instantiateWasm\"](info, receiveInstance);\n  } catch (e) {\n   err(\"Module.instantiateWasm callback failed with error: \" + e);\n   readyPromiseReject(e);\n  }\n }\n instantiateAsync(wasmBinary, wasmBinaryFile, info, receiveInstantiationResult).catch(readyPromiseReject);\n return {};\n}\n\nfunction ExitStatus(status) {\n this.name = \"ExitStatus\";\n this.message = \"Program terminated with exit(\" + status + \")\";\n this.status = status;\n}\n\nfunction callRuntimeCallbacks(callbacks) {\n while (callbacks.length > 0) {\n  callbacks.shift()(Module);\n }\n}\n\nfunction getValue(ptr, type = \"i8\") {\n if (type.endsWith(\"*\")) type = \"*\";\n switch (type) {\n case \"i1\":\n  return HEAP8[ptr >>> 0];\n\n case \"i8\":\n  return HEAP8[ptr >>> 0];\n\n case \"i16\":\n  return HEAP16[ptr >>> 1];\n\n case \"i32\":\n  return HEAP32[ptr >>> 2];\n\n case \"i64\":\n  return HEAP64[ptr >> 3];\n\n case \"float\":\n  return HEAPF32[ptr >>> 2];\n\n case \"double\":\n  return HEAPF64[ptr >>> 3];\n\n case \"*\":\n  return HEAPU32[ptr >>> 2];\n\n default:\n  abort(\"invalid type for getValue: \" + type);\n }\n}\n\nfunction setValue(ptr, value, type = \"i8\") {\n if (type.endsWith(\"*\")) type = \"*\";\n switch (type) {\n case \"i1\":\n  HEAP8[ptr >>> 0] = value;\n  break;\n\n case \"i8\":\n  HEAP8[ptr >>> 0] = value;\n  break;\n\n case \"i16\":\n  HEAP16[ptr >>> 1] = value;\n  break;\n\n case \"i32\":\n  HEAP32[ptr >>> 2] = value;\n  break;\n\n case \"i64\":\n  HEAP64[ptr >> 3] = BigInt(value);\n  break;\n\n case \"float\":\n  HEAPF32[ptr >>> 2] = value;\n  break;\n\n case \"double\":\n  HEAPF64[ptr >>> 3] = value;\n  break;\n\n case \"*\":\n  HEAPU32[ptr >>> 2] = value;\n  break;\n\n default:\n  abort(\"invalid type for setValue: \" + type);\n }\n}\n\nvar exceptionCaught = [];\n\nvar uncaughtExceptionCount = 0;\n\nfunction ___cxa_begin_catch(ptr) {\n var info = new ExceptionInfo(ptr);\n if (!info.get_caught()) {\n  info.set_caught(true);\n  uncaughtExceptionCount--;\n }\n info.set_rethrown(false);\n exceptionCaught.push(info);\n ___cxa_increment_exception_refcount(info.excPtr);\n return info.get_exception_ptr();\n}\n\nvar exceptionLast = 0;\n\nfunction ___cxa_end_catch() {\n _setThrew(0);\n var info = exceptionCaught.pop();\n ___cxa_decrement_exception_refcount(info.excPtr);\n exceptionLast = 0;\n}\n\nfunction ExceptionInfo(excPtr) {\n this.excPtr = excPtr;\n this.ptr = excPtr - 24;\n this.set_type = function(type) {\n  HEAPU32[this.ptr + 4 >>> 2] = type;\n };\n this.get_type = function() {\n  return HEAPU32[this.ptr + 4 >>> 2];\n };\n this.set_destructor = function(destructor) {\n  HEAPU32[this.ptr + 8 >>> 2] = destructor;\n };\n this.get_destructor = function() {\n  return HEAPU32[this.ptr + 8 >>> 2];\n };\n this.set_caught = function(caught) {\n  caught = caught ? 1 : 0;\n  HEAP8[this.ptr + 12 >>> 0] = caught;\n };\n this.get_caught = function() {\n  return HEAP8[this.ptr + 12 >>> 0] != 0;\n };\n this.set_rethrown = function(rethrown) {\n  rethrown = rethrown ? 1 : 0;\n  HEAP8[this.ptr + 13 >>> 0] = rethrown;\n };\n this.get_rethrown = function() {\n  return HEAP8[this.ptr + 13 >>> 0] != 0;\n };\n this.init = function(type, destructor) {\n  this.set_adjusted_ptr(0);\n  this.set_type(type);\n  this.set_destructor(destructor);\n };\n this.set_adjusted_ptr = function(adjustedPtr) {\n  HEAPU32[this.ptr + 16 >>> 2] = adjustedPtr;\n };\n this.get_adjusted_ptr = function() {\n  return HEAPU32[this.ptr + 16 >>> 2];\n };\n this.get_exception_ptr = function() {\n  var isPointer = ___cxa_is_pointer_type(this.get_type());\n  if (isPointer) {\n   return HEAPU32[this.excPtr >>> 2];\n  }\n  var adjusted = this.get_adjusted_ptr();\n  if (adjusted !== 0) return adjusted;\n  return this.excPtr;\n };\n}\n\nfunction ___resumeException(ptr) {\n if (!exceptionLast) {\n  exceptionLast = ptr;\n }\n throw exceptionLast;\n}\n\nfunction ___cxa_find_matching_catch() {\n var thrown = exceptionLast;\n if (!thrown) {\n  setTempRet0(0);\n  return 0;\n }\n var info = new ExceptionInfo(thrown);\n info.set_adjusted_ptr(thrown);\n var thrownType = info.get_type();\n if (!thrownType) {\n  setTempRet0(0);\n  return thrown;\n }\n for (var i = 0; i < arguments.length; i++) {\n  var caughtType = arguments[i];\n  if (caughtType === 0 || caughtType === thrownType) {\n   break;\n  }\n  var adjusted_ptr_addr = info.ptr + 16;\n  if (___cxa_can_catch(caughtType, thrownType, adjusted_ptr_addr)) {\n   setTempRet0(caughtType);\n   return thrown;\n  }\n }\n setTempRet0(thrownType);\n return thrown;\n}\n\nvar ___cxa_find_matching_catch_2 = ___cxa_find_matching_catch;\n\nvar ___cxa_find_matching_catch_3 = ___cxa_find_matching_catch;\n\nvar ___cxa_find_matching_catch_4 = ___cxa_find_matching_catch;\n\nvar ___cxa_find_matching_catch_5 = ___cxa_find_matching_catch;\n\nfunction ___cxa_rethrow() {\n var info = exceptionCaught.pop();\n if (!info) {\n  abort(\"no exception to throw\");\n }\n var ptr = info.excPtr;\n if (!info.get_rethrown()) {\n  exceptionCaught.push(info);\n  info.set_rethrown(true);\n  info.set_caught(false);\n  uncaughtExceptionCount++;\n }\n exceptionLast = ptr;\n throw exceptionLast;\n}\n\nfunction ___cxa_throw(ptr, type, destructor) {\n var info = new ExceptionInfo(ptr);\n info.init(type, destructor);\n exceptionLast = ptr;\n uncaughtExceptionCount++;\n throw exceptionLast;\n}\n\nfunction ___cxa_uncaught_exceptions() {\n return uncaughtExceptionCount;\n}\n\nvar dlopenMissingError = \"To use dlopen, you need enable dynamic linking, see https://emscripten.org/docs/compiling/Dynamic-Linking.html\";\n\nfunction ___dlsym(handle, symbol) {\n abort(dlopenMissingError);\n}\n\nfunction setErrNo(value) {\n HEAP32[___errno_location() >>> 2] = value;\n return value;\n}\n\nvar UTF8Decoder = typeof TextDecoder != \"undefined\" ? new TextDecoder(\"utf8\") : undefined;\n\nfunction UTF8ArrayToString(heapOrArray, idx, maxBytesToRead) {\n idx >>>= 0;\n var endIdx = idx + maxBytesToRead;\n var endPtr = idx;\n while (heapOrArray[endPtr] && !(endPtr >= endIdx)) ++endPtr;\n if (endPtr - idx > 16 && heapOrArray.buffer && UTF8Decoder) {\n  return UTF8Decoder.decode(heapOrArray.subarray(idx, endPtr));\n }\n var str = \"\";\n while (idx < endPtr) {\n  var u0 = heapOrArray[idx++];\n  if (!(u0 & 128)) {\n   str += String.fromCharCode(u0);\n   continue;\n  }\n  var u1 = heapOrArray[idx++] & 63;\n  if ((u0 & 224) == 192) {\n   str += String.fromCharCode((u0 & 31) << 6 | u1);\n   continue;\n  }\n  var u2 = heapOrArray[idx++] & 63;\n  if ((u0 & 240) == 224) {\n   u0 = (u0 & 15) << 12 | u1 << 6 | u2;\n  } else {\n   u0 = (u0 & 7) << 18 | u1 << 12 | u2 << 6 | heapOrArray[idx++] & 63;\n  }\n  if (u0 < 65536) {\n   str += String.fromCharCode(u0);\n  } else {\n   var ch = u0 - 65536;\n   str += String.fromCharCode(55296 | ch >> 10, 56320 | ch & 1023);\n  }\n }\n return str;\n}\n\nfunction UTF8ToString(ptr, maxBytesToRead) {\n ptr >>>= 0;\n return ptr ? UTF8ArrayToString(HEAPU8, ptr, maxBytesToRead) : \"\";\n}\n\nvar SYSCALLS = {\n varargs: undefined,\n get: function() {\n  SYSCALLS.varargs += 4;\n  var ret = HEAP32[SYSCALLS.varargs - 4 >>> 2];\n  return ret;\n },\n getStr: function(ptr) {\n  var ret = UTF8ToString(ptr);\n  return ret;\n }\n};\n\nfunction ___syscall_fcntl64(fd, cmd, varargs) {\n SYSCALLS.varargs = varargs;\n return 0;\n}\n\nfunction ___syscall_fstat64(fd, buf) {}\n\nfunction lengthBytesUTF8(str) {\n var len = 0;\n for (var i = 0; i < str.length; ++i) {\n  var c = str.charCodeAt(i);\n  if (c <= 127) {\n   len++;\n  } else if (c <= 2047) {\n   len += 2;\n  } else if (c >= 55296 && c <= 57343) {\n   len += 4;\n   ++i;\n  } else {\n   len += 3;\n  }\n }\n return len;\n}\n\nfunction stringToUTF8Array(str, heap, outIdx, maxBytesToWrite) {\n outIdx >>>= 0;\n if (!(maxBytesToWrite > 0)) return 0;\n var startIdx = outIdx;\n var endIdx = outIdx + maxBytesToWrite - 1;\n for (var i = 0; i < str.length; ++i) {\n  var u = str.charCodeAt(i);\n  if (u >= 55296 && u <= 57343) {\n   var u1 = str.charCodeAt(++i);\n   u = 65536 + ((u & 1023) << 10) | u1 & 1023;\n  }\n  if (u <= 127) {\n   if (outIdx >= endIdx) break;\n   heap[outIdx++ >>> 0] = u;\n  } else if (u <= 2047) {\n   if (outIdx + 1 >= endIdx) break;\n   heap[outIdx++ >>> 0] = 192 | u >> 6;\n   heap[outIdx++ >>> 0] = 128 | u & 63;\n  } else if (u <= 65535) {\n   if (outIdx + 2 >= endIdx) break;\n   heap[outIdx++ >>> 0] = 224 | u >> 12;\n   heap[outIdx++ >>> 0] = 128 | u >> 6 & 63;\n   heap[outIdx++ >>> 0] = 128 | u & 63;\n  } else {\n   if (outIdx + 3 >= endIdx) break;\n   heap[outIdx++ >>> 0] = 240 | u >> 18;\n   heap[outIdx++ >>> 0] = 128 | u >> 12 & 63;\n   heap[outIdx++ >>> 0] = 128 | u >> 6 & 63;\n   heap[outIdx++ >>> 0] = 128 | u & 63;\n  }\n }\n heap[outIdx >>> 0] = 0;\n return outIdx - startIdx;\n}\n\nfunction stringToUTF8(str, outPtr, maxBytesToWrite) {\n return stringToUTF8Array(str, HEAPU8, outPtr, maxBytesToWrite);\n}\n\nfunction ___syscall_getcwd(buf, size) {}\n\nfunction ___syscall_getdents64(fd, dirp, count) {}\n\nfunction ___syscall_ioctl(fd, op, varargs) {\n SYSCALLS.varargs = varargs;\n return 0;\n}\n\nfunction ___syscall_lstat64(path, buf) {}\n\nfunction ___syscall_mkdirat(dirfd, path, mode) {}\n\nfunction ___syscall_newfstatat(dirfd, path, buf, flags) {}\n\nfunction ___syscall_openat(dirfd, path, flags, varargs) {\n SYSCALLS.varargs = varargs;\n}\n\nfunction ___syscall_readlinkat(dirfd, path, buf, bufsize) {}\n\nfunction ___syscall_rmdir(path) {}\n\nfunction ___syscall_stat64(path, buf) {}\n\nfunction ___syscall_unlinkat(dirfd, path, flags) {}\n\nfunction embindRepr(v) {\n if (v === null) {\n  return \"null\";\n }\n var t = typeof v;\n if (t === \"object\" || t === \"array\" || t === \"function\") {\n  return v.toString();\n } else {\n  return \"\" + v;\n }\n}\n\nfunction embind_init_charCodes() {\n var codes = new Array(256);\n for (var i = 0; i < 256; ++i) {\n  codes[i] = String.fromCharCode(i);\n }\n embind_charCodes = codes;\n}\n\nvar embind_charCodes = undefined;\n\nfunction readLatin1String(ptr) {\n var ret = \"\";\n var c = ptr;\n while (HEAPU8[c >>> 0]) {\n  ret += embind_charCodes[HEAPU8[c++ >>> 0]];\n }\n return ret;\n}\n\nvar awaitingDependencies = {};\n\nvar registeredTypes = {};\n\nvar typeDependencies = {};\n\nvar char_0 = 48;\n\nvar char_9 = 57;\n\nfunction makeLegalFunctionName(name) {\n if (undefined === name) {\n  return \"_unknown\";\n }\n name = name.replace(/[^a-zA-Z0-9_]/g, \"$\");\n var f = name.charCodeAt(0);\n if (f >= char_0 && f <= char_9) {\n  return \"_\" + name;\n }\n return name;\n}\n\nfunction createNamedFunction(name, body) {\n name = makeLegalFunctionName(name);\n return {\n  [name]: function() {\n   return body.apply(this, arguments);\n  }\n }[name];\n}\n\nfunction extendError(baseErrorType, errorName) {\n var errorClass = createNamedFunction(errorName, function(message) {\n  this.name = errorName;\n  this.message = message;\n  var stack = new Error(message).stack;\n  if (stack !== undefined) {\n   this.stack = this.toString() + \"\\n\" + stack.replace(/^Error(:[^\\n]*)?\\n/, \"\");\n  }\n });\n errorClass.prototype = Object.create(baseErrorType.prototype);\n errorClass.prototype.constructor = errorClass;\n errorClass.prototype.toString = function() {\n  if (this.message === undefined) {\n   return this.name;\n  } else {\n   return this.name + \": \" + this.message;\n  }\n };\n return errorClass;\n}\n\nvar BindingError = undefined;\n\nfunction throwBindingError(message) {\n throw new BindingError(message);\n}\n\nvar InternalError = undefined;\n\nfunction throwInternalError(message) {\n throw new InternalError(message);\n}\n\nfunction whenDependentTypesAreResolved(myTypes, dependentTypes, getTypeConverters) {\n myTypes.forEach(function(type) {\n  typeDependencies[type] = dependentTypes;\n });\n function onComplete(typeConverters) {\n  var myTypeConverters = getTypeConverters(typeConverters);\n  if (myTypeConverters.length !== myTypes.length) {\n   throwInternalError(\"Mismatched type converter count\");\n  }\n  for (var i = 0; i < myTypes.length; ++i) {\n   registerType(myTypes[i], myTypeConverters[i]);\n  }\n }\n var typeConverters = new Array(dependentTypes.length);\n var unregisteredTypes = [];\n var registered = 0;\n dependentTypes.forEach((dt, i) => {\n  if (registeredTypes.hasOwnProperty(dt)) {\n   typeConverters[i] = registeredTypes[dt];\n  } else {\n   unregisteredTypes.push(dt);\n   if (!awaitingDependencies.hasOwnProperty(dt)) {\n    awaitingDependencies[dt] = [];\n   }\n   awaitingDependencies[dt].push(() => {\n    typeConverters[i] = registeredTypes[dt];\n    ++registered;\n    if (registered === unregisteredTypes.length) {\n     onComplete(typeConverters);\n    }\n   });\n  }\n });\n if (0 === unregisteredTypes.length) {\n  onComplete(typeConverters);\n }\n}\n\nfunction registerType(rawType, registeredInstance, options = {}) {\n if (!(\"argPackAdvance\" in registeredInstance)) {\n  throw new TypeError(\"registerType registeredInstance requires argPackAdvance\");\n }\n var name = registeredInstance.name;\n if (!rawType) {\n  throwBindingError('type \"' + name + '\" must have a positive integer typeid pointer');\n }\n if (registeredTypes.hasOwnProperty(rawType)) {\n  if (options.ignoreDuplicateRegistrations) {\n   return;\n  } else {\n   throwBindingError(\"Cannot register type '\" + name + \"' twice\");\n  }\n }\n registeredTypes[rawType] = registeredInstance;\n delete typeDependencies[rawType];\n if (awaitingDependencies.hasOwnProperty(rawType)) {\n  var callbacks = awaitingDependencies[rawType];\n  delete awaitingDependencies[rawType];\n  callbacks.forEach(cb => cb());\n }\n}\n\nfunction integerReadValueFromPointer(name, shift, signed) {\n switch (shift) {\n case 0:\n  return signed ? function readS8FromPointer(pointer) {\n   return HEAP8[pointer >>> 0];\n  } : function readU8FromPointer(pointer) {\n   return HEAPU8[pointer >>> 0];\n  };\n\n case 1:\n  return signed ? function readS16FromPointer(pointer) {\n   return HEAP16[pointer >>> 1];\n  } : function readU16FromPointer(pointer) {\n   return HEAPU16[pointer >>> 1];\n  };\n\n case 2:\n  return signed ? function readS32FromPointer(pointer) {\n   return HEAP32[pointer >>> 2];\n  } : function readU32FromPointer(pointer) {\n   return HEAPU32[pointer >>> 2];\n  };\n\n case 3:\n  return signed ? function readS64FromPointer(pointer) {\n   return HEAP64[pointer >> 3];\n  } : function readU64FromPointer(pointer) {\n   return HEAPU64[pointer >> 3];\n  };\n\n default:\n  throw new TypeError(\"Unknown integer type: \" + name);\n }\n}\n\nfunction __embind_register_bigint(primitiveType, name, size, minRange, maxRange) {\n name = readLatin1String(name);\n var shift = getShiftFromSize(size);\n var isUnsignedType = name.indexOf(\"u\") != -1;\n if (isUnsignedType) {\n  maxRange = (1n << 64n) - 1n;\n }\n registerType(primitiveType, {\n  name: name,\n  \"fromWireType\": function(value) {\n   return value;\n  },\n  \"toWireType\": function(destructors, value) {\n   if (typeof value != \"bigint\" && typeof value != \"number\") {\n    throw new TypeError('Cannot convert \"' + embindRepr(value) + '\" to ' + this.name);\n   }\n   if (value < minRange || value > maxRange) {\n    throw new TypeError('Passing a number \"' + embindRepr(value) + '\" from JS side to C/C++ side to an argument of type \"' + name + '\", which is outside the valid range [' + minRange + \", \" + maxRange + \"]!\");\n   }\n   return value;\n  },\n  \"argPackAdvance\": 8,\n  \"readValueFromPointer\": integerReadValueFromPointer(name, shift, !isUnsignedType),\n  destructorFunction: null\n });\n}\n\nfunction getShiftFromSize(size) {\n switch (size) {\n case 1:\n  return 0;\n\n case 2:\n  return 1;\n\n case 4:\n  return 2;\n\n case 8:\n  return 3;\n\n default:\n  throw new TypeError(\"Unknown type size: \" + size);\n }\n}\n\nfunction __embind_register_bool(rawType, name, size, trueValue, falseValue) {\n var shift = getShiftFromSize(size);\n name = readLatin1String(name);\n registerType(rawType, {\n  name: name,\n  \"fromWireType\": function(wt) {\n   return !!wt;\n  },\n  \"toWireType\": function(destructors, o) {\n   return o ? trueValue : falseValue;\n  },\n  \"argPackAdvance\": 8,\n  \"readValueFromPointer\": function(pointer) {\n   var heap;\n   if (size === 1) {\n    heap = HEAP8;\n   } else if (size === 2) {\n    heap = HEAP16;\n   } else if (size === 4) {\n    heap = HEAP32;\n   } else {\n    throw new TypeError(\"Unknown boolean type size: \" + name);\n   }\n   return this[\"fromWireType\"](heap[pointer >>> shift]);\n  },\n  destructorFunction: null\n });\n}\n\nfunction HandleAllocator() {\n this.allocated = [ undefined ];\n this.freelist = [];\n this.get = function(id) {\n  return this.allocated[id];\n };\n this.allocate = function(handle) {\n  let id = this.freelist.pop() || this.allocated.length;\n  this.allocated[id] = handle;\n  return id;\n };\n this.free = function(id) {\n  this.allocated[id] = undefined;\n  this.freelist.push(id);\n };\n}\n\nvar emval_handles = new HandleAllocator();\n\nfunction __emval_decref(handle) {\n if (handle >= emval_handles.reserved && 0 === --emval_handles.get(handle).refcount) {\n  emval_handles.free(handle);\n }\n}\n\nfunction count_emval_handles() {\n var count = 0;\n for (var i = emval_handles.reserved; i < emval_handles.allocated.length; ++i) {\n  if (emval_handles.allocated[i] !== undefined) {\n   ++count;\n  }\n }\n return count;\n}\n\nfunction init_emval() {\n emval_handles.allocated.push({\n  value: undefined\n }, {\n  value: null\n }, {\n  value: true\n }, {\n  value: false\n });\n emval_handles.reserved = emval_handles.allocated.length;\n Module[\"count_emval_handles\"] = count_emval_handles;\n}\n\nvar Emval = {\n toValue: handle => {\n  if (!handle) {\n   throwBindingError(\"Cannot use deleted val. handle = \" + handle);\n  }\n  return emval_handles.get(handle).value;\n },\n toHandle: value => {\n  switch (value) {\n  case undefined:\n   return 1;\n\n  case null:\n   return 2;\n\n  case true:\n   return 3;\n\n  case false:\n   return 4;\n\n  default:\n   {\n    return emval_handles.allocate({\n     refcount: 1,\n     value: value\n    });\n   }\n  }\n }\n};\n\nfunction simpleReadValueFromPointer(pointer) {\n return this[\"fromWireType\"](HEAP32[pointer >>> 2]);\n}\n\nfunction __embind_register_emval(rawType, name) {\n name = readLatin1String(name);\n registerType(rawType, {\n  name: name,\n  \"fromWireType\": function(handle) {\n   var rv = Emval.toValue(handle);\n   __emval_decref(handle);\n   return rv;\n  },\n  \"toWireType\": function(destructors, value) {\n   return Emval.toHandle(value);\n  },\n  \"argPackAdvance\": 8,\n  \"readValueFromPointer\": simpleReadValueFromPointer,\n  destructorFunction: null\n });\n}\n\nfunction floatReadValueFromPointer(name, shift) {\n switch (shift) {\n case 2:\n  return function(pointer) {\n   return this[\"fromWireType\"](HEAPF32[pointer >>> 2]);\n  };\n\n case 3:\n  return function(pointer) {\n   return this[\"fromWireType\"](HEAPF64[pointer >>> 3]);\n  };\n\n default:\n  throw new TypeError(\"Unknown float type: \" + name);\n }\n}\n\nfunction __embind_register_float(rawType, name, size) {\n var shift = getShiftFromSize(size);\n name = readLatin1String(name);\n registerType(rawType, {\n  name: name,\n  \"fromWireType\": function(value) {\n   return value;\n  },\n  \"toWireType\": function(destructors, value) {\n   return value;\n  },\n  \"argPackAdvance\": 8,\n  \"readValueFromPointer\": floatReadValueFromPointer(name, shift),\n  destructorFunction: null\n });\n}\n\nfunction __embind_register_integer(primitiveType, name, size, minRange, maxRange) {\n name = readLatin1String(name);\n if (maxRange === -1) {\n  maxRange = 4294967295;\n }\n var shift = getShiftFromSize(size);\n var fromWireType = value => value;\n if (minRange === 0) {\n  var bitshift = 32 - 8 * size;\n  fromWireType = value => value << bitshift >>> bitshift;\n }\n var isUnsignedType = name.includes(\"unsigned\");\n var checkAssertions = (value, toTypeName) => {};\n var toWireType;\n if (isUnsignedType) {\n  toWireType = function(destructors, value) {\n   checkAssertions(value, this.name);\n   return value >>> 0;\n  };\n } else {\n  toWireType = function(destructors, value) {\n   checkAssertions(value, this.name);\n   return value;\n  };\n }\n registerType(primitiveType, {\n  name: name,\n  \"fromWireType\": fromWireType,\n  \"toWireType\": toWireType,\n  \"argPackAdvance\": 8,\n  \"readValueFromPointer\": integerReadValueFromPointer(name, shift, minRange !== 0),\n  destructorFunction: null\n });\n}\n\nfunction __embind_register_memory_view(rawType, dataTypeIndex, name) {\n var typeMapping = [ Int8Array, Uint8Array, Int16Array, Uint16Array, Int32Array, Uint32Array, Float32Array, Float64Array, BigInt64Array, BigUint64Array ];\n var TA = typeMapping[dataTypeIndex];\n function decodeMemoryView(handle) {\n  handle = handle >> 2;\n  var heap = HEAPU32;\n  var size = heap[handle >>> 0];\n  var data = heap[handle + 1 >>> 0];\n  return new TA(heap.buffer, data, size);\n }\n name = readLatin1String(name);\n registerType(rawType, {\n  name: name,\n  \"fromWireType\": decodeMemoryView,\n  \"argPackAdvance\": 8,\n  \"readValueFromPointer\": decodeMemoryView\n }, {\n  ignoreDuplicateRegistrations: true\n });\n}\n\nfunction __embind_register_std_string(rawType, name) {\n name = readLatin1String(name);\n var stdStringIsUTF8 = name === \"std::string\";\n registerType(rawType, {\n  name: name,\n  \"fromWireType\": function(value) {\n   var length = HEAPU32[value >>> 2];\n   var payload = value + 4;\n   var str;\n   if (stdStringIsUTF8) {\n    var decodeStartPtr = payload;\n    for (var i = 0; i <= length; ++i) {\n     var currentBytePtr = payload + i;\n     if (i == length || HEAPU8[currentBytePtr >>> 0] == 0) {\n      var maxRead = currentBytePtr - decodeStartPtr;\n      var stringSegment = UTF8ToString(decodeStartPtr, maxRead);\n      if (str === undefined) {\n       str = stringSegment;\n      } else {\n       str += String.fromCharCode(0);\n       str += stringSegment;\n      }\n      decodeStartPtr = currentBytePtr + 1;\n     }\n    }\n   } else {\n    var a = new Array(length);\n    for (var i = 0; i < length; ++i) {\n     a[i] = String.fromCharCode(HEAPU8[payload + i >>> 0]);\n    }\n    str = a.join(\"\");\n   }\n   _free(value);\n   return str;\n  },\n  \"toWireType\": function(destructors, value) {\n   if (value instanceof ArrayBuffer) {\n    value = new Uint8Array(value);\n   }\n   var length;\n   var valueIsOfTypeString = typeof value == \"string\";\n   if (!(valueIsOfTypeString || value instanceof Uint8Array || value instanceof Uint8ClampedArray || value instanceof Int8Array)) {\n    throwBindingError(\"Cannot pass non-string to std::string\");\n   }\n   if (stdStringIsUTF8 && valueIsOfTypeString) {\n    length = lengthBytesUTF8(value);\n   } else {\n    length = value.length;\n   }\n   var base = _malloc(4 + length + 1);\n   var ptr = base + 4;\n   ptr >>>= 0;\n   HEAPU32[base >>> 2] = length;\n   if (stdStringIsUTF8 && valueIsOfTypeString) {\n    stringToUTF8(value, ptr, length + 1);\n   } else {\n    if (valueIsOfTypeString) {\n     for (var i = 0; i < length; ++i) {\n      var charCode = value.charCodeAt(i);\n      if (charCode > 255) {\n       _free(ptr);\n       throwBindingError(\"String has UTF-16 code units that do not fit in 8 bits\");\n      }\n      HEAPU8[ptr + i >>> 0] = charCode;\n     }\n    } else {\n     for (var i = 0; i < length; ++i) {\n      HEAPU8[ptr + i >>> 0] = value[i];\n     }\n    }\n   }\n   if (destructors !== null) {\n    destructors.push(_free, base);\n   }\n   return base;\n  },\n  \"argPackAdvance\": 8,\n  \"readValueFromPointer\": simpleReadValueFromPointer,\n  destructorFunction: function(ptr) {\n   _free(ptr);\n  }\n });\n}\n\nvar UTF16Decoder = typeof TextDecoder != \"undefined\" ? new TextDecoder(\"utf-16le\") : undefined;\n\nfunction UTF16ToString(ptr, maxBytesToRead) {\n var endPtr = ptr;\n var idx = endPtr >> 1;\n var maxIdx = idx + maxBytesToRead / 2;\n while (!(idx >= maxIdx) && HEAPU16[idx >>> 0]) ++idx;\n endPtr = idx << 1;\n if (endPtr - ptr > 32 && UTF16Decoder) return UTF16Decoder.decode(HEAPU8.subarray(ptr >>> 0, endPtr >>> 0));\n var str = \"\";\n for (var i = 0; !(i >= maxBytesToRead / 2); ++i) {\n  var codeUnit = HEAP16[ptr + i * 2 >>> 1];\n  if (codeUnit == 0) break;\n  str += String.fromCharCode(codeUnit);\n }\n return str;\n}\n\nfunction stringToUTF16(str, outPtr, maxBytesToWrite) {\n if (maxBytesToWrite === undefined) {\n  maxBytesToWrite = 2147483647;\n }\n if (maxBytesToWrite < 2) return 0;\n maxBytesToWrite -= 2;\n var startPtr = outPtr;\n var numCharsToWrite = maxBytesToWrite < str.length * 2 ? maxBytesToWrite / 2 : str.length;\n for (var i = 0; i < numCharsToWrite; ++i) {\n  var codeUnit = str.charCodeAt(i);\n  HEAP16[outPtr >>> 1] = codeUnit;\n  outPtr += 2;\n }\n HEAP16[outPtr >>> 1] = 0;\n return outPtr - startPtr;\n}\n\nfunction lengthBytesUTF16(str) {\n return str.length * 2;\n}\n\nfunction UTF32ToString(ptr, maxBytesToRead) {\n var i = 0;\n var str = \"\";\n while (!(i >= maxBytesToRead / 4)) {\n  var utf32 = HEAP32[ptr + i * 4 >>> 2];\n  if (utf32 == 0) break;\n  ++i;\n  if (utf32 >= 65536) {\n   var ch = utf32 - 65536;\n   str += String.fromCharCode(55296 | ch >> 10, 56320 | ch & 1023);\n  } else {\n   str += String.fromCharCode(utf32);\n  }\n }\n return str;\n}\n\nfunction stringToUTF32(str, outPtr, maxBytesToWrite) {\n outPtr >>>= 0;\n if (maxBytesToWrite === undefined) {\n  maxBytesToWrite = 2147483647;\n }\n if (maxBytesToWrite < 4) return 0;\n var startPtr = outPtr;\n var endPtr = startPtr + maxBytesToWrite - 4;\n for (var i = 0; i < str.length; ++i) {\n  var codeUnit = str.charCodeAt(i);\n  if (codeUnit >= 55296 && codeUnit <= 57343) {\n   var trailSurrogate = str.charCodeAt(++i);\n   codeUnit = 65536 + ((codeUnit & 1023) << 10) | trailSurrogate & 1023;\n  }\n  HEAP32[outPtr >>> 2] = codeUnit;\n  outPtr += 4;\n  if (outPtr + 4 > endPtr) break;\n }\n HEAP32[outPtr >>> 2] = 0;\n return outPtr - startPtr;\n}\n\nfunction lengthBytesUTF32(str) {\n var len = 0;\n for (var i = 0; i < str.length; ++i) {\n  var codeUnit = str.charCodeAt(i);\n  if (codeUnit >= 55296 && codeUnit <= 57343) ++i;\n  len += 4;\n }\n return len;\n}\n\nfunction __embind_register_std_wstring(rawType, charSize, name) {\n name = readLatin1String(name);\n var decodeString, encodeString, getHeap, lengthBytesUTF, shift;\n if (charSize === 2) {\n  decodeString = UTF16ToString;\n  encodeString = stringToUTF16;\n  lengthBytesUTF = lengthBytesUTF16;\n  getHeap = () => HEAPU16;\n  shift = 1;\n } else if (charSize === 4) {\n  decodeString = UTF32ToString;\n  encodeString = stringToUTF32;\n  lengthBytesUTF = lengthBytesUTF32;\n  getHeap = () => HEAPU32;\n  shift = 2;\n }\n registerType(rawType, {\n  name: name,\n  \"fromWireType\": function(value) {\n   var length = HEAPU32[value >>> 2];\n   var HEAP = getHeap();\n   var str;\n   var decodeStartPtr = value + 4;\n   for (var i = 0; i <= length; ++i) {\n    var currentBytePtr = value + 4 + i * charSize;\n    if (i == length || HEAP[currentBytePtr >>> shift] == 0) {\n     var maxReadBytes = currentBytePtr - decodeStartPtr;\n     var stringSegment = decodeString(decodeStartPtr, maxReadBytes);\n     if (str === undefined) {\n      str = stringSegment;\n     } else {\n      str += String.fromCharCode(0);\n      str += stringSegment;\n     }\n     decodeStartPtr = currentBytePtr + charSize;\n    }\n   }\n   _free(value);\n   return str;\n  },\n  \"toWireType\": function(destructors, value) {\n   if (!(typeof value == \"string\")) {\n    throwBindingError(\"Cannot pass non-string to C++ string type \" + name);\n   }\n   var length = lengthBytesUTF(value);\n   var ptr = _malloc(4 + length + charSize);\n   ptr >>>= 0;\n   HEAPU32[ptr >>> 2] = length >> shift;\n   encodeString(value, ptr + 4, length + charSize);\n   if (destructors !== null) {\n    destructors.push(_free, ptr);\n   }\n   return ptr;\n  },\n  \"argPackAdvance\": 8,\n  \"readValueFromPointer\": simpleReadValueFromPointer,\n  destructorFunction: function(ptr) {\n   _free(ptr);\n  }\n });\n}\n\nfunction __embind_register_void(rawType, name) {\n name = readLatin1String(name);\n registerType(rawType, {\n  isVoid: true,\n  name: name,\n  \"argPackAdvance\": 0,\n  \"fromWireType\": function() {\n   return undefined;\n  },\n  \"toWireType\": function(destructors, o) {\n   return undefined;\n  }\n });\n}\n\nvar nowIsMonotonic = true;\n\nfunction __emscripten_get_now_is_monotonic() {\n return nowIsMonotonic;\n}\n\nfunction getTypeName(type) {\n var ptr = ___getTypeName(type);\n var rv = readLatin1String(ptr);\n _free(ptr);\n return rv;\n}\n\nfunction requireRegisteredType(rawType, humanName) {\n var impl = registeredTypes[rawType];\n if (undefined === impl) {\n  throwBindingError(humanName + \" has unknown type \" + getTypeName(rawType));\n }\n return impl;\n}\n\nfunction __emval_as(handle, returnType, destructorsRef) {\n handle = Emval.toValue(handle);\n returnType = requireRegisteredType(returnType, \"emval::as\");\n var destructors = [];\n var rd = Emval.toHandle(destructors);\n HEAPU32[destructorsRef >>> 2] = rd;\n return returnType[\"toWireType\"](destructors, handle);\n}\n\nfunction emval_allocateDestructors(destructorsRef) {\n var destructors = [];\n HEAPU32[destructorsRef >>> 2] = Emval.toHandle(destructors);\n return destructors;\n}\n\nvar emval_symbols = {};\n\nfunction getStringOrSymbol(address) {\n var symbol = emval_symbols[address];\n if (symbol === undefined) {\n  return readLatin1String(address);\n }\n return symbol;\n}\n\nvar emval_methodCallers = [];\n\nfunction __emval_call_method(caller, handle, methodName, destructorsRef, args) {\n caller = emval_methodCallers[caller];\n handle = Emval.toValue(handle);\n methodName = getStringOrSymbol(methodName);\n return caller(handle, methodName, emval_allocateDestructors(destructorsRef), args);\n}\n\nfunction __emval_call_void_method(caller, handle, methodName, args) {\n caller = emval_methodCallers[caller];\n handle = Emval.toValue(handle);\n methodName = getStringOrSymbol(methodName);\n caller(handle, methodName, null, args);\n}\n\nfunction __emval_equals(first, second) {\n first = Emval.toValue(first);\n second = Emval.toValue(second);\n return first == second;\n}\n\nfunction emval_get_global() {\n if (typeof globalThis == \"object\") {\n  return globalThis;\n }\n return function() {\n  return Function;\n }()(\"return this\")();\n}\n\nfunction __emval_get_global(name) {\n if (name === 0) {\n  return Emval.toHandle(emval_get_global());\n } else {\n  name = getStringOrSymbol(name);\n  return Emval.toHandle(emval_get_global()[name]);\n }\n}\n\nfunction emval_addMethodCaller(caller) {\n var id = emval_methodCallers.length;\n emval_methodCallers.push(caller);\n return id;\n}\n\nfunction emval_lookupTypes(argCount, argTypes) {\n var a = new Array(argCount);\n for (var i = 0; i < argCount; ++i) {\n  a[i] = requireRegisteredType(HEAPU32[argTypes + i * 4 >>> 2], \"parameter \" + i);\n }\n return a;\n}\n\nvar emval_registeredMethods = [];\n\nfunction newFunc(constructor, argumentList) {\n if (!(constructor instanceof Function)) {\n  throw new TypeError(\"new_ called with constructor type \" + typeof constructor + \" which is not a function\");\n }\n var dummy = createNamedFunction(constructor.name || \"unknownFunctionName\", function() {});\n dummy.prototype = constructor.prototype;\n var obj = new dummy();\n var r = constructor.apply(obj, argumentList);\n return r instanceof Object ? r : obj;\n}\n\nfunction __emval_get_method_caller(argCount, argTypes) {\n var types = emval_lookupTypes(argCount, argTypes);\n var retType = types[0];\n var signatureName = retType.name + \"_$\" + types.slice(1).map(function(t) {\n  return t.name;\n }).join(\"_\") + \"$\";\n var returnId = emval_registeredMethods[signatureName];\n if (returnId !== undefined) {\n  return returnId;\n }\n var params = [ \"retType\" ];\n var args = [ retType ];\n var argsList = \"\";\n for (var i = 0; i < argCount - 1; ++i) {\n  argsList += (i !== 0 ? \", \" : \"\") + \"arg\" + i;\n  params.push(\"argType\" + i);\n  args.push(types[1 + i]);\n }\n var functionName = makeLegalFunctionName(\"methodCaller_\" + signatureName);\n var functionBody = \"return function \" + functionName + \"(handle, name, destructors, args) {\\n\";\n var offset = 0;\n for (var i = 0; i < argCount - 1; ++i) {\n  functionBody += \"    var arg\" + i + \" = argType\" + i + \".readValueFromPointer(args\" + (offset ? \"+\" + offset : \"\") + \");\\n\";\n  offset += types[i + 1][\"argPackAdvance\"];\n }\n functionBody += \"    var rv = handle[name](\" + argsList + \");\\n\";\n for (var i = 0; i < argCount - 1; ++i) {\n  if (types[i + 1][\"deleteObject\"]) {\n   functionBody += \"    argType\" + i + \".deleteObject(arg\" + i + \");\\n\";\n  }\n }\n if (!retType.isVoid) {\n  functionBody += \"    return retType.toWireType(destructors, rv);\\n\";\n }\n functionBody += \"};\\n\";\n params.push(functionBody);\n var invokerFunction = newFunc(Function, params).apply(null, args);\n returnId = emval_addMethodCaller(invokerFunction);\n emval_registeredMethods[signatureName] = returnId;\n return returnId;\n}\n\nfunction __emval_get_property(handle, key) {\n handle = Emval.toValue(handle);\n key = Emval.toValue(key);\n return Emval.toHandle(handle[key]);\n}\n\nfunction __emval_incref(handle) {\n if (handle > 4) {\n  emval_handles.get(handle).refcount += 1;\n }\n}\n\nfunction craftEmvalAllocator(argCount) {\n var argsList = \"\";\n for (var i = 0; i < argCount; ++i) {\n  argsList += (i !== 0 ? \", \" : \"\") + \"arg\" + i;\n }\n var getMemory = () => HEAPU32;\n var functionBody = \"return function emval_allocator_\" + argCount + \"(constructor, argTypes, args) {\\n\" + \"  var HEAPU32 = getMemory();\\n\";\n for (var i = 0; i < argCount; ++i) {\n  functionBody += \"var argType\" + i + \" = requireRegisteredType(HEAPU32[((argTypes)>>2)], 'parameter \" + i + \"');\\n\" + \"var arg\" + i + \" = argType\" + i + \".readValueFromPointer(args);\\n\" + \"args += argType\" + i + \"['argPackAdvance'];\\n\" + \"argTypes += 4;\\n\";\n }\n functionBody += \"var obj = new constructor(\" + argsList + \");\\n\" + \"return valueToHandle(obj);\\n\" + \"}\\n\";\n return new Function(\"requireRegisteredType\", \"Module\", \"valueToHandle\", \"getMemory\", functionBody)(requireRegisteredType, Module, Emval.toHandle, getMemory);\n}\n\nvar emval_newers = {};\n\nfunction __emval_new(handle, argCount, argTypes, args) {\n handle = Emval.toValue(handle);\n var newer = emval_newers[argCount];\n if (!newer) {\n  newer = craftEmvalAllocator(argCount);\n  emval_newers[argCount] = newer;\n }\n return newer(handle, argTypes, args);\n}\n\nfunction __emval_new_array() {\n return Emval.toHandle([]);\n}\n\nfunction __emval_new_array_from_memory_view(view) {\n view = Emval.toValue(view);\n var a = new Array(view.length);\n for (var i = 0; i < view.length; i++) a[i] = view[i];\n return Emval.toHandle(a);\n}\n\nfunction __emval_new_cstring(v) {\n return Emval.toHandle(getStringOrSymbol(v));\n}\n\nfunction __emval_new_object() {\n return Emval.toHandle({});\n}\n\nfunction runDestructors(destructors) {\n while (destructors.length) {\n  var ptr = destructors.pop();\n  var del = destructors.pop();\n  del(ptr);\n }\n}\n\nfunction __emval_run_destructors(handle) {\n var destructors = Emval.toValue(handle);\n runDestructors(destructors);\n __emval_decref(handle);\n}\n\nfunction __emval_set_property(handle, key, value) {\n handle = Emval.toValue(handle);\n key = Emval.toValue(key);\n value = Emval.toValue(value);\n handle[key] = value;\n}\n\nfunction __emval_take_value(type, arg) {\n type = requireRegisteredType(type, \"_emval_take_value\");\n var v = type[\"readValueFromPointer\"](arg);\n return Emval.toHandle(v);\n}\n\nfunction readI53FromI64(ptr) {\n return HEAPU32[ptr >>> 2] + HEAP32[ptr + 4 >>> 2] * 4294967296;\n}\n\nfunction __gmtime_js(time, tmPtr) {\n var date = new Date(readI53FromI64(time) * 1e3);\n HEAP32[tmPtr >>> 2] = date.getUTCSeconds();\n HEAP32[tmPtr + 4 >>> 2] = date.getUTCMinutes();\n HEAP32[tmPtr + 8 >>> 2] = date.getUTCHours();\n HEAP32[tmPtr + 12 >>> 2] = date.getUTCDate();\n HEAP32[tmPtr + 16 >>> 2] = date.getUTCMonth();\n HEAP32[tmPtr + 20 >>> 2] = date.getUTCFullYear() - 1900;\n HEAP32[tmPtr + 24 >>> 2] = date.getUTCDay();\n var start = Date.UTC(date.getUTCFullYear(), 0, 1, 0, 0, 0, 0);\n var yday = (date.getTime() - start) / (1e3 * 60 * 60 * 24) | 0;\n HEAP32[tmPtr + 28 >>> 2] = yday;\n}\n\nfunction isLeapYear(year) {\n return year % 4 === 0 && (year % 100 !== 0 || year % 400 === 0);\n}\n\nvar MONTH_DAYS_LEAP_CUMULATIVE = [ 0, 31, 60, 91, 121, 152, 182, 213, 244, 274, 305, 335 ];\n\nvar MONTH_DAYS_REGULAR_CUMULATIVE = [ 0, 31, 59, 90, 120, 151, 181, 212, 243, 273, 304, 334 ];\n\nfunction ydayFromDate(date) {\n var leap = isLeapYear(date.getFullYear());\n var monthDaysCumulative = leap ? MONTH_DAYS_LEAP_CUMULATIVE : MONTH_DAYS_REGULAR_CUMULATIVE;\n var yday = monthDaysCumulative[date.getMonth()] + date.getDate() - 1;\n return yday;\n}\n\nfunction __localtime_js(time, tmPtr) {\n var date = new Date(readI53FromI64(time) * 1e3);\n HEAP32[tmPtr >>> 2] = date.getSeconds();\n HEAP32[tmPtr + 4 >>> 2] = date.getMinutes();\n HEAP32[tmPtr + 8 >>> 2] = date.getHours();\n HEAP32[tmPtr + 12 >>> 2] = date.getDate();\n HEAP32[tmPtr + 16 >>> 2] = date.getMonth();\n HEAP32[tmPtr + 20 >>> 2] = date.getFullYear() - 1900;\n HEAP32[tmPtr + 24 >>> 2] = date.getDay();\n var yday = ydayFromDate(date) | 0;\n HEAP32[tmPtr + 28 >>> 2] = yday;\n HEAP32[tmPtr + 36 >>> 2] = -(date.getTimezoneOffset() * 60);\n var start = new Date(date.getFullYear(), 0, 1);\n var summerOffset = new Date(date.getFullYear(), 6, 1).getTimezoneOffset();\n var winterOffset = start.getTimezoneOffset();\n var dst = (summerOffset != winterOffset && date.getTimezoneOffset() == Math.min(winterOffset, summerOffset)) | 0;\n HEAP32[tmPtr + 32 >>> 2] = dst;\n}\n\nfunction __mktime_js(tmPtr) {\n var date = new Date(HEAP32[tmPtr + 20 >>> 2] + 1900, HEAP32[tmPtr + 16 >>> 2], HEAP32[tmPtr + 12 >>> 2], HEAP32[tmPtr + 8 >>> 2], HEAP32[tmPtr + 4 >>> 2], HEAP32[tmPtr >>> 2], 0);\n var dst = HEAP32[tmPtr + 32 >>> 2];\n var guessedOffset = date.getTimezoneOffset();\n var start = new Date(date.getFullYear(), 0, 1);\n var summerOffset = new Date(date.getFullYear(), 6, 1).getTimezoneOffset();\n var winterOffset = start.getTimezoneOffset();\n var dstOffset = Math.min(winterOffset, summerOffset);\n if (dst < 0) {\n  HEAP32[tmPtr + 32 >>> 2] = Number(summerOffset != winterOffset && dstOffset == guessedOffset);\n } else if (dst > 0 != (dstOffset == guessedOffset)) {\n  var nonDstOffset = Math.max(winterOffset, summerOffset);\n  var trueOffset = dst > 0 ? dstOffset : nonDstOffset;\n  date.setTime(date.getTime() + (trueOffset - guessedOffset) * 6e4);\n }\n HEAP32[tmPtr + 24 >>> 2] = date.getDay();\n var yday = ydayFromDate(date) | 0;\n HEAP32[tmPtr + 28 >>> 2] = yday;\n HEAP32[tmPtr >>> 2] = date.getSeconds();\n HEAP32[tmPtr + 4 >>> 2] = date.getMinutes();\n HEAP32[tmPtr + 8 >>> 2] = date.getHours();\n HEAP32[tmPtr + 12 >>> 2] = date.getDate();\n HEAP32[tmPtr + 16 >>> 2] = date.getMonth();\n HEAP32[tmPtr + 20 >>> 2] = date.getYear();\n return date.getTime() / 1e3 | 0;\n}\n\nfunction __mmap_js(len, prot, flags, fd, off, allocated, addr) {\n return -52;\n}\n\nfunction __munmap_js(addr, len, prot, flags, fd, offset) {}\n\nfunction stringToNewUTF8(str) {\n var size = lengthBytesUTF8(str) + 1;\n var ret = _malloc(size);\n if (ret) stringToUTF8(str, ret, size);\n return ret;\n}\n\nfunction __tzset_js(timezone, daylight, tzname) {\n var currentYear = new Date().getFullYear();\n var winter = new Date(currentYear, 0, 1);\n var summer = new Date(currentYear, 6, 1);\n var winterOffset = winter.getTimezoneOffset();\n var summerOffset = summer.getTimezoneOffset();\n var stdTimezoneOffset = Math.max(winterOffset, summerOffset);\n HEAPU32[timezone >>> 2] = stdTimezoneOffset * 60;\n HEAP32[daylight >>> 2] = Number(winterOffset != summerOffset);\n function extractZone(date) {\n  var match = date.toTimeString().match(/\\(([A-Za-z ]+)\\)$/);\n  return match ? match[1] : \"GMT\";\n }\n var winterName = extractZone(winter);\n var summerName = extractZone(summer);\n var winterNamePtr = stringToNewUTF8(winterName);\n var summerNamePtr = stringToNewUTF8(summerName);\n if (summerOffset < winterOffset) {\n  HEAPU32[tzname >>> 2] = winterNamePtr;\n  HEAPU32[tzname + 4 >>> 2] = summerNamePtr;\n } else {\n  HEAPU32[tzname >>> 2] = summerNamePtr;\n  HEAPU32[tzname + 4 >>> 2] = winterNamePtr;\n }\n}\n\nfunction _abort() {\n abort(\"\");\n}\n\nfunction _dlopen(handle) {\n abort(dlopenMissingError);\n}\n\nfunction _emscripten_date_now() {\n return Date.now();\n}\n\nfunction getHeapMax() {\n return 4294901760;\n}\n\nfunction _emscripten_get_heap_max() {\n return getHeapMax();\n}\n\nvar _emscripten_get_now;\n\nif (ENVIRONMENT_IS_NODE) {\n _emscripten_get_now = () => {\n  var t = process.hrtime();\n  return t[0] * 1e3 + t[1] / 1e6;\n };\n} else _emscripten_get_now = () => performance.now();\n\nfunction _emscripten_memcpy_big(dest, src, num) {\n HEAPU8.copyWithin(dest >>> 0, src >>> 0, src + num >>> 0);\n}\n\nfunction emscripten_realloc_buffer(size) {\n var b = wasmMemory.buffer;\n try {\n  wasmMemory.grow(size - b.byteLength + 65535 >>> 16);\n  updateMemoryViews();\n  return 1;\n } catch (e) {}\n}\n\nfunction _emscripten_resize_heap(requestedSize) {\n var oldSize = HEAPU8.length;\n requestedSize = requestedSize >>> 0;\n var maxHeapSize = getHeapMax();\n if (requestedSize > maxHeapSize) {\n  return false;\n }\n let alignUp = (x, multiple) => x + (multiple - x % multiple) % multiple;\n for (var cutDown = 1; cutDown <= 4; cutDown *= 2) {\n  var overGrownHeapSize = oldSize * (1 + .2 / cutDown);\n  overGrownHeapSize = Math.min(overGrownHeapSize, requestedSize + 100663296);\n  var newSize = Math.min(maxHeapSize, alignUp(Math.max(requestedSize, overGrownHeapSize), 65536));\n  var replacement = emscripten_realloc_buffer(newSize);\n  if (replacement) {\n   return true;\n  }\n }\n return false;\n}\n\nvar ENV = {};\n\nfunction getExecutableName() {\n return thisProgram || \"./this.program\";\n}\n\nfunction getEnvStrings() {\n if (!getEnvStrings.strings) {\n  var lang = (typeof navigator == \"object\" && navigator.languages && navigator.languages[0] || \"C\").replace(\"-\", \"_\") + \".UTF-8\";\n  var env = {\n   \"USER\": \"web_user\",\n   \"LOGNAME\": \"web_user\",\n   \"PATH\": \"/\",\n   \"PWD\": \"/\",\n   \"HOME\": \"/home/web_user\",\n   \"LANG\": lang,\n   \"_\": getExecutableName()\n  };\n  for (var x in ENV) {\n   if (ENV[x] === undefined) delete env[x]; else env[x] = ENV[x];\n  }\n  var strings = [];\n  for (var x in env) {\n   strings.push(x + \"=\" + env[x]);\n  }\n  getEnvStrings.strings = strings;\n }\n return getEnvStrings.strings;\n}\n\nfunction stringToAscii(str, buffer) {\n for (var i = 0; i < str.length; ++i) {\n  HEAP8[buffer++ >>> 0] = str.charCodeAt(i);\n }\n HEAP8[buffer >>> 0] = 0;\n}\n\nfunction _environ_get(__environ, environ_buf) {\n var bufSize = 0;\n getEnvStrings().forEach(function(string, i) {\n  var ptr = environ_buf + bufSize;\n  HEAPU32[__environ + i * 4 >>> 2] = ptr;\n  stringToAscii(string, ptr);\n  bufSize += string.length + 1;\n });\n return 0;\n}\n\nfunction _environ_sizes_get(penviron_count, penviron_buf_size) {\n var strings = getEnvStrings();\n HEAPU32[penviron_count >>> 2] = strings.length;\n var bufSize = 0;\n strings.forEach(function(string) {\n  bufSize += string.length + 1;\n });\n HEAPU32[penviron_buf_size >>> 2] = bufSize;\n return 0;\n}\n\nfunction _fd_close(fd) {\n return 52;\n}\n\nfunction _fd_read(fd, iov, iovcnt, pnum) {\n return 52;\n}\n\nvar MAX_INT53 = 9007199254740992;\n\nvar MIN_INT53 = -9007199254740992;\n\nfunction bigintToI53Checked(num) {\n return num < MIN_INT53 || num > MAX_INT53 ? NaN : Number(num);\n}\n\nfunction _fd_seek(fd, offset, whence, newOffset) {\n return 70;\n}\n\nvar printCharBuffers = [ null, [], [] ];\n\nfunction printChar(stream, curr) {\n var buffer = printCharBuffers[stream];\n if (curr === 0 || curr === 10) {\n  (stream === 1 ? out : err)(UTF8ArrayToString(buffer, 0));\n  buffer.length = 0;\n } else {\n  buffer.push(curr);\n }\n}\n\nfunction flush_NO_FILESYSTEM() {\n if (printCharBuffers[1].length) printChar(1, 10);\n if (printCharBuffers[2].length) printChar(2, 10);\n}\n\nfunction _fd_write(fd, iov, iovcnt, pnum) {\n var num = 0;\n for (var i = 0; i < iovcnt; i++) {\n  var ptr = HEAPU32[iov >>> 2];\n  var len = HEAPU32[iov + 4 >>> 2];\n  iov += 8;\n  for (var j = 0; j < len; j++) {\n   printChar(fd, HEAPU8[ptr + j >>> 0]);\n  }\n  num += len;\n }\n HEAPU32[pnum >>> 2] = num;\n return 0;\n}\n\nfunction _llvm_eh_typeid_for(type) {\n return type;\n}\n\nfunction arraySum(array, index) {\n var sum = 0;\n for (var i = 0; i <= index; sum += array[i++]) {}\n return sum;\n}\n\nvar MONTH_DAYS_LEAP = [ 31, 29, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31 ];\n\nvar MONTH_DAYS_REGULAR = [ 31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31 ];\n\nfunction addDays(date, days) {\n var newDate = new Date(date.getTime());\n while (days > 0) {\n  var leap = isLeapYear(newDate.getFullYear());\n  var currentMonth = newDate.getMonth();\n  var daysInCurrentMonth = (leap ? MONTH_DAYS_LEAP : MONTH_DAYS_REGULAR)[currentMonth];\n  if (days > daysInCurrentMonth - newDate.getDate()) {\n   days -= daysInCurrentMonth - newDate.getDate() + 1;\n   newDate.setDate(1);\n   if (currentMonth < 11) {\n    newDate.setMonth(currentMonth + 1);\n   } else {\n    newDate.setMonth(0);\n    newDate.setFullYear(newDate.getFullYear() + 1);\n   }\n  } else {\n   newDate.setDate(newDate.getDate() + days);\n   return newDate;\n  }\n }\n return newDate;\n}\n\nfunction intArrayFromString(stringy, dontAddNull, length) {\n var len = length > 0 ? length : lengthBytesUTF8(stringy) + 1;\n var u8array = new Array(len);\n var numBytesWritten = stringToUTF8Array(stringy, u8array, 0, u8array.length);\n if (dontAddNull) u8array.length = numBytesWritten;\n return u8array;\n}\n\nfunction writeArrayToMemory(array, buffer) {\n HEAP8.set(array, buffer >>> 0);\n}\n\nfunction _strftime(s, maxsize, format, tm) {\n var tm_zone = HEAP32[tm + 40 >>> 2];\n var date = {\n  tm_sec: HEAP32[tm >>> 2],\n  tm_min: HEAP32[tm + 4 >>> 2],\n  tm_hour: HEAP32[tm + 8 >>> 2],\n  tm_mday: HEAP32[tm + 12 >>> 2],\n  tm_mon: HEAP32[tm + 16 >>> 2],\n  tm_year: HEAP32[tm + 20 >>> 2],\n  tm_wday: HEAP32[tm + 24 >>> 2],\n  tm_yday: HEAP32[tm + 28 >>> 2],\n  tm_isdst: HEAP32[tm + 32 >>> 2],\n  tm_gmtoff: HEAP32[tm + 36 >>> 2],\n  tm_zone: tm_zone ? UTF8ToString(tm_zone) : \"\"\n };\n var pattern = UTF8ToString(format);\n var EXPANSION_RULES_1 = {\n  \"%c\": \"%a %b %d %H:%M:%S %Y\",\n  \"%D\": \"%m/%d/%y\",\n  \"%F\": \"%Y-%m-%d\",\n  \"%h\": \"%b\",\n  \"%r\": \"%I:%M:%S %p\",\n  \"%R\": \"%H:%M\",\n  \"%T\": \"%H:%M:%S\",\n  \"%x\": \"%m/%d/%y\",\n  \"%X\": \"%H:%M:%S\",\n  \"%Ec\": \"%c\",\n  \"%EC\": \"%C\",\n  \"%Ex\": \"%m/%d/%y\",\n  \"%EX\": \"%H:%M:%S\",\n  \"%Ey\": \"%y\",\n  \"%EY\": \"%Y\",\n  \"%Od\": \"%d\",\n  \"%Oe\": \"%e\",\n  \"%OH\": \"%H\",\n  \"%OI\": \"%I\",\n  \"%Om\": \"%m\",\n  \"%OM\": \"%M\",\n  \"%OS\": \"%S\",\n  \"%Ou\": \"%u\",\n  \"%OU\": \"%U\",\n  \"%OV\": \"%V\",\n  \"%Ow\": \"%w\",\n  \"%OW\": \"%W\",\n  \"%Oy\": \"%y\"\n };\n for (var rule in EXPANSION_RULES_1) {\n  pattern = pattern.replace(new RegExp(rule, \"g\"), EXPANSION_RULES_1[rule]);\n }\n var WEEKDAYS = [ \"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\" ];\n var MONTHS = [ \"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\" ];\n function leadingSomething(value, digits, character) {\n  var str = typeof value == \"number\" ? value.toString() : value || \"\";\n  while (str.length < digits) {\n   str = character[0] + str;\n  }\n  return str;\n }\n function leadingNulls(value, digits) {\n  return leadingSomething(value, digits, \"0\");\n }\n function compareByDay(date1, date2) {\n  function sgn(value) {\n   return value < 0 ? -1 : value > 0 ? 1 : 0;\n  }\n  var compare;\n  if ((compare = sgn(date1.getFullYear() - date2.getFullYear())) === 0) {\n   if ((compare = sgn(date1.getMonth() - date2.getMonth())) === 0) {\n    compare = sgn(date1.getDate() - date2.getDate());\n   }\n  }\n  return compare;\n }\n function getFirstWeekStartDate(janFourth) {\n  switch (janFourth.getDay()) {\n  case 0:\n   return new Date(janFourth.getFullYear() - 1, 11, 29);\n\n  case 1:\n   return janFourth;\n\n  case 2:\n   return new Date(janFourth.getFullYear(), 0, 3);\n\n  case 3:\n   return new Date(janFourth.getFullYear(), 0, 2);\n\n  case 4:\n   return new Date(janFourth.getFullYear(), 0, 1);\n\n  case 5:\n   return new Date(janFourth.getFullYear() - 1, 11, 31);\n\n  case 6:\n   return new Date(janFourth.getFullYear() - 1, 11, 30);\n  }\n }\n function getWeekBasedYear(date) {\n  var thisDate = addDays(new Date(date.tm_year + 1900, 0, 1), date.tm_yday);\n  var janFourthThisYear = new Date(thisDate.getFullYear(), 0, 4);\n  var janFourthNextYear = new Date(thisDate.getFullYear() + 1, 0, 4);\n  var firstWeekStartThisYear = getFirstWeekStartDate(janFourthThisYear);\n  var firstWeekStartNextYear = getFirstWeekStartDate(janFourthNextYear);\n  if (compareByDay(firstWeekStartThisYear, thisDate) <= 0) {\n   if (compareByDay(firstWeekStartNextYear, thisDate) <= 0) {\n    return thisDate.getFullYear() + 1;\n   }\n   return thisDate.getFullYear();\n  }\n  return thisDate.getFullYear() - 1;\n }\n var EXPANSION_RULES_2 = {\n  \"%a\": function(date) {\n   return WEEKDAYS[date.tm_wday].substring(0, 3);\n  },\n  \"%A\": function(date) {\n   return WEEKDAYS[date.tm_wday];\n  },\n  \"%b\": function(date) {\n   return MONTHS[date.tm_mon].substring(0, 3);\n  },\n  \"%B\": function(date) {\n   return MONTHS[date.tm_mon];\n  },\n  \"%C\": function(date) {\n   var year = date.tm_year + 1900;\n   return leadingNulls(year / 100 | 0, 2);\n  },\n  \"%d\": function(date) {\n   return leadingNulls(date.tm_mday, 2);\n  },\n  \"%e\": function(date) {\n   return leadingSomething(date.tm_mday, 2, \" \");\n  },\n  \"%g\": function(date) {\n   return getWeekBasedYear(date).toString().substring(2);\n  },\n  \"%G\": function(date) {\n   return getWeekBasedYear(date);\n  },\n  \"%H\": function(date) {\n   return leadingNulls(date.tm_hour, 2);\n  },\n  \"%I\": function(date) {\n   var twelveHour = date.tm_hour;\n   if (twelveHour == 0) twelveHour = 12; else if (twelveHour > 12) twelveHour -= 12;\n   return leadingNulls(twelveHour, 2);\n  },\n  \"%j\": function(date) {\n   return leadingNulls(date.tm_mday + arraySum(isLeapYear(date.tm_year + 1900) ? MONTH_DAYS_LEAP : MONTH_DAYS_REGULAR, date.tm_mon - 1), 3);\n  },\n  \"%m\": function(date) {\n   return leadingNulls(date.tm_mon + 1, 2);\n  },\n  \"%M\": function(date) {\n   return leadingNulls(date.tm_min, 2);\n  },\n  \"%n\": function() {\n   return \"\\n\";\n  },\n  \"%p\": function(date) {\n   if (date.tm_hour >= 0 && date.tm_hour < 12) {\n    return \"AM\";\n   }\n   return \"PM\";\n  },\n  \"%S\": function(date) {\n   return leadingNulls(date.tm_sec, 2);\n  },\n  \"%t\": function() {\n   return \"\\t\";\n  },\n  \"%u\": function(date) {\n   return date.tm_wday || 7;\n  },\n  \"%U\": function(date) {\n   var days = date.tm_yday + 7 - date.tm_wday;\n   return leadingNulls(Math.floor(days / 7), 2);\n  },\n  \"%V\": function(date) {\n   var val = Math.floor((date.tm_yday + 7 - (date.tm_wday + 6) % 7) / 7);\n   if ((date.tm_wday + 371 - date.tm_yday - 2) % 7 <= 2) {\n    val++;\n   }\n   if (!val) {\n    val = 52;\n    var dec31 = (date.tm_wday + 7 - date.tm_yday - 1) % 7;\n    if (dec31 == 4 || dec31 == 5 && isLeapYear(date.tm_year % 400 - 1)) {\n     val++;\n    }\n   } else if (val == 53) {\n    var jan1 = (date.tm_wday + 371 - date.tm_yday) % 7;\n    if (jan1 != 4 && (jan1 != 3 || !isLeapYear(date.tm_year))) val = 1;\n   }\n   return leadingNulls(val, 2);\n  },\n  \"%w\": function(date) {\n   return date.tm_wday;\n  },\n  \"%W\": function(date) {\n   var days = date.tm_yday + 7 - (date.tm_wday + 6) % 7;\n   return leadingNulls(Math.floor(days / 7), 2);\n  },\n  \"%y\": function(date) {\n   return (date.tm_year + 1900).toString().substring(2);\n  },\n  \"%Y\": function(date) {\n   return date.tm_year + 1900;\n  },\n  \"%z\": function(date) {\n   var off = date.tm_gmtoff;\n   var ahead = off >= 0;\n   off = Math.abs(off) / 60;\n   off = off / 60 * 100 + off % 60;\n   return (ahead ? \"+\" : \"-\") + String(\"0000\" + off).slice(-4);\n  },\n  \"%Z\": function(date) {\n   return date.tm_zone;\n  },\n  \"%%\": function() {\n   return \"%\";\n  }\n };\n pattern = pattern.replace(/%%/g, \"\\0\\0\");\n for (var rule in EXPANSION_RULES_2) {\n  if (pattern.includes(rule)) {\n   pattern = pattern.replace(new RegExp(rule, \"g\"), EXPANSION_RULES_2[rule](date));\n  }\n }\n pattern = pattern.replace(/\\0\\0/g, \"%\");\n var bytes = intArrayFromString(pattern, false);\n if (bytes.length > maxsize) {\n  return 0;\n }\n writeArrayToMemory(bytes, s);\n return bytes.length - 1;\n}\n\nfunction _strftime_l(s, maxsize, format, tm, loc) {\n return _strftime(s, maxsize, format, tm);\n}\n\nvar wasmTableMirror = [];\n\nfunction getWasmTableEntry(funcPtr) {\n var func = wasmTableMirror[funcPtr];\n if (!func) {\n  if (funcPtr >= wasmTableMirror.length) wasmTableMirror.length = funcPtr + 1;\n  wasmTableMirror[funcPtr] = func = wasmTable.get(funcPtr);\n }\n return func;\n}\n\nembind_init_charCodes();\n\nBindingError = Module[\"BindingError\"] = extendError(Error, \"BindingError\");\n\nInternalError = Module[\"InternalError\"] = extendError(Error, \"InternalError\");\n\ninit_emval();\n\nvar wasmImports = {\n \"__cxa_begin_catch\": ___cxa_begin_catch,\n \"__cxa_end_catch\": ___cxa_end_catch,\n \"__cxa_find_matching_catch_2\": ___cxa_find_matching_catch_2,\n \"__cxa_find_matching_catch_3\": ___cxa_find_matching_catch_3,\n \"__cxa_find_matching_catch_4\": ___cxa_find_matching_catch_4,\n \"__cxa_find_matching_catch_5\": ___cxa_find_matching_catch_5,\n \"__cxa_rethrow\": ___cxa_rethrow,\n \"__cxa_throw\": ___cxa_throw,\n \"__cxa_uncaught_exceptions\": ___cxa_uncaught_exceptions,\n \"__dlsym\": ___dlsym,\n \"__resumeException\": ___resumeException,\n \"__syscall_fcntl64\": ___syscall_fcntl64,\n \"__syscall_fstat64\": ___syscall_fstat64,\n \"__syscall_getcwd\": ___syscall_getcwd,\n \"__syscall_getdents64\": ___syscall_getdents64,\n \"__syscall_ioctl\": ___syscall_ioctl,\n \"__syscall_lstat64\": ___syscall_lstat64,\n \"__syscall_mkdirat\": ___syscall_mkdirat,\n \"__syscall_newfstatat\": ___syscall_newfstatat,\n \"__syscall_openat\": ___syscall_openat,\n \"__syscall_readlinkat\": ___syscall_readlinkat,\n \"__syscall_rmdir\": ___syscall_rmdir,\n \"__syscall_stat64\": ___syscall_stat64,\n \"__syscall_unlinkat\": ___syscall_unlinkat,\n \"_embind_register_bigint\": __embind_register_bigint,\n \"_embind_register_bool\": __embind_register_bool,\n \"_embind_register_emval\": __embind_register_emval,\n \"_embind_register_float\": __embind_register_float,\n \"_embind_register_integer\": __embind_register_integer,\n \"_embind_register_memory_view\": __embind_register_memory_view,\n \"_embind_register_std_string\": __embind_register_std_string,\n \"_embind_register_std_wstring\": __embind_register_std_wstring,\n \"_embind_register_void\": __embind_register_void,\n \"_emscripten_get_now_is_monotonic\": __emscripten_get_now_is_monotonic,\n \"_emval_as\": __emval_as,\n \"_emval_call_method\": __emval_call_method,\n \"_emval_call_void_method\": __emval_call_void_method,\n \"_emval_decref\": __emval_decref,\n \"_emval_equals\": __emval_equals,\n \"_emval_get_global\": __emval_get_global,\n \"_emval_get_method_caller\": __emval_get_method_caller,\n \"_emval_get_property\": __emval_get_property,\n \"_emval_incref\": __emval_incref,\n \"_emval_new\": __emval_new,\n \"_emval_new_array\": __emval_new_array,\n \"_emval_new_array_from_memory_view\": __emval_new_array_from_memory_view,\n \"_emval_new_cstring\": __emval_new_cstring,\n \"_emval_new_object\": __emval_new_object,\n \"_emval_run_destructors\": __emval_run_destructors,\n \"_emval_set_property\": __emval_set_property,\n \"_emval_take_value\": __emval_take_value,\n \"_gmtime_js\": __gmtime_js,\n \"_localtime_js\": __localtime_js,\n \"_mktime_js\": __mktime_js,\n \"_mmap_js\": __mmap_js,\n \"_munmap_js\": __munmap_js,\n \"_tzset_js\": __tzset_js,\n \"abort\": _abort,\n \"dlopen\": _dlopen,\n \"emscripten_date_now\": _emscripten_date_now,\n \"emscripten_get_heap_max\": _emscripten_get_heap_max,\n \"emscripten_get_now\": _emscripten_get_now,\n \"emscripten_memcpy_big\": _emscripten_memcpy_big,\n \"emscripten_resize_heap\": _emscripten_resize_heap,\n \"environ_get\": _environ_get,\n \"environ_sizes_get\": _environ_sizes_get,\n \"fd_close\": _fd_close,\n \"fd_read\": _fd_read,\n \"fd_seek\": _fd_seek,\n \"fd_write\": _fd_write,\n \"invoke_di\": invoke_di,\n \"invoke_dii\": invoke_dii,\n \"invoke_diii\": invoke_diii,\n \"invoke_diiiii\": invoke_diiiii,\n \"invoke_fffffff\": invoke_fffffff,\n \"invoke_fi\": invoke_fi,\n \"invoke_fii\": invoke_fii,\n \"invoke_fiii\": invoke_fiii,\n \"invoke_fiiii\": invoke_fiiii,\n \"invoke_i\": invoke_i,\n \"invoke_ii\": invoke_ii,\n \"invoke_iid\": invoke_iid,\n \"invoke_iif\": invoke_iif,\n \"invoke_iii\": invoke_iii,\n \"invoke_iiif\": invoke_iiif,\n \"invoke_iiii\": invoke_iiii,\n \"invoke_iiiifi\": invoke_iiiifi,\n \"invoke_iiiii\": invoke_iiiii,\n \"invoke_iiiiid\": invoke_iiiiid,\n \"invoke_iiiiii\": invoke_iiiiii,\n \"invoke_iiiiiii\": invoke_iiiiiii,\n \"invoke_iiiiiiii\": invoke_iiiiiiii,\n \"invoke_iiiiiiiii\": invoke_iiiiiiiii,\n \"invoke_iiiiiiiiii\": invoke_iiiiiiiiii,\n \"invoke_iiiiiiiiiii\": invoke_iiiiiiiiiii,\n \"invoke_iiiiiiiiiiii\": invoke_iiiiiiiiiiii,\n \"invoke_iiiiiiiiiiiiiifi\": invoke_iiiiiiiiiiiiiifi,\n \"invoke_iiiiiiiiiiiiiiiiifii\": invoke_iiiiiiiiiiiiiiiiifii,\n \"invoke_iiiiiiiiiiiiiiiiiifi\": invoke_iiiiiiiiiiiiiiiiiifi,\n \"invoke_iiiiiiiiijii\": invoke_iiiiiiiiijii,\n \"invoke_iiiiiiiijjjfi\": invoke_iiiiiiiijjjfi,\n \"invoke_iiiiiijjjii\": invoke_iiiiiijjjii,\n \"invoke_iiiiij\": invoke_iiiiij,\n \"invoke_iiiiiji\": invoke_iiiiiji,\n \"invoke_iiiiijiiiii\": invoke_iiiiijiiiii,\n \"invoke_iiiiijji\": invoke_iiiiijji,\n \"invoke_iiiij\": invoke_iiiij,\n \"invoke_iiiiji\": invoke_iiiiji,\n \"invoke_iiiijjii\": invoke_iiiijjii,\n \"invoke_iiiijjj\": invoke_iiiijjj,\n \"invoke_iiij\": invoke_iiij,\n \"invoke_iiiji\": invoke_iiiji,\n \"invoke_iiijii\": invoke_iiijii,\n \"invoke_iiijiii\": invoke_iiijiii,\n \"invoke_iiijiiii\": invoke_iiijiiii,\n \"invoke_iiijiiiiii\": invoke_iiijiiiiii,\n \"invoke_iiijiiiiiiiiii\": invoke_iiijiiiiiiiiii,\n \"invoke_iiijjj\": invoke_iiijjj,\n \"invoke_iij\": invoke_iij,\n \"invoke_iiji\": invoke_iiji,\n \"invoke_iijiiii\": invoke_iijiiii,\n \"invoke_iijjji\": invoke_iijjji,\n \"invoke_iijjjii\": invoke_iijjjii,\n \"invoke_ij\": invoke_ij,\n \"invoke_ijii\": invoke_ijii,\n \"invoke_ijijji\": invoke_ijijji,\n \"invoke_j\": invoke_j,\n \"invoke_jfi\": invoke_jfi,\n \"invoke_ji\": invoke_ji,\n \"invoke_jii\": invoke_jii,\n \"invoke_jiii\": invoke_jiii,\n \"invoke_jiij\": invoke_jiij,\n \"invoke_jjj\": invoke_jjj,\n \"invoke_v\": invoke_v,\n \"invoke_vfiii\": invoke_vfiii,\n \"invoke_vi\": invoke_vi,\n \"invoke_vidi\": invoke_vidi,\n \"invoke_vif\": invoke_vif,\n \"invoke_viffiii\": invoke_viffiii,\n \"invoke_vii\": invoke_vii,\n \"invoke_viid\": invoke_viid,\n \"invoke_viif\": invoke_viif,\n \"invoke_viiff\": invoke_viiff,\n \"invoke_viifi\": invoke_viifi,\n \"invoke_viifiifijjjii\": invoke_viifiifijjjii,\n \"invoke_viii\": invoke_viii,\n \"invoke_viiid\": invoke_viiid,\n \"invoke_viiif\": invoke_viiif,\n \"invoke_viiifii\": invoke_viiifii,\n \"invoke_viiii\": invoke_viiii,\n \"invoke_viiiiff\": invoke_viiiiff,\n \"invoke_viiiii\": invoke_viiiii,\n \"invoke_viiiiidiidi\": invoke_viiiiidiidi,\n \"invoke_viiiiiff\": invoke_viiiiiff,\n \"invoke_viiiiifiiiiii\": invoke_viiiiifiiiiii,\n \"invoke_viiiiii\": invoke_viiiiii,\n \"invoke_viiiiiiffifiiiii\": invoke_viiiiiiffifiiiii,\n \"invoke_viiiiiiffiifiiiii\": invoke_viiiiiiffiifiiiii,\n \"invoke_viiiiiiffiiiiii\": invoke_viiiiiiffiiiiii,\n \"invoke_viiiiiii\": invoke_viiiiiii,\n \"invoke_viiiiiiii\": invoke_viiiiiiii,\n \"invoke_viiiiiiiii\": invoke_viiiiiiiii,\n \"invoke_viiiiiiiiidi\": invoke_viiiiiiiiidi,\n \"invoke_viiiiiiiiifi\": invoke_viiiiiiiiifi,\n \"invoke_viiiiiiiiifiii\": invoke_viiiiiiiiifiii,\n \"invoke_viiiiiiiiii\": invoke_viiiiiiiiii,\n \"invoke_viiiiiiiiiii\": invoke_viiiiiiiiiii,\n \"invoke_viiiiiiiiiiii\": invoke_viiiiiiiiiiii,\n \"invoke_viiiiiiiiiiiii\": invoke_viiiiiiiiiiiii,\n \"invoke_viiiiiiiiiiiiii\": invoke_viiiiiiiiiiiiii,\n \"invoke_viiiiiiiiiiiiiii\": invoke_viiiiiiiiiiiiiii,\n \"invoke_viiiiiiiiiiiiiiii\": invoke_viiiiiiiiiiiiiiii,\n \"invoke_viiiiiiiiiiiiiiiiii\": invoke_viiiiiiiiiiiiiiiiii,\n \"invoke_viiiiiiiiiiiiiiiiiii\": invoke_viiiiiiiiiiiiiiiiiii,\n \"invoke_viiiiiiiiiiiiiiiiiiii\": invoke_viiiiiiiiiiiiiiiiiiii,\n \"invoke_viiiiiiiijj\": invoke_viiiiiiiijj,\n \"invoke_viiiiiiijiiiiii\": invoke_viiiiiiijiiiiii,\n \"invoke_viiiiiiijjj\": invoke_viiiiiiijjj,\n \"invoke_viiiiiijij\": invoke_viiiiiijij,\n \"invoke_viiiiiijjiiiii\": invoke_viiiiiijjiiiii,\n \"invoke_viiiiij\": invoke_viiiiij,\n \"invoke_viiiiijiiiiii\": invoke_viiiiijiiiiii,\n \"invoke_viiiiijiiiiiiiiiiiiiiiiiii\": invoke_viiiiijiiiiiiiiiiiiiiiiiii,\n \"invoke_viiiiijij\": invoke_viiiiijij,\n \"invoke_viiiiijjiiiii\": invoke_viiiiijjiiiii,\n \"invoke_viiiiijjji\": invoke_viiiiijjji,\n \"invoke_viiiij\": invoke_viiiij,\n \"invoke_viiiiji\": invoke_viiiiji,\n \"invoke_viiiijii\": invoke_viiiijii,\n \"invoke_viiiijjj\": invoke_viiiijjj,\n \"invoke_viiij\": invoke_viiij,\n \"invoke_viiiji\": invoke_viiiji,\n \"invoke_viiijii\": invoke_viiijii,\n \"invoke_viiijiiii\": invoke_viiijiiii,\n \"invoke_viiijiiiiii\": invoke_viiijiiiiii,\n \"invoke_viiijiiiiiii\": invoke_viiijiiiiiii,\n \"invoke_viiijiiiiiiiii\": invoke_viiijiiiiiiiii,\n \"invoke_viiijjiii\": invoke_viiijjiii,\n \"invoke_viiijjjfii\": invoke_viiijjjfii,\n \"invoke_viiijjjii\": invoke_viiijjjii,\n \"invoke_viij\": invoke_viij,\n \"invoke_viiji\": invoke_viiji,\n \"invoke_viijiii\": invoke_viijiii,\n \"invoke_viijiiiiiiiii\": invoke_viijiiiiiiiii,\n \"invoke_viijj\": invoke_viijj,\n \"invoke_viijji\": invoke_viijji,\n \"invoke_viijjiii\": invoke_viijjiii,\n \"invoke_viijjiiiii\": invoke_viijjiiiii,\n \"invoke_viijjjfiifiii\": invoke_viijjjfiifiii,\n \"invoke_viijjjiiiiii\": invoke_viijjjiiiiii,\n \"invoke_vij\": invoke_vij,\n \"invoke_viji\": invoke_viji,\n \"invoke_vijiii\": invoke_vijiii,\n \"invoke_vijiiiiiiii\": invoke_vijiiiiiiii,\n \"invoke_vijiiiiiiijjii\": invoke_vijiiiiiiijjii,\n \"invoke_vijj\": invoke_vijj,\n \"invoke_vijjfffiii\": invoke_vijjfffiii,\n \"invoke_vijjii\": invoke_vijjii,\n \"invoke_vijjiiiiii\": invoke_vijjiiiiii,\n \"invoke_vijjjiiji\": invoke_vijjjiiji,\n \"invoke_vijjjjiij\": invoke_vijjjjiij,\n \"invoke_vijjjjijjiii\": invoke_vijjjjijjiii,\n \"invoke_vijjjjjjifiiiii\": invoke_vijjjjjjifiiiii,\n \"invoke_vijjjjjjjjjjjjji\": invoke_vijjjjjjjjjjjjji,\n \"invoke_vj\": invoke_vj,\n \"invoke_vjiii\": invoke_vjiii,\n \"invoke_vjjfiii\": invoke_vjjfiii,\n \"invoke_vjjjjfiii\": invoke_vjjjjfiii,\n \"invoke_vjjjjjiiii\": invoke_vjjjjjiiii,\n \"invoke_vjjjjjjfffifiiiii\": invoke_vjjjjjjfffifiiiii,\n \"invoke_vjjjjjjfffifiiiiiii\": invoke_vjjjjjjfffifiiiiiii,\n \"invoke_vjjjjjjffiifiiiiii\": invoke_vjjjjjjffiifiiiiii,\n \"invoke_vjjjjjjjjfffiifiiiii\": invoke_vjjjjjjjjfffiifiiiii,\n \"invoke_vjjjjjjjjfffiifiiiiii\": invoke_vjjjjjjjjfffiifiiiiii,\n \"llvm_eh_typeid_for\": _llvm_eh_typeid_for,\n \"strftime\": _strftime,\n \"strftime_l\": _strftime_l\n};\n\nvar asm = createWasm();\n\nvar ___wasm_call_ctors = function() {\n return (___wasm_call_ctors = Module[\"asm\"][\"__wasm_call_ctors\"]).apply(null, arguments);\n};\n\nvar _OrtInit = Module[\"_OrtInit\"] = function() {\n return (_OrtInit = Module[\"_OrtInit\"] = Module[\"asm\"][\"OrtInit\"]).apply(null, arguments);\n};\n\nvar _OrtCreateSessionOptions = Module[\"_OrtCreateSessionOptions\"] = function() {\n return (_OrtCreateSessionOptions = Module[\"_OrtCreateSessionOptions\"] = Module[\"asm\"][\"OrtCreateSessionOptions\"]).apply(null, arguments);\n};\n\nvar _OrtAppendExecutionProvider = Module[\"_OrtAppendExecutionProvider\"] = function() {\n return (_OrtAppendExecutionProvider = Module[\"_OrtAppendExecutionProvider\"] = Module[\"asm\"][\"OrtAppendExecutionProvider\"]).apply(null, arguments);\n};\n\nvar _OrtAddSessionConfigEntry = Module[\"_OrtAddSessionConfigEntry\"] = function() {\n return (_OrtAddSessionConfigEntry = Module[\"_OrtAddSessionConfigEntry\"] = Module[\"asm\"][\"OrtAddSessionConfigEntry\"]).apply(null, arguments);\n};\n\nvar _OrtReleaseSessionOptions = Module[\"_OrtReleaseSessionOptions\"] = function() {\n return (_OrtReleaseSessionOptions = Module[\"_OrtReleaseSessionOptions\"] = Module[\"asm\"][\"OrtReleaseSessionOptions\"]).apply(null, arguments);\n};\n\nvar _OrtCreateSession = Module[\"_OrtCreateSession\"] = function() {\n return (_OrtCreateSession = Module[\"_OrtCreateSession\"] = Module[\"asm\"][\"OrtCreateSession\"]).apply(null, arguments);\n};\n\nvar _OrtReleaseSession = Module[\"_OrtReleaseSession\"] = function() {\n return (_OrtReleaseSession = Module[\"_OrtReleaseSession\"] = Module[\"asm\"][\"OrtReleaseSession\"]).apply(null, arguments);\n};\n\nvar _OrtGetInputCount = Module[\"_OrtGetInputCount\"] = function() {\n return (_OrtGetInputCount = Module[\"_OrtGetInputCount\"] = Module[\"asm\"][\"OrtGetInputCount\"]).apply(null, arguments);\n};\n\nvar _OrtGetOutputCount = Module[\"_OrtGetOutputCount\"] = function() {\n return (_OrtGetOutputCount = Module[\"_OrtGetOutputCount\"] = Module[\"asm\"][\"OrtGetOutputCount\"]).apply(null, arguments);\n};\n\nvar _OrtGetInputName = Module[\"_OrtGetInputName\"] = function() {\n return (_OrtGetInputName = Module[\"_OrtGetInputName\"] = Module[\"asm\"][\"OrtGetInputName\"]).apply(null, arguments);\n};\n\nvar _OrtGetOutputName = Module[\"_OrtGetOutputName\"] = function() {\n return (_OrtGetOutputName = Module[\"_OrtGetOutputName\"] = Module[\"asm\"][\"OrtGetOutputName\"]).apply(null, arguments);\n};\n\nvar _OrtFree = Module[\"_OrtFree\"] = function() {\n return (_OrtFree = Module[\"_OrtFree\"] = Module[\"asm\"][\"OrtFree\"]).apply(null, arguments);\n};\n\nvar _OrtCreateTensor = Module[\"_OrtCreateTensor\"] = function() {\n return (_OrtCreateTensor = Module[\"_OrtCreateTensor\"] = Module[\"asm\"][\"OrtCreateTensor\"]).apply(null, arguments);\n};\n\nvar _OrtGetTensorData = Module[\"_OrtGetTensorData\"] = function() {\n return (_OrtGetTensorData = Module[\"_OrtGetTensorData\"] = Module[\"asm\"][\"OrtGetTensorData\"]).apply(null, arguments);\n};\n\nvar _OrtReleaseTensor = Module[\"_OrtReleaseTensor\"] = function() {\n return (_OrtReleaseTensor = Module[\"_OrtReleaseTensor\"] = Module[\"asm\"][\"OrtReleaseTensor\"]).apply(null, arguments);\n};\n\nvar _OrtCreateRunOptions = Module[\"_OrtCreateRunOptions\"] = function() {\n return (_OrtCreateRunOptions = Module[\"_OrtCreateRunOptions\"] = Module[\"asm\"][\"OrtCreateRunOptions\"]).apply(null, arguments);\n};\n\nvar _OrtAddRunConfigEntry = Module[\"_OrtAddRunConfigEntry\"] = function() {\n return (_OrtAddRunConfigEntry = Module[\"_OrtAddRunConfigEntry\"] = Module[\"asm\"][\"OrtAddRunConfigEntry\"]).apply(null, arguments);\n};\n\nvar _OrtReleaseRunOptions = Module[\"_OrtReleaseRunOptions\"] = function() {\n return (_OrtReleaseRunOptions = Module[\"_OrtReleaseRunOptions\"] = Module[\"asm\"][\"OrtReleaseRunOptions\"]).apply(null, arguments);\n};\n\nvar _OrtRun = Module[\"_OrtRun\"] = function() {\n return (_OrtRun = Module[\"_OrtRun\"] = Module[\"asm\"][\"OrtRun\"]).apply(null, arguments);\n};\n\nvar _OrtEndProfiling = Module[\"_OrtEndProfiling\"] = function() {\n return (_OrtEndProfiling = Module[\"_OrtEndProfiling\"] = Module[\"asm\"][\"OrtEndProfiling\"]).apply(null, arguments);\n};\n\nvar ___cxa_free_exception = function() {\n return (___cxa_free_exception = Module[\"asm\"][\"__cxa_free_exception\"]).apply(null, arguments);\n};\n\nvar ___errno_location = function() {\n return (___errno_location = Module[\"asm\"][\"__errno_location\"]).apply(null, arguments);\n};\n\nvar _malloc = Module[\"_malloc\"] = function() {\n return (_malloc = Module[\"_malloc\"] = Module[\"asm\"][\"malloc\"]).apply(null, arguments);\n};\n\nvar _free = Module[\"_free\"] = function() {\n return (_free = Module[\"_free\"] = Module[\"asm\"][\"free\"]).apply(null, arguments);\n};\n\nvar ___getTypeName = function() {\n return (___getTypeName = Module[\"asm\"][\"__getTypeName\"]).apply(null, arguments);\n};\n\nvar __embind_initialize_bindings = Module[\"__embind_initialize_bindings\"] = function() {\n return (__embind_initialize_bindings = Module[\"__embind_initialize_bindings\"] = Module[\"asm\"][\"_embind_initialize_bindings\"]).apply(null, arguments);\n};\n\nvar _setThrew = function() {\n return (_setThrew = Module[\"asm\"][\"setThrew\"]).apply(null, arguments);\n};\n\nvar setTempRet0 = function() {\n return (setTempRet0 = Module[\"asm\"][\"setTempRet0\"]).apply(null, arguments);\n};\n\nvar getTempRet0 = function() {\n return (getTempRet0 = Module[\"asm\"][\"getTempRet0\"]).apply(null, arguments);\n};\n\nvar stackSave = function() {\n return (stackSave = Module[\"asm\"][\"stackSave\"]).apply(null, arguments);\n};\n\nvar stackRestore = function() {\n return (stackRestore = Module[\"asm\"][\"stackRestore\"]).apply(null, arguments);\n};\n\nvar stackAlloc = function() {\n return (stackAlloc = Module[\"asm\"][\"stackAlloc\"]).apply(null, arguments);\n};\n\nvar ___cxa_decrement_exception_refcount = function() {\n return (___cxa_decrement_exception_refcount = Module[\"asm\"][\"__cxa_decrement_exception_refcount\"]).apply(null, arguments);\n};\n\nvar ___cxa_increment_exception_refcount = function() {\n return (___cxa_increment_exception_refcount = Module[\"asm\"][\"__cxa_increment_exception_refcount\"]).apply(null, arguments);\n};\n\nvar ___cxa_can_catch = function() {\n return (___cxa_can_catch = Module[\"asm\"][\"__cxa_can_catch\"]).apply(null, arguments);\n};\n\nvar ___cxa_is_pointer_type = function() {\n return (___cxa_is_pointer_type = Module[\"asm\"][\"__cxa_is_pointer_type\"]).apply(null, arguments);\n};\n\nfunction invoke_ii(index, a1) {\n var sp = stackSave();\n try {\n  return getWasmTableEntry(index)(a1);\n } catch (e) {\n  stackRestore(sp);\n  if (e !== e + 0) throw e;\n  _setThrew(1, 0);\n }\n}\n\nfunction invoke_vi(index, a1) {\n var sp = stackSave();\n try {\n  getWasmTableEntry(index)(a1);\n } catch (e) {\n  stackRestore(sp);\n  if (e !== e + 0) throw e;\n  _setThrew(1, 0);\n }\n}\n\nfunction invoke_vii(index, a1, a2) {\n var sp = stackSave();\n try {\n  getWasmTableEntry(index)(a1, a2);\n } catch (e) {\n  stackRestore(sp);\n  if (e !== e + 0) throw e;\n  _setThrew(1, 0);\n }\n}\n\nfunction invoke_iii(index, a1, a2) {\n var sp = stackSave();\n try {\n  return getWasmTableEntry(index)(a1, a2);\n } catch (e) {\n  stackRestore(sp);\n  if (e !== e + 0) throw e;\n  _setThrew(1, 0);\n }\n}\n\nfunction invoke_iiii(index, a1, a2, a3) {\n var sp = stackSave();\n try {\n  return getWasmTableEntry(index)(a1, a2, a3);\n } catch (e) {\n  stackRestore(sp);\n  if (e !== e + 0) throw e;\n  _setThrew(1, 0);\n }\n}\n\nfunction invoke_iiiiiii(index, a1, a2, a3, a4, a5, a6) {\n var sp = stackSave();\n try {\n  return getWasmTableEntry(index)(a1, a2, a3, a4, a5, a6);\n } catch (e) {\n  stackRestore(sp);\n  if (e !== e + 0) throw e;\n  _setThrew(1, 0);\n }\n}\n\nfunction invoke_v(index) {\n var sp = stackSave();\n try {\n  getWasmTableEntry(index)();\n } catch (e) {\n  stackRestore(sp);\n  if (e !== e + 0) throw e;\n  _setThrew(1, 0);\n }\n}\n\nfunction invoke_iiiiii(index, a1, a2, a3, a4, a5) {\n var sp = stackSave();\n try {\n  return getWasmTableEntry(index)(a1, a2, a3, a4, a5);\n } catch (e) {\n  stackRestore(sp);\n  if (e !== e + 0) throw e;\n  _setThrew(1, 0);\n }\n}\n\nfunction invoke_iiiii(index, a1, a2, a3, a4) {\n var sp = stackSave();\n try {\n  return getWasmTableEntry(index)(a1, a2, a3, a4);\n } catch (e) {\n  stackRestore(sp);\n  if (e !== e + 0) throw e;\n  _setThrew(1, 0);\n }\n}\n\nfunction invoke_viii(index, a1, a2, a3) {\n var sp = stackSave();\n try {\n  getWasmTableEntry(index)(a1, a2, a3);\n } catch (e) {\n  stackRestore(sp);\n  if (e !== e + 0) throw e;\n  _setThrew(1, 0);\n }\n}\n\nfunction invoke_viiii(index, a1, a2, a3, a4) {\n var sp = stackSave();\n try {\n  getWasmTableEntry(index)(a1, a2, a3, a4);\n } catch (e) {\n  stackRestore(sp);\n  if (e !== e + 0) throw e;\n  _setThrew(1, 0);\n }\n}\n\nfunction invoke_iij(index, a1, a2) {\n var sp = stackSave();\n try {\n  return getWasmTableEntry(index)(a1, a2);\n } catch (e) {\n  stackRestore(sp);\n  if (e !== e + 0) throw e;\n  _setThrew(1, 0);\n }\n}\n\nfunction invoke_i(index) {\n var sp = stackSave();\n try {\n  return getWasmTableEntry(index)();\n } catch (e) {\n  stackRestore(sp);\n  if (e !== e + 0) throw e;\n  _setThrew(1, 0);\n }\n}\n\nfunction invoke_vij(index, a1, a2) {\n var sp = stackSave();\n try {\n  getWasmTableEntry(index)(a1, a2);\n } catch (e) {\n  stackRestore(sp);\n  if (e !== e + 0) throw e;\n  _setThrew(1, 0);\n }\n}\n\nfunction invoke_viiiii(index, a1, a2, a3, a4, a5) {\n var sp = stackSave();\n try {\n  getWasmTableEntry(index)(a1, a2, a3, a4, a5);\n } catch (e) {\n  stackRestore(sp);\n  if (e !== e + 0) throw e;\n  _setThrew(1, 0);\n }\n}\n\nfunction invoke_iiiiiiii(index, a1, a2, a3, a4, a5, a6, a7) {\n var sp = stackSave();\n try {\n  return getWasmTableEntry(index)(a1, a2, a3, a4, a5, a6, a7);\n } catch (e) {\n  stackRestore(sp);\n  if (e !== e + 0) throw e;\n  _setThrew(1, 0);\n }\n}\n\nfunction invoke_fi(index, a1) {\n var sp = stackSave();\n try {\n  return getWasmTableEntry(index)(a1);\n } catch (e) {\n  stackRestore(sp);\n  if (e !== e + 0) throw e;\n  _setThrew(1, 0);\n }\n}\n\nfunction invoke_ji(index, a1) {\n var sp = stackSave();\n try {\n  return getWasmTableEntry(index)(a1);\n } catch (e) {\n  stackRestore(sp);\n  if (e !== e + 0) throw e;\n  _setThrew(1, 0);\n  return 0n;\n }\n}\n\nfunction invoke_di(index, a1) {\n var sp = stackSave();\n try {\n  return getWasmTableEntry(index)(a1);\n } catch (e) {\n  stackRestore(sp);\n  if (e !== e + 0) throw e;\n  _setThrew(1, 0);\n }\n}\n\nfunction invoke_iiiiiiiii(index, a1, a2, a3, a4, a5, a6, a7, a8) {\n var sp = stackSave();\n try {\n  return getWasmTableEntry(index)(a1, a2, a3, a4, a5, a6, a7, a8);\n } catch (e) {\n  stackRestore(sp);\n  if (e !== e + 0) throw e;\n  _setThrew(1, 0);\n }\n}\n\nfunction invoke_viiiiii(index, a1, a2, a3, a4, a5, a6) {\n var sp = stackSave();\n try {\n  getWasmTableEntry(index)(a1, a2, a3, a4, a5, a6);\n } catch (e) {\n  stackRestore(sp);\n  if (e !== e + 0) throw e;\n  _setThrew(1, 0);\n }\n}\n\nfunction invoke_vijj(index, a1, a2, a3) {\n var sp = stackSave();\n try {\n  getWasmTableEntry(index)(a1, a2, a3);\n } catch (e) {\n  stackRestore(sp);\n  if (e !== e + 0) throw e;\n  _setThrew(1, 0);\n }\n}\n\nfunction invoke_viiijii(index, a1, a2, a3, a4, a5, a6) {\n var sp = stackSave();\n try {\n  getWasmTableEntry(index)(a1, a2, a3, a4, a5, a6);\n } catch (e) {\n  stackRestore(sp);\n  if (e !== e + 0) throw e;\n  _setThrew(1, 0);\n }\n}\n\nfunction invoke_viiiiiii(index, a1, a2, a3, a4, a5, a6, a7) {\n var sp = stackSave();\n try {\n  getWasmTableEntry(index)(a1, a2, a3, a4, a5, a6, a7);\n } catch (e) {\n  stackRestore(sp);\n  if (e !== e + 0) throw e;\n  _setThrew(1, 0);\n }\n}\n\nfunction invoke_viijj(index, a1, a2, a3, a4) {\n var sp = stackSave();\n try {\n  getWasmTableEntry(index)(a1, a2, a3, a4);\n } catch (e) {\n  stackRestore(sp);\n  if (e !== e + 0) throw e;\n  _setThrew(1, 0);\n }\n}\n\nfunction invoke_iiiiiiiiii(index, a1, a2, a3, a4, a5, a6, a7, a8, a9) {\n var sp = stackSave();\n try {\n  return getWasmTableEntry(index)(a1, a2, a3, a4, a5, a6, a7, a8, a9);\n } catch (e) {\n  stackRestore(sp);\n  if (e !== e + 0) throw e;\n  _setThrew(1, 0);\n }\n}\n\nfunction invoke_viiiiiiii(index, a1, a2, a3, a4, a5, a6, a7, a8) {\n var sp = stackSave();\n try {\n  getWasmTableEntry(index)(a1, a2, a3, a4, a5, a6, a7, a8);\n } catch (e) {\n  stackRestore(sp);\n  if (e !== e + 0) throw e;\n  _setThrew(1, 0);\n }\n}\n\nfunction invoke_iiiiijiiiii(index, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10) {\n var sp = stackSave();\n try {\n  return getWasmTableEntry(index)(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10);\n } catch (e) {\n  stackRestore(sp);\n  if (e !== e + 0) throw e;\n  _setThrew(1, 0);\n }\n}\n\nfunction invoke_viij(index, a1, a2, a3) {\n var sp = stackSave();\n try {\n  getWasmTableEntry(index)(a1, a2, a3);\n } catch (e) {\n  stackRestore(sp);\n  if (e !== e + 0) throw e;\n  _setThrew(1, 0);\n }\n}\n\nfunction invoke_iiiiij(index, a1, a2, a3, a4, a5) {\n var sp = stackSave();\n try {\n  return getWasmTableEntry(index)(a1, a2, a3, a4, a5);\n } catch (e) {\n  stackRestore(sp);\n  if (e !== e + 0) throw e;\n  _setThrew(1, 0);\n }\n}\n\nfunction invoke_viijiii(index, a1, a2, a3, a4, a5, a6) {\n var sp = stackSave();\n try {\n  getWasmTableEntry(index)(a1, a2, a3, a4, a5, a6);\n } catch (e) {\n  stackRestore(sp);\n  if (e !== e + 0) throw e;\n  _setThrew(1, 0);\n }\n}\n\nfunction invoke_viiiij(index, a1, a2, a3, a4, a5) {\n var sp = stackSave();\n try {\n  getWasmTableEntry(index)(a1, a2, a3, a4, a5);\n } catch (e) {\n  stackRestore(sp);\n  if (e !== e + 0) throw e;\n  _setThrew(1, 0);\n }\n}\n\nfunction invoke_viiiiij(index, a1, a2, a3, a4, a5, a6) {\n var sp = stackSave();\n try {\n  getWasmTableEntry(index)(a1, a2, a3, a4, a5, a6);\n } catch (e) {\n  stackRestore(sp);\n  if (e !== e + 0) throw e;\n  _setThrew(1, 0);\n }\n}\n\nfunction invoke_viiiiiiiii(index, a1, a2, a3, a4, a5, a6, a7, a8, a9) {\n var sp = stackSave();\n try {\n  getWasmTableEntry(index)(a1, a2, a3, a4, a5, a6, a7, a8, a9);\n } catch (e) {\n  stackRestore(sp);\n  if (e !== e + 0) throw e;\n  _setThrew(1, 0);\n }\n}\n\nfunction invoke_jii(index, a1, a2) {\n var sp = stackSave();\n try {\n  return getWasmTableEntry(index)(a1, a2);\n } catch (e) {\n  stackRestore(sp);\n  if (e !== e + 0) throw e;\n  _setThrew(1, 0);\n  return 0n;\n }\n}\n\nfunction invoke_viid(index, a1, a2, a3) {\n var sp = stackSave();\n try {\n  getWasmTableEntry(index)(a1, a2, a3);\n } catch (e) {\n  stackRestore(sp);\n  if (e !== e + 0) throw e;\n  _setThrew(1, 0);\n }\n}\n\nfunction invoke_iiiiiiiiiii(index, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10) {\n var sp = stackSave();\n try {\n  return getWasmTableEntry(index)(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10);\n } catch (e) {\n  stackRestore(sp);\n  if (e !== e + 0) throw e;\n  _setThrew(1, 0);\n }\n}\n\nfunction invoke_viiiiiiiiiiiii(index, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13) {\n var sp = stackSave();\n try {\n  getWasmTableEntry(index)(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13);\n } catch (e) {\n  stackRestore(sp);\n  if (e !== e + 0) throw e;\n  _setThrew(1, 0);\n }\n}\n\nfunction invoke_viijjjiiiiii(index, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11) {\n var sp = stackSave();\n try {\n  getWasmTableEntry(index)(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11);\n } catch (e) {\n  stackRestore(sp);\n  if (e !== e + 0) throw e;\n  _setThrew(1, 0);\n }\n}\n\nfunction invoke_viiijiiiiiii(index, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11) {\n var sp = stackSave();\n try {\n  getWasmTableEntry(index)(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11);\n } catch (e) {\n  stackRestore(sp);\n  if (e !== e + 0) throw e;\n  _setThrew(1, 0);\n }\n}\n\nfunction invoke_viiji(index, a1, a2, a3, a4) {\n var sp = stackSave();\n try {\n  getWasmTableEntry(index)(a1, a2, a3, a4);\n } catch (e) {\n  stackRestore(sp);\n  if (e !== e + 0) throw e;\n  _setThrew(1, 0);\n }\n}\n\nfunction invoke_viffiii(index, a1, a2, a3, a4, a5, a6) {\n var sp = stackSave();\n try {\n  getWasmTableEntry(index)(a1, a2, a3, a4, a5, a6);\n } catch (e) {\n  stackRestore(sp);\n  if (e !== e + 0) throw e;\n  _setThrew(1, 0);\n }\n}\n\nfunction invoke_viiijjjii(index, a1, a2, a3, a4, a5, a6, a7, a8) {\n var sp = stackSave();\n try {\n  getWasmTableEntry(index)(a1, a2, a3, a4, a5, a6, a7, a8);\n } catch (e) {\n  stackRestore(sp);\n  if (e !== e + 0) throw e;\n  _setThrew(1, 0);\n }\n}\n\nfunction invoke_iiij(index, a1, a2, a3) {\n var sp = stackSave();\n try {\n  return getWasmTableEntry(index)(a1, a2, a3);\n } catch (e) {\n  stackRestore(sp);\n  if (e !== e + 0) throw e;\n  _setThrew(1, 0);\n }\n}\n\nfunction invoke_viijjjfiifiii(index, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12) {\n var sp = stackSave();\n try {\n  getWasmTableEntry(index)(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12);\n } catch (e) {\n  stackRestore(sp);\n  if (e !== e + 0) throw e;\n  _setThrew(1, 0);\n }\n}\n\nfunction invoke_vjjfiii(index, a1, a2, a3, a4, a5, a6) {\n var sp = stackSave();\n try {\n  getWasmTableEntry(index)(a1, a2, a3, a4, a5, a6);\n } catch (e) {\n  stackRestore(sp);\n  if (e !== e + 0) throw e;\n  _setThrew(1, 0);\n }\n}\n\nfunction invoke_viiiiidiidi(index, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10) {\n var sp = stackSave();\n try {\n  getWasmTableEntry(index)(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10);\n } catch (e) {\n  stackRestore(sp);\n  if (e !== e + 0) throw e;\n  _setThrew(1, 0);\n }\n}\n\nfunction invoke_jiii(index, a1, a2, a3) {\n var sp = stackSave();\n try {\n  return getWasmTableEntry(index)(a1, a2, a3);\n } catch (e) {\n  stackRestore(sp);\n  if (e !== e + 0) throw e;\n  _setThrew(1, 0);\n  return 0n;\n }\n}\n\nfunction invoke_viiid(index, a1, a2, a3, a4) {\n var sp = stackSave();\n try {\n  getWasmTableEntry(index)(a1, a2, a3, a4);\n } catch (e) {\n  stackRestore(sp);\n  if (e !== e + 0) throw e;\n  _setThrew(1, 0);\n }\n}\n\nfunction invoke_vijjjjjjjjjjjjji(index, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15) {\n var sp = stackSave();\n try {\n  getWasmTableEntry(index)(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15);\n } catch (e) {\n  stackRestore(sp);\n  if (e !== e + 0) throw e;\n  _setThrew(1, 0);\n }\n}\n\nfunction invoke_viiiji(index, a1, a2, a3, a4, a5) {\n var sp = stackSave();\n try {\n  getWasmTableEntry(index)(a1, a2, a3, a4, a5);\n } catch (e) {\n  stackRestore(sp);\n  if (e !== e + 0) throw e;\n  _setThrew(1, 0);\n }\n}\n\nfunction invoke_vijjjiiji(index, a1, a2, a3, a4, a5, a6, a7, a8) {\n var sp = stackSave();\n try {\n  getWasmTableEntry(index)(a1, a2, a3, a4, a5, a6, a7, a8);\n } catch (e) {\n  stackRestore(sp);\n  if (e !== e + 0) throw e;\n  _setThrew(1, 0);\n }\n}\n\nfunction invoke_iiiji(index, a1, a2, a3, a4) {\n var sp = stackSave();\n try {\n  return getWasmTableEntry(index)(a1, a2, a3, a4);\n } catch (e) {\n  stackRestore(sp);\n  if (e !== e + 0) throw e;\n  _setThrew(1, 0);\n }\n}\n\nfunction invoke_iiijiiiiiiiiii(index, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13) {\n var sp = stackSave();\n try {\n  return getWasmTableEntry(index)(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13);\n } catch (e) {\n  stackRestore(sp);\n  if (e !== e + 0) throw e;\n  _setThrew(1, 0);\n }\n}\n\nfunction invoke_vj(index, a1) {\n var sp = stackSave();\n try {\n  getWasmTableEntry(index)(a1);\n } catch (e) {\n  stackRestore(sp);\n  if (e !== e + 0) throw e;\n  _setThrew(1, 0);\n }\n}\n\nfunction invoke_jjj(index, a1, a2) {\n var sp = stackSave();\n try {\n  return getWasmTableEntry(index)(a1, a2);\n } catch (e) {\n  stackRestore(sp);\n  if (e !== e + 0) throw e;\n  _setThrew(1, 0);\n  return 0n;\n }\n}\n\nfunction invoke_iiijiiiiii(index, a1, a2, a3, a4, a5, a6, a7, a8, a9) {\n var sp = stackSave();\n try {\n  return getWasmTableEntry(index)(a1, a2, a3, a4, a5, a6, a7, a8, a9);\n } catch (e) {\n  stackRestore(sp);\n  if (e !== e + 0) throw e;\n  _setThrew(1, 0);\n }\n}\n\nfunction invoke_fiiii(index, a1, a2, a3, a4) {\n var sp = stackSave();\n try {\n  return getWasmTableEntry(index)(a1, a2, a3, a4);\n } catch (e) {\n  stackRestore(sp);\n  if (e !== e + 0) throw e;\n  _setThrew(1, 0);\n }\n}\n\nfunction invoke_viiiiiiiijj(index, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10) {\n var sp = stackSave();\n try {\n  getWasmTableEntry(index)(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10);\n } catch (e) {\n  stackRestore(sp);\n  if (e !== e + 0) throw e;\n  _setThrew(1, 0);\n }\n}\n\nfunction invoke_iiiiiiiiiiiiiifi(index, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15) {\n var sp = stackSave();\n try {\n  return getWasmTableEntry(index)(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15);\n } catch (e) {\n  stackRestore(sp);\n  if (e !== e + 0) throw e;\n  _setThrew(1, 0);\n }\n}\n\nfunction invoke_viiiiiiiiiii(index, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11) {\n var sp = stackSave();\n try {\n  getWasmTableEntry(index)(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11);\n } catch (e) {\n  stackRestore(sp);\n  if (e !== e + 0) throw e;\n  _setThrew(1, 0);\n }\n}\n\nfunction invoke_ij(index, a1) {\n var sp = stackSave();\n try {\n  return getWasmTableEntry(index)(a1);\n } catch (e) {\n  stackRestore(sp);\n  if (e !== e + 0) throw e;\n  _setThrew(1, 0);\n }\n}\n\nfunction invoke_viiiiiiiiifiii(index, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13) {\n var sp = stackSave();\n try {\n  getWasmTableEntry(index)(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13);\n } catch (e) {\n  stackRestore(sp);\n  if (e !== e + 0) throw e;\n  _setThrew(1, 0);\n }\n}\n\nfunction invoke_vfiii(index, a1, a2, a3, a4) {\n var sp = stackSave();\n try {\n  getWasmTableEntry(index)(a1, a2, a3, a4);\n } catch (e) {\n  stackRestore(sp);\n  if (e !== e + 0) throw e;\n  _setThrew(1, 0);\n }\n}\n\nfunction invoke_viiiiff(index, a1, a2, a3, a4, a5, a6) {\n var sp = stackSave();\n try {\n  getWasmTableEntry(index)(a1, a2, a3, a4, a5, a6);\n } catch (e) {\n  stackRestore(sp);\n  if (e !== e + 0) throw e;\n  _setThrew(1, 0);\n }\n}\n\nfunction invoke_viiff(index, a1, a2, a3, a4) {\n var sp = stackSave();\n try {\n  getWasmTableEntry(index)(a1, a2, a3, a4);\n } catch (e) {\n  stackRestore(sp);\n  if (e !== e + 0) throw e;\n  _setThrew(1, 0);\n }\n}\n\nfunction invoke_viiiiiff(index, a1, a2, a3, a4, a5, a6, a7) {\n var sp = stackSave();\n try {\n  getWasmTableEntry(index)(a1, a2, a3, a4, a5, a6, a7);\n } catch (e) {\n  stackRestore(sp);\n  if (e !== e + 0) throw e;\n  _setThrew(1, 0);\n }\n}\n\nfunction invoke_iiiiiiiiiiiiiiiiifii(index, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19) {\n var sp = stackSave();\n try {\n  return getWasmTableEntry(index)(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19);\n } catch (e) {\n  stackRestore(sp);\n  if (e !== e + 0) throw e;\n  _setThrew(1, 0);\n }\n}\n\nfunction invoke_vijjiiiiii(index, a1, a2, a3, a4, a5, a6, a7, a8, a9) {\n var sp = stackSave();\n try {\n  getWasmTableEntry(index)(a1, a2, a3, a4, a5, a6, a7, a8, a9);\n } catch (e) {\n  stackRestore(sp);\n  if (e !== e + 0) throw e;\n  _setThrew(1, 0);\n }\n}\n\nfunction invoke_iiiijjj(index, a1, a2, a3, a4, a5, a6) {\n var sp = stackSave();\n try {\n  return getWasmTableEntry(index)(a1, a2, a3, a4, a5, a6);\n } catch (e) {\n  stackRestore(sp);\n  if (e !== e + 0) throw e;\n  _setThrew(1, 0);\n }\n}\n\nfunction invoke_iiijjj(index, a1, a2, a3, a4, a5) {\n var sp = stackSave();\n try {\n  return getWasmTableEntry(index)(a1, a2, a3, a4, a5);\n } catch (e) {\n  stackRestore(sp);\n  if (e !== e + 0) throw e;\n  _setThrew(1, 0);\n }\n}\n\nfunction invoke_vjjjjjjffiifiiiiii(index, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17) {\n var sp = stackSave();\n try {\n  getWasmTableEntry(index)(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17);\n } catch (e) {\n  stackRestore(sp);\n  if (e !== e + 0) throw e;\n  _setThrew(1, 0);\n }\n}\n\nfunction invoke_viiiiiiffiifiiiii(index, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16) {\n var sp = stackSave();\n try {\n  getWasmTableEntry(index)(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16);\n } catch (e) {\n  stackRestore(sp);\n  if (e !== e + 0) throw e;\n  _setThrew(1, 0);\n }\n}\n\nfunction invoke_viiiiiiffifiiiii(index, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15) {\n var sp = stackSave();\n try {\n  getWasmTableEntry(index)(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15);\n } catch (e) {\n  stackRestore(sp);\n  if (e !== e + 0) throw e;\n  _setThrew(1, 0);\n }\n}\n\nfunction invoke_viiiiiiffiiiiii(index, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14) {\n var sp = stackSave();\n try {\n  getWasmTableEntry(index)(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14);\n } catch (e) {\n  stackRestore(sp);\n  if (e !== e + 0) throw e;\n  _setThrew(1, 0);\n }\n}\n\nfunction invoke_vjjjjjjjjfffiifiiiiii(index, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20) {\n var sp = stackSave();\n try {\n  getWasmTableEntry(index)(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20);\n } catch (e) {\n  stackRestore(sp);\n  if (e !== e + 0) throw e;\n  _setThrew(1, 0);\n }\n}\n\nfunction invoke_vjjjjjjfffifiiiiiii(index, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18) {\n var sp = stackSave();\n try {\n  getWasmTableEntry(index)(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18);\n } catch (e) {\n  stackRestore(sp);\n  if (e !== e + 0) throw e;\n  _setThrew(1, 0);\n }\n}\n\nfunction invoke_vjjjjjjfffifiiiii(index, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16) {\n var sp = stackSave();\n try {\n  getWasmTableEntry(index)(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16);\n } catch (e) {\n  stackRestore(sp);\n  if (e !== e + 0) throw e;\n  _setThrew(1, 0);\n }\n}\n\nfunction invoke_vjjjjjjjjfffiifiiiii(index, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19) {\n var sp = stackSave();\n try {\n  getWasmTableEntry(index)(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19);\n } catch (e) {\n  stackRestore(sp);\n  if (e !== e + 0) throw e;\n  _setThrew(1, 0);\n }\n}\n\nfunction invoke_vijjfffiii(index, a1, a2, a3, a4, a5, a6, a7, a8, a9) {\n var sp = stackSave();\n try {\n  getWasmTableEntry(index)(a1, a2, a3, a4, a5, a6, a7, a8, a9);\n } catch (e) {\n  stackRestore(sp);\n  if (e !== e + 0) throw e;\n  _setThrew(1, 0);\n }\n}\n\nfunction invoke_vijiiiiiiii(index, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10) {\n var sp = stackSave();\n try {\n  getWasmTableEntry(index)(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10);\n } catch (e) {\n  stackRestore(sp);\n  if (e !== e + 0) throw e;\n  _setThrew(1, 0);\n }\n}\n\nfunction invoke_viiiiiiiiiiii(index, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12) {\n var sp = stackSave();\n try {\n  getWasmTableEntry(index)(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12);\n } catch (e) {\n  stackRestore(sp);\n  if (e !== e + 0) throw e;\n  _setThrew(1, 0);\n }\n}\n\nfunction invoke_vijjjjjjifiiiii(index, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14) {\n var sp = stackSave();\n try {\n  getWasmTableEntry(index)(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14);\n } catch (e) {\n  stackRestore(sp);\n  if (e !== e + 0) throw e;\n  _setThrew(1, 0);\n }\n}\n\nfunction invoke_vjjjjjiiii(index, a1, a2, a3, a4, a5, a6, a7, a8, a9) {\n var sp = stackSave();\n try {\n  getWasmTableEntry(index)(a1, a2, a3, a4, a5, a6, a7, a8, a9);\n } catch (e) {\n  stackRestore(sp);\n  if (e !== e + 0) throw e;\n  _setThrew(1, 0);\n }\n}\n\nfunction invoke_vjjjjfiii(index, a1, a2, a3, a4, a5, a6, a7, a8) {\n var sp = stackSave();\n try {\n  getWasmTableEntry(index)(a1, a2, a3, a4, a5, a6, a7, a8);\n } catch (e) {\n  stackRestore(sp);\n  if (e !== e + 0) throw e;\n  _setThrew(1, 0);\n }\n}\n\nfunction invoke_fffffff(index, a1, a2, a3, a4, a5, a6) {\n var sp = stackSave();\n try {\n  return getWasmTableEntry(index)(a1, a2, a3, a4, a5, a6);\n } catch (e) {\n  stackRestore(sp);\n  if (e !== e + 0) throw e;\n  _setThrew(1, 0);\n }\n}\n\nfunction invoke_viifi(index, a1, a2, a3, a4) {\n var sp = stackSave();\n try {\n  getWasmTableEntry(index)(a1, a2, a3, a4);\n } catch (e) {\n  stackRestore(sp);\n  if (e !== e + 0) throw e;\n  _setThrew(1, 0);\n }\n}\n\nfunction invoke_jfi(index, a1, a2) {\n var sp = stackSave();\n try {\n  return getWasmTableEntry(index)(a1, a2);\n } catch (e) {\n  stackRestore(sp);\n  if (e !== e + 0) throw e;\n  _setThrew(1, 0);\n  return 0n;\n }\n}\n\nfunction invoke_iiiiiiiiiiii(index, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11) {\n var sp = stackSave();\n try {\n  return getWasmTableEntry(index)(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11);\n } catch (e) {\n  stackRestore(sp);\n  if (e !== e + 0) throw e;\n  _setThrew(1, 0);\n }\n}\n\nfunction invoke_iiiiiji(index, a1, a2, a3, a4, a5, a6) {\n var sp = stackSave();\n try {\n  return getWasmTableEntry(index)(a1, a2, a3, a4, a5, a6);\n } catch (e) {\n  stackRestore(sp);\n  if (e !== e + 0) throw e;\n  _setThrew(1, 0);\n }\n}\n\nfunction invoke_vijjii(index, a1, a2, a3, a4, a5) {\n var sp = stackSave();\n try {\n  getWasmTableEntry(index)(a1, a2, a3, a4, a5);\n } catch (e) {\n  stackRestore(sp);\n  if (e !== e + 0) throw e;\n  _setThrew(1, 0);\n }\n}\n\nfunction invoke_viiijiiiiii(index, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10) {\n var sp = stackSave();\n try {\n  getWasmTableEntry(index)(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10);\n } catch (e) {\n  stackRestore(sp);\n  if (e !== e + 0) throw e;\n  _setThrew(1, 0);\n }\n}\n\nfunction invoke_viiiiijjiiiii(index, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12) {\n var sp = stackSave();\n try {\n  getWasmTableEntry(index)(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12);\n } catch (e) {\n  stackRestore(sp);\n  if (e !== e + 0) throw e;\n  _setThrew(1, 0);\n }\n}\n\nfunction invoke_iiiiji(index, a1, a2, a3, a4, a5) {\n var sp = stackSave();\n try {\n  return getWasmTableEntry(index)(a1, a2, a3, a4, a5);\n } catch (e) {\n  stackRestore(sp);\n  if (e !== e + 0) throw e;\n  _setThrew(1, 0);\n }\n}\n\nfunction invoke_viiiiijiiiiii(index, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12) {\n var sp = stackSave();\n try {\n  getWasmTableEntry(index)(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12);\n } catch (e) {\n  stackRestore(sp);\n  if (e !== e + 0) throw e;\n  _setThrew(1, 0);\n }\n}\n\nfunction invoke_viiiijii(index, a1, a2, a3, a4, a5, a6, a7) {\n var sp = stackSave();\n try {\n  getWasmTableEntry(index)(a1, a2, a3, a4, a5, a6, a7);\n } catch (e) {\n  stackRestore(sp);\n  if (e !== e + 0) throw e;\n  _setThrew(1, 0);\n }\n}\n\nfunction invoke_viijjiii(index, a1, a2, a3, a4, a5, a6, a7) {\n var sp = stackSave();\n try {\n  getWasmTableEntry(index)(a1, a2, a3, a4, a5, a6, a7);\n } catch (e) {\n  stackRestore(sp);\n  if (e !== e + 0) throw e;\n  _setThrew(1, 0);\n }\n}\n\nfunction invoke_ijii(index, a1, a2, a3) {\n var sp = stackSave();\n try {\n  return getWasmTableEntry(index)(a1, a2, a3);\n } catch (e) {\n  stackRestore(sp);\n  if (e !== e + 0) throw e;\n  _setThrew(1, 0);\n }\n}\n\nfunction invoke_viiiiijjji(index, a1, a2, a3, a4, a5, a6, a7, a8, a9) {\n var sp = stackSave();\n try {\n  getWasmTableEntry(index)(a1, a2, a3, a4, a5, a6, a7, a8, a9);\n } catch (e) {\n  stackRestore(sp);\n  if (e !== e + 0) throw e;\n  _setThrew(1, 0);\n }\n}\n\nfunction invoke_vijjjjiij(index, a1, a2, a3, a4, a5, a6, a7, a8) {\n var sp = stackSave();\n try {\n  getWasmTableEntry(index)(a1, a2, a3, a4, a5, a6, a7, a8);\n } catch (e) {\n  stackRestore(sp);\n  if (e !== e + 0) throw e;\n  _setThrew(1, 0);\n }\n}\n\nfunction invoke_viiiiijij(index, a1, a2, a3, a4, a5, a6, a7, a8) {\n var sp = stackSave();\n try {\n  getWasmTableEntry(index)(a1, a2, a3, a4, a5, a6, a7, a8);\n } catch (e) {\n  stackRestore(sp);\n  if (e !== e + 0) throw e;\n  _setThrew(1, 0);\n }\n}\n\nfunction invoke_viiiiiijij(index, a1, a2, a3, a4, a5, a6, a7, a8, a9) {\n var sp = stackSave();\n try {\n  getWasmTableEntry(index)(a1, a2, a3, a4, a5, a6, a7, a8, a9);\n } catch (e) {\n  stackRestore(sp);\n  if (e !== e + 0) throw e;\n  _setThrew(1, 0);\n }\n}\n\nfunction invoke_vijiii(index, a1, a2, a3, a4, a5) {\n var sp = stackSave();\n try {\n  getWasmTableEntry(index)(a1, a2, a3, a4, a5);\n } catch (e) {\n  stackRestore(sp);\n  if (e !== e + 0) throw e;\n  _setThrew(1, 0);\n }\n}\n\nfunction invoke_viiifii(index, a1, a2, a3, a4, a5, a6) {\n var sp = stackSave();\n try {\n  getWasmTableEntry(index)(a1, a2, a3, a4, a5, a6);\n } catch (e) {\n  stackRestore(sp);\n  if (e !== e + 0) throw e;\n  _setThrew(1, 0);\n }\n}\n\nfunction invoke_viiiiiiiiifi(index, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11) {\n var sp = stackSave();\n try {\n  getWasmTableEntry(index)(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11);\n } catch (e) {\n  stackRestore(sp);\n  if (e !== e + 0) throw e;\n  _setThrew(1, 0);\n }\n}\n\nfunction invoke_viiijiiiiiiiii(index, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13) {\n var sp = stackSave();\n try {\n  getWasmTableEntry(index)(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13);\n } catch (e) {\n  stackRestore(sp);\n  if (e !== e + 0) throw e;\n  _setThrew(1, 0);\n }\n}\n\nfunction invoke_iiijiiii(index, a1, a2, a3, a4, a5, a6, a7) {\n var sp = stackSave();\n try {\n  return getWasmTableEntry(index)(a1, a2, a3, a4, a5, a6, a7);\n } catch (e) {\n  stackRestore(sp);\n  if (e !== e + 0) throw e;\n  _setThrew(1, 0);\n }\n}\n\nfunction invoke_viiiiiiiiiiiiii(index, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14) {\n var sp = stackSave();\n try {\n  getWasmTableEntry(index)(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14);\n } catch (e) {\n  stackRestore(sp);\n  if (e !== e + 0) throw e;\n  _setThrew(1, 0);\n }\n}\n\nfunction invoke_viiiiiijjiiiii(index, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13) {\n var sp = stackSave();\n try {\n  getWasmTableEntry(index)(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13);\n } catch (e) {\n  stackRestore(sp);\n  if (e !== e + 0) throw e;\n  _setThrew(1, 0);\n }\n}\n\nfunction invoke_viiiiiiijiiiiii(index, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14) {\n var sp = stackSave();\n try {\n  getWasmTableEntry(index)(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14);\n } catch (e) {\n  stackRestore(sp);\n  if (e !== e + 0) throw e;\n  _setThrew(1, 0);\n }\n}\n\nfunction invoke_vif(index, a1, a2) {\n var sp = stackSave();\n try {\n  getWasmTableEntry(index)(a1, a2);\n } catch (e) {\n  stackRestore(sp);\n  if (e !== e + 0) throw e;\n  _setThrew(1, 0);\n }\n}\n\nfunction invoke_viiijjjfii(index, a1, a2, a3, a4, a5, a6, a7, a8, a9) {\n var sp = stackSave();\n try {\n  getWasmTableEntry(index)(a1, a2, a3, a4, a5, a6, a7, a8, a9);\n } catch (e) {\n  stackRestore(sp);\n  if (e !== e + 0) throw e;\n  _setThrew(1, 0);\n }\n}\n\nfunction invoke_viiiiijiiiiiiiiiiiiiiiiiii(index, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20, a21, a22, a23, a24, a25) {\n var sp = stackSave();\n try {\n  getWasmTableEntry(index)(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20, a21, a22, a23, a24, a25);\n } catch (e) {\n  stackRestore(sp);\n  if (e !== e + 0) throw e;\n  _setThrew(1, 0);\n }\n}\n\nfunction invoke_viijji(index, a1, a2, a3, a4, a5) {\n var sp = stackSave();\n try {\n  getWasmTableEntry(index)(a1, a2, a3, a4, a5);\n } catch (e) {\n  stackRestore(sp);\n  if (e !== e + 0) throw e;\n  _setThrew(1, 0);\n }\n}\n\nfunction invoke_viifiifijjjii(index, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12) {\n var sp = stackSave();\n try {\n  getWasmTableEntry(index)(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12);\n } catch (e) {\n  stackRestore(sp);\n  if (e !== e + 0) throw e;\n  _setThrew(1, 0);\n }\n}\n\nfunction invoke_viiiiiiiiiiiiiiiiiiii(index, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20) {\n var sp = stackSave();\n try {\n  getWasmTableEntry(index)(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20);\n } catch (e) {\n  stackRestore(sp);\n  if (e !== e + 0) throw e;\n  _setThrew(1, 0);\n }\n}\n\nfunction invoke_iif(index, a1, a2) {\n var sp = stackSave();\n try {\n  return getWasmTableEntry(index)(a1, a2);\n } catch (e) {\n  stackRestore(sp);\n  if (e !== e + 0) throw e;\n  _setThrew(1, 0);\n }\n}\n\nfunction invoke_viiiiifiiiiii(index, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12) {\n var sp = stackSave();\n try {\n  getWasmTableEntry(index)(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12);\n } catch (e) {\n  stackRestore(sp);\n  if (e !== e + 0) throw e;\n  _setThrew(1, 0);\n }\n}\n\nfunction invoke_vijiiiiiiijjii(index, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13) {\n var sp = stackSave();\n try {\n  getWasmTableEntry(index)(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13);\n } catch (e) {\n  stackRestore(sp);\n  if (e !== e + 0) throw e;\n  _setThrew(1, 0);\n }\n}\n\nfunction invoke_viiiijjj(index, a1, a2, a3, a4, a5, a6, a7) {\n var sp = stackSave();\n try {\n  getWasmTableEntry(index)(a1, a2, a3, a4, a5, a6, a7);\n } catch (e) {\n  stackRestore(sp);\n  if (e !== e + 0) throw e;\n  _setThrew(1, 0);\n }\n}\n\nfunction invoke_viiiiiiiiiiiiiiii(index, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16) {\n var sp = stackSave();\n try {\n  getWasmTableEntry(index)(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16);\n } catch (e) {\n  stackRestore(sp);\n  if (e !== e + 0) throw e;\n  _setThrew(1, 0);\n }\n}\n\nfunction invoke_viiiiiiiiiiiiiiiiiii(index, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19) {\n var sp = stackSave();\n try {\n  getWasmTableEntry(index)(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19);\n } catch (e) {\n  stackRestore(sp);\n  if (e !== e + 0) throw e;\n  _setThrew(1, 0);\n }\n}\n\nfunction invoke_viiiiiiiiii(index, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10) {\n var sp = stackSave();\n try {\n  getWasmTableEntry(index)(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10);\n } catch (e) {\n  stackRestore(sp);\n  if (e !== e + 0) throw e;\n  _setThrew(1, 0);\n }\n}\n\nfunction invoke_viiiiiiiiiiiiiiiiii(index, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18) {\n var sp = stackSave();\n try {\n  getWasmTableEntry(index)(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18);\n } catch (e) {\n  stackRestore(sp);\n  if (e !== e + 0) throw e;\n  _setThrew(1, 0);\n }\n}\n\nfunction invoke_viiiiiiijjj(index, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10) {\n var sp = stackSave();\n try {\n  getWasmTableEntry(index)(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10);\n } catch (e) {\n  stackRestore(sp);\n  if (e !== e + 0) throw e;\n  _setThrew(1, 0);\n }\n}\n\nfunction invoke_iiiiiiiiiiiiiiiiiifi(index, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19) {\n var sp = stackSave();\n try {\n  return getWasmTableEntry(index)(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19);\n } catch (e) {\n  stackRestore(sp);\n  if (e !== e + 0) throw e;\n  _setThrew(1, 0);\n }\n}\n\nfunction invoke_viiif(index, a1, a2, a3, a4) {\n var sp = stackSave();\n try {\n  getWasmTableEntry(index)(a1, a2, a3, a4);\n } catch (e) {\n  stackRestore(sp);\n  if (e !== e + 0) throw e;\n  _setThrew(1, 0);\n }\n}\n\nfunction invoke_viiiiiiiiidi(index, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11) {\n var sp = stackSave();\n try {\n  getWasmTableEntry(index)(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11);\n } catch (e) {\n  stackRestore(sp);\n  if (e !== e + 0) throw e;\n  _setThrew(1, 0);\n }\n}\n\nfunction invoke_viiiiji(index, a1, a2, a3, a4, a5, a6) {\n var sp = stackSave();\n try {\n  getWasmTableEntry(index)(a1, a2, a3, a4, a5, a6);\n } catch (e) {\n  stackRestore(sp);\n  if (e !== e + 0) throw e;\n  _setThrew(1, 0);\n }\n}\n\nfunction invoke_iijjji(index, a1, a2, a3, a4, a5) {\n var sp = stackSave();\n try {\n  return getWasmTableEntry(index)(a1, a2, a3, a4, a5);\n } catch (e) {\n  stackRestore(sp);\n  if (e !== e + 0) throw e;\n  _setThrew(1, 0);\n }\n}\n\nfunction invoke_ijijji(index, a1, a2, a3, a4, a5) {\n var sp = stackSave();\n try {\n  return getWasmTableEntry(index)(a1, a2, a3, a4, a5);\n } catch (e) {\n  stackRestore(sp);\n  if (e !== e + 0) throw e;\n  _setThrew(1, 0);\n }\n}\n\nfunction invoke_jiij(index, a1, a2, a3) {\n var sp = stackSave();\n try {\n  return getWasmTableEntry(index)(a1, a2, a3);\n } catch (e) {\n  stackRestore(sp);\n  if (e !== e + 0) throw e;\n  _setThrew(1, 0);\n  return 0n;\n }\n}\n\nfunction invoke_iiiij(index, a1, a2, a3, a4) {\n var sp = stackSave();\n try {\n  return getWasmTableEntry(index)(a1, a2, a3, a4);\n } catch (e) {\n  stackRestore(sp);\n  if (e !== e + 0) throw e;\n  _setThrew(1, 0);\n }\n}\n\nfunction invoke_viiijjiii(index, a1, a2, a3, a4, a5, a6, a7, a8) {\n var sp = stackSave();\n try {\n  getWasmTableEntry(index)(a1, a2, a3, a4, a5, a6, a7, a8);\n } catch (e) {\n  stackRestore(sp);\n  if (e !== e + 0) throw e;\n  _setThrew(1, 0);\n }\n}\n\nfunction invoke_viif(index, a1, a2, a3) {\n var sp = stackSave();\n try {\n  getWasmTableEntry(index)(a1, a2, a3);\n } catch (e) {\n  stackRestore(sp);\n  if (e !== e + 0) throw e;\n  _setThrew(1, 0);\n }\n}\n\nfunction invoke_iiiiijji(index, a1, a2, a3, a4, a5, a6, a7) {\n var sp = stackSave();\n try {\n  return getWasmTableEntry(index)(a1, a2, a3, a4, a5, a6, a7);\n } catch (e) {\n  stackRestore(sp);\n  if (e !== e + 0) throw e;\n  _setThrew(1, 0);\n }\n}\n\nfunction invoke_viji(index, a1, a2, a3) {\n var sp = stackSave();\n try {\n  getWasmTableEntry(index)(a1, a2, a3);\n } catch (e) {\n  stackRestore(sp);\n  if (e !== e + 0) throw e;\n  _setThrew(1, 0);\n }\n}\n\nfunction invoke_iiiifi(index, a1, a2, a3, a4, a5) {\n var sp = stackSave();\n try {\n  return getWasmTableEntry(index)(a1, a2, a3, a4, a5);\n } catch (e) {\n  stackRestore(sp);\n  if (e !== e + 0) throw e;\n  _setThrew(1, 0);\n }\n}\n\nfunction invoke_iiijii(index, a1, a2, a3, a4, a5) {\n var sp = stackSave();\n try {\n  return getWasmTableEntry(index)(a1, a2, a3, a4, a5);\n } catch (e) {\n  stackRestore(sp);\n  if (e !== e + 0) throw e;\n  _setThrew(1, 0);\n }\n}\n\nfunction invoke_iiiiiiiiijii(index, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11) {\n var sp = stackSave();\n try {\n  return getWasmTableEntry(index)(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11);\n } catch (e) {\n  stackRestore(sp);\n  if (e !== e + 0) throw e;\n  _setThrew(1, 0);\n }\n}\n\nfunction invoke_iiiijjii(index, a1, a2, a3, a4, a5, a6, a7) {\n var sp = stackSave();\n try {\n  return getWasmTableEntry(index)(a1, a2, a3, a4, a5, a6, a7);\n } catch (e) {\n  stackRestore(sp);\n  if (e !== e + 0) throw e;\n  _setThrew(1, 0);\n }\n}\n\nfunction invoke_iiiiiijjjii(index, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10) {\n var sp = stackSave();\n try {\n  return getWasmTableEntry(index)(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10);\n } catch (e) {\n  stackRestore(sp);\n  if (e !== e + 0) throw e;\n  _setThrew(1, 0);\n }\n}\n\nfunction invoke_iiijiii(index, a1, a2, a3, a4, a5, a6) {\n var sp = stackSave();\n try {\n  return getWasmTableEntry(index)(a1, a2, a3, a4, a5, a6);\n } catch (e) {\n  stackRestore(sp);\n  if (e !== e + 0) throw e;\n  _setThrew(1, 0);\n }\n}\n\nfunction invoke_iiiiiiiijjjfi(index, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12) {\n var sp = stackSave();\n try {\n  return getWasmTableEntry(index)(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12);\n } catch (e) {\n  stackRestore(sp);\n  if (e !== e + 0) throw e;\n  _setThrew(1, 0);\n }\n}\n\nfunction invoke_iijiiii(index, a1, a2, a3, a4, a5, a6) {\n var sp = stackSave();\n try {\n  return getWasmTableEntry(index)(a1, a2, a3, a4, a5, a6);\n } catch (e) {\n  stackRestore(sp);\n  if (e !== e + 0) throw e;\n  _setThrew(1, 0);\n }\n}\n\nfunction invoke_iijjjii(index, a1, a2, a3, a4, a5, a6) {\n var sp = stackSave();\n try {\n  return getWasmTableEntry(index)(a1, a2, a3, a4, a5, a6);\n } catch (e) {\n  stackRestore(sp);\n  if (e !== e + 0) throw e;\n  _setThrew(1, 0);\n }\n}\n\nfunction invoke_iiji(index, a1, a2, a3) {\n var sp = stackSave();\n try {\n  return getWasmTableEntry(index)(a1, a2, a3);\n } catch (e) {\n  stackRestore(sp);\n  if (e !== e + 0) throw e;\n  _setThrew(1, 0);\n }\n}\n\nfunction invoke_viiijiiii(index, a1, a2, a3, a4, a5, a6, a7, a8) {\n var sp = stackSave();\n try {\n  getWasmTableEntry(index)(a1, a2, a3, a4, a5, a6, a7, a8);\n } catch (e) {\n  stackRestore(sp);\n  if (e !== e + 0) throw e;\n  _setThrew(1, 0);\n }\n}\n\nfunction invoke_viiij(index, a1, a2, a3, a4) {\n var sp = stackSave();\n try {\n  getWasmTableEntry(index)(a1, a2, a3, a4);\n } catch (e) {\n  stackRestore(sp);\n  if (e !== e + 0) throw e;\n  _setThrew(1, 0);\n }\n}\n\nfunction invoke_viijiiiiiiiii(index, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12) {\n var sp = stackSave();\n try {\n  getWasmTableEntry(index)(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12);\n } catch (e) {\n  stackRestore(sp);\n  if (e !== e + 0) throw e;\n  _setThrew(1, 0);\n }\n}\n\nfunction invoke_iid(index, a1, a2) {\n var sp = stackSave();\n try {\n  return getWasmTableEntry(index)(a1, a2);\n } catch (e) {\n  stackRestore(sp);\n  if (e !== e + 0) throw e;\n  _setThrew(1, 0);\n }\n}\n\nfunction invoke_iiif(index, a1, a2, a3) {\n var sp = stackSave();\n try {\n  return getWasmTableEntry(index)(a1, a2, a3);\n } catch (e) {\n  stackRestore(sp);\n  if (e !== e + 0) throw e;\n  _setThrew(1, 0);\n }\n}\n\nfunction invoke_vidi(index, a1, a2, a3) {\n var sp = stackSave();\n try {\n  getWasmTableEntry(index)(a1, a2, a3);\n } catch (e) {\n  stackRestore(sp);\n  if (e !== e + 0) throw e;\n  _setThrew(1, 0);\n }\n}\n\nfunction invoke_fiii(index, a1, a2, a3) {\n var sp = stackSave();\n try {\n  return getWasmTableEntry(index)(a1, a2, a3);\n } catch (e) {\n  stackRestore(sp);\n  if (e !== e + 0) throw e;\n  _setThrew(1, 0);\n }\n}\n\nfunction invoke_vjiii(index, a1, a2, a3, a4) {\n var sp = stackSave();\n try {\n  getWasmTableEntry(index)(a1, a2, a3, a4);\n } catch (e) {\n  stackRestore(sp);\n  if (e !== e + 0) throw e;\n  _setThrew(1, 0);\n }\n}\n\nfunction invoke_diiiii(index, a1, a2, a3, a4, a5) {\n var sp = stackSave();\n try {\n  return getWasmTableEntry(index)(a1, a2, a3, a4, a5);\n } catch (e) {\n  stackRestore(sp);\n  if (e !== e + 0) throw e;\n  _setThrew(1, 0);\n }\n}\n\nfunction invoke_diii(index, a1, a2, a3) {\n var sp = stackSave();\n try {\n  return getWasmTableEntry(index)(a1, a2, a3);\n } catch (e) {\n  stackRestore(sp);\n  if (e !== e + 0) throw e;\n  _setThrew(1, 0);\n }\n}\n\nfunction invoke_vijjjjijjiii(index, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11) {\n var sp = stackSave();\n try {\n  getWasmTableEntry(index)(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11);\n } catch (e) {\n  stackRestore(sp);\n  if (e !== e + 0) throw e;\n  _setThrew(1, 0);\n }\n}\n\nfunction invoke_viijjiiiii(index, a1, a2, a3, a4, a5, a6, a7, a8, a9) {\n var sp = stackSave();\n try {\n  getWasmTableEntry(index)(a1, a2, a3, a4, a5, a6, a7, a8, a9);\n } catch (e) {\n  stackRestore(sp);\n  if (e !== e + 0) throw e;\n  _setThrew(1, 0);\n }\n}\n\nfunction invoke_j(index) {\n var sp = stackSave();\n try {\n  return getWasmTableEntry(index)();\n } catch (e) {\n  stackRestore(sp);\n  if (e !== e + 0) throw e;\n  _setThrew(1, 0);\n  return 0n;\n }\n}\n\nfunction invoke_iiiiid(index, a1, a2, a3, a4, a5) {\n var sp = stackSave();\n try {\n  return getWasmTableEntry(index)(a1, a2, a3, a4, a5);\n } catch (e) {\n  stackRestore(sp);\n  if (e !== e + 0) throw e;\n  _setThrew(1, 0);\n }\n}\n\nfunction invoke_viiiiiiiiiiiiiii(index, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15) {\n var sp = stackSave();\n try {\n  getWasmTableEntry(index)(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15);\n } catch (e) {\n  stackRestore(sp);\n  if (e !== e + 0) throw e;\n  _setThrew(1, 0);\n }\n}\n\nfunction invoke_fii(index, a1, a2) {\n var sp = stackSave();\n try {\n  return getWasmTableEntry(index)(a1, a2);\n } catch (e) {\n  stackRestore(sp);\n  if (e !== e + 0) throw e;\n  _setThrew(1, 0);\n }\n}\n\nfunction invoke_dii(index, a1, a2) {\n var sp = stackSave();\n try {\n  return getWasmTableEntry(index)(a1, a2);\n } catch (e) {\n  stackRestore(sp);\n  if (e !== e + 0) throw e;\n  _setThrew(1, 0);\n }\n}\n\nModule[\"stackAlloc\"] = stackAlloc;\n\nModule[\"stackSave\"] = stackSave;\n\nModule[\"stackRestore\"] = stackRestore;\n\nModule[\"UTF8ToString\"] = UTF8ToString;\n\nModule[\"stringToUTF8\"] = stringToUTF8;\n\nModule[\"lengthBytesUTF8\"] = lengthBytesUTF8;\n\nvar calledRun;\n\ndependenciesFulfilled = function runCaller() {\n if (!calledRun) run();\n if (!calledRun) dependenciesFulfilled = runCaller;\n};\n\nfunction run() {\n if (runDependencies > 0) {\n  return;\n }\n preRun();\n if (runDependencies > 0) {\n  return;\n }\n function doRun() {\n  if (calledRun) return;\n  calledRun = true;\n  Module[\"calledRun\"] = true;\n  if (ABORT) return;\n  initRuntime();\n  readyPromiseResolve(Module);\n  if (Module[\"onRuntimeInitialized\"]) Module[\"onRuntimeInitialized\"]();\n  postRun();\n }\n if (Module[\"setStatus\"]) {\n  Module[\"setStatus\"](\"Running...\");\n  setTimeout(function() {\n   setTimeout(function() {\n    Module[\"setStatus\"](\"\");\n   }, 1);\n   doRun();\n  }, 1);\n } else {\n  doRun();\n }\n}\n\nif (Module[\"preInit\"]) {\n if (typeof Module[\"preInit\"] == \"function\") Module[\"preInit\"] = [ Module[\"preInit\"] ];\n while (Module[\"preInit\"].length > 0) {\n  Module[\"preInit\"].pop()();\n }\n}\n\nrun();\n\n\n  return ortWasm.ready\n}\n\n);\n})();\nif (typeof exports === 'object' && typeof module === 'object')\n  module.exports = ortWasm;\nelse if (typeof define === 'function' && define['amd'])\n  define([], function() { return ortWasm; });\nelse if (typeof exports === 'object')\n  exports[\"ortWasm\"] = ortWasm;\n","\"use strict\";\r\nmodule.exports = asPromise;\r\n\r\n/**\r\n * Callback as used by {@link util.asPromise}.\r\n * @typedef asPromiseCallback\r\n * @type {function}\r\n * @param {Error|null} error Error, if any\r\n * @param {...*} params Additional arguments\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Returns a promise from a node-style callback function.\r\n * @memberof util\r\n * @param {asPromiseCallback} fn Function to call\r\n * @param {*} ctx Function context\r\n * @param {...*} params Function arguments\r\n * @returns {Promise<*>} Promisified function\r\n */\r\nfunction asPromise(fn, ctx/*, varargs */) {\r\n    var params  = new Array(arguments.length - 1),\r\n        offset  = 0,\r\n        index   = 2,\r\n        pending = true;\r\n    while (index < arguments.length)\r\n        params[offset++] = arguments[index++];\r\n    return new Promise(function executor(resolve, reject) {\r\n        params[offset] = function callback(err/*, varargs */) {\r\n            if (pending) {\r\n                pending = false;\r\n                if (err)\r\n                    reject(err);\r\n                else {\r\n                    var params = new Array(arguments.length - 1),\r\n                        offset = 0;\r\n                    while (offset < params.length)\r\n                        params[offset++] = arguments[offset];\r\n                    resolve.apply(null, params);\r\n                }\r\n            }\r\n        };\r\n        try {\r\n            fn.apply(ctx || null, params);\r\n        } catch (err) {\r\n            if (pending) {\r\n                pending = false;\r\n                reject(err);\r\n            }\r\n        }\r\n    });\r\n}\r\n","\"use strict\";\r\n\r\n/**\r\n * A minimal base64 implementation for number arrays.\r\n * @memberof util\r\n * @namespace\r\n */\r\nvar base64 = exports;\r\n\r\n/**\r\n * Calculates the byte length of a base64 encoded string.\r\n * @param {string} string Base64 encoded string\r\n * @returns {number} Byte length\r\n */\r\nbase64.length = function length(string) {\r\n    var p = string.length;\r\n    if (!p)\r\n        return 0;\r\n    var n = 0;\r\n    while (--p % 4 > 1 && string.charAt(p) === \"=\")\r\n        ++n;\r\n    return Math.ceil(string.length * 3) / 4 - n;\r\n};\r\n\r\n// Base64 encoding table\r\nvar b64 = new Array(64);\r\n\r\n// Base64 decoding table\r\nvar s64 = new Array(123);\r\n\r\n// 65..90, 97..122, 48..57, 43, 47\r\nfor (var i = 0; i < 64;)\r\n    s64[b64[i] = i < 26 ? i + 65 : i < 52 ? i + 71 : i < 62 ? i - 4 : i - 59 | 43] = i++;\r\n\r\n/**\r\n * Encodes a buffer to a base64 encoded string.\r\n * @param {Uint8Array} buffer Source buffer\r\n * @param {number} start Source start\r\n * @param {number} end Source end\r\n * @returns {string} Base64 encoded string\r\n */\r\nbase64.encode = function encode(buffer, start, end) {\r\n    var parts = null,\r\n        chunk = [];\r\n    var i = 0, // output index\r\n        j = 0, // goto index\r\n        t;     // temporary\r\n    while (start < end) {\r\n        var b = buffer[start++];\r\n        switch (j) {\r\n            case 0:\r\n                chunk[i++] = b64[b >> 2];\r\n                t = (b & 3) << 4;\r\n                j = 1;\r\n                break;\r\n            case 1:\r\n                chunk[i++] = b64[t | b >> 4];\r\n                t = (b & 15) << 2;\r\n                j = 2;\r\n                break;\r\n            case 2:\r\n                chunk[i++] = b64[t | b >> 6];\r\n                chunk[i++] = b64[b & 63];\r\n                j = 0;\r\n                break;\r\n        }\r\n        if (i > 8191) {\r\n            (parts || (parts = [])).push(String.fromCharCode.apply(String, chunk));\r\n            i = 0;\r\n        }\r\n    }\r\n    if (j) {\r\n        chunk[i++] = b64[t];\r\n        chunk[i++] = 61;\r\n        if (j === 1)\r\n            chunk[i++] = 61;\r\n    }\r\n    if (parts) {\r\n        if (i)\r\n            parts.push(String.fromCharCode.apply(String, chunk.slice(0, i)));\r\n        return parts.join(\"\");\r\n    }\r\n    return String.fromCharCode.apply(String, chunk.slice(0, i));\r\n};\r\n\r\nvar invalidEncoding = \"invalid encoding\";\r\n\r\n/**\r\n * Decodes a base64 encoded string to a buffer.\r\n * @param {string} string Source string\r\n * @param {Uint8Array} buffer Destination buffer\r\n * @param {number} offset Destination offset\r\n * @returns {number} Number of bytes written\r\n * @throws {Error} If encoding is invalid\r\n */\r\nbase64.decode = function decode(string, buffer, offset) {\r\n    var start = offset;\r\n    var j = 0, // goto index\r\n        t;     // temporary\r\n    for (var i = 0; i < string.length;) {\r\n        var c = string.charCodeAt(i++);\r\n        if (c === 61 && j > 1)\r\n            break;\r\n        if ((c = s64[c]) === undefined)\r\n            throw Error(invalidEncoding);\r\n        switch (j) {\r\n            case 0:\r\n                t = c;\r\n                j = 1;\r\n                break;\r\n            case 1:\r\n                buffer[offset++] = t << 2 | (c & 48) >> 4;\r\n                t = c;\r\n                j = 2;\r\n                break;\r\n            case 2:\r\n                buffer[offset++] = (t & 15) << 4 | (c & 60) >> 2;\r\n                t = c;\r\n                j = 3;\r\n                break;\r\n            case 3:\r\n                buffer[offset++] = (t & 3) << 6 | c;\r\n                j = 0;\r\n                break;\r\n        }\r\n    }\r\n    if (j === 1)\r\n        throw Error(invalidEncoding);\r\n    return offset - start;\r\n};\r\n\r\n/**\r\n * Tests if the specified string appears to be base64 encoded.\r\n * @param {string} string String to test\r\n * @returns {boolean} `true` if probably base64 encoded, otherwise false\r\n */\r\nbase64.test = function test(string) {\r\n    return /^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$/.test(string);\r\n};\r\n","\"use strict\";\r\nmodule.exports = EventEmitter;\r\n\r\n/**\r\n * Constructs a new event emitter instance.\r\n * @classdesc A minimal event emitter.\r\n * @memberof util\r\n * @constructor\r\n */\r\nfunction EventEmitter() {\r\n\r\n    /**\r\n     * Registered listeners.\r\n     * @type {Object.<string,*>}\r\n     * @private\r\n     */\r\n    this._listeners = {};\r\n}\r\n\r\n/**\r\n * Registers an event listener.\r\n * @param {string} evt Event name\r\n * @param {function} fn Listener\r\n * @param {*} [ctx] Listener context\r\n * @returns {util.EventEmitter} `this`\r\n */\r\nEventEmitter.prototype.on = function on(evt, fn, ctx) {\r\n    (this._listeners[evt] || (this._listeners[evt] = [])).push({\r\n        fn  : fn,\r\n        ctx : ctx || this\r\n    });\r\n    return this;\r\n};\r\n\r\n/**\r\n * Removes an event listener or any matching listeners if arguments are omitted.\r\n * @param {string} [evt] Event name. Removes all listeners if omitted.\r\n * @param {function} [fn] Listener to remove. Removes all listeners of `evt` if omitted.\r\n * @returns {util.EventEmitter} `this`\r\n */\r\nEventEmitter.prototype.off = function off(evt, fn) {\r\n    if (evt === undefined)\r\n        this._listeners = {};\r\n    else {\r\n        if (fn === undefined)\r\n            this._listeners[evt] = [];\r\n        else {\r\n            var listeners = this._listeners[evt];\r\n            for (var i = 0; i < listeners.length;)\r\n                if (listeners[i].fn === fn)\r\n                    listeners.splice(i, 1);\r\n                else\r\n                    ++i;\r\n        }\r\n    }\r\n    return this;\r\n};\r\n\r\n/**\r\n * Emits an event by calling its listeners with the specified arguments.\r\n * @param {string} evt Event name\r\n * @param {...*} args Arguments\r\n * @returns {util.EventEmitter} `this`\r\n */\r\nEventEmitter.prototype.emit = function emit(evt) {\r\n    var listeners = this._listeners[evt];\r\n    if (listeners) {\r\n        var args = [],\r\n            i = 1;\r\n        for (; i < arguments.length;)\r\n            args.push(arguments[i++]);\r\n        for (i = 0; i < listeners.length;)\r\n            listeners[i].fn.apply(listeners[i++].ctx, args);\r\n    }\r\n    return this;\r\n};\r\n","\"use strict\";\r\n\r\nmodule.exports = factory(factory);\r\n\r\n/**\r\n * Reads / writes floats / doubles from / to buffers.\r\n * @name util.float\r\n * @namespace\r\n */\r\n\r\n/**\r\n * Writes a 32 bit float to a buffer using little endian byte order.\r\n * @name util.float.writeFloatLE\r\n * @function\r\n * @param {number} val Value to write\r\n * @param {Uint8Array} buf Target buffer\r\n * @param {number} pos Target buffer offset\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Writes a 32 bit float to a buffer using big endian byte order.\r\n * @name util.float.writeFloatBE\r\n * @function\r\n * @param {number} val Value to write\r\n * @param {Uint8Array} buf Target buffer\r\n * @param {number} pos Target buffer offset\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Reads a 32 bit float from a buffer using little endian byte order.\r\n * @name util.float.readFloatLE\r\n * @function\r\n * @param {Uint8Array} buf Source buffer\r\n * @param {number} pos Source buffer offset\r\n * @returns {number} Value read\r\n */\r\n\r\n/**\r\n * Reads a 32 bit float from a buffer using big endian byte order.\r\n * @name util.float.readFloatBE\r\n * @function\r\n * @param {Uint8Array} buf Source buffer\r\n * @param {number} pos Source buffer offset\r\n * @returns {number} Value read\r\n */\r\n\r\n/**\r\n * Writes a 64 bit double to a buffer using little endian byte order.\r\n * @name util.float.writeDoubleLE\r\n * @function\r\n * @param {number} val Value to write\r\n * @param {Uint8Array} buf Target buffer\r\n * @param {number} pos Target buffer offset\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Writes a 64 bit double to a buffer using big endian byte order.\r\n * @name util.float.writeDoubleBE\r\n * @function\r\n * @param {number} val Value to write\r\n * @param {Uint8Array} buf Target buffer\r\n * @param {number} pos Target buffer offset\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Reads a 64 bit double from a buffer using little endian byte order.\r\n * @name util.float.readDoubleLE\r\n * @function\r\n * @param {Uint8Array} buf Source buffer\r\n * @param {number} pos Source buffer offset\r\n * @returns {number} Value read\r\n */\r\n\r\n/**\r\n * Reads a 64 bit double from a buffer using big endian byte order.\r\n * @name util.float.readDoubleBE\r\n * @function\r\n * @param {Uint8Array} buf Source buffer\r\n * @param {number} pos Source buffer offset\r\n * @returns {number} Value read\r\n */\r\n\r\n// Factory function for the purpose of node-based testing in modified global environments\r\nfunction factory(exports) {\r\n\r\n    // float: typed array\r\n    if (typeof Float32Array !== \"undefined\") (function() {\r\n\r\n        var f32 = new Float32Array([ -0 ]),\r\n            f8b = new Uint8Array(f32.buffer),\r\n            le  = f8b[3] === 128;\r\n\r\n        function writeFloat_f32_cpy(val, buf, pos) {\r\n            f32[0] = val;\r\n            buf[pos    ] = f8b[0];\r\n            buf[pos + 1] = f8b[1];\r\n            buf[pos + 2] = f8b[2];\r\n            buf[pos + 3] = f8b[3];\r\n        }\r\n\r\n        function writeFloat_f32_rev(val, buf, pos) {\r\n            f32[0] = val;\r\n            buf[pos    ] = f8b[3];\r\n            buf[pos + 1] = f8b[2];\r\n            buf[pos + 2] = f8b[1];\r\n            buf[pos + 3] = f8b[0];\r\n        }\r\n\r\n        /* istanbul ignore next */\r\n        exports.writeFloatLE = le ? writeFloat_f32_cpy : writeFloat_f32_rev;\r\n        /* istanbul ignore next */\r\n        exports.writeFloatBE = le ? writeFloat_f32_rev : writeFloat_f32_cpy;\r\n\r\n        function readFloat_f32_cpy(buf, pos) {\r\n            f8b[0] = buf[pos    ];\r\n            f8b[1] = buf[pos + 1];\r\n            f8b[2] = buf[pos + 2];\r\n            f8b[3] = buf[pos + 3];\r\n            return f32[0];\r\n        }\r\n\r\n        function readFloat_f32_rev(buf, pos) {\r\n            f8b[3] = buf[pos    ];\r\n            f8b[2] = buf[pos + 1];\r\n            f8b[1] = buf[pos + 2];\r\n            f8b[0] = buf[pos + 3];\r\n            return f32[0];\r\n        }\r\n\r\n        /* istanbul ignore next */\r\n        exports.readFloatLE = le ? readFloat_f32_cpy : readFloat_f32_rev;\r\n        /* istanbul ignore next */\r\n        exports.readFloatBE = le ? readFloat_f32_rev : readFloat_f32_cpy;\r\n\r\n    // float: ieee754\r\n    })(); else (function() {\r\n\r\n        function writeFloat_ieee754(writeUint, val, buf, pos) {\r\n            var sign = val < 0 ? 1 : 0;\r\n            if (sign)\r\n                val = -val;\r\n            if (val === 0)\r\n                writeUint(1 / val > 0 ? /* positive */ 0 : /* negative 0 */ 2147483648, buf, pos);\r\n            else if (isNaN(val))\r\n                writeUint(2143289344, buf, pos);\r\n            else if (val > 3.4028234663852886e+38) // +-Infinity\r\n                writeUint((sign << 31 | 2139095040) >>> 0, buf, pos);\r\n            else if (val < 1.1754943508222875e-38) // denormal\r\n                writeUint((sign << 31 | Math.round(val / 1.401298464324817e-45)) >>> 0, buf, pos);\r\n            else {\r\n                var exponent = Math.floor(Math.log(val) / Math.LN2),\r\n                    mantissa = Math.round(val * Math.pow(2, -exponent) * 8388608) & 8388607;\r\n                writeUint((sign << 31 | exponent + 127 << 23 | mantissa) >>> 0, buf, pos);\r\n            }\r\n        }\r\n\r\n        exports.writeFloatLE = writeFloat_ieee754.bind(null, writeUintLE);\r\n        exports.writeFloatBE = writeFloat_ieee754.bind(null, writeUintBE);\r\n\r\n        function readFloat_ieee754(readUint, buf, pos) {\r\n            var uint = readUint(buf, pos),\r\n                sign = (uint >> 31) * 2 + 1,\r\n                exponent = uint >>> 23 & 255,\r\n                mantissa = uint & 8388607;\r\n            return exponent === 255\r\n                ? mantissa\r\n                ? NaN\r\n                : sign * Infinity\r\n                : exponent === 0 // denormal\r\n                ? sign * 1.401298464324817e-45 * mantissa\r\n                : sign * Math.pow(2, exponent - 150) * (mantissa + 8388608);\r\n        }\r\n\r\n        exports.readFloatLE = readFloat_ieee754.bind(null, readUintLE);\r\n        exports.readFloatBE = readFloat_ieee754.bind(null, readUintBE);\r\n\r\n    })();\r\n\r\n    // double: typed array\r\n    if (typeof Float64Array !== \"undefined\") (function() {\r\n\r\n        var f64 = new Float64Array([-0]),\r\n            f8b = new Uint8Array(f64.buffer),\r\n            le  = f8b[7] === 128;\r\n\r\n        function writeDouble_f64_cpy(val, buf, pos) {\r\n            f64[0] = val;\r\n            buf[pos    ] = f8b[0];\r\n            buf[pos + 1] = f8b[1];\r\n            buf[pos + 2] = f8b[2];\r\n            buf[pos + 3] = f8b[3];\r\n            buf[pos + 4] = f8b[4];\r\n            buf[pos + 5] = f8b[5];\r\n            buf[pos + 6] = f8b[6];\r\n            buf[pos + 7] = f8b[7];\r\n        }\r\n\r\n        function writeDouble_f64_rev(val, buf, pos) {\r\n            f64[0] = val;\r\n            buf[pos    ] = f8b[7];\r\n            buf[pos + 1] = f8b[6];\r\n            buf[pos + 2] = f8b[5];\r\n            buf[pos + 3] = f8b[4];\r\n            buf[pos + 4] = f8b[3];\r\n            buf[pos + 5] = f8b[2];\r\n            buf[pos + 6] = f8b[1];\r\n            buf[pos + 7] = f8b[0];\r\n        }\r\n\r\n        /* istanbul ignore next */\r\n        exports.writeDoubleLE = le ? writeDouble_f64_cpy : writeDouble_f64_rev;\r\n        /* istanbul ignore next */\r\n        exports.writeDoubleBE = le ? writeDouble_f64_rev : writeDouble_f64_cpy;\r\n\r\n        function readDouble_f64_cpy(buf, pos) {\r\n            f8b[0] = buf[pos    ];\r\n            f8b[1] = buf[pos + 1];\r\n            f8b[2] = buf[pos + 2];\r\n            f8b[3] = buf[pos + 3];\r\n            f8b[4] = buf[pos + 4];\r\n            f8b[5] = buf[pos + 5];\r\n            f8b[6] = buf[pos + 6];\r\n            f8b[7] = buf[pos + 7];\r\n            return f64[0];\r\n        }\r\n\r\n        function readDouble_f64_rev(buf, pos) {\r\n            f8b[7] = buf[pos    ];\r\n            f8b[6] = buf[pos + 1];\r\n            f8b[5] = buf[pos + 2];\r\n            f8b[4] = buf[pos + 3];\r\n            f8b[3] = buf[pos + 4];\r\n            f8b[2] = buf[pos + 5];\r\n            f8b[1] = buf[pos + 6];\r\n            f8b[0] = buf[pos + 7];\r\n            return f64[0];\r\n        }\r\n\r\n        /* istanbul ignore next */\r\n        exports.readDoubleLE = le ? readDouble_f64_cpy : readDouble_f64_rev;\r\n        /* istanbul ignore next */\r\n        exports.readDoubleBE = le ? readDouble_f64_rev : readDouble_f64_cpy;\r\n\r\n    // double: ieee754\r\n    })(); else (function() {\r\n\r\n        function writeDouble_ieee754(writeUint, off0, off1, val, buf, pos) {\r\n            var sign = val < 0 ? 1 : 0;\r\n            if (sign)\r\n                val = -val;\r\n            if (val === 0) {\r\n                writeUint(0, buf, pos + off0);\r\n                writeUint(1 / val > 0 ? /* positive */ 0 : /* negative 0 */ 2147483648, buf, pos + off1);\r\n            } else if (isNaN(val)) {\r\n                writeUint(0, buf, pos + off0);\r\n                writeUint(2146959360, buf, pos + off1);\r\n            } else if (val > 1.7976931348623157e+308) { // +-Infinity\r\n                writeUint(0, buf, pos + off0);\r\n                writeUint((sign << 31 | 2146435072) >>> 0, buf, pos + off1);\r\n            } else {\r\n                var mantissa;\r\n                if (val < 2.2250738585072014e-308) { // denormal\r\n                    mantissa = val / 5e-324;\r\n                    writeUint(mantissa >>> 0, buf, pos + off0);\r\n                    writeUint((sign << 31 | mantissa / 4294967296) >>> 0, buf, pos + off1);\r\n                } else {\r\n                    var exponent = Math.floor(Math.log(val) / Math.LN2);\r\n                    if (exponent === 1024)\r\n                        exponent = 1023;\r\n                    mantissa = val * Math.pow(2, -exponent);\r\n                    writeUint(mantissa * 4503599627370496 >>> 0, buf, pos + off0);\r\n                    writeUint((sign << 31 | exponent + 1023 << 20 | mantissa * 1048576 & 1048575) >>> 0, buf, pos + off1);\r\n                }\r\n            }\r\n        }\r\n\r\n        exports.writeDoubleLE = writeDouble_ieee754.bind(null, writeUintLE, 0, 4);\r\n        exports.writeDoubleBE = writeDouble_ieee754.bind(null, writeUintBE, 4, 0);\r\n\r\n        function readDouble_ieee754(readUint, off0, off1, buf, pos) {\r\n            var lo = readUint(buf, pos + off0),\r\n                hi = readUint(buf, pos + off1);\r\n            var sign = (hi >> 31) * 2 + 1,\r\n                exponent = hi >>> 20 & 2047,\r\n                mantissa = 4294967296 * (hi & 1048575) + lo;\r\n            return exponent === 2047\r\n                ? mantissa\r\n                ? NaN\r\n                : sign * Infinity\r\n                : exponent === 0 // denormal\r\n                ? sign * 5e-324 * mantissa\r\n                : sign * Math.pow(2, exponent - 1075) * (mantissa + 4503599627370496);\r\n        }\r\n\r\n        exports.readDoubleLE = readDouble_ieee754.bind(null, readUintLE, 0, 4);\r\n        exports.readDoubleBE = readDouble_ieee754.bind(null, readUintBE, 4, 0);\r\n\r\n    })();\r\n\r\n    return exports;\r\n}\r\n\r\n// uint helpers\r\n\r\nfunction writeUintLE(val, buf, pos) {\r\n    buf[pos    ] =  val        & 255;\r\n    buf[pos + 1] =  val >>> 8  & 255;\r\n    buf[pos + 2] =  val >>> 16 & 255;\r\n    buf[pos + 3] =  val >>> 24;\r\n}\r\n\r\nfunction writeUintBE(val, buf, pos) {\r\n    buf[pos    ] =  val >>> 24;\r\n    buf[pos + 1] =  val >>> 16 & 255;\r\n    buf[pos + 2] =  val >>> 8  & 255;\r\n    buf[pos + 3] =  val        & 255;\r\n}\r\n\r\nfunction readUintLE(buf, pos) {\r\n    return (buf[pos    ]\r\n          | buf[pos + 1] << 8\r\n          | buf[pos + 2] << 16\r\n          | buf[pos + 3] << 24) >>> 0;\r\n}\r\n\r\nfunction readUintBE(buf, pos) {\r\n    return (buf[pos    ] << 24\r\n          | buf[pos + 1] << 16\r\n          | buf[pos + 2] << 8\r\n          | buf[pos + 3]) >>> 0;\r\n}\r\n","\"use strict\";\r\nmodule.exports = inquire;\r\n\r\n/**\r\n * Requires a module only if available.\r\n * @memberof util\r\n * @param {string} moduleName Module to require\r\n * @returns {?Object} Required module if available and not empty, otherwise `null`\r\n */\r\nfunction inquire(moduleName) {\r\n    try {\r\n        var mod = eval(\"quire\".replace(/^/,\"re\"))(moduleName); // eslint-disable-line no-eval\r\n        if (mod && (mod.length || Object.keys(mod).length))\r\n            return mod;\r\n    } catch (e) {} // eslint-disable-line no-empty\r\n    return null;\r\n}\r\n","\"use strict\";\r\nmodule.exports = pool;\r\n\r\n/**\r\n * An allocator as used by {@link util.pool}.\r\n * @typedef PoolAllocator\r\n * @type {function}\r\n * @param {number} size Buffer size\r\n * @returns {Uint8Array} Buffer\r\n */\r\n\r\n/**\r\n * A slicer as used by {@link util.pool}.\r\n * @typedef PoolSlicer\r\n * @type {function}\r\n * @param {number} start Start offset\r\n * @param {number} end End offset\r\n * @returns {Uint8Array} Buffer slice\r\n * @this {Uint8Array}\r\n */\r\n\r\n/**\r\n * A general purpose buffer pool.\r\n * @memberof util\r\n * @function\r\n * @param {PoolAllocator} alloc Allocator\r\n * @param {PoolSlicer} slice Slicer\r\n * @param {number} [size=8192] Slab size\r\n * @returns {PoolAllocator} Pooled allocator\r\n */\r\nfunction pool(alloc, slice, size) {\r\n    var SIZE   = size || 8192;\r\n    var MAX    = SIZE >>> 1;\r\n    var slab   = null;\r\n    var offset = SIZE;\r\n    return function pool_alloc(size) {\r\n        if (size < 1 || size > MAX)\r\n            return alloc(size);\r\n        if (offset + size > SIZE) {\r\n            slab = alloc(SIZE);\r\n            offset = 0;\r\n        }\r\n        var buf = slice.call(slab, offset, offset += size);\r\n        if (offset & 7) // align to 32 bit\r\n            offset = (offset | 7) + 1;\r\n        return buf;\r\n    };\r\n}\r\n","\"use strict\";\r\n\r\n/**\r\n * A minimal UTF8 implementation for number arrays.\r\n * @memberof util\r\n * @namespace\r\n */\r\nvar utf8 = exports;\r\n\r\n/**\r\n * Calculates the UTF8 byte length of a string.\r\n * @param {string} string String\r\n * @returns {number} Byte length\r\n */\r\nutf8.length = function utf8_length(string) {\r\n    var len = 0,\r\n        c = 0;\r\n    for (var i = 0; i < string.length; ++i) {\r\n        c = string.charCodeAt(i);\r\n        if (c < 128)\r\n            len += 1;\r\n        else if (c < 2048)\r\n            len += 2;\r\n        else if ((c & 0xFC00) === 0xD800 && (string.charCodeAt(i + 1) & 0xFC00) === 0xDC00) {\r\n            ++i;\r\n            len += 4;\r\n        } else\r\n            len += 3;\r\n    }\r\n    return len;\r\n};\r\n\r\n/**\r\n * Reads UTF8 bytes as a string.\r\n * @param {Uint8Array} buffer Source buffer\r\n * @param {number} start Source start\r\n * @param {number} end Source end\r\n * @returns {string} String read\r\n */\r\nutf8.read = function utf8_read(buffer, start, end) {\r\n    var len = end - start;\r\n    if (len < 1)\r\n        return \"\";\r\n    var parts = null,\r\n        chunk = [],\r\n        i = 0, // char offset\r\n        t;     // temporary\r\n    while (start < end) {\r\n        t = buffer[start++];\r\n        if (t < 128)\r\n            chunk[i++] = t;\r\n        else if (t > 191 && t < 224)\r\n            chunk[i++] = (t & 31) << 6 | buffer[start++] & 63;\r\n        else if (t > 239 && t < 365) {\r\n            t = ((t & 7) << 18 | (buffer[start++] & 63) << 12 | (buffer[start++] & 63) << 6 | buffer[start++] & 63) - 0x10000;\r\n            chunk[i++] = 0xD800 + (t >> 10);\r\n            chunk[i++] = 0xDC00 + (t & 1023);\r\n        } else\r\n            chunk[i++] = (t & 15) << 12 | (buffer[start++] & 63) << 6 | buffer[start++] & 63;\r\n        if (i > 8191) {\r\n            (parts || (parts = [])).push(String.fromCharCode.apply(String, chunk));\r\n            i = 0;\r\n        }\r\n    }\r\n    if (parts) {\r\n        if (i)\r\n            parts.push(String.fromCharCode.apply(String, chunk.slice(0, i)));\r\n        return parts.join(\"\");\r\n    }\r\n    return String.fromCharCode.apply(String, chunk.slice(0, i));\r\n};\r\n\r\n/**\r\n * Writes a string as UTF8 bytes.\r\n * @param {string} string Source string\r\n * @param {Uint8Array} buffer Destination buffer\r\n * @param {number} offset Destination offset\r\n * @returns {number} Bytes written\r\n */\r\nutf8.write = function utf8_write(string, buffer, offset) {\r\n    var start = offset,\r\n        c1, // character 1\r\n        c2; // character 2\r\n    for (var i = 0; i < string.length; ++i) {\r\n        c1 = string.charCodeAt(i);\r\n        if (c1 < 128) {\r\n            buffer[offset++] = c1;\r\n        } else if (c1 < 2048) {\r\n            buffer[offset++] = c1 >> 6       | 192;\r\n            buffer[offset++] = c1       & 63 | 128;\r\n        } else if ((c1 & 0xFC00) === 0xD800 && ((c2 = string.charCodeAt(i + 1)) & 0xFC00) === 0xDC00) {\r\n            c1 = 0x10000 + ((c1 & 0x03FF) << 10) + (c2 & 0x03FF);\r\n            ++i;\r\n            buffer[offset++] = c1 >> 18      | 240;\r\n            buffer[offset++] = c1 >> 12 & 63 | 128;\r\n            buffer[offset++] = c1 >> 6  & 63 | 128;\r\n            buffer[offset++] = c1       & 63 | 128;\r\n        } else {\r\n            buffer[offset++] = c1 >> 12      | 224;\r\n            buffer[offset++] = c1 >> 6  & 63 | 128;\r\n            buffer[offset++] = c1       & 63 | 128;\r\n        }\r\n    }\r\n    return offset - start;\r\n};\r\n","\"use strict\";\r\nexports.__esModule = true;\r\nvar Guid = /** @class */ (function () {\r\n    function Guid(guid) {\r\n        if (!guid) {\r\n            throw new TypeError(\"Invalid argument; `value` has no value.\");\r\n        }\r\n        this.value = Guid.EMPTY;\r\n        if (guid && Guid.isGuid(guid)) {\r\n            this.value = guid;\r\n        }\r\n    }\r\n    Guid.isGuid = function (guid) {\r\n        var value = guid.toString();\r\n        return guid && (guid instanceof Guid || Guid.validator.test(value));\r\n    };\r\n    Guid.create = function () {\r\n        return new Guid([Guid.gen(2), Guid.gen(1), Guid.gen(1), Guid.gen(1), Guid.gen(3)].join(\"-\"));\r\n    };\r\n    Guid.createEmpty = function () {\r\n        return new Guid(\"emptyguid\");\r\n    };\r\n    Guid.parse = function (guid) {\r\n        return new Guid(guid);\r\n    };\r\n    Guid.raw = function () {\r\n        return [Guid.gen(2), Guid.gen(1), Guid.gen(1), Guid.gen(1), Guid.gen(3)].join(\"-\");\r\n    };\r\n    Guid.gen = function (count) {\r\n        var out = \"\";\r\n        for (var i = 0; i < count; i++) {\r\n            // tslint:disable-next-line:no-bitwise\r\n            out += (((1 + Math.random()) * 0x10000) | 0).toString(16).substring(1);\r\n        }\r\n        return out;\r\n    };\r\n    Guid.prototype.equals = function (other) {\r\n        // Comparing string `value` against provided `guid` will auto-call\r\n        // toString on `guid` for comparison\r\n        return Guid.isGuid(other) && this.value === other.toString();\r\n    };\r\n    Guid.prototype.isEmpty = function () {\r\n        return this.value === Guid.EMPTY;\r\n    };\r\n    Guid.prototype.toString = function () {\r\n        return this.value;\r\n    };\r\n    Guid.prototype.toJSON = function () {\r\n        return {\r\n            value: this.value\r\n        };\r\n    };\r\n    Guid.validator = new RegExp(\"^[a-z0-9]{8}-[a-z0-9]{4}-[a-z0-9]{4}-[a-z0-9]{4}-[a-z0-9]{12}$\", \"i\");\r\n    Guid.EMPTY = \"00000000-0000-0000-0000-000000000000\";\r\n    return Guid;\r\n}());\r\nexports.Guid = Guid;\r\n","module.exports = Long;\r\n\r\n/**\r\n * wasm optimizations, to do native i64 multiplication and divide\r\n */\r\nvar wasm = null;\r\n\r\ntry {\r\n  wasm = new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([\r\n    0, 97, 115, 109, 1, 0, 0, 0, 1, 13, 2, 96, 0, 1, 127, 96, 4, 127, 127, 127, 127, 1, 127, 3, 7, 6, 0, 1, 1, 1, 1, 1, 6, 6, 1, 127, 1, 65, 0, 11, 7, 50, 6, 3, 109, 117, 108, 0, 1, 5, 100, 105, 118, 95, 115, 0, 2, 5, 100, 105, 118, 95, 117, 0, 3, 5, 114, 101, 109, 95, 115, 0, 4, 5, 114, 101, 109, 95, 117, 0, 5, 8, 103, 101, 116, 95, 104, 105, 103, 104, 0, 0, 10, 191, 1, 6, 4, 0, 35, 0, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 126, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 127, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 128, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 129, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 130, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11\r\n  ])), {}).exports;\r\n} catch (e) {\r\n  // no wasm support :(\r\n}\r\n\r\n/**\r\n * Constructs a 64 bit two's-complement integer, given its low and high 32 bit values as *signed* integers.\r\n *  See the from* functions below for more convenient ways of constructing Longs.\r\n * @exports Long\r\n * @class A Long class for representing a 64 bit two's-complement integer value.\r\n * @param {number} low The low (signed) 32 bits of the long\r\n * @param {number} high The high (signed) 32 bits of the long\r\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\r\n * @constructor\r\n */\r\nfunction Long(low, high, unsigned) {\r\n\r\n    /**\r\n     * The low 32 bits as a signed value.\r\n     * @type {number}\r\n     */\r\n    this.low = low | 0;\r\n\r\n    /**\r\n     * The high 32 bits as a signed value.\r\n     * @type {number}\r\n     */\r\n    this.high = high | 0;\r\n\r\n    /**\r\n     * Whether unsigned or not.\r\n     * @type {boolean}\r\n     */\r\n    this.unsigned = !!unsigned;\r\n}\r\n\r\n// The internal representation of a long is the two given signed, 32-bit values.\r\n// We use 32-bit pieces because these are the size of integers on which\r\n// Javascript performs bit-operations.  For operations like addition and\r\n// multiplication, we split each number into 16 bit pieces, which can easily be\r\n// multiplied within Javascript's floating-point representation without overflow\r\n// or change in sign.\r\n//\r\n// In the algorithms below, we frequently reduce the negative case to the\r\n// positive case by negating the input(s) and then post-processing the result.\r\n// Note that we must ALWAYS check specially whether those values are MIN_VALUE\r\n// (-2^63) because -MIN_VALUE == MIN_VALUE (since 2^63 cannot be represented as\r\n// a positive number, it overflows back into a negative).  Not handling this\r\n// case would often result in infinite recursion.\r\n//\r\n// Common constant values ZERO, ONE, NEG_ONE, etc. are defined below the from*\r\n// methods on which they depend.\r\n\r\n/**\r\n * An indicator used to reliably determine if an object is a Long or not.\r\n * @type {boolean}\r\n * @const\r\n * @private\r\n */\r\nLong.prototype.__isLong__;\r\n\r\nObject.defineProperty(Long.prototype, \"__isLong__\", { value: true });\r\n\r\n/**\r\n * @function\r\n * @param {*} obj Object\r\n * @returns {boolean}\r\n * @inner\r\n */\r\nfunction isLong(obj) {\r\n    return (obj && obj[\"__isLong__\"]) === true;\r\n}\r\n\r\n/**\r\n * Tests if the specified object is a Long.\r\n * @function\r\n * @param {*} obj Object\r\n * @returns {boolean}\r\n */\r\nLong.isLong = isLong;\r\n\r\n/**\r\n * A cache of the Long representations of small integer values.\r\n * @type {!Object}\r\n * @inner\r\n */\r\nvar INT_CACHE = {};\r\n\r\n/**\r\n * A cache of the Long representations of small unsigned integer values.\r\n * @type {!Object}\r\n * @inner\r\n */\r\nvar UINT_CACHE = {};\r\n\r\n/**\r\n * @param {number} value\r\n * @param {boolean=} unsigned\r\n * @returns {!Long}\r\n * @inner\r\n */\r\nfunction fromInt(value, unsigned) {\r\n    var obj, cachedObj, cache;\r\n    if (unsigned) {\r\n        value >>>= 0;\r\n        if (cache = (0 <= value && value < 256)) {\r\n            cachedObj = UINT_CACHE[value];\r\n            if (cachedObj)\r\n                return cachedObj;\r\n        }\r\n        obj = fromBits(value, (value | 0) < 0 ? -1 : 0, true);\r\n        if (cache)\r\n            UINT_CACHE[value] = obj;\r\n        return obj;\r\n    } else {\r\n        value |= 0;\r\n        if (cache = (-128 <= value && value < 128)) {\r\n            cachedObj = INT_CACHE[value];\r\n            if (cachedObj)\r\n                return cachedObj;\r\n        }\r\n        obj = fromBits(value, value < 0 ? -1 : 0, false);\r\n        if (cache)\r\n            INT_CACHE[value] = obj;\r\n        return obj;\r\n    }\r\n}\r\n\r\n/**\r\n * Returns a Long representing the given 32 bit integer value.\r\n * @function\r\n * @param {number} value The 32 bit integer in question\r\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\r\n * @returns {!Long} The corresponding Long value\r\n */\r\nLong.fromInt = fromInt;\r\n\r\n/**\r\n * @param {number} value\r\n * @param {boolean=} unsigned\r\n * @returns {!Long}\r\n * @inner\r\n */\r\nfunction fromNumber(value, unsigned) {\r\n    if (isNaN(value))\r\n        return unsigned ? UZERO : ZERO;\r\n    if (unsigned) {\r\n        if (value < 0)\r\n            return UZERO;\r\n        if (value >= TWO_PWR_64_DBL)\r\n            return MAX_UNSIGNED_VALUE;\r\n    } else {\r\n        if (value <= -TWO_PWR_63_DBL)\r\n            return MIN_VALUE;\r\n        if (value + 1 >= TWO_PWR_63_DBL)\r\n            return MAX_VALUE;\r\n    }\r\n    if (value < 0)\r\n        return fromNumber(-value, unsigned).neg();\r\n    return fromBits((value % TWO_PWR_32_DBL) | 0, (value / TWO_PWR_32_DBL) | 0, unsigned);\r\n}\r\n\r\n/**\r\n * Returns a Long representing the given value, provided that it is a finite number. Otherwise, zero is returned.\r\n * @function\r\n * @param {number} value The number in question\r\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\r\n * @returns {!Long} The corresponding Long value\r\n */\r\nLong.fromNumber = fromNumber;\r\n\r\n/**\r\n * @param {number} lowBits\r\n * @param {number} highBits\r\n * @param {boolean=} unsigned\r\n * @returns {!Long}\r\n * @inner\r\n */\r\nfunction fromBits(lowBits, highBits, unsigned) {\r\n    return new Long(lowBits, highBits, unsigned);\r\n}\r\n\r\n/**\r\n * Returns a Long representing the 64 bit integer that comes by concatenating the given low and high bits. Each is\r\n *  assumed to use 32 bits.\r\n * @function\r\n * @param {number} lowBits The low 32 bits\r\n * @param {number} highBits The high 32 bits\r\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\r\n * @returns {!Long} The corresponding Long value\r\n */\r\nLong.fromBits = fromBits;\r\n\r\n/**\r\n * @function\r\n * @param {number} base\r\n * @param {number} exponent\r\n * @returns {number}\r\n * @inner\r\n */\r\nvar pow_dbl = Math.pow; // Used 4 times (4*8 to 15+4)\r\n\r\n/**\r\n * @param {string} str\r\n * @param {(boolean|number)=} unsigned\r\n * @param {number=} radix\r\n * @returns {!Long}\r\n * @inner\r\n */\r\nfunction fromString(str, unsigned, radix) {\r\n    if (str.length === 0)\r\n        throw Error('empty string');\r\n    if (str === \"NaN\" || str === \"Infinity\" || str === \"+Infinity\" || str === \"-Infinity\")\r\n        return ZERO;\r\n    if (typeof unsigned === 'number') {\r\n        // For goog.math.long compatibility\r\n        radix = unsigned,\r\n        unsigned = false;\r\n    } else {\r\n        unsigned = !! unsigned;\r\n    }\r\n    radix = radix || 10;\r\n    if (radix < 2 || 36 < radix)\r\n        throw RangeError('radix');\r\n\r\n    var p;\r\n    if ((p = str.indexOf('-')) > 0)\r\n        throw Error('interior hyphen');\r\n    else if (p === 0) {\r\n        return fromString(str.substring(1), unsigned, radix).neg();\r\n    }\r\n\r\n    // Do several (8) digits each time through the loop, so as to\r\n    // minimize the calls to the very expensive emulated div.\r\n    var radixToPower = fromNumber(pow_dbl(radix, 8));\r\n\r\n    var result = ZERO;\r\n    for (var i = 0; i < str.length; i += 8) {\r\n        var size = Math.min(8, str.length - i),\r\n            value = parseInt(str.substring(i, i + size), radix);\r\n        if (size < 8) {\r\n            var power = fromNumber(pow_dbl(radix, size));\r\n            result = result.mul(power).add(fromNumber(value));\r\n        } else {\r\n            result = result.mul(radixToPower);\r\n            result = result.add(fromNumber(value));\r\n        }\r\n    }\r\n    result.unsigned = unsigned;\r\n    return result;\r\n}\r\n\r\n/**\r\n * Returns a Long representation of the given string, written using the specified radix.\r\n * @function\r\n * @param {string} str The textual representation of the Long\r\n * @param {(boolean|number)=} unsigned Whether unsigned or not, defaults to signed\r\n * @param {number=} radix The radix in which the text is written (2-36), defaults to 10\r\n * @returns {!Long} The corresponding Long value\r\n */\r\nLong.fromString = fromString;\r\n\r\n/**\r\n * @function\r\n * @param {!Long|number|string|!{low: number, high: number, unsigned: boolean}} val\r\n * @param {boolean=} unsigned\r\n * @returns {!Long}\r\n * @inner\r\n */\r\nfunction fromValue(val, unsigned) {\r\n    if (typeof val === 'number')\r\n        return fromNumber(val, unsigned);\r\n    if (typeof val === 'string')\r\n        return fromString(val, unsigned);\r\n    // Throws for non-objects, converts non-instanceof Long:\r\n    return fromBits(val.low, val.high, typeof unsigned === 'boolean' ? unsigned : val.unsigned);\r\n}\r\n\r\n/**\r\n * Converts the specified value to a Long using the appropriate from* function for its type.\r\n * @function\r\n * @param {!Long|number|string|!{low: number, high: number, unsigned: boolean}} val Value\r\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\r\n * @returns {!Long}\r\n */\r\nLong.fromValue = fromValue;\r\n\r\n// NOTE: the compiler should inline these constant values below and then remove these variables, so there should be\r\n// no runtime penalty for these.\r\n\r\n/**\r\n * @type {number}\r\n * @const\r\n * @inner\r\n */\r\nvar TWO_PWR_16_DBL = 1 << 16;\r\n\r\n/**\r\n * @type {number}\r\n * @const\r\n * @inner\r\n */\r\nvar TWO_PWR_24_DBL = 1 << 24;\r\n\r\n/**\r\n * @type {number}\r\n * @const\r\n * @inner\r\n */\r\nvar TWO_PWR_32_DBL = TWO_PWR_16_DBL * TWO_PWR_16_DBL;\r\n\r\n/**\r\n * @type {number}\r\n * @const\r\n * @inner\r\n */\r\nvar TWO_PWR_64_DBL = TWO_PWR_32_DBL * TWO_PWR_32_DBL;\r\n\r\n/**\r\n * @type {number}\r\n * @const\r\n * @inner\r\n */\r\nvar TWO_PWR_63_DBL = TWO_PWR_64_DBL / 2;\r\n\r\n/**\r\n * @type {!Long}\r\n * @const\r\n * @inner\r\n */\r\nvar TWO_PWR_24 = fromInt(TWO_PWR_24_DBL);\r\n\r\n/**\r\n * @type {!Long}\r\n * @inner\r\n */\r\nvar ZERO = fromInt(0);\r\n\r\n/**\r\n * Signed zero.\r\n * @type {!Long}\r\n */\r\nLong.ZERO = ZERO;\r\n\r\n/**\r\n * @type {!Long}\r\n * @inner\r\n */\r\nvar UZERO = fromInt(0, true);\r\n\r\n/**\r\n * Unsigned zero.\r\n * @type {!Long}\r\n */\r\nLong.UZERO = UZERO;\r\n\r\n/**\r\n * @type {!Long}\r\n * @inner\r\n */\r\nvar ONE = fromInt(1);\r\n\r\n/**\r\n * Signed one.\r\n * @type {!Long}\r\n */\r\nLong.ONE = ONE;\r\n\r\n/**\r\n * @type {!Long}\r\n * @inner\r\n */\r\nvar UONE = fromInt(1, true);\r\n\r\n/**\r\n * Unsigned one.\r\n * @type {!Long}\r\n */\r\nLong.UONE = UONE;\r\n\r\n/**\r\n * @type {!Long}\r\n * @inner\r\n */\r\nvar NEG_ONE = fromInt(-1);\r\n\r\n/**\r\n * Signed negative one.\r\n * @type {!Long}\r\n */\r\nLong.NEG_ONE = NEG_ONE;\r\n\r\n/**\r\n * @type {!Long}\r\n * @inner\r\n */\r\nvar MAX_VALUE = fromBits(0xFFFFFFFF|0, 0x7FFFFFFF|0, false);\r\n\r\n/**\r\n * Maximum signed value.\r\n * @type {!Long}\r\n */\r\nLong.MAX_VALUE = MAX_VALUE;\r\n\r\n/**\r\n * @type {!Long}\r\n * @inner\r\n */\r\nvar MAX_UNSIGNED_VALUE = fromBits(0xFFFFFFFF|0, 0xFFFFFFFF|0, true);\r\n\r\n/**\r\n * Maximum unsigned value.\r\n * @type {!Long}\r\n */\r\nLong.MAX_UNSIGNED_VALUE = MAX_UNSIGNED_VALUE;\r\n\r\n/**\r\n * @type {!Long}\r\n * @inner\r\n */\r\nvar MIN_VALUE = fromBits(0, 0x80000000|0, false);\r\n\r\n/**\r\n * Minimum signed value.\r\n * @type {!Long}\r\n */\r\nLong.MIN_VALUE = MIN_VALUE;\r\n\r\n/**\r\n * @alias Long.prototype\r\n * @inner\r\n */\r\nvar LongPrototype = Long.prototype;\r\n\r\n/**\r\n * Converts the Long to a 32 bit integer, assuming it is a 32 bit integer.\r\n * @returns {number}\r\n */\r\nLongPrototype.toInt = function toInt() {\r\n    return this.unsigned ? this.low >>> 0 : this.low;\r\n};\r\n\r\n/**\r\n * Converts the Long to a the nearest floating-point representation of this value (double, 53 bit mantissa).\r\n * @returns {number}\r\n */\r\nLongPrototype.toNumber = function toNumber() {\r\n    if (this.unsigned)\r\n        return ((this.high >>> 0) * TWO_PWR_32_DBL) + (this.low >>> 0);\r\n    return this.high * TWO_PWR_32_DBL + (this.low >>> 0);\r\n};\r\n\r\n/**\r\n * Converts the Long to a string written in the specified radix.\r\n * @param {number=} radix Radix (2-36), defaults to 10\r\n * @returns {string}\r\n * @override\r\n * @throws {RangeError} If `radix` is out of range\r\n */\r\nLongPrototype.toString = function toString(radix) {\r\n    radix = radix || 10;\r\n    if (radix < 2 || 36 < radix)\r\n        throw RangeError('radix');\r\n    if (this.isZero())\r\n        return '0';\r\n    if (this.isNegative()) { // Unsigned Longs are never negative\r\n        if (this.eq(MIN_VALUE)) {\r\n            // We need to change the Long value before it can be negated, so we remove\r\n            // the bottom-most digit in this base and then recurse to do the rest.\r\n            var radixLong = fromNumber(radix),\r\n                div = this.div(radixLong),\r\n                rem1 = div.mul(radixLong).sub(this);\r\n            return div.toString(radix) + rem1.toInt().toString(radix);\r\n        } else\r\n            return '-' + this.neg().toString(radix);\r\n    }\r\n\r\n    // Do several (6) digits each time through the loop, so as to\r\n    // minimize the calls to the very expensive emulated div.\r\n    var radixToPower = fromNumber(pow_dbl(radix, 6), this.unsigned),\r\n        rem = this;\r\n    var result = '';\r\n    while (true) {\r\n        var remDiv = rem.div(radixToPower),\r\n            intval = rem.sub(remDiv.mul(radixToPower)).toInt() >>> 0,\r\n            digits = intval.toString(radix);\r\n        rem = remDiv;\r\n        if (rem.isZero())\r\n            return digits + result;\r\n        else {\r\n            while (digits.length < 6)\r\n                digits = '0' + digits;\r\n            result = '' + digits + result;\r\n        }\r\n    }\r\n};\r\n\r\n/**\r\n * Gets the high 32 bits as a signed integer.\r\n * @returns {number} Signed high bits\r\n */\r\nLongPrototype.getHighBits = function getHighBits() {\r\n    return this.high;\r\n};\r\n\r\n/**\r\n * Gets the high 32 bits as an unsigned integer.\r\n * @returns {number} Unsigned high bits\r\n */\r\nLongPrototype.getHighBitsUnsigned = function getHighBitsUnsigned() {\r\n    return this.high >>> 0;\r\n};\r\n\r\n/**\r\n * Gets the low 32 bits as a signed integer.\r\n * @returns {number} Signed low bits\r\n */\r\nLongPrototype.getLowBits = function getLowBits() {\r\n    return this.low;\r\n};\r\n\r\n/**\r\n * Gets the low 32 bits as an unsigned integer.\r\n * @returns {number} Unsigned low bits\r\n */\r\nLongPrototype.getLowBitsUnsigned = function getLowBitsUnsigned() {\r\n    return this.low >>> 0;\r\n};\r\n\r\n/**\r\n * Gets the number of bits needed to represent the absolute value of this Long.\r\n * @returns {number}\r\n */\r\nLongPrototype.getNumBitsAbs = function getNumBitsAbs() {\r\n    if (this.isNegative()) // Unsigned Longs are never negative\r\n        return this.eq(MIN_VALUE) ? 64 : this.neg().getNumBitsAbs();\r\n    var val = this.high != 0 ? this.high : this.low;\r\n    for (var bit = 31; bit > 0; bit--)\r\n        if ((val & (1 << bit)) != 0)\r\n            break;\r\n    return this.high != 0 ? bit + 33 : bit + 1;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value equals zero.\r\n * @returns {boolean}\r\n */\r\nLongPrototype.isZero = function isZero() {\r\n    return this.high === 0 && this.low === 0;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value equals zero. This is an alias of {@link Long#isZero}.\r\n * @returns {boolean}\r\n */\r\nLongPrototype.eqz = LongPrototype.isZero;\r\n\r\n/**\r\n * Tests if this Long's value is negative.\r\n * @returns {boolean}\r\n */\r\nLongPrototype.isNegative = function isNegative() {\r\n    return !this.unsigned && this.high < 0;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value is positive.\r\n * @returns {boolean}\r\n */\r\nLongPrototype.isPositive = function isPositive() {\r\n    return this.unsigned || this.high >= 0;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value is odd.\r\n * @returns {boolean}\r\n */\r\nLongPrototype.isOdd = function isOdd() {\r\n    return (this.low & 1) === 1;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value is even.\r\n * @returns {boolean}\r\n */\r\nLongPrototype.isEven = function isEven() {\r\n    return (this.low & 1) === 0;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value equals the specified's.\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.equals = function equals(other) {\r\n    if (!isLong(other))\r\n        other = fromValue(other);\r\n    if (this.unsigned !== other.unsigned && (this.high >>> 31) === 1 && (other.high >>> 31) === 1)\r\n        return false;\r\n    return this.high === other.high && this.low === other.low;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value equals the specified's. This is an alias of {@link Long#equals}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.eq = LongPrototype.equals;\r\n\r\n/**\r\n * Tests if this Long's value differs from the specified's.\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.notEquals = function notEquals(other) {\r\n    return !this.eq(/* validates */ other);\r\n};\r\n\r\n/**\r\n * Tests if this Long's value differs from the specified's. This is an alias of {@link Long#notEquals}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.neq = LongPrototype.notEquals;\r\n\r\n/**\r\n * Tests if this Long's value differs from the specified's. This is an alias of {@link Long#notEquals}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.ne = LongPrototype.notEquals;\r\n\r\n/**\r\n * Tests if this Long's value is less than the specified's.\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.lessThan = function lessThan(other) {\r\n    return this.comp(/* validates */ other) < 0;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value is less than the specified's. This is an alias of {@link Long#lessThan}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.lt = LongPrototype.lessThan;\r\n\r\n/**\r\n * Tests if this Long's value is less than or equal the specified's.\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.lessThanOrEqual = function lessThanOrEqual(other) {\r\n    return this.comp(/* validates */ other) <= 0;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value is less than or equal the specified's. This is an alias of {@link Long#lessThanOrEqual}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.lte = LongPrototype.lessThanOrEqual;\r\n\r\n/**\r\n * Tests if this Long's value is less than or equal the specified's. This is an alias of {@link Long#lessThanOrEqual}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.le = LongPrototype.lessThanOrEqual;\r\n\r\n/**\r\n * Tests if this Long's value is greater than the specified's.\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.greaterThan = function greaterThan(other) {\r\n    return this.comp(/* validates */ other) > 0;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value is greater than the specified's. This is an alias of {@link Long#greaterThan}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.gt = LongPrototype.greaterThan;\r\n\r\n/**\r\n * Tests if this Long's value is greater than or equal the specified's.\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.greaterThanOrEqual = function greaterThanOrEqual(other) {\r\n    return this.comp(/* validates */ other) >= 0;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value is greater than or equal the specified's. This is an alias of {@link Long#greaterThanOrEqual}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.gte = LongPrototype.greaterThanOrEqual;\r\n\r\n/**\r\n * Tests if this Long's value is greater than or equal the specified's. This is an alias of {@link Long#greaterThanOrEqual}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.ge = LongPrototype.greaterThanOrEqual;\r\n\r\n/**\r\n * Compares this Long's value with the specified's.\r\n * @param {!Long|number|string} other Other value\r\n * @returns {number} 0 if they are the same, 1 if the this is greater and -1\r\n *  if the given one is greater\r\n */\r\nLongPrototype.compare = function compare(other) {\r\n    if (!isLong(other))\r\n        other = fromValue(other);\r\n    if (this.eq(other))\r\n        return 0;\r\n    var thisNeg = this.isNegative(),\r\n        otherNeg = other.isNegative();\r\n    if (thisNeg && !otherNeg)\r\n        return -1;\r\n    if (!thisNeg && otherNeg)\r\n        return 1;\r\n    // At this point the sign bits are the same\r\n    if (!this.unsigned)\r\n        return this.sub(other).isNegative() ? -1 : 1;\r\n    // Both are positive if at least one is unsigned\r\n    return (other.high >>> 0) > (this.high >>> 0) || (other.high === this.high && (other.low >>> 0) > (this.low >>> 0)) ? -1 : 1;\r\n};\r\n\r\n/**\r\n * Compares this Long's value with the specified's. This is an alias of {@link Long#compare}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {number} 0 if they are the same, 1 if the this is greater and -1\r\n *  if the given one is greater\r\n */\r\nLongPrototype.comp = LongPrototype.compare;\r\n\r\n/**\r\n * Negates this Long's value.\r\n * @returns {!Long} Negated Long\r\n */\r\nLongPrototype.negate = function negate() {\r\n    if (!this.unsigned && this.eq(MIN_VALUE))\r\n        return MIN_VALUE;\r\n    return this.not().add(ONE);\r\n};\r\n\r\n/**\r\n * Negates this Long's value. This is an alias of {@link Long#negate}.\r\n * @function\r\n * @returns {!Long} Negated Long\r\n */\r\nLongPrototype.neg = LongPrototype.negate;\r\n\r\n/**\r\n * Returns the sum of this and the specified Long.\r\n * @param {!Long|number|string} addend Addend\r\n * @returns {!Long} Sum\r\n */\r\nLongPrototype.add = function add(addend) {\r\n    if (!isLong(addend))\r\n        addend = fromValue(addend);\r\n\r\n    // Divide each number into 4 chunks of 16 bits, and then sum the chunks.\r\n\r\n    var a48 = this.high >>> 16;\r\n    var a32 = this.high & 0xFFFF;\r\n    var a16 = this.low >>> 16;\r\n    var a00 = this.low & 0xFFFF;\r\n\r\n    var b48 = addend.high >>> 16;\r\n    var b32 = addend.high & 0xFFFF;\r\n    var b16 = addend.low >>> 16;\r\n    var b00 = addend.low & 0xFFFF;\r\n\r\n    var c48 = 0, c32 = 0, c16 = 0, c00 = 0;\r\n    c00 += a00 + b00;\r\n    c16 += c00 >>> 16;\r\n    c00 &= 0xFFFF;\r\n    c16 += a16 + b16;\r\n    c32 += c16 >>> 16;\r\n    c16 &= 0xFFFF;\r\n    c32 += a32 + b32;\r\n    c48 += c32 >>> 16;\r\n    c32 &= 0xFFFF;\r\n    c48 += a48 + b48;\r\n    c48 &= 0xFFFF;\r\n    return fromBits((c16 << 16) | c00, (c48 << 16) | c32, this.unsigned);\r\n};\r\n\r\n/**\r\n * Returns the difference of this and the specified Long.\r\n * @param {!Long|number|string} subtrahend Subtrahend\r\n * @returns {!Long} Difference\r\n */\r\nLongPrototype.subtract = function subtract(subtrahend) {\r\n    if (!isLong(subtrahend))\r\n        subtrahend = fromValue(subtrahend);\r\n    return this.add(subtrahend.neg());\r\n};\r\n\r\n/**\r\n * Returns the difference of this and the specified Long. This is an alias of {@link Long#subtract}.\r\n * @function\r\n * @param {!Long|number|string} subtrahend Subtrahend\r\n * @returns {!Long} Difference\r\n */\r\nLongPrototype.sub = LongPrototype.subtract;\r\n\r\n/**\r\n * Returns the product of this and the specified Long.\r\n * @param {!Long|number|string} multiplier Multiplier\r\n * @returns {!Long} Product\r\n */\r\nLongPrototype.multiply = function multiply(multiplier) {\r\n    if (this.isZero())\r\n        return ZERO;\r\n    if (!isLong(multiplier))\r\n        multiplier = fromValue(multiplier);\r\n\r\n    // use wasm support if present\r\n    if (wasm) {\r\n        var low = wasm.mul(this.low,\r\n                           this.high,\r\n                           multiplier.low,\r\n                           multiplier.high);\r\n        return fromBits(low, wasm.get_high(), this.unsigned);\r\n    }\r\n\r\n    if (multiplier.isZero())\r\n        return ZERO;\r\n    if (this.eq(MIN_VALUE))\r\n        return multiplier.isOdd() ? MIN_VALUE : ZERO;\r\n    if (multiplier.eq(MIN_VALUE))\r\n        return this.isOdd() ? MIN_VALUE : ZERO;\r\n\r\n    if (this.isNegative()) {\r\n        if (multiplier.isNegative())\r\n            return this.neg().mul(multiplier.neg());\r\n        else\r\n            return this.neg().mul(multiplier).neg();\r\n    } else if (multiplier.isNegative())\r\n        return this.mul(multiplier.neg()).neg();\r\n\r\n    // If both longs are small, use float multiplication\r\n    if (this.lt(TWO_PWR_24) && multiplier.lt(TWO_PWR_24))\r\n        return fromNumber(this.toNumber() * multiplier.toNumber(), this.unsigned);\r\n\r\n    // Divide each long into 4 chunks of 16 bits, and then add up 4x4 products.\r\n    // We can skip products that would overflow.\r\n\r\n    var a48 = this.high >>> 16;\r\n    var a32 = this.high & 0xFFFF;\r\n    var a16 = this.low >>> 16;\r\n    var a00 = this.low & 0xFFFF;\r\n\r\n    var b48 = multiplier.high >>> 16;\r\n    var b32 = multiplier.high & 0xFFFF;\r\n    var b16 = multiplier.low >>> 16;\r\n    var b00 = multiplier.low & 0xFFFF;\r\n\r\n    var c48 = 0, c32 = 0, c16 = 0, c00 = 0;\r\n    c00 += a00 * b00;\r\n    c16 += c00 >>> 16;\r\n    c00 &= 0xFFFF;\r\n    c16 += a16 * b00;\r\n    c32 += c16 >>> 16;\r\n    c16 &= 0xFFFF;\r\n    c16 += a00 * b16;\r\n    c32 += c16 >>> 16;\r\n    c16 &= 0xFFFF;\r\n    c32 += a32 * b00;\r\n    c48 += c32 >>> 16;\r\n    c32 &= 0xFFFF;\r\n    c32 += a16 * b16;\r\n    c48 += c32 >>> 16;\r\n    c32 &= 0xFFFF;\r\n    c32 += a00 * b32;\r\n    c48 += c32 >>> 16;\r\n    c32 &= 0xFFFF;\r\n    c48 += a48 * b00 + a32 * b16 + a16 * b32 + a00 * b48;\r\n    c48 &= 0xFFFF;\r\n    return fromBits((c16 << 16) | c00, (c48 << 16) | c32, this.unsigned);\r\n};\r\n\r\n/**\r\n * Returns the product of this and the specified Long. This is an alias of {@link Long#multiply}.\r\n * @function\r\n * @param {!Long|number|string} multiplier Multiplier\r\n * @returns {!Long} Product\r\n */\r\nLongPrototype.mul = LongPrototype.multiply;\r\n\r\n/**\r\n * Returns this Long divided by the specified. The result is signed if this Long is signed or\r\n *  unsigned if this Long is unsigned.\r\n * @param {!Long|number|string} divisor Divisor\r\n * @returns {!Long} Quotient\r\n */\r\nLongPrototype.divide = function divide(divisor) {\r\n    if (!isLong(divisor))\r\n        divisor = fromValue(divisor);\r\n    if (divisor.isZero())\r\n        throw Error('division by zero');\r\n\r\n    // use wasm support if present\r\n    if (wasm) {\r\n        // guard against signed division overflow: the largest\r\n        // negative number / -1 would be 1 larger than the largest\r\n        // positive number, due to two's complement.\r\n        if (!this.unsigned &&\r\n            this.high === -0x80000000 &&\r\n            divisor.low === -1 && divisor.high === -1) {\r\n            // be consistent with non-wasm code path\r\n            return this;\r\n        }\r\n        var low = (this.unsigned ? wasm.div_u : wasm.div_s)(\r\n            this.low,\r\n            this.high,\r\n            divisor.low,\r\n            divisor.high\r\n        );\r\n        return fromBits(low, wasm.get_high(), this.unsigned);\r\n    }\r\n\r\n    if (this.isZero())\r\n        return this.unsigned ? UZERO : ZERO;\r\n    var approx, rem, res;\r\n    if (!this.unsigned) {\r\n        // This section is only relevant for signed longs and is derived from the\r\n        // closure library as a whole.\r\n        if (this.eq(MIN_VALUE)) {\r\n            if (divisor.eq(ONE) || divisor.eq(NEG_ONE))\r\n                return MIN_VALUE;  // recall that -MIN_VALUE == MIN_VALUE\r\n            else if (divisor.eq(MIN_VALUE))\r\n                return ONE;\r\n            else {\r\n                // At this point, we have |other| >= 2, so |this/other| < |MIN_VALUE|.\r\n                var halfThis = this.shr(1);\r\n                approx = halfThis.div(divisor).shl(1);\r\n                if (approx.eq(ZERO)) {\r\n                    return divisor.isNegative() ? ONE : NEG_ONE;\r\n                } else {\r\n                    rem = this.sub(divisor.mul(approx));\r\n                    res = approx.add(rem.div(divisor));\r\n                    return res;\r\n                }\r\n            }\r\n        } else if (divisor.eq(MIN_VALUE))\r\n            return this.unsigned ? UZERO : ZERO;\r\n        if (this.isNegative()) {\r\n            if (divisor.isNegative())\r\n                return this.neg().div(divisor.neg());\r\n            return this.neg().div(divisor).neg();\r\n        } else if (divisor.isNegative())\r\n            return this.div(divisor.neg()).neg();\r\n        res = ZERO;\r\n    } else {\r\n        // The algorithm below has not been made for unsigned longs. It's therefore\r\n        // required to take special care of the MSB prior to running it.\r\n        if (!divisor.unsigned)\r\n            divisor = divisor.toUnsigned();\r\n        if (divisor.gt(this))\r\n            return UZERO;\r\n        if (divisor.gt(this.shru(1))) // 15 >>> 1 = 7 ; with divisor = 8 ; true\r\n            return UONE;\r\n        res = UZERO;\r\n    }\r\n\r\n    // Repeat the following until the remainder is less than other:  find a\r\n    // floating-point that approximates remainder / other *from below*, add this\r\n    // into the result, and subtract it from the remainder.  It is critical that\r\n    // the approximate value is less than or equal to the real value so that the\r\n    // remainder never becomes negative.\r\n    rem = this;\r\n    while (rem.gte(divisor)) {\r\n        // Approximate the result of division. This may be a little greater or\r\n        // smaller than the actual value.\r\n        approx = Math.max(1, Math.floor(rem.toNumber() / divisor.toNumber()));\r\n\r\n        // We will tweak the approximate result by changing it in the 48-th digit or\r\n        // the smallest non-fractional digit, whichever is larger.\r\n        var log2 = Math.ceil(Math.log(approx) / Math.LN2),\r\n            delta = (log2 <= 48) ? 1 : pow_dbl(2, log2 - 48),\r\n\r\n        // Decrease the approximation until it is smaller than the remainder.  Note\r\n        // that if it is too large, the product overflows and is negative.\r\n            approxRes = fromNumber(approx),\r\n            approxRem = approxRes.mul(divisor);\r\n        while (approxRem.isNegative() || approxRem.gt(rem)) {\r\n            approx -= delta;\r\n            approxRes = fromNumber(approx, this.unsigned);\r\n            approxRem = approxRes.mul(divisor);\r\n        }\r\n\r\n        // We know the answer can't be zero... and actually, zero would cause\r\n        // infinite recursion since we would make no progress.\r\n        if (approxRes.isZero())\r\n            approxRes = ONE;\r\n\r\n        res = res.add(approxRes);\r\n        rem = rem.sub(approxRem);\r\n    }\r\n    return res;\r\n};\r\n\r\n/**\r\n * Returns this Long divided by the specified. This is an alias of {@link Long#divide}.\r\n * @function\r\n * @param {!Long|number|string} divisor Divisor\r\n * @returns {!Long} Quotient\r\n */\r\nLongPrototype.div = LongPrototype.divide;\r\n\r\n/**\r\n * Returns this Long modulo the specified.\r\n * @param {!Long|number|string} divisor Divisor\r\n * @returns {!Long} Remainder\r\n */\r\nLongPrototype.modulo = function modulo(divisor) {\r\n    if (!isLong(divisor))\r\n        divisor = fromValue(divisor);\r\n\r\n    // use wasm support if present\r\n    if (wasm) {\r\n        var low = (this.unsigned ? wasm.rem_u : wasm.rem_s)(\r\n            this.low,\r\n            this.high,\r\n            divisor.low,\r\n            divisor.high\r\n        );\r\n        return fromBits(low, wasm.get_high(), this.unsigned);\r\n    }\r\n\r\n    return this.sub(this.div(divisor).mul(divisor));\r\n};\r\n\r\n/**\r\n * Returns this Long modulo the specified. This is an alias of {@link Long#modulo}.\r\n * @function\r\n * @param {!Long|number|string} divisor Divisor\r\n * @returns {!Long} Remainder\r\n */\r\nLongPrototype.mod = LongPrototype.modulo;\r\n\r\n/**\r\n * Returns this Long modulo the specified. This is an alias of {@link Long#modulo}.\r\n * @function\r\n * @param {!Long|number|string} divisor Divisor\r\n * @returns {!Long} Remainder\r\n */\r\nLongPrototype.rem = LongPrototype.modulo;\r\n\r\n/**\r\n * Returns the bitwise NOT of this Long.\r\n * @returns {!Long}\r\n */\r\nLongPrototype.not = function not() {\r\n    return fromBits(~this.low, ~this.high, this.unsigned);\r\n};\r\n\r\n/**\r\n * Returns the bitwise AND of this Long and the specified.\r\n * @param {!Long|number|string} other Other Long\r\n * @returns {!Long}\r\n */\r\nLongPrototype.and = function and(other) {\r\n    if (!isLong(other))\r\n        other = fromValue(other);\r\n    return fromBits(this.low & other.low, this.high & other.high, this.unsigned);\r\n};\r\n\r\n/**\r\n * Returns the bitwise OR of this Long and the specified.\r\n * @param {!Long|number|string} other Other Long\r\n * @returns {!Long}\r\n */\r\nLongPrototype.or = function or(other) {\r\n    if (!isLong(other))\r\n        other = fromValue(other);\r\n    return fromBits(this.low | other.low, this.high | other.high, this.unsigned);\r\n};\r\n\r\n/**\r\n * Returns the bitwise XOR of this Long and the given one.\r\n * @param {!Long|number|string} other Other Long\r\n * @returns {!Long}\r\n */\r\nLongPrototype.xor = function xor(other) {\r\n    if (!isLong(other))\r\n        other = fromValue(other);\r\n    return fromBits(this.low ^ other.low, this.high ^ other.high, this.unsigned);\r\n};\r\n\r\n/**\r\n * Returns this Long with bits shifted to the left by the given amount.\r\n * @param {number|!Long} numBits Number of bits\r\n * @returns {!Long} Shifted Long\r\n */\r\nLongPrototype.shiftLeft = function shiftLeft(numBits) {\r\n    if (isLong(numBits))\r\n        numBits = numBits.toInt();\r\n    if ((numBits &= 63) === 0)\r\n        return this;\r\n    else if (numBits < 32)\r\n        return fromBits(this.low << numBits, (this.high << numBits) | (this.low >>> (32 - numBits)), this.unsigned);\r\n    else\r\n        return fromBits(0, this.low << (numBits - 32), this.unsigned);\r\n};\r\n\r\n/**\r\n * Returns this Long with bits shifted to the left by the given amount. This is an alias of {@link Long#shiftLeft}.\r\n * @function\r\n * @param {number|!Long} numBits Number of bits\r\n * @returns {!Long} Shifted Long\r\n */\r\nLongPrototype.shl = LongPrototype.shiftLeft;\r\n\r\n/**\r\n * Returns this Long with bits arithmetically shifted to the right by the given amount.\r\n * @param {number|!Long} numBits Number of bits\r\n * @returns {!Long} Shifted Long\r\n */\r\nLongPrototype.shiftRight = function shiftRight(numBits) {\r\n    if (isLong(numBits))\r\n        numBits = numBits.toInt();\r\n    if ((numBits &= 63) === 0)\r\n        return this;\r\n    else if (numBits < 32)\r\n        return fromBits((this.low >>> numBits) | (this.high << (32 - numBits)), this.high >> numBits, this.unsigned);\r\n    else\r\n        return fromBits(this.high >> (numBits - 32), this.high >= 0 ? 0 : -1, this.unsigned);\r\n};\r\n\r\n/**\r\n * Returns this Long with bits arithmetically shifted to the right by the given amount. This is an alias of {@link Long#shiftRight}.\r\n * @function\r\n * @param {number|!Long} numBits Number of bits\r\n * @returns {!Long} Shifted Long\r\n */\r\nLongPrototype.shr = LongPrototype.shiftRight;\r\n\r\n/**\r\n * Returns this Long with bits logically shifted to the right by the given amount.\r\n * @param {number|!Long} numBits Number of bits\r\n * @returns {!Long} Shifted Long\r\n */\r\nLongPrototype.shiftRightUnsigned = function shiftRightUnsigned(numBits) {\r\n    if (isLong(numBits))\r\n        numBits = numBits.toInt();\r\n    numBits &= 63;\r\n    if (numBits === 0)\r\n        return this;\r\n    else {\r\n        var high = this.high;\r\n        if (numBits < 32) {\r\n            var low = this.low;\r\n            return fromBits((low >>> numBits) | (high << (32 - numBits)), high >>> numBits, this.unsigned);\r\n        } else if (numBits === 32)\r\n            return fromBits(high, 0, this.unsigned);\r\n        else\r\n            return fromBits(high >>> (numBits - 32), 0, this.unsigned);\r\n    }\r\n};\r\n\r\n/**\r\n * Returns this Long with bits logically shifted to the right by the given amount. This is an alias of {@link Long#shiftRightUnsigned}.\r\n * @function\r\n * @param {number|!Long} numBits Number of bits\r\n * @returns {!Long} Shifted Long\r\n */\r\nLongPrototype.shru = LongPrototype.shiftRightUnsigned;\r\n\r\n/**\r\n * Returns this Long with bits logically shifted to the right by the given amount. This is an alias of {@link Long#shiftRightUnsigned}.\r\n * @function\r\n * @param {number|!Long} numBits Number of bits\r\n * @returns {!Long} Shifted Long\r\n */\r\nLongPrototype.shr_u = LongPrototype.shiftRightUnsigned;\r\n\r\n/**\r\n * Converts this Long to signed.\r\n * @returns {!Long} Signed long\r\n */\r\nLongPrototype.toSigned = function toSigned() {\r\n    if (!this.unsigned)\r\n        return this;\r\n    return fromBits(this.low, this.high, false);\r\n};\r\n\r\n/**\r\n * Converts this Long to unsigned.\r\n * @returns {!Long} Unsigned long\r\n */\r\nLongPrototype.toUnsigned = function toUnsigned() {\r\n    if (this.unsigned)\r\n        return this;\r\n    return fromBits(this.low, this.high, true);\r\n};\r\n\r\n/**\r\n * Converts this Long to its byte representation.\r\n * @param {boolean=} le Whether little or big endian, defaults to big endian\r\n * @returns {!Array.<number>} Byte representation\r\n */\r\nLongPrototype.toBytes = function toBytes(le) {\r\n    return le ? this.toBytesLE() : this.toBytesBE();\r\n};\r\n\r\n/**\r\n * Converts this Long to its little endian byte representation.\r\n * @returns {!Array.<number>} Little endian byte representation\r\n */\r\nLongPrototype.toBytesLE = function toBytesLE() {\r\n    var hi = this.high,\r\n        lo = this.low;\r\n    return [\r\n        lo        & 0xff,\r\n        lo >>>  8 & 0xff,\r\n        lo >>> 16 & 0xff,\r\n        lo >>> 24       ,\r\n        hi        & 0xff,\r\n        hi >>>  8 & 0xff,\r\n        hi >>> 16 & 0xff,\r\n        hi >>> 24\r\n    ];\r\n};\r\n\r\n/**\r\n * Converts this Long to its big endian byte representation.\r\n * @returns {!Array.<number>} Big endian byte representation\r\n */\r\nLongPrototype.toBytesBE = function toBytesBE() {\r\n    var hi = this.high,\r\n        lo = this.low;\r\n    return [\r\n        hi >>> 24       ,\r\n        hi >>> 16 & 0xff,\r\n        hi >>>  8 & 0xff,\r\n        hi        & 0xff,\r\n        lo >>> 24       ,\r\n        lo >>> 16 & 0xff,\r\n        lo >>>  8 & 0xff,\r\n        lo        & 0xff\r\n    ];\r\n};\r\n\r\n/**\r\n * Creates a Long from its byte representation.\r\n * @param {!Array.<number>} bytes Byte representation\r\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\r\n * @param {boolean=} le Whether little or big endian, defaults to big endian\r\n * @returns {Long} The corresponding Long value\r\n */\r\nLong.fromBytes = function fromBytes(bytes, unsigned, le) {\r\n    return le ? Long.fromBytesLE(bytes, unsigned) : Long.fromBytesBE(bytes, unsigned);\r\n};\r\n\r\n/**\r\n * Creates a Long from its little endian byte representation.\r\n * @param {!Array.<number>} bytes Little endian byte representation\r\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\r\n * @returns {Long} The corresponding Long value\r\n */\r\nLong.fromBytesLE = function fromBytesLE(bytes, unsigned) {\r\n    return new Long(\r\n        bytes[0]       |\r\n        bytes[1] <<  8 |\r\n        bytes[2] << 16 |\r\n        bytes[3] << 24,\r\n        bytes[4]       |\r\n        bytes[5] <<  8 |\r\n        bytes[6] << 16 |\r\n        bytes[7] << 24,\r\n        unsigned\r\n    );\r\n};\r\n\r\n/**\r\n * Creates a Long from its big endian byte representation.\r\n * @param {!Array.<number>} bytes Big endian byte representation\r\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\r\n * @returns {Long} The corresponding Long value\r\n */\r\nLong.fromBytesBE = function fromBytesBE(bytes, unsigned) {\r\n    return new Long(\r\n        bytes[4] << 24 |\r\n        bytes[5] << 16 |\r\n        bytes[6] <<  8 |\r\n        bytes[7],\r\n        bytes[0] << 24 |\r\n        bytes[1] << 16 |\r\n        bytes[2] <<  8 |\r\n        bytes[3],\r\n        unsigned\r\n    );\r\n};\r\n","/*eslint-disable block-scoped-var, id-length, no-control-regex, no-magic-numbers, no-prototype-builtins, no-redeclare, no-shadow, no-var, sort-vars*/\n\"use strict\";\n\nvar $protobuf = require(\"protobufjs/minimal\");\n\n// Common aliases\nvar $Reader = $protobuf.Reader, $Writer = $protobuf.Writer, $util = $protobuf.util;\n\n// Exported root namespace\nvar $root = $protobuf.roots[\"default\"] || ($protobuf.roots[\"default\"] = {});\n\n$root.onnx = (function() {\n\n    /**\n     * Namespace onnx.\n     * @exports onnx\n     * @namespace\n     */\n    var onnx = {};\n\n    /**\n     * Version enum.\n     * @name onnx.Version\n     * @enum {string}\n     * @property {number} _START_VERSION=0 _START_VERSION value\n     * @property {number} IR_VERSION_2017_10_10=1 IR_VERSION_2017_10_10 value\n     * @property {number} IR_VERSION_2017_10_30=2 IR_VERSION_2017_10_30 value\n     * @property {number} IR_VERSION_2017_11_3=3 IR_VERSION_2017_11_3 value\n     * @property {number} IR_VERSION_2019_1_22=4 IR_VERSION_2019_1_22 value\n     * @property {number} IR_VERSION=5 IR_VERSION value\n     */\n    onnx.Version = (function() {\n        var valuesById = {}, values = Object.create(valuesById);\n        values[valuesById[0] = \"_START_VERSION\"] = 0;\n        values[valuesById[1] = \"IR_VERSION_2017_10_10\"] = 1;\n        values[valuesById[2] = \"IR_VERSION_2017_10_30\"] = 2;\n        values[valuesById[3] = \"IR_VERSION_2017_11_3\"] = 3;\n        values[valuesById[4] = \"IR_VERSION_2019_1_22\"] = 4;\n        values[valuesById[5] = \"IR_VERSION\"] = 5;\n        return values;\n    })();\n\n    onnx.AttributeProto = (function() {\n\n        /**\n         * Properties of an AttributeProto.\n         * @memberof onnx\n         * @interface IAttributeProto\n         * @property {string|null} [name] AttributeProto name\n         * @property {string|null} [refAttrName] AttributeProto refAttrName\n         * @property {string|null} [docString] AttributeProto docString\n         * @property {onnx.AttributeProto.AttributeType|null} [type] AttributeProto type\n         * @property {number|null} [f] AttributeProto f\n         * @property {number|Long|null} [i] AttributeProto i\n         * @property {Uint8Array|null} [s] AttributeProto s\n         * @property {onnx.ITensorProto|null} [t] AttributeProto t\n         * @property {onnx.IGraphProto|null} [g] AttributeProto g\n         * @property {Array.<number>|null} [floats] AttributeProto floats\n         * @property {Array.<number|Long>|null} [ints] AttributeProto ints\n         * @property {Array.<Uint8Array>|null} [strings] AttributeProto strings\n         * @property {Array.<onnx.ITensorProto>|null} [tensors] AttributeProto tensors\n         * @property {Array.<onnx.IGraphProto>|null} [graphs] AttributeProto graphs\n         */\n\n        /**\n         * Constructs a new AttributeProto.\n         * @memberof onnx\n         * @classdesc Represents an AttributeProto.\n         * @implements IAttributeProto\n         * @constructor\n         * @param {onnx.IAttributeProto=} [properties] Properties to set\n         */\n        function AttributeProto(properties) {\n            this.floats = [];\n            this.ints = [];\n            this.strings = [];\n            this.tensors = [];\n            this.graphs = [];\n            if (properties)\n                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                    if (properties[keys[i]] != null)\n                        this[keys[i]] = properties[keys[i]];\n        }\n\n        /**\n         * AttributeProto name.\n         * @member {string} name\n         * @memberof onnx.AttributeProto\n         * @instance\n         */\n        AttributeProto.prototype.name = \"\";\n\n        /**\n         * AttributeProto refAttrName.\n         * @member {string} refAttrName\n         * @memberof onnx.AttributeProto\n         * @instance\n         */\n        AttributeProto.prototype.refAttrName = \"\";\n\n        /**\n         * AttributeProto docString.\n         * @member {string} docString\n         * @memberof onnx.AttributeProto\n         * @instance\n         */\n        AttributeProto.prototype.docString = \"\";\n\n        /**\n         * AttributeProto type.\n         * @member {onnx.AttributeProto.AttributeType} type\n         * @memberof onnx.AttributeProto\n         * @instance\n         */\n        AttributeProto.prototype.type = 0;\n\n        /**\n         * AttributeProto f.\n         * @member {number} f\n         * @memberof onnx.AttributeProto\n         * @instance\n         */\n        AttributeProto.prototype.f = 0;\n\n        /**\n         * AttributeProto i.\n         * @member {number|Long} i\n         * @memberof onnx.AttributeProto\n         * @instance\n         */\n        AttributeProto.prototype.i = $util.Long ? $util.Long.fromBits(0,0,false) : 0;\n\n        /**\n         * AttributeProto s.\n         * @member {Uint8Array} s\n         * @memberof onnx.AttributeProto\n         * @instance\n         */\n        AttributeProto.prototype.s = $util.newBuffer([]);\n\n        /**\n         * AttributeProto t.\n         * @member {onnx.ITensorProto|null|undefined} t\n         * @memberof onnx.AttributeProto\n         * @instance\n         */\n        AttributeProto.prototype.t = null;\n\n        /**\n         * AttributeProto g.\n         * @member {onnx.IGraphProto|null|undefined} g\n         * @memberof onnx.AttributeProto\n         * @instance\n         */\n        AttributeProto.prototype.g = null;\n\n        /**\n         * AttributeProto floats.\n         * @member {Array.<number>} floats\n         * @memberof onnx.AttributeProto\n         * @instance\n         */\n        AttributeProto.prototype.floats = $util.emptyArray;\n\n        /**\n         * AttributeProto ints.\n         * @member {Array.<number|Long>} ints\n         * @memberof onnx.AttributeProto\n         * @instance\n         */\n        AttributeProto.prototype.ints = $util.emptyArray;\n\n        /**\n         * AttributeProto strings.\n         * @member {Array.<Uint8Array>} strings\n         * @memberof onnx.AttributeProto\n         * @instance\n         */\n        AttributeProto.prototype.strings = $util.emptyArray;\n\n        /**\n         * AttributeProto tensors.\n         * @member {Array.<onnx.ITensorProto>} tensors\n         * @memberof onnx.AttributeProto\n         * @instance\n         */\n        AttributeProto.prototype.tensors = $util.emptyArray;\n\n        /**\n         * AttributeProto graphs.\n         * @member {Array.<onnx.IGraphProto>} graphs\n         * @memberof onnx.AttributeProto\n         * @instance\n         */\n        AttributeProto.prototype.graphs = $util.emptyArray;\n\n        /**\n         * Creates a new AttributeProto instance using the specified properties.\n         * @function create\n         * @memberof onnx.AttributeProto\n         * @static\n         * @param {onnx.IAttributeProto=} [properties] Properties to set\n         * @returns {onnx.AttributeProto} AttributeProto instance\n         */\n        AttributeProto.create = function create(properties) {\n            return new AttributeProto(properties);\n        };\n\n        /**\n         * Encodes the specified AttributeProto message. Does not implicitly {@link onnx.AttributeProto.verify|verify} messages.\n         * @function encode\n         * @memberof onnx.AttributeProto\n         * @static\n         * @param {onnx.IAttributeProto} message AttributeProto message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        AttributeProto.encode = function encode(message, writer) {\n            if (!writer)\n                writer = $Writer.create();\n            if (message.name != null && message.hasOwnProperty(\"name\"))\n                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);\n            if (message.f != null && message.hasOwnProperty(\"f\"))\n                writer.uint32(/* id 2, wireType 5 =*/21).float(message.f);\n            if (message.i != null && message.hasOwnProperty(\"i\"))\n                writer.uint32(/* id 3, wireType 0 =*/24).int64(message.i);\n            if (message.s != null && message.hasOwnProperty(\"s\"))\n                writer.uint32(/* id 4, wireType 2 =*/34).bytes(message.s);\n            if (message.t != null && message.hasOwnProperty(\"t\"))\n                $root.onnx.TensorProto.encode(message.t, writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();\n            if (message.g != null && message.hasOwnProperty(\"g\"))\n                $root.onnx.GraphProto.encode(message.g, writer.uint32(/* id 6, wireType 2 =*/50).fork()).ldelim();\n            if (message.floats != null && message.floats.length) {\n                writer.uint32(/* id 7, wireType 2 =*/58).fork();\n                for (var i = 0; i < message.floats.length; ++i)\n                    writer.float(message.floats[i]);\n                writer.ldelim();\n            }\n            if (message.ints != null && message.ints.length) {\n                writer.uint32(/* id 8, wireType 2 =*/66).fork();\n                for (var i = 0; i < message.ints.length; ++i)\n                    writer.int64(message.ints[i]);\n                writer.ldelim();\n            }\n            if (message.strings != null && message.strings.length)\n                for (var i = 0; i < message.strings.length; ++i)\n                    writer.uint32(/* id 9, wireType 2 =*/74).bytes(message.strings[i]);\n            if (message.tensors != null && message.tensors.length)\n                for (var i = 0; i < message.tensors.length; ++i)\n                    $root.onnx.TensorProto.encode(message.tensors[i], writer.uint32(/* id 10, wireType 2 =*/82).fork()).ldelim();\n            if (message.graphs != null && message.graphs.length)\n                for (var i = 0; i < message.graphs.length; ++i)\n                    $root.onnx.GraphProto.encode(message.graphs[i], writer.uint32(/* id 11, wireType 2 =*/90).fork()).ldelim();\n            if (message.docString != null && message.hasOwnProperty(\"docString\"))\n                writer.uint32(/* id 13, wireType 2 =*/106).string(message.docString);\n            if (message.type != null && message.hasOwnProperty(\"type\"))\n                writer.uint32(/* id 20, wireType 0 =*/160).int32(message.type);\n            if (message.refAttrName != null && message.hasOwnProperty(\"refAttrName\"))\n                writer.uint32(/* id 21, wireType 2 =*/170).string(message.refAttrName);\n            return writer;\n        };\n\n        /**\n         * Encodes the specified AttributeProto message, length delimited. Does not implicitly {@link onnx.AttributeProto.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof onnx.AttributeProto\n         * @static\n         * @param {onnx.IAttributeProto} message AttributeProto message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        AttributeProto.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes an AttributeProto message from the specified reader or buffer.\n         * @function decode\n         * @memberof onnx.AttributeProto\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {onnx.AttributeProto} AttributeProto\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        AttributeProto.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader))\n                reader = $Reader.create(reader);\n            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.onnx.AttributeProto();\n            while (reader.pos < end) {\n                var tag = reader.uint32();\n                switch (tag >>> 3) {\n                case 1:\n                    message.name = reader.string();\n                    break;\n                case 21:\n                    message.refAttrName = reader.string();\n                    break;\n                case 13:\n                    message.docString = reader.string();\n                    break;\n                case 20:\n                    message.type = reader.int32();\n                    break;\n                case 2:\n                    message.f = reader.float();\n                    break;\n                case 3:\n                    message.i = reader.int64();\n                    break;\n                case 4:\n                    message.s = reader.bytes();\n                    break;\n                case 5:\n                    message.t = $root.onnx.TensorProto.decode(reader, reader.uint32());\n                    break;\n                case 6:\n                    message.g = $root.onnx.GraphProto.decode(reader, reader.uint32());\n                    break;\n                case 7:\n                    if (!(message.floats && message.floats.length))\n                        message.floats = [];\n                    if ((tag & 7) === 2) {\n                        var end2 = reader.uint32() + reader.pos;\n                        while (reader.pos < end2)\n                            message.floats.push(reader.float());\n                    } else\n                        message.floats.push(reader.float());\n                    break;\n                case 8:\n                    if (!(message.ints && message.ints.length))\n                        message.ints = [];\n                    if ((tag & 7) === 2) {\n                        var end2 = reader.uint32() + reader.pos;\n                        while (reader.pos < end2)\n                            message.ints.push(reader.int64());\n                    } else\n                        message.ints.push(reader.int64());\n                    break;\n                case 9:\n                    if (!(message.strings && message.strings.length))\n                        message.strings = [];\n                    message.strings.push(reader.bytes());\n                    break;\n                case 10:\n                    if (!(message.tensors && message.tensors.length))\n                        message.tensors = [];\n                    message.tensors.push($root.onnx.TensorProto.decode(reader, reader.uint32()));\n                    break;\n                case 11:\n                    if (!(message.graphs && message.graphs.length))\n                        message.graphs = [];\n                    message.graphs.push($root.onnx.GraphProto.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Decodes an AttributeProto message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof onnx.AttributeProto\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {onnx.AttributeProto} AttributeProto\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        AttributeProto.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        /**\n         * Verifies an AttributeProto message.\n         * @function verify\n         * @memberof onnx.AttributeProto\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n        AttributeProto.verify = function verify(message) {\n            if (typeof message !== \"object\" || message === null)\n                return \"object expected\";\n            if (message.name != null && message.hasOwnProperty(\"name\"))\n                if (!$util.isString(message.name))\n                    return \"name: string expected\";\n            if (message.refAttrName != null && message.hasOwnProperty(\"refAttrName\"))\n                if (!$util.isString(message.refAttrName))\n                    return \"refAttrName: string expected\";\n            if (message.docString != null && message.hasOwnProperty(\"docString\"))\n                if (!$util.isString(message.docString))\n                    return \"docString: string expected\";\n            if (message.type != null && message.hasOwnProperty(\"type\"))\n                switch (message.type) {\n                default:\n                    return \"type: enum value expected\";\n                case 0:\n                case 1:\n                case 2:\n                case 3:\n                case 4:\n                case 5:\n                case 6:\n                case 7:\n                case 8:\n                case 9:\n                case 10:\n                    break;\n                }\n            if (message.f != null && message.hasOwnProperty(\"f\"))\n                if (typeof message.f !== \"number\")\n                    return \"f: number expected\";\n            if (message.i != null && message.hasOwnProperty(\"i\"))\n                if (!$util.isInteger(message.i) && !(message.i && $util.isInteger(message.i.low) && $util.isInteger(message.i.high)))\n                    return \"i: integer|Long expected\";\n            if (message.s != null && message.hasOwnProperty(\"s\"))\n                if (!(message.s && typeof message.s.length === \"number\" || $util.isString(message.s)))\n                    return \"s: buffer expected\";\n            if (message.t != null && message.hasOwnProperty(\"t\")) {\n                var error = $root.onnx.TensorProto.verify(message.t);\n                if (error)\n                    return \"t.\" + error;\n            }\n            if (message.g != null && message.hasOwnProperty(\"g\")) {\n                var error = $root.onnx.GraphProto.verify(message.g);\n                if (error)\n                    return \"g.\" + error;\n            }\n            if (message.floats != null && message.hasOwnProperty(\"floats\")) {\n                if (!Array.isArray(message.floats))\n                    return \"floats: array expected\";\n                for (var i = 0; i < message.floats.length; ++i)\n                    if (typeof message.floats[i] !== \"number\")\n                        return \"floats: number[] expected\";\n            }\n            if (message.ints != null && message.hasOwnProperty(\"ints\")) {\n                if (!Array.isArray(message.ints))\n                    return \"ints: array expected\";\n                for (var i = 0; i < message.ints.length; ++i)\n                    if (!$util.isInteger(message.ints[i]) && !(message.ints[i] && $util.isInteger(message.ints[i].low) && $util.isInteger(message.ints[i].high)))\n                        return \"ints: integer|Long[] expected\";\n            }\n            if (message.strings != null && message.hasOwnProperty(\"strings\")) {\n                if (!Array.isArray(message.strings))\n                    return \"strings: array expected\";\n                for (var i = 0; i < message.strings.length; ++i)\n                    if (!(message.strings[i] && typeof message.strings[i].length === \"number\" || $util.isString(message.strings[i])))\n                        return \"strings: buffer[] expected\";\n            }\n            if (message.tensors != null && message.hasOwnProperty(\"tensors\")) {\n                if (!Array.isArray(message.tensors))\n                    return \"tensors: array expected\";\n                for (var i = 0; i < message.tensors.length; ++i) {\n                    var error = $root.onnx.TensorProto.verify(message.tensors[i]);\n                    if (error)\n                        return \"tensors.\" + error;\n                }\n            }\n            if (message.graphs != null && message.hasOwnProperty(\"graphs\")) {\n                if (!Array.isArray(message.graphs))\n                    return \"graphs: array expected\";\n                for (var i = 0; i < message.graphs.length; ++i) {\n                    var error = $root.onnx.GraphProto.verify(message.graphs[i]);\n                    if (error)\n                        return \"graphs.\" + error;\n                }\n            }\n            return null;\n        };\n\n        /**\n         * Creates an AttributeProto message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof onnx.AttributeProto\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {onnx.AttributeProto} AttributeProto\n         */\n        AttributeProto.fromObject = function fromObject(object) {\n            if (object instanceof $root.onnx.AttributeProto)\n                return object;\n            var message = new $root.onnx.AttributeProto();\n            if (object.name != null)\n                message.name = String(object.name);\n            if (object.refAttrName != null)\n                message.refAttrName = String(object.refAttrName);\n            if (object.docString != null)\n                message.docString = String(object.docString);\n            switch (object.type) {\n            case \"UNDEFINED\":\n            case 0:\n                message.type = 0;\n                break;\n            case \"FLOAT\":\n            case 1:\n                message.type = 1;\n                break;\n            case \"INT\":\n            case 2:\n                message.type = 2;\n                break;\n            case \"STRING\":\n            case 3:\n                message.type = 3;\n                break;\n            case \"TENSOR\":\n            case 4:\n                message.type = 4;\n                break;\n            case \"GRAPH\":\n            case 5:\n                message.type = 5;\n                break;\n            case \"FLOATS\":\n            case 6:\n                message.type = 6;\n                break;\n            case \"INTS\":\n            case 7:\n                message.type = 7;\n                break;\n            case \"STRINGS\":\n            case 8:\n                message.type = 8;\n                break;\n            case \"TENSORS\":\n            case 9:\n                message.type = 9;\n                break;\n            case \"GRAPHS\":\n            case 10:\n                message.type = 10;\n                break;\n            }\n            if (object.f != null)\n                message.f = Number(object.f);\n            if (object.i != null)\n                if ($util.Long)\n                    (message.i = $util.Long.fromValue(object.i)).unsigned = false;\n                else if (typeof object.i === \"string\")\n                    message.i = parseInt(object.i, 10);\n                else if (typeof object.i === \"number\")\n                    message.i = object.i;\n                else if (typeof object.i === \"object\")\n                    message.i = new $util.LongBits(object.i.low >>> 0, object.i.high >>> 0).toNumber();\n            if (object.s != null)\n                if (typeof object.s === \"string\")\n                    $util.base64.decode(object.s, message.s = $util.newBuffer($util.base64.length(object.s)), 0);\n                else if (object.s.length)\n                    message.s = object.s;\n            if (object.t != null) {\n                if (typeof object.t !== \"object\")\n                    throw TypeError(\".onnx.AttributeProto.t: object expected\");\n                message.t = $root.onnx.TensorProto.fromObject(object.t);\n            }\n            if (object.g != null) {\n                if (typeof object.g !== \"object\")\n                    throw TypeError(\".onnx.AttributeProto.g: object expected\");\n                message.g = $root.onnx.GraphProto.fromObject(object.g);\n            }\n            if (object.floats) {\n                if (!Array.isArray(object.floats))\n                    throw TypeError(\".onnx.AttributeProto.floats: array expected\");\n                message.floats = [];\n                for (var i = 0; i < object.floats.length; ++i)\n                    message.floats[i] = Number(object.floats[i]);\n            }\n            if (object.ints) {\n                if (!Array.isArray(object.ints))\n                    throw TypeError(\".onnx.AttributeProto.ints: array expected\");\n                message.ints = [];\n                for (var i = 0; i < object.ints.length; ++i)\n                    if ($util.Long)\n                        (message.ints[i] = $util.Long.fromValue(object.ints[i])).unsigned = false;\n                    else if (typeof object.ints[i] === \"string\")\n                        message.ints[i] = parseInt(object.ints[i], 10);\n                    else if (typeof object.ints[i] === \"number\")\n                        message.ints[i] = object.ints[i];\n                    else if (typeof object.ints[i] === \"object\")\n                        message.ints[i] = new $util.LongBits(object.ints[i].low >>> 0, object.ints[i].high >>> 0).toNumber();\n            }\n            if (object.strings) {\n                if (!Array.isArray(object.strings))\n                    throw TypeError(\".onnx.AttributeProto.strings: array expected\");\n                message.strings = [];\n                for (var i = 0; i < object.strings.length; ++i)\n                    if (typeof object.strings[i] === \"string\")\n                        $util.base64.decode(object.strings[i], message.strings[i] = $util.newBuffer($util.base64.length(object.strings[i])), 0);\n                    else if (object.strings[i].length)\n                        message.strings[i] = object.strings[i];\n            }\n            if (object.tensors) {\n                if (!Array.isArray(object.tensors))\n                    throw TypeError(\".onnx.AttributeProto.tensors: array expected\");\n                message.tensors = [];\n                for (var i = 0; i < object.tensors.length; ++i) {\n                    if (typeof object.tensors[i] !== \"object\")\n                        throw TypeError(\".onnx.AttributeProto.tensors: object expected\");\n                    message.tensors[i] = $root.onnx.TensorProto.fromObject(object.tensors[i]);\n                }\n            }\n            if (object.graphs) {\n                if (!Array.isArray(object.graphs))\n                    throw TypeError(\".onnx.AttributeProto.graphs: array expected\");\n                message.graphs = [];\n                for (var i = 0; i < object.graphs.length; ++i) {\n                    if (typeof object.graphs[i] !== \"object\")\n                        throw TypeError(\".onnx.AttributeProto.graphs: object expected\");\n                    message.graphs[i] = $root.onnx.GraphProto.fromObject(object.graphs[i]);\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Creates a plain object from an AttributeProto message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof onnx.AttributeProto\n         * @static\n         * @param {onnx.AttributeProto} message AttributeProto\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        AttributeProto.toObject = function toObject(message, options) {\n            if (!options)\n                options = {};\n            var object = {};\n            if (options.arrays || options.defaults) {\n                object.floats = [];\n                object.ints = [];\n                object.strings = [];\n                object.tensors = [];\n                object.graphs = [];\n            }\n            if (options.defaults) {\n                object.name = \"\";\n                object.f = 0;\n                if ($util.Long) {\n                    var long = new $util.Long(0, 0, false);\n                    object.i = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;\n                } else\n                    object.i = options.longs === String ? \"0\" : 0;\n                if (options.bytes === String)\n                    object.s = \"\";\n                else {\n                    object.s = [];\n                    if (options.bytes !== Array)\n                        object.s = $util.newBuffer(object.s);\n                }\n                object.t = null;\n                object.g = null;\n                object.docString = \"\";\n                object.type = options.enums === String ? \"UNDEFINED\" : 0;\n                object.refAttrName = \"\";\n            }\n            if (message.name != null && message.hasOwnProperty(\"name\"))\n                object.name = message.name;\n            if (message.f != null && message.hasOwnProperty(\"f\"))\n                object.f = options.json && !isFinite(message.f) ? String(message.f) : message.f;\n            if (message.i != null && message.hasOwnProperty(\"i\"))\n                if (typeof message.i === \"number\")\n                    object.i = options.longs === String ? String(message.i) : message.i;\n                else\n                    object.i = options.longs === String ? $util.Long.prototype.toString.call(message.i) : options.longs === Number ? new $util.LongBits(message.i.low >>> 0, message.i.high >>> 0).toNumber() : message.i;\n            if (message.s != null && message.hasOwnProperty(\"s\"))\n                object.s = options.bytes === String ? $util.base64.encode(message.s, 0, message.s.length) : options.bytes === Array ? Array.prototype.slice.call(message.s) : message.s;\n            if (message.t != null && message.hasOwnProperty(\"t\"))\n                object.t = $root.onnx.TensorProto.toObject(message.t, options);\n            if (message.g != null && message.hasOwnProperty(\"g\"))\n                object.g = $root.onnx.GraphProto.toObject(message.g, options);\n            if (message.floats && message.floats.length) {\n                object.floats = [];\n                for (var j = 0; j < message.floats.length; ++j)\n                    object.floats[j] = options.json && !isFinite(message.floats[j]) ? String(message.floats[j]) : message.floats[j];\n            }\n            if (message.ints && message.ints.length) {\n                object.ints = [];\n                for (var j = 0; j < message.ints.length; ++j)\n                    if (typeof message.ints[j] === \"number\")\n                        object.ints[j] = options.longs === String ? String(message.ints[j]) : message.ints[j];\n                    else\n                        object.ints[j] = options.longs === String ? $util.Long.prototype.toString.call(message.ints[j]) : options.longs === Number ? new $util.LongBits(message.ints[j].low >>> 0, message.ints[j].high >>> 0).toNumber() : message.ints[j];\n            }\n            if (message.strings && message.strings.length) {\n                object.strings = [];\n                for (var j = 0; j < message.strings.length; ++j)\n                    object.strings[j] = options.bytes === String ? $util.base64.encode(message.strings[j], 0, message.strings[j].length) : options.bytes === Array ? Array.prototype.slice.call(message.strings[j]) : message.strings[j];\n            }\n            if (message.tensors && message.tensors.length) {\n                object.tensors = [];\n                for (var j = 0; j < message.tensors.length; ++j)\n                    object.tensors[j] = $root.onnx.TensorProto.toObject(message.tensors[j], options);\n            }\n            if (message.graphs && message.graphs.length) {\n                object.graphs = [];\n                for (var j = 0; j < message.graphs.length; ++j)\n                    object.graphs[j] = $root.onnx.GraphProto.toObject(message.graphs[j], options);\n            }\n            if (message.docString != null && message.hasOwnProperty(\"docString\"))\n                object.docString = message.docString;\n            if (message.type != null && message.hasOwnProperty(\"type\"))\n                object.type = options.enums === String ? $root.onnx.AttributeProto.AttributeType[message.type] : message.type;\n            if (message.refAttrName != null && message.hasOwnProperty(\"refAttrName\"))\n                object.refAttrName = message.refAttrName;\n            return object;\n        };\n\n        /**\n         * Converts this AttributeProto to JSON.\n         * @function toJSON\n         * @memberof onnx.AttributeProto\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        AttributeProto.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        /**\n         * AttributeType enum.\n         * @name onnx.AttributeProto.AttributeType\n         * @enum {string}\n         * @property {number} UNDEFINED=0 UNDEFINED value\n         * @property {number} FLOAT=1 FLOAT value\n         * @property {number} INT=2 INT value\n         * @property {number} STRING=3 STRING value\n         * @property {number} TENSOR=4 TENSOR value\n         * @property {number} GRAPH=5 GRAPH value\n         * @property {number} FLOATS=6 FLOATS value\n         * @property {number} INTS=7 INTS value\n         * @property {number} STRINGS=8 STRINGS value\n         * @property {number} TENSORS=9 TENSORS value\n         * @property {number} GRAPHS=10 GRAPHS value\n         */\n        AttributeProto.AttributeType = (function() {\n            var valuesById = {}, values = Object.create(valuesById);\n            values[valuesById[0] = \"UNDEFINED\"] = 0;\n            values[valuesById[1] = \"FLOAT\"] = 1;\n            values[valuesById[2] = \"INT\"] = 2;\n            values[valuesById[3] = \"STRING\"] = 3;\n            values[valuesById[4] = \"TENSOR\"] = 4;\n            values[valuesById[5] = \"GRAPH\"] = 5;\n            values[valuesById[6] = \"FLOATS\"] = 6;\n            values[valuesById[7] = \"INTS\"] = 7;\n            values[valuesById[8] = \"STRINGS\"] = 8;\n            values[valuesById[9] = \"TENSORS\"] = 9;\n            values[valuesById[10] = \"GRAPHS\"] = 10;\n            return values;\n        })();\n\n        return AttributeProto;\n    })();\n\n    onnx.ValueInfoProto = (function() {\n\n        /**\n         * Properties of a ValueInfoProto.\n         * @memberof onnx\n         * @interface IValueInfoProto\n         * @property {string|null} [name] ValueInfoProto name\n         * @property {onnx.ITypeProto|null} [type] ValueInfoProto type\n         * @property {string|null} [docString] ValueInfoProto docString\n         */\n\n        /**\n         * Constructs a new ValueInfoProto.\n         * @memberof onnx\n         * @classdesc Represents a ValueInfoProto.\n         * @implements IValueInfoProto\n         * @constructor\n         * @param {onnx.IValueInfoProto=} [properties] Properties to set\n         */\n        function ValueInfoProto(properties) {\n            if (properties)\n                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                    if (properties[keys[i]] != null)\n                        this[keys[i]] = properties[keys[i]];\n        }\n\n        /**\n         * ValueInfoProto name.\n         * @member {string} name\n         * @memberof onnx.ValueInfoProto\n         * @instance\n         */\n        ValueInfoProto.prototype.name = \"\";\n\n        /**\n         * ValueInfoProto type.\n         * @member {onnx.ITypeProto|null|undefined} type\n         * @memberof onnx.ValueInfoProto\n         * @instance\n         */\n        ValueInfoProto.prototype.type = null;\n\n        /**\n         * ValueInfoProto docString.\n         * @member {string} docString\n         * @memberof onnx.ValueInfoProto\n         * @instance\n         */\n        ValueInfoProto.prototype.docString = \"\";\n\n        /**\n         * Creates a new ValueInfoProto instance using the specified properties.\n         * @function create\n         * @memberof onnx.ValueInfoProto\n         * @static\n         * @param {onnx.IValueInfoProto=} [properties] Properties to set\n         * @returns {onnx.ValueInfoProto} ValueInfoProto instance\n         */\n        ValueInfoProto.create = function create(properties) {\n            return new ValueInfoProto(properties);\n        };\n\n        /**\n         * Encodes the specified ValueInfoProto message. Does not implicitly {@link onnx.ValueInfoProto.verify|verify} messages.\n         * @function encode\n         * @memberof onnx.ValueInfoProto\n         * @static\n         * @param {onnx.IValueInfoProto} message ValueInfoProto message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        ValueInfoProto.encode = function encode(message, writer) {\n            if (!writer)\n                writer = $Writer.create();\n            if (message.name != null && message.hasOwnProperty(\"name\"))\n                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);\n            if (message.type != null && message.hasOwnProperty(\"type\"))\n                $root.onnx.TypeProto.encode(message.type, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();\n            if (message.docString != null && message.hasOwnProperty(\"docString\"))\n                writer.uint32(/* id 3, wireType 2 =*/26).string(message.docString);\n            return writer;\n        };\n\n        /**\n         * Encodes the specified ValueInfoProto message, length delimited. Does not implicitly {@link onnx.ValueInfoProto.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof onnx.ValueInfoProto\n         * @static\n         * @param {onnx.IValueInfoProto} message ValueInfoProto message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        ValueInfoProto.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a ValueInfoProto message from the specified reader or buffer.\n         * @function decode\n         * @memberof onnx.ValueInfoProto\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {onnx.ValueInfoProto} ValueInfoProto\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        ValueInfoProto.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader))\n                reader = $Reader.create(reader);\n            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.onnx.ValueInfoProto();\n            while (reader.pos < end) {\n                var tag = reader.uint32();\n                switch (tag >>> 3) {\n                case 1:\n                    message.name = reader.string();\n                    break;\n                case 2:\n                    message.type = $root.onnx.TypeProto.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.docString = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Decodes a ValueInfoProto message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof onnx.ValueInfoProto\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {onnx.ValueInfoProto} ValueInfoProto\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        ValueInfoProto.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        /**\n         * Verifies a ValueInfoProto message.\n         * @function verify\n         * @memberof onnx.ValueInfoProto\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n        ValueInfoProto.verify = function verify(message) {\n            if (typeof message !== \"object\" || message === null)\n                return \"object expected\";\n            if (message.name != null && message.hasOwnProperty(\"name\"))\n                if (!$util.isString(message.name))\n                    return \"name: string expected\";\n            if (message.type != null && message.hasOwnProperty(\"type\")) {\n                var error = $root.onnx.TypeProto.verify(message.type);\n                if (error)\n                    return \"type.\" + error;\n            }\n            if (message.docString != null && message.hasOwnProperty(\"docString\"))\n                if (!$util.isString(message.docString))\n                    return \"docString: string expected\";\n            return null;\n        };\n\n        /**\n         * Creates a ValueInfoProto message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof onnx.ValueInfoProto\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {onnx.ValueInfoProto} ValueInfoProto\n         */\n        ValueInfoProto.fromObject = function fromObject(object) {\n            if (object instanceof $root.onnx.ValueInfoProto)\n                return object;\n            var message = new $root.onnx.ValueInfoProto();\n            if (object.name != null)\n                message.name = String(object.name);\n            if (object.type != null) {\n                if (typeof object.type !== \"object\")\n                    throw TypeError(\".onnx.ValueInfoProto.type: object expected\");\n                message.type = $root.onnx.TypeProto.fromObject(object.type);\n            }\n            if (object.docString != null)\n                message.docString = String(object.docString);\n            return message;\n        };\n\n        /**\n         * Creates a plain object from a ValueInfoProto message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof onnx.ValueInfoProto\n         * @static\n         * @param {onnx.ValueInfoProto} message ValueInfoProto\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        ValueInfoProto.toObject = function toObject(message, options) {\n            if (!options)\n                options = {};\n            var object = {};\n            if (options.defaults) {\n                object.name = \"\";\n                object.type = null;\n                object.docString = \"\";\n            }\n            if (message.name != null && message.hasOwnProperty(\"name\"))\n                object.name = message.name;\n            if (message.type != null && message.hasOwnProperty(\"type\"))\n                object.type = $root.onnx.TypeProto.toObject(message.type, options);\n            if (message.docString != null && message.hasOwnProperty(\"docString\"))\n                object.docString = message.docString;\n            return object;\n        };\n\n        /**\n         * Converts this ValueInfoProto to JSON.\n         * @function toJSON\n         * @memberof onnx.ValueInfoProto\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        ValueInfoProto.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        return ValueInfoProto;\n    })();\n\n    onnx.NodeProto = (function() {\n\n        /**\n         * Properties of a NodeProto.\n         * @memberof onnx\n         * @interface INodeProto\n         * @property {Array.<string>|null} [input] NodeProto input\n         * @property {Array.<string>|null} [output] NodeProto output\n         * @property {string|null} [name] NodeProto name\n         * @property {string|null} [opType] NodeProto opType\n         * @property {string|null} [domain] NodeProto domain\n         * @property {Array.<onnx.IAttributeProto>|null} [attribute] NodeProto attribute\n         * @property {string|null} [docString] NodeProto docString\n         */\n\n        /**\n         * Constructs a new NodeProto.\n         * @memberof onnx\n         * @classdesc Represents a NodeProto.\n         * @implements INodeProto\n         * @constructor\n         * @param {onnx.INodeProto=} [properties] Properties to set\n         */\n        function NodeProto(properties) {\n            this.input = [];\n            this.output = [];\n            this.attribute = [];\n            if (properties)\n                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                    if (properties[keys[i]] != null)\n                        this[keys[i]] = properties[keys[i]];\n        }\n\n        /**\n         * NodeProto input.\n         * @member {Array.<string>} input\n         * @memberof onnx.NodeProto\n         * @instance\n         */\n        NodeProto.prototype.input = $util.emptyArray;\n\n        /**\n         * NodeProto output.\n         * @member {Array.<string>} output\n         * @memberof onnx.NodeProto\n         * @instance\n         */\n        NodeProto.prototype.output = $util.emptyArray;\n\n        /**\n         * NodeProto name.\n         * @member {string} name\n         * @memberof onnx.NodeProto\n         * @instance\n         */\n        NodeProto.prototype.name = \"\";\n\n        /**\n         * NodeProto opType.\n         * @member {string} opType\n         * @memberof onnx.NodeProto\n         * @instance\n         */\n        NodeProto.prototype.opType = \"\";\n\n        /**\n         * NodeProto domain.\n         * @member {string} domain\n         * @memberof onnx.NodeProto\n         * @instance\n         */\n        NodeProto.prototype.domain = \"\";\n\n        /**\n         * NodeProto attribute.\n         * @member {Array.<onnx.IAttributeProto>} attribute\n         * @memberof onnx.NodeProto\n         * @instance\n         */\n        NodeProto.prototype.attribute = $util.emptyArray;\n\n        /**\n         * NodeProto docString.\n         * @member {string} docString\n         * @memberof onnx.NodeProto\n         * @instance\n         */\n        NodeProto.prototype.docString = \"\";\n\n        /**\n         * Creates a new NodeProto instance using the specified properties.\n         * @function create\n         * @memberof onnx.NodeProto\n         * @static\n         * @param {onnx.INodeProto=} [properties] Properties to set\n         * @returns {onnx.NodeProto} NodeProto instance\n         */\n        NodeProto.create = function create(properties) {\n            return new NodeProto(properties);\n        };\n\n        /**\n         * Encodes the specified NodeProto message. Does not implicitly {@link onnx.NodeProto.verify|verify} messages.\n         * @function encode\n         * @memberof onnx.NodeProto\n         * @static\n         * @param {onnx.INodeProto} message NodeProto message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        NodeProto.encode = function encode(message, writer) {\n            if (!writer)\n                writer = $Writer.create();\n            if (message.input != null && message.input.length)\n                for (var i = 0; i < message.input.length; ++i)\n                    writer.uint32(/* id 1, wireType 2 =*/10).string(message.input[i]);\n            if (message.output != null && message.output.length)\n                for (var i = 0; i < message.output.length; ++i)\n                    writer.uint32(/* id 2, wireType 2 =*/18).string(message.output[i]);\n            if (message.name != null && message.hasOwnProperty(\"name\"))\n                writer.uint32(/* id 3, wireType 2 =*/26).string(message.name);\n            if (message.opType != null && message.hasOwnProperty(\"opType\"))\n                writer.uint32(/* id 4, wireType 2 =*/34).string(message.opType);\n            if (message.attribute != null && message.attribute.length)\n                for (var i = 0; i < message.attribute.length; ++i)\n                    $root.onnx.AttributeProto.encode(message.attribute[i], writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();\n            if (message.docString != null && message.hasOwnProperty(\"docString\"))\n                writer.uint32(/* id 6, wireType 2 =*/50).string(message.docString);\n            if (message.domain != null && message.hasOwnProperty(\"domain\"))\n                writer.uint32(/* id 7, wireType 2 =*/58).string(message.domain);\n            return writer;\n        };\n\n        /**\n         * Encodes the specified NodeProto message, length delimited. Does not implicitly {@link onnx.NodeProto.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof onnx.NodeProto\n         * @static\n         * @param {onnx.INodeProto} message NodeProto message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        NodeProto.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a NodeProto message from the specified reader or buffer.\n         * @function decode\n         * @memberof onnx.NodeProto\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {onnx.NodeProto} NodeProto\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        NodeProto.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader))\n                reader = $Reader.create(reader);\n            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.onnx.NodeProto();\n            while (reader.pos < end) {\n                var tag = reader.uint32();\n                switch (tag >>> 3) {\n                case 1:\n                    if (!(message.input && message.input.length))\n                        message.input = [];\n                    message.input.push(reader.string());\n                    break;\n                case 2:\n                    if (!(message.output && message.output.length))\n                        message.output = [];\n                    message.output.push(reader.string());\n                    break;\n                case 3:\n                    message.name = reader.string();\n                    break;\n                case 4:\n                    message.opType = reader.string();\n                    break;\n                case 7:\n                    message.domain = reader.string();\n                    break;\n                case 5:\n                    if (!(message.attribute && message.attribute.length))\n                        message.attribute = [];\n                    message.attribute.push($root.onnx.AttributeProto.decode(reader, reader.uint32()));\n                    break;\n                case 6:\n                    message.docString = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Decodes a NodeProto message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof onnx.NodeProto\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {onnx.NodeProto} NodeProto\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        NodeProto.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        /**\n         * Verifies a NodeProto message.\n         * @function verify\n         * @memberof onnx.NodeProto\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n        NodeProto.verify = function verify(message) {\n            if (typeof message !== \"object\" || message === null)\n                return \"object expected\";\n            if (message.input != null && message.hasOwnProperty(\"input\")) {\n                if (!Array.isArray(message.input))\n                    return \"input: array expected\";\n                for (var i = 0; i < message.input.length; ++i)\n                    if (!$util.isString(message.input[i]))\n                        return \"input: string[] expected\";\n            }\n            if (message.output != null && message.hasOwnProperty(\"output\")) {\n                if (!Array.isArray(message.output))\n                    return \"output: array expected\";\n                for (var i = 0; i < message.output.length; ++i)\n                    if (!$util.isString(message.output[i]))\n                        return \"output: string[] expected\";\n            }\n            if (message.name != null && message.hasOwnProperty(\"name\"))\n                if (!$util.isString(message.name))\n                    return \"name: string expected\";\n            if (message.opType != null && message.hasOwnProperty(\"opType\"))\n                if (!$util.isString(message.opType))\n                    return \"opType: string expected\";\n            if (message.domain != null && message.hasOwnProperty(\"domain\"))\n                if (!$util.isString(message.domain))\n                    return \"domain: string expected\";\n            if (message.attribute != null && message.hasOwnProperty(\"attribute\")) {\n                if (!Array.isArray(message.attribute))\n                    return \"attribute: array expected\";\n                for (var i = 0; i < message.attribute.length; ++i) {\n                    var error = $root.onnx.AttributeProto.verify(message.attribute[i]);\n                    if (error)\n                        return \"attribute.\" + error;\n                }\n            }\n            if (message.docString != null && message.hasOwnProperty(\"docString\"))\n                if (!$util.isString(message.docString))\n                    return \"docString: string expected\";\n            return null;\n        };\n\n        /**\n         * Creates a NodeProto message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof onnx.NodeProto\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {onnx.NodeProto} NodeProto\n         */\n        NodeProto.fromObject = function fromObject(object) {\n            if (object instanceof $root.onnx.NodeProto)\n                return object;\n            var message = new $root.onnx.NodeProto();\n            if (object.input) {\n                if (!Array.isArray(object.input))\n                    throw TypeError(\".onnx.NodeProto.input: array expected\");\n                message.input = [];\n                for (var i = 0; i < object.input.length; ++i)\n                    message.input[i] = String(object.input[i]);\n            }\n            if (object.output) {\n                if (!Array.isArray(object.output))\n                    throw TypeError(\".onnx.NodeProto.output: array expected\");\n                message.output = [];\n                for (var i = 0; i < object.output.length; ++i)\n                    message.output[i] = String(object.output[i]);\n            }\n            if (object.name != null)\n                message.name = String(object.name);\n            if (object.opType != null)\n                message.opType = String(object.opType);\n            if (object.domain != null)\n                message.domain = String(object.domain);\n            if (object.attribute) {\n                if (!Array.isArray(object.attribute))\n                    throw TypeError(\".onnx.NodeProto.attribute: array expected\");\n                message.attribute = [];\n                for (var i = 0; i < object.attribute.length; ++i) {\n                    if (typeof object.attribute[i] !== \"object\")\n                        throw TypeError(\".onnx.NodeProto.attribute: object expected\");\n                    message.attribute[i] = $root.onnx.AttributeProto.fromObject(object.attribute[i]);\n                }\n            }\n            if (object.docString != null)\n                message.docString = String(object.docString);\n            return message;\n        };\n\n        /**\n         * Creates a plain object from a NodeProto message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof onnx.NodeProto\n         * @static\n         * @param {onnx.NodeProto} message NodeProto\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        NodeProto.toObject = function toObject(message, options) {\n            if (!options)\n                options = {};\n            var object = {};\n            if (options.arrays || options.defaults) {\n                object.input = [];\n                object.output = [];\n                object.attribute = [];\n            }\n            if (options.defaults) {\n                object.name = \"\";\n                object.opType = \"\";\n                object.docString = \"\";\n                object.domain = \"\";\n            }\n            if (message.input && message.input.length) {\n                object.input = [];\n                for (var j = 0; j < message.input.length; ++j)\n                    object.input[j] = message.input[j];\n            }\n            if (message.output && message.output.length) {\n                object.output = [];\n                for (var j = 0; j < message.output.length; ++j)\n                    object.output[j] = message.output[j];\n            }\n            if (message.name != null && message.hasOwnProperty(\"name\"))\n                object.name = message.name;\n            if (message.opType != null && message.hasOwnProperty(\"opType\"))\n                object.opType = message.opType;\n            if (message.attribute && message.attribute.length) {\n                object.attribute = [];\n                for (var j = 0; j < message.attribute.length; ++j)\n                    object.attribute[j] = $root.onnx.AttributeProto.toObject(message.attribute[j], options);\n            }\n            if (message.docString != null && message.hasOwnProperty(\"docString\"))\n                object.docString = message.docString;\n            if (message.domain != null && message.hasOwnProperty(\"domain\"))\n                object.domain = message.domain;\n            return object;\n        };\n\n        /**\n         * Converts this NodeProto to JSON.\n         * @function toJSON\n         * @memberof onnx.NodeProto\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        NodeProto.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        return NodeProto;\n    })();\n\n    onnx.ModelProto = (function() {\n\n        /**\n         * Properties of a ModelProto.\n         * @memberof onnx\n         * @interface IModelProto\n         * @property {number|Long|null} [irVersion] ModelProto irVersion\n         * @property {Array.<onnx.IOperatorSetIdProto>|null} [opsetImport] ModelProto opsetImport\n         * @property {string|null} [producerName] ModelProto producerName\n         * @property {string|null} [producerVersion] ModelProto producerVersion\n         * @property {string|null} [domain] ModelProto domain\n         * @property {number|Long|null} [modelVersion] ModelProto modelVersion\n         * @property {string|null} [docString] ModelProto docString\n         * @property {onnx.IGraphProto|null} [graph] ModelProto graph\n         * @property {Array.<onnx.IStringStringEntryProto>|null} [metadataProps] ModelProto metadataProps\n         */\n\n        /**\n         * Constructs a new ModelProto.\n         * @memberof onnx\n         * @classdesc Represents a ModelProto.\n         * @implements IModelProto\n         * @constructor\n         * @param {onnx.IModelProto=} [properties] Properties to set\n         */\n        function ModelProto(properties) {\n            this.opsetImport = [];\n            this.metadataProps = [];\n            if (properties)\n                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                    if (properties[keys[i]] != null)\n                        this[keys[i]] = properties[keys[i]];\n        }\n\n        /**\n         * ModelProto irVersion.\n         * @member {number|Long} irVersion\n         * @memberof onnx.ModelProto\n         * @instance\n         */\n        ModelProto.prototype.irVersion = $util.Long ? $util.Long.fromBits(0,0,false) : 0;\n\n        /**\n         * ModelProto opsetImport.\n         * @member {Array.<onnx.IOperatorSetIdProto>} opsetImport\n         * @memberof onnx.ModelProto\n         * @instance\n         */\n        ModelProto.prototype.opsetImport = $util.emptyArray;\n\n        /**\n         * ModelProto producerName.\n         * @member {string} producerName\n         * @memberof onnx.ModelProto\n         * @instance\n         */\n        ModelProto.prototype.producerName = \"\";\n\n        /**\n         * ModelProto producerVersion.\n         * @member {string} producerVersion\n         * @memberof onnx.ModelProto\n         * @instance\n         */\n        ModelProto.prototype.producerVersion = \"\";\n\n        /**\n         * ModelProto domain.\n         * @member {string} domain\n         * @memberof onnx.ModelProto\n         * @instance\n         */\n        ModelProto.prototype.domain = \"\";\n\n        /**\n         * ModelProto modelVersion.\n         * @member {number|Long} modelVersion\n         * @memberof onnx.ModelProto\n         * @instance\n         */\n        ModelProto.prototype.modelVersion = $util.Long ? $util.Long.fromBits(0,0,false) : 0;\n\n        /**\n         * ModelProto docString.\n         * @member {string} docString\n         * @memberof onnx.ModelProto\n         * @instance\n         */\n        ModelProto.prototype.docString = \"\";\n\n        /**\n         * ModelProto graph.\n         * @member {onnx.IGraphProto|null|undefined} graph\n         * @memberof onnx.ModelProto\n         * @instance\n         */\n        ModelProto.prototype.graph = null;\n\n        /**\n         * ModelProto metadataProps.\n         * @member {Array.<onnx.IStringStringEntryProto>} metadataProps\n         * @memberof onnx.ModelProto\n         * @instance\n         */\n        ModelProto.prototype.metadataProps = $util.emptyArray;\n\n        /**\n         * Creates a new ModelProto instance using the specified properties.\n         * @function create\n         * @memberof onnx.ModelProto\n         * @static\n         * @param {onnx.IModelProto=} [properties] Properties to set\n         * @returns {onnx.ModelProto} ModelProto instance\n         */\n        ModelProto.create = function create(properties) {\n            return new ModelProto(properties);\n        };\n\n        /**\n         * Encodes the specified ModelProto message. Does not implicitly {@link onnx.ModelProto.verify|verify} messages.\n         * @function encode\n         * @memberof onnx.ModelProto\n         * @static\n         * @param {onnx.IModelProto} message ModelProto message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        ModelProto.encode = function encode(message, writer) {\n            if (!writer)\n                writer = $Writer.create();\n            if (message.irVersion != null && message.hasOwnProperty(\"irVersion\"))\n                writer.uint32(/* id 1, wireType 0 =*/8).int64(message.irVersion);\n            if (message.producerName != null && message.hasOwnProperty(\"producerName\"))\n                writer.uint32(/* id 2, wireType 2 =*/18).string(message.producerName);\n            if (message.producerVersion != null && message.hasOwnProperty(\"producerVersion\"))\n                writer.uint32(/* id 3, wireType 2 =*/26).string(message.producerVersion);\n            if (message.domain != null && message.hasOwnProperty(\"domain\"))\n                writer.uint32(/* id 4, wireType 2 =*/34).string(message.domain);\n            if (message.modelVersion != null && message.hasOwnProperty(\"modelVersion\"))\n                writer.uint32(/* id 5, wireType 0 =*/40).int64(message.modelVersion);\n            if (message.docString != null && message.hasOwnProperty(\"docString\"))\n                writer.uint32(/* id 6, wireType 2 =*/50).string(message.docString);\n            if (message.graph != null && message.hasOwnProperty(\"graph\"))\n                $root.onnx.GraphProto.encode(message.graph, writer.uint32(/* id 7, wireType 2 =*/58).fork()).ldelim();\n            if (message.opsetImport != null && message.opsetImport.length)\n                for (var i = 0; i < message.opsetImport.length; ++i)\n                    $root.onnx.OperatorSetIdProto.encode(message.opsetImport[i], writer.uint32(/* id 8, wireType 2 =*/66).fork()).ldelim();\n            if (message.metadataProps != null && message.metadataProps.length)\n                for (var i = 0; i < message.metadataProps.length; ++i)\n                    $root.onnx.StringStringEntryProto.encode(message.metadataProps[i], writer.uint32(/* id 14, wireType 2 =*/114).fork()).ldelim();\n            return writer;\n        };\n\n        /**\n         * Encodes the specified ModelProto message, length delimited. Does not implicitly {@link onnx.ModelProto.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof onnx.ModelProto\n         * @static\n         * @param {onnx.IModelProto} message ModelProto message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        ModelProto.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a ModelProto message from the specified reader or buffer.\n         * @function decode\n         * @memberof onnx.ModelProto\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {onnx.ModelProto} ModelProto\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        ModelProto.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader))\n                reader = $Reader.create(reader);\n            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.onnx.ModelProto();\n            while (reader.pos < end) {\n                var tag = reader.uint32();\n                switch (tag >>> 3) {\n                case 1:\n                    message.irVersion = reader.int64();\n                    break;\n                case 8:\n                    if (!(message.opsetImport && message.opsetImport.length))\n                        message.opsetImport = [];\n                    message.opsetImport.push($root.onnx.OperatorSetIdProto.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.producerName = reader.string();\n                    break;\n                case 3:\n                    message.producerVersion = reader.string();\n                    break;\n                case 4:\n                    message.domain = reader.string();\n                    break;\n                case 5:\n                    message.modelVersion = reader.int64();\n                    break;\n                case 6:\n                    message.docString = reader.string();\n                    break;\n                case 7:\n                    message.graph = $root.onnx.GraphProto.decode(reader, reader.uint32());\n                    break;\n                case 14:\n                    if (!(message.metadataProps && message.metadataProps.length))\n                        message.metadataProps = [];\n                    message.metadataProps.push($root.onnx.StringStringEntryProto.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Decodes a ModelProto message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof onnx.ModelProto\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {onnx.ModelProto} ModelProto\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        ModelProto.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        /**\n         * Verifies a ModelProto message.\n         * @function verify\n         * @memberof onnx.ModelProto\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n        ModelProto.verify = function verify(message) {\n            if (typeof message !== \"object\" || message === null)\n                return \"object expected\";\n            if (message.irVersion != null && message.hasOwnProperty(\"irVersion\"))\n                if (!$util.isInteger(message.irVersion) && !(message.irVersion && $util.isInteger(message.irVersion.low) && $util.isInteger(message.irVersion.high)))\n                    return \"irVersion: integer|Long expected\";\n            if (message.opsetImport != null && message.hasOwnProperty(\"opsetImport\")) {\n                if (!Array.isArray(message.opsetImport))\n                    return \"opsetImport: array expected\";\n                for (var i = 0; i < message.opsetImport.length; ++i) {\n                    var error = $root.onnx.OperatorSetIdProto.verify(message.opsetImport[i]);\n                    if (error)\n                        return \"opsetImport.\" + error;\n                }\n            }\n            if (message.producerName != null && message.hasOwnProperty(\"producerName\"))\n                if (!$util.isString(message.producerName))\n                    return \"producerName: string expected\";\n            if (message.producerVersion != null && message.hasOwnProperty(\"producerVersion\"))\n                if (!$util.isString(message.producerVersion))\n                    return \"producerVersion: string expected\";\n            if (message.domain != null && message.hasOwnProperty(\"domain\"))\n                if (!$util.isString(message.domain))\n                    return \"domain: string expected\";\n            if (message.modelVersion != null && message.hasOwnProperty(\"modelVersion\"))\n                if (!$util.isInteger(message.modelVersion) && !(message.modelVersion && $util.isInteger(message.modelVersion.low) && $util.isInteger(message.modelVersion.high)))\n                    return \"modelVersion: integer|Long expected\";\n            if (message.docString != null && message.hasOwnProperty(\"docString\"))\n                if (!$util.isString(message.docString))\n                    return \"docString: string expected\";\n            if (message.graph != null && message.hasOwnProperty(\"graph\")) {\n                var error = $root.onnx.GraphProto.verify(message.graph);\n                if (error)\n                    return \"graph.\" + error;\n            }\n            if (message.metadataProps != null && message.hasOwnProperty(\"metadataProps\")) {\n                if (!Array.isArray(message.metadataProps))\n                    return \"metadataProps: array expected\";\n                for (var i = 0; i < message.metadataProps.length; ++i) {\n                    var error = $root.onnx.StringStringEntryProto.verify(message.metadataProps[i]);\n                    if (error)\n                        return \"metadataProps.\" + error;\n                }\n            }\n            return null;\n        };\n\n        /**\n         * Creates a ModelProto message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof onnx.ModelProto\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {onnx.ModelProto} ModelProto\n         */\n        ModelProto.fromObject = function fromObject(object) {\n            if (object instanceof $root.onnx.ModelProto)\n                return object;\n            var message = new $root.onnx.ModelProto();\n            if (object.irVersion != null)\n                if ($util.Long)\n                    (message.irVersion = $util.Long.fromValue(object.irVersion)).unsigned = false;\n                else if (typeof object.irVersion === \"string\")\n                    message.irVersion = parseInt(object.irVersion, 10);\n                else if (typeof object.irVersion === \"number\")\n                    message.irVersion = object.irVersion;\n                else if (typeof object.irVersion === \"object\")\n                    message.irVersion = new $util.LongBits(object.irVersion.low >>> 0, object.irVersion.high >>> 0).toNumber();\n            if (object.opsetImport) {\n                if (!Array.isArray(object.opsetImport))\n                    throw TypeError(\".onnx.ModelProto.opsetImport: array expected\");\n                message.opsetImport = [];\n                for (var i = 0; i < object.opsetImport.length; ++i) {\n                    if (typeof object.opsetImport[i] !== \"object\")\n                        throw TypeError(\".onnx.ModelProto.opsetImport: object expected\");\n                    message.opsetImport[i] = $root.onnx.OperatorSetIdProto.fromObject(object.opsetImport[i]);\n                }\n            }\n            if (object.producerName != null)\n                message.producerName = String(object.producerName);\n            if (object.producerVersion != null)\n                message.producerVersion = String(object.producerVersion);\n            if (object.domain != null)\n                message.domain = String(object.domain);\n            if (object.modelVersion != null)\n                if ($util.Long)\n                    (message.modelVersion = $util.Long.fromValue(object.modelVersion)).unsigned = false;\n                else if (typeof object.modelVersion === \"string\")\n                    message.modelVersion = parseInt(object.modelVersion, 10);\n                else if (typeof object.modelVersion === \"number\")\n                    message.modelVersion = object.modelVersion;\n                else if (typeof object.modelVersion === \"object\")\n                    message.modelVersion = new $util.LongBits(object.modelVersion.low >>> 0, object.modelVersion.high >>> 0).toNumber();\n            if (object.docString != null)\n                message.docString = String(object.docString);\n            if (object.graph != null) {\n                if (typeof object.graph !== \"object\")\n                    throw TypeError(\".onnx.ModelProto.graph: object expected\");\n                message.graph = $root.onnx.GraphProto.fromObject(object.graph);\n            }\n            if (object.metadataProps) {\n                if (!Array.isArray(object.metadataProps))\n                    throw TypeError(\".onnx.ModelProto.metadataProps: array expected\");\n                message.metadataProps = [];\n                for (var i = 0; i < object.metadataProps.length; ++i) {\n                    if (typeof object.metadataProps[i] !== \"object\")\n                        throw TypeError(\".onnx.ModelProto.metadataProps: object expected\");\n                    message.metadataProps[i] = $root.onnx.StringStringEntryProto.fromObject(object.metadataProps[i]);\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Creates a plain object from a ModelProto message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof onnx.ModelProto\n         * @static\n         * @param {onnx.ModelProto} message ModelProto\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        ModelProto.toObject = function toObject(message, options) {\n            if (!options)\n                options = {};\n            var object = {};\n            if (options.arrays || options.defaults) {\n                object.opsetImport = [];\n                object.metadataProps = [];\n            }\n            if (options.defaults) {\n                if ($util.Long) {\n                    var long = new $util.Long(0, 0, false);\n                    object.irVersion = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;\n                } else\n                    object.irVersion = options.longs === String ? \"0\" : 0;\n                object.producerName = \"\";\n                object.producerVersion = \"\";\n                object.domain = \"\";\n                if ($util.Long) {\n                    var long = new $util.Long(0, 0, false);\n                    object.modelVersion = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;\n                } else\n                    object.modelVersion = options.longs === String ? \"0\" : 0;\n                object.docString = \"\";\n                object.graph = null;\n            }\n            if (message.irVersion != null && message.hasOwnProperty(\"irVersion\"))\n                if (typeof message.irVersion === \"number\")\n                    object.irVersion = options.longs === String ? String(message.irVersion) : message.irVersion;\n                else\n                    object.irVersion = options.longs === String ? $util.Long.prototype.toString.call(message.irVersion) : options.longs === Number ? new $util.LongBits(message.irVersion.low >>> 0, message.irVersion.high >>> 0).toNumber() : message.irVersion;\n            if (message.producerName != null && message.hasOwnProperty(\"producerName\"))\n                object.producerName = message.producerName;\n            if (message.producerVersion != null && message.hasOwnProperty(\"producerVersion\"))\n                object.producerVersion = message.producerVersion;\n            if (message.domain != null && message.hasOwnProperty(\"domain\"))\n                object.domain = message.domain;\n            if (message.modelVersion != null && message.hasOwnProperty(\"modelVersion\"))\n                if (typeof message.modelVersion === \"number\")\n                    object.modelVersion = options.longs === String ? String(message.modelVersion) : message.modelVersion;\n                else\n                    object.modelVersion = options.longs === String ? $util.Long.prototype.toString.call(message.modelVersion) : options.longs === Number ? new $util.LongBits(message.modelVersion.low >>> 0, message.modelVersion.high >>> 0).toNumber() : message.modelVersion;\n            if (message.docString != null && message.hasOwnProperty(\"docString\"))\n                object.docString = message.docString;\n            if (message.graph != null && message.hasOwnProperty(\"graph\"))\n                object.graph = $root.onnx.GraphProto.toObject(message.graph, options);\n            if (message.opsetImport && message.opsetImport.length) {\n                object.opsetImport = [];\n                for (var j = 0; j < message.opsetImport.length; ++j)\n                    object.opsetImport[j] = $root.onnx.OperatorSetIdProto.toObject(message.opsetImport[j], options);\n            }\n            if (message.metadataProps && message.metadataProps.length) {\n                object.metadataProps = [];\n                for (var j = 0; j < message.metadataProps.length; ++j)\n                    object.metadataProps[j] = $root.onnx.StringStringEntryProto.toObject(message.metadataProps[j], options);\n            }\n            return object;\n        };\n\n        /**\n         * Converts this ModelProto to JSON.\n         * @function toJSON\n         * @memberof onnx.ModelProto\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        ModelProto.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        return ModelProto;\n    })();\n\n    onnx.StringStringEntryProto = (function() {\n\n        /**\n         * Properties of a StringStringEntryProto.\n         * @memberof onnx\n         * @interface IStringStringEntryProto\n         * @property {string|null} [key] StringStringEntryProto key\n         * @property {string|null} [value] StringStringEntryProto value\n         */\n\n        /**\n         * Constructs a new StringStringEntryProto.\n         * @memberof onnx\n         * @classdesc Represents a StringStringEntryProto.\n         * @implements IStringStringEntryProto\n         * @constructor\n         * @param {onnx.IStringStringEntryProto=} [properties] Properties to set\n         */\n        function StringStringEntryProto(properties) {\n            if (properties)\n                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                    if (properties[keys[i]] != null)\n                        this[keys[i]] = properties[keys[i]];\n        }\n\n        /**\n         * StringStringEntryProto key.\n         * @member {string} key\n         * @memberof onnx.StringStringEntryProto\n         * @instance\n         */\n        StringStringEntryProto.prototype.key = \"\";\n\n        /**\n         * StringStringEntryProto value.\n         * @member {string} value\n         * @memberof onnx.StringStringEntryProto\n         * @instance\n         */\n        StringStringEntryProto.prototype.value = \"\";\n\n        /**\n         * Creates a new StringStringEntryProto instance using the specified properties.\n         * @function create\n         * @memberof onnx.StringStringEntryProto\n         * @static\n         * @param {onnx.IStringStringEntryProto=} [properties] Properties to set\n         * @returns {onnx.StringStringEntryProto} StringStringEntryProto instance\n         */\n        StringStringEntryProto.create = function create(properties) {\n            return new StringStringEntryProto(properties);\n        };\n\n        /**\n         * Encodes the specified StringStringEntryProto message. Does not implicitly {@link onnx.StringStringEntryProto.verify|verify} messages.\n         * @function encode\n         * @memberof onnx.StringStringEntryProto\n         * @static\n         * @param {onnx.IStringStringEntryProto} message StringStringEntryProto message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        StringStringEntryProto.encode = function encode(message, writer) {\n            if (!writer)\n                writer = $Writer.create();\n            if (message.key != null && message.hasOwnProperty(\"key\"))\n                writer.uint32(/* id 1, wireType 2 =*/10).string(message.key);\n            if (message.value != null && message.hasOwnProperty(\"value\"))\n                writer.uint32(/* id 2, wireType 2 =*/18).string(message.value);\n            return writer;\n        };\n\n        /**\n         * Encodes the specified StringStringEntryProto message, length delimited. Does not implicitly {@link onnx.StringStringEntryProto.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof onnx.StringStringEntryProto\n         * @static\n         * @param {onnx.IStringStringEntryProto} message StringStringEntryProto message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        StringStringEntryProto.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a StringStringEntryProto message from the specified reader or buffer.\n         * @function decode\n         * @memberof onnx.StringStringEntryProto\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {onnx.StringStringEntryProto} StringStringEntryProto\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        StringStringEntryProto.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader))\n                reader = $Reader.create(reader);\n            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.onnx.StringStringEntryProto();\n            while (reader.pos < end) {\n                var tag = reader.uint32();\n                switch (tag >>> 3) {\n                case 1:\n                    message.key = reader.string();\n                    break;\n                case 2:\n                    message.value = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Decodes a StringStringEntryProto message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof onnx.StringStringEntryProto\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {onnx.StringStringEntryProto} StringStringEntryProto\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        StringStringEntryProto.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        /**\n         * Verifies a StringStringEntryProto message.\n         * @function verify\n         * @memberof onnx.StringStringEntryProto\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n        StringStringEntryProto.verify = function verify(message) {\n            if (typeof message !== \"object\" || message === null)\n                return \"object expected\";\n            if (message.key != null && message.hasOwnProperty(\"key\"))\n                if (!$util.isString(message.key))\n                    return \"key: string expected\";\n            if (message.value != null && message.hasOwnProperty(\"value\"))\n                if (!$util.isString(message.value))\n                    return \"value: string expected\";\n            return null;\n        };\n\n        /**\n         * Creates a StringStringEntryProto message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof onnx.StringStringEntryProto\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {onnx.StringStringEntryProto} StringStringEntryProto\n         */\n        StringStringEntryProto.fromObject = function fromObject(object) {\n            if (object instanceof $root.onnx.StringStringEntryProto)\n                return object;\n            var message = new $root.onnx.StringStringEntryProto();\n            if (object.key != null)\n                message.key = String(object.key);\n            if (object.value != null)\n                message.value = String(object.value);\n            return message;\n        };\n\n        /**\n         * Creates a plain object from a StringStringEntryProto message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof onnx.StringStringEntryProto\n         * @static\n         * @param {onnx.StringStringEntryProto} message StringStringEntryProto\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        StringStringEntryProto.toObject = function toObject(message, options) {\n            if (!options)\n                options = {};\n            var object = {};\n            if (options.defaults) {\n                object.key = \"\";\n                object.value = \"\";\n            }\n            if (message.key != null && message.hasOwnProperty(\"key\"))\n                object.key = message.key;\n            if (message.value != null && message.hasOwnProperty(\"value\"))\n                object.value = message.value;\n            return object;\n        };\n\n        /**\n         * Converts this StringStringEntryProto to JSON.\n         * @function toJSON\n         * @memberof onnx.StringStringEntryProto\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        StringStringEntryProto.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        return StringStringEntryProto;\n    })();\n\n    onnx.TensorAnnotation = (function() {\n\n        /**\n         * Properties of a TensorAnnotation.\n         * @memberof onnx\n         * @interface ITensorAnnotation\n         * @property {string|null} [tensorName] TensorAnnotation tensorName\n         * @property {Array.<onnx.IStringStringEntryProto>|null} [quantParameterTensorNames] TensorAnnotation quantParameterTensorNames\n         */\n\n        /**\n         * Constructs a new TensorAnnotation.\n         * @memberof onnx\n         * @classdesc Represents a TensorAnnotation.\n         * @implements ITensorAnnotation\n         * @constructor\n         * @param {onnx.ITensorAnnotation=} [properties] Properties to set\n         */\n        function TensorAnnotation(properties) {\n            this.quantParameterTensorNames = [];\n            if (properties)\n                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                    if (properties[keys[i]] != null)\n                        this[keys[i]] = properties[keys[i]];\n        }\n\n        /**\n         * TensorAnnotation tensorName.\n         * @member {string} tensorName\n         * @memberof onnx.TensorAnnotation\n         * @instance\n         */\n        TensorAnnotation.prototype.tensorName = \"\";\n\n        /**\n         * TensorAnnotation quantParameterTensorNames.\n         * @member {Array.<onnx.IStringStringEntryProto>} quantParameterTensorNames\n         * @memberof onnx.TensorAnnotation\n         * @instance\n         */\n        TensorAnnotation.prototype.quantParameterTensorNames = $util.emptyArray;\n\n        /**\n         * Creates a new TensorAnnotation instance using the specified properties.\n         * @function create\n         * @memberof onnx.TensorAnnotation\n         * @static\n         * @param {onnx.ITensorAnnotation=} [properties] Properties to set\n         * @returns {onnx.TensorAnnotation} TensorAnnotation instance\n         */\n        TensorAnnotation.create = function create(properties) {\n            return new TensorAnnotation(properties);\n        };\n\n        /**\n         * Encodes the specified TensorAnnotation message. Does not implicitly {@link onnx.TensorAnnotation.verify|verify} messages.\n         * @function encode\n         * @memberof onnx.TensorAnnotation\n         * @static\n         * @param {onnx.ITensorAnnotation} message TensorAnnotation message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        TensorAnnotation.encode = function encode(message, writer) {\n            if (!writer)\n                writer = $Writer.create();\n            if (message.tensorName != null && message.hasOwnProperty(\"tensorName\"))\n                writer.uint32(/* id 1, wireType 2 =*/10).string(message.tensorName);\n            if (message.quantParameterTensorNames != null && message.quantParameterTensorNames.length)\n                for (var i = 0; i < message.quantParameterTensorNames.length; ++i)\n                    $root.onnx.StringStringEntryProto.encode(message.quantParameterTensorNames[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();\n            return writer;\n        };\n\n        /**\n         * Encodes the specified TensorAnnotation message, length delimited. Does not implicitly {@link onnx.TensorAnnotation.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof onnx.TensorAnnotation\n         * @static\n         * @param {onnx.ITensorAnnotation} message TensorAnnotation message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        TensorAnnotation.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a TensorAnnotation message from the specified reader or buffer.\n         * @function decode\n         * @memberof onnx.TensorAnnotation\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {onnx.TensorAnnotation} TensorAnnotation\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        TensorAnnotation.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader))\n                reader = $Reader.create(reader);\n            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.onnx.TensorAnnotation();\n            while (reader.pos < end) {\n                var tag = reader.uint32();\n                switch (tag >>> 3) {\n                case 1:\n                    message.tensorName = reader.string();\n                    break;\n                case 2:\n                    if (!(message.quantParameterTensorNames && message.quantParameterTensorNames.length))\n                        message.quantParameterTensorNames = [];\n                    message.quantParameterTensorNames.push($root.onnx.StringStringEntryProto.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Decodes a TensorAnnotation message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof onnx.TensorAnnotation\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {onnx.TensorAnnotation} TensorAnnotation\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        TensorAnnotation.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        /**\n         * Verifies a TensorAnnotation message.\n         * @function verify\n         * @memberof onnx.TensorAnnotation\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n        TensorAnnotation.verify = function verify(message) {\n            if (typeof message !== \"object\" || message === null)\n                return \"object expected\";\n            if (message.tensorName != null && message.hasOwnProperty(\"tensorName\"))\n                if (!$util.isString(message.tensorName))\n                    return \"tensorName: string expected\";\n            if (message.quantParameterTensorNames != null && message.hasOwnProperty(\"quantParameterTensorNames\")) {\n                if (!Array.isArray(message.quantParameterTensorNames))\n                    return \"quantParameterTensorNames: array expected\";\n                for (var i = 0; i < message.quantParameterTensorNames.length; ++i) {\n                    var error = $root.onnx.StringStringEntryProto.verify(message.quantParameterTensorNames[i]);\n                    if (error)\n                        return \"quantParameterTensorNames.\" + error;\n                }\n            }\n            return null;\n        };\n\n        /**\n         * Creates a TensorAnnotation message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof onnx.TensorAnnotation\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {onnx.TensorAnnotation} TensorAnnotation\n         */\n        TensorAnnotation.fromObject = function fromObject(object) {\n            if (object instanceof $root.onnx.TensorAnnotation)\n                return object;\n            var message = new $root.onnx.TensorAnnotation();\n            if (object.tensorName != null)\n                message.tensorName = String(object.tensorName);\n            if (object.quantParameterTensorNames) {\n                if (!Array.isArray(object.quantParameterTensorNames))\n                    throw TypeError(\".onnx.TensorAnnotation.quantParameterTensorNames: array expected\");\n                message.quantParameterTensorNames = [];\n                for (var i = 0; i < object.quantParameterTensorNames.length; ++i) {\n                    if (typeof object.quantParameterTensorNames[i] !== \"object\")\n                        throw TypeError(\".onnx.TensorAnnotation.quantParameterTensorNames: object expected\");\n                    message.quantParameterTensorNames[i] = $root.onnx.StringStringEntryProto.fromObject(object.quantParameterTensorNames[i]);\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Creates a plain object from a TensorAnnotation message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof onnx.TensorAnnotation\n         * @static\n         * @param {onnx.TensorAnnotation} message TensorAnnotation\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        TensorAnnotation.toObject = function toObject(message, options) {\n            if (!options)\n                options = {};\n            var object = {};\n            if (options.arrays || options.defaults)\n                object.quantParameterTensorNames = [];\n            if (options.defaults)\n                object.tensorName = \"\";\n            if (message.tensorName != null && message.hasOwnProperty(\"tensorName\"))\n                object.tensorName = message.tensorName;\n            if (message.quantParameterTensorNames && message.quantParameterTensorNames.length) {\n                object.quantParameterTensorNames = [];\n                for (var j = 0; j < message.quantParameterTensorNames.length; ++j)\n                    object.quantParameterTensorNames[j] = $root.onnx.StringStringEntryProto.toObject(message.quantParameterTensorNames[j], options);\n            }\n            return object;\n        };\n\n        /**\n         * Converts this TensorAnnotation to JSON.\n         * @function toJSON\n         * @memberof onnx.TensorAnnotation\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        TensorAnnotation.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        return TensorAnnotation;\n    })();\n\n    onnx.GraphProto = (function() {\n\n        /**\n         * Properties of a GraphProto.\n         * @memberof onnx\n         * @interface IGraphProto\n         * @property {Array.<onnx.INodeProto>|null} [node] GraphProto node\n         * @property {string|null} [name] GraphProto name\n         * @property {Array.<onnx.ITensorProto>|null} [initializer] GraphProto initializer\n         * @property {string|null} [docString] GraphProto docString\n         * @property {Array.<onnx.IValueInfoProto>|null} [input] GraphProto input\n         * @property {Array.<onnx.IValueInfoProto>|null} [output] GraphProto output\n         * @property {Array.<onnx.IValueInfoProto>|null} [valueInfo] GraphProto valueInfo\n         * @property {Array.<onnx.ITensorAnnotation>|null} [quantizationAnnotation] GraphProto quantizationAnnotation\n         */\n\n        /**\n         * Constructs a new GraphProto.\n         * @memberof onnx\n         * @classdesc Represents a GraphProto.\n         * @implements IGraphProto\n         * @constructor\n         * @param {onnx.IGraphProto=} [properties] Properties to set\n         */\n        function GraphProto(properties) {\n            this.node = [];\n            this.initializer = [];\n            this.input = [];\n            this.output = [];\n            this.valueInfo = [];\n            this.quantizationAnnotation = [];\n            if (properties)\n                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                    if (properties[keys[i]] != null)\n                        this[keys[i]] = properties[keys[i]];\n        }\n\n        /**\n         * GraphProto node.\n         * @member {Array.<onnx.INodeProto>} node\n         * @memberof onnx.GraphProto\n         * @instance\n         */\n        GraphProto.prototype.node = $util.emptyArray;\n\n        /**\n         * GraphProto name.\n         * @member {string} name\n         * @memberof onnx.GraphProto\n         * @instance\n         */\n        GraphProto.prototype.name = \"\";\n\n        /**\n         * GraphProto initializer.\n         * @member {Array.<onnx.ITensorProto>} initializer\n         * @memberof onnx.GraphProto\n         * @instance\n         */\n        GraphProto.prototype.initializer = $util.emptyArray;\n\n        /**\n         * GraphProto docString.\n         * @member {string} docString\n         * @memberof onnx.GraphProto\n         * @instance\n         */\n        GraphProto.prototype.docString = \"\";\n\n        /**\n         * GraphProto input.\n         * @member {Array.<onnx.IValueInfoProto>} input\n         * @memberof onnx.GraphProto\n         * @instance\n         */\n        GraphProto.prototype.input = $util.emptyArray;\n\n        /**\n         * GraphProto output.\n         * @member {Array.<onnx.IValueInfoProto>} output\n         * @memberof onnx.GraphProto\n         * @instance\n         */\n        GraphProto.prototype.output = $util.emptyArray;\n\n        /**\n         * GraphProto valueInfo.\n         * @member {Array.<onnx.IValueInfoProto>} valueInfo\n         * @memberof onnx.GraphProto\n         * @instance\n         */\n        GraphProto.prototype.valueInfo = $util.emptyArray;\n\n        /**\n         * GraphProto quantizationAnnotation.\n         * @member {Array.<onnx.ITensorAnnotation>} quantizationAnnotation\n         * @memberof onnx.GraphProto\n         * @instance\n         */\n        GraphProto.prototype.quantizationAnnotation = $util.emptyArray;\n\n        /**\n         * Creates a new GraphProto instance using the specified properties.\n         * @function create\n         * @memberof onnx.GraphProto\n         * @static\n         * @param {onnx.IGraphProto=} [properties] Properties to set\n         * @returns {onnx.GraphProto} GraphProto instance\n         */\n        GraphProto.create = function create(properties) {\n            return new GraphProto(properties);\n        };\n\n        /**\n         * Encodes the specified GraphProto message. Does not implicitly {@link onnx.GraphProto.verify|verify} messages.\n         * @function encode\n         * @memberof onnx.GraphProto\n         * @static\n         * @param {onnx.IGraphProto} message GraphProto message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        GraphProto.encode = function encode(message, writer) {\n            if (!writer)\n                writer = $Writer.create();\n            if (message.node != null && message.node.length)\n                for (var i = 0; i < message.node.length; ++i)\n                    $root.onnx.NodeProto.encode(message.node[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();\n            if (message.name != null && message.hasOwnProperty(\"name\"))\n                writer.uint32(/* id 2, wireType 2 =*/18).string(message.name);\n            if (message.initializer != null && message.initializer.length)\n                for (var i = 0; i < message.initializer.length; ++i)\n                    $root.onnx.TensorProto.encode(message.initializer[i], writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();\n            if (message.docString != null && message.hasOwnProperty(\"docString\"))\n                writer.uint32(/* id 10, wireType 2 =*/82).string(message.docString);\n            if (message.input != null && message.input.length)\n                for (var i = 0; i < message.input.length; ++i)\n                    $root.onnx.ValueInfoProto.encode(message.input[i], writer.uint32(/* id 11, wireType 2 =*/90).fork()).ldelim();\n            if (message.output != null && message.output.length)\n                for (var i = 0; i < message.output.length; ++i)\n                    $root.onnx.ValueInfoProto.encode(message.output[i], writer.uint32(/* id 12, wireType 2 =*/98).fork()).ldelim();\n            if (message.valueInfo != null && message.valueInfo.length)\n                for (var i = 0; i < message.valueInfo.length; ++i)\n                    $root.onnx.ValueInfoProto.encode(message.valueInfo[i], writer.uint32(/* id 13, wireType 2 =*/106).fork()).ldelim();\n            if (message.quantizationAnnotation != null && message.quantizationAnnotation.length)\n                for (var i = 0; i < message.quantizationAnnotation.length; ++i)\n                    $root.onnx.TensorAnnotation.encode(message.quantizationAnnotation[i], writer.uint32(/* id 14, wireType 2 =*/114).fork()).ldelim();\n            return writer;\n        };\n\n        /**\n         * Encodes the specified GraphProto message, length delimited. Does not implicitly {@link onnx.GraphProto.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof onnx.GraphProto\n         * @static\n         * @param {onnx.IGraphProto} message GraphProto message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        GraphProto.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a GraphProto message from the specified reader or buffer.\n         * @function decode\n         * @memberof onnx.GraphProto\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {onnx.GraphProto} GraphProto\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        GraphProto.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader))\n                reader = $Reader.create(reader);\n            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.onnx.GraphProto();\n            while (reader.pos < end) {\n                var tag = reader.uint32();\n                switch (tag >>> 3) {\n                case 1:\n                    if (!(message.node && message.node.length))\n                        message.node = [];\n                    message.node.push($root.onnx.NodeProto.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.name = reader.string();\n                    break;\n                case 5:\n                    if (!(message.initializer && message.initializer.length))\n                        message.initializer = [];\n                    message.initializer.push($root.onnx.TensorProto.decode(reader, reader.uint32()));\n                    break;\n                case 10:\n                    message.docString = reader.string();\n                    break;\n                case 11:\n                    if (!(message.input && message.input.length))\n                        message.input = [];\n                    message.input.push($root.onnx.ValueInfoProto.decode(reader, reader.uint32()));\n                    break;\n                case 12:\n                    if (!(message.output && message.output.length))\n                        message.output = [];\n                    message.output.push($root.onnx.ValueInfoProto.decode(reader, reader.uint32()));\n                    break;\n                case 13:\n                    if (!(message.valueInfo && message.valueInfo.length))\n                        message.valueInfo = [];\n                    message.valueInfo.push($root.onnx.ValueInfoProto.decode(reader, reader.uint32()));\n                    break;\n                case 14:\n                    if (!(message.quantizationAnnotation && message.quantizationAnnotation.length))\n                        message.quantizationAnnotation = [];\n                    message.quantizationAnnotation.push($root.onnx.TensorAnnotation.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Decodes a GraphProto message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof onnx.GraphProto\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {onnx.GraphProto} GraphProto\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        GraphProto.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        /**\n         * Verifies a GraphProto message.\n         * @function verify\n         * @memberof onnx.GraphProto\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n        GraphProto.verify = function verify(message) {\n            if (typeof message !== \"object\" || message === null)\n                return \"object expected\";\n            if (message.node != null && message.hasOwnProperty(\"node\")) {\n                if (!Array.isArray(message.node))\n                    return \"node: array expected\";\n                for (var i = 0; i < message.node.length; ++i) {\n                    var error = $root.onnx.NodeProto.verify(message.node[i]);\n                    if (error)\n                        return \"node.\" + error;\n                }\n            }\n            if (message.name != null && message.hasOwnProperty(\"name\"))\n                if (!$util.isString(message.name))\n                    return \"name: string expected\";\n            if (message.initializer != null && message.hasOwnProperty(\"initializer\")) {\n                if (!Array.isArray(message.initializer))\n                    return \"initializer: array expected\";\n                for (var i = 0; i < message.initializer.length; ++i) {\n                    var error = $root.onnx.TensorProto.verify(message.initializer[i]);\n                    if (error)\n                        return \"initializer.\" + error;\n                }\n            }\n            if (message.docString != null && message.hasOwnProperty(\"docString\"))\n                if (!$util.isString(message.docString))\n                    return \"docString: string expected\";\n            if (message.input != null && message.hasOwnProperty(\"input\")) {\n                if (!Array.isArray(message.input))\n                    return \"input: array expected\";\n                for (var i = 0; i < message.input.length; ++i) {\n                    var error = $root.onnx.ValueInfoProto.verify(message.input[i]);\n                    if (error)\n                        return \"input.\" + error;\n                }\n            }\n            if (message.output != null && message.hasOwnProperty(\"output\")) {\n                if (!Array.isArray(message.output))\n                    return \"output: array expected\";\n                for (var i = 0; i < message.output.length; ++i) {\n                    var error = $root.onnx.ValueInfoProto.verify(message.output[i]);\n                    if (error)\n                        return \"output.\" + error;\n                }\n            }\n            if (message.valueInfo != null && message.hasOwnProperty(\"valueInfo\")) {\n                if (!Array.isArray(message.valueInfo))\n                    return \"valueInfo: array expected\";\n                for (var i = 0; i < message.valueInfo.length; ++i) {\n                    var error = $root.onnx.ValueInfoProto.verify(message.valueInfo[i]);\n                    if (error)\n                        return \"valueInfo.\" + error;\n                }\n            }\n            if (message.quantizationAnnotation != null && message.hasOwnProperty(\"quantizationAnnotation\")) {\n                if (!Array.isArray(message.quantizationAnnotation))\n                    return \"quantizationAnnotation: array expected\";\n                for (var i = 0; i < message.quantizationAnnotation.length; ++i) {\n                    var error = $root.onnx.TensorAnnotation.verify(message.quantizationAnnotation[i]);\n                    if (error)\n                        return \"quantizationAnnotation.\" + error;\n                }\n            }\n            return null;\n        };\n\n        /**\n         * Creates a GraphProto message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof onnx.GraphProto\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {onnx.GraphProto} GraphProto\n         */\n        GraphProto.fromObject = function fromObject(object) {\n            if (object instanceof $root.onnx.GraphProto)\n                return object;\n            var message = new $root.onnx.GraphProto();\n            if (object.node) {\n                if (!Array.isArray(object.node))\n                    throw TypeError(\".onnx.GraphProto.node: array expected\");\n                message.node = [];\n                for (var i = 0; i < object.node.length; ++i) {\n                    if (typeof object.node[i] !== \"object\")\n                        throw TypeError(\".onnx.GraphProto.node: object expected\");\n                    message.node[i] = $root.onnx.NodeProto.fromObject(object.node[i]);\n                }\n            }\n            if (object.name != null)\n                message.name = String(object.name);\n            if (object.initializer) {\n                if (!Array.isArray(object.initializer))\n                    throw TypeError(\".onnx.GraphProto.initializer: array expected\");\n                message.initializer = [];\n                for (var i = 0; i < object.initializer.length; ++i) {\n                    if (typeof object.initializer[i] !== \"object\")\n                        throw TypeError(\".onnx.GraphProto.initializer: object expected\");\n                    message.initializer[i] = $root.onnx.TensorProto.fromObject(object.initializer[i]);\n                }\n            }\n            if (object.docString != null)\n                message.docString = String(object.docString);\n            if (object.input) {\n                if (!Array.isArray(object.input))\n                    throw TypeError(\".onnx.GraphProto.input: array expected\");\n                message.input = [];\n                for (var i = 0; i < object.input.length; ++i) {\n                    if (typeof object.input[i] !== \"object\")\n                        throw TypeError(\".onnx.GraphProto.input: object expected\");\n                    message.input[i] = $root.onnx.ValueInfoProto.fromObject(object.input[i]);\n                }\n            }\n            if (object.output) {\n                if (!Array.isArray(object.output))\n                    throw TypeError(\".onnx.GraphProto.output: array expected\");\n                message.output = [];\n                for (var i = 0; i < object.output.length; ++i) {\n                    if (typeof object.output[i] !== \"object\")\n                        throw TypeError(\".onnx.GraphProto.output: object expected\");\n                    message.output[i] = $root.onnx.ValueInfoProto.fromObject(object.output[i]);\n                }\n            }\n            if (object.valueInfo) {\n                if (!Array.isArray(object.valueInfo))\n                    throw TypeError(\".onnx.GraphProto.valueInfo: array expected\");\n                message.valueInfo = [];\n                for (var i = 0; i < object.valueInfo.length; ++i) {\n                    if (typeof object.valueInfo[i] !== \"object\")\n                        throw TypeError(\".onnx.GraphProto.valueInfo: object expected\");\n                    message.valueInfo[i] = $root.onnx.ValueInfoProto.fromObject(object.valueInfo[i]);\n                }\n            }\n            if (object.quantizationAnnotation) {\n                if (!Array.isArray(object.quantizationAnnotation))\n                    throw TypeError(\".onnx.GraphProto.quantizationAnnotation: array expected\");\n                message.quantizationAnnotation = [];\n                for (var i = 0; i < object.quantizationAnnotation.length; ++i) {\n                    if (typeof object.quantizationAnnotation[i] !== \"object\")\n                        throw TypeError(\".onnx.GraphProto.quantizationAnnotation: object expected\");\n                    message.quantizationAnnotation[i] = $root.onnx.TensorAnnotation.fromObject(object.quantizationAnnotation[i]);\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Creates a plain object from a GraphProto message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof onnx.GraphProto\n         * @static\n         * @param {onnx.GraphProto} message GraphProto\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        GraphProto.toObject = function toObject(message, options) {\n            if (!options)\n                options = {};\n            var object = {};\n            if (options.arrays || options.defaults) {\n                object.node = [];\n                object.initializer = [];\n                object.input = [];\n                object.output = [];\n                object.valueInfo = [];\n                object.quantizationAnnotation = [];\n            }\n            if (options.defaults) {\n                object.name = \"\";\n                object.docString = \"\";\n            }\n            if (message.node && message.node.length) {\n                object.node = [];\n                for (var j = 0; j < message.node.length; ++j)\n                    object.node[j] = $root.onnx.NodeProto.toObject(message.node[j], options);\n            }\n            if (message.name != null && message.hasOwnProperty(\"name\"))\n                object.name = message.name;\n            if (message.initializer && message.initializer.length) {\n                object.initializer = [];\n                for (var j = 0; j < message.initializer.length; ++j)\n                    object.initializer[j] = $root.onnx.TensorProto.toObject(message.initializer[j], options);\n            }\n            if (message.docString != null && message.hasOwnProperty(\"docString\"))\n                object.docString = message.docString;\n            if (message.input && message.input.length) {\n                object.input = [];\n                for (var j = 0; j < message.input.length; ++j)\n                    object.input[j] = $root.onnx.ValueInfoProto.toObject(message.input[j], options);\n            }\n            if (message.output && message.output.length) {\n                object.output = [];\n                for (var j = 0; j < message.output.length; ++j)\n                    object.output[j] = $root.onnx.ValueInfoProto.toObject(message.output[j], options);\n            }\n            if (message.valueInfo && message.valueInfo.length) {\n                object.valueInfo = [];\n                for (var j = 0; j < message.valueInfo.length; ++j)\n                    object.valueInfo[j] = $root.onnx.ValueInfoProto.toObject(message.valueInfo[j], options);\n            }\n            if (message.quantizationAnnotation && message.quantizationAnnotation.length) {\n                object.quantizationAnnotation = [];\n                for (var j = 0; j < message.quantizationAnnotation.length; ++j)\n                    object.quantizationAnnotation[j] = $root.onnx.TensorAnnotation.toObject(message.quantizationAnnotation[j], options);\n            }\n            return object;\n        };\n\n        /**\n         * Converts this GraphProto to JSON.\n         * @function toJSON\n         * @memberof onnx.GraphProto\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        GraphProto.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        return GraphProto;\n    })();\n\n    onnx.TensorProto = (function() {\n\n        /**\n         * Properties of a TensorProto.\n         * @memberof onnx\n         * @interface ITensorProto\n         * @property {Array.<number|Long>|null} [dims] TensorProto dims\n         * @property {number|null} [dataType] TensorProto dataType\n         * @property {onnx.TensorProto.ISegment|null} [segment] TensorProto segment\n         * @property {Array.<number>|null} [floatData] TensorProto floatData\n         * @property {Array.<number>|null} [int32Data] TensorProto int32Data\n         * @property {Array.<Uint8Array>|null} [stringData] TensorProto stringData\n         * @property {Array.<number|Long>|null} [int64Data] TensorProto int64Data\n         * @property {string|null} [name] TensorProto name\n         * @property {string|null} [docString] TensorProto docString\n         * @property {Uint8Array|null} [rawData] TensorProto rawData\n         * @property {Array.<onnx.IStringStringEntryProto>|null} [externalData] TensorProto externalData\n         * @property {onnx.TensorProto.DataLocation|null} [dataLocation] TensorProto dataLocation\n         * @property {Array.<number>|null} [doubleData] TensorProto doubleData\n         * @property {Array.<number|Long>|null} [uint64Data] TensorProto uint64Data\n         */\n\n        /**\n         * Constructs a new TensorProto.\n         * @memberof onnx\n         * @classdesc Represents a TensorProto.\n         * @implements ITensorProto\n         * @constructor\n         * @param {onnx.ITensorProto=} [properties] Properties to set\n         */\n        function TensorProto(properties) {\n            this.dims = [];\n            this.floatData = [];\n            this.int32Data = [];\n            this.stringData = [];\n            this.int64Data = [];\n            this.externalData = [];\n            this.doubleData = [];\n            this.uint64Data = [];\n            if (properties)\n                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                    if (properties[keys[i]] != null)\n                        this[keys[i]] = properties[keys[i]];\n        }\n\n        /**\n         * TensorProto dims.\n         * @member {Array.<number|Long>} dims\n         * @memberof onnx.TensorProto\n         * @instance\n         */\n        TensorProto.prototype.dims = $util.emptyArray;\n\n        /**\n         * TensorProto dataType.\n         * @member {number} dataType\n         * @memberof onnx.TensorProto\n         * @instance\n         */\n        TensorProto.prototype.dataType = 0;\n\n        /**\n         * TensorProto segment.\n         * @member {onnx.TensorProto.ISegment|null|undefined} segment\n         * @memberof onnx.TensorProto\n         * @instance\n         */\n        TensorProto.prototype.segment = null;\n\n        /**\n         * TensorProto floatData.\n         * @member {Array.<number>} floatData\n         * @memberof onnx.TensorProto\n         * @instance\n         */\n        TensorProto.prototype.floatData = $util.emptyArray;\n\n        /**\n         * TensorProto int32Data.\n         * @member {Array.<number>} int32Data\n         * @memberof onnx.TensorProto\n         * @instance\n         */\n        TensorProto.prototype.int32Data = $util.emptyArray;\n\n        /**\n         * TensorProto stringData.\n         * @member {Array.<Uint8Array>} stringData\n         * @memberof onnx.TensorProto\n         * @instance\n         */\n        TensorProto.prototype.stringData = $util.emptyArray;\n\n        /**\n         * TensorProto int64Data.\n         * @member {Array.<number|Long>} int64Data\n         * @memberof onnx.TensorProto\n         * @instance\n         */\n        TensorProto.prototype.int64Data = $util.emptyArray;\n\n        /**\n         * TensorProto name.\n         * @member {string} name\n         * @memberof onnx.TensorProto\n         * @instance\n         */\n        TensorProto.prototype.name = \"\";\n\n        /**\n         * TensorProto docString.\n         * @member {string} docString\n         * @memberof onnx.TensorProto\n         * @instance\n         */\n        TensorProto.prototype.docString = \"\";\n\n        /**\n         * TensorProto rawData.\n         * @member {Uint8Array} rawData\n         * @memberof onnx.TensorProto\n         * @instance\n         */\n        TensorProto.prototype.rawData = $util.newBuffer([]);\n\n        /**\n         * TensorProto externalData.\n         * @member {Array.<onnx.IStringStringEntryProto>} externalData\n         * @memberof onnx.TensorProto\n         * @instance\n         */\n        TensorProto.prototype.externalData = $util.emptyArray;\n\n        /**\n         * TensorProto dataLocation.\n         * @member {onnx.TensorProto.DataLocation} dataLocation\n         * @memberof onnx.TensorProto\n         * @instance\n         */\n        TensorProto.prototype.dataLocation = 0;\n\n        /**\n         * TensorProto doubleData.\n         * @member {Array.<number>} doubleData\n         * @memberof onnx.TensorProto\n         * @instance\n         */\n        TensorProto.prototype.doubleData = $util.emptyArray;\n\n        /**\n         * TensorProto uint64Data.\n         * @member {Array.<number|Long>} uint64Data\n         * @memberof onnx.TensorProto\n         * @instance\n         */\n        TensorProto.prototype.uint64Data = $util.emptyArray;\n\n        /**\n         * Creates a new TensorProto instance using the specified properties.\n         * @function create\n         * @memberof onnx.TensorProto\n         * @static\n         * @param {onnx.ITensorProto=} [properties] Properties to set\n         * @returns {onnx.TensorProto} TensorProto instance\n         */\n        TensorProto.create = function create(properties) {\n            return new TensorProto(properties);\n        };\n\n        /**\n         * Encodes the specified TensorProto message. Does not implicitly {@link onnx.TensorProto.verify|verify} messages.\n         * @function encode\n         * @memberof onnx.TensorProto\n         * @static\n         * @param {onnx.ITensorProto} message TensorProto message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        TensorProto.encode = function encode(message, writer) {\n            if (!writer)\n                writer = $Writer.create();\n            if (message.dims != null && message.dims.length) {\n                writer.uint32(/* id 1, wireType 2 =*/10).fork();\n                for (var i = 0; i < message.dims.length; ++i)\n                    writer.int64(message.dims[i]);\n                writer.ldelim();\n            }\n            if (message.dataType != null && message.hasOwnProperty(\"dataType\"))\n                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.dataType);\n            if (message.segment != null && message.hasOwnProperty(\"segment\"))\n                $root.onnx.TensorProto.Segment.encode(message.segment, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();\n            if (message.floatData != null && message.floatData.length) {\n                writer.uint32(/* id 4, wireType 2 =*/34).fork();\n                for (var i = 0; i < message.floatData.length; ++i)\n                    writer.float(message.floatData[i]);\n                writer.ldelim();\n            }\n            if (message.int32Data != null && message.int32Data.length) {\n                writer.uint32(/* id 5, wireType 2 =*/42).fork();\n                for (var i = 0; i < message.int32Data.length; ++i)\n                    writer.int32(message.int32Data[i]);\n                writer.ldelim();\n            }\n            if (message.stringData != null && message.stringData.length)\n                for (var i = 0; i < message.stringData.length; ++i)\n                    writer.uint32(/* id 6, wireType 2 =*/50).bytes(message.stringData[i]);\n            if (message.int64Data != null && message.int64Data.length) {\n                writer.uint32(/* id 7, wireType 2 =*/58).fork();\n                for (var i = 0; i < message.int64Data.length; ++i)\n                    writer.int64(message.int64Data[i]);\n                writer.ldelim();\n            }\n            if (message.name != null && message.hasOwnProperty(\"name\"))\n                writer.uint32(/* id 8, wireType 2 =*/66).string(message.name);\n            if (message.rawData != null && message.hasOwnProperty(\"rawData\"))\n                writer.uint32(/* id 9, wireType 2 =*/74).bytes(message.rawData);\n            if (message.doubleData != null && message.doubleData.length) {\n                writer.uint32(/* id 10, wireType 2 =*/82).fork();\n                for (var i = 0; i < message.doubleData.length; ++i)\n                    writer.double(message.doubleData[i]);\n                writer.ldelim();\n            }\n            if (message.uint64Data != null && message.uint64Data.length) {\n                writer.uint32(/* id 11, wireType 2 =*/90).fork();\n                for (var i = 0; i < message.uint64Data.length; ++i)\n                    writer.uint64(message.uint64Data[i]);\n                writer.ldelim();\n            }\n            if (message.docString != null && message.hasOwnProperty(\"docString\"))\n                writer.uint32(/* id 12, wireType 2 =*/98).string(message.docString);\n            if (message.externalData != null && message.externalData.length)\n                for (var i = 0; i < message.externalData.length; ++i)\n                    $root.onnx.StringStringEntryProto.encode(message.externalData[i], writer.uint32(/* id 13, wireType 2 =*/106).fork()).ldelim();\n            if (message.dataLocation != null && message.hasOwnProperty(\"dataLocation\"))\n                writer.uint32(/* id 14, wireType 0 =*/112).int32(message.dataLocation);\n            return writer;\n        };\n\n        /**\n         * Encodes the specified TensorProto message, length delimited. Does not implicitly {@link onnx.TensorProto.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof onnx.TensorProto\n         * @static\n         * @param {onnx.ITensorProto} message TensorProto message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        TensorProto.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a TensorProto message from the specified reader or buffer.\n         * @function decode\n         * @memberof onnx.TensorProto\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {onnx.TensorProto} TensorProto\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        TensorProto.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader))\n                reader = $Reader.create(reader);\n            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.onnx.TensorProto();\n            while (reader.pos < end) {\n                var tag = reader.uint32();\n                switch (tag >>> 3) {\n                case 1:\n                    if (!(message.dims && message.dims.length))\n                        message.dims = [];\n                    if ((tag & 7) === 2) {\n                        var end2 = reader.uint32() + reader.pos;\n                        while (reader.pos < end2)\n                            message.dims.push(reader.int64());\n                    } else\n                        message.dims.push(reader.int64());\n                    break;\n                case 2:\n                    message.dataType = reader.int32();\n                    break;\n                case 3:\n                    message.segment = $root.onnx.TensorProto.Segment.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    if (!(message.floatData && message.floatData.length))\n                        message.floatData = [];\n                    if ((tag & 7) === 2) {\n                        var end2 = reader.uint32() + reader.pos;\n                        while (reader.pos < end2)\n                            message.floatData.push(reader.float());\n                    } else\n                        message.floatData.push(reader.float());\n                    break;\n                case 5:\n                    if (!(message.int32Data && message.int32Data.length))\n                        message.int32Data = [];\n                    if ((tag & 7) === 2) {\n                        var end2 = reader.uint32() + reader.pos;\n                        while (reader.pos < end2)\n                            message.int32Data.push(reader.int32());\n                    } else\n                        message.int32Data.push(reader.int32());\n                    break;\n                case 6:\n                    if (!(message.stringData && message.stringData.length))\n                        message.stringData = [];\n                    message.stringData.push(reader.bytes());\n                    break;\n                case 7:\n                    if (!(message.int64Data && message.int64Data.length))\n                        message.int64Data = [];\n                    if ((tag & 7) === 2) {\n                        var end2 = reader.uint32() + reader.pos;\n                        while (reader.pos < end2)\n                            message.int64Data.push(reader.int64());\n                    } else\n                        message.int64Data.push(reader.int64());\n                    break;\n                case 8:\n                    message.name = reader.string();\n                    break;\n                case 12:\n                    message.docString = reader.string();\n                    break;\n                case 9:\n                    message.rawData = reader.bytes();\n                    break;\n                case 13:\n                    if (!(message.externalData && message.externalData.length))\n                        message.externalData = [];\n                    message.externalData.push($root.onnx.StringStringEntryProto.decode(reader, reader.uint32()));\n                    break;\n                case 14:\n                    message.dataLocation = reader.int32();\n                    break;\n                case 10:\n                    if (!(message.doubleData && message.doubleData.length))\n                        message.doubleData = [];\n                    if ((tag & 7) === 2) {\n                        var end2 = reader.uint32() + reader.pos;\n                        while (reader.pos < end2)\n                            message.doubleData.push(reader.double());\n                    } else\n                        message.doubleData.push(reader.double());\n                    break;\n                case 11:\n                    if (!(message.uint64Data && message.uint64Data.length))\n                        message.uint64Data = [];\n                    if ((tag & 7) === 2) {\n                        var end2 = reader.uint32() + reader.pos;\n                        while (reader.pos < end2)\n                            message.uint64Data.push(reader.uint64());\n                    } else\n                        message.uint64Data.push(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Decodes a TensorProto message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof onnx.TensorProto\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {onnx.TensorProto} TensorProto\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        TensorProto.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        /**\n         * Verifies a TensorProto message.\n         * @function verify\n         * @memberof onnx.TensorProto\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n        TensorProto.verify = function verify(message) {\n            if (typeof message !== \"object\" || message === null)\n                return \"object expected\";\n            if (message.dims != null && message.hasOwnProperty(\"dims\")) {\n                if (!Array.isArray(message.dims))\n                    return \"dims: array expected\";\n                for (var i = 0; i < message.dims.length; ++i)\n                    if (!$util.isInteger(message.dims[i]) && !(message.dims[i] && $util.isInteger(message.dims[i].low) && $util.isInteger(message.dims[i].high)))\n                        return \"dims: integer|Long[] expected\";\n            }\n            if (message.dataType != null && message.hasOwnProperty(\"dataType\"))\n                if (!$util.isInteger(message.dataType))\n                    return \"dataType: integer expected\";\n            if (message.segment != null && message.hasOwnProperty(\"segment\")) {\n                var error = $root.onnx.TensorProto.Segment.verify(message.segment);\n                if (error)\n                    return \"segment.\" + error;\n            }\n            if (message.floatData != null && message.hasOwnProperty(\"floatData\")) {\n                if (!Array.isArray(message.floatData))\n                    return \"floatData: array expected\";\n                for (var i = 0; i < message.floatData.length; ++i)\n                    if (typeof message.floatData[i] !== \"number\")\n                        return \"floatData: number[] expected\";\n            }\n            if (message.int32Data != null && message.hasOwnProperty(\"int32Data\")) {\n                if (!Array.isArray(message.int32Data))\n                    return \"int32Data: array expected\";\n                for (var i = 0; i < message.int32Data.length; ++i)\n                    if (!$util.isInteger(message.int32Data[i]))\n                        return \"int32Data: integer[] expected\";\n            }\n            if (message.stringData != null && message.hasOwnProperty(\"stringData\")) {\n                if (!Array.isArray(message.stringData))\n                    return \"stringData: array expected\";\n                for (var i = 0; i < message.stringData.length; ++i)\n                    if (!(message.stringData[i] && typeof message.stringData[i].length === \"number\" || $util.isString(message.stringData[i])))\n                        return \"stringData: buffer[] expected\";\n            }\n            if (message.int64Data != null && message.hasOwnProperty(\"int64Data\")) {\n                if (!Array.isArray(message.int64Data))\n                    return \"int64Data: array expected\";\n                for (var i = 0; i < message.int64Data.length; ++i)\n                    if (!$util.isInteger(message.int64Data[i]) && !(message.int64Data[i] && $util.isInteger(message.int64Data[i].low) && $util.isInteger(message.int64Data[i].high)))\n                        return \"int64Data: integer|Long[] expected\";\n            }\n            if (message.name != null && message.hasOwnProperty(\"name\"))\n                if (!$util.isString(message.name))\n                    return \"name: string expected\";\n            if (message.docString != null && message.hasOwnProperty(\"docString\"))\n                if (!$util.isString(message.docString))\n                    return \"docString: string expected\";\n            if (message.rawData != null && message.hasOwnProperty(\"rawData\"))\n                if (!(message.rawData && typeof message.rawData.length === \"number\" || $util.isString(message.rawData)))\n                    return \"rawData: buffer expected\";\n            if (message.externalData != null && message.hasOwnProperty(\"externalData\")) {\n                if (!Array.isArray(message.externalData))\n                    return \"externalData: array expected\";\n                for (var i = 0; i < message.externalData.length; ++i) {\n                    var error = $root.onnx.StringStringEntryProto.verify(message.externalData[i]);\n                    if (error)\n                        return \"externalData.\" + error;\n                }\n            }\n            if (message.dataLocation != null && message.hasOwnProperty(\"dataLocation\"))\n                switch (message.dataLocation) {\n                default:\n                    return \"dataLocation: enum value expected\";\n                case 0:\n                case 1:\n                    break;\n                }\n            if (message.doubleData != null && message.hasOwnProperty(\"doubleData\")) {\n                if (!Array.isArray(message.doubleData))\n                    return \"doubleData: array expected\";\n                for (var i = 0; i < message.doubleData.length; ++i)\n                    if (typeof message.doubleData[i] !== \"number\")\n                        return \"doubleData: number[] expected\";\n            }\n            if (message.uint64Data != null && message.hasOwnProperty(\"uint64Data\")) {\n                if (!Array.isArray(message.uint64Data))\n                    return \"uint64Data: array expected\";\n                for (var i = 0; i < message.uint64Data.length; ++i)\n                    if (!$util.isInteger(message.uint64Data[i]) && !(message.uint64Data[i] && $util.isInteger(message.uint64Data[i].low) && $util.isInteger(message.uint64Data[i].high)))\n                        return \"uint64Data: integer|Long[] expected\";\n            }\n            return null;\n        };\n\n        /**\n         * Creates a TensorProto message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof onnx.TensorProto\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {onnx.TensorProto} TensorProto\n         */\n        TensorProto.fromObject = function fromObject(object) {\n            if (object instanceof $root.onnx.TensorProto)\n                return object;\n            var message = new $root.onnx.TensorProto();\n            if (object.dims) {\n                if (!Array.isArray(object.dims))\n                    throw TypeError(\".onnx.TensorProto.dims: array expected\");\n                message.dims = [];\n                for (var i = 0; i < object.dims.length; ++i)\n                    if ($util.Long)\n                        (message.dims[i] = $util.Long.fromValue(object.dims[i])).unsigned = false;\n                    else if (typeof object.dims[i] === \"string\")\n                        message.dims[i] = parseInt(object.dims[i], 10);\n                    else if (typeof object.dims[i] === \"number\")\n                        message.dims[i] = object.dims[i];\n                    else if (typeof object.dims[i] === \"object\")\n                        message.dims[i] = new $util.LongBits(object.dims[i].low >>> 0, object.dims[i].high >>> 0).toNumber();\n            }\n            if (object.dataType != null)\n                message.dataType = object.dataType | 0;\n            if (object.segment != null) {\n                if (typeof object.segment !== \"object\")\n                    throw TypeError(\".onnx.TensorProto.segment: object expected\");\n                message.segment = $root.onnx.TensorProto.Segment.fromObject(object.segment);\n            }\n            if (object.floatData) {\n                if (!Array.isArray(object.floatData))\n                    throw TypeError(\".onnx.TensorProto.floatData: array expected\");\n                message.floatData = [];\n                for (var i = 0; i < object.floatData.length; ++i)\n                    message.floatData[i] = Number(object.floatData[i]);\n            }\n            if (object.int32Data) {\n                if (!Array.isArray(object.int32Data))\n                    throw TypeError(\".onnx.TensorProto.int32Data: array expected\");\n                message.int32Data = [];\n                for (var i = 0; i < object.int32Data.length; ++i)\n                    message.int32Data[i] = object.int32Data[i] | 0;\n            }\n            if (object.stringData) {\n                if (!Array.isArray(object.stringData))\n                    throw TypeError(\".onnx.TensorProto.stringData: array expected\");\n                message.stringData = [];\n                for (var i = 0; i < object.stringData.length; ++i)\n                    if (typeof object.stringData[i] === \"string\")\n                        $util.base64.decode(object.stringData[i], message.stringData[i] = $util.newBuffer($util.base64.length(object.stringData[i])), 0);\n                    else if (object.stringData[i].length)\n                        message.stringData[i] = object.stringData[i];\n            }\n            if (object.int64Data) {\n                if (!Array.isArray(object.int64Data))\n                    throw TypeError(\".onnx.TensorProto.int64Data: array expected\");\n                message.int64Data = [];\n                for (var i = 0; i < object.int64Data.length; ++i)\n                    if ($util.Long)\n                        (message.int64Data[i] = $util.Long.fromValue(object.int64Data[i])).unsigned = false;\n                    else if (typeof object.int64Data[i] === \"string\")\n                        message.int64Data[i] = parseInt(object.int64Data[i], 10);\n                    else if (typeof object.int64Data[i] === \"number\")\n                        message.int64Data[i] = object.int64Data[i];\n                    else if (typeof object.int64Data[i] === \"object\")\n                        message.int64Data[i] = new $util.LongBits(object.int64Data[i].low >>> 0, object.int64Data[i].high >>> 0).toNumber();\n            }\n            if (object.name != null)\n                message.name = String(object.name);\n            if (object.docString != null)\n                message.docString = String(object.docString);\n            if (object.rawData != null)\n                if (typeof object.rawData === \"string\")\n                    $util.base64.decode(object.rawData, message.rawData = $util.newBuffer($util.base64.length(object.rawData)), 0);\n                else if (object.rawData.length)\n                    message.rawData = object.rawData;\n            if (object.externalData) {\n                if (!Array.isArray(object.externalData))\n                    throw TypeError(\".onnx.TensorProto.externalData: array expected\");\n                message.externalData = [];\n                for (var i = 0; i < object.externalData.length; ++i) {\n                    if (typeof object.externalData[i] !== \"object\")\n                        throw TypeError(\".onnx.TensorProto.externalData: object expected\");\n                    message.externalData[i] = $root.onnx.StringStringEntryProto.fromObject(object.externalData[i]);\n                }\n            }\n            switch (object.dataLocation) {\n            case \"DEFAULT\":\n            case 0:\n                message.dataLocation = 0;\n                break;\n            case \"EXTERNAL\":\n            case 1:\n                message.dataLocation = 1;\n                break;\n            }\n            if (object.doubleData) {\n                if (!Array.isArray(object.doubleData))\n                    throw TypeError(\".onnx.TensorProto.doubleData: array expected\");\n                message.doubleData = [];\n                for (var i = 0; i < object.doubleData.length; ++i)\n                    message.doubleData[i] = Number(object.doubleData[i]);\n            }\n            if (object.uint64Data) {\n                if (!Array.isArray(object.uint64Data))\n                    throw TypeError(\".onnx.TensorProto.uint64Data: array expected\");\n                message.uint64Data = [];\n                for (var i = 0; i < object.uint64Data.length; ++i)\n                    if ($util.Long)\n                        (message.uint64Data[i] = $util.Long.fromValue(object.uint64Data[i])).unsigned = true;\n                    else if (typeof object.uint64Data[i] === \"string\")\n                        message.uint64Data[i] = parseInt(object.uint64Data[i], 10);\n                    else if (typeof object.uint64Data[i] === \"number\")\n                        message.uint64Data[i] = object.uint64Data[i];\n                    else if (typeof object.uint64Data[i] === \"object\")\n                        message.uint64Data[i] = new $util.LongBits(object.uint64Data[i].low >>> 0, object.uint64Data[i].high >>> 0).toNumber(true);\n            }\n            return message;\n        };\n\n        /**\n         * Creates a plain object from a TensorProto message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof onnx.TensorProto\n         * @static\n         * @param {onnx.TensorProto} message TensorProto\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        TensorProto.toObject = function toObject(message, options) {\n            if (!options)\n                options = {};\n            var object = {};\n            if (options.arrays || options.defaults) {\n                object.dims = [];\n                object.floatData = [];\n                object.int32Data = [];\n                object.stringData = [];\n                object.int64Data = [];\n                object.doubleData = [];\n                object.uint64Data = [];\n                object.externalData = [];\n            }\n            if (options.defaults) {\n                object.dataType = 0;\n                object.segment = null;\n                object.name = \"\";\n                if (options.bytes === String)\n                    object.rawData = \"\";\n                else {\n                    object.rawData = [];\n                    if (options.bytes !== Array)\n                        object.rawData = $util.newBuffer(object.rawData);\n                }\n                object.docString = \"\";\n                object.dataLocation = options.enums === String ? \"DEFAULT\" : 0;\n            }\n            if (message.dims && message.dims.length) {\n                object.dims = [];\n                for (var j = 0; j < message.dims.length; ++j)\n                    if (typeof message.dims[j] === \"number\")\n                        object.dims[j] = options.longs === String ? String(message.dims[j]) : message.dims[j];\n                    else\n                        object.dims[j] = options.longs === String ? $util.Long.prototype.toString.call(message.dims[j]) : options.longs === Number ? new $util.LongBits(message.dims[j].low >>> 0, message.dims[j].high >>> 0).toNumber() : message.dims[j];\n            }\n            if (message.dataType != null && message.hasOwnProperty(\"dataType\"))\n                object.dataType = message.dataType;\n            if (message.segment != null && message.hasOwnProperty(\"segment\"))\n                object.segment = $root.onnx.TensorProto.Segment.toObject(message.segment, options);\n            if (message.floatData && message.floatData.length) {\n                object.floatData = [];\n                for (var j = 0; j < message.floatData.length; ++j)\n                    object.floatData[j] = options.json && !isFinite(message.floatData[j]) ? String(message.floatData[j]) : message.floatData[j];\n            }\n            if (message.int32Data && message.int32Data.length) {\n                object.int32Data = [];\n                for (var j = 0; j < message.int32Data.length; ++j)\n                    object.int32Data[j] = message.int32Data[j];\n            }\n            if (message.stringData && message.stringData.length) {\n                object.stringData = [];\n                for (var j = 0; j < message.stringData.length; ++j)\n                    object.stringData[j] = options.bytes === String ? $util.base64.encode(message.stringData[j], 0, message.stringData[j].length) : options.bytes === Array ? Array.prototype.slice.call(message.stringData[j]) : message.stringData[j];\n            }\n            if (message.int64Data && message.int64Data.length) {\n                object.int64Data = [];\n                for (var j = 0; j < message.int64Data.length; ++j)\n                    if (typeof message.int64Data[j] === \"number\")\n                        object.int64Data[j] = options.longs === String ? String(message.int64Data[j]) : message.int64Data[j];\n                    else\n                        object.int64Data[j] = options.longs === String ? $util.Long.prototype.toString.call(message.int64Data[j]) : options.longs === Number ? new $util.LongBits(message.int64Data[j].low >>> 0, message.int64Data[j].high >>> 0).toNumber() : message.int64Data[j];\n            }\n            if (message.name != null && message.hasOwnProperty(\"name\"))\n                object.name = message.name;\n            if (message.rawData != null && message.hasOwnProperty(\"rawData\"))\n                object.rawData = options.bytes === String ? $util.base64.encode(message.rawData, 0, message.rawData.length) : options.bytes === Array ? Array.prototype.slice.call(message.rawData) : message.rawData;\n            if (message.doubleData && message.doubleData.length) {\n                object.doubleData = [];\n                for (var j = 0; j < message.doubleData.length; ++j)\n                    object.doubleData[j] = options.json && !isFinite(message.doubleData[j]) ? String(message.doubleData[j]) : message.doubleData[j];\n            }\n            if (message.uint64Data && message.uint64Data.length) {\n                object.uint64Data = [];\n                for (var j = 0; j < message.uint64Data.length; ++j)\n                    if (typeof message.uint64Data[j] === \"number\")\n                        object.uint64Data[j] = options.longs === String ? String(message.uint64Data[j]) : message.uint64Data[j];\n                    else\n                        object.uint64Data[j] = options.longs === String ? $util.Long.prototype.toString.call(message.uint64Data[j]) : options.longs === Number ? new $util.LongBits(message.uint64Data[j].low >>> 0, message.uint64Data[j].high >>> 0).toNumber(true) : message.uint64Data[j];\n            }\n            if (message.docString != null && message.hasOwnProperty(\"docString\"))\n                object.docString = message.docString;\n            if (message.externalData && message.externalData.length) {\n                object.externalData = [];\n                for (var j = 0; j < message.externalData.length; ++j)\n                    object.externalData[j] = $root.onnx.StringStringEntryProto.toObject(message.externalData[j], options);\n            }\n            if (message.dataLocation != null && message.hasOwnProperty(\"dataLocation\"))\n                object.dataLocation = options.enums === String ? $root.onnx.TensorProto.DataLocation[message.dataLocation] : message.dataLocation;\n            return object;\n        };\n\n        /**\n         * Converts this TensorProto to JSON.\n         * @function toJSON\n         * @memberof onnx.TensorProto\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        TensorProto.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        /**\n         * DataType enum.\n         * @name onnx.TensorProto.DataType\n         * @enum {string}\n         * @property {number} UNDEFINED=0 UNDEFINED value\n         * @property {number} FLOAT=1 FLOAT value\n         * @property {number} UINT8=2 UINT8 value\n         * @property {number} INT8=3 INT8 value\n         * @property {number} UINT16=4 UINT16 value\n         * @property {number} INT16=5 INT16 value\n         * @property {number} INT32=6 INT32 value\n         * @property {number} INT64=7 INT64 value\n         * @property {number} STRING=8 STRING value\n         * @property {number} BOOL=9 BOOL value\n         * @property {number} FLOAT16=10 FLOAT16 value\n         * @property {number} DOUBLE=11 DOUBLE value\n         * @property {number} UINT32=12 UINT32 value\n         * @property {number} UINT64=13 UINT64 value\n         * @property {number} COMPLEX64=14 COMPLEX64 value\n         * @property {number} COMPLEX128=15 COMPLEX128 value\n         * @property {number} BFLOAT16=16 BFLOAT16 value\n         */\n        TensorProto.DataType = (function() {\n            var valuesById = {}, values = Object.create(valuesById);\n            values[valuesById[0] = \"UNDEFINED\"] = 0;\n            values[valuesById[1] = \"FLOAT\"] = 1;\n            values[valuesById[2] = \"UINT8\"] = 2;\n            values[valuesById[3] = \"INT8\"] = 3;\n            values[valuesById[4] = \"UINT16\"] = 4;\n            values[valuesById[5] = \"INT16\"] = 5;\n            values[valuesById[6] = \"INT32\"] = 6;\n            values[valuesById[7] = \"INT64\"] = 7;\n            values[valuesById[8] = \"STRING\"] = 8;\n            values[valuesById[9] = \"BOOL\"] = 9;\n            values[valuesById[10] = \"FLOAT16\"] = 10;\n            values[valuesById[11] = \"DOUBLE\"] = 11;\n            values[valuesById[12] = \"UINT32\"] = 12;\n            values[valuesById[13] = \"UINT64\"] = 13;\n            values[valuesById[14] = \"COMPLEX64\"] = 14;\n            values[valuesById[15] = \"COMPLEX128\"] = 15;\n            values[valuesById[16] = \"BFLOAT16\"] = 16;\n            return values;\n        })();\n\n        TensorProto.Segment = (function() {\n\n            /**\n             * Properties of a Segment.\n             * @memberof onnx.TensorProto\n             * @interface ISegment\n             * @property {number|Long|null} [begin] Segment begin\n             * @property {number|Long|null} [end] Segment end\n             */\n\n            /**\n             * Constructs a new Segment.\n             * @memberof onnx.TensorProto\n             * @classdesc Represents a Segment.\n             * @implements ISegment\n             * @constructor\n             * @param {onnx.TensorProto.ISegment=} [properties] Properties to set\n             */\n            function Segment(properties) {\n                if (properties)\n                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n\n            /**\n             * Segment begin.\n             * @member {number|Long} begin\n             * @memberof onnx.TensorProto.Segment\n             * @instance\n             */\n            Segment.prototype.begin = $util.Long ? $util.Long.fromBits(0,0,false) : 0;\n\n            /**\n             * Segment end.\n             * @member {number|Long} end\n             * @memberof onnx.TensorProto.Segment\n             * @instance\n             */\n            Segment.prototype.end = $util.Long ? $util.Long.fromBits(0,0,false) : 0;\n\n            /**\n             * Creates a new Segment instance using the specified properties.\n             * @function create\n             * @memberof onnx.TensorProto.Segment\n             * @static\n             * @param {onnx.TensorProto.ISegment=} [properties] Properties to set\n             * @returns {onnx.TensorProto.Segment} Segment instance\n             */\n            Segment.create = function create(properties) {\n                return new Segment(properties);\n            };\n\n            /**\n             * Encodes the specified Segment message. Does not implicitly {@link onnx.TensorProto.Segment.verify|verify} messages.\n             * @function encode\n             * @memberof onnx.TensorProto.Segment\n             * @static\n             * @param {onnx.TensorProto.ISegment} message Segment message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            Segment.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                if (message.begin != null && message.hasOwnProperty(\"begin\"))\n                    writer.uint32(/* id 1, wireType 0 =*/8).int64(message.begin);\n                if (message.end != null && message.hasOwnProperty(\"end\"))\n                    writer.uint32(/* id 2, wireType 0 =*/16).int64(message.end);\n                return writer;\n            };\n\n            /**\n             * Encodes the specified Segment message, length delimited. Does not implicitly {@link onnx.TensorProto.Segment.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof onnx.TensorProto.Segment\n             * @static\n             * @param {onnx.TensorProto.ISegment} message Segment message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            Segment.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n\n            /**\n             * Decodes a Segment message from the specified reader or buffer.\n             * @function decode\n             * @memberof onnx.TensorProto.Segment\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {onnx.TensorProto.Segment} Segment\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            Segment.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.onnx.TensorProto.Segment();\n                while (reader.pos < end) {\n                    var tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 1:\n                        message.begin = reader.int64();\n                        break;\n                    case 2:\n                        message.end = reader.int64();\n                        break;\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                return message;\n            };\n\n            /**\n             * Decodes a Segment message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof onnx.TensorProto.Segment\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {onnx.TensorProto.Segment} Segment\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            Segment.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n\n            /**\n             * Verifies a Segment message.\n             * @function verify\n             * @memberof onnx.TensorProto.Segment\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            Segment.verify = function verify(message) {\n                if (typeof message !== \"object\" || message === null)\n                    return \"object expected\";\n                if (message.begin != null && message.hasOwnProperty(\"begin\"))\n                    if (!$util.isInteger(message.begin) && !(message.begin && $util.isInteger(message.begin.low) && $util.isInteger(message.begin.high)))\n                        return \"begin: integer|Long expected\";\n                if (message.end != null && message.hasOwnProperty(\"end\"))\n                    if (!$util.isInteger(message.end) && !(message.end && $util.isInteger(message.end.low) && $util.isInteger(message.end.high)))\n                        return \"end: integer|Long expected\";\n                return null;\n            };\n\n            /**\n             * Creates a Segment message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof onnx.TensorProto.Segment\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {onnx.TensorProto.Segment} Segment\n             */\n            Segment.fromObject = function fromObject(object) {\n                if (object instanceof $root.onnx.TensorProto.Segment)\n                    return object;\n                var message = new $root.onnx.TensorProto.Segment();\n                if (object.begin != null)\n                    if ($util.Long)\n                        (message.begin = $util.Long.fromValue(object.begin)).unsigned = false;\n                    else if (typeof object.begin === \"string\")\n                        message.begin = parseInt(object.begin, 10);\n                    else if (typeof object.begin === \"number\")\n                        message.begin = object.begin;\n                    else if (typeof object.begin === \"object\")\n                        message.begin = new $util.LongBits(object.begin.low >>> 0, object.begin.high >>> 0).toNumber();\n                if (object.end != null)\n                    if ($util.Long)\n                        (message.end = $util.Long.fromValue(object.end)).unsigned = false;\n                    else if (typeof object.end === \"string\")\n                        message.end = parseInt(object.end, 10);\n                    else if (typeof object.end === \"number\")\n                        message.end = object.end;\n                    else if (typeof object.end === \"object\")\n                        message.end = new $util.LongBits(object.end.low >>> 0, object.end.high >>> 0).toNumber();\n                return message;\n            };\n\n            /**\n             * Creates a plain object from a Segment message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof onnx.TensorProto.Segment\n             * @static\n             * @param {onnx.TensorProto.Segment} message Segment\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            Segment.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                var object = {};\n                if (options.defaults) {\n                    if ($util.Long) {\n                        var long = new $util.Long(0, 0, false);\n                        object.begin = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;\n                    } else\n                        object.begin = options.longs === String ? \"0\" : 0;\n                    if ($util.Long) {\n                        var long = new $util.Long(0, 0, false);\n                        object.end = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;\n                    } else\n                        object.end = options.longs === String ? \"0\" : 0;\n                }\n                if (message.begin != null && message.hasOwnProperty(\"begin\"))\n                    if (typeof message.begin === \"number\")\n                        object.begin = options.longs === String ? String(message.begin) : message.begin;\n                    else\n                        object.begin = options.longs === String ? $util.Long.prototype.toString.call(message.begin) : options.longs === Number ? new $util.LongBits(message.begin.low >>> 0, message.begin.high >>> 0).toNumber() : message.begin;\n                if (message.end != null && message.hasOwnProperty(\"end\"))\n                    if (typeof message.end === \"number\")\n                        object.end = options.longs === String ? String(message.end) : message.end;\n                    else\n                        object.end = options.longs === String ? $util.Long.prototype.toString.call(message.end) : options.longs === Number ? new $util.LongBits(message.end.low >>> 0, message.end.high >>> 0).toNumber() : message.end;\n                return object;\n            };\n\n            /**\n             * Converts this Segment to JSON.\n             * @function toJSON\n             * @memberof onnx.TensorProto.Segment\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            Segment.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n\n            return Segment;\n        })();\n\n        /**\n         * DataLocation enum.\n         * @name onnx.TensorProto.DataLocation\n         * @enum {string}\n         * @property {number} DEFAULT=0 DEFAULT value\n         * @property {number} EXTERNAL=1 EXTERNAL value\n         */\n        TensorProto.DataLocation = (function() {\n            var valuesById = {}, values = Object.create(valuesById);\n            values[valuesById[0] = \"DEFAULT\"] = 0;\n            values[valuesById[1] = \"EXTERNAL\"] = 1;\n            return values;\n        })();\n\n        return TensorProto;\n    })();\n\n    onnx.TensorShapeProto = (function() {\n\n        /**\n         * Properties of a TensorShapeProto.\n         * @memberof onnx\n         * @interface ITensorShapeProto\n         * @property {Array.<onnx.TensorShapeProto.IDimension>|null} [dim] TensorShapeProto dim\n         */\n\n        /**\n         * Constructs a new TensorShapeProto.\n         * @memberof onnx\n         * @classdesc Represents a TensorShapeProto.\n         * @implements ITensorShapeProto\n         * @constructor\n         * @param {onnx.ITensorShapeProto=} [properties] Properties to set\n         */\n        function TensorShapeProto(properties) {\n            this.dim = [];\n            if (properties)\n                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                    if (properties[keys[i]] != null)\n                        this[keys[i]] = properties[keys[i]];\n        }\n\n        /**\n         * TensorShapeProto dim.\n         * @member {Array.<onnx.TensorShapeProto.IDimension>} dim\n         * @memberof onnx.TensorShapeProto\n         * @instance\n         */\n        TensorShapeProto.prototype.dim = $util.emptyArray;\n\n        /**\n         * Creates a new TensorShapeProto instance using the specified properties.\n         * @function create\n         * @memberof onnx.TensorShapeProto\n         * @static\n         * @param {onnx.ITensorShapeProto=} [properties] Properties to set\n         * @returns {onnx.TensorShapeProto} TensorShapeProto instance\n         */\n        TensorShapeProto.create = function create(properties) {\n            return new TensorShapeProto(properties);\n        };\n\n        /**\n         * Encodes the specified TensorShapeProto message. Does not implicitly {@link onnx.TensorShapeProto.verify|verify} messages.\n         * @function encode\n         * @memberof onnx.TensorShapeProto\n         * @static\n         * @param {onnx.ITensorShapeProto} message TensorShapeProto message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        TensorShapeProto.encode = function encode(message, writer) {\n            if (!writer)\n                writer = $Writer.create();\n            if (message.dim != null && message.dim.length)\n                for (var i = 0; i < message.dim.length; ++i)\n                    $root.onnx.TensorShapeProto.Dimension.encode(message.dim[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();\n            return writer;\n        };\n\n        /**\n         * Encodes the specified TensorShapeProto message, length delimited. Does not implicitly {@link onnx.TensorShapeProto.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof onnx.TensorShapeProto\n         * @static\n         * @param {onnx.ITensorShapeProto} message TensorShapeProto message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        TensorShapeProto.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a TensorShapeProto message from the specified reader or buffer.\n         * @function decode\n         * @memberof onnx.TensorShapeProto\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {onnx.TensorShapeProto} TensorShapeProto\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        TensorShapeProto.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader))\n                reader = $Reader.create(reader);\n            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.onnx.TensorShapeProto();\n            while (reader.pos < end) {\n                var tag = reader.uint32();\n                switch (tag >>> 3) {\n                case 1:\n                    if (!(message.dim && message.dim.length))\n                        message.dim = [];\n                    message.dim.push($root.onnx.TensorShapeProto.Dimension.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Decodes a TensorShapeProto message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof onnx.TensorShapeProto\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {onnx.TensorShapeProto} TensorShapeProto\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        TensorShapeProto.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        /**\n         * Verifies a TensorShapeProto message.\n         * @function verify\n         * @memberof onnx.TensorShapeProto\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n        TensorShapeProto.verify = function verify(message) {\n            if (typeof message !== \"object\" || message === null)\n                return \"object expected\";\n            if (message.dim != null && message.hasOwnProperty(\"dim\")) {\n                if (!Array.isArray(message.dim))\n                    return \"dim: array expected\";\n                for (var i = 0; i < message.dim.length; ++i) {\n                    var error = $root.onnx.TensorShapeProto.Dimension.verify(message.dim[i]);\n                    if (error)\n                        return \"dim.\" + error;\n                }\n            }\n            return null;\n        };\n\n        /**\n         * Creates a TensorShapeProto message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof onnx.TensorShapeProto\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {onnx.TensorShapeProto} TensorShapeProto\n         */\n        TensorShapeProto.fromObject = function fromObject(object) {\n            if (object instanceof $root.onnx.TensorShapeProto)\n                return object;\n            var message = new $root.onnx.TensorShapeProto();\n            if (object.dim) {\n                if (!Array.isArray(object.dim))\n                    throw TypeError(\".onnx.TensorShapeProto.dim: array expected\");\n                message.dim = [];\n                for (var i = 0; i < object.dim.length; ++i) {\n                    if (typeof object.dim[i] !== \"object\")\n                        throw TypeError(\".onnx.TensorShapeProto.dim: object expected\");\n                    message.dim[i] = $root.onnx.TensorShapeProto.Dimension.fromObject(object.dim[i]);\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Creates a plain object from a TensorShapeProto message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof onnx.TensorShapeProto\n         * @static\n         * @param {onnx.TensorShapeProto} message TensorShapeProto\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        TensorShapeProto.toObject = function toObject(message, options) {\n            if (!options)\n                options = {};\n            var object = {};\n            if (options.arrays || options.defaults)\n                object.dim = [];\n            if (message.dim && message.dim.length) {\n                object.dim = [];\n                for (var j = 0; j < message.dim.length; ++j)\n                    object.dim[j] = $root.onnx.TensorShapeProto.Dimension.toObject(message.dim[j], options);\n            }\n            return object;\n        };\n\n        /**\n         * Converts this TensorShapeProto to JSON.\n         * @function toJSON\n         * @memberof onnx.TensorShapeProto\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        TensorShapeProto.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        TensorShapeProto.Dimension = (function() {\n\n            /**\n             * Properties of a Dimension.\n             * @memberof onnx.TensorShapeProto\n             * @interface IDimension\n             * @property {number|Long|null} [dimValue] Dimension dimValue\n             * @property {string|null} [dimParam] Dimension dimParam\n             * @property {string|null} [denotation] Dimension denotation\n             */\n\n            /**\n             * Constructs a new Dimension.\n             * @memberof onnx.TensorShapeProto\n             * @classdesc Represents a Dimension.\n             * @implements IDimension\n             * @constructor\n             * @param {onnx.TensorShapeProto.IDimension=} [properties] Properties to set\n             */\n            function Dimension(properties) {\n                if (properties)\n                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n\n            /**\n             * Dimension dimValue.\n             * @member {number|Long} dimValue\n             * @memberof onnx.TensorShapeProto.Dimension\n             * @instance\n             */\n            Dimension.prototype.dimValue = $util.Long ? $util.Long.fromBits(0,0,false) : 0;\n\n            /**\n             * Dimension dimParam.\n             * @member {string} dimParam\n             * @memberof onnx.TensorShapeProto.Dimension\n             * @instance\n             */\n            Dimension.prototype.dimParam = \"\";\n\n            /**\n             * Dimension denotation.\n             * @member {string} denotation\n             * @memberof onnx.TensorShapeProto.Dimension\n             * @instance\n             */\n            Dimension.prototype.denotation = \"\";\n\n            // OneOf field names bound to virtual getters and setters\n            var $oneOfFields;\n\n            /**\n             * Dimension value.\n             * @member {\"dimValue\"|\"dimParam\"|undefined} value\n             * @memberof onnx.TensorShapeProto.Dimension\n             * @instance\n             */\n            Object.defineProperty(Dimension.prototype, \"value\", {\n                get: $util.oneOfGetter($oneOfFields = [\"dimValue\", \"dimParam\"]),\n                set: $util.oneOfSetter($oneOfFields)\n            });\n\n            /**\n             * Creates a new Dimension instance using the specified properties.\n             * @function create\n             * @memberof onnx.TensorShapeProto.Dimension\n             * @static\n             * @param {onnx.TensorShapeProto.IDimension=} [properties] Properties to set\n             * @returns {onnx.TensorShapeProto.Dimension} Dimension instance\n             */\n            Dimension.create = function create(properties) {\n                return new Dimension(properties);\n            };\n\n            /**\n             * Encodes the specified Dimension message. Does not implicitly {@link onnx.TensorShapeProto.Dimension.verify|verify} messages.\n             * @function encode\n             * @memberof onnx.TensorShapeProto.Dimension\n             * @static\n             * @param {onnx.TensorShapeProto.IDimension} message Dimension message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            Dimension.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                if (message.dimValue != null && message.hasOwnProperty(\"dimValue\"))\n                    writer.uint32(/* id 1, wireType 0 =*/8).int64(message.dimValue);\n                if (message.dimParam != null && message.hasOwnProperty(\"dimParam\"))\n                    writer.uint32(/* id 2, wireType 2 =*/18).string(message.dimParam);\n                if (message.denotation != null && message.hasOwnProperty(\"denotation\"))\n                    writer.uint32(/* id 3, wireType 2 =*/26).string(message.denotation);\n                return writer;\n            };\n\n            /**\n             * Encodes the specified Dimension message, length delimited. Does not implicitly {@link onnx.TensorShapeProto.Dimension.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof onnx.TensorShapeProto.Dimension\n             * @static\n             * @param {onnx.TensorShapeProto.IDimension} message Dimension message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            Dimension.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n\n            /**\n             * Decodes a Dimension message from the specified reader or buffer.\n             * @function decode\n             * @memberof onnx.TensorShapeProto.Dimension\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {onnx.TensorShapeProto.Dimension} Dimension\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            Dimension.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.onnx.TensorShapeProto.Dimension();\n                while (reader.pos < end) {\n                    var tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 1:\n                        message.dimValue = reader.int64();\n                        break;\n                    case 2:\n                        message.dimParam = reader.string();\n                        break;\n                    case 3:\n                        message.denotation = reader.string();\n                        break;\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                return message;\n            };\n\n            /**\n             * Decodes a Dimension message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof onnx.TensorShapeProto.Dimension\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {onnx.TensorShapeProto.Dimension} Dimension\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            Dimension.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n\n            /**\n             * Verifies a Dimension message.\n             * @function verify\n             * @memberof onnx.TensorShapeProto.Dimension\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            Dimension.verify = function verify(message) {\n                if (typeof message !== \"object\" || message === null)\n                    return \"object expected\";\n                var properties = {};\n                if (message.dimValue != null && message.hasOwnProperty(\"dimValue\")) {\n                    properties.value = 1;\n                    if (!$util.isInteger(message.dimValue) && !(message.dimValue && $util.isInteger(message.dimValue.low) && $util.isInteger(message.dimValue.high)))\n                        return \"dimValue: integer|Long expected\";\n                }\n                if (message.dimParam != null && message.hasOwnProperty(\"dimParam\")) {\n                    if (properties.value === 1)\n                        return \"value: multiple values\";\n                    properties.value = 1;\n                    if (!$util.isString(message.dimParam))\n                        return \"dimParam: string expected\";\n                }\n                if (message.denotation != null && message.hasOwnProperty(\"denotation\"))\n                    if (!$util.isString(message.denotation))\n                        return \"denotation: string expected\";\n                return null;\n            };\n\n            /**\n             * Creates a Dimension message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof onnx.TensorShapeProto.Dimension\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {onnx.TensorShapeProto.Dimension} Dimension\n             */\n            Dimension.fromObject = function fromObject(object) {\n                if (object instanceof $root.onnx.TensorShapeProto.Dimension)\n                    return object;\n                var message = new $root.onnx.TensorShapeProto.Dimension();\n                if (object.dimValue != null)\n                    if ($util.Long)\n                        (message.dimValue = $util.Long.fromValue(object.dimValue)).unsigned = false;\n                    else if (typeof object.dimValue === \"string\")\n                        message.dimValue = parseInt(object.dimValue, 10);\n                    else if (typeof object.dimValue === \"number\")\n                        message.dimValue = object.dimValue;\n                    else if (typeof object.dimValue === \"object\")\n                        message.dimValue = new $util.LongBits(object.dimValue.low >>> 0, object.dimValue.high >>> 0).toNumber();\n                if (object.dimParam != null)\n                    message.dimParam = String(object.dimParam);\n                if (object.denotation != null)\n                    message.denotation = String(object.denotation);\n                return message;\n            };\n\n            /**\n             * Creates a plain object from a Dimension message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof onnx.TensorShapeProto.Dimension\n             * @static\n             * @param {onnx.TensorShapeProto.Dimension} message Dimension\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            Dimension.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                var object = {};\n                if (options.defaults)\n                    object.denotation = \"\";\n                if (message.dimValue != null && message.hasOwnProperty(\"dimValue\")) {\n                    if (typeof message.dimValue === \"number\")\n                        object.dimValue = options.longs === String ? String(message.dimValue) : message.dimValue;\n                    else\n                        object.dimValue = options.longs === String ? $util.Long.prototype.toString.call(message.dimValue) : options.longs === Number ? new $util.LongBits(message.dimValue.low >>> 0, message.dimValue.high >>> 0).toNumber() : message.dimValue;\n                    if (options.oneofs)\n                        object.value = \"dimValue\";\n                }\n                if (message.dimParam != null && message.hasOwnProperty(\"dimParam\")) {\n                    object.dimParam = message.dimParam;\n                    if (options.oneofs)\n                        object.value = \"dimParam\";\n                }\n                if (message.denotation != null && message.hasOwnProperty(\"denotation\"))\n                    object.denotation = message.denotation;\n                return object;\n            };\n\n            /**\n             * Converts this Dimension to JSON.\n             * @function toJSON\n             * @memberof onnx.TensorShapeProto.Dimension\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            Dimension.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n\n            return Dimension;\n        })();\n\n        return TensorShapeProto;\n    })();\n\n    onnx.TypeProto = (function() {\n\n        /**\n         * Properties of a TypeProto.\n         * @memberof onnx\n         * @interface ITypeProto\n         * @property {onnx.TypeProto.ITensor|null} [tensorType] TypeProto tensorType\n         * @property {string|null} [denotation] TypeProto denotation\n         */\n\n        /**\n         * Constructs a new TypeProto.\n         * @memberof onnx\n         * @classdesc Represents a TypeProto.\n         * @implements ITypeProto\n         * @constructor\n         * @param {onnx.ITypeProto=} [properties] Properties to set\n         */\n        function TypeProto(properties) {\n            if (properties)\n                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                    if (properties[keys[i]] != null)\n                        this[keys[i]] = properties[keys[i]];\n        }\n\n        /**\n         * TypeProto tensorType.\n         * @member {onnx.TypeProto.ITensor|null|undefined} tensorType\n         * @memberof onnx.TypeProto\n         * @instance\n         */\n        TypeProto.prototype.tensorType = null;\n\n        /**\n         * TypeProto denotation.\n         * @member {string} denotation\n         * @memberof onnx.TypeProto\n         * @instance\n         */\n        TypeProto.prototype.denotation = \"\";\n\n        // OneOf field names bound to virtual getters and setters\n        var $oneOfFields;\n\n        /**\n         * TypeProto value.\n         * @member {\"tensorType\"|undefined} value\n         * @memberof onnx.TypeProto\n         * @instance\n         */\n        Object.defineProperty(TypeProto.prototype, \"value\", {\n            get: $util.oneOfGetter($oneOfFields = [\"tensorType\"]),\n            set: $util.oneOfSetter($oneOfFields)\n        });\n\n        /**\n         * Creates a new TypeProto instance using the specified properties.\n         * @function create\n         * @memberof onnx.TypeProto\n         * @static\n         * @param {onnx.ITypeProto=} [properties] Properties to set\n         * @returns {onnx.TypeProto} TypeProto instance\n         */\n        TypeProto.create = function create(properties) {\n            return new TypeProto(properties);\n        };\n\n        /**\n         * Encodes the specified TypeProto message. Does not implicitly {@link onnx.TypeProto.verify|verify} messages.\n         * @function encode\n         * @memberof onnx.TypeProto\n         * @static\n         * @param {onnx.ITypeProto} message TypeProto message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        TypeProto.encode = function encode(message, writer) {\n            if (!writer)\n                writer = $Writer.create();\n            if (message.tensorType != null && message.hasOwnProperty(\"tensorType\"))\n                $root.onnx.TypeProto.Tensor.encode(message.tensorType, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();\n            if (message.denotation != null && message.hasOwnProperty(\"denotation\"))\n                writer.uint32(/* id 6, wireType 2 =*/50).string(message.denotation);\n            return writer;\n        };\n\n        /**\n         * Encodes the specified TypeProto message, length delimited. Does not implicitly {@link onnx.TypeProto.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof onnx.TypeProto\n         * @static\n         * @param {onnx.ITypeProto} message TypeProto message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        TypeProto.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a TypeProto message from the specified reader or buffer.\n         * @function decode\n         * @memberof onnx.TypeProto\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {onnx.TypeProto} TypeProto\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        TypeProto.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader))\n                reader = $Reader.create(reader);\n            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.onnx.TypeProto();\n            while (reader.pos < end) {\n                var tag = reader.uint32();\n                switch (tag >>> 3) {\n                case 1:\n                    message.tensorType = $root.onnx.TypeProto.Tensor.decode(reader, reader.uint32());\n                    break;\n                case 6:\n                    message.denotation = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Decodes a TypeProto message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof onnx.TypeProto\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {onnx.TypeProto} TypeProto\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        TypeProto.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        /**\n         * Verifies a TypeProto message.\n         * @function verify\n         * @memberof onnx.TypeProto\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n        TypeProto.verify = function verify(message) {\n            if (typeof message !== \"object\" || message === null)\n                return \"object expected\";\n            var properties = {};\n            if (message.tensorType != null && message.hasOwnProperty(\"tensorType\")) {\n                properties.value = 1;\n                {\n                    var error = $root.onnx.TypeProto.Tensor.verify(message.tensorType);\n                    if (error)\n                        return \"tensorType.\" + error;\n                }\n            }\n            if (message.denotation != null && message.hasOwnProperty(\"denotation\"))\n                if (!$util.isString(message.denotation))\n                    return \"denotation: string expected\";\n            return null;\n        };\n\n        /**\n         * Creates a TypeProto message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof onnx.TypeProto\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {onnx.TypeProto} TypeProto\n         */\n        TypeProto.fromObject = function fromObject(object) {\n            if (object instanceof $root.onnx.TypeProto)\n                return object;\n            var message = new $root.onnx.TypeProto();\n            if (object.tensorType != null) {\n                if (typeof object.tensorType !== \"object\")\n                    throw TypeError(\".onnx.TypeProto.tensorType: object expected\");\n                message.tensorType = $root.onnx.TypeProto.Tensor.fromObject(object.tensorType);\n            }\n            if (object.denotation != null)\n                message.denotation = String(object.denotation);\n            return message;\n        };\n\n        /**\n         * Creates a plain object from a TypeProto message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof onnx.TypeProto\n         * @static\n         * @param {onnx.TypeProto} message TypeProto\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        TypeProto.toObject = function toObject(message, options) {\n            if (!options)\n                options = {};\n            var object = {};\n            if (options.defaults)\n                object.denotation = \"\";\n            if (message.tensorType != null && message.hasOwnProperty(\"tensorType\")) {\n                object.tensorType = $root.onnx.TypeProto.Tensor.toObject(message.tensorType, options);\n                if (options.oneofs)\n                    object.value = \"tensorType\";\n            }\n            if (message.denotation != null && message.hasOwnProperty(\"denotation\"))\n                object.denotation = message.denotation;\n            return object;\n        };\n\n        /**\n         * Converts this TypeProto to JSON.\n         * @function toJSON\n         * @memberof onnx.TypeProto\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        TypeProto.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        TypeProto.Tensor = (function() {\n\n            /**\n             * Properties of a Tensor.\n             * @memberof onnx.TypeProto\n             * @interface ITensor\n             * @property {number|null} [elemType] Tensor elemType\n             * @property {onnx.ITensorShapeProto|null} [shape] Tensor shape\n             */\n\n            /**\n             * Constructs a new Tensor.\n             * @memberof onnx.TypeProto\n             * @classdesc Represents a Tensor.\n             * @implements ITensor\n             * @constructor\n             * @param {onnx.TypeProto.ITensor=} [properties] Properties to set\n             */\n            function Tensor(properties) {\n                if (properties)\n                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n\n            /**\n             * Tensor elemType.\n             * @member {number} elemType\n             * @memberof onnx.TypeProto.Tensor\n             * @instance\n             */\n            Tensor.prototype.elemType = 0;\n\n            /**\n             * Tensor shape.\n             * @member {onnx.ITensorShapeProto|null|undefined} shape\n             * @memberof onnx.TypeProto.Tensor\n             * @instance\n             */\n            Tensor.prototype.shape = null;\n\n            /**\n             * Creates a new Tensor instance using the specified properties.\n             * @function create\n             * @memberof onnx.TypeProto.Tensor\n             * @static\n             * @param {onnx.TypeProto.ITensor=} [properties] Properties to set\n             * @returns {onnx.TypeProto.Tensor} Tensor instance\n             */\n            Tensor.create = function create(properties) {\n                return new Tensor(properties);\n            };\n\n            /**\n             * Encodes the specified Tensor message. Does not implicitly {@link onnx.TypeProto.Tensor.verify|verify} messages.\n             * @function encode\n             * @memberof onnx.TypeProto.Tensor\n             * @static\n             * @param {onnx.TypeProto.ITensor} message Tensor message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            Tensor.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                if (message.elemType != null && message.hasOwnProperty(\"elemType\"))\n                    writer.uint32(/* id 1, wireType 0 =*/8).int32(message.elemType);\n                if (message.shape != null && message.hasOwnProperty(\"shape\"))\n                    $root.onnx.TensorShapeProto.encode(message.shape, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();\n                return writer;\n            };\n\n            /**\n             * Encodes the specified Tensor message, length delimited. Does not implicitly {@link onnx.TypeProto.Tensor.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof onnx.TypeProto.Tensor\n             * @static\n             * @param {onnx.TypeProto.ITensor} message Tensor message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            Tensor.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n\n            /**\n             * Decodes a Tensor message from the specified reader or buffer.\n             * @function decode\n             * @memberof onnx.TypeProto.Tensor\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {onnx.TypeProto.Tensor} Tensor\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            Tensor.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.onnx.TypeProto.Tensor();\n                while (reader.pos < end) {\n                    var tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 1:\n                        message.elemType = reader.int32();\n                        break;\n                    case 2:\n                        message.shape = $root.onnx.TensorShapeProto.decode(reader, reader.uint32());\n                        break;\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                return message;\n            };\n\n            /**\n             * Decodes a Tensor message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof onnx.TypeProto.Tensor\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {onnx.TypeProto.Tensor} Tensor\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            Tensor.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n\n            /**\n             * Verifies a Tensor message.\n             * @function verify\n             * @memberof onnx.TypeProto.Tensor\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            Tensor.verify = function verify(message) {\n                if (typeof message !== \"object\" || message === null)\n                    return \"object expected\";\n                if (message.elemType != null && message.hasOwnProperty(\"elemType\"))\n                    if (!$util.isInteger(message.elemType))\n                        return \"elemType: integer expected\";\n                if (message.shape != null && message.hasOwnProperty(\"shape\")) {\n                    var error = $root.onnx.TensorShapeProto.verify(message.shape);\n                    if (error)\n                        return \"shape.\" + error;\n                }\n                return null;\n            };\n\n            /**\n             * Creates a Tensor message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof onnx.TypeProto.Tensor\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {onnx.TypeProto.Tensor} Tensor\n             */\n            Tensor.fromObject = function fromObject(object) {\n                if (object instanceof $root.onnx.TypeProto.Tensor)\n                    return object;\n                var message = new $root.onnx.TypeProto.Tensor();\n                if (object.elemType != null)\n                    message.elemType = object.elemType | 0;\n                if (object.shape != null) {\n                    if (typeof object.shape !== \"object\")\n                        throw TypeError(\".onnx.TypeProto.Tensor.shape: object expected\");\n                    message.shape = $root.onnx.TensorShapeProto.fromObject(object.shape);\n                }\n                return message;\n            };\n\n            /**\n             * Creates a plain object from a Tensor message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof onnx.TypeProto.Tensor\n             * @static\n             * @param {onnx.TypeProto.Tensor} message Tensor\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            Tensor.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                var object = {};\n                if (options.defaults) {\n                    object.elemType = 0;\n                    object.shape = null;\n                }\n                if (message.elemType != null && message.hasOwnProperty(\"elemType\"))\n                    object.elemType = message.elemType;\n                if (message.shape != null && message.hasOwnProperty(\"shape\"))\n                    object.shape = $root.onnx.TensorShapeProto.toObject(message.shape, options);\n                return object;\n            };\n\n            /**\n             * Converts this Tensor to JSON.\n             * @function toJSON\n             * @memberof onnx.TypeProto.Tensor\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            Tensor.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n\n            return Tensor;\n        })();\n\n        return TypeProto;\n    })();\n\n    onnx.OperatorSetIdProto = (function() {\n\n        /**\n         * Properties of an OperatorSetIdProto.\n         * @memberof onnx\n         * @interface IOperatorSetIdProto\n         * @property {string|null} [domain] OperatorSetIdProto domain\n         * @property {number|Long|null} [version] OperatorSetIdProto version\n         */\n\n        /**\n         * Constructs a new OperatorSetIdProto.\n         * @memberof onnx\n         * @classdesc Represents an OperatorSetIdProto.\n         * @implements IOperatorSetIdProto\n         * @constructor\n         * @param {onnx.IOperatorSetIdProto=} [properties] Properties to set\n         */\n        function OperatorSetIdProto(properties) {\n            if (properties)\n                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                    if (properties[keys[i]] != null)\n                        this[keys[i]] = properties[keys[i]];\n        }\n\n        /**\n         * OperatorSetIdProto domain.\n         * @member {string} domain\n         * @memberof onnx.OperatorSetIdProto\n         * @instance\n         */\n        OperatorSetIdProto.prototype.domain = \"\";\n\n        /**\n         * OperatorSetIdProto version.\n         * @member {number|Long} version\n         * @memberof onnx.OperatorSetIdProto\n         * @instance\n         */\n        OperatorSetIdProto.prototype.version = $util.Long ? $util.Long.fromBits(0,0,false) : 0;\n\n        /**\n         * Creates a new OperatorSetIdProto instance using the specified properties.\n         * @function create\n         * @memberof onnx.OperatorSetIdProto\n         * @static\n         * @param {onnx.IOperatorSetIdProto=} [properties] Properties to set\n         * @returns {onnx.OperatorSetIdProto} OperatorSetIdProto instance\n         */\n        OperatorSetIdProto.create = function create(properties) {\n            return new OperatorSetIdProto(properties);\n        };\n\n        /**\n         * Encodes the specified OperatorSetIdProto message. Does not implicitly {@link onnx.OperatorSetIdProto.verify|verify} messages.\n         * @function encode\n         * @memberof onnx.OperatorSetIdProto\n         * @static\n         * @param {onnx.IOperatorSetIdProto} message OperatorSetIdProto message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        OperatorSetIdProto.encode = function encode(message, writer) {\n            if (!writer)\n                writer = $Writer.create();\n            if (message.domain != null && message.hasOwnProperty(\"domain\"))\n                writer.uint32(/* id 1, wireType 2 =*/10).string(message.domain);\n            if (message.version != null && message.hasOwnProperty(\"version\"))\n                writer.uint32(/* id 2, wireType 0 =*/16).int64(message.version);\n            return writer;\n        };\n\n        /**\n         * Encodes the specified OperatorSetIdProto message, length delimited. Does not implicitly {@link onnx.OperatorSetIdProto.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof onnx.OperatorSetIdProto\n         * @static\n         * @param {onnx.IOperatorSetIdProto} message OperatorSetIdProto message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        OperatorSetIdProto.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes an OperatorSetIdProto message from the specified reader or buffer.\n         * @function decode\n         * @memberof onnx.OperatorSetIdProto\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {onnx.OperatorSetIdProto} OperatorSetIdProto\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        OperatorSetIdProto.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader))\n                reader = $Reader.create(reader);\n            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.onnx.OperatorSetIdProto();\n            while (reader.pos < end) {\n                var tag = reader.uint32();\n                switch (tag >>> 3) {\n                case 1:\n                    message.domain = reader.string();\n                    break;\n                case 2:\n                    message.version = reader.int64();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Decodes an OperatorSetIdProto message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof onnx.OperatorSetIdProto\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {onnx.OperatorSetIdProto} OperatorSetIdProto\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        OperatorSetIdProto.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        /**\n         * Verifies an OperatorSetIdProto message.\n         * @function verify\n         * @memberof onnx.OperatorSetIdProto\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n        OperatorSetIdProto.verify = function verify(message) {\n            if (typeof message !== \"object\" || message === null)\n                return \"object expected\";\n            if (message.domain != null && message.hasOwnProperty(\"domain\"))\n                if (!$util.isString(message.domain))\n                    return \"domain: string expected\";\n            if (message.version != null && message.hasOwnProperty(\"version\"))\n                if (!$util.isInteger(message.version) && !(message.version && $util.isInteger(message.version.low) && $util.isInteger(message.version.high)))\n                    return \"version: integer|Long expected\";\n            return null;\n        };\n\n        /**\n         * Creates an OperatorSetIdProto message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof onnx.OperatorSetIdProto\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {onnx.OperatorSetIdProto} OperatorSetIdProto\n         */\n        OperatorSetIdProto.fromObject = function fromObject(object) {\n            if (object instanceof $root.onnx.OperatorSetIdProto)\n                return object;\n            var message = new $root.onnx.OperatorSetIdProto();\n            if (object.domain != null)\n                message.domain = String(object.domain);\n            if (object.version != null)\n                if ($util.Long)\n                    (message.version = $util.Long.fromValue(object.version)).unsigned = false;\n                else if (typeof object.version === \"string\")\n                    message.version = parseInt(object.version, 10);\n                else if (typeof object.version === \"number\")\n                    message.version = object.version;\n                else if (typeof object.version === \"object\")\n                    message.version = new $util.LongBits(object.version.low >>> 0, object.version.high >>> 0).toNumber();\n            return message;\n        };\n\n        /**\n         * Creates a plain object from an OperatorSetIdProto message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof onnx.OperatorSetIdProto\n         * @static\n         * @param {onnx.OperatorSetIdProto} message OperatorSetIdProto\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        OperatorSetIdProto.toObject = function toObject(message, options) {\n            if (!options)\n                options = {};\n            var object = {};\n            if (options.defaults) {\n                object.domain = \"\";\n                if ($util.Long) {\n                    var long = new $util.Long(0, 0, false);\n                    object.version = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;\n                } else\n                    object.version = options.longs === String ? \"0\" : 0;\n            }\n            if (message.domain != null && message.hasOwnProperty(\"domain\"))\n                object.domain = message.domain;\n            if (message.version != null && message.hasOwnProperty(\"version\"))\n                if (typeof message.version === \"number\")\n                    object.version = options.longs === String ? String(message.version) : message.version;\n                else\n                    object.version = options.longs === String ? $util.Long.prototype.toString.call(message.version) : options.longs === Number ? new $util.LongBits(message.version.low >>> 0, message.version.high >>> 0).toNumber() : message.version;\n            return object;\n        };\n\n        /**\n         * Converts this OperatorSetIdProto to JSON.\n         * @function toJSON\n         * @memberof onnx.OperatorSetIdProto\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        OperatorSetIdProto.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        return OperatorSetIdProto;\n    })();\n\n    return onnx;\n})();\n\nmodule.exports = $root;\n","// minimal library entry point.\n\n\"use strict\";\nmodule.exports = require(\"./src/index-minimal\");\n","\"use strict\";\nvar protobuf = exports;\n\n/**\n * Build type, one of `\"full\"`, `\"light\"` or `\"minimal\"`.\n * @name build\n * @type {string}\n * @const\n */\nprotobuf.build = \"minimal\";\n\n// Serialization\nprotobuf.Writer       = require(\"./writer\");\nprotobuf.BufferWriter = require(\"./writer_buffer\");\nprotobuf.Reader       = require(\"./reader\");\nprotobuf.BufferReader = require(\"./reader_buffer\");\n\n// Utility\nprotobuf.util         = require(\"./util/minimal\");\nprotobuf.rpc          = require(\"./rpc\");\nprotobuf.roots        = require(\"./roots\");\nprotobuf.configure    = configure;\n\n/* istanbul ignore next */\n/**\n * Reconfigures the library according to the environment.\n * @returns {undefined}\n */\nfunction configure() {\n    protobuf.util._configure();\n    protobuf.Writer._configure(protobuf.BufferWriter);\n    protobuf.Reader._configure(protobuf.BufferReader);\n}\n\n// Set up buffer utility according to the environment\nconfigure();\n","\"use strict\";\nmodule.exports = Reader;\n\nvar util      = require(\"./util/minimal\");\n\nvar BufferReader; // cyclic\n\nvar LongBits  = util.LongBits,\n    utf8      = util.utf8;\n\n/* istanbul ignore next */\nfunction indexOutOfRange(reader, writeLength) {\n    return RangeError(\"index out of range: \" + reader.pos + \" + \" + (writeLength || 1) + \" > \" + reader.len);\n}\n\n/**\n * Constructs a new reader instance using the specified buffer.\n * @classdesc Wire format reader using `Uint8Array` if available, otherwise `Array`.\n * @constructor\n * @param {Uint8Array} buffer Buffer to read from\n */\nfunction Reader(buffer) {\n\n    /**\n     * Read buffer.\n     * @type {Uint8Array}\n     */\n    this.buf = buffer;\n\n    /**\n     * Read buffer position.\n     * @type {number}\n     */\n    this.pos = 0;\n\n    /**\n     * Read buffer length.\n     * @type {number}\n     */\n    this.len = buffer.length;\n}\n\nvar create_array = typeof Uint8Array !== \"undefined\"\n    ? function create_typed_array(buffer) {\n        if (buffer instanceof Uint8Array || Array.isArray(buffer))\n            return new Reader(buffer);\n        throw Error(\"illegal buffer\");\n    }\n    /* istanbul ignore next */\n    : function create_array(buffer) {\n        if (Array.isArray(buffer))\n            return new Reader(buffer);\n        throw Error(\"illegal buffer\");\n    };\n\nvar create = function create() {\n    return util.Buffer\n        ? function create_buffer_setup(buffer) {\n            return (Reader.create = function create_buffer(buffer) {\n                return util.Buffer.isBuffer(buffer)\n                    ? new BufferReader(buffer)\n                    /* istanbul ignore next */\n                    : create_array(buffer);\n            })(buffer);\n        }\n        /* istanbul ignore next */\n        : create_array;\n};\n\n/**\n * Creates a new reader using the specified buffer.\n * @function\n * @param {Uint8Array|Buffer} buffer Buffer to read from\n * @returns {Reader|BufferReader} A {@link BufferReader} if `buffer` is a Buffer, otherwise a {@link Reader}\n * @throws {Error} If `buffer` is not a valid buffer\n */\nReader.create = create();\n\nReader.prototype._slice = util.Array.prototype.subarray || /* istanbul ignore next */ util.Array.prototype.slice;\n\n/**\n * Reads a varint as an unsigned 32 bit value.\n * @function\n * @returns {number} Value read\n */\nReader.prototype.uint32 = (function read_uint32_setup() {\n    var value = 4294967295; // optimizer type-hint, tends to deopt otherwise (?!)\n    return function read_uint32() {\n        value = (         this.buf[this.pos] & 127       ) >>> 0; if (this.buf[this.pos++] < 128) return value;\n        value = (value | (this.buf[this.pos] & 127) <<  7) >>> 0; if (this.buf[this.pos++] < 128) return value;\n        value = (value | (this.buf[this.pos] & 127) << 14) >>> 0; if (this.buf[this.pos++] < 128) return value;\n        value = (value | (this.buf[this.pos] & 127) << 21) >>> 0; if (this.buf[this.pos++] < 128) return value;\n        value = (value | (this.buf[this.pos] &  15) << 28) >>> 0; if (this.buf[this.pos++] < 128) return value;\n\n        /* istanbul ignore if */\n        if ((this.pos += 5) > this.len) {\n            this.pos = this.len;\n            throw indexOutOfRange(this, 10);\n        }\n        return value;\n    };\n})();\n\n/**\n * Reads a varint as a signed 32 bit value.\n * @returns {number} Value read\n */\nReader.prototype.int32 = function read_int32() {\n    return this.uint32() | 0;\n};\n\n/**\n * Reads a zig-zag encoded varint as a signed 32 bit value.\n * @returns {number} Value read\n */\nReader.prototype.sint32 = function read_sint32() {\n    var value = this.uint32();\n    return value >>> 1 ^ -(value & 1) | 0;\n};\n\n/* eslint-disable no-invalid-this */\n\nfunction readLongVarint() {\n    // tends to deopt with local vars for octet etc.\n    var bits = new LongBits(0, 0);\n    var i = 0;\n    if (this.len - this.pos > 4) { // fast route (lo)\n        for (; i < 4; ++i) {\n            // 1st..4th\n            bits.lo = (bits.lo | (this.buf[this.pos] & 127) << i * 7) >>> 0;\n            if (this.buf[this.pos++] < 128)\n                return bits;\n        }\n        // 5th\n        bits.lo = (bits.lo | (this.buf[this.pos] & 127) << 28) >>> 0;\n        bits.hi = (bits.hi | (this.buf[this.pos] & 127) >>  4) >>> 0;\n        if (this.buf[this.pos++] < 128)\n            return bits;\n        i = 0;\n    } else {\n        for (; i < 3; ++i) {\n            /* istanbul ignore if */\n            if (this.pos >= this.len)\n                throw indexOutOfRange(this);\n            // 1st..3th\n            bits.lo = (bits.lo | (this.buf[this.pos] & 127) << i * 7) >>> 0;\n            if (this.buf[this.pos++] < 128)\n                return bits;\n        }\n        // 4th\n        bits.lo = (bits.lo | (this.buf[this.pos++] & 127) << i * 7) >>> 0;\n        return bits;\n    }\n    if (this.len - this.pos > 4) { // fast route (hi)\n        for (; i < 5; ++i) {\n            // 6th..10th\n            bits.hi = (bits.hi | (this.buf[this.pos] & 127) << i * 7 + 3) >>> 0;\n            if (this.buf[this.pos++] < 128)\n                return bits;\n        }\n    } else {\n        for (; i < 5; ++i) {\n            /* istanbul ignore if */\n            if (this.pos >= this.len)\n                throw indexOutOfRange(this);\n            // 6th..10th\n            bits.hi = (bits.hi | (this.buf[this.pos] & 127) << i * 7 + 3) >>> 0;\n            if (this.buf[this.pos++] < 128)\n                return bits;\n        }\n    }\n    /* istanbul ignore next */\n    throw Error(\"invalid varint encoding\");\n}\n\n/* eslint-enable no-invalid-this */\n\n/**\n * Reads a varint as a signed 64 bit value.\n * @name Reader#int64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads a varint as an unsigned 64 bit value.\n * @name Reader#uint64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads a zig-zag encoded varint as a signed 64 bit value.\n * @name Reader#sint64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads a varint as a boolean.\n * @returns {boolean} Value read\n */\nReader.prototype.bool = function read_bool() {\n    return this.uint32() !== 0;\n};\n\nfunction readFixed32_end(buf, end) { // note that this uses `end`, not `pos`\n    return (buf[end - 4]\n          | buf[end - 3] << 8\n          | buf[end - 2] << 16\n          | buf[end - 1] << 24) >>> 0;\n}\n\n/**\n * Reads fixed 32 bits as an unsigned 32 bit integer.\n * @returns {number} Value read\n */\nReader.prototype.fixed32 = function read_fixed32() {\n\n    /* istanbul ignore if */\n    if (this.pos + 4 > this.len)\n        throw indexOutOfRange(this, 4);\n\n    return readFixed32_end(this.buf, this.pos += 4);\n};\n\n/**\n * Reads fixed 32 bits as a signed 32 bit integer.\n * @returns {number} Value read\n */\nReader.prototype.sfixed32 = function read_sfixed32() {\n\n    /* istanbul ignore if */\n    if (this.pos + 4 > this.len)\n        throw indexOutOfRange(this, 4);\n\n    return readFixed32_end(this.buf, this.pos += 4) | 0;\n};\n\n/* eslint-disable no-invalid-this */\n\nfunction readFixed64(/* this: Reader */) {\n\n    /* istanbul ignore if */\n    if (this.pos + 8 > this.len)\n        throw indexOutOfRange(this, 8);\n\n    return new LongBits(readFixed32_end(this.buf, this.pos += 4), readFixed32_end(this.buf, this.pos += 4));\n}\n\n/* eslint-enable no-invalid-this */\n\n/**\n * Reads fixed 64 bits.\n * @name Reader#fixed64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads zig-zag encoded fixed 64 bits.\n * @name Reader#sfixed64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads a float (32 bit) as a number.\n * @function\n * @returns {number} Value read\n */\nReader.prototype.float = function read_float() {\n\n    /* istanbul ignore if */\n    if (this.pos + 4 > this.len)\n        throw indexOutOfRange(this, 4);\n\n    var value = util.float.readFloatLE(this.buf, this.pos);\n    this.pos += 4;\n    return value;\n};\n\n/**\n * Reads a double (64 bit float) as a number.\n * @function\n * @returns {number} Value read\n */\nReader.prototype.double = function read_double() {\n\n    /* istanbul ignore if */\n    if (this.pos + 8 > this.len)\n        throw indexOutOfRange(this, 4);\n\n    var value = util.float.readDoubleLE(this.buf, this.pos);\n    this.pos += 8;\n    return value;\n};\n\n/**\n * Reads a sequence of bytes preceeded by its length as a varint.\n * @returns {Uint8Array} Value read\n */\nReader.prototype.bytes = function read_bytes() {\n    var length = this.uint32(),\n        start  = this.pos,\n        end    = this.pos + length;\n\n    /* istanbul ignore if */\n    if (end > this.len)\n        throw indexOutOfRange(this, length);\n\n    this.pos += length;\n    if (Array.isArray(this.buf)) // plain array\n        return this.buf.slice(start, end);\n    return start === end // fix for IE 10/Win8 and others' subarray returning array of size 1\n        ? new this.buf.constructor(0)\n        : this._slice.call(this.buf, start, end);\n};\n\n/**\n * Reads a string preceeded by its byte length as a varint.\n * @returns {string} Value read\n */\nReader.prototype.string = function read_string() {\n    var bytes = this.bytes();\n    return utf8.read(bytes, 0, bytes.length);\n};\n\n/**\n * Skips the specified number of bytes if specified, otherwise skips a varint.\n * @param {number} [length] Length if known, otherwise a varint is assumed\n * @returns {Reader} `this`\n */\nReader.prototype.skip = function skip(length) {\n    if (typeof length === \"number\") {\n        /* istanbul ignore if */\n        if (this.pos + length > this.len)\n            throw indexOutOfRange(this, length);\n        this.pos += length;\n    } else {\n        do {\n            /* istanbul ignore if */\n            if (this.pos >= this.len)\n                throw indexOutOfRange(this);\n        } while (this.buf[this.pos++] & 128);\n    }\n    return this;\n};\n\n/**\n * Skips the next element of the specified wire type.\n * @param {number} wireType Wire type received\n * @returns {Reader} `this`\n */\nReader.prototype.skipType = function(wireType) {\n    switch (wireType) {\n        case 0:\n            this.skip();\n            break;\n        case 1:\n            this.skip(8);\n            break;\n        case 2:\n            this.skip(this.uint32());\n            break;\n        case 3:\n            while ((wireType = this.uint32() & 7) !== 4) {\n                this.skipType(wireType);\n            }\n            break;\n        case 5:\n            this.skip(4);\n            break;\n\n        /* istanbul ignore next */\n        default:\n            throw Error(\"invalid wire type \" + wireType + \" at offset \" + this.pos);\n    }\n    return this;\n};\n\nReader._configure = function(BufferReader_) {\n    BufferReader = BufferReader_;\n    Reader.create = create();\n    BufferReader._configure();\n\n    var fn = util.Long ? \"toLong\" : /* istanbul ignore next */ \"toNumber\";\n    util.merge(Reader.prototype, {\n\n        int64: function read_int64() {\n            return readLongVarint.call(this)[fn](false);\n        },\n\n        uint64: function read_uint64() {\n            return readLongVarint.call(this)[fn](true);\n        },\n\n        sint64: function read_sint64() {\n            return readLongVarint.call(this).zzDecode()[fn](false);\n        },\n\n        fixed64: function read_fixed64() {\n            return readFixed64.call(this)[fn](true);\n        },\n\n        sfixed64: function read_sfixed64() {\n            return readFixed64.call(this)[fn](false);\n        }\n\n    });\n};\n","\"use strict\";\nmodule.exports = BufferReader;\n\n// extends Reader\nvar Reader = require(\"./reader\");\n(BufferReader.prototype = Object.create(Reader.prototype)).constructor = BufferReader;\n\nvar util = require(\"./util/minimal\");\n\n/**\n * Constructs a new buffer reader instance.\n * @classdesc Wire format reader using node buffers.\n * @extends Reader\n * @constructor\n * @param {Buffer} buffer Buffer to read from\n */\nfunction BufferReader(buffer) {\n    Reader.call(this, buffer);\n\n    /**\n     * Read buffer.\n     * @name BufferReader#buf\n     * @type {Buffer}\n     */\n}\n\nBufferReader._configure = function () {\n    /* istanbul ignore else */\n    if (util.Buffer)\n        BufferReader.prototype._slice = util.Buffer.prototype.slice;\n};\n\n\n/**\n * @override\n */\nBufferReader.prototype.string = function read_string_buffer() {\n    var len = this.uint32(); // modifies pos\n    return this.buf.utf8Slice\n        ? this.buf.utf8Slice(this.pos, this.pos = Math.min(this.pos + len, this.len))\n        : this.buf.toString(\"utf-8\", this.pos, this.pos = Math.min(this.pos + len, this.len));\n};\n\n/**\n * Reads a sequence of bytes preceeded by its length as a varint.\n * @name BufferReader#bytes\n * @function\n * @returns {Buffer} Value read\n */\n\nBufferReader._configure();\n","\"use strict\";\nmodule.exports = {};\n\n/**\n * Named roots.\n * This is where pbjs stores generated structures (the option `-r, --root` specifies a name).\n * Can also be used manually to make roots available accross modules.\n * @name roots\n * @type {Object.<string,Root>}\n * @example\n * // pbjs -r myroot -o compiled.js ...\n *\n * // in another module:\n * require(\"./compiled.js\");\n *\n * // in any subsequent module:\n * var root = protobuf.roots[\"myroot\"];\n */\n","\"use strict\";\n\n/**\n * Streaming RPC helpers.\n * @namespace\n */\nvar rpc = exports;\n\n/**\n * RPC implementation passed to {@link Service#create} performing a service request on network level, i.e. by utilizing http requests or websockets.\n * @typedef RPCImpl\n * @type {function}\n * @param {Method|rpc.ServiceMethod<Message<{}>,Message<{}>>} method Reflected or static method being called\n * @param {Uint8Array} requestData Request data\n * @param {RPCImplCallback} callback Callback function\n * @returns {undefined}\n * @example\n * function rpcImpl(method, requestData, callback) {\n *     if (protobuf.util.lcFirst(method.name) !== \"myMethod\") // compatible with static code\n *         throw Error(\"no such method\");\n *     asynchronouslyObtainAResponse(requestData, function(err, responseData) {\n *         callback(err, responseData);\n *     });\n * }\n */\n\n/**\n * Node-style callback as used by {@link RPCImpl}.\n * @typedef RPCImplCallback\n * @type {function}\n * @param {Error|null} error Error, if any, otherwise `null`\n * @param {Uint8Array|null} [response] Response data or `null` to signal end of stream, if there hasn't been an error\n * @returns {undefined}\n */\n\nrpc.Service = require(\"./rpc/service\");\n","\"use strict\";\nmodule.exports = Service;\n\nvar util = require(\"../util/minimal\");\n\n// Extends EventEmitter\n(Service.prototype = Object.create(util.EventEmitter.prototype)).constructor = Service;\n\n/**\n * A service method callback as used by {@link rpc.ServiceMethod|ServiceMethod}.\n *\n * Differs from {@link RPCImplCallback} in that it is an actual callback of a service method which may not return `response = null`.\n * @typedef rpc.ServiceMethodCallback\n * @template TRes extends Message<TRes>\n * @type {function}\n * @param {Error|null} error Error, if any\n * @param {TRes} [response] Response message\n * @returns {undefined}\n */\n\n/**\n * A service method part of a {@link rpc.Service} as created by {@link Service.create}.\n * @typedef rpc.ServiceMethod\n * @template TReq extends Message<TReq>\n * @template TRes extends Message<TRes>\n * @type {function}\n * @param {TReq|Properties<TReq>} request Request message or plain object\n * @param {rpc.ServiceMethodCallback<TRes>} [callback] Node-style callback called with the error, if any, and the response message\n * @returns {Promise<Message<TRes>>} Promise if `callback` has been omitted, otherwise `undefined`\n */\n\n/**\n * Constructs a new RPC service instance.\n * @classdesc An RPC service as returned by {@link Service#create}.\n * @exports rpc.Service\n * @extends util.EventEmitter\n * @constructor\n * @param {RPCImpl} rpcImpl RPC implementation\n * @param {boolean} [requestDelimited=false] Whether requests are length-delimited\n * @param {boolean} [responseDelimited=false] Whether responses are length-delimited\n */\nfunction Service(rpcImpl, requestDelimited, responseDelimited) {\n\n    if (typeof rpcImpl !== \"function\")\n        throw TypeError(\"rpcImpl must be a function\");\n\n    util.EventEmitter.call(this);\n\n    /**\n     * RPC implementation. Becomes `null` once the service is ended.\n     * @type {RPCImpl|null}\n     */\n    this.rpcImpl = rpcImpl;\n\n    /**\n     * Whether requests are length-delimited.\n     * @type {boolean}\n     */\n    this.requestDelimited = Boolean(requestDelimited);\n\n    /**\n     * Whether responses are length-delimited.\n     * @type {boolean}\n     */\n    this.responseDelimited = Boolean(responseDelimited);\n}\n\n/**\n * Calls a service method through {@link rpc.Service#rpcImpl|rpcImpl}.\n * @param {Method|rpc.ServiceMethod<TReq,TRes>} method Reflected or static method\n * @param {Constructor<TReq>} requestCtor Request constructor\n * @param {Constructor<TRes>} responseCtor Response constructor\n * @param {TReq|Properties<TReq>} request Request message or plain object\n * @param {rpc.ServiceMethodCallback<TRes>} callback Service callback\n * @returns {undefined}\n * @template TReq extends Message<TReq>\n * @template TRes extends Message<TRes>\n */\nService.prototype.rpcCall = function rpcCall(method, requestCtor, responseCtor, request, callback) {\n\n    if (!request)\n        throw TypeError(\"request must be specified\");\n\n    var self = this;\n    if (!callback)\n        return util.asPromise(rpcCall, self, method, requestCtor, responseCtor, request);\n\n    if (!self.rpcImpl) {\n        setTimeout(function() { callback(Error(\"already ended\")); }, 0);\n        return undefined;\n    }\n\n    try {\n        return self.rpcImpl(\n            method,\n            requestCtor[self.requestDelimited ? \"encodeDelimited\" : \"encode\"](request).finish(),\n            function rpcCallback(err, response) {\n\n                if (err) {\n                    self.emit(\"error\", err, method);\n                    return callback(err);\n                }\n\n                if (response === null) {\n                    self.end(/* endedByRPC */ true);\n                    return undefined;\n                }\n\n                if (!(response instanceof responseCtor)) {\n                    try {\n                        response = responseCtor[self.responseDelimited ? \"decodeDelimited\" : \"decode\"](response);\n                    } catch (err) {\n                        self.emit(\"error\", err, method);\n                        return callback(err);\n                    }\n                }\n\n                self.emit(\"data\", response, method);\n                return callback(null, response);\n            }\n        );\n    } catch (err) {\n        self.emit(\"error\", err, method);\n        setTimeout(function() { callback(err); }, 0);\n        return undefined;\n    }\n};\n\n/**\n * Ends this service and emits the `end` event.\n * @param {boolean} [endedByRPC=false] Whether the service has been ended by the RPC implementation.\n * @returns {rpc.Service} `this`\n */\nService.prototype.end = function end(endedByRPC) {\n    if (this.rpcImpl) {\n        if (!endedByRPC) // signal end to rpcImpl\n            this.rpcImpl(null, null, null);\n        this.rpcImpl = null;\n        this.emit(\"end\").off();\n    }\n    return this;\n};\n","\"use strict\";\nmodule.exports = LongBits;\n\nvar util = require(\"../util/minimal\");\n\n/**\n * Constructs new long bits.\n * @classdesc Helper class for working with the low and high bits of a 64 bit value.\n * @memberof util\n * @constructor\n * @param {number} lo Low 32 bits, unsigned\n * @param {number} hi High 32 bits, unsigned\n */\nfunction LongBits(lo, hi) {\n\n    // note that the casts below are theoretically unnecessary as of today, but older statically\n    // generated converter code might still call the ctor with signed 32bits. kept for compat.\n\n    /**\n     * Low bits.\n     * @type {number}\n     */\n    this.lo = lo >>> 0;\n\n    /**\n     * High bits.\n     * @type {number}\n     */\n    this.hi = hi >>> 0;\n}\n\n/**\n * Zero bits.\n * @memberof util.LongBits\n * @type {util.LongBits}\n */\nvar zero = LongBits.zero = new LongBits(0, 0);\n\nzero.toNumber = function() { return 0; };\nzero.zzEncode = zero.zzDecode = function() { return this; };\nzero.length = function() { return 1; };\n\n/**\n * Zero hash.\n * @memberof util.LongBits\n * @type {string}\n */\nvar zeroHash = LongBits.zeroHash = \"\\0\\0\\0\\0\\0\\0\\0\\0\";\n\n/**\n * Constructs new long bits from the specified number.\n * @param {number} value Value\n * @returns {util.LongBits} Instance\n */\nLongBits.fromNumber = function fromNumber(value) {\n    if (value === 0)\n        return zero;\n    var sign = value < 0;\n    if (sign)\n        value = -value;\n    var lo = value >>> 0,\n        hi = (value - lo) / 4294967296 >>> 0;\n    if (sign) {\n        hi = ~hi >>> 0;\n        lo = ~lo >>> 0;\n        if (++lo > 4294967295) {\n            lo = 0;\n            if (++hi > 4294967295)\n                hi = 0;\n        }\n    }\n    return new LongBits(lo, hi);\n};\n\n/**\n * Constructs new long bits from a number, long or string.\n * @param {Long|number|string} value Value\n * @returns {util.LongBits} Instance\n */\nLongBits.from = function from(value) {\n    if (typeof value === \"number\")\n        return LongBits.fromNumber(value);\n    if (util.isString(value)) {\n        /* istanbul ignore else */\n        if (util.Long)\n            value = util.Long.fromString(value);\n        else\n            return LongBits.fromNumber(parseInt(value, 10));\n    }\n    return value.low || value.high ? new LongBits(value.low >>> 0, value.high >>> 0) : zero;\n};\n\n/**\n * Converts this long bits to a possibly unsafe JavaScript number.\n * @param {boolean} [unsigned=false] Whether unsigned or not\n * @returns {number} Possibly unsafe number\n */\nLongBits.prototype.toNumber = function toNumber(unsigned) {\n    if (!unsigned && this.hi >>> 31) {\n        var lo = ~this.lo + 1 >>> 0,\n            hi = ~this.hi     >>> 0;\n        if (!lo)\n            hi = hi + 1 >>> 0;\n        return -(lo + hi * 4294967296);\n    }\n    return this.lo + this.hi * 4294967296;\n};\n\n/**\n * Converts this long bits to a long.\n * @param {boolean} [unsigned=false] Whether unsigned or not\n * @returns {Long} Long\n */\nLongBits.prototype.toLong = function toLong(unsigned) {\n    return util.Long\n        ? new util.Long(this.lo | 0, this.hi | 0, Boolean(unsigned))\n        /* istanbul ignore next */\n        : { low: this.lo | 0, high: this.hi | 0, unsigned: Boolean(unsigned) };\n};\n\nvar charCodeAt = String.prototype.charCodeAt;\n\n/**\n * Constructs new long bits from the specified 8 characters long hash.\n * @param {string} hash Hash\n * @returns {util.LongBits} Bits\n */\nLongBits.fromHash = function fromHash(hash) {\n    if (hash === zeroHash)\n        return zero;\n    return new LongBits(\n        ( charCodeAt.call(hash, 0)\n        | charCodeAt.call(hash, 1) << 8\n        | charCodeAt.call(hash, 2) << 16\n        | charCodeAt.call(hash, 3) << 24) >>> 0\n    ,\n        ( charCodeAt.call(hash, 4)\n        | charCodeAt.call(hash, 5) << 8\n        | charCodeAt.call(hash, 6) << 16\n        | charCodeAt.call(hash, 7) << 24) >>> 0\n    );\n};\n\n/**\n * Converts this long bits to a 8 characters long hash.\n * @returns {string} Hash\n */\nLongBits.prototype.toHash = function toHash() {\n    return String.fromCharCode(\n        this.lo        & 255,\n        this.lo >>> 8  & 255,\n        this.lo >>> 16 & 255,\n        this.lo >>> 24      ,\n        this.hi        & 255,\n        this.hi >>> 8  & 255,\n        this.hi >>> 16 & 255,\n        this.hi >>> 24\n    );\n};\n\n/**\n * Zig-zag encodes this long bits.\n * @returns {util.LongBits} `this`\n */\nLongBits.prototype.zzEncode = function zzEncode() {\n    var mask =   this.hi >> 31;\n    this.hi  = ((this.hi << 1 | this.lo >>> 31) ^ mask) >>> 0;\n    this.lo  = ( this.lo << 1                   ^ mask) >>> 0;\n    return this;\n};\n\n/**\n * Zig-zag decodes this long bits.\n * @returns {util.LongBits} `this`\n */\nLongBits.prototype.zzDecode = function zzDecode() {\n    var mask = -(this.lo & 1);\n    this.lo  = ((this.lo >>> 1 | this.hi << 31) ^ mask) >>> 0;\n    this.hi  = ( this.hi >>> 1                  ^ mask) >>> 0;\n    return this;\n};\n\n/**\n * Calculates the length of this longbits when encoded as a varint.\n * @returns {number} Length\n */\nLongBits.prototype.length = function length() {\n    var part0 =  this.lo,\n        part1 = (this.lo >>> 28 | this.hi << 4) >>> 0,\n        part2 =  this.hi >>> 24;\n    return part2 === 0\n         ? part1 === 0\n           ? part0 < 16384\n             ? part0 < 128 ? 1 : 2\n             : part0 < 2097152 ? 3 : 4\n           : part1 < 16384\n             ? part1 < 128 ? 5 : 6\n             : part1 < 2097152 ? 7 : 8\n         : part2 < 128 ? 9 : 10;\n};\n","\"use strict\";\nvar util = exports;\n\n// used to return a Promise where callback is omitted\nutil.asPromise = require(\"@protobufjs/aspromise\");\n\n// converts to / from base64 encoded strings\nutil.base64 = require(\"@protobufjs/base64\");\n\n// base class of rpc.Service\nutil.EventEmitter = require(\"@protobufjs/eventemitter\");\n\n// float handling accross browsers\nutil.float = require(\"@protobufjs/float\");\n\n// requires modules optionally and hides the call from bundlers\nutil.inquire = require(\"@protobufjs/inquire\");\n\n// converts to / from utf8 encoded strings\nutil.utf8 = require(\"@protobufjs/utf8\");\n\n// provides a node-like buffer pool in the browser\nutil.pool = require(\"@protobufjs/pool\");\n\n// utility to work with the low and high bits of a 64 bit value\nutil.LongBits = require(\"./longbits\");\n\n/**\n * Whether running within node or not.\n * @memberof util\n * @type {boolean}\n */\nutil.isNode = Boolean(typeof global !== \"undefined\"\n                   && global\n                   && global.process\n                   && global.process.versions\n                   && global.process.versions.node);\n\n/**\n * Global object reference.\n * @memberof util\n * @type {Object}\n */\nutil.global = util.isNode && global\n           || typeof window !== \"undefined\" && window\n           || typeof self   !== \"undefined\" && self\n           || this; // eslint-disable-line no-invalid-this\n\n/**\n * An immuable empty array.\n * @memberof util\n * @type {Array.<*>}\n * @const\n */\nutil.emptyArray = Object.freeze ? Object.freeze([]) : /* istanbul ignore next */ []; // used on prototypes\n\n/**\n * An immutable empty object.\n * @type {Object}\n * @const\n */\nutil.emptyObject = Object.freeze ? Object.freeze({}) : /* istanbul ignore next */ {}; // used on prototypes\n\n/**\n * Tests if the specified value is an integer.\n * @function\n * @param {*} value Value to test\n * @returns {boolean} `true` if the value is an integer\n */\nutil.isInteger = Number.isInteger || /* istanbul ignore next */ function isInteger(value) {\n    return typeof value === \"number\" && isFinite(value) && Math.floor(value) === value;\n};\n\n/**\n * Tests if the specified value is a string.\n * @param {*} value Value to test\n * @returns {boolean} `true` if the value is a string\n */\nutil.isString = function isString(value) {\n    return typeof value === \"string\" || value instanceof String;\n};\n\n/**\n * Tests if the specified value is a non-null object.\n * @param {*} value Value to test\n * @returns {boolean} `true` if the value is a non-null object\n */\nutil.isObject = function isObject(value) {\n    return value && typeof value === \"object\";\n};\n\n/**\n * Checks if a property on a message is considered to be present.\n * This is an alias of {@link util.isSet}.\n * @function\n * @param {Object} obj Plain object or message instance\n * @param {string} prop Property name\n * @returns {boolean} `true` if considered to be present, otherwise `false`\n */\nutil.isset =\n\n/**\n * Checks if a property on a message is considered to be present.\n * @param {Object} obj Plain object or message instance\n * @param {string} prop Property name\n * @returns {boolean} `true` if considered to be present, otherwise `false`\n */\nutil.isSet = function isSet(obj, prop) {\n    var value = obj[prop];\n    if (value != null && obj.hasOwnProperty(prop)) // eslint-disable-line eqeqeq, no-prototype-builtins\n        return typeof value !== \"object\" || (Array.isArray(value) ? value.length : Object.keys(value).length) > 0;\n    return false;\n};\n\n/**\n * Any compatible Buffer instance.\n * This is a minimal stand-alone definition of a Buffer instance. The actual type is that exported by node's typings.\n * @interface Buffer\n * @extends Uint8Array\n */\n\n/**\n * Node's Buffer class if available.\n * @type {Constructor<Buffer>}\n */\nutil.Buffer = (function() {\n    try {\n        var Buffer = util.inquire(\"buffer\").Buffer;\n        // refuse to use non-node buffers if not explicitly assigned (perf reasons):\n        return Buffer.prototype.utf8Write ? Buffer : /* istanbul ignore next */ null;\n    } catch (e) {\n        /* istanbul ignore next */\n        return null;\n    }\n})();\n\n// Internal alias of or polyfull for Buffer.from.\nutil._Buffer_from = null;\n\n// Internal alias of or polyfill for Buffer.allocUnsafe.\nutil._Buffer_allocUnsafe = null;\n\n/**\n * Creates a new buffer of whatever type supported by the environment.\n * @param {number|number[]} [sizeOrArray=0] Buffer size or number array\n * @returns {Uint8Array|Buffer} Buffer\n */\nutil.newBuffer = function newBuffer(sizeOrArray) {\n    /* istanbul ignore next */\n    return typeof sizeOrArray === \"number\"\n        ? util.Buffer\n            ? util._Buffer_allocUnsafe(sizeOrArray)\n            : new util.Array(sizeOrArray)\n        : util.Buffer\n            ? util._Buffer_from(sizeOrArray)\n            : typeof Uint8Array === \"undefined\"\n                ? sizeOrArray\n                : new Uint8Array(sizeOrArray);\n};\n\n/**\n * Array implementation used in the browser. `Uint8Array` if supported, otherwise `Array`.\n * @type {Constructor<Uint8Array>}\n */\nutil.Array = typeof Uint8Array !== \"undefined\" ? Uint8Array /* istanbul ignore next */ : Array;\n\n/**\n * Any compatible Long instance.\n * This is a minimal stand-alone definition of a Long instance. The actual type is that exported by long.js.\n * @interface Long\n * @property {number} low Low bits\n * @property {number} high High bits\n * @property {boolean} unsigned Whether unsigned or not\n */\n\n/**\n * Long.js's Long class if available.\n * @type {Constructor<Long>}\n */\nutil.Long = /* istanbul ignore next */ util.global.dcodeIO && /* istanbul ignore next */ util.global.dcodeIO.Long\n         || /* istanbul ignore next */ util.global.Long\n         || util.inquire(\"long\");\n\n/**\n * Regular expression used to verify 2 bit (`bool`) map keys.\n * @type {RegExp}\n * @const\n */\nutil.key2Re = /^true|false|0|1$/;\n\n/**\n * Regular expression used to verify 32 bit (`int32` etc.) map keys.\n * @type {RegExp}\n * @const\n */\nutil.key32Re = /^-?(?:0|[1-9][0-9]*)$/;\n\n/**\n * Regular expression used to verify 64 bit (`int64` etc.) map keys.\n * @type {RegExp}\n * @const\n */\nutil.key64Re = /^(?:[\\\\x00-\\\\xff]{8}|-?(?:0|[1-9][0-9]*))$/;\n\n/**\n * Converts a number or long to an 8 characters long hash string.\n * @param {Long|number} value Value to convert\n * @returns {string} Hash\n */\nutil.longToHash = function longToHash(value) {\n    return value\n        ? util.LongBits.from(value).toHash()\n        : util.LongBits.zeroHash;\n};\n\n/**\n * Converts an 8 characters long hash string to a long or number.\n * @param {string} hash Hash\n * @param {boolean} [unsigned=false] Whether unsigned or not\n * @returns {Long|number} Original value\n */\nutil.longFromHash = function longFromHash(hash, unsigned) {\n    var bits = util.LongBits.fromHash(hash);\n    if (util.Long)\n        return util.Long.fromBits(bits.lo, bits.hi, unsigned);\n    return bits.toNumber(Boolean(unsigned));\n};\n\n/**\n * Merges the properties of the source object into the destination object.\n * @memberof util\n * @param {Object.<string,*>} dst Destination object\n * @param {Object.<string,*>} src Source object\n * @param {boolean} [ifNotSet=false] Merges only if the key is not already set\n * @returns {Object.<string,*>} Destination object\n */\nfunction merge(dst, src, ifNotSet) { // used by converters\n    for (var keys = Object.keys(src), i = 0; i < keys.length; ++i)\n        if (dst[keys[i]] === undefined || !ifNotSet)\n            dst[keys[i]] = src[keys[i]];\n    return dst;\n}\n\nutil.merge = merge;\n\n/**\n * Converts the first character of a string to lower case.\n * @param {string} str String to convert\n * @returns {string} Converted string\n */\nutil.lcFirst = function lcFirst(str) {\n    return str.charAt(0).toLowerCase() + str.substring(1);\n};\n\n/**\n * Creates a custom error constructor.\n * @memberof util\n * @param {string} name Error name\n * @returns {Constructor<Error>} Custom error constructor\n */\nfunction newError(name) {\n\n    function CustomError(message, properties) {\n\n        if (!(this instanceof CustomError))\n            return new CustomError(message, properties);\n\n        // Error.call(this, message);\n        // ^ just returns a new error instance because the ctor can be called as a function\n\n        Object.defineProperty(this, \"message\", { get: function() { return message; } });\n\n        /* istanbul ignore next */\n        if (Error.captureStackTrace) // node\n            Error.captureStackTrace(this, CustomError);\n        else\n            Object.defineProperty(this, \"stack\", { value: new Error().stack || \"\" });\n\n        if (properties)\n            merge(this, properties);\n    }\n\n    (CustomError.prototype = Object.create(Error.prototype)).constructor = CustomError;\n\n    Object.defineProperty(CustomError.prototype, \"name\", { get: function() { return name; } });\n\n    CustomError.prototype.toString = function toString() {\n        return this.name + \": \" + this.message;\n    };\n\n    return CustomError;\n}\n\nutil.newError = newError;\n\n/**\n * Constructs a new protocol error.\n * @classdesc Error subclass indicating a protocol specifc error.\n * @memberof util\n * @extends Error\n * @template T extends Message<T>\n * @constructor\n * @param {string} message Error message\n * @param {Object.<string,*>} [properties] Additional properties\n * @example\n * try {\n *     MyMessage.decode(someBuffer); // throws if required fields are missing\n * } catch (e) {\n *     if (e instanceof ProtocolError && e.instance)\n *         console.log(\"decoded so far: \" + JSON.stringify(e.instance));\n * }\n */\nutil.ProtocolError = newError(\"ProtocolError\");\n\n/**\n * So far decoded message instance.\n * @name util.ProtocolError#instance\n * @type {Message<T>}\n */\n\n/**\n * A OneOf getter as returned by {@link util.oneOfGetter}.\n * @typedef OneOfGetter\n * @type {function}\n * @returns {string|undefined} Set field name, if any\n */\n\n/**\n * Builds a getter for a oneof's present field name.\n * @param {string[]} fieldNames Field names\n * @returns {OneOfGetter} Unbound getter\n */\nutil.oneOfGetter = function getOneOf(fieldNames) {\n    var fieldMap = {};\n    for (var i = 0; i < fieldNames.length; ++i)\n        fieldMap[fieldNames[i]] = 1;\n\n    /**\n     * @returns {string|undefined} Set field name, if any\n     * @this Object\n     * @ignore\n     */\n    return function() { // eslint-disable-line consistent-return\n        for (var keys = Object.keys(this), i = keys.length - 1; i > -1; --i)\n            if (fieldMap[keys[i]] === 1 && this[keys[i]] !== undefined && this[keys[i]] !== null)\n                return keys[i];\n    };\n};\n\n/**\n * A OneOf setter as returned by {@link util.oneOfSetter}.\n * @typedef OneOfSetter\n * @type {function}\n * @param {string|undefined} value Field name\n * @returns {undefined}\n */\n\n/**\n * Builds a setter for a oneof's present field name.\n * @param {string[]} fieldNames Field names\n * @returns {OneOfSetter} Unbound setter\n */\nutil.oneOfSetter = function setOneOf(fieldNames) {\n\n    /**\n     * @param {string} name Field name\n     * @returns {undefined}\n     * @this Object\n     * @ignore\n     */\n    return function(name) {\n        for (var i = 0; i < fieldNames.length; ++i)\n            if (fieldNames[i] !== name)\n                delete this[fieldNames[i]];\n    };\n};\n\n/**\n * Default conversion options used for {@link Message#toJSON} implementations.\n *\n * These options are close to proto3's JSON mapping with the exception that internal types like Any are handled just like messages. More precisely:\n *\n * - Longs become strings\n * - Enums become string keys\n * - Bytes become base64 encoded strings\n * - (Sub-)Messages become plain objects\n * - Maps become plain objects with all string keys\n * - Repeated fields become arrays\n * - NaN and Infinity for float and double fields become strings\n *\n * @type {IConversionOptions}\n * @see https://developers.google.com/protocol-buffers/docs/proto3?hl=en#json\n */\nutil.toJSONOptions = {\n    longs: String,\n    enums: String,\n    bytes: String,\n    json: true\n};\n\n// Sets up buffer utility according to the environment (called in index-minimal)\nutil._configure = function() {\n    var Buffer = util.Buffer;\n    /* istanbul ignore if */\n    if (!Buffer) {\n        util._Buffer_from = util._Buffer_allocUnsafe = null;\n        return;\n    }\n    // because node 4.x buffers are incompatible & immutable\n    // see: https://github.com/dcodeIO/protobuf.js/pull/665\n    util._Buffer_from = Buffer.from !== Uint8Array.from && Buffer.from ||\n        /* istanbul ignore next */\n        function Buffer_from(value, encoding) {\n            return new Buffer(value, encoding);\n        };\n    util._Buffer_allocUnsafe = Buffer.allocUnsafe ||\n        /* istanbul ignore next */\n        function Buffer_allocUnsafe(size) {\n            return new Buffer(size);\n        };\n};\n","\"use strict\";\nmodule.exports = Writer;\n\nvar util      = require(\"./util/minimal\");\n\nvar BufferWriter; // cyclic\n\nvar LongBits  = util.LongBits,\n    base64    = util.base64,\n    utf8      = util.utf8;\n\n/**\n * Constructs a new writer operation instance.\n * @classdesc Scheduled writer operation.\n * @constructor\n * @param {function(*, Uint8Array, number)} fn Function to call\n * @param {number} len Value byte length\n * @param {*} val Value to write\n * @ignore\n */\nfunction Op(fn, len, val) {\n\n    /**\n     * Function to call.\n     * @type {function(Uint8Array, number, *)}\n     */\n    this.fn = fn;\n\n    /**\n     * Value byte length.\n     * @type {number}\n     */\n    this.len = len;\n\n    /**\n     * Next operation.\n     * @type {Writer.Op|undefined}\n     */\n    this.next = undefined;\n\n    /**\n     * Value to write.\n     * @type {*}\n     */\n    this.val = val; // type varies\n}\n\n/* istanbul ignore next */\nfunction noop() {} // eslint-disable-line no-empty-function\n\n/**\n * Constructs a new writer state instance.\n * @classdesc Copied writer state.\n * @memberof Writer\n * @constructor\n * @param {Writer} writer Writer to copy state from\n * @ignore\n */\nfunction State(writer) {\n\n    /**\n     * Current head.\n     * @type {Writer.Op}\n     */\n    this.head = writer.head;\n\n    /**\n     * Current tail.\n     * @type {Writer.Op}\n     */\n    this.tail = writer.tail;\n\n    /**\n     * Current buffer length.\n     * @type {number}\n     */\n    this.len = writer.len;\n\n    /**\n     * Next state.\n     * @type {State|null}\n     */\n    this.next = writer.states;\n}\n\n/**\n * Constructs a new writer instance.\n * @classdesc Wire format writer using `Uint8Array` if available, otherwise `Array`.\n * @constructor\n */\nfunction Writer() {\n\n    /**\n     * Current length.\n     * @type {number}\n     */\n    this.len = 0;\n\n    /**\n     * Operations head.\n     * @type {Object}\n     */\n    this.head = new Op(noop, 0, 0);\n\n    /**\n     * Operations tail\n     * @type {Object}\n     */\n    this.tail = this.head;\n\n    /**\n     * Linked forked states.\n     * @type {Object|null}\n     */\n    this.states = null;\n\n    // When a value is written, the writer calculates its byte length and puts it into a linked\n    // list of operations to perform when finish() is called. This both allows us to allocate\n    // buffers of the exact required size and reduces the amount of work we have to do compared\n    // to first calculating over objects and then encoding over objects. In our case, the encoding\n    // part is just a linked list walk calling operations with already prepared values.\n}\n\nvar create = function create() {\n    return util.Buffer\n        ? function create_buffer_setup() {\n            return (Writer.create = function create_buffer() {\n                return new BufferWriter();\n            })();\n        }\n        /* istanbul ignore next */\n        : function create_array() {\n            return new Writer();\n        };\n};\n\n/**\n * Creates a new writer.\n * @function\n * @returns {BufferWriter|Writer} A {@link BufferWriter} when Buffers are supported, otherwise a {@link Writer}\n */\nWriter.create = create();\n\n/**\n * Allocates a buffer of the specified size.\n * @param {number} size Buffer size\n * @returns {Uint8Array} Buffer\n */\nWriter.alloc = function alloc(size) {\n    return new util.Array(size);\n};\n\n// Use Uint8Array buffer pool in the browser, just like node does with buffers\n/* istanbul ignore else */\nif (util.Array !== Array)\n    Writer.alloc = util.pool(Writer.alloc, util.Array.prototype.subarray);\n\n/**\n * Pushes a new operation to the queue.\n * @param {function(Uint8Array, number, *)} fn Function to call\n * @param {number} len Value byte length\n * @param {number} val Value to write\n * @returns {Writer} `this`\n * @private\n */\nWriter.prototype._push = function push(fn, len, val) {\n    this.tail = this.tail.next = new Op(fn, len, val);\n    this.len += len;\n    return this;\n};\n\nfunction writeByte(val, buf, pos) {\n    buf[pos] = val & 255;\n}\n\nfunction writeVarint32(val, buf, pos) {\n    while (val > 127) {\n        buf[pos++] = val & 127 | 128;\n        val >>>= 7;\n    }\n    buf[pos] = val;\n}\n\n/**\n * Constructs a new varint writer operation instance.\n * @classdesc Scheduled varint writer operation.\n * @extends Op\n * @constructor\n * @param {number} len Value byte length\n * @param {number} val Value to write\n * @ignore\n */\nfunction VarintOp(len, val) {\n    this.len = len;\n    this.next = undefined;\n    this.val = val;\n}\n\nVarintOp.prototype = Object.create(Op.prototype);\nVarintOp.prototype.fn = writeVarint32;\n\n/**\n * Writes an unsigned 32 bit value as a varint.\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.uint32 = function write_uint32(value) {\n    // here, the call to this.push has been inlined and a varint specific Op subclass is used.\n    // uint32 is by far the most frequently used operation and benefits significantly from this.\n    this.len += (this.tail = this.tail.next = new VarintOp(\n        (value = value >>> 0)\n                < 128       ? 1\n        : value < 16384     ? 2\n        : value < 2097152   ? 3\n        : value < 268435456 ? 4\n        :                     5,\n    value)).len;\n    return this;\n};\n\n/**\n * Writes a signed 32 bit value as a varint.\n * @function\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.int32 = function write_int32(value) {\n    return value < 0\n        ? this._push(writeVarint64, 10, LongBits.fromNumber(value)) // 10 bytes per spec\n        : this.uint32(value);\n};\n\n/**\n * Writes a 32 bit value as a varint, zig-zag encoded.\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.sint32 = function write_sint32(value) {\n    return this.uint32((value << 1 ^ value >> 31) >>> 0);\n};\n\nfunction writeVarint64(val, buf, pos) {\n    while (val.hi) {\n        buf[pos++] = val.lo & 127 | 128;\n        val.lo = (val.lo >>> 7 | val.hi << 25) >>> 0;\n        val.hi >>>= 7;\n    }\n    while (val.lo > 127) {\n        buf[pos++] = val.lo & 127 | 128;\n        val.lo = val.lo >>> 7;\n    }\n    buf[pos++] = val.lo;\n}\n\n/**\n * Writes an unsigned 64 bit value as a varint.\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.uint64 = function write_uint64(value) {\n    var bits = LongBits.from(value);\n    return this._push(writeVarint64, bits.length(), bits);\n};\n\n/**\n * Writes a signed 64 bit value as a varint.\n * @function\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.int64 = Writer.prototype.uint64;\n\n/**\n * Writes a signed 64 bit value as a varint, zig-zag encoded.\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.sint64 = function write_sint64(value) {\n    var bits = LongBits.from(value).zzEncode();\n    return this._push(writeVarint64, bits.length(), bits);\n};\n\n/**\n * Writes a boolish value as a varint.\n * @param {boolean} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.bool = function write_bool(value) {\n    return this._push(writeByte, 1, value ? 1 : 0);\n};\n\nfunction writeFixed32(val, buf, pos) {\n    buf[pos    ] =  val         & 255;\n    buf[pos + 1] =  val >>> 8   & 255;\n    buf[pos + 2] =  val >>> 16  & 255;\n    buf[pos + 3] =  val >>> 24;\n}\n\n/**\n * Writes an unsigned 32 bit value as fixed 32 bits.\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.fixed32 = function write_fixed32(value) {\n    return this._push(writeFixed32, 4, value >>> 0);\n};\n\n/**\n * Writes a signed 32 bit value as fixed 32 bits.\n * @function\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.sfixed32 = Writer.prototype.fixed32;\n\n/**\n * Writes an unsigned 64 bit value as fixed 64 bits.\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.fixed64 = function write_fixed64(value) {\n    var bits = LongBits.from(value);\n    return this._push(writeFixed32, 4, bits.lo)._push(writeFixed32, 4, bits.hi);\n};\n\n/**\n * Writes a signed 64 bit value as fixed 64 bits.\n * @function\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.sfixed64 = Writer.prototype.fixed64;\n\n/**\n * Writes a float (32 bit).\n * @function\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.float = function write_float(value) {\n    return this._push(util.float.writeFloatLE, 4, value);\n};\n\n/**\n * Writes a double (64 bit float).\n * @function\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.double = function write_double(value) {\n    return this._push(util.float.writeDoubleLE, 8, value);\n};\n\nvar writeBytes = util.Array.prototype.set\n    ? function writeBytes_set(val, buf, pos) {\n        buf.set(val, pos); // also works for plain array values\n    }\n    /* istanbul ignore next */\n    : function writeBytes_for(val, buf, pos) {\n        for (var i = 0; i < val.length; ++i)\n            buf[pos + i] = val[i];\n    };\n\n/**\n * Writes a sequence of bytes.\n * @param {Uint8Array|string} value Buffer or base64 encoded string to write\n * @returns {Writer} `this`\n */\nWriter.prototype.bytes = function write_bytes(value) {\n    var len = value.length >>> 0;\n    if (!len)\n        return this._push(writeByte, 1, 0);\n    if (util.isString(value)) {\n        var buf = Writer.alloc(len = base64.length(value));\n        base64.decode(value, buf, 0);\n        value = buf;\n    }\n    return this.uint32(len)._push(writeBytes, len, value);\n};\n\n/**\n * Writes a string.\n * @param {string} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.string = function write_string(value) {\n    var len = utf8.length(value);\n    return len\n        ? this.uint32(len)._push(utf8.write, len, value)\n        : this._push(writeByte, 1, 0);\n};\n\n/**\n * Forks this writer's state by pushing it to a stack.\n * Calling {@link Writer#reset|reset} or {@link Writer#ldelim|ldelim} resets the writer to the previous state.\n * @returns {Writer} `this`\n */\nWriter.prototype.fork = function fork() {\n    this.states = new State(this);\n    this.head = this.tail = new Op(noop, 0, 0);\n    this.len = 0;\n    return this;\n};\n\n/**\n * Resets this instance to the last state.\n * @returns {Writer} `this`\n */\nWriter.prototype.reset = function reset() {\n    if (this.states) {\n        this.head   = this.states.head;\n        this.tail   = this.states.tail;\n        this.len    = this.states.len;\n        this.states = this.states.next;\n    } else {\n        this.head = this.tail = new Op(noop, 0, 0);\n        this.len  = 0;\n    }\n    return this;\n};\n\n/**\n * Resets to the last state and appends the fork state's current write length as a varint followed by its operations.\n * @returns {Writer} `this`\n */\nWriter.prototype.ldelim = function ldelim() {\n    var head = this.head,\n        tail = this.tail,\n        len  = this.len;\n    this.reset().uint32(len);\n    if (len) {\n        this.tail.next = head.next; // skip noop\n        this.tail = tail;\n        this.len += len;\n    }\n    return this;\n};\n\n/**\n * Finishes the write operation.\n * @returns {Uint8Array} Finished buffer\n */\nWriter.prototype.finish = function finish() {\n    var head = this.head.next, // skip noop\n        buf  = this.constructor.alloc(this.len),\n        pos  = 0;\n    while (head) {\n        head.fn(head.val, buf, pos);\n        pos += head.len;\n        head = head.next;\n    }\n    // this.head = this.tail = null;\n    return buf;\n};\n\nWriter._configure = function(BufferWriter_) {\n    BufferWriter = BufferWriter_;\n    Writer.create = create();\n    BufferWriter._configure();\n};\n","\"use strict\";\nmodule.exports = BufferWriter;\n\n// extends Writer\nvar Writer = require(\"./writer\");\n(BufferWriter.prototype = Object.create(Writer.prototype)).constructor = BufferWriter;\n\nvar util = require(\"./util/minimal\");\n\n/**\n * Constructs a new buffer writer instance.\n * @classdesc Wire format writer using node buffers.\n * @extends Writer\n * @constructor\n */\nfunction BufferWriter() {\n    Writer.call(this);\n}\n\nBufferWriter._configure = function () {\n    /**\n     * Allocates a buffer of the specified size.\n     * @function\n     * @param {number} size Buffer size\n     * @returns {Buffer} Buffer\n     */\n    BufferWriter.alloc = util._Buffer_allocUnsafe;\n\n    BufferWriter.writeBytesBuffer = util.Buffer && util.Buffer.prototype instanceof Uint8Array && util.Buffer.prototype.set.name === \"set\"\n        ? function writeBytesBuffer_set(val, buf, pos) {\n          buf.set(val, pos); // faster than copy (requires node >= 4 where Buffers extend Uint8Array and set is properly inherited)\n          // also works for plain array values\n        }\n        /* istanbul ignore next */\n        : function writeBytesBuffer_copy(val, buf, pos) {\n          if (val.copy) // Buffer values\n            val.copy(buf, pos, 0, val.length);\n          else for (var i = 0; i < val.length;) // plain array values\n            buf[pos++] = val[i++];\n        };\n};\n\n\n/**\n * @override\n */\nBufferWriter.prototype.bytes = function write_bytes_buffer(value) {\n    if (util.isString(value))\n        value = util._Buffer_from(value, \"base64\");\n    var len = value.length >>> 0;\n    this.uint32(len);\n    if (len)\n        this._push(BufferWriter.writeBytesBuffer, len, value);\n    return this;\n};\n\nfunction writeStringBuffer(val, buf, pos) {\n    if (val.length < 40) // plain js is faster for short strings (probably due to redundant assertions)\n        util.utf8.write(val, buf, pos);\n    else if (buf.utf8Write)\n        buf.utf8Write(val, pos);\n    else\n        buf.write(val, pos);\n}\n\n/**\n * @override\n */\nBufferWriter.prototype.string = function write_string_buffer(value) {\n    var len = util.Buffer.byteLength(value);\n    this.uint32(len);\n    if (len)\n        this._push(writeStringBuffer, len, value);\n    return this;\n};\n\n\n/**\n * Finishes the write operation.\n * @name BufferWriter#finish\n * @function\n * @returns {Buffer} Finished buffer\n */\n\nBufferWriter._configure();\n","/// @file\n/// @addtogroup flatbuffers_javascript_api\n/// @{\n/// @cond FLATBUFFERS_INTERNAL\n\n/**\n * @fileoverview\n *\n * Need to suppress 'global this' error so the Node.js export line doesn't cause\n * closure compile to error out.\n * @suppress {globalThis}\n */\n\n/**\n * @const\n * @namespace\n */\nvar flatbuffers = {};\n\n/**\n * @typedef {number}\n */\nflatbuffers.Offset;\n\n/**\n * @typedef {{\n *   bb: flatbuffers.ByteBuffer,\n *   bb_pos: number\n * }}\n */\nflatbuffers.Table;\n\n/**\n * @type {number}\n * @const\n */\nflatbuffers.SIZEOF_SHORT = 2;\n\n/**\n * @type {number}\n * @const\n */\nflatbuffers.SIZEOF_INT = 4;\n\n/**\n * @type {number}\n * @const\n */\nflatbuffers.FILE_IDENTIFIER_LENGTH = 4;\n\n/**\n * @type {number}\n * @const\n */\nflatbuffers.SIZE_PREFIX_LENGTH = 4;\n\n/**\n * @enum {number}\n */\nflatbuffers.Encoding = {\n  UTF8_BYTES: 1,\n  UTF16_STRING: 2\n};\n\n/**\n * @type {Int32Array}\n * @const\n */\nflatbuffers.int32 = new Int32Array(2);\n\n/**\n * @type {Float32Array}\n * @const\n */\nflatbuffers.float32 = new Float32Array(flatbuffers.int32.buffer);\n\n/**\n * @type {Float64Array}\n * @const\n */\nflatbuffers.float64 = new Float64Array(flatbuffers.int32.buffer);\n\n/**\n * @type {boolean}\n * @const\n */\nflatbuffers.isLittleEndian = new Uint16Array(new Uint8Array([1, 0]).buffer)[0] === 1;\n\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * @constructor\n * @param {number} low\n * @param {number} high\n */\nflatbuffers.Long = function(low, high) {\n  /**\n   * @type {number}\n   * @const\n   */\n  this.low = low | 0;\n\n  /**\n   * @type {number}\n   * @const\n   */\n  this.high = high | 0;\n};\n\n/**\n * @param {number} low\n * @param {number} high\n * @returns {!flatbuffers.Long}\n */\nflatbuffers.Long.create = function(low, high) {\n  // Special-case zero to avoid GC overhead for default values\n  return low == 0 && high == 0 ? flatbuffers.Long.ZERO : new flatbuffers.Long(low, high);\n};\n\n/**\n * @returns {number}\n */\nflatbuffers.Long.prototype.toFloat64 = function() {\n  return (this.low >>> 0) + this.high * 0x100000000;\n};\n\n/**\n * @param {flatbuffers.Long} other\n * @returns {boolean}\n */\nflatbuffers.Long.prototype.equals = function(other) {\n  return this.low == other.low && this.high == other.high;\n};\n\n/**\n * @type {!flatbuffers.Long}\n * @const\n */\nflatbuffers.Long.ZERO = new flatbuffers.Long(0, 0);\n\n/// @endcond\n////////////////////////////////////////////////////////////////////////////////\n/**\n * Create a FlatBufferBuilder.\n *\n * @constructor\n * @param {number=} opt_initial_size\n */\nflatbuffers.Builder = function(opt_initial_size) {\n  if (!opt_initial_size) {\n    var initial_size = 1024;\n  } else {\n    var initial_size = opt_initial_size;\n  }\n\n  /**\n   * @type {flatbuffers.ByteBuffer}\n   * @private\n   */\n  this.bb = flatbuffers.ByteBuffer.allocate(initial_size);\n\n  /**\n   * Remaining space in the ByteBuffer.\n   *\n   * @type {number}\n   * @private\n   */\n  this.space = initial_size;\n\n  /**\n   * Minimum alignment encountered so far.\n   *\n   * @type {number}\n   * @private\n   */\n  this.minalign = 1;\n\n  /**\n   * The vtable for the current table.\n   *\n   * @type {Array.<number>}\n   * @private\n   */\n  this.vtable = null;\n\n  /**\n   * The amount of fields we're actually using.\n   *\n   * @type {number}\n   * @private\n   */\n  this.vtable_in_use = 0;\n\n  /**\n   * Whether we are currently serializing a table.\n   *\n   * @type {boolean}\n   * @private\n   */\n  this.isNested = false;\n\n  /**\n   * Starting offset of the current struct/table.\n   *\n   * @type {number}\n   * @private\n   */\n  this.object_start = 0;\n\n  /**\n   * List of offsets of all vtables.\n   *\n   * @type {Array.<number>}\n   * @private\n   */\n  this.vtables = [];\n\n  /**\n   * For the current vector being built.\n   *\n   * @type {number}\n   * @private\n   */\n  this.vector_num_elems = 0;\n\n  /**\n   * False omits default values from the serialized data\n   *\n   * @type {boolean}\n   * @private\n   */\n  this.force_defaults = false;\n};\n\nflatbuffers.Builder.prototype.clear = function() {\n  this.bb.clear();\n  this.space = this.bb.capacity();\n  this.minalign = 1;\n  this.vtable = null;\n  this.vtable_in_use = 0;\n  this.isNested = false;\n  this.object_start = 0;\n  this.vtables = [];\n  this.vector_num_elems = 0;\n  this.force_defaults = false;\n};\n\n/**\n * In order to save space, fields that are set to their default value\n * don't get serialized into the buffer. Forcing defaults provides a\n * way to manually disable this optimization.\n *\n * @param {boolean} forceDefaults true always serializes default values\n */\nflatbuffers.Builder.prototype.forceDefaults = function(forceDefaults) {\n  this.force_defaults = forceDefaults;\n};\n\n/**\n * Get the ByteBuffer representing the FlatBuffer. Only call this after you've\n * called finish(). The actual data starts at the ByteBuffer's current position,\n * not necessarily at 0.\n *\n * @returns {flatbuffers.ByteBuffer}\n */\nflatbuffers.Builder.prototype.dataBuffer = function() {\n  return this.bb;\n};\n\n/**\n * Get the bytes representing the FlatBuffer. Only call this after you've\n * called finish().\n *\n * @returns {!Uint8Array}\n */\nflatbuffers.Builder.prototype.asUint8Array = function() {\n  return this.bb.bytes().subarray(this.bb.position(), this.bb.position() + this.offset());\n};\n\n/// @cond FLATBUFFERS_INTERNAL\n/**\n * Prepare to write an element of `size` after `additional_bytes` have been\n * written, e.g. if you write a string, you need to align such the int length\n * field is aligned to 4 bytes, and the string data follows it directly. If all\n * you need to do is alignment, `additional_bytes` will be 0.\n *\n * @param {number} size This is the of the new element to write\n * @param {number} additional_bytes The padding size\n */\nflatbuffers.Builder.prototype.prep = function(size, additional_bytes) {\n  // Track the biggest thing we've ever aligned to.\n  if (size > this.minalign) {\n    this.minalign = size;\n  }\n\n  // Find the amount of alignment needed such that `size` is properly\n  // aligned after `additional_bytes`\n  var align_size = ((~(this.bb.capacity() - this.space + additional_bytes)) + 1) & (size - 1);\n\n  // Reallocate the buffer if needed.\n  while (this.space < align_size + size + additional_bytes) {\n    var old_buf_size = this.bb.capacity();\n    this.bb = flatbuffers.Builder.growByteBuffer(this.bb);\n    this.space += this.bb.capacity() - old_buf_size;\n  }\n\n  this.pad(align_size);\n};\n\n/**\n * @param {number} byte_size\n */\nflatbuffers.Builder.prototype.pad = function(byte_size) {\n  for (var i = 0; i < byte_size; i++) {\n    this.bb.writeInt8(--this.space, 0);\n  }\n};\n\n/**\n * @param {number} value\n */\nflatbuffers.Builder.prototype.writeInt8 = function(value) {\n  this.bb.writeInt8(this.space -= 1, value);\n};\n\n/**\n * @param {number} value\n */\nflatbuffers.Builder.prototype.writeInt16 = function(value) {\n  this.bb.writeInt16(this.space -= 2, value);\n};\n\n/**\n * @param {number} value\n */\nflatbuffers.Builder.prototype.writeInt32 = function(value) {\n  this.bb.writeInt32(this.space -= 4, value);\n};\n\n/**\n * @param {flatbuffers.Long} value\n */\nflatbuffers.Builder.prototype.writeInt64 = function(value) {\n  this.bb.writeInt64(this.space -= 8, value);\n};\n\n/**\n * @param {number} value\n */\nflatbuffers.Builder.prototype.writeFloat32 = function(value) {\n  this.bb.writeFloat32(this.space -= 4, value);\n};\n\n/**\n * @param {number} value\n */\nflatbuffers.Builder.prototype.writeFloat64 = function(value) {\n  this.bb.writeFloat64(this.space -= 8, value);\n};\n/// @endcond\n\n/**\n * Add an `int8` to the buffer, properly aligned, and grows the buffer (if necessary).\n * @param {number} value The `int8` to add the the buffer.\n */\nflatbuffers.Builder.prototype.addInt8 = function(value) {\n  this.prep(1, 0);\n  this.writeInt8(value);\n};\n\n/**\n * Add an `int16` to the buffer, properly aligned, and grows the buffer (if necessary).\n * @param {number} value The `int16` to add the the buffer.\n */\nflatbuffers.Builder.prototype.addInt16 = function(value) {\n  this.prep(2, 0);\n  this.writeInt16(value);\n};\n\n/**\n * Add an `int32` to the buffer, properly aligned, and grows the buffer (if necessary).\n * @param {number} value The `int32` to add the the buffer.\n */\nflatbuffers.Builder.prototype.addInt32 = function(value) {\n  this.prep(4, 0);\n  this.writeInt32(value);\n};\n\n/**\n * Add an `int64` to the buffer, properly aligned, and grows the buffer (if necessary).\n * @param {flatbuffers.Long} value The `int64` to add the the buffer.\n */\nflatbuffers.Builder.prototype.addInt64 = function(value) {\n  this.prep(8, 0);\n  this.writeInt64(value);\n};\n\n/**\n * Add a `float32` to the buffer, properly aligned, and grows the buffer (if necessary).\n * @param {number} value The `float32` to add the the buffer.\n */\nflatbuffers.Builder.prototype.addFloat32 = function(value) {\n  this.prep(4, 0);\n  this.writeFloat32(value);\n};\n\n/**\n * Add a `float64` to the buffer, properly aligned, and grows the buffer (if necessary).\n * @param {number} value The `float64` to add the the buffer.\n */\nflatbuffers.Builder.prototype.addFloat64 = function(value) {\n  this.prep(8, 0);\n  this.writeFloat64(value);\n};\n\n/// @cond FLATBUFFERS_INTERNAL\n/**\n * @param {number} voffset\n * @param {number} value\n * @param {number} defaultValue\n */\nflatbuffers.Builder.prototype.addFieldInt8 = function(voffset, value, defaultValue) {\n  if (this.force_defaults || value != defaultValue) {\n    this.addInt8(value);\n    this.slot(voffset);\n  }\n};\n\n/**\n * @param {number} voffset\n * @param {number} value\n * @param {number} defaultValue\n */\nflatbuffers.Builder.prototype.addFieldInt16 = function(voffset, value, defaultValue) {\n  if (this.force_defaults || value != defaultValue) {\n    this.addInt16(value);\n    this.slot(voffset);\n  }\n};\n\n/**\n * @param {number} voffset\n * @param {number} value\n * @param {number} defaultValue\n */\nflatbuffers.Builder.prototype.addFieldInt32 = function(voffset, value, defaultValue) {\n  if (this.force_defaults || value != defaultValue) {\n    this.addInt32(value);\n    this.slot(voffset);\n  }\n};\n\n/**\n * @param {number} voffset\n * @param {flatbuffers.Long} value\n * @param {flatbuffers.Long} defaultValue\n */\nflatbuffers.Builder.prototype.addFieldInt64 = function(voffset, value, defaultValue) {\n  if (this.force_defaults || !value.equals(defaultValue)) {\n    this.addInt64(value);\n    this.slot(voffset);\n  }\n};\n\n/**\n * @param {number} voffset\n * @param {number} value\n * @param {number} defaultValue\n */\nflatbuffers.Builder.prototype.addFieldFloat32 = function(voffset, value, defaultValue) {\n  if (this.force_defaults || value != defaultValue) {\n    this.addFloat32(value);\n    this.slot(voffset);\n  }\n};\n\n/**\n * @param {number} voffset\n * @param {number} value\n * @param {number} defaultValue\n */\nflatbuffers.Builder.prototype.addFieldFloat64 = function(voffset, value, defaultValue) {\n  if (this.force_defaults || value != defaultValue) {\n    this.addFloat64(value);\n    this.slot(voffset);\n  }\n};\n\n/**\n * @param {number} voffset\n * @param {flatbuffers.Offset} value\n * @param {flatbuffers.Offset} defaultValue\n */\nflatbuffers.Builder.prototype.addFieldOffset = function(voffset, value, defaultValue) {\n  if (this.force_defaults || value != defaultValue) {\n    this.addOffset(value);\n    this.slot(voffset);\n  }\n};\n\n/**\n * Structs are stored inline, so nothing additional is being added. `d` is always 0.\n *\n * @param {number} voffset\n * @param {flatbuffers.Offset} value\n * @param {flatbuffers.Offset} defaultValue\n */\nflatbuffers.Builder.prototype.addFieldStruct = function(voffset, value, defaultValue) {\n  if (value != defaultValue) {\n    this.nested(value);\n    this.slot(voffset);\n  }\n};\n\n/**\n * Structures are always stored inline, they need to be created right\n * where they're used.  You'll get this assertion failure if you\n * created it elsewhere.\n *\n * @param {flatbuffers.Offset} obj The offset of the created object\n */\nflatbuffers.Builder.prototype.nested = function(obj) {\n  if (obj != this.offset()) {\n    throw new Error('FlatBuffers: struct must be serialized inline.');\n  }\n};\n\n/**\n * Should not be creating any other object, string or vector\n * while an object is being constructed\n */\nflatbuffers.Builder.prototype.notNested = function() {\n  if (this.isNested) {\n    throw new Error('FlatBuffers: object serialization must not be nested.');\n  }\n};\n\n/**\n * Set the current vtable at `voffset` to the current location in the buffer.\n *\n * @param {number} voffset\n */\nflatbuffers.Builder.prototype.slot = function(voffset) {\n  this.vtable[voffset] = this.offset();\n};\n\n/**\n * @returns {flatbuffers.Offset} Offset relative to the end of the buffer.\n */\nflatbuffers.Builder.prototype.offset = function() {\n  return this.bb.capacity() - this.space;\n};\n\n/**\n * Doubles the size of the backing ByteBuffer and copies the old data towards\n * the end of the new buffer (since we build the buffer backwards).\n *\n * @param {flatbuffers.ByteBuffer} bb The current buffer with the existing data\n * @returns {!flatbuffers.ByteBuffer} A new byte buffer with the old data copied\n * to it. The data is located at the end of the buffer.\n *\n * uint8Array.set() formally takes {Array<number>|ArrayBufferView}, so to pass\n * it a uint8Array we need to suppress the type check:\n * @suppress {checkTypes}\n */\nflatbuffers.Builder.growByteBuffer = function(bb) {\n  var old_buf_size = bb.capacity();\n\n  // Ensure we don't grow beyond what fits in an int.\n  if (old_buf_size & 0xC0000000) {\n    throw new Error('FlatBuffers: cannot grow buffer beyond 2 gigabytes.');\n  }\n\n  var new_buf_size = old_buf_size << 1;\n  var nbb = flatbuffers.ByteBuffer.allocate(new_buf_size);\n  nbb.setPosition(new_buf_size - old_buf_size);\n  nbb.bytes().set(bb.bytes(), new_buf_size - old_buf_size);\n  return nbb;\n};\n/// @endcond\n\n/**\n * Adds on offset, relative to where it will be written.\n *\n * @param {flatbuffers.Offset} offset The offset to add.\n */\nflatbuffers.Builder.prototype.addOffset = function(offset) {\n  this.prep(flatbuffers.SIZEOF_INT, 0); // Ensure alignment is already done.\n  this.writeInt32(this.offset() - offset + flatbuffers.SIZEOF_INT);\n};\n\n/// @cond FLATBUFFERS_INTERNAL\n/**\n * Start encoding a new object in the buffer.  Users will not usually need to\n * call this directly. The FlatBuffers compiler will generate helper methods\n * that call this method internally.\n *\n * @param {number} numfields\n */\nflatbuffers.Builder.prototype.startObject = function(numfields) {\n  this.notNested();\n  if (this.vtable == null) {\n    this.vtable = [];\n  }\n  this.vtable_in_use = numfields;\n  for (var i = 0; i < numfields; i++) {\n    this.vtable[i] = 0; // This will push additional elements as needed\n  }\n  this.isNested = true;\n  this.object_start = this.offset();\n};\n\n/**\n * Finish off writing the object that is under construction.\n *\n * @returns {flatbuffers.Offset} The offset to the object inside `dataBuffer`\n */\nflatbuffers.Builder.prototype.endObject = function() {\n  if (this.vtable == null || !this.isNested) {\n    throw new Error('FlatBuffers: endObject called without startObject');\n  }\n\n  this.addInt32(0);\n  var vtableloc = this.offset();\n\n  // Trim trailing zeroes.\n  var i = this.vtable_in_use - 1;\n  for (; i >= 0 && this.vtable[i] == 0; i--) {}\n  var trimmed_size = i + 1;\n\n  // Write out the current vtable.\n  for (; i >= 0; i--) {\n    // Offset relative to the start of the table.\n    this.addInt16(this.vtable[i] != 0 ? vtableloc - this.vtable[i] : 0);\n  }\n\n  var standard_fields = 2; // The fields below:\n  this.addInt16(vtableloc - this.object_start);\n  var len = (trimmed_size + standard_fields) * flatbuffers.SIZEOF_SHORT;\n  this.addInt16(len);\n\n  // Search for an existing vtable that matches the current one.\n  var existing_vtable = 0;\n  var vt1 = this.space;\nouter_loop:\n  for (i = 0; i < this.vtables.length; i++) {\n    var vt2 = this.bb.capacity() - this.vtables[i];\n    if (len == this.bb.readInt16(vt2)) {\n      for (var j = flatbuffers.SIZEOF_SHORT; j < len; j += flatbuffers.SIZEOF_SHORT) {\n        if (this.bb.readInt16(vt1 + j) != this.bb.readInt16(vt2 + j)) {\n          continue outer_loop;\n        }\n      }\n      existing_vtable = this.vtables[i];\n      break;\n    }\n  }\n\n  if (existing_vtable) {\n    // Found a match:\n    // Remove the current vtable.\n    this.space = this.bb.capacity() - vtableloc;\n\n    // Point table to existing vtable.\n    this.bb.writeInt32(this.space, existing_vtable - vtableloc);\n  } else {\n    // No match:\n    // Add the location of the current vtable to the list of vtables.\n    this.vtables.push(this.offset());\n\n    // Point table to current vtable.\n    this.bb.writeInt32(this.bb.capacity() - vtableloc, this.offset() - vtableloc);\n  }\n\n  this.isNested = false;\n  return vtableloc;\n};\n/// @endcond\n\n/**\n * Finalize a buffer, poiting to the given `root_table`.\n *\n * @param {flatbuffers.Offset} root_table\n * @param {string=} opt_file_identifier\n * @param {boolean=} opt_size_prefix\n */\nflatbuffers.Builder.prototype.finish = function(root_table, opt_file_identifier, opt_size_prefix) {\n  var size_prefix = opt_size_prefix ? flatbuffers.SIZE_PREFIX_LENGTH : 0;\n  if (opt_file_identifier) {\n    var file_identifier = opt_file_identifier;\n    this.prep(this.minalign, flatbuffers.SIZEOF_INT +\n      flatbuffers.FILE_IDENTIFIER_LENGTH + size_prefix);\n    if (file_identifier.length != flatbuffers.FILE_IDENTIFIER_LENGTH) {\n      throw new Error('FlatBuffers: file identifier must be length ' +\n        flatbuffers.FILE_IDENTIFIER_LENGTH);\n    }\n    for (var i = flatbuffers.FILE_IDENTIFIER_LENGTH - 1; i >= 0; i--) {\n      this.writeInt8(file_identifier.charCodeAt(i));\n    }\n  }\n  this.prep(this.minalign, flatbuffers.SIZEOF_INT + size_prefix);\n  this.addOffset(root_table);\n  if (size_prefix) {\n    this.addInt32(this.bb.capacity() - this.space);\n  }\n  this.bb.setPosition(this.space);\n};\n\n/**\n * Finalize a size prefixed buffer, pointing to the given `root_table`.\n *\n * @param {flatbuffers.Offset} root_table\n * @param {string=} opt_file_identifier\n */\nflatbuffers.Builder.prototype.finishSizePrefixed = function (root_table, opt_file_identifier) {\n  this.finish(root_table, opt_file_identifier, true);\n};\n\n/// @cond FLATBUFFERS_INTERNAL\n/**\n * This checks a required field has been set in a given table that has\n * just been constructed.\n *\n * @param {flatbuffers.Offset} table\n * @param {number} field\n */\nflatbuffers.Builder.prototype.requiredField = function(table, field) {\n  var table_start = this.bb.capacity() - table;\n  var vtable_start = table_start - this.bb.readInt32(table_start);\n  var ok = this.bb.readInt16(vtable_start + field) != 0;\n\n  // If this fails, the caller will show what field needs to be set.\n  if (!ok) {\n    throw new Error('FlatBuffers: field ' + field + ' must be set');\n  }\n};\n\n/**\n * Start a new array/vector of objects.  Users usually will not call\n * this directly. The FlatBuffers compiler will create a start/end\n * method for vector types in generated code.\n *\n * @param {number} elem_size The size of each element in the array\n * @param {number} num_elems The number of elements in the array\n * @param {number} alignment The alignment of the array\n */\nflatbuffers.Builder.prototype.startVector = function(elem_size, num_elems, alignment) {\n  this.notNested();\n  this.vector_num_elems = num_elems;\n  this.prep(flatbuffers.SIZEOF_INT, elem_size * num_elems);\n  this.prep(alignment, elem_size * num_elems); // Just in case alignment > int.\n};\n\n/**\n * Finish off the creation of an array and all its elements. The array must be\n * created with `startVector`.\n *\n * @returns {flatbuffers.Offset} The offset at which the newly created array\n * starts.\n */\nflatbuffers.Builder.prototype.endVector = function() {\n  this.writeInt32(this.vector_num_elems);\n  return this.offset();\n};\n/// @endcond\n\n/**\n * Encode the string `s` in the buffer using UTF-8. If a Uint8Array is passed\n * instead of a string, it is assumed to contain valid UTF-8 encoded data.\n *\n * @param {string|Uint8Array} s The string to encode\n * @return {flatbuffers.Offset} The offset in the buffer where the encoded string starts\n */\nflatbuffers.Builder.prototype.createString = function(s) {\n  if (s instanceof Uint8Array) {\n    var utf8 = s;\n  } else {\n    var utf8 = [];\n    var i = 0;\n\n    while (i < s.length) {\n      var codePoint;\n\n      // Decode UTF-16\n      var a = s.charCodeAt(i++);\n      if (a < 0xD800 || a >= 0xDC00) {\n        codePoint = a;\n      } else {\n        var b = s.charCodeAt(i++);\n        codePoint = (a << 10) + b + (0x10000 - (0xD800 << 10) - 0xDC00);\n      }\n\n      // Encode UTF-8\n      if (codePoint < 0x80) {\n        utf8.push(codePoint);\n      } else {\n        if (codePoint < 0x800) {\n          utf8.push(((codePoint >> 6) & 0x1F) | 0xC0);\n        } else {\n          if (codePoint < 0x10000) {\n            utf8.push(((codePoint >> 12) & 0x0F) | 0xE0);\n          } else {\n            utf8.push(\n              ((codePoint >> 18) & 0x07) | 0xF0,\n              ((codePoint >> 12) & 0x3F) | 0x80);\n          }\n          utf8.push(((codePoint >> 6) & 0x3F) | 0x80);\n        }\n        utf8.push((codePoint & 0x3F) | 0x80);\n      }\n    }\n  }\n\n  this.addInt8(0);\n  this.startVector(1, utf8.length, 1);\n  this.bb.setPosition(this.space -= utf8.length);\n  for (var i = 0, offset = this.space, bytes = this.bb.bytes(); i < utf8.length; i++) {\n    bytes[offset++] = utf8[i];\n  }\n  return this.endVector();\n};\n\n/**\n * A helper function to avoid generated code depending on this file directly.\n *\n * @param {number} low\n * @param {number} high\n * @returns {!flatbuffers.Long}\n */\nflatbuffers.Builder.prototype.createLong = function(low, high) {\n  return flatbuffers.Long.create(low, high);\n};\n////////////////////////////////////////////////////////////////////////////////\n/// @cond FLATBUFFERS_INTERNAL\n/**\n * Create a new ByteBuffer with a given array of bytes (`Uint8Array`).\n *\n * @constructor\n * @param {Uint8Array} bytes\n */\nflatbuffers.ByteBuffer = function(bytes) {\n  /**\n   * @type {Uint8Array}\n   * @private\n   */\n  this.bytes_ = bytes;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.position_ = 0;\n};\n\n/**\n * Create and allocate a new ByteBuffer with a given size.\n *\n * @param {number} byte_size\n * @returns {!flatbuffers.ByteBuffer}\n */\nflatbuffers.ByteBuffer.allocate = function(byte_size) {\n  return new flatbuffers.ByteBuffer(new Uint8Array(byte_size));\n};\n\nflatbuffers.ByteBuffer.prototype.clear = function() {\n  this.position_ = 0;\n};\n\n/**\n * Get the underlying `Uint8Array`.\n *\n * @returns {Uint8Array}\n */\nflatbuffers.ByteBuffer.prototype.bytes = function() {\n  return this.bytes_;\n};\n\n/**\n * Get the buffer's position.\n *\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.position = function() {\n  return this.position_;\n};\n\n/**\n * Set the buffer's position.\n *\n * @param {number} position\n */\nflatbuffers.ByteBuffer.prototype.setPosition = function(position) {\n  this.position_ = position;\n};\n\n/**\n * Get the buffer's capacity.\n *\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.capacity = function() {\n  return this.bytes_.length;\n};\n\n/**\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.readInt8 = function(offset) {\n  return this.readUint8(offset) << 24 >> 24;\n};\n\n/**\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.readUint8 = function(offset) {\n  return this.bytes_[offset];\n};\n\n/**\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.readInt16 = function(offset) {\n  return this.readUint16(offset) << 16 >> 16;\n};\n\n/**\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.readUint16 = function(offset) {\n  return this.bytes_[offset] | this.bytes_[offset + 1] << 8;\n};\n\n/**\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.readInt32 = function(offset) {\n  return this.bytes_[offset] | this.bytes_[offset + 1] << 8 | this.bytes_[offset + 2] << 16 | this.bytes_[offset + 3] << 24;\n};\n\n/**\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.readUint32 = function(offset) {\n  return this.readInt32(offset) >>> 0;\n};\n\n/**\n * @param {number} offset\n * @returns {!flatbuffers.Long}\n */\nflatbuffers.ByteBuffer.prototype.readInt64 = function(offset) {\n  return new flatbuffers.Long(this.readInt32(offset), this.readInt32(offset + 4));\n};\n\n/**\n * @param {number} offset\n * @returns {!flatbuffers.Long}\n */\nflatbuffers.ByteBuffer.prototype.readUint64 = function(offset) {\n  return new flatbuffers.Long(this.readUint32(offset), this.readUint32(offset + 4));\n};\n\n/**\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.readFloat32 = function(offset) {\n  flatbuffers.int32[0] = this.readInt32(offset);\n  return flatbuffers.float32[0];\n};\n\n/**\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.readFloat64 = function(offset) {\n  flatbuffers.int32[flatbuffers.isLittleEndian ? 0 : 1] = this.readInt32(offset);\n  flatbuffers.int32[flatbuffers.isLittleEndian ? 1 : 0] = this.readInt32(offset + 4);\n  return flatbuffers.float64[0];\n};\n\n/**\n * @param {number} offset\n * @param {number|boolean} value\n */\nflatbuffers.ByteBuffer.prototype.writeInt8 = function(offset, value) {\n  this.bytes_[offset] = /** @type {number} */(value);\n};\n\n/**\n * @param {number} offset\n * @param {number} value\n */\nflatbuffers.ByteBuffer.prototype.writeUint8 = function(offset, value) {\n  this.bytes_[offset] = value;\n};\n\n/**\n * @param {number} offset\n * @param {number} value\n */\nflatbuffers.ByteBuffer.prototype.writeInt16 = function(offset, value) {\n  this.bytes_[offset] = value;\n  this.bytes_[offset + 1] = value >> 8;\n};\n\n/**\n * @param {number} offset\n * @param {number} value\n */\nflatbuffers.ByteBuffer.prototype.writeUint16 = function(offset, value) {\n    this.bytes_[offset] = value;\n    this.bytes_[offset + 1] = value >> 8;\n};\n\n/**\n * @param {number} offset\n * @param {number} value\n */\nflatbuffers.ByteBuffer.prototype.writeInt32 = function(offset, value) {\n  this.bytes_[offset] = value;\n  this.bytes_[offset + 1] = value >> 8;\n  this.bytes_[offset + 2] = value >> 16;\n  this.bytes_[offset + 3] = value >> 24;\n};\n\n/**\n * @param {number} offset\n * @param {number} value\n */\nflatbuffers.ByteBuffer.prototype.writeUint32 = function(offset, value) {\n    this.bytes_[offset] = value;\n    this.bytes_[offset + 1] = value >> 8;\n    this.bytes_[offset + 2] = value >> 16;\n    this.bytes_[offset + 3] = value >> 24;\n};\n\n/**\n * @param {number} offset\n * @param {flatbuffers.Long} value\n */\nflatbuffers.ByteBuffer.prototype.writeInt64 = function(offset, value) {\n  this.writeInt32(offset, value.low);\n  this.writeInt32(offset + 4, value.high);\n};\n\n/**\n * @param {number} offset\n * @param {flatbuffers.Long} value\n */\nflatbuffers.ByteBuffer.prototype.writeUint64 = function(offset, value) {\n    this.writeUint32(offset, value.low);\n    this.writeUint32(offset + 4, value.high);\n};\n\n/**\n * @param {number} offset\n * @param {number} value\n */\nflatbuffers.ByteBuffer.prototype.writeFloat32 = function(offset, value) {\n  flatbuffers.float32[0] = value;\n  this.writeInt32(offset, flatbuffers.int32[0]);\n};\n\n/**\n * @param {number} offset\n * @param {number} value\n */\nflatbuffers.ByteBuffer.prototype.writeFloat64 = function(offset, value) {\n  flatbuffers.float64[0] = value;\n  this.writeInt32(offset, flatbuffers.int32[flatbuffers.isLittleEndian ? 0 : 1]);\n  this.writeInt32(offset + 4, flatbuffers.int32[flatbuffers.isLittleEndian ? 1 : 0]);\n};\n\n/**\n * Return the file identifier.   Behavior is undefined for FlatBuffers whose\n * schema does not include a file_identifier (likely points at padding or the\n * start of a the root vtable).\n * @returns {string}\n */\nflatbuffers.ByteBuffer.prototype.getBufferIdentifier = function() {\n  if (this.bytes_.length < this.position_ + flatbuffers.SIZEOF_INT +\n      flatbuffers.FILE_IDENTIFIER_LENGTH) {\n    throw new Error(\n        'FlatBuffers: ByteBuffer is too short to contain an identifier.');\n  }\n  var result = \"\";\n  for (var i = 0; i < flatbuffers.FILE_IDENTIFIER_LENGTH; i++) {\n    result += String.fromCharCode(\n        this.readInt8(this.position_ + flatbuffers.SIZEOF_INT + i));\n  }\n  return result;\n};\n\n/**\n * Look up a field in the vtable, return an offset into the object, or 0 if the\n * field is not present.\n *\n * @param {number} bb_pos\n * @param {number} vtable_offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.__offset = function(bb_pos, vtable_offset) {\n  var vtable = bb_pos - this.readInt32(bb_pos);\n  return vtable_offset < this.readInt16(vtable) ? this.readInt16(vtable + vtable_offset) : 0;\n};\n\n/**\n * Initialize any Table-derived type to point to the union at the given offset.\n *\n * @param {flatbuffers.Table} t\n * @param {number} offset\n * @returns {flatbuffers.Table}\n */\nflatbuffers.ByteBuffer.prototype.__union = function(t, offset) {\n  t.bb_pos = offset + this.readInt32(offset);\n  t.bb = this;\n  return t;\n};\n\n/**\n * Create a JavaScript string from UTF-8 data stored inside the FlatBuffer.\n * This allocates a new string and converts to wide chars upon each access.\n *\n * To avoid the conversion to UTF-16, pass flatbuffers.Encoding.UTF8_BYTES as\n * the \"optionalEncoding\" argument. This is useful for avoiding conversion to\n * and from UTF-16 when the data will just be packaged back up in another\n * FlatBuffer later on.\n *\n * @param {number} offset\n * @param {flatbuffers.Encoding=} opt_encoding Defaults to UTF16_STRING\n * @returns {string|!Uint8Array}\n */\nflatbuffers.ByteBuffer.prototype.__string = function(offset, opt_encoding) {\n  offset += this.readInt32(offset);\n\n  var length = this.readInt32(offset);\n  var result = '';\n  var i = 0;\n\n  offset += flatbuffers.SIZEOF_INT;\n\n  if (opt_encoding === flatbuffers.Encoding.UTF8_BYTES) {\n    return this.bytes_.subarray(offset, offset + length);\n  }\n\n  while (i < length) {\n    var codePoint;\n\n    // Decode UTF-8\n    var a = this.readUint8(offset + i++);\n    if (a < 0xC0) {\n      codePoint = a;\n    } else {\n      var b = this.readUint8(offset + i++);\n      if (a < 0xE0) {\n        codePoint =\n          ((a & 0x1F) << 6) |\n          (b & 0x3F);\n      } else {\n        var c = this.readUint8(offset + i++);\n        if (a < 0xF0) {\n          codePoint =\n            ((a & 0x0F) << 12) |\n            ((b & 0x3F) << 6) |\n            (c & 0x3F);\n        } else {\n          var d = this.readUint8(offset + i++);\n          codePoint =\n            ((a & 0x07) << 18) |\n            ((b & 0x3F) << 12) |\n            ((c & 0x3F) << 6) |\n            (d & 0x3F);\n        }\n      }\n    }\n\n    // Encode UTF-16\n    if (codePoint < 0x10000) {\n      result += String.fromCharCode(codePoint);\n    } else {\n      codePoint -= 0x10000;\n      result += String.fromCharCode(\n        (codePoint >> 10) + 0xD800,\n        (codePoint & ((1 << 10) - 1)) + 0xDC00);\n    }\n  }\n\n  return result;\n};\n\n/**\n * Retrieve the relative offset stored at \"offset\"\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.__indirect = function(offset) {\n  return offset + this.readInt32(offset);\n};\n\n/**\n * Get the start of data of a vector whose offset is stored at \"offset\" in this object.\n *\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.__vector = function(offset) {\n  return offset + this.readInt32(offset) + flatbuffers.SIZEOF_INT; // data starts after the length\n};\n\n/**\n * Get the length of a vector whose offset is stored at \"offset\" in this object.\n *\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.__vector_len = function(offset) {\n  return this.readInt32(offset + this.readInt32(offset));\n};\n\n/**\n * @param {string} ident\n * @returns {boolean}\n */\nflatbuffers.ByteBuffer.prototype.__has_identifier = function(ident) {\n  if (ident.length != flatbuffers.FILE_IDENTIFIER_LENGTH) {\n    throw new Error('FlatBuffers: file identifier must be length ' +\n                    flatbuffers.FILE_IDENTIFIER_LENGTH);\n  }\n  for (var i = 0; i < flatbuffers.FILE_IDENTIFIER_LENGTH; i++) {\n    if (ident.charCodeAt(i) != this.readInt8(this.position_ + flatbuffers.SIZEOF_INT + i)) {\n      return false;\n    }\n  }\n  return true;\n};\n\n/**\n * A helper function to avoid generated code depending on this file directly.\n *\n * @param {number} low\n * @param {number} high\n * @returns {!flatbuffers.Long}\n */\nflatbuffers.ByteBuffer.prototype.createLong = function(low, high) {\n  return flatbuffers.Long.create(low, high);\n};\n\n// Exports for Node.js and RequireJS\nexport { flatbuffers };\n\n/// @endcond\n/// @}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(1057);\n"],"names":["root","factory","exports","module","define","amd","self","backends","backendsSortedByPriority","registerBackend","name","backend","priority","init","createSessionHandler","TypeError","currentBackend","undefined","Error","i","indexOf","splice","length","push","logLevelValue","env","wasm","webgl","webgpu","logLevel","value","Object","defineProperty","enumerable","NUMERIC_TENSOR_TYPE_TO_TYPEDARRAY_MAP","Map","Float32Array","Uint8Array","Int8Array","Uint16Array","Int16Array","Int32Array","Float64Array","Uint32Array","NUMERIC_TENSOR_TYPEDARRAY_TO_TYPE_MAP","isBigIntChecked","Tensor","constructor","arg0","arg1","arg2","type","data","dims","isBigInt64ArrayAvailable","BigInt64Array","from","isBigUint64ArrayAvailable","BigUint64Array","set","checkBigInt","Array","isArray","typedArrayConstructor","get","firstElementType","mappedType","size","dim","Number","isSafeInteger","RangeError","calculateSize","this","static","buffer","options","height","width","tensorLayout","norm","mean","bias","normMean","normBias","inputformat","bitmapFormat","outputformat","tensorFormat","stride","float32Data","step","rImagePointer","gImagePointer","bImagePointer","aImagePointer","rTensorPointer","gTensorPointer","bTensorPointer","aTensorPointer","image","isHTMLImageEle","HTMLImageElement","isImageDataEle","ImageData","isImageBitmap","ImageBitmap","isString","tensorConfig","canvas","document","createElement","pixels2DContext","getContext","resizedHeight","resizedWidth","drawImage","getImageData","bufferToTensor","Promise","resolve","reject","context","newImage","Image","crossOrigin","src","onload","img","format","tempCanvas","putImageData","toDataURL","j","R","G","B","A","fillStyle","fillRect","toImageData","channels","createImageData","reshape","InferenceSession","handler","async","feeds","fetches","isFetchesEmpty","outputNames","isFetches","arg1Keys","getOwnPropertyNames","v","inputNames","results","run","returnValue","key","hasOwnProperty","call","arg3","filePathOrUint8Array","ArrayBuffer","SharedArrayBuffer","byteOffset","byteLength","backendHints","executionProviders","map","backendNames","errors","backendName","backendInfo","initialized","aborted","isInitializing","initPromise","e","err","join","resolveBackend","startProfiling","endProfiling","pathOrBuffer","session","Session","loadModel","OnnxjsSessionHandler","onnxjsBackend","OnnxjsBackend","initializeFlags","initTimeout","simd","proxy","numThreads","isInteger","numCpuLogicalCores","navigator","cpus","hardwareConcurrency","Math","min","ceil","initializeWebAssemblyInstance","OnnxruntimeWebAssemblySessionHandler","wasmBackend","OnnxruntimeWebAssemblyBackend","attribute","assign","_cacheKey","sort","createAttributeWithCacheKey","AttributeWithCacheKeyImpl","ortFbs","onnxruntime","experimental","fbs","attributes","_attributes","attr","onnx","AttributeProto","Attribute","getValue","getType","delete","getFloat","defaultValue","getInt","getString","getTensor","getFloats","getInts","getStrings","getTensors","valueAndType","AttributeType","FLOAT","INT","STRING","TENSOR","FLOATS","INTS","STRINGS","TENSORS","attrType","GRAPH","GRAPHS","getValueNoCheck","LongUtil","isLong","longToNumber","arr","numberValue","maybeLong","fromProto","fromOrtTensor","utf8String","decodeUtf8String","getValueNoCheckFromOnnxFormat","getValueNoCheckFromOrtFormat","f","s","t","g","floats","ints","strings","tensors","graphs","floatsArray","intsLength","stringsLength","tensorsLength","backendsCache","tryLoadBackend","backendHint","backendObj","obj","o","initialize","dispose","WebGLBackend","hint","hints","cache","contextId","matmulMaxBatchSize","textureCacheMode","pack","glContext","createWebGLContext","Logger","setWithEnv","verbose","warning","WebGLSessionHandler","getFunctions","offsetToCoords","coordsToOffset","toVec","valueFrom","getCommonUtilFuncs","getInputsSamplingSnippets","getOutputSamplingSnippet","getCustomTypes","GlslLibRoutine","outputLayout","outputTextureLayout","isPacked","getPackedOutputSamplingSnippet","getUnpackedOutputSamplingSnippet","outShape","unpackedShape","outTexShape","result","funcName","getOutputScalarCoords","getOutputPacked1DCoords","getOutputPacked2DCoords","getOutputPacked3DCoords","getOutputPackedNDCoords","glsl","getGlsl","version","floatTextureSetRGBASource","output","getOutputUnpacked1DCoords","getOutputUnpacked2DCoords","getOutputUnpacked3DCoords","getOutputUnpacked4DCoords","getOutputUnpacked5DCoords","getOutputUnpacked6DCoords","floatTextureSetRSource","shape","texShape","packedTexShape","source","ArrayUtil","arraysEqual","texelsInLogicalRow","texelsInBatch","texelsInBatchN","batches","coords","b","rank","strides","coordsToCompute","coordsFromIndexSnippet","line1","line2","texture2D","programInfo","forEach","samplerName","inputLayout","inputTextureLayouts","generateShaderFuncNameFromInputSamplerName","getPackedSamplerFromInput","getUnpackedSamplerFromInput","outCoordFuncName","generateShaderFuncNameFromInputSamplerNameAtOutCoords","getPackedSamplerAtOutputCoords","getUnpackedSamplerAtOutputCoords","coordsSnippet","inShape","texName","texFuncSnippet","inRank","outRank","broadcastDims","BroadcastUtil","getBroadcastDims","getCoordsDataType","rankDiff","fields","getGlChannels","d","unpackedCoordsSnippet","isInputScalar","ShapeUtil","isOutputScalar","rows","cols","swapLastDimsSnippet","inTexShape","getPackedSamplerScalar","getPackedSampler1D","getPackedSampler2D","getPackedSampler3D","getPackedSamplerND","getUnpackedSamplerScalar","getUnpackedSampler1D","getUnpackedSampler2D","getUnpackedSampler3D","getUnpackedSampler4D","getUnpackedSampler5D","getUnpackedSampler6D","texNumR","texNumC","valuesPerRow","squeezedShape","slice","newInputShape","squeezeInputShape","newInputLayout","JSON","parse","stringify","samplerRoutine","routineBody","getSqueezedParams","dependencies","params","index","tNumR","tNumC","squeezeShape","newShape","keptDims","stride0","stride1","routine","revDims","reverse","stride2","stride3","stride4","xScale","yScale","stridesBlock","body","layout","getValueFromSingle","varName","transpose","getPackedValueFrom","GlslLib","CoordsGlslLib","FunctionType","GlslContext","addDependency","node","GlslLibRoutineNode","returnOrderedNodes","nodes","cycleCheck","Set","alreadyTraversed","createOrderedNodes","graphNodes","dfsTraverse","has","add","TopologicalSortGlslRoutines","encodeFloat32","decodeFloat32","encode","decode","encodeUint8","endianness","EncodingGlslLib","isLittleEndian","decodeUint8","a","c","setFragColor","getColorAsFloat","FragColorGlslLib","INLINE_FUNC_DEF_REGEX","script","match","inlineDefs","exec","split","tokens","trim","filter","regexString","replace","regex","RegExp","variable","declLine","newBody","paramRedecLine","replacement","libs","glslLibRoutineDependencyGraph","keys","glslRegistry","lib","libName","routinesInLib","currentNode","preprocess","shaderSource","hasMain","getDefaultFragShaderMain","replaceInlines","getFragShaderPreamble","getUniforms","variables","getImports","routinesIncluded","selectGlslLibRoutinesToBeIncluded","routines","classAndRoutine","samplers","uniformLines","sampler","arrayLength","GlslPreprocessor","VecGlslLib","ShapeUtilsGlslLib","bcastIndex","bcastMatmulIndex","offsetToIndices","indicesToOffset","incrementIndices","outputRank","dimOffset","block","indexToOffsetSingle","offsetToIndicesSingle","shapeInit","GLSL_ES_2_0","varyingVertex","varyingFrag","outputDeclaration","GLSL_ES_3_0","outputShapeLength","binaryVecFunctions","copyVec","setVecItem","getVecItem","nameOp","sub","mul","div","fname","assignmentBlock","packedTextureDataCache","unpackedTextureDataCache","calculateTextureWidthAndHeight","textureType","layoutStrategy","executeProgram","program","inputs","inputTypes","inputTextureDatas","getOrCreateTextureData","texture","cacheHint","getProgramInfoUniqueKey","artifact","programManager","getArtifact","createTextureLayoutFromTextureType","outputTextureData","createTextureData","build","setArtifact","runProgram","tensor","TextureType","packed","td","getTextureData","dataId","unpack","packedLastDimension","adjustedKernelShape","adjustedLayout","numberData","numFeatureMaps","oldRowSize","newRowSize","oldOffset","newOffset","subarray","unpackedTextureLayout","createTextureLayoutFromShape","reverseWH","unpackedTextureData","createTextureDataFromLayoutBindTensor","dataType","usage","textureManager","createTextureFromLayout","createTextureDataFromTexture","reshapeUnpacked","input","reshapedDims","inputTD","unpacked","newTextureLayout","computeStrides","reshapePacked","isReshapeCheap","squeezedInputShape","processDims3D","squeezedOutputShape","squeezedInputTensor","squeezedOutputTensor","createPackedReshape3DProgramInfoLoader","cast","tensorId","textureData","_id","readTexture","readTextureAsync","setTextureData","isInitializer","isTextureLayoutCached","clearActiveTextures","releaseTexture","isFloat32DownloadSupported","readUint8TextureAsFloat","encodeAsUint8","createPackProgramInfoLoader","createUnpackProgramInfoLoader","WebGLInferenceHandler","WEBGL_OP_RESOLVE_RULES","unaryOps","abs","acos","binaryOps","and","asin","atan","averagePool","parseAveragePoolAttributes","batchNormalization","parseBatchNormalizationAttributes","parseCastAttributes","clip","parseClipAttributes","clipV11","concat","parseConcatAttributes","conv","parseConvAttributes","convTranspose","parseConvTransposeAttributes","cos","identity","depthToSpace","parseDepthToSpaceAttributes","equal","elu","parseEluAttributes","exp","flatten","parseFlattenAttributes","floor","gather","parseGatherAttributes","gemm","parseGemmAttributesV7","parseGemmAttributesV11","globalAveragePool","parseGlobalAveragePoolAttributes","globalMaxPool","greater","imageScaler","parseImageScalerAttributes","instanceNormalization","parseInstanceNormalizationAttributes","leakyRelu","parseLeakyReluAttributes","less","lrn","parseLrnAttributes","log","matMul","parseMatMulAttributes","maxPool","parseMaxPoolAttributes","neg","not","or","padV2","parsePadAttributesV2","padV11","parsePadAttributesV11","pow","pRelu","reduceLogSum","parseReduceAttributes","reduceMax","reduceMean","reduceMin","reduceProd","reduceSum","reduceLogSumSquare","relu","resize","parseResizeAttributesV10","parseResizeAttributesV11","sigmoid","sin","sliceV10","parseSliceAttributes","softmax","parseSoftmaxAttributes","softmaxV13","parseSoftmaxAttributesV13","parseSplitAttributes","sqrt","squeeze","parseSqueezeAttributes","squeezeV13","sum","tan","tanh","tile","parseTransposeAttributes","upsample","parseUpsampleAttributesV7","parseUpsampleAttributesV9","unsqueeze","parseUnsqueezeAttributes","unsqueezeV13","xor","batchNormalizationProgramMetadata","inferenceHandler","validateInputs","cacheKey","createBatchNormalizationProgramInfo","epsilon","momentum","spatial","scaleWidth","scaleHeight","X","scale","var_","glslAdd","ValueBased","glslDiv","glslMul","glslSub","glslEqual","glslGreater","glslLess","glslAnd","glslOr","glslXor","glslPow","glslBuiltinBinary","glslPRelu","createBinaryProgramInfoLoader","glslFunc","outputTensorType","createBinaryProgramInfo","isBroadcast","areEqual","outputShape","usePackedTexture","calculatedShape","calcShape","aRank","bRank","aBcast","bBcast","to","ProtoUtil","tensorDataTypeFromProto","createPackedConcatProgramInfoLoader","inputCount","metadata","fill","axis","inputShape","dataNShape","axisIndex","getChannels","dtype","unpackChannel","unpackFromChannel","shapes","offsets","channel","lastChannels","allChannels","getValueSnippet","getShiftedChannelsSnippet","lastIndex","shift","x","createPackedConcatProgramInfo","channelIdx","idx","createUnpackedConcatProgramInfoLoader","sizeInConcatAxis","previousSum","getTextureIndexWhereDataResidesMethod","getTextureIndexWhereDataResidesLinearSearch","getTextureIndexWhereDataResidesBinarySearch","fetchDataFromCorrectTextureMethod","getFetchDataFromCorrectTextureMethod","getSizeInConcatAxisValueFromIndexMethod","getGetSizeInConcatAxisValueFromIndexMethod","createUnpackedConcatProgramInfo","searchAxis","numberOfTensors","tensorRank","codeLines","inputType","inputDimensionality","createUnpackedGroupedConvProgramInfoLoader","hasBias","processBias","xShape","wShape","outputChannelsPerGroup","group","autoPad","dilations","kernelShape","pads","calculateOutputShape","getActivationSnippet","activationFunction","applyActivation","createUnpackedGroupedConvProgramInfo","conv2DPackedPointwise","xshape","kshape","reshapedX","reshapedK","matmulInputs","matmulOutput","createPackedMatmulProgramInfoLoader","conv2DPacked","im2colOutput","createPackedIm2ColProgramInfoLoader","kernelReshaped","computeTotalPad","inDim","adj","kernel","dilation","outSize","distributePadding","totalPad","head","tail","smallPad","convTranspose2d","adjustedAttributes","getAdjustedConvTransposeAttributes","convTranspose2DUnpacked","valueInit","inputChannelsPerGroup","createUnpackedConvTransposeProgramInfo","createUnpackedConvTransposeProgramInfoLoader","outputPadding","spatialRank","updateShape","calculateOutputShapeAndPads","newAttributes","activationAttributes","parseInternalActivationAttributes","featureMaps","adjustPads","batchSize","inputSpatialShape","outChannels","dilatedKernelShape","outputSpatialShape","conv2d","getAdjustedConvAttributes","packMode","isPointwise","conv2DUnpackedPointwise","conv2DUnpacked","createMatmulProgramInfoLoader","xIm2Col","createIm2ColProgramInfoLoader","dotProductInputs","createDotProductProgramInfoLoader","PoolConvUtil","adjustPadsBasedOnAutoPad","blocksize","blocksizeSqr","transposePerm","mode","firstReshapeShape","firstReshapedTensor","transposeAttributes","perm","transposeOutput","secondReshapeShape","activationCacheKey","createDotProductProgramMetadata","im2colShape","calculateIm2ColDims","kWidth","kHeight","im2colStrides","im2colWidth","im2colHeight","initValue","sharedDim","createDotProductProgramInfo","outputDims","flattenShape","r","func","activation","glslRelu","glslSigmoid","glslClip","clipMin","clipMax","activationName","MIN_CLIP","MAX_CLIP","createGatherProgramInfoLoader","gatherProgramMetadata","indexDataShape","normalizeAxis","indexCopyOps","orank","irank","iDrank","createGatherProgramInfo","NUMBER_TYPES","createGemmProgramInfoLoader","parseGemmAttributes","isOptionalC","transA","transB","alpha","beta","createGemmProgramInfo","aShape","bShape","GemmUtil","getShapeOfGemmResult","line","declareC","broadcastC","calculateC","w","wshape","kernelSize","unrolled","row","col","createPackedIm2ColProgramInfo","im2colDims","createIm2ColProgramInfo","createImageScalerProgramInfoLoader","imageScalerProgramMetadata","getBiasMethod","createGetBiasMethod","createImageScalerProgramInfo","numChannels","meanAndVariance","createMeanAndVarianceProgramInfoLoader","createComputeOutputProgramInfoLoader","meanAndVarianceProgramMetadata","xDims","channelSize","createMeanAndVarianceProgramInfo","computeOutputProgramMetadata","meanAndVarianceShape","textureWidth","textureHeight","meanAndVarianceWidth","meanAndVarianceHeight","createComputeOutputProgramInfo","createLrnProgramInfoLoader","lrnProgramMetadata","C","createLrnProgramInfo","sharedDimIndex","coordsDataType","allGlChannels","getBiasForMatmulSnippet","getBiasForMatmul","getBcastedSamplerForMatmulSnippet","unpackedACoordsSnippet","unpackedBCoordsSnippet","inAShape","inBShape","inARank","inBRank","rankADiff","rankBDiff","broadcastADims","broadcastBDims","coordsASnippet","coordsBSnippet","swapDimSnippet","getBcastSamplerForMatmul","getSamplerAInLoopSnippet","res","getA","getSamplerBInLoopSnippet","getB","getOutputCoordsSnippet","createPackedMatmulProgramInfo","createMatmulProgramMetadata","arank","brank","createMatmulProgramInfo","packProgramMetadata","unpackedReversed","inputRank","setup","outOfBoundsCondition","cond","getOutOfBoundsCondition","D","getOutput","createPackProgramInfo","getVecChannels","padProgramMetadata","validateInputsV2","createPadProgramInfo","validateInputsV11","attrubutes","generatePadAttributesFromInputs","integerData","floatData","padShape","padFunction","getPadFunction","getPadConstant","getPadReflect","getPadEdge","createAveragePoolProgramInfo","ceilMode","countIncludePad","isGlobalOperator","getAdjustedPoolAttributesAndOutputShape","op2","poolingCode","generatePoolingCode","createMaxPoolProgramInfo","storageOrder","hasDilations","adjustPoolAttributes","computePoolOutputShape","globalMaxPoolAttributes","globalMaxPoolMetadata","inputDims","op1","start","codeW","kw","sw","pwStart","pwEnd","dimW","codeH","codeHEnd","kh","sh","phStart","phEnd","dimH","padCode","kernelStrides","stridesRank","padsRank","offsetToIndicesFunction","copyInputDims","copyArray","copyPads","copyKernelStrides","copyStrides","reduce","cur","array","arrayName","reduceOp","reduceProgramMetadata","createReduceProgramInfo","axes","keepDims","iRank","idxCopy","normalizeAxes","ops","reduceOps","k","oRank","idxZero","input3D","outputShape3D","createPackedReshape3DProgramMetadata","inputShape3D","mainLoop","outputCoords","getFlattenedIndexFrom3D","createPackedReshape3DProgramInfo","batch","calculateReshapedDims","resizeProgramMetadata","createPackedResizeProgramInfo","parseUpsampleAttributes","prepareInputs","scales","every","coordinateTransformMode","outputHeight","outputWidth","inputHeight","inputWidth","scalesHeight","scalesWidth","getSourceFracIndex","outputSizes","scalesTensor","scalesInputIdx","sizesInputIdx","parseScalesData","isResize","sizesTensor","parseScalesDataFromOutputSize","yDims","scalesValidation","end","sliceProgramMetadata","createSliceProgramInfo","starts","ends","val","normalizedAxes","sliceOps","validateInputsV10","generateSliceAttributesFromInputs","some","softmaxComputeMaxProgramMetadata","softmaxComputeScaleProgramMetadata","softmaxProgramMetadata","logicalRowCount","sizeToDimension","featureCount","sizeFromDimension","computeSoftmax","transposeAttribute","isTransposeRequired","transposedInputShape","transposedInputs","_","p","computeMaxProgramInfo","createComputeMaxProgramInfo","max","computeScaleProgramInfo","createComputScaleProgramInfo","softMaxProgramInfo","createSoftMaxProgramInfo","maxElementPerLogicalRow","normalizationPerLogicalRow","splitProgramMetadata","count","getProgramCount","createSplitProgramInfo","numOutputs","outputs","SplitUtil","splitShape","offset","validateInputsV13","sumProgramMetadata","createSumProgramInfo","sumLine","tileProgramMetadata","createTileProgramInfo","tileOps","transposeProgramMetadata","createTransposeProgramInfo","getAdjustedPerm","unpackedOutputShape","getOutputShape","getPermFunctionBody","sortBasedOnPerm","reverseFunc","downloadUint8AsFloat","glslAbs","glslBuiltinUnary","glslAcos","glslAsin","glslAtan","glslCeil","glslCos","glslElu","glslExp","glslFloor","glslIdentity","glslLeakyRelu","glslLog","glslNeg","glslNot","glslSin","glslSqrt","glslTan","glslTanh","createElementwiseProgramInfoLoader","createElementwiseProgramInfo","generateClipAttributesFromInputs","unpackProgramMetadata","createUnpackProgramInfo","innerDims","sourceCoords","getSourceCoords","unsqueezeShape","upsampleProgramMetadata","createUpsampleProgramInfo","opset","extrapolationValue","needRoiInput","useExtrapolation","nearestMode","cubicCoefficientA","excludeOutside","useNearest2xOptimization","roiInputIdx","outputPitches","inputPitches","precalculatedPitches","getInputFloatFunction","profiler","textureLayoutStrategy","repo","attributesBound","buildArtifact","event","gl","useProgram","bindOutput","bindAttributes","attribLocations","bindUniforms","uniformLocations","error","draw","vertexShader","deleteShader","deleteProgram","preprocessor","fragScript","compile","getUniformLocations","getAttribLocations","fragShaderScript","vertexShaderScript","getVertexShaderSource","compileShader","VERTEX_SHADER","debug","fragShader","FRAGMENT_SHADER","createProgram","attachFramebuffer","positionHandle","position","textureCoordHandle","textureCoord","setVertexAttributes","textures","texturePosition","find","bindTexture","uniform1fv","uniform1f","uniform1iv","uniform1i","uniformHandle","bindTextureToUniform","getAttribLocation","location","getUniformLocation","reference","ProgramManager","PreferLogicalStrategy","maxTextureSize","TextureManager","reuseTextures","pack2unpackMap","unpack2packMap","createInferenceHandler","onGraphInitialized","graph","initializers","getValues","addInitializer","opsets","op","resolveOperator","impl","opImpl","opInit","internalFormat","R32F","RED","RGBA32F","RGBA","textureSize","allocate","dataSize","RedFloat32DataEncoder","dest","RGBAFloatDataEncoder","ALPHA","UNSIGNED_BYTE","_textureSize","Uint8DataEncoder","computeTextureWH","prefs","breakAxis","wsize","hsize","totalSize","AlwaysKeepOriginalSizeStrategy","wh","computeTexture","logShape","squeezeResult","sizeFromShape","sizeToSquarishShape","isEmptyArray","parseAxisParam","assert","ax","isInt","dimsToSkip","inferredDims","reversedWH","config","pendingRead","inUseTextures","idleTextures","textureLookup","textureDataType","toEncoderType","encoder","getEncoder","pop","updateTexture","toTextureData","allocateTexture","toTensorData","createAndWaitForFence","tensorData","subscribers","deleteTexture","_dataType","len","checkFn","delayFn","maxCounter","_counter","tryCount","tryFn","nextBackoff","setTimeout","charAt","toUpperCase","createNewWebGLContext","OffscreenCanvas","createCanvas","ca","depth","antialias","stencil","preserveDrawingBuffer","premultipliedAlpha","failIfMajorPerformanceCaveat","WebGLContext","webgl2","isContextLost","disable","DEPTH_TEST","STENCIL_TEST","BLEND","DITHER","POLYGON_OFFSET_FILL","SAMPLE_COVERAGE","enable","SCISSOR_TEST","CULL_FACE","cullFace","BACK","linearSearchLastTrue","frameBufferBound","itemsToPoll","getExtensions","vertexbuffer","createVertexbuffer","framebuffer","createFramebuffer","queryVitalParameters","createTexture","TEXTURE_2D","texParameteri","TEXTURE_MIN_FILTER","NEAREST","TEXTURE_MAG_FILTER","TEXTURE_WRAP_S","CLAMP_TO_EDGE","TEXTURE_WRAP_T","texImage2D","checkError","texSubImage2D","bindFramebuffer","FRAMEBUFFER","framebufferTexture2D","COLOR_ATTACHMENT0","viewport","scissor","readPixels","isFramebufferReady","getActiveTexture","n","getParameter","ACTIVE_TEXTURE","TEXTURE0","getTextureBinding","TEXTURE_BINDING_2D","getFramebufferBinding","FRAMEBUFFER_BINDING","vertexAttribPointer","enableVertexAttribArray","attachShader","linkProgram","shaderType","shader","createShader","getShaderParameter","COMPILE_STATUS","getShaderInfoLog","activeTexture","drawArrays","TRIANGLE_STRIP","getError","label","toString","DataEncoders","isRenderFloat32Supported","textureHalfFloatExtension","HALF_FLOAT_OES","unit","maxTextureImageUnits","disposed","deleteFramebuffer","bindBuffer","ARRAY_BUFFER","deleteBuffer","ELEMENT_ARRAY_BUFFER","finish","createDefaultGeometry","createBuffer","geometry","bufferData","STATIC_DRAW","fb","isFloatTextureAttachableToFrameBuffer","checkFloatTextureAttachableToFrameBuffer","checkRenderFloat32","checkFloat32Download","isBlendSupported","checkFloat32Blend","MAX_TEXTURE_SIZE","MAX_TEXTURE_IMAGE_UNITS","colorBufferFloatExtension","getExtension","disjointTimerQueryWebgl2Extension","textureFloatExtension","frameBuffer","isComplete","checkFramebufferStatus","FRAMEBUFFER_COMPLETE","fragmentShader","POINTS","NO_ERROR","beginTimer","gl2","ext","query","createQuery","beginQuery","TIME_ELAPSED_EXT","endTimer","endQuery","isTimerResultAvailable","available","disjoint","getQueryParameter","QUERY_RESULT_AVAILABLE","GPU_DISJOINT_EXT","getTimerResult","timeElapsed","QUERY_RESULT","deleteQuery","waitForQueryAndGetTime","repeatedTry","fenceContext","createFence","pollFence","fenceSync","SYNC_GPU_COMMANDS_COMPLETE","flush","isFencePassed","status","clientWaitSync","ALREADY_SIGNALED","CONDITION_SATISFIED","addItemToPoll","pollItems","isDoneFn","resolveFn","getNodes","_ops","KernelOp","reset","_starter","resolved","_values","getInputIndices","execute","sessionHandler","modelInputs","graphInputs","sequence","graphValues","rear","thisOpIndex","thisOp","inputList","inputTensors","outputList","downstreamNodes","currentDownstreamNodeIndex","currentDownstreamNode","getOutputIndices","outputIndex","outputTensor","getData","ExecutionPlan","Graph","graphProto","initializer","GraphImpl","valueInfo","_from","_to","tensorValueTypeFromProto","tensorType","_nodeProto","NodeProto","opType","Node","tensorAttributesFromORTFormat","executeNode","graphInitializer","buildGraph","transformGraph","checkIsAcyclic","_allInputIndices","getInputNames","_allInputNames","_allOutputIndices","getOutputNames","_allOutputNames","_allData","_nodes","GraphProto","buildGraphFromOnnxFormat","buildGraphFromOrtFormat","dataIndices","nodesIndices","inputValueNames","currentIndex","Value","tensorDimsFromProto","nodeProto","pick","dataIndex","inputsLength","inputName","nodeArgsLength","nodeArgs","valueType","TypeInfoValue","tensor_type","TensorTypeAndShape","elemType","dimLength","dimValue","initializersLength","tensorDimsFromORTFormat","outputsLength","outputName","nodesLength","attributesLength","starters","nodesStack","nodesState","nodeIndex","outgoingEdgeIndex","downstreamNodeIndex","removeAllIdentityNodes","removeAllDropoutNodes","fuseConvActivationNodes","finalizeGraph","newIndices","nodePossition","ind","currentData","deleteNode","inputValueIndex","outputValueIndex","nodesConsumingOutput","delIndex","replaceIndex","isActivation","next","child","_severity","_content","_category","severity","content","category","console","color","SEVERITY_VALUE","info","fatal","LOGGER_PROVIDER_MAP","NoOpLoggerProvider","ConsoleLoggerProvider","LOGGER_DEFAULT_CONFIG","provider","minimalSeverity","logDateTime","logSourceLocation","LOGGER_CONFIG_MAP","bind","logInternal","stack","Date","toISOString","previousConfig","startTime","endCallback","timer","ctx","checkTimer","endTime","maxNumberEvents","flushBatchSize","flushIntervalInMilliseconds","_started","_flushPointer","_maxNumberEvents","_flushBatchSize","_flushIntervalInMilliseconds","create","_timingEvents","_flushTime","now","stop","logOneEvent","begin","isPromise","then","reason","Event","endSync","EventRecord","toFixed","currentTime","previousPointer","Profiler","performance","load","buf","isOrtFormat","loadFromOnnxFormat","loadFromOrtFormat","modelProto","ModelProto","irVersion","_opsets","opsetImport","domain","_graph","flatbuffers","ByteBuffer","ortModel","getRootAsInferenceSession","model","opsetImportLength","opsetId","Model","INT_TYPES","FLOAT_TYPES","matchSelector","selector","endsWith","rangeStart","parseInt","substring","isNaN","pair","rangeEnd","rules","rule","versionSelector","DimensionValueType","TensorDataType","NodeType","bb","bb_pos","__init","getRootAsShape","Shape","readInt32","getSizePrefixedRootAsShape","setPosition","SIZE_PREFIX_LENGTH","__offset","Dimension","__indirect","__vector","__vector_len","startShape","builder","startObject","addDim","addFieldOffset","createDimVector","startVector","addOffset","endVector","startDimVector","numElems","endShape","endObject","createShape","getRootAsDimension","getSizePrefixedRootAsDimension","DimensionValue","denotation","optionalEncoding","__string","startDimension","addValue","valueOffset","addDenotation","denotationOffset","endDimension","createDimension","getRootAsDimensionValue","getSizePrefixedRootAsDimensionValue","dimType","readInt8","UNKNOWN","readInt64","createLong","dimParam","startDimensionValue","addDimType","addFieldInt8","addDimValue","addFieldInt64","addDimParam","dimParamOffset","endDimensionValue","createDimensionValue","getRootAsTensorTypeAndShape","getSizePrefixedRootAsTensorTypeAndShape","UNDEFINED","startTensorTypeAndShape","addElemType","addFieldInt32","addShape","shapeOffset","endTensorTypeAndShape","createTensorTypeAndShape","getRootAsMapType","MapType","getSizePrefixedRootAsMapType","keyType","TypeInfo","startMapType","addKeyType","addValueType","valueTypeOffset","endMapType","createMapType","getRootAsSequenceType","SequenceType","getSizePrefixedRootAsSequenceType","startSequenceType","elemTypeOffset","endSequenceType","createSequenceType","readUint32","srcArgIndex","dstArgIndex","createEdgeEnd","node_index","src_arg_index","dst_arg_index","prep","writeInt32","EdgeEnd","getRootAsNodeEdge","NodeEdge","getSizePrefixedRootAsNodeEdge","inputEdges","inputEdgesLength","outputEdges","outputEdgesLength","startNodeEdge","addNodeIndex","addInputEdges","inputEdgesOffset","startInputEdgesVector","addOutputEdges","outputEdgesOffset","startOutputEdgesVector","endNodeEdge","createNodeEdge","getRootAsNode","getSizePrefixedRootAsNode","docString","sinceVersion","Primitive","executionProviderType","inputArgCounts","inputArgCountsLength","inputArgCountsArray","bytes","implicitInputs","implicitInputsLength","startNode","addName","nameOffset","addDocString","docStringOffset","addDomain","domainOffset","addSinceVersion","addIndex","addOpType","opTypeOffset","addType","addExecutionProviderType","executionProviderTypeOffset","addInputs","inputsOffset","createInputsVector","startInputsVector","addOutputs","outputsOffset","createOutputsVector","startOutputsVector","addAttributes","attributesOffset","createAttributesVector","startAttributesVector","addInputArgCounts","inputArgCountsOffset","createInputArgCountsVector","addInt32","startInputArgCountsVector","addImplicitInputs","implicitInputsOffset","createImplicitInputsVector","startImplicitInputsVector","endNode","createNode","getRootAsValueInfo","ValueInfo","getSizePrefixedRootAsValueInfo","startValueInfo","typeOffset","endValueInfo","createValueInfo","getRootAsTypeInfo","getSizePrefixedRootAsTypeInfo","readUint8","NONE","__union","startTypeInfo","endTypeInfo","createTypeInfo","getRootAsOperatorSetId","OperatorSetId","getSizePrefixedRootAsOperatorSetId","startOperatorSetId","addVersion","endOperatorSetId","createOperatorSetId","getRootAsTensor","getSizePrefixedRootAsTensor","dimsLength","rawData","rawDataLength","rawDataArray","stringData","stringDataLength","startTensor","addDims","dimsOffset","createDimsVector","addInt64","startDimsVector","addDataType","addRawData","rawDataOffset","createRawDataVector","addInt8","startRawDataVector","addStringData","stringDataOffset","createStringDataVector","startStringDataVector","endTensor","createTensor","getRootAsSparseTensor","SparseTensor","getSizePrefixedRootAsSparseTensor","values","indices","startSparseTensor","addValues","valuesOffset","addIndices","indicesOffset","endSparseTensor","createSparseTensor","getRootAsAttribute","getSizePrefixedRootAsAttribute","readFloat32","floatsLength","graphsLength","startAttribute","addF","addFieldFloat32","addI","addS","sOffset","addT","tOffset","addG","gOffset","addFloats","floatsOffset","createFloatsVector","addFloat32","startFloatsVector","addInts","intsOffset","createIntsVector","startIntsVector","addStrings","stringsOffset","createStringsVector","startStringsVector","addTensors","tensorsOffset","createTensorsVector","startTensorsVector","addGraphs","graphsOffset","createGraphsVector","startGraphsVector","endAttribute","createAttribute","getRootAsGraph","getSizePrefixedRootAsGraph","maxNodeIndex","nodeEdges","nodeEdgesLength","sparseInitializers","sparseInitializersLength","startGraph","addInitializers","initializersOffset","createInitializersVector","startInitializersVector","addNodeArgs","nodeArgsOffset","createNodeArgsVector","startNodeArgsVector","addNodes","nodesOffset","createNodesVector","startNodesVector","addMaxNodeIndex","addNodeEdges","nodeEdgesOffset","createNodeEdgesVector","startNodeEdgesVector","addSparseInitializers","sparseInitializersOffset","createSparseInitializersVector","startSparseInitializersVector","endGraph","createGraph","getRootAsModel","getSizePrefixedRootAsModel","producerName","producerVersion","modelVersion","graphDocString","startModel","addIrVersion","addOpsetImport","opsetImportOffset","createOpsetImportVector","startOpsetImportVector","addProducerName","producerNameOffset","addProducerVersion","producerVersionOffset","addModelVersion","addGraph","graphOffset","addGraphDocString","graphDocStringOffset","endModel","createModel","getRootAsKernelCreateInfos","KernelCreateInfos","getSizePrefixedRootAsKernelCreateInfos","nodeIndices","nodeIndicesLength","nodeIndicesArray","kernelDefHashes","readUint64","kernelDefHashesLength","startKernelCreateInfos","addNodeIndices","nodeIndicesOffset","createNodeIndicesVector","startNodeIndicesVector","addKernelDefHashes","kernelDefHashesOffset","createKernelDefHashesVector","startKernelDefHashesVector","endKernelCreateInfos","createKernelCreateInfos","getRootAsSubGraphSessionState","SubGraphSessionState","getSizePrefixedRootAsSubGraphSessionState","graphId","sessionState","SessionState","startSubGraphSessionState","addGraphId","graphIdOffset","addSessionState","sessionStateOffset","endSubGraphSessionState","requiredField","createSubGraphSessionState","getRootAsSessionState","getSizePrefixedRootAsSessionState","kernels","subGraphSessionStates","subGraphSessionStatesLength","startSessionState","addKernels","kernelsOffset","addSubGraphSessionStates","subGraphSessionStatesOffset","createSubGraphSessionStatesVector","startSubGraphSessionStatesVector","endSessionState","createSessionState","getSizePrefixedRootAsInferenceSession","bufferHasIdentifier","__has_identifier","ortVersion","startInferenceSession","addOrtVersion","ortVersionOffset","addModel","modelOffset","endInferenceSession","finishInferenceSessionBuffer","finishSizePrefixedInferenceSessionBuffer","createInferenceSession","_fetches","_options","inputMap","feed","outputMap","_initialized","graphInputTypes","graphInputDims","_model","arg","fetch","promisify","readFile","arrayBuffer","isView","modelProtoBlob","initializeOps","_executionPlan","normalizeAndValidateInputs","outputTensors","createOutput","modelInputNames","sortedInputs","sortedInputsIndex","validateInputTensorDims","modelInputIndices","modelValues","graphInput","validateInputTensorTypes","givenInputs","expectedType","actualType","noneDimSupported","expectedDims","actualDims","compareTensorDims","modelOutputNames","dataProvider","asyncDataProvider","Guid","validateDimsAndCalcSize","empty","dataviewConstructor","sizeof","dataBuffer","createView","_strides","tensorProto","str","dataDest","dataSource","DataView","elementSize","sizeofProto","readProto","TensorProto","DataType","INT32","INT16","UINT16","INT8","UINT8","BOOL","int32Data","INT64","int64Data","DOUBLE","doubleData","UINT32","UINT64","uint64Data","element","fromData","ortTensor","greaterThanOrEqual","lessThan","toNumber","view","getUint8","getInt8","getUint16","getInt16","getFloat32","getInt32","getUint32","fromBits","getFloat64","expectedDimensions","expr","msg","n1","n2","preprocessInputShapes","dimsA","dimsB","postprocessOutputShape","calcMatMulShape","MatMulUtil","adims","bdims","isMatMul","crank","cdims","cShapeMatMul","aLen","bLen","broadcastedIndices","originalShape","originalIndices","fillIndex","calc","inplace","resultType","outputIndices","originalIndicesA","originalIndicesB","valA","valB","isAScalar","isBScalar","rest","isValidBroadcast","finalShape","finalRank","unshift","target","targetIndex","sourceIndex","blockSize","leftShape","transLeft","rightShape","transRight","biasShape","M","K","N","kDim","typeProto","tensorDataTypeStringToEnum","FLOAT16","unsigned","Long","fromValue","low","high","getSizeFromDimensionRange","incrementIndex","axisToIncrementOn","originalDims","shapeHints","nDims","unknownDimension","newTensorSize","oldTensorSize","pad","shape1","shape2","total","y","right","inSqueezeList","inputDimsIterator","sqr","axpy","powx","MathUtil","determineSplit","numElementsAlongAxis","calcReduce","keepdims","ReduceUtil","calcReduceShape","inputStrides","indicesY","calcReduceByAxis","curAxisInd","pos","adjustPadAndReturnShape","computeShapeHelper","computeConvOutputShape","filterDims","inSize","padHeadIndex","padTailIndex","dkernel","padNeeded","TextDecoder","currentKernelId","commandEncoder","computePassEncoder","pendingDispatchNumber","profilingEnabled","kernelCustomData","gpu","requestAdapter","adapter","deviceDescriptor","requiredLimits","maxComputeWorkgroupStorageSize","limits","maxComputeWorkgroupsPerDimension","maxStorageBufferBindingSize","features","profilingMode","requiredFeatures","requestDevice","device","gpuDataManager","createGpuDataManager","kernelPersistentData","configureLogger","onuncapturederror","ev","GPUValidationError","message","profilingQuerySet","createQuerySet","getCommandEncoder","createCommandEncoder","getComputePassEncoder","beginComputePass","endComputePass","queue","submit","refreshPendingBuffers","createKernelOutput","createIntermediateOutput","inputDatas","gpuData","inputTensorShapes","inputGpuDataTypes","inputTensorShapesToString","inputGpuDataTypesToString","validatedOutputIndices","outputTensorViews","outputDatas","isTemporary","isPersistent","tensorView","temporaryData","persistentData","normalizedDispatchGroup","normalizeDispatchGroupSize","dispatchGroup","LOG_DEBUG","upload","gpuDataId","memcpy","dst","download","getTargetBuffer","alloc","id","free","ptr","release","createKernel","kernelId","WEBGPU_OP_RESOLVE_RULES","releaseKernel","computeKernel","kernelEntry","WebGpuBackend","getFloat32Array","HEAP8","newDims","TensorViewImpl","contextDataOffset","heapU32","HEAPU32","opKernelContext","currentKernelCustomData","compute","inputsOutputsMapping","mappedInputs","getTensorElementSize","bufferSize","stackSave","stackAlloc","_JsepOutput","stackRestore","jsepInit","isSourceGpu","HEAPU8","dataOffset","ComputeContextImpl","configLogLevel","logLevelPrefix","$configLogLevel","$debug","LOG","level","messageLevel","logLevelStringToEnum","args","isChannelLast","calcNormalizedBufferSize","guid","storageCache","downloadCache","buffersForUploadingPending","buffersPending","srcArrayBuffer","srcOffset","srcLength","gpuDataCache","originalSize","gpuBufferForUploading","mappedAtCreation","GPUBufferUsage","MAP_WRITE","COPY_SRC","getMappedRange","unmap","copyBufferToBuffer","sourceId","destinationId","sourceGpuDataCache","destinationGpuDataCache","STORAGE","COPY_DST","gpuBuffer","GpuDataType","default","cachedData","downloadData","gpuReadBuffer","MAP_READ","readDataPromise","mapAsync","GPUMapMode","READ","destroy","GpuDataManagerImpl","acosh","asinh","atanh","pool","clipV10","cosh","parseAlphaAttributes","erf","parseGlobalMaxPoolAttributes","reciprocal","sinh","thresholdedRelu","typeSnippet","component","activationFnSnippet","_hasPreluActivationWeights","_packed","_coordsLength","biasActivationSnippet","createConv2DMatMulProgramInfo","dimAOuter","dimBOuter","dimInner","sequentialAccessByThreads","isChannelsLast","inChannels","outWidth","outHeight","isVec4","dispatchX","dispatchY","workGroupSize","elementsPerThread","dispatch","innerElementSize","tileAOuter","tileBOuter","tileInner","fitAOuter","fitBOuter","fitInner","elementsSize","declareInputs","declareFunctions","gpuDataType","z","getShaderSource","utilFunctions","addBias","hasPreluActivationWeights","innerElementSizeX","innerElementSizeW","coordASnippet","coordResSnippet","xHeight","xWidth","readXSnippet","getXSnippet","sampleX","sampleW","getWSnippet","resType","aType","bType","conv2dCommonSnippet","makeMatMulPackedVec4Source","makeMatMulPackedSource","workPerThread","workgroupSize","transposeA","splitK","splitedDimInner","isVectorA","tileAWidth","tileAHight","rowPerThreadB","calculateResultSnippet","writeDataToSubASnippet","rowPerThreadA","colPerThreadA","matmulSnippet","readDataFromSubASnippet","createBinaryOpProgramInfoLoader","funcCall","additionalImplementation","outputDataType","outputSize","vectorize","sharedDimension","dimA","shaderHelper","dimsOutput","doBroadcast","typeA","typeB","typeOutput","expressionScalar","expressionVector","vecSize","scalar","vector","assignment","broadcastImpl","outputIndicesHelper","createIndicesHelper","calcOffsetImpl","o2iImpl","iType","indicesVariableDeclaration","o2iCall","singleAssignment","expressionA","expressionB","mainStart","guardAgainstOutOfBoundsWorkgroupSizes","createBinaryOpProgramShader","createBinaryOpProgramInfo","WORKGROUP_SIZE","o2iSnippet","varOffset","varIndices","i2oImpl","i2oExpression","isPtr","sizeInCode","workgroupSizeX","workgroupSizeY","workgroupSizeZ","is1DimensionDispatch","paramList","globalIdxDefinition","createShaderHelper","ShaderHelperImpl","createGroupedConvProgramInfoLoader","squeezeOutputShapeFunction","getActicationSnippet","inputStorageBuffersDeclarations","xIndicesHelper","wIndicesHelper","createGroupedConvProgramInfo","weightTransposeAttribute","auto_pad","kernel_shape","wIsConst","w_is_const","conv1d","inputChannels","weightHeight","weightWidth","transposedWeight","customData","wT","convInputs","createConv2DMatMulProgramInfoLoader","createConv2DMatMulProgramMetadata","activation_params","calculateAlpha","m","broadcastM","broadcastN","offsetC","inputShapeAsChannelFirst","outputShapeAsChannelFirst","dimIdxW","dimIdxH","parsePoolCommonAttributes","ceil_mode","count_include_pad","globalPoolAttributes","storage_order","permAttr","inputIndicesHelper","permFunctionBody","datasize","expression","createElementwiseProgramShader","writeTimestamp","setPipeline","computePipeline","entries","binding","resource","bindGroup","createBindGroup","getBindGroupLayout","setBindGroup","dispatchWorkgroups","QUERY_RESOLVE","resolveQuerySet","mappedData","startTimeU64","endTimeU64","profilingTimeBase","normalizedDispatchGroupSize","code","shaderModule","createShaderModule","createComputePipeline","entryPoint","limitPerDimension","dispatchAverage","cbrt","iterateExtraOptions","prefix","seen","proxyWorker","initWasmCallbacks","initOrtCallbacks","isProxy","initializing","createSessionAllocateCallbacks","createSessionFinalizeCallbacks","createSessionCallbacks","releaseSessionCallbacks","runCallbacks","endProfilingCallbacks","ensureWorker","onProxyWorkerMessage","out","scriptSrc","currentScript","wasmPaths","substr","lastIndexOf","terminate","onmessage","in","postMessage","initializeWebAssembly","initializeRuntime","core","initRuntime","createSessionAllocate","createSessionFinalize","modeldata","createSession","releaseSession","sessionId","inputIndices","extractTransferableBuffers","setRunOptions","getInstance","runOptionsHandle","allocs","runOptions","logSeverityLevel","logVerbosityLevel","tagDataOffset","tag","allocWasmString","_OrtCreateRunOptions","extra","WeakSet","keyDataOffset","valueDataOffset","_OrtAddRunConfigEntry","_OrtReleaseRunOptions","_free","runtimeInitialized","path","modelData","inputArray","kvp","setSessionOptions","sessionOptionsHandle","sessionOptions","use_ort_model_bytes_directly","ep","enableMemPattern","appendDefaultOptions","graphOptimizationLevel","getGraphOptimzationLevel","executionMode","getExecutionMode","logIdDataOffset","logId","optimizedModelFilePathOffset","optimizedModelFilePath","_OrtCreateSessionOptions","enableCpuMemArena","enableProfiling","epName","webnnOptions","deviceType","_OrtAddSessionConfigEntry","powerPreference","epNameDataOffset","_OrtAppendExecutionProvider","setExecutionProviders","_OrtReleaseSessionOptions","dataLength","lengthBytesUTF8","_malloc","stringToUTF8","tensorDataTypeEnumToString","dateType","tensorTypeToTypedArrayConstructor","loggingLevel","errorCode","_OrtInit","activeSessions","modelDataOffset","sessionHandle","_OrtCreateSession","_OrtGetInputCount","outputCount","_OrtGetOutputCount","inputNamesUTF8Encoded","outputNamesUTF8Encoded","_OrtGetInputName","UTF8ToString","_OrtGetOutputName","_OrtFree","_OrtReleaseSession","runOptionsAllocs","inputValues","inputAllocs","dataByteLength","HEAP32","_OrtCreateTensor","beforeRunStack","inputValuesOffset","inputNamesOffset","outputValuesOffset","outputNamesOffset","inputValuesIndex","inputNamesIndex","outputValuesIndex","outputNamesIndex","_OrtRun","runPromise","jsepRunPromise","beforeGetTensorDataStack","tensorDataOffset","_OrtGetTensorData","tensorDataIndex","maxBytesToRead","_OrtReleaseTensor","profileFileName","_OrtEndProfiling","buffers","ortWasmFactory","ortWasmFactoryThreaded","flags","timeout","useThreads","MessageChannel","port1","WebAssembly","validate","isMultiThreadSupported","useSimd","isSimdSupported","wasmPrefixOverride","wasmFileName","getWasmFileName","wasmPathOverride","isTimeout","tasks","locateFile","fileName","scriptDirectory","Blob","URL","createObjectURL","mainScriptUrlOrBlob","scriptSourceCode","what","race","PThread","terminateAllThreads","Worker_fn","workerConstructor","workerOptions","url","globalScope","window","blob","BlobBuilder","WebKitBlobBuilder","MozBlobBuilder","MSBlobBuilder","append","getBlob","webkitURL","objectURL","worker","revokeObjectURL","encodeURIComponent","_scriptDir","P","F","H","Y","u","ready","l","h","importScripts","process","versions","ENVIRONMENT_IS_PTHREAD","O","dirname","__dirname","startsWith","normalize","readFileSync","thisProgram","argv","exitCode","inspect","Worker","href","XMLHttpRequest","open","send","responseText","responseType","response","onerror","T","warn","writeSync","S","print","printErr","quit","wasmBinary","E","noExitRuntime","Z","I","U","HEAP16","HEAPU16","HEAPF32","HEAPF64","W","INITIAL_MEMORY","wasmMemory","Memory","initial","maximum","shared","L","q","preRun","J","V","onAbort","RuntimeError","Q","$","ee","credentials","ok","catch","instantiate","ne","te","re","le","Ha","hb","ae","Ka","Ja","cmd","start_routine","ib","$a","pthread_ptr","unref","ob","oe","ie","String","fromCharCode","ue","se","ze","jb","onExit","fe","me","ce","Na","Va","Ra","cb","rb","receiveObjectTransfer","gb","threadInitTLS","Ua","setExitStatus","Ta","tb","dn","ab","targetThread","cn","sb","transferList","He","thread","loaded","threadId","text","alert","filename","lineno","on","handlers","urlOrBlob","wasmModule","eb","Za","pe","establishStackSpace","bn","wn","de","he","Qa","Ya","Xa","Wa","ge","ye","qb","be","ve","we","charCodeAt","_e","Oe","Te","Me","Se","Ae","Re","Ee","De","Ie","xe","Ce","Fe","ke","Atomics","pb","store","yn","gn","Ye","Ue","invokeEntryPoint","__emscripten_thread_mailbox_await","checkMailbox","Pe","We","Le","Ne","getFullYear","getMonth","getDate","je","Ge","Be","ln","arguments","vn","_n","mn","hrtime","timeOrigin","qe","Je","Ke","Ve","USER","LOGNAME","PATH","PWD","HOME","LANG","languages","Xe","Ze","Qe","$e","en","nn","tn","rn","crypto","getRandomValues","randomFillSync","randomBytes","an","un","getDay","La","Ma","getTime","setDate","setMonth","setFullYear","mb","lb","Oa","Sa","Pa","Ia","ub","kb","nb","includes","sn","fn","pn","ref","getUTCSeconds","getUTCMinutes","getUTCHours","getUTCDate","getUTCMonth","getUTCFullYear","getUTCDay","UTC","getSeconds","getMinutes","getHours","getTimezoneOffset","setTime","getYear","toTimeString","apply","grow","asm","va","wa","monitorRunDependencies","clearInterval","instantiateWasm","instantiateStreaming","instance","aa","ba","da","ea","fa","ga","ha","ia","ja","ka","la","ma","na","oa","pa","qa","ra","_pthread_self","sa","ta","ua","__emscripten_tls_init","__emscripten_thread_init","xa","za","Aa","__emscripten_thread_crashed","ya","hn","__emscripten_thread_exit","Ba","__emscripten_check_mailbox","Ca","Da","Ea","Fa","Ga","On","calledRun","onRuntimeInitialized","postRun","startWorker","setStatus","keepRuntimeAlive","ExitStatus","preInit","ortWasm","readyPromiseResolve","readyPromiseReject","Module","read_","readAsync","readBinary","moduleOverrides","ENVIRONMENT_IS_WEB","ENVIRONMENT_IS_WORKER","ENVIRONMENT_IS_NODE","fs","nodePath","binary","isFileURI","ret","xhr","abort","HEAP64","HEAPU64","wasmTable","ABORT","updateMemoryViews","__ATPRERUN__","__ATINIT__","__ATPOSTRUN__","runDependencies","runDependencyWatcher","dependenciesFulfilled","wasmBinaryFile","dataURIPrefix","isDataURI","getBinary","file","instantiateArrayBuffer","binaryFile","imports","receiver","getBinaryPromise","callRuntimeCallbacks","callbacks","exceptionCaught","uncaughtExceptionCount","exceptionLast","ExceptionInfo","excPtr","set_type","get_type","set_destructor","destructor","get_destructor","set_caught","caught","get_caught","set_rethrown","rethrown","get_rethrown","set_adjusted_ptr","adjustedPtr","get_adjusted_ptr","get_exception_ptr","___cxa_is_pointer_type","adjusted","___cxa_find_matching_catch","thrown","setTempRet0","thrownType","caughtType","adjusted_ptr_addr","___cxa_can_catch","___cxa_find_matching_catch_2","___cxa_find_matching_catch_3","___cxa_find_matching_catch_4","___cxa_find_matching_catch_5","dlopenMissingError","UTF8Decoder","UTF8ArrayToString","heapOrArray","endIdx","endPtr","u0","u1","u2","ch","SYSCALLS","varargs","getStr","stringToUTF8Array","heap","outIdx","maxBytesToWrite","startIdx","outPtr","embindRepr","embind_charCodes","readLatin1String","awaitingDependencies","registeredTypes","typeDependencies","char_0","char_9","makeLegalFunctionName","createNamedFunction","extendError","baseErrorType","errorName","errorClass","prototype","BindingError","throwBindingError","registerType","rawType","registeredInstance","ignoreDuplicateRegistrations","integerReadValueFromPointer","signed","pointer","getShiftFromSize","emval_handles","allocated","freelist","handle","__emval_decref","reserved","refcount","Emval","simpleReadValueFromPointer","floatReadValueFromPointer","UTF16Decoder","UTF16ToString","maxIdx","codeUnit","stringToUTF16","startPtr","numCharsToWrite","lengthBytesUTF16","UTF32ToString","utf32","stringToUTF32","lengthBytesUTF32","requireRegisteredType","humanName","rv","___getTypeName","emval_symbols","getStringOrSymbol","address","symbol","emval_methodCallers","emval_get_global","globalThis","Function","emval_registeredMethods","emval_newers","readI53FromI64","isLeapYear","year","_emscripten_get_now","MONTH_DAYS_LEAP_CUMULATIVE","MONTH_DAYS_REGULAR_CUMULATIVE","ydayFromDate","date","stringToNewUTF8","emscripten_realloc_buffer","ENV","getEnvStrings","printCharBuffers","MONTH_DAYS_LEAP","MONTH_DAYS_REGULAR","_strftime","maxsize","tm","tm_zone","tm_sec","tm_min","tm_hour","tm_mday","tm_mon","tm_year","tm_wday","tm_yday","tm_isdst","tm_gmtoff","pattern","EXPANSION_RULES_1","WEEKDAYS","MONTHS","leadingSomething","digits","character","leadingNulls","compareByDay","date1","date2","sgn","compare","getFirstWeekStartDate","janFourth","getWeekBasedYear","thisDate","days","newDate","leap","currentMonth","daysInCurrentMonth","addDays","janFourthThisYear","janFourthNextYear","firstWeekStartThisYear","firstWeekStartNextYear","EXPANSION_RULES_2","twelveHour","arraySum","jan1","dec31","off","ahead","stringy","u8array","wasmTableMirror","getWasmTableEntry","funcPtr","codes","embind_init_charCodes","wasmImports","___cxa_increment_exception_refcount","_setThrew","___cxa_decrement_exception_refcount","fd","dirp","dirfd","bufsize","primitiveType","minRange","maxRange","isUnsignedType","destructors","destructorFunction","trueValue","falseValue","wt","fromWireType","bitshift","dataTypeIndex","TA","decodeMemoryView","stdStringIsUTF8","payload","decodeStartPtr","currentBytePtr","stringSegment","valueIsOfTypeString","Uint8ClampedArray","base","charCode","charSize","decodeString","encodeString","getHeap","lengthBytesUTF","HEAP","isVoid","returnType","destructorsRef","rd","caller","methodName","emval_allocateDestructors","first","second","argCount","argTypes","types","emval_lookupTypes","retType","signatureName","returnId","argsList","functionBody","argumentList","dummy","newFunc","newer","craftEmvalAllocator","del","runDestructors","time","tmPtr","yday","summerOffset","winterOffset","guessedOffset","dstOffset","nonDstOffset","trueOffset","prot","addr","timezone","daylight","tzname","currentYear","winter","summer","stdTimezoneOffset","extractZone","winterName","summerName","winterNamePtr","summerNamePtr","num","copyWithin","requestedSize","oldSize","maxHeapSize","cutDown","overGrownHeapSize","__environ","environ_buf","bufSize","string","stringToAscii","penviron_count","penviron_buf_size","iov","iovcnt","pnum","whence","stream","curr","a1","sp","a2","a3","a4","a5","a6","a7","a8","a9","a10","a11","a12","a13","a14","a15","a16","a17","a18","a19","a20","a21","a22","a23","a24","a25","loc","callback","receiveInstance","removeRunDependency","createWasm","doRun","runCaller","pending","base64","b64","s64","parts","chunk","invalidEncoding","test","EventEmitter","_listeners","evt","listeners","emit","f32","f8b","writeFloat_f32_cpy","writeFloat_f32_rev","readFloat_f32_cpy","readFloat_f32_rev","writeFloatLE","writeFloatBE","readFloatLE","readFloatBE","writeFloat_ieee754","writeUint","sign","round","exponent","LN2","readFloat_ieee754","readUint","uint","mantissa","NaN","Infinity","writeUintLE","writeUintBE","readUintLE","readUintBE","f64","writeDouble_f64_cpy","writeDouble_f64_rev","readDouble_f64_cpy","readDouble_f64_rev","writeDoubleLE","writeDoubleBE","readDoubleLE","readDoubleBE","writeDouble_ieee754","off0","off1","readDouble_ieee754","lo","hi","inquire","moduleName","mod","eval","SIZE","MAX","slab","utf8","read","write","c1","c2","__esModule","EMPTY","isGuid","validator","gen","createEmpty","raw","random","equals","other","isEmpty","toJSON","Instance","__isLong__","INT_CACHE","UINT_CACHE","fromInt","cachedObj","fromNumber","UZERO","ZERO","TWO_PWR_64_DBL","MAX_UNSIGNED_VALUE","TWO_PWR_63_DBL","MIN_VALUE","MAX_VALUE","TWO_PWR_32_DBL","lowBits","highBits","pow_dbl","fromString","radix","radixToPower","power","TWO_PWR_16_DBL","TWO_PWR_24","ONE","UONE","NEG_ONE","LongPrototype","toInt","isZero","isNegative","eq","radixLong","rem1","rem","remDiv","getHighBits","getHighBitsUnsigned","getLowBits","getLowBitsUnsigned","getNumBitsAbs","bit","eqz","isPositive","isOdd","isEven","notEquals","neq","comp","lt","lessThanOrEqual","lte","greaterThan","gt","gte","thisNeg","otherNeg","negate","addend","a48","a32","a00","b48","b32","b16","c48","c32","c16","c00","subtract","subtrahend","multiply","multiplier","get_high","b00","divide","divisor","approx","div_u","div_s","toUnsigned","shru","shr","shl","log2","delta","approxRes","approxRem","modulo","rem_u","rem_s","shiftLeft","numBits","shiftRight","shiftRightUnsigned","shr_u","toSigned","toBytes","toBytesLE","toBytesBE","fromBytes","fromBytesLE","fromBytesBE","valuesById","$protobuf","$Reader","Reader","$Writer","Writer","$util","util","$root","roots","Version","properties","refAttrName","newBuffer","emptyArray","writer","uint32","float","int64","fork","ldelim","int32","encodeDelimited","reader","end2","skipType","decodeDelimited","verify","fromObject","object","LongBits","toObject","arrays","defaults","long","longs","enums","json","isFinite","toJSONOptions","ValueInfoProto","TypeProto","metadataProps","OperatorSetIdProto","StringStringEntryProto","TensorAnnotation","quantParameterTensorNames","tensorName","quantizationAnnotation","externalData","segment","dataLocation","Segment","double","uint64","DataLocation","TensorShapeProto","$oneOfFields","oneOfGetter","oneOfSetter","oneofs","protobuf","configure","_configure","BufferWriter","BufferReader","rpc","indexOutOfRange","writeLength","create_array","Buffer","isBuffer","readLongVarint","bits","readFixed32_end","readFixed64","_slice","sint32","bool","fixed32","sfixed32","skip","wireType","BufferReader_","merge","sint64","zzDecode","fixed64","sfixed64","utf8Slice","Service","rpcImpl","requestDelimited","responseDelimited","Boolean","rpcCall","method","requestCtor","responseCtor","request","asPromise","endedByRPC","zero","zzEncode","zeroHash","toLong","fromHash","hash","toHash","mask","part0","part1","part2","ifNotSet","newError","CustomError","captureStackTrace","isNode","global","freeze","emptyObject","isObject","isset","isSet","prop","utf8Write","_Buffer_from","_Buffer_allocUnsafe","sizeOrArray","dcodeIO","key2Re","key32Re","key64Re","longToHash","longFromHash","lcFirst","toLowerCase","ProtocolError","fieldNames","fieldMap","encoding","allocUnsafe","Op","noop","State","states","writeByte","VarintOp","writeVarint64","writeFixed32","_push","writeBytes","BufferWriter_","writeStringBuffer","writeBytesBuffer","copy","Offset","Table","SIZEOF_SHORT","SIZEOF_INT","FILE_IDENTIFIER_LENGTH","Encoding","UTF8_BYTES","UTF16_STRING","float32","float64","toFloat64","Builder","opt_initial_size","initial_size","space","minalign","vtable","vtable_in_use","isNested","object_start","vtables","vector_num_elems","force_defaults","clear","capacity","forceDefaults","asUint8Array","additional_bytes","align_size","old_buf_size","growByteBuffer","byte_size","writeInt8","writeInt16","writeInt64","writeFloat32","writeFloat64","addInt16","addFloat64","voffset","slot","addFieldInt16","addFieldFloat64","addFieldStruct","nested","notNested","new_buf_size","nbb","numfields","vtableloc","trimmed_size","existing_vtable","vt1","outer_loop","vt2","readInt16","root_table","opt_file_identifier","opt_size_prefix","size_prefix","file_identifier","finishSizePrefixed","table","field","table_start","vtable_start","elem_size","num_elems","alignment","createString","codePoint","bytes_","position_","readUint16","readFloat64","writeUint8","writeUint16","writeUint32","writeUint64","getBufferIdentifier","vtable_offset","opt_encoding","ident","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","getter","definition","Symbol","toStringTag","__webpack_exports__"],"sourceRoot":""}